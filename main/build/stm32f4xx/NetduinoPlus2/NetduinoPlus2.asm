
../../../../build/stm32f4xx/NetduinoPlus2/NetduinoPlus2.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20020000 	andcs	r0, r2, r0
 8000004:	08003ddd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp}
 8000008:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800000c:	08003c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, ip, sp}
 8000010:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000014:	08003ce5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, fp, ip, sp}
 8000018:	08003d5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, fp, ip, sp}
	...
 800002c:	08001165 	stmdaeq	r0, {r0, r2, r5, r6, r8, ip}
 8000030:	0800117d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, ip}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08003df5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800003c:	080036ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, ip, sp}
 8000040:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000044:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000048:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800004c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000050:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000054:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000058:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800005c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000060:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000064:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000068:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800006c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000070:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000074:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000078:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800007c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000080:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000084:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000088:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800008c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000090:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000094:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000098:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800009c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000a0:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000a4:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000a8:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000ac:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000b0:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000b4:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000b8:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000bc:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000c0:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000c4:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000c8:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000cc:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000d0:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000d4:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000d8:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000dc:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000e0:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000e4:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000e8:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000ec:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000f0:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000f4:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000f8:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80000fc:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000100:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000104:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000108:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800010c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000110:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000114:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000118:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800011c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000120:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000124:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000128:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800012c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000130:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
	...
 800013c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000140:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000144:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000148:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800014c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000150:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000154:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000158:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800015c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000160:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000164:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000168:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800016c:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000170:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000174:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
	...
 8000180:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 8000184:	08003df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, sp}

Disassembly of section .text:

08000188 <deregister_tm_clones>:
 8000188:	4803      	ldr	r0, [pc, #12]	; (8000198 <deregister_tm_clones+0x10>)
 800018a:	4b04      	ldr	r3, [pc, #16]	; (800019c <deregister_tm_clones+0x14>)
 800018c:	4283      	cmp	r3, r0
 800018e:	d002      	beq.n	8000196 <deregister_tm_clones+0xe>
 8000190:	4b03      	ldr	r3, [pc, #12]	; (80001a0 <deregister_tm_clones+0x18>)
 8000192:	b103      	cbz	r3, 8000196 <deregister_tm_clones+0xe>
 8000194:	4718      	bx	r3
 8000196:	4770      	bx	lr
 8000198:	20000520 	andcs	r0, r0, r0, lsr #10
 800019c:	20000520 	andcs	r0, r0, r0, lsr #10
 80001a0:	00000000 	andeq	r0, r0, r0

080001a4 <register_tm_clones>:
 80001a4:	4805      	ldr	r0, [pc, #20]	; (80001bc <register_tm_clones+0x18>)
 80001a6:	4906      	ldr	r1, [pc, #24]	; (80001c0 <register_tm_clones+0x1c>)
 80001a8:	1a09      	subs	r1, r1, r0
 80001aa:	1089      	asrs	r1, r1, #2
 80001ac:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80001b0:	1049      	asrs	r1, r1, #1
 80001b2:	d002      	beq.n	80001ba <register_tm_clones+0x16>
 80001b4:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <register_tm_clones+0x20>)
 80001b6:	b103      	cbz	r3, 80001ba <register_tm_clones+0x16>
 80001b8:	4718      	bx	r3
 80001ba:	4770      	bx	lr
 80001bc:	20000520 	andcs	r0, r0, r0, lsr #10
 80001c0:	20000520 	andcs	r0, r0, r0, lsr #10
 80001c4:	00000000 	andeq	r0, r0, r0

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c06      	ldr	r4, [pc, #24]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b943      	cbnz	r3, 80001e2 <__do_global_dtors_aux+0x1a>
 80001d0:	f7ff ffda 	bl	8000188 <deregister_tm_clones>
 80001d4:	4b04      	ldr	r3, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	b113      	cbz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d8:	4804      	ldr	r0, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x24>)
 80001da:	f3af 8000 	nop.w
 80001de:	2301      	movs	r3, #1
 80001e0:	7023      	strb	r3, [r4, #0]
 80001e2:	bd10      	pop	{r4, pc}
 80001e4:	20000520 	andcs	r0, r0, r0, lsr #10
 80001e8:	00000000 	andeq	r0, r0, r0
 80001ec:	08003e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp, ip, sp}

080001f0 <frame_dummy>:
 80001f0:	b508      	push	{r3, lr}
 80001f2:	4b04      	ldr	r3, [pc, #16]	; (8000204 <frame_dummy+0x14>)
 80001f4:	b11b      	cbz	r3, 80001fe <frame_dummy+0xe>
 80001f6:	4904      	ldr	r1, [pc, #16]	; (8000208 <frame_dummy+0x18>)
 80001f8:	4804      	ldr	r0, [pc, #16]	; (800020c <frame_dummy+0x1c>)
 80001fa:	f3af 8000 	nop.w
 80001fe:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000202:	e7cf      	b.n	80001a4 <register_tm_clones>
 8000204:	00000000 	andeq	r0, r0, r0
 8000208:	20000524 	andcs	r0, r0, r4, lsr #10
 800020c:	08003e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp, ip, sp}

08000210 <__aeabi_drsub>:
 8000210:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000214:	e002      	b.n	800021c <__adddf3>
 8000216:	bf00      	nop

08000218 <__aeabi_dsub>:
 8000218:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800021c <__adddf3>:
 800021c:	b530      	push	{r4, r5, lr}
 800021e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000222:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000226:	ea94 0f05 	teq	r4, r5
 800022a:	bf08      	it	eq
 800022c:	ea90 0f02 	teqeq	r0, r2
 8000230:	bf1f      	itttt	ne
 8000232:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000236:	ea55 0c02 	orrsne.w	ip, r5, r2
 800023a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800023e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000242:	f000 80e2 	beq.w	800040a <__adddf3+0x1ee>
 8000246:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800024a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800024e:	bfb8      	it	lt
 8000250:	426d      	neglt	r5, r5
 8000252:	dd0c      	ble.n	800026e <__adddf3+0x52>
 8000254:	442c      	add	r4, r5
 8000256:	ea80 0202 	eor.w	r2, r0, r2
 800025a:	ea81 0303 	eor.w	r3, r1, r3
 800025e:	ea82 0000 	eor.w	r0, r2, r0
 8000262:	ea83 0101 	eor.w	r1, r3, r1
 8000266:	ea80 0202 	eor.w	r2, r0, r2
 800026a:	ea81 0303 	eor.w	r3, r1, r3
 800026e:	2d36      	cmp	r5, #54	; 0x36
 8000270:	bf88      	it	hi
 8000272:	bd30      	pophi	{r4, r5, pc}
 8000274:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000278:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800027c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000280:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000284:	d002      	beq.n	800028c <__adddf3+0x70>
 8000286:	4240      	negs	r0, r0
 8000288:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800028c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000290:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000294:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000298:	d002      	beq.n	80002a0 <__adddf3+0x84>
 800029a:	4252      	negs	r2, r2
 800029c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002a0:	ea94 0f05 	teq	r4, r5
 80002a4:	f000 80a7 	beq.w	80003f6 <__adddf3+0x1da>
 80002a8:	f1a4 0401 	sub.w	r4, r4, #1
 80002ac:	f1d5 0e20 	rsbs	lr, r5, #32
 80002b0:	db0d      	blt.n	80002ce <__adddf3+0xb2>
 80002b2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002b6:	fa22 f205 	lsr.w	r2, r2, r5
 80002ba:	1880      	adds	r0, r0, r2
 80002bc:	f141 0100 	adc.w	r1, r1, #0
 80002c0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002c4:	1880      	adds	r0, r0, r2
 80002c6:	fa43 f305 	asr.w	r3, r3, r5
 80002ca:	4159      	adcs	r1, r3
 80002cc:	e00e      	b.n	80002ec <__adddf3+0xd0>
 80002ce:	f1a5 0520 	sub.w	r5, r5, #32
 80002d2:	f10e 0e20 	add.w	lr, lr, #32
 80002d6:	2a01      	cmp	r2, #1
 80002d8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002dc:	bf28      	it	cs
 80002de:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002e2:	fa43 f305 	asr.w	r3, r3, r5
 80002e6:	18c0      	adds	r0, r0, r3
 80002e8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80002f0:	d507      	bpl.n	8000302 <__adddf3+0xe6>
 80002f2:	f04f 0e00 	mov.w	lr, #0
 80002f6:	f1dc 0c00 	rsbs	ip, ip, #0
 80002fa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002fe:	eb6e 0101 	sbc.w	r1, lr, r1
 8000302:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000306:	d31b      	bcc.n	8000340 <__adddf3+0x124>
 8000308:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800030c:	d30c      	bcc.n	8000328 <__adddf3+0x10c>
 800030e:	0849      	lsrs	r1, r1, #1
 8000310:	ea5f 0030 	movs.w	r0, r0, rrx
 8000314:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000318:	f104 0401 	add.w	r4, r4, #1
 800031c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000320:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000324:	f080 809a 	bcs.w	800045c <__adddf3+0x240>
 8000328:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800032c:	bf08      	it	eq
 800032e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000332:	f150 0000 	adcs.w	r0, r0, #0
 8000336:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800033a:	ea41 0105 	orr.w	r1, r1, r5
 800033e:	bd30      	pop	{r4, r5, pc}
 8000340:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000344:	4140      	adcs	r0, r0
 8000346:	eb41 0101 	adc.w	r1, r1, r1
 800034a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800034e:	f1a4 0401 	sub.w	r4, r4, #1
 8000352:	d1e9      	bne.n	8000328 <__adddf3+0x10c>
 8000354:	f091 0f00 	teq	r1, #0
 8000358:	bf04      	itt	eq
 800035a:	4601      	moveq	r1, r0
 800035c:	2000      	moveq	r0, #0
 800035e:	fab1 f381 	clz	r3, r1
 8000362:	bf08      	it	eq
 8000364:	3320      	addeq	r3, #32
 8000366:	f1a3 030b 	sub.w	r3, r3, #11
 800036a:	f1b3 0220 	subs.w	r2, r3, #32
 800036e:	da0c      	bge.n	800038a <__adddf3+0x16e>
 8000370:	320c      	adds	r2, #12
 8000372:	dd08      	ble.n	8000386 <__adddf3+0x16a>
 8000374:	f102 0c14 	add.w	ip, r2, #20
 8000378:	f1c2 020c 	rsb	r2, r2, #12
 800037c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000380:	fa21 f102 	lsr.w	r1, r1, r2
 8000384:	e00c      	b.n	80003a0 <__adddf3+0x184>
 8000386:	f102 0214 	add.w	r2, r2, #20
 800038a:	bfd8      	it	le
 800038c:	f1c2 0c20 	rsble	ip, r2, #32
 8000390:	fa01 f102 	lsl.w	r1, r1, r2
 8000394:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000398:	bfdc      	itt	le
 800039a:	ea41 010c 	orrle.w	r1, r1, ip
 800039e:	4090      	lslle	r0, r2
 80003a0:	1ae4      	subs	r4, r4, r3
 80003a2:	bfa2      	ittt	ge
 80003a4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a8:	4329      	orrge	r1, r5
 80003aa:	bd30      	popge	{r4, r5, pc}
 80003ac:	ea6f 0404 	mvn.w	r4, r4
 80003b0:	3c1f      	subs	r4, #31
 80003b2:	da1c      	bge.n	80003ee <__adddf3+0x1d2>
 80003b4:	340c      	adds	r4, #12
 80003b6:	dc0e      	bgt.n	80003d6 <__adddf3+0x1ba>
 80003b8:	f104 0414 	add.w	r4, r4, #20
 80003bc:	f1c4 0220 	rsb	r2, r4, #32
 80003c0:	fa20 f004 	lsr.w	r0, r0, r4
 80003c4:	fa01 f302 	lsl.w	r3, r1, r2
 80003c8:	ea40 0003 	orr.w	r0, r0, r3
 80003cc:	fa21 f304 	lsr.w	r3, r1, r4
 80003d0:	ea45 0103 	orr.w	r1, r5, r3
 80003d4:	bd30      	pop	{r4, r5, pc}
 80003d6:	f1c4 040c 	rsb	r4, r4, #12
 80003da:	f1c4 0220 	rsb	r2, r4, #32
 80003de:	fa20 f002 	lsr.w	r0, r0, r2
 80003e2:	fa01 f304 	lsl.w	r3, r1, r4
 80003e6:	ea40 0003 	orr.w	r0, r0, r3
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	fa21 f004 	lsr.w	r0, r1, r4
 80003f2:	4629      	mov	r1, r5
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	f094 0f00 	teq	r4, #0
 80003fa:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80003fe:	bf06      	itte	eq
 8000400:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000404:	3401      	addeq	r4, #1
 8000406:	3d01      	subne	r5, #1
 8000408:	e74e      	b.n	80002a8 <__adddf3+0x8c>
 800040a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800040e:	bf18      	it	ne
 8000410:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000414:	d029      	beq.n	800046a <__adddf3+0x24e>
 8000416:	ea94 0f05 	teq	r4, r5
 800041a:	bf08      	it	eq
 800041c:	ea90 0f02 	teqeq	r0, r2
 8000420:	d005      	beq.n	800042e <__adddf3+0x212>
 8000422:	ea54 0c00 	orrs.w	ip, r4, r0
 8000426:	bf04      	itt	eq
 8000428:	4619      	moveq	r1, r3
 800042a:	4610      	moveq	r0, r2
 800042c:	bd30      	pop	{r4, r5, pc}
 800042e:	ea91 0f03 	teq	r1, r3
 8000432:	bf1e      	ittt	ne
 8000434:	2100      	movne	r1, #0
 8000436:	2000      	movne	r0, #0
 8000438:	bd30      	popne	{r4, r5, pc}
 800043a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800043e:	d105      	bne.n	800044c <__adddf3+0x230>
 8000440:	0040      	lsls	r0, r0, #1
 8000442:	4149      	adcs	r1, r1
 8000444:	bf28      	it	cs
 8000446:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800044a:	bd30      	pop	{r4, r5, pc}
 800044c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000450:	bf3c      	itt	cc
 8000452:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000456:	bd30      	popcc	{r4, r5, pc}
 8000458:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800045c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000460:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000464:	f04f 0000 	mov.w	r0, #0
 8000468:	bd30      	pop	{r4, r5, pc}
 800046a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800046e:	bf1a      	itte	ne
 8000470:	4619      	movne	r1, r3
 8000472:	4610      	movne	r0, r2
 8000474:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000478:	bf1c      	itt	ne
 800047a:	460b      	movne	r3, r1
 800047c:	4602      	movne	r2, r0
 800047e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000482:	bf06      	itte	eq
 8000484:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000488:	ea91 0f03 	teqeq	r1, r3
 800048c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000490:	bd30      	pop	{r4, r5, pc}
 8000492:	bf00      	nop

08000494 <__aeabi_ui2d>:
 8000494:	f090 0f00 	teq	r0, #0
 8000498:	bf04      	itt	eq
 800049a:	2100      	moveq	r1, #0
 800049c:	4770      	bxeq	lr
 800049e:	b530      	push	{r4, r5, lr}
 80004a0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004a4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004a8:	f04f 0500 	mov.w	r5, #0
 80004ac:	f04f 0100 	mov.w	r1, #0
 80004b0:	e750      	b.n	8000354 <__adddf3+0x138>
 80004b2:	bf00      	nop

080004b4 <__aeabi_i2d>:
 80004b4:	f090 0f00 	teq	r0, #0
 80004b8:	bf04      	itt	eq
 80004ba:	2100      	moveq	r1, #0
 80004bc:	4770      	bxeq	lr
 80004be:	b530      	push	{r4, r5, lr}
 80004c0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004c4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004c8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004cc:	bf48      	it	mi
 80004ce:	4240      	negmi	r0, r0
 80004d0:	f04f 0100 	mov.w	r1, #0
 80004d4:	e73e      	b.n	8000354 <__adddf3+0x138>
 80004d6:	bf00      	nop

080004d8 <__aeabi_f2d>:
 80004d8:	0042      	lsls	r2, r0, #1
 80004da:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004de:	ea4f 0131 	mov.w	r1, r1, rrx
 80004e2:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004e6:	bf1f      	itttt	ne
 80004e8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80004ec:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80004f0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80004f4:	4770      	bxne	lr
 80004f6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80004fa:	bf08      	it	eq
 80004fc:	4770      	bxeq	lr
 80004fe:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000502:	bf04      	itt	eq
 8000504:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000508:	4770      	bxeq	lr
 800050a:	b530      	push	{r4, r5, lr}
 800050c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000510:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000514:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000518:	e71c      	b.n	8000354 <__adddf3+0x138>
 800051a:	bf00      	nop

0800051c <__aeabi_ul2d>:
 800051c:	ea50 0201 	orrs.w	r2, r0, r1
 8000520:	bf08      	it	eq
 8000522:	4770      	bxeq	lr
 8000524:	b530      	push	{r4, r5, lr}
 8000526:	f04f 0500 	mov.w	r5, #0
 800052a:	e00a      	b.n	8000542 <__aeabi_l2d+0x16>

0800052c <__aeabi_l2d>:
 800052c:	ea50 0201 	orrs.w	r2, r0, r1
 8000530:	bf08      	it	eq
 8000532:	4770      	bxeq	lr
 8000534:	b530      	push	{r4, r5, lr}
 8000536:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800053a:	d502      	bpl.n	8000542 <__aeabi_l2d+0x16>
 800053c:	4240      	negs	r0, r0
 800053e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000542:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000546:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800054a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800054e:	f43f aed8 	beq.w	8000302 <__adddf3+0xe6>
 8000552:	f04f 0203 	mov.w	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000562:	bf18      	it	ne
 8000564:	3203      	addne	r2, #3
 8000566:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800056a:	f1c2 0320 	rsb	r3, r2, #32
 800056e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000572:	fa20 f002 	lsr.w	r0, r0, r2
 8000576:	fa01 fe03 	lsl.w	lr, r1, r3
 800057a:	ea40 000e 	orr.w	r0, r0, lr
 800057e:	fa21 f102 	lsr.w	r1, r1, r2
 8000582:	4414      	add	r4, r2
 8000584:	e6bd      	b.n	8000302 <__adddf3+0xe6>
 8000586:	bf00      	nop

08000588 <__aeabi_dmul>:
 8000588:	b570      	push	{r4, r5, r6, lr}
 800058a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800058e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000592:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000596:	bf1d      	ittte	ne
 8000598:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800059c:	ea94 0f0c 	teqne	r4, ip
 80005a0:	ea95 0f0c 	teqne	r5, ip
 80005a4:	f000 f8de 	bleq	8000764 <__aeabi_dmul+0x1dc>
 80005a8:	442c      	add	r4, r5
 80005aa:	ea81 0603 	eor.w	r6, r1, r3
 80005ae:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005b2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005b6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005ba:	bf18      	it	ne
 80005bc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005c0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005c4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005c8:	d038      	beq.n	800063c <__aeabi_dmul+0xb4>
 80005ca:	fba0 ce02 	umull	ip, lr, r0, r2
 80005ce:	f04f 0500 	mov.w	r5, #0
 80005d2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005d6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005da:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005de:	f04f 0600 	mov.w	r6, #0
 80005e2:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005e6:	f09c 0f00 	teq	ip, #0
 80005ea:	bf18      	it	ne
 80005ec:	f04e 0e01 	orrne.w	lr, lr, #1
 80005f0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 80005f4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 80005f8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 80005fc:	d204      	bcs.n	8000608 <__aeabi_dmul+0x80>
 80005fe:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000602:	416d      	adcs	r5, r5
 8000604:	eb46 0606 	adc.w	r6, r6, r6
 8000608:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800060c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000610:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000614:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000618:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800061c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000620:	bf88      	it	hi
 8000622:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000626:	d81e      	bhi.n	8000666 <__aeabi_dmul+0xde>
 8000628:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800062c:	bf08      	it	eq
 800062e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000632:	f150 0000 	adcs.w	r0, r0, #0
 8000636:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000640:	ea46 0101 	orr.w	r1, r6, r1
 8000644:	ea40 0002 	orr.w	r0, r0, r2
 8000648:	ea81 0103 	eor.w	r1, r1, r3
 800064c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000650:	bfc2      	ittt	gt
 8000652:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000656:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800065a:	bd70      	popgt	{r4, r5, r6, pc}
 800065c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000660:	f04f 0e00 	mov.w	lr, #0
 8000664:	3c01      	subs	r4, #1
 8000666:	f300 80ab 	bgt.w	80007c0 <__aeabi_dmul+0x238>
 800066a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800066e:	bfde      	ittt	le
 8000670:	2000      	movle	r0, #0
 8000672:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000676:	bd70      	pople	{r4, r5, r6, pc}
 8000678:	f1c4 0400 	rsb	r4, r4, #0
 800067c:	3c20      	subs	r4, #32
 800067e:	da35      	bge.n	80006ec <__aeabi_dmul+0x164>
 8000680:	340c      	adds	r4, #12
 8000682:	dc1b      	bgt.n	80006bc <__aeabi_dmul+0x134>
 8000684:	f104 0414 	add.w	r4, r4, #20
 8000688:	f1c4 0520 	rsb	r5, r4, #32
 800068c:	fa00 f305 	lsl.w	r3, r0, r5
 8000690:	fa20 f004 	lsr.w	r0, r0, r4
 8000694:	fa01 f205 	lsl.w	r2, r1, r5
 8000698:	ea40 0002 	orr.w	r0, r0, r2
 800069c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006a0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a8:	fa21 f604 	lsr.w	r6, r1, r4
 80006ac:	eb42 0106 	adc.w	r1, r2, r6
 80006b0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006b4:	bf08      	it	eq
 80006b6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f1c4 040c 	rsb	r4, r4, #12
 80006c0:	f1c4 0520 	rsb	r5, r4, #32
 80006c4:	fa00 f304 	lsl.w	r3, r0, r4
 80006c8:	fa20 f005 	lsr.w	r0, r0, r5
 80006cc:	fa01 f204 	lsl.w	r2, r1, r4
 80006d0:	ea40 0002 	orr.w	r0, r0, r2
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006dc:	f141 0100 	adc.w	r1, r1, #0
 80006e0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006e4:	bf08      	it	eq
 80006e6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f1c4 0520 	rsb	r5, r4, #32
 80006f0:	fa00 f205 	lsl.w	r2, r0, r5
 80006f4:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f8:	fa20 f304 	lsr.w	r3, r0, r4
 80006fc:	fa01 f205 	lsl.w	r2, r1, r5
 8000700:	ea43 0302 	orr.w	r3, r3, r2
 8000704:	fa21 f004 	lsr.w	r0, r1, r4
 8000708:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800070c:	fa21 f204 	lsr.w	r2, r1, r4
 8000710:	ea20 0002 	bic.w	r0, r0, r2
 8000714:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000718:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800071c:	bf08      	it	eq
 800071e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000722:	bd70      	pop	{r4, r5, r6, pc}
 8000724:	f094 0f00 	teq	r4, #0
 8000728:	d10f      	bne.n	800074a <__aeabi_dmul+0x1c2>
 800072a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800072e:	0040      	lsls	r0, r0, #1
 8000730:	eb41 0101 	adc.w	r1, r1, r1
 8000734:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000738:	bf08      	it	eq
 800073a:	3c01      	subeq	r4, #1
 800073c:	d0f7      	beq.n	800072e <__aeabi_dmul+0x1a6>
 800073e:	ea41 0106 	orr.w	r1, r1, r6
 8000742:	f095 0f00 	teq	r5, #0
 8000746:	bf18      	it	ne
 8000748:	4770      	bxne	lr
 800074a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800074e:	0052      	lsls	r2, r2, #1
 8000750:	eb43 0303 	adc.w	r3, r3, r3
 8000754:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000758:	bf08      	it	eq
 800075a:	3d01      	subeq	r5, #1
 800075c:	d0f7      	beq.n	800074e <__aeabi_dmul+0x1c6>
 800075e:	ea43 0306 	orr.w	r3, r3, r6
 8000762:	4770      	bx	lr
 8000764:	ea94 0f0c 	teq	r4, ip
 8000768:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800076c:	bf18      	it	ne
 800076e:	ea95 0f0c 	teqne	r5, ip
 8000772:	d00c      	beq.n	800078e <__aeabi_dmul+0x206>
 8000774:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000778:	bf18      	it	ne
 800077a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800077e:	d1d1      	bne.n	8000724 <__aeabi_dmul+0x19c>
 8000780:	ea81 0103 	eor.w	r1, r1, r3
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000788:	f04f 0000 	mov.w	r0, #0
 800078c:	bd70      	pop	{r4, r5, r6, pc}
 800078e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000792:	bf06      	itte	eq
 8000794:	4610      	moveq	r0, r2
 8000796:	4619      	moveq	r1, r3
 8000798:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800079c:	d019      	beq.n	80007d2 <__aeabi_dmul+0x24a>
 800079e:	ea94 0f0c 	teq	r4, ip
 80007a2:	d102      	bne.n	80007aa <__aeabi_dmul+0x222>
 80007a4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a8:	d113      	bne.n	80007d2 <__aeabi_dmul+0x24a>
 80007aa:	ea95 0f0c 	teq	r5, ip
 80007ae:	d105      	bne.n	80007bc <__aeabi_dmul+0x234>
 80007b0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007b4:	bf1c      	itt	ne
 80007b6:	4610      	movne	r0, r2
 80007b8:	4619      	movne	r1, r3
 80007ba:	d10a      	bne.n	80007d2 <__aeabi_dmul+0x24a>
 80007bc:	ea81 0103 	eor.w	r1, r1, r3
 80007c0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007c4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007c8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007cc:	f04f 0000 	mov.w	r0, #0
 80007d0:	bd70      	pop	{r4, r5, r6, pc}
 80007d2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007d6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007da:	bd70      	pop	{r4, r5, r6, pc}

080007dc <__aeabi_ddiv>:
 80007dc:	b570      	push	{r4, r5, r6, lr}
 80007de:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007e2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007e6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007ea:	bf1d      	ittte	ne
 80007ec:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007f0:	ea94 0f0c 	teqne	r4, ip
 80007f4:	ea95 0f0c 	teqne	r5, ip
 80007f8:	f000 f8a7 	bleq	800094a <__aeabi_ddiv+0x16e>
 80007fc:	eba4 0405 	sub.w	r4, r4, r5
 8000800:	ea81 0e03 	eor.w	lr, r1, r3
 8000804:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000808:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800080c:	f000 8088 	beq.w	8000920 <__aeabi_ddiv+0x144>
 8000810:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000814:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000818:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800081c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000820:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000824:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000828:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800082c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000830:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000834:	429d      	cmp	r5, r3
 8000836:	bf08      	it	eq
 8000838:	4296      	cmpeq	r6, r2
 800083a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800083e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000842:	d202      	bcs.n	800084a <__aeabi_ddiv+0x6e>
 8000844:	085b      	lsrs	r3, r3, #1
 8000846:	ea4f 0232 	mov.w	r2, r2, rrx
 800084a:	1ab6      	subs	r6, r6, r2
 800084c:	eb65 0503 	sbc.w	r5, r5, r3
 8000850:	085b      	lsrs	r3, r3, #1
 8000852:	ea4f 0232 	mov.w	r2, r2, rrx
 8000856:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800085a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800085e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000862:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000866:	bf22      	ittt	cs
 8000868:	1ab6      	subcs	r6, r6, r2
 800086a:	4675      	movcs	r5, lr
 800086c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000870:	085b      	lsrs	r3, r3, #1
 8000872:	ea4f 0232 	mov.w	r2, r2, rrx
 8000876:	ebb6 0e02 	subs.w	lr, r6, r2
 800087a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800087e:	bf22      	ittt	cs
 8000880:	1ab6      	subcs	r6, r6, r2
 8000882:	4675      	movcs	r5, lr
 8000884:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000888:	085b      	lsrs	r3, r3, #1
 800088a:	ea4f 0232 	mov.w	r2, r2, rrx
 800088e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000892:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000896:	bf22      	ittt	cs
 8000898:	1ab6      	subcs	r6, r6, r2
 800089a:	4675      	movcs	r5, lr
 800089c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008a0:	085b      	lsrs	r3, r3, #1
 80008a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008a6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008aa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ae:	bf22      	ittt	cs
 80008b0:	1ab6      	subcs	r6, r6, r2
 80008b2:	4675      	movcs	r5, lr
 80008b4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008bc:	d018      	beq.n	80008f0 <__aeabi_ddiv+0x114>
 80008be:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008c2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008c6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ca:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008ce:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008d2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008d6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008da:	d1c0      	bne.n	800085e <__aeabi_ddiv+0x82>
 80008dc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008e0:	d10b      	bne.n	80008fa <__aeabi_ddiv+0x11e>
 80008e2:	ea41 0100 	orr.w	r1, r1, r0
 80008e6:	f04f 0000 	mov.w	r0, #0
 80008ea:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 80008ee:	e7b6      	b.n	800085e <__aeabi_ddiv+0x82>
 80008f0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008f4:	bf04      	itt	eq
 80008f6:	4301      	orreq	r1, r0
 80008f8:	2000      	moveq	r0, #0
 80008fa:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80008fe:	bf88      	it	hi
 8000900:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000904:	f63f aeaf 	bhi.w	8000666 <__aeabi_dmul+0xde>
 8000908:	ebb5 0c03 	subs.w	ip, r5, r3
 800090c:	bf04      	itt	eq
 800090e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000912:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000916:	f150 0000 	adcs.w	r0, r0, #0
 800091a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800091e:	bd70      	pop	{r4, r5, r6, pc}
 8000920:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000924:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000928:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800092c:	bfc2      	ittt	gt
 800092e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000932:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000936:	bd70      	popgt	{r4, r5, r6, pc}
 8000938:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800093c:	f04f 0e00 	mov.w	lr, #0
 8000940:	3c01      	subs	r4, #1
 8000942:	e690      	b.n	8000666 <__aeabi_dmul+0xde>
 8000944:	ea45 0e06 	orr.w	lr, r5, r6
 8000948:	e68d      	b.n	8000666 <__aeabi_dmul+0xde>
 800094a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800094e:	ea94 0f0c 	teq	r4, ip
 8000952:	bf08      	it	eq
 8000954:	ea95 0f0c 	teqeq	r5, ip
 8000958:	f43f af3b 	beq.w	80007d2 <__aeabi_dmul+0x24a>
 800095c:	ea94 0f0c 	teq	r4, ip
 8000960:	d10a      	bne.n	8000978 <__aeabi_ddiv+0x19c>
 8000962:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000966:	f47f af34 	bne.w	80007d2 <__aeabi_dmul+0x24a>
 800096a:	ea95 0f0c 	teq	r5, ip
 800096e:	f47f af25 	bne.w	80007bc <__aeabi_dmul+0x234>
 8000972:	4610      	mov	r0, r2
 8000974:	4619      	mov	r1, r3
 8000976:	e72c      	b.n	80007d2 <__aeabi_dmul+0x24a>
 8000978:	ea95 0f0c 	teq	r5, ip
 800097c:	d106      	bne.n	800098c <__aeabi_ddiv+0x1b0>
 800097e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000982:	f43f aefd 	beq.w	8000780 <__aeabi_dmul+0x1f8>
 8000986:	4610      	mov	r0, r2
 8000988:	4619      	mov	r1, r3
 800098a:	e722      	b.n	80007d2 <__aeabi_dmul+0x24a>
 800098c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000990:	bf18      	it	ne
 8000992:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000996:	f47f aec5 	bne.w	8000724 <__aeabi_dmul+0x19c>
 800099a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 800099e:	f47f af0d 	bne.w	80007bc <__aeabi_dmul+0x234>
 80009a2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009a6:	f47f aeeb 	bne.w	8000780 <__aeabi_dmul+0x1f8>
 80009aa:	e712      	b.n	80007d2 <__aeabi_dmul+0x24a>

080009ac <__gedf2>:
 80009ac:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 80009b0:	e006      	b.n	80009c0 <__cmpdf2+0x4>
 80009b2:	bf00      	nop

080009b4 <__ledf2>:
 80009b4:	f04f 0c01 	mov.w	ip, #1
 80009b8:	e002      	b.n	80009c0 <__cmpdf2+0x4>
 80009ba:	bf00      	nop

080009bc <__cmpdf2>:
 80009bc:	f04f 0c01 	mov.w	ip, #1
 80009c0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009c4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009c8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009cc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009d0:	bf18      	it	ne
 80009d2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009d6:	d01b      	beq.n	8000a10 <__cmpdf2+0x54>
 80009d8:	b001      	add	sp, #4
 80009da:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009de:	bf0c      	ite	eq
 80009e0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009e4:	ea91 0f03 	teqne	r1, r3
 80009e8:	bf02      	ittt	eq
 80009ea:	ea90 0f02 	teqeq	r0, r2
 80009ee:	2000      	moveq	r0, #0
 80009f0:	4770      	bxeq	lr
 80009f2:	f110 0f00 	cmn.w	r0, #0
 80009f6:	ea91 0f03 	teq	r1, r3
 80009fa:	bf58      	it	pl
 80009fc:	4299      	cmppl	r1, r3
 80009fe:	bf08      	it	eq
 8000a00:	4290      	cmpeq	r0, r2
 8000a02:	bf2c      	ite	cs
 8000a04:	17d8      	asrcs	r0, r3, #31
 8000a06:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a0a:	f040 0001 	orr.w	r0, r0, #1
 8000a0e:	4770      	bx	lr
 8000a10:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a14:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a18:	d102      	bne.n	8000a20 <__cmpdf2+0x64>
 8000a1a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1e:	d107      	bne.n	8000a30 <__cmpdf2+0x74>
 8000a20:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a24:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a28:	d1d6      	bne.n	80009d8 <__cmpdf2+0x1c>
 8000a2a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2e:	d0d3      	beq.n	80009d8 <__cmpdf2+0x1c>
 8000a30:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a34:	4770      	bx	lr
 8000a36:	bf00      	nop

08000a38 <__aeabi_cdrcmple>:
 8000a38:	4684      	mov	ip, r0
 8000a3a:	4610      	mov	r0, r2
 8000a3c:	4662      	mov	r2, ip
 8000a3e:	468c      	mov	ip, r1
 8000a40:	4619      	mov	r1, r3
 8000a42:	4663      	mov	r3, ip
 8000a44:	e000      	b.n	8000a48 <__aeabi_cdcmpeq>
 8000a46:	bf00      	nop

08000a48 <__aeabi_cdcmpeq>:
 8000a48:	b501      	push	{r0, lr}
 8000a4a:	f7ff ffb7 	bl	80009bc <__cmpdf2>
 8000a4e:	2800      	cmp	r0, #0
 8000a50:	bf48      	it	mi
 8000a52:	f110 0f00 	cmnmi.w	r0, #0
 8000a56:	bd01      	pop	{r0, pc}

08000a58 <__aeabi_dcmpeq>:
 8000a58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a5c:	f7ff fff4 	bl	8000a48 <__aeabi_cdcmpeq>
 8000a60:	bf0c      	ite	eq
 8000a62:	2001      	moveq	r0, #1
 8000a64:	2000      	movne	r0, #0
 8000a66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a6a:	bf00      	nop

08000a6c <__aeabi_dcmplt>:
 8000a6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a70:	f7ff ffea 	bl	8000a48 <__aeabi_cdcmpeq>
 8000a74:	bf34      	ite	cc
 8000a76:	2001      	movcc	r0, #1
 8000a78:	2000      	movcs	r0, #0
 8000a7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7e:	bf00      	nop

08000a80 <__aeabi_dcmple>:
 8000a80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a84:	f7ff ffe0 	bl	8000a48 <__aeabi_cdcmpeq>
 8000a88:	bf94      	ite	ls
 8000a8a:	2001      	movls	r0, #1
 8000a8c:	2000      	movhi	r0, #0
 8000a8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a92:	bf00      	nop

08000a94 <__aeabi_dcmpge>:
 8000a94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a98:	f7ff ffce 	bl	8000a38 <__aeabi_cdrcmple>
 8000a9c:	bf94      	ite	ls
 8000a9e:	2001      	movls	r0, #1
 8000aa0:	2000      	movhi	r0, #0
 8000aa2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_dcmpgt>:
 8000aa8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aac:	f7ff ffc4 	bl	8000a38 <__aeabi_cdrcmple>
 8000ab0:	bf34      	ite	cc
 8000ab2:	2001      	movcc	r0, #1
 8000ab4:	2000      	movcs	r0, #0
 8000ab6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aba:	bf00      	nop

08000abc <__aeabi_d2iz>:
 8000abc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ac0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000ac4:	d215      	bcs.n	8000af2 <__aeabi_d2iz+0x36>
 8000ac6:	d511      	bpl.n	8000aec <__aeabi_d2iz+0x30>
 8000ac8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000acc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000ad0:	d912      	bls.n	8000af8 <__aeabi_d2iz+0x3c>
 8000ad2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000ad6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ada:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000ade:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000ae2:	fa23 f002 	lsr.w	r0, r3, r2
 8000ae6:	bf18      	it	ne
 8000ae8:	4240      	negne	r0, r0
 8000aea:	4770      	bx	lr
 8000aec:	f04f 0000 	mov.w	r0, #0
 8000af0:	4770      	bx	lr
 8000af2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000af6:	d105      	bne.n	8000b04 <__aeabi_d2iz+0x48>
 8000af8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000afc:	bf08      	it	eq
 8000afe:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b02:	4770      	bx	lr
 8000b04:	f04f 0000 	mov.w	r0, #0
 8000b08:	4770      	bx	lr
 8000b0a:	bf00      	nop

08000b0c <__aeabi_d2uiz>:
 8000b0c:	004a      	lsls	r2, r1, #1
 8000b0e:	d211      	bcs.n	8000b34 <__aeabi_d2uiz+0x28>
 8000b10:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b14:	d211      	bcs.n	8000b3a <__aeabi_d2uiz+0x2e>
 8000b16:	d50d      	bpl.n	8000b34 <__aeabi_d2uiz+0x28>
 8000b18:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b1c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b20:	d40e      	bmi.n	8000b40 <__aeabi_d2uiz+0x34>
 8000b22:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b26:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b2a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b2e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b32:	4770      	bx	lr
 8000b34:	f04f 0000 	mov.w	r0, #0
 8000b38:	4770      	bx	lr
 8000b3a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b3e:	d102      	bne.n	8000b46 <__aeabi_d2uiz+0x3a>
 8000b40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b44:	4770      	bx	lr
 8000b46:	f04f 0000 	mov.w	r0, #0
 8000b4a:	4770      	bx	lr

08000b4c <__aeabi_uldivmod>:
 8000b4c:	b953      	cbnz	r3, 8000b64 <__aeabi_uldivmod+0x18>
 8000b4e:	b94a      	cbnz	r2, 8000b64 <__aeabi_uldivmod+0x18>
 8000b50:	2900      	cmp	r1, #0
 8000b52:	bf08      	it	eq
 8000b54:	2800      	cmpeq	r0, #0
 8000b56:	bf1c      	itt	ne
 8000b58:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8000b5c:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8000b60:	f000 b974 	b.w	8000e4c <__aeabi_idiv0>
 8000b64:	f1ad 0c08 	sub.w	ip, sp, #8
 8000b68:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000b6c:	f000 f806 	bl	8000b7c <__udivmoddi4>
 8000b70:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000b74:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000b78:	b004      	add	sp, #16
 8000b7a:	4770      	bx	lr

08000b7c <__udivmoddi4>:
 8000b7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000b80:	9e08      	ldr	r6, [sp, #32]
 8000b82:	4604      	mov	r4, r0
 8000b84:	4688      	mov	r8, r1
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	f040 8085 	bne.w	8000c96 <__udivmoddi4+0x11a>
 8000b8c:	428a      	cmp	r2, r1
 8000b8e:	4615      	mov	r5, r2
 8000b90:	d948      	bls.n	8000c24 <__udivmoddi4+0xa8>
 8000b92:	fab2 f282 	clz	r2, r2
 8000b96:	b14a      	cbz	r2, 8000bac <__udivmoddi4+0x30>
 8000b98:	f1c2 0720 	rsb	r7, r2, #32
 8000b9c:	fa01 f302 	lsl.w	r3, r1, r2
 8000ba0:	fa20 f707 	lsr.w	r7, r0, r7
 8000ba4:	4095      	lsls	r5, r2
 8000ba6:	ea47 0803 	orr.w	r8, r7, r3
 8000baa:	4094      	lsls	r4, r2
 8000bac:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000bb0:	0c23      	lsrs	r3, r4, #16
 8000bb2:	fbb8 f7fe 	udiv	r7, r8, lr
 8000bb6:	fa1f fc85 	uxth.w	ip, r5
 8000bba:	fb0e 8817 	mls	r8, lr, r7, r8
 8000bbe:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000bc2:	fb07 f10c 	mul.w	r1, r7, ip
 8000bc6:	4299      	cmp	r1, r3
 8000bc8:	d909      	bls.n	8000bde <__udivmoddi4+0x62>
 8000bca:	18eb      	adds	r3, r5, r3
 8000bcc:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
 8000bd0:	f080 80e3 	bcs.w	8000d9a <__udivmoddi4+0x21e>
 8000bd4:	4299      	cmp	r1, r3
 8000bd6:	f240 80e0 	bls.w	8000d9a <__udivmoddi4+0x21e>
 8000bda:	3f02      	subs	r7, #2
 8000bdc:	442b      	add	r3, r5
 8000bde:	1a5b      	subs	r3, r3, r1
 8000be0:	b2a4      	uxth	r4, r4
 8000be2:	fbb3 f0fe 	udiv	r0, r3, lr
 8000be6:	fb0e 3310 	mls	r3, lr, r0, r3
 8000bea:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000bee:	fb00 fc0c 	mul.w	ip, r0, ip
 8000bf2:	45a4      	cmp	ip, r4
 8000bf4:	d909      	bls.n	8000c0a <__udivmoddi4+0x8e>
 8000bf6:	192c      	adds	r4, r5, r4
 8000bf8:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000bfc:	f080 80cb 	bcs.w	8000d96 <__udivmoddi4+0x21a>
 8000c00:	45a4      	cmp	ip, r4
 8000c02:	f240 80c8 	bls.w	8000d96 <__udivmoddi4+0x21a>
 8000c06:	3802      	subs	r0, #2
 8000c08:	442c      	add	r4, r5
 8000c0a:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c0e:	eba4 040c 	sub.w	r4, r4, ip
 8000c12:	2700      	movs	r7, #0
 8000c14:	b11e      	cbz	r6, 8000c1e <__udivmoddi4+0xa2>
 8000c16:	40d4      	lsrs	r4, r2
 8000c18:	2300      	movs	r3, #0
 8000c1a:	e9c6 4300 	strd	r4, r3, [r6]
 8000c1e:	4639      	mov	r1, r7
 8000c20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c24:	2a00      	cmp	r2, #0
 8000c26:	d053      	beq.n	8000cd0 <__udivmoddi4+0x154>
 8000c28:	fab2 f282 	clz	r2, r2
 8000c2c:	2a00      	cmp	r2, #0
 8000c2e:	f040 80b6 	bne.w	8000d9e <__udivmoddi4+0x222>
 8000c32:	1b49      	subs	r1, r1, r5
 8000c34:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c38:	fa1f f885 	uxth.w	r8, r5
 8000c3c:	2701      	movs	r7, #1
 8000c3e:	fbb1 fcfe 	udiv	ip, r1, lr
 8000c42:	0c23      	lsrs	r3, r4, #16
 8000c44:	fb0e 111c 	mls	r1, lr, ip, r1
 8000c48:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c4c:	fb08 f10c 	mul.w	r1, r8, ip
 8000c50:	4299      	cmp	r1, r3
 8000c52:	d907      	bls.n	8000c64 <__udivmoddi4+0xe8>
 8000c54:	18eb      	adds	r3, r5, r3
 8000c56:	f10c 30ff 	add.w	r0, ip, #4294967295	; 0xffffffff
 8000c5a:	d202      	bcs.n	8000c62 <__udivmoddi4+0xe6>
 8000c5c:	4299      	cmp	r1, r3
 8000c5e:	f200 80ec 	bhi.w	8000e3a <__udivmoddi4+0x2be>
 8000c62:	4684      	mov	ip, r0
 8000c64:	1a59      	subs	r1, r3, r1
 8000c66:	b2a3      	uxth	r3, r4
 8000c68:	fbb1 f0fe 	udiv	r0, r1, lr
 8000c6c:	fb0e 1410 	mls	r4, lr, r0, r1
 8000c70:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000c74:	fb08 f800 	mul.w	r8, r8, r0
 8000c78:	45a0      	cmp	r8, r4
 8000c7a:	d907      	bls.n	8000c8c <__udivmoddi4+0x110>
 8000c7c:	192c      	adds	r4, r5, r4
 8000c7e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000c82:	d202      	bcs.n	8000c8a <__udivmoddi4+0x10e>
 8000c84:	45a0      	cmp	r8, r4
 8000c86:	f200 80dc 	bhi.w	8000e42 <__udivmoddi4+0x2c6>
 8000c8a:	4618      	mov	r0, r3
 8000c8c:	eba4 0408 	sub.w	r4, r4, r8
 8000c90:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000c94:	e7be      	b.n	8000c14 <__udivmoddi4+0x98>
 8000c96:	428b      	cmp	r3, r1
 8000c98:	d908      	bls.n	8000cac <__udivmoddi4+0x130>
 8000c9a:	2e00      	cmp	r6, #0
 8000c9c:	d078      	beq.n	8000d90 <__udivmoddi4+0x214>
 8000c9e:	2700      	movs	r7, #0
 8000ca0:	e9c6 0100 	strd	r0, r1, [r6]
 8000ca4:	4638      	mov	r0, r7
 8000ca6:	4639      	mov	r1, r7
 8000ca8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cac:	fab3 f783 	clz	r7, r3
 8000cb0:	b97f      	cbnz	r7, 8000cd2 <__udivmoddi4+0x156>
 8000cb2:	428b      	cmp	r3, r1
 8000cb4:	d302      	bcc.n	8000cbc <__udivmoddi4+0x140>
 8000cb6:	4282      	cmp	r2, r0
 8000cb8:	f200 80bd 	bhi.w	8000e36 <__udivmoddi4+0x2ba>
 8000cbc:	1a84      	subs	r4, r0, r2
 8000cbe:	eb61 0303 	sbc.w	r3, r1, r3
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	4698      	mov	r8, r3
 8000cc6:	2e00      	cmp	r6, #0
 8000cc8:	d0a9      	beq.n	8000c1e <__udivmoddi4+0xa2>
 8000cca:	e9c6 4800 	strd	r4, r8, [r6]
 8000cce:	e7a6      	b.n	8000c1e <__udivmoddi4+0xa2>
 8000cd0:	deff      	udf	#255	; 0xff
 8000cd2:	f1c7 0520 	rsb	r5, r7, #32
 8000cd6:	40bb      	lsls	r3, r7
 8000cd8:	fa22 fc05 	lsr.w	ip, r2, r5
 8000cdc:	ea4c 0c03 	orr.w	ip, ip, r3
 8000ce0:	fa01 f407 	lsl.w	r4, r1, r7
 8000ce4:	fa20 f805 	lsr.w	r8, r0, r5
 8000ce8:	fa21 f305 	lsr.w	r3, r1, r5
 8000cec:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000cf0:	ea48 0404 	orr.w	r4, r8, r4
 8000cf4:	fbb3 f9fe 	udiv	r9, r3, lr
 8000cf8:	0c21      	lsrs	r1, r4, #16
 8000cfa:	fb0e 3319 	mls	r3, lr, r9, r3
 8000cfe:	fa1f f88c 	uxth.w	r8, ip
 8000d02:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d06:	fb09 fa08 	mul.w	sl, r9, r8
 8000d0a:	459a      	cmp	sl, r3
 8000d0c:	fa02 f207 	lsl.w	r2, r2, r7
 8000d10:	fa00 f107 	lsl.w	r1, r0, r7
 8000d14:	d90b      	bls.n	8000d2e <__udivmoddi4+0x1b2>
 8000d16:	eb1c 0303 	adds.w	r3, ip, r3
 8000d1a:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
 8000d1e:	f080 8088 	bcs.w	8000e32 <__udivmoddi4+0x2b6>
 8000d22:	459a      	cmp	sl, r3
 8000d24:	f240 8085 	bls.w	8000e32 <__udivmoddi4+0x2b6>
 8000d28:	f1a9 0902 	sub.w	r9, r9, #2
 8000d2c:	4463      	add	r3, ip
 8000d2e:	eba3 030a 	sub.w	r3, r3, sl
 8000d32:	b2a4      	uxth	r4, r4
 8000d34:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d38:	fb0e 3310 	mls	r3, lr, r0, r3
 8000d3c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000d40:	fb00 f808 	mul.w	r8, r0, r8
 8000d44:	45a0      	cmp	r8, r4
 8000d46:	d908      	bls.n	8000d5a <__udivmoddi4+0x1de>
 8000d48:	eb1c 0404 	adds.w	r4, ip, r4
 8000d4c:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000d50:	d26b      	bcs.n	8000e2a <__udivmoddi4+0x2ae>
 8000d52:	45a0      	cmp	r8, r4
 8000d54:	d969      	bls.n	8000e2a <__udivmoddi4+0x2ae>
 8000d56:	3802      	subs	r0, #2
 8000d58:	4464      	add	r4, ip
 8000d5a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000d5e:	eba4 0408 	sub.w	r4, r4, r8
 8000d62:	fba0 8902 	umull	r8, r9, r0, r2
 8000d66:	454c      	cmp	r4, r9
 8000d68:	46c6      	mov	lr, r8
 8000d6a:	464b      	mov	r3, r9
 8000d6c:	d354      	bcc.n	8000e18 <__udivmoddi4+0x29c>
 8000d6e:	d051      	beq.n	8000e14 <__udivmoddi4+0x298>
 8000d70:	2e00      	cmp	r6, #0
 8000d72:	d069      	beq.n	8000e48 <__udivmoddi4+0x2cc>
 8000d74:	ebb1 020e 	subs.w	r2, r1, lr
 8000d78:	eb64 0403 	sbc.w	r4, r4, r3
 8000d7c:	fa04 f505 	lsl.w	r5, r4, r5
 8000d80:	fa22 f307 	lsr.w	r3, r2, r7
 8000d84:	40fc      	lsrs	r4, r7
 8000d86:	431d      	orrs	r5, r3
 8000d88:	e9c6 5400 	strd	r5, r4, [r6]
 8000d8c:	2700      	movs	r7, #0
 8000d8e:	e746      	b.n	8000c1e <__udivmoddi4+0xa2>
 8000d90:	4637      	mov	r7, r6
 8000d92:	4630      	mov	r0, r6
 8000d94:	e743      	b.n	8000c1e <__udivmoddi4+0xa2>
 8000d96:	4618      	mov	r0, r3
 8000d98:	e737      	b.n	8000c0a <__udivmoddi4+0x8e>
 8000d9a:	4607      	mov	r7, r0
 8000d9c:	e71f      	b.n	8000bde <__udivmoddi4+0x62>
 8000d9e:	f1c2 0320 	rsb	r3, r2, #32
 8000da2:	fa20 f703 	lsr.w	r7, r0, r3
 8000da6:	4095      	lsls	r5, r2
 8000da8:	fa01 f002 	lsl.w	r0, r1, r2
 8000dac:	fa21 f303 	lsr.w	r3, r1, r3
 8000db0:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000db4:	4338      	orrs	r0, r7
 8000db6:	0c01      	lsrs	r1, r0, #16
 8000db8:	fbb3 f7fe 	udiv	r7, r3, lr
 8000dbc:	fa1f f885 	uxth.w	r8, r5
 8000dc0:	fb0e 3317 	mls	r3, lr, r7, r3
 8000dc4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000dc8:	fb07 f308 	mul.w	r3, r7, r8
 8000dcc:	428b      	cmp	r3, r1
 8000dce:	fa04 f402 	lsl.w	r4, r4, r2
 8000dd2:	d907      	bls.n	8000de4 <__udivmoddi4+0x268>
 8000dd4:	1869      	adds	r1, r5, r1
 8000dd6:	f107 3cff 	add.w	ip, r7, #4294967295	; 0xffffffff
 8000dda:	d228      	bcs.n	8000e2e <__udivmoddi4+0x2b2>
 8000ddc:	428b      	cmp	r3, r1
 8000dde:	d926      	bls.n	8000e2e <__udivmoddi4+0x2b2>
 8000de0:	3f02      	subs	r7, #2
 8000de2:	4429      	add	r1, r5
 8000de4:	1acb      	subs	r3, r1, r3
 8000de6:	b281      	uxth	r1, r0
 8000de8:	fbb3 f0fe 	udiv	r0, r3, lr
 8000dec:	fb0e 3310 	mls	r3, lr, r0, r3
 8000df0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000df4:	fb00 f308 	mul.w	r3, r0, r8
 8000df8:	428b      	cmp	r3, r1
 8000dfa:	d907      	bls.n	8000e0c <__udivmoddi4+0x290>
 8000dfc:	1869      	adds	r1, r5, r1
 8000dfe:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8000e02:	d210      	bcs.n	8000e26 <__udivmoddi4+0x2aa>
 8000e04:	428b      	cmp	r3, r1
 8000e06:	d90e      	bls.n	8000e26 <__udivmoddi4+0x2aa>
 8000e08:	3802      	subs	r0, #2
 8000e0a:	4429      	add	r1, r5
 8000e0c:	1ac9      	subs	r1, r1, r3
 8000e0e:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000e12:	e714      	b.n	8000c3e <__udivmoddi4+0xc2>
 8000e14:	4541      	cmp	r1, r8
 8000e16:	d2ab      	bcs.n	8000d70 <__udivmoddi4+0x1f4>
 8000e18:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e1c:	eb69 020c 	sbc.w	r2, r9, ip
 8000e20:	3801      	subs	r0, #1
 8000e22:	4613      	mov	r3, r2
 8000e24:	e7a4      	b.n	8000d70 <__udivmoddi4+0x1f4>
 8000e26:	4660      	mov	r0, ip
 8000e28:	e7f0      	b.n	8000e0c <__udivmoddi4+0x290>
 8000e2a:	4618      	mov	r0, r3
 8000e2c:	e795      	b.n	8000d5a <__udivmoddi4+0x1de>
 8000e2e:	4667      	mov	r7, ip
 8000e30:	e7d8      	b.n	8000de4 <__udivmoddi4+0x268>
 8000e32:	4681      	mov	r9, r0
 8000e34:	e77b      	b.n	8000d2e <__udivmoddi4+0x1b2>
 8000e36:	4638      	mov	r0, r7
 8000e38:	e745      	b.n	8000cc6 <__udivmoddi4+0x14a>
 8000e3a:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e3e:	442b      	add	r3, r5
 8000e40:	e710      	b.n	8000c64 <__udivmoddi4+0xe8>
 8000e42:	3802      	subs	r0, #2
 8000e44:	442c      	add	r4, r5
 8000e46:	e721      	b.n	8000c8c <__udivmoddi4+0x110>
 8000e48:	4637      	mov	r7, r6
 8000e4a:	e6e8      	b.n	8000c1e <__udivmoddi4+0xa2>

08000e4c <__aeabi_idiv0>:
 8000e4c:	4770      	bx	lr
 8000e4e:	bf00      	nop

08000e50 <atexit>:
 8000e50:	2300      	movs	r3, #0
 8000e52:	4601      	mov	r1, r0
 8000e54:	461a      	mov	r2, r3
 8000e56:	4618      	mov	r0, r3
 8000e58:	f000 b81a 	b.w	8000e90 <__register_exitproc>

08000e5c <__libc_fini_array>:
 8000e5c:	b538      	push	{r3, r4, r5, lr}
 8000e5e:	4c0a      	ldr	r4, [pc, #40]	; (8000e88 <__libc_fini_array+0x2c>)
 8000e60:	4d0a      	ldr	r5, [pc, #40]	; (8000e8c <__libc_fini_array+0x30>)
 8000e62:	1b64      	subs	r4, r4, r5
 8000e64:	10a4      	asrs	r4, r4, #2
 8000e66:	d00a      	beq.n	8000e7e <__libc_fini_array+0x22>
 8000e68:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
 8000e6c:	3b01      	subs	r3, #1
 8000e6e:	eb05 0583 	add.w	r5, r5, r3, lsl #2
 8000e72:	3c01      	subs	r4, #1
 8000e74:	f855 3904 	ldr.w	r3, [r5], #-4
 8000e78:	4798      	blx	r3
 8000e7a:	2c00      	cmp	r4, #0
 8000e7c:	d1f9      	bne.n	8000e72 <__libc_fini_array+0x16>
 8000e7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000e82:	f002 bfdf 	b.w	8003e44 <_fini>
 8000e86:	bf00      	nop
 8000e88:	080040bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, lr}
 8000e8c:	080040b8 	stmdaeq	r0, {r3, r4, r5, r7, lr}

08000e90 <__register_exitproc>:
 8000e90:	b4f0      	push	{r4, r5, r6, r7}
 8000e92:	4c18      	ldr	r4, [pc, #96]	; (8000ef4 <__register_exitproc+0x64>)
 8000e94:	6825      	ldr	r5, [r4, #0]
 8000e96:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
 8000e9a:	b314      	cbz	r4, 8000ee2 <__register_exitproc+0x52>
 8000e9c:	6865      	ldr	r5, [r4, #4]
 8000e9e:	2d1f      	cmp	r5, #31
 8000ea0:	dc24      	bgt.n	8000eec <__register_exitproc+0x5c>
 8000ea2:	b938      	cbnz	r0, 8000eb4 <__register_exitproc+0x24>
 8000ea4:	1cab      	adds	r3, r5, #2
 8000ea6:	3501      	adds	r5, #1
 8000ea8:	6065      	str	r5, [r4, #4]
 8000eaa:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
 8000eae:	2000      	movs	r0, #0
 8000eb0:	bcf0      	pop	{r4, r5, r6, r7}
 8000eb2:	4770      	bx	lr
 8000eb4:	eb04 0685 	add.w	r6, r4, r5, lsl #2
 8000eb8:	2701      	movs	r7, #1
 8000eba:	f8c6 2088 	str.w	r2, [r6, #136]	; 0x88
 8000ebe:	fa07 f205 	lsl.w	r2, r7, r5
 8000ec2:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
 8000ec6:	2802      	cmp	r0, #2
 8000ec8:	ea47 0702 	orr.w	r7, r7, r2
 8000ecc:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
 8000ed0:	f8c6 3108 	str.w	r3, [r6, #264]	; 0x108
 8000ed4:	d1e6      	bne.n	8000ea4 <__register_exitproc+0x14>
 8000ed6:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
 8000eda:	431a      	orrs	r2, r3
 8000edc:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
 8000ee0:	e7e0      	b.n	8000ea4 <__register_exitproc+0x14>
 8000ee2:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
 8000ee6:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
 8000eea:	e7d7      	b.n	8000e9c <__register_exitproc+0xc>
 8000eec:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ef0:	e7de      	b.n	8000eb0 <__register_exitproc+0x20>
 8000ef2:	bf00      	nop
 8000ef4:	08003f04 	stmdaeq	r0, {r2, r8, r9, sl, fp, ip, sp}

08000ef8 <main>:
  * @param  None
  * @retval None
  */
extern void task_start(void);
int main(void)
{
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	af00      	add	r7, sp, #0
       - Configure the Flash prefetch, instruction and Data caches
       - Configure the Systick to generate an interrupt each 1 msec
       - Set NVIC Group Priority to 4
       - Global MSP (MCU Support Package) initialization
     */
  HAL_Init();
 8000efc:	f000 f972 	bl	80011e4 <HAL_Init>
  /* Configure the system clock to 84 MHz */
  // SystemClock_Config();

  serial_init();
 8000f00:	f000 f80e 	bl	8000f20 <serial_init>
  /* Output a message on Hyperterminal using printf function */
 printf("\n\r -- UART Printf Example: retarget the C library printf function to the UART, %d\n\r", 10/3);
 8000f04:	2103      	movs	r1, #3
 8000f06:	4803      	ldr	r0, [pc, #12]	; (8000f14 <main+0x1c>)
 8000f08:	f002 f8b8 	bl	800307c <printf_>
  __asm("svc 0");
 8000f0c:	df00      	svc	0

    //   printf("&__shell_command_start=0x%x &__shell_command_end=0x%x\r\n",\
        &__shell_command_start, &__shell_command_end);
    // shell_command_t * scmd = &__shell_command_start;

  task_start();
 8000f0e:	f002 fced 	bl	80038ec <task_start>
  // exception_test();
  // backtrace_test();
  while (1) {
 8000f12:	e7fe      	b.n	8000f12 <main+0x1a>
 8000f14:	08003e6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, fp, ip, sp}

08000f18 <Error_Handler>:
  * @brief  This function is executed in case of error occurrence.
  * @param  None
  * @retval None
  */
void Error_Handler(void)
{
 8000f18:	b480      	push	{r7}
 8000f1a:	af00      	add	r7, sp, #0
  /* Turn LED2 on */
  // BSP_LED_On(LED2);
  while(1)
 8000f1c:	e7fe      	b.n	8000f1c <Error_Handler+0x4>
	...

08000f20 <serial_init>:
#define USART_DR_OFFSET   0x04

#define USART_DR_ADDR (USART1_BASE_ADDR+USART_DR_OFFSET)

void serial_init(void) 
{
 8000f20:	b580      	push	{r7, lr}
 8000f22:	af00      	add	r7, sp, #0
      - Stop Bit = One Stop bit
      - Parity = ODD parity
      - BaudRate = 9600 baud
      - Hardware flow control disabled (RTS and CTS signals) */
#ifdef HAL_DRIVER_ENABLE
  UartHandle.Instance          = USARTx;
 8000f24:	4b11      	ldr	r3, [pc, #68]	; (8000f6c <serial_init+0x4c>)
 8000f26:	4a12      	ldr	r2, [pc, #72]	; (8000f70 <serial_init+0x50>)
 8000f28:	601a      	str	r2, [r3, #0]
  
  UartHandle.Init.BaudRate     = 921600;
 8000f2a:	4b10      	ldr	r3, [pc, #64]	; (8000f6c <serial_init+0x4c>)
 8000f2c:	f44f 2261 	mov.w	r2, #921600	; 0xe1000
 8000f30:	605a      	str	r2, [r3, #4]
  UartHandle.Init.WordLength   = UART_WORDLENGTH_8B;
 8000f32:	4b0e      	ldr	r3, [pc, #56]	; (8000f6c <serial_init+0x4c>)
 8000f34:	2200      	movs	r2, #0
 8000f36:	609a      	str	r2, [r3, #8]
  UartHandle.Init.StopBits     = UART_STOPBITS_1;
 8000f38:	4b0c      	ldr	r3, [pc, #48]	; (8000f6c <serial_init+0x4c>)
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	60da      	str	r2, [r3, #12]
  UartHandle.Init.Parity       = UART_PARITY_NONE;
 8000f3e:	4b0b      	ldr	r3, [pc, #44]	; (8000f6c <serial_init+0x4c>)
 8000f40:	2200      	movs	r2, #0
 8000f42:	611a      	str	r2, [r3, #16]
  UartHandle.Init.HwFlowCtl    = UART_HWCONTROL_NONE;
 8000f44:	4b09      	ldr	r3, [pc, #36]	; (8000f6c <serial_init+0x4c>)
 8000f46:	2200      	movs	r2, #0
 8000f48:	619a      	str	r2, [r3, #24]
  UartHandle.Init.Mode         = UART_MODE_TX_RX;
 8000f4a:	4b08      	ldr	r3, [pc, #32]	; (8000f6c <serial_init+0x4c>)
 8000f4c:	220c      	movs	r2, #12
 8000f4e:	615a      	str	r2, [r3, #20]
  UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;
 8000f50:	4b06      	ldr	r3, [pc, #24]	; (8000f6c <serial_init+0x4c>)
 8000f52:	2200      	movs	r2, #0
 8000f54:	61da      	str	r2, [r3, #28]
    
  if(HAL_UART_Init(&UartHandle) != HAL_OK) {
 8000f56:	4805      	ldr	r0, [pc, #20]	; (8000f6c <serial_init+0x4c>)
 8000f58:	f000 fdee 	bl	8001b38 <HAL_UART_Init>
 8000f5c:	4603      	mov	r3, r0
 8000f5e:	2b00      	cmp	r3, #0
 8000f60:	d001      	beq.n	8000f66 <serial_init+0x46>
    /* Initialization Error */
    Error_Handler(); 
 8000f62:	f7ff ffd9 	bl	8000f18 <Error_Handler>
  }
#endif
}
 8000f66:	bf00      	nop
 8000f68:	bd80      	pop	{r7, pc}
 8000f6a:	bf00      	nop
 8000f6c:	20000608 	andcs	r0, r0, r8, lsl #12
 8000f70:	40004400 	andmi	r4, r0, r0, lsl #8

08000f74 <__io_putchar>:
  * @brief  Retargets the C library printf function to the USART.
  * @param  None
  * @retval None
  */
PUTCHAR_PROTOTYPE
{
 8000f74:	b480      	push	{r7}
 8000f76:	b083      	sub	sp, #12
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	6078      	str	r0, [r7, #4]
  /* Place your implementation of fputc here */
  /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
  // HAL_UART_Transmit(&UartHandle, (uint8_t *)&ch, 1, 0xFFFF); 
  *(volatile unsigned char*)(USART_DR_ADDR) = ch;
 8000f7c:	4b04      	ldr	r3, [pc, #16]	; (8000f90 <__io_putchar+0x1c>)
 8000f7e:	687a      	ldr	r2, [r7, #4]
 8000f80:	b2d2      	uxtb	r2, r2
 8000f82:	701a      	strb	r2, [r3, #0]
  return ch;
 8000f84:	687b      	ldr	r3, [r7, #4]
}
 8000f86:	4618      	mov	r0, r3
 8000f88:	370c      	adds	r7, #12
 8000f8a:	46bd      	mov	sp, r7
 8000f8c:	bc80      	pop	{r7}
 8000f8e:	4770      	bx	lr
 8000f90:	40011004 	andmi	r1, r1, r4

08000f94 <HAL_UART_MspInit>:
  *           - NVIC configuration for DMA interrupt request enable
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef *huart)
{
 8000f94:	b580      	push	{r7, lr}
 8000f96:	b08c      	sub	sp, #48	; 0x30
 8000f98:	af00      	add	r7, sp, #0
 8000f9a:	6078      	str	r0, [r7, #4]
  
  GPIO_InitTypeDef  GPIO_InitStruct;
  
  /*##-1- Enable peripherals and GPIO Clocks #################################*/
  /* Enable GPIO TX/RX clock */
  USARTx_TX_GPIO_CLK_ENABLE();
 8000f9c:	2300      	movs	r3, #0
 8000f9e:	61bb      	str	r3, [r7, #24]
 8000fa0:	4b6a      	ldr	r3, [pc, #424]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fa2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fa4:	4a69      	ldr	r2, [pc, #420]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fa6:	f043 0301 	orr.w	r3, r3, #1
 8000faa:	6313      	str	r3, [r2, #48]	; 0x30
 8000fac:	4b67      	ldr	r3, [pc, #412]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fb0:	f003 0301 	and.w	r3, r3, #1
 8000fb4:	61bb      	str	r3, [r7, #24]
 8000fb6:	69bb      	ldr	r3, [r7, #24]
  USARTx_RX_GPIO_CLK_ENABLE();
 8000fb8:	2300      	movs	r3, #0
 8000fba:	617b      	str	r3, [r7, #20]
 8000fbc:	4b63      	ldr	r3, [pc, #396]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fbe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fc0:	4a62      	ldr	r2, [pc, #392]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fc2:	f043 0301 	orr.w	r3, r3, #1
 8000fc6:	6313      	str	r3, [r2, #48]	; 0x30
 8000fc8:	4b60      	ldr	r3, [pc, #384]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000fcc:	f003 0301 	and.w	r3, r3, #1
 8000fd0:	617b      	str	r3, [r7, #20]
 8000fd2:	697b      	ldr	r3, [r7, #20]
  /* Enable USART2 clock */
  USARTx_CLK_ENABLE(); 
 8000fd4:	2300      	movs	r3, #0
 8000fd6:	613b      	str	r3, [r7, #16]
 8000fd8:	4b5c      	ldr	r3, [pc, #368]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fda:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000fdc:	4a5b      	ldr	r2, [pc, #364]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fde:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000fe2:	6413      	str	r3, [r2, #64]	; 0x40
 8000fe4:	4b59      	ldr	r3, [pc, #356]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000fe6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000fe8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000fec:	613b      	str	r3, [r7, #16]
 8000fee:	693b      	ldr	r3, [r7, #16]
  /* Enable DMA1 clock */
  DMAx_CLK_ENABLE();   
 8000ff0:	2300      	movs	r3, #0
 8000ff2:	60fb      	str	r3, [r7, #12]
 8000ff4:	4b55      	ldr	r3, [pc, #340]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000ff6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000ff8:	4a54      	ldr	r2, [pc, #336]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8000ffa:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8000ffe:	6313      	str	r3, [r2, #48]	; 0x30
 8001000:	4b52      	ldr	r3, [pc, #328]	; (800114c <HAL_UART_MspInit+0x1b8>)
 8001002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001004:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001008:	60fb      	str	r3, [r7, #12]
 800100a:	68fb      	ldr	r3, [r7, #12]
  
  /*##-2- Configure peripheral GPIO ##########################################*/  
  /* UART TX GPIO pin configuration  */
  GPIO_InitStruct.Pin       = USARTx_TX_PIN;
 800100c:	2304      	movs	r3, #4
 800100e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8001010:	2302      	movs	r3, #2
 8001012:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 8001014:	2300      	movs	r3, #0
 8001016:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed     = GPIO_SPEED_FAST;
 8001018:	2302      	movs	r3, #2
 800101a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Alternate = USARTx_TX_AF;
 800101c:	2307      	movs	r3, #7
 800101e:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  HAL_GPIO_Init(USARTx_TX_GPIO_PORT, &GPIO_InitStruct);
 8001020:	f107 031c 	add.w	r3, r7, #28
 8001024:	4619      	mov	r1, r3
 8001026:	484a      	ldr	r0, [pc, #296]	; (8001150 <HAL_UART_MspInit+0x1bc>)
 8001028:	f000 fbec 	bl	8001804 <HAL_GPIO_Init>
    
  /* UART RX GPIO pin configuration  */
  GPIO_InitStruct.Pin = USARTx_RX_PIN;
 800102c:	2308      	movs	r3, #8
 800102e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Alternate = USARTx_RX_AF;
 8001030:	2307      	movs	r3, #7
 8001032:	62fb      	str	r3, [r7, #44]	; 0x2c
    
  HAL_GPIO_Init(USARTx_RX_GPIO_PORT, &GPIO_InitStruct);
 8001034:	f107 031c 	add.w	r3, r7, #28
 8001038:	4619      	mov	r1, r3
 800103a:	4845      	ldr	r0, [pc, #276]	; (8001150 <HAL_UART_MspInit+0x1bc>)
 800103c:	f000 fbe2 	bl	8001804 <HAL_GPIO_Init>
    
  /*##-3- Configure the DMA streams ##########################################*/
  /* Configure the DMA handler for Transmission process */
  hdma_tx.Instance                 = USARTx_TX_DMA_STREAM;
 8001040:	4b44      	ldr	r3, [pc, #272]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001042:	4a45      	ldr	r2, [pc, #276]	; (8001158 <HAL_UART_MspInit+0x1c4>)
 8001044:	601a      	str	r2, [r3, #0]
  
  hdma_tx.Init.Channel             = USARTx_TX_DMA_CHANNEL;
 8001046:	4b43      	ldr	r3, [pc, #268]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001048:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800104c:	605a      	str	r2, [r3, #4]
  hdma_tx.Init.Direction           = DMA_MEMORY_TO_PERIPH;
 800104e:	4b41      	ldr	r3, [pc, #260]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001050:	2240      	movs	r2, #64	; 0x40
 8001052:	609a      	str	r2, [r3, #8]
  hdma_tx.Init.PeriphInc           = DMA_PINC_DISABLE;
 8001054:	4b3f      	ldr	r3, [pc, #252]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001056:	2200      	movs	r2, #0
 8001058:	60da      	str	r2, [r3, #12]
  hdma_tx.Init.MemInc              = DMA_MINC_ENABLE;
 800105a:	4b3e      	ldr	r3, [pc, #248]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 800105c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8001060:	611a      	str	r2, [r3, #16]
  hdma_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001062:	4b3c      	ldr	r3, [pc, #240]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001064:	2200      	movs	r2, #0
 8001066:	615a      	str	r2, [r3, #20]
  hdma_tx.Init.MemDataAlignment    = DMA_MDATAALIGN_BYTE;
 8001068:	4b3a      	ldr	r3, [pc, #232]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 800106a:	2200      	movs	r2, #0
 800106c:	619a      	str	r2, [r3, #24]
  hdma_tx.Init.Mode                = DMA_NORMAL;
 800106e:	4b39      	ldr	r3, [pc, #228]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001070:	2200      	movs	r2, #0
 8001072:	61da      	str	r2, [r3, #28]
  hdma_tx.Init.Priority            = DMA_PRIORITY_LOW;
 8001074:	4b37      	ldr	r3, [pc, #220]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001076:	2200      	movs	r2, #0
 8001078:	621a      	str	r2, [r3, #32]
  hdma_tx.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 800107a:	4b36      	ldr	r3, [pc, #216]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 800107c:	2200      	movs	r2, #0
 800107e:	625a      	str	r2, [r3, #36]	; 0x24
  hdma_tx.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8001080:	4b34      	ldr	r3, [pc, #208]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001082:	2203      	movs	r2, #3
 8001084:	629a      	str	r2, [r3, #40]	; 0x28
  hdma_tx.Init.MemBurst            = DMA_MBURST_INC4;
 8001086:	4b33      	ldr	r3, [pc, #204]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001088:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 800108c:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma_tx.Init.PeriphBurst         = DMA_PBURST_INC4;
 800108e:	4b31      	ldr	r3, [pc, #196]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001090:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8001094:	631a      	str	r2, [r3, #48]	; 0x30
  
  HAL_DMA_Init(&hdma_tx);   
 8001096:	482f      	ldr	r0, [pc, #188]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 8001098:	f000 fa58 	bl	800154c <HAL_DMA_Init>
  
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmatx, hdma_tx);
 800109c:	687b      	ldr	r3, [r7, #4]
 800109e:	4a2d      	ldr	r2, [pc, #180]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 80010a0:	635a      	str	r2, [r3, #52]	; 0x34
 80010a2:	4a2c      	ldr	r2, [pc, #176]	; (8001154 <HAL_UART_MspInit+0x1c0>)
 80010a4:	687b      	ldr	r3, [r7, #4]
 80010a6:	6393      	str	r3, [r2, #56]	; 0x38
    
  /* Configure the DMA handler for Transmission process */
  hdma_rx.Instance                 = USARTx_RX_DMA_STREAM;
 80010a8:	4b2c      	ldr	r3, [pc, #176]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010aa:	4a2d      	ldr	r2, [pc, #180]	; (8001160 <HAL_UART_MspInit+0x1cc>)
 80010ac:	601a      	str	r2, [r3, #0]
  
  hdma_rx.Init.Channel             = USARTx_RX_DMA_CHANNEL;
 80010ae:	4b2b      	ldr	r3, [pc, #172]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010b0:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80010b4:	605a      	str	r2, [r3, #4]
  hdma_rx.Init.Direction           = DMA_PERIPH_TO_MEMORY;
 80010b6:	4b29      	ldr	r3, [pc, #164]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010b8:	2200      	movs	r2, #0
 80010ba:	609a      	str	r2, [r3, #8]
  hdma_rx.Init.PeriphInc           = DMA_PINC_DISABLE;
 80010bc:	4b27      	ldr	r3, [pc, #156]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010be:	2200      	movs	r2, #0
 80010c0:	60da      	str	r2, [r3, #12]
  hdma_rx.Init.MemInc              = DMA_MINC_ENABLE;
 80010c2:	4b26      	ldr	r3, [pc, #152]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010c4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80010c8:	611a      	str	r2, [r3, #16]
  hdma_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80010ca:	4b24      	ldr	r3, [pc, #144]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010cc:	2200      	movs	r2, #0
 80010ce:	615a      	str	r2, [r3, #20]
  hdma_rx.Init.MemDataAlignment    = DMA_MDATAALIGN_BYTE;
 80010d0:	4b22      	ldr	r3, [pc, #136]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010d2:	2200      	movs	r2, #0
 80010d4:	619a      	str	r2, [r3, #24]
  hdma_rx.Init.Mode                = DMA_NORMAL;
 80010d6:	4b21      	ldr	r3, [pc, #132]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010d8:	2200      	movs	r2, #0
 80010da:	61da      	str	r2, [r3, #28]
  hdma_rx.Init.Priority            = DMA_PRIORITY_HIGH;
 80010dc:	4b1f      	ldr	r3, [pc, #124]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010de:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80010e2:	621a      	str	r2, [r3, #32]
  hdma_rx.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;         
 80010e4:	4b1d      	ldr	r3, [pc, #116]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010e6:	2200      	movs	r2, #0
 80010e8:	625a      	str	r2, [r3, #36]	; 0x24
  hdma_rx.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80010ea:	4b1c      	ldr	r3, [pc, #112]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010ec:	2203      	movs	r2, #3
 80010ee:	629a      	str	r2, [r3, #40]	; 0x28
  hdma_rx.Init.MemBurst            = DMA_MBURST_INC4;
 80010f0:	4b1a      	ldr	r3, [pc, #104]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010f2:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 80010f6:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma_rx.Init.PeriphBurst         = DMA_PBURST_INC4; 
 80010f8:	4b18      	ldr	r3, [pc, #96]	; (800115c <HAL_UART_MspInit+0x1c8>)
 80010fa:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 80010fe:	631a      	str	r2, [r3, #48]	; 0x30

  HAL_DMA_Init(&hdma_rx);
 8001100:	4816      	ldr	r0, [pc, #88]	; (800115c <HAL_UART_MspInit+0x1c8>)
 8001102:	f000 fa23 	bl	800154c <HAL_DMA_Init>
    
  /* Associate the initialized DMA handle to the the UART handle */
  __HAL_LINKDMA(huart, hdmarx, hdma_rx);
 8001106:	687b      	ldr	r3, [r7, #4]
 8001108:	4a14      	ldr	r2, [pc, #80]	; (800115c <HAL_UART_MspInit+0x1c8>)
 800110a:	639a      	str	r2, [r3, #56]	; 0x38
 800110c:	4a13      	ldr	r2, [pc, #76]	; (800115c <HAL_UART_MspInit+0x1c8>)
 800110e:	687b      	ldr	r3, [r7, #4]
 8001110:	6393      	str	r3, [r2, #56]	; 0x38
    
  /*##-4- Configure the NVIC for DMA #########################################*/
  /* NVIC configuration for DMA transfer complete interrupt (USARTx_TX) */
  HAL_NVIC_SetPriority(USARTx_DMA_TX_IRQn, 0, 1);
 8001112:	2201      	movs	r2, #1
 8001114:	2100      	movs	r1, #0
 8001116:	2011      	movs	r0, #17
 8001118:	f000 f9af 	bl	800147a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USARTx_DMA_TX_IRQn);
 800111c:	2011      	movs	r0, #17
 800111e:	f000 f9c8 	bl	80014b2 <HAL_NVIC_EnableIRQ>
    
  /* NVIC configuration for DMA transfer complete interrupt (USARTx_RX) */
  HAL_NVIC_SetPriority(USARTx_DMA_RX_IRQn, 0, 0);   
 8001122:	2200      	movs	r2, #0
 8001124:	2100      	movs	r1, #0
 8001126:	2010      	movs	r0, #16
 8001128:	f000 f9a7 	bl	800147a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USARTx_DMA_RX_IRQn);
 800112c:	2010      	movs	r0, #16
 800112e:	f000 f9c0 	bl	80014b2 <HAL_NVIC_EnableIRQ>
  
  /* NVIC configuration for USART TC interrupt */
  HAL_NVIC_SetPriority(USARTx_IRQn, 0, 0);
 8001132:	2200      	movs	r2, #0
 8001134:	2100      	movs	r1, #0
 8001136:	2026      	movs	r0, #38	; 0x26
 8001138:	f000 f99f 	bl	800147a <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(USARTx_IRQn);
 800113c:	2026      	movs	r0, #38	; 0x26
 800113e:	f000 f9b8 	bl	80014b2 <HAL_NVIC_EnableIRQ>
}
 8001142:	bf00      	nop
 8001144:	3730      	adds	r7, #48	; 0x30
 8001146:	46bd      	mov	sp, r7
 8001148:	bd80      	pop	{r7, pc}
 800114a:	bf00      	nop
 800114c:	40023800 	andmi	r3, r2, r0, lsl #16
 8001150:	40020000 	andmi	r0, r2, r0
 8001154:	2000053c 	andcs	r0, r0, ip, lsr r5
 8001158:	400260a0 	andmi	r6, r2, r0, lsr #1
 800115c:	2000059c 	mulcs	r0, ip, r5
 8001160:	40026088 	andmi	r6, r2, r8, lsl #1

08001164 <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8001164:	b580      	push	{r7, lr}
 8001166:	af00      	add	r7, sp, #0
  printf("[%s] \n", __func__);
 8001168:	4902      	ldr	r1, [pc, #8]	; (8001174 <SVC_Handler+0x10>)
 800116a:	4803      	ldr	r0, [pc, #12]	; (8001178 <SVC_Handler+0x14>)
 800116c:	f001 ff86 	bl	800307c <printf_>
}
 8001170:	bf00      	nop
 8001172:	bd80      	pop	{r7, pc}
 8001174:	08003f08 	stmdaeq	r0, {r3, r8, r9, sl, fp, ip, sp}
 8001178:	08003ec0 	stmdaeq	r0, {r6, r7, r9, sl, fp, ip, sp}

0800117c <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 800117c:	b480      	push	{r7}
 800117e:	af00      	add	r7, sp, #0
  
}
 8001180:	bf00      	nop
 8001182:	46bd      	mov	sp, r7
 8001184:	bc80      	pop	{r7}
 8001186:	4770      	bx	lr

08001188 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001188:	b480      	push	{r7}
 800118a:	af00      	add	r7, sp, #0
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800118c:	4b12      	ldr	r3, [pc, #72]	; (80011d8 <SystemInit+0x50>)
 800118e:	681b      	ldr	r3, [r3, #0]
 8001190:	4a11      	ldr	r2, [pc, #68]	; (80011d8 <SystemInit+0x50>)
 8001192:	f043 0301 	orr.w	r3, r3, #1
 8001196:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001198:	4b0f      	ldr	r3, [pc, #60]	; (80011d8 <SystemInit+0x50>)
 800119a:	2200      	movs	r2, #0
 800119c:	609a      	str	r2, [r3, #8]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800119e:	4b0e      	ldr	r3, [pc, #56]	; (80011d8 <SystemInit+0x50>)
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	4a0d      	ldr	r2, [pc, #52]	; (80011d8 <SystemInit+0x50>)
 80011a4:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 80011a8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80011ac:	6013      	str	r3, [r2, #0]

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x24003010;
 80011ae:	4b0a      	ldr	r3, [pc, #40]	; (80011d8 <SystemInit+0x50>)
 80011b0:	4a0a      	ldr	r2, [pc, #40]	; (80011dc <SystemInit+0x54>)
 80011b2:	605a      	str	r2, [r3, #4]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 80011b4:	4b08      	ldr	r3, [pc, #32]	; (80011d8 <SystemInit+0x50>)
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	4a07      	ldr	r2, [pc, #28]	; (80011d8 <SystemInit+0x50>)
 80011ba:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80011be:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 80011c0:	4b05      	ldr	r3, [pc, #20]	; (80011d8 <SystemInit+0x50>)
 80011c2:	2200      	movs	r2, #0
 80011c4:	60da      	str	r2, [r3, #12]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80011c6:	4b06      	ldr	r3, [pc, #24]	; (80011e0 <SystemInit+0x58>)
 80011c8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80011cc:	609a      	str	r2, [r3, #8]
#endif
}
 80011ce:	bf00      	nop
 80011d0:	46bd      	mov	sp, r7
 80011d2:	bc80      	pop	{r7}
 80011d4:	4770      	bx	lr
 80011d6:	bf00      	nop
 80011d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80011dc:	24003010 	strcs	r3, [r0], #-16
 80011e0:	e000ed00 	and	lr, r0, r0, lsl #26

080011e4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80011e4:	b580      	push	{r7, lr}
 80011e6:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80011e8:	4b0e      	ldr	r3, [pc, #56]	; (8001224 <HAL_Init+0x40>)
 80011ea:	681b      	ldr	r3, [r3, #0]
 80011ec:	4a0d      	ldr	r2, [pc, #52]	; (8001224 <HAL_Init+0x40>)
 80011ee:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80011f2:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80011f4:	4b0b      	ldr	r3, [pc, #44]	; (8001224 <HAL_Init+0x40>)
 80011f6:	681b      	ldr	r3, [r3, #0]
 80011f8:	4a0a      	ldr	r2, [pc, #40]	; (8001224 <HAL_Init+0x40>)
 80011fa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80011fe:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001200:	4b08      	ldr	r3, [pc, #32]	; (8001224 <HAL_Init+0x40>)
 8001202:	681b      	ldr	r3, [r3, #0]
 8001204:	4a07      	ldr	r2, [pc, #28]	; (8001224 <HAL_Init+0x40>)
 8001206:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800120a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800120c:	2003      	movs	r0, #3
 800120e:	f000 f929 	bl	8001464 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8001212:	200f      	movs	r0, #15
 8001214:	f000 f808 	bl	8001228 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001218:	f000 f852 	bl	80012c0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800121c:	2300      	movs	r3, #0
}
 800121e:	4618      	mov	r0, r3
 8001220:	bd80      	pop	{r7, pc}
 8001222:	bf00      	nop
 8001224:	40023c00 	andmi	r3, r2, r0, lsl #24

08001228 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001228:	b580      	push	{r7, lr}
 800122a:	b082      	sub	sp, #8
 800122c:	af00      	add	r7, sp, #0
 800122e:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8001230:	4b12      	ldr	r3, [pc, #72]	; (800127c <HAL_InitTick+0x54>)
 8001232:	681a      	ldr	r2, [r3, #0]
 8001234:	4b12      	ldr	r3, [pc, #72]	; (8001280 <HAL_InitTick+0x58>)
 8001236:	781b      	ldrb	r3, [r3, #0]
 8001238:	4619      	mov	r1, r3
 800123a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800123e:	fbb3 f3f1 	udiv	r3, r3, r1
 8001242:	fbb2 f3f3 	udiv	r3, r2, r3
 8001246:	4618      	mov	r0, r3
 8001248:	f000 f941 	bl	80014ce <HAL_SYSTICK_Config>
 800124c:	4603      	mov	r3, r0
 800124e:	2b00      	cmp	r3, #0
 8001250:	d001      	beq.n	8001256 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8001252:	2301      	movs	r3, #1
 8001254:	e00e      	b.n	8001274 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	2b0f      	cmp	r3, #15
 800125a:	d80a      	bhi.n	8001272 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800125c:	2200      	movs	r2, #0
 800125e:	6879      	ldr	r1, [r7, #4]
 8001260:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001264:	f000 f909 	bl	800147a <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001268:	4a06      	ldr	r2, [pc, #24]	; (8001284 <HAL_InitTick+0x5c>)
 800126a:	687b      	ldr	r3, [r7, #4]
 800126c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800126e:	2300      	movs	r3, #0
 8001270:	e000      	b.n	8001274 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8001272:	2301      	movs	r3, #1
}
 8001274:	4618      	mov	r0, r3
 8001276:	3708      	adds	r7, #8
 8001278:	46bd      	mov	sp, r7
 800127a:	bd80      	pop	{r7, pc}
 800127c:	20000430 	andcs	r0, r0, r0, lsr r4
 8001280:	20000438 	andcs	r0, r0, r8, lsr r4
 8001284:	20000434 	andcs	r0, r0, r4, lsr r4

08001288 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001288:	b480      	push	{r7}
 800128a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 800128c:	4b05      	ldr	r3, [pc, #20]	; (80012a4 <HAL_IncTick+0x1c>)
 800128e:	781b      	ldrb	r3, [r3, #0]
 8001290:	461a      	mov	r2, r3
 8001292:	4b05      	ldr	r3, [pc, #20]	; (80012a8 <HAL_IncTick+0x20>)
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	4413      	add	r3, r2
 8001298:	4a03      	ldr	r2, [pc, #12]	; (80012a8 <HAL_IncTick+0x20>)
 800129a:	6013      	str	r3, [r2, #0]
}
 800129c:	bf00      	nop
 800129e:	46bd      	mov	sp, r7
 80012a0:	bc80      	pop	{r7}
 80012a2:	4770      	bx	lr
 80012a4:	20000438 	andcs	r0, r0, r8, lsr r4
 80012a8:	2000064c 	andcs	r0, r0, ip, asr #12

080012ac <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80012ac:	b480      	push	{r7}
 80012ae:	af00      	add	r7, sp, #0
  return uwTick;
 80012b0:	4b02      	ldr	r3, [pc, #8]	; (80012bc <HAL_GetTick+0x10>)
 80012b2:	681b      	ldr	r3, [r3, #0]
}
 80012b4:	4618      	mov	r0, r3
 80012b6:	46bd      	mov	sp, r7
 80012b8:	bc80      	pop	{r7}
 80012ba:	4770      	bx	lr
 80012bc:	2000064c 	andcs	r0, r0, ip, asr #12

080012c0 <HAL_MspInit>:
  * @note   This function is called from HAL_Init() function to perform system
  *         level initialization (GPIOs, clock, DMA, interrupt).
  * @retval None
  */
void HAL_MspInit(void)
{
 80012c0:	b480      	push	{r7}
 80012c2:	af00      	add	r7, sp, #0

}
 80012c4:	bf00      	nop
 80012c6:	46bd      	mov	sp, r7
 80012c8:	bc80      	pop	{r7}
 80012ca:	4770      	bx	lr

080012cc <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80012cc:	b480      	push	{r7}
 80012ce:	b085      	sub	sp, #20
 80012d0:	af00      	add	r7, sp, #0
 80012d2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	f003 0307 	and.w	r3, r3, #7
 80012da:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80012dc:	4b0c      	ldr	r3, [pc, #48]	; (8001310 <__NVIC_SetPriorityGrouping+0x44>)
 80012de:	68db      	ldr	r3, [r3, #12]
 80012e0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80012e2:	68ba      	ldr	r2, [r7, #8]
 80012e4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80012e8:	4013      	ands	r3, r2
 80012ea:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80012f0:	68bb      	ldr	r3, [r7, #8]
 80012f2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80012f4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80012f8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80012fc:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80012fe:	4a04      	ldr	r2, [pc, #16]	; (8001310 <__NVIC_SetPriorityGrouping+0x44>)
 8001300:	68bb      	ldr	r3, [r7, #8]
 8001302:	60d3      	str	r3, [r2, #12]
}
 8001304:	bf00      	nop
 8001306:	3714      	adds	r7, #20
 8001308:	46bd      	mov	sp, r7
 800130a:	bc80      	pop	{r7}
 800130c:	4770      	bx	lr
 800130e:	bf00      	nop
 8001310:	e000ed00 	and	lr, r0, r0, lsl #26

08001314 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001314:	b480      	push	{r7}
 8001316:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001318:	4b04      	ldr	r3, [pc, #16]	; (800132c <__NVIC_GetPriorityGrouping+0x18>)
 800131a:	68db      	ldr	r3, [r3, #12]
 800131c:	0a1b      	lsrs	r3, r3, #8
 800131e:	f003 0307 	and.w	r3, r3, #7
}
 8001322:	4618      	mov	r0, r3
 8001324:	46bd      	mov	sp, r7
 8001326:	bc80      	pop	{r7}
 8001328:	4770      	bx	lr
 800132a:	bf00      	nop
 800132c:	e000ed00 	and	lr, r0, r0, lsl #26

08001330 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001330:	b480      	push	{r7}
 8001332:	b083      	sub	sp, #12
 8001334:	af00      	add	r7, sp, #0
 8001336:	4603      	mov	r3, r0
 8001338:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800133a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800133e:	2b00      	cmp	r3, #0
 8001340:	db0b      	blt.n	800135a <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001342:	79fb      	ldrb	r3, [r7, #7]
 8001344:	f003 021f 	and.w	r2, r3, #31
 8001348:	4906      	ldr	r1, [pc, #24]	; (8001364 <__NVIC_EnableIRQ+0x34>)
 800134a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800134e:	095b      	lsrs	r3, r3, #5
 8001350:	2001      	movs	r0, #1
 8001352:	fa00 f202 	lsl.w	r2, r0, r2
 8001356:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 800135a:	bf00      	nop
 800135c:	370c      	adds	r7, #12
 800135e:	46bd      	mov	sp, r7
 8001360:	bc80      	pop	{r7}
 8001362:	4770      	bx	lr
 8001364:	e000e100 	and	lr, r0, r0, lsl #2

08001368 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001368:	b480      	push	{r7}
 800136a:	b083      	sub	sp, #12
 800136c:	af00      	add	r7, sp, #0
 800136e:	4603      	mov	r3, r0
 8001370:	6039      	str	r1, [r7, #0]
 8001372:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001374:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001378:	2b00      	cmp	r3, #0
 800137a:	db0a      	blt.n	8001392 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800137c:	683b      	ldr	r3, [r7, #0]
 800137e:	b2da      	uxtb	r2, r3
 8001380:	490c      	ldr	r1, [pc, #48]	; (80013b4 <__NVIC_SetPriority+0x4c>)
 8001382:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001386:	0112      	lsls	r2, r2, #4
 8001388:	b2d2      	uxtb	r2, r2
 800138a:	440b      	add	r3, r1
 800138c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001390:	e00a      	b.n	80013a8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001392:	683b      	ldr	r3, [r7, #0]
 8001394:	b2da      	uxtb	r2, r3
 8001396:	4908      	ldr	r1, [pc, #32]	; (80013b8 <__NVIC_SetPriority+0x50>)
 8001398:	79fb      	ldrb	r3, [r7, #7]
 800139a:	f003 030f 	and.w	r3, r3, #15
 800139e:	3b04      	subs	r3, #4
 80013a0:	0112      	lsls	r2, r2, #4
 80013a2:	b2d2      	uxtb	r2, r2
 80013a4:	440b      	add	r3, r1
 80013a6:	761a      	strb	r2, [r3, #24]
}
 80013a8:	bf00      	nop
 80013aa:	370c      	adds	r7, #12
 80013ac:	46bd      	mov	sp, r7
 80013ae:	bc80      	pop	{r7}
 80013b0:	4770      	bx	lr
 80013b2:	bf00      	nop
 80013b4:	e000e100 	and	lr, r0, r0, lsl #2
 80013b8:	e000ed00 	and	lr, r0, r0, lsl #26

080013bc <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80013bc:	b480      	push	{r7}
 80013be:	b089      	sub	sp, #36	; 0x24
 80013c0:	af00      	add	r7, sp, #0
 80013c2:	60f8      	str	r0, [r7, #12]
 80013c4:	60b9      	str	r1, [r7, #8]
 80013c6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80013c8:	68fb      	ldr	r3, [r7, #12]
 80013ca:	f003 0307 	and.w	r3, r3, #7
 80013ce:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80013d0:	69fb      	ldr	r3, [r7, #28]
 80013d2:	f1c3 0307 	rsb	r3, r3, #7
 80013d6:	2b04      	cmp	r3, #4
 80013d8:	bf28      	it	cs
 80013da:	2304      	movcs	r3, #4
 80013dc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80013de:	69fb      	ldr	r3, [r7, #28]
 80013e0:	3304      	adds	r3, #4
 80013e2:	2b06      	cmp	r3, #6
 80013e4:	d902      	bls.n	80013ec <NVIC_EncodePriority+0x30>
 80013e6:	69fb      	ldr	r3, [r7, #28]
 80013e8:	3b03      	subs	r3, #3
 80013ea:	e000      	b.n	80013ee <NVIC_EncodePriority+0x32>
 80013ec:	2300      	movs	r3, #0
 80013ee:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80013f0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80013f4:	69bb      	ldr	r3, [r7, #24]
 80013f6:	fa02 f303 	lsl.w	r3, r2, r3
 80013fa:	43da      	mvns	r2, r3
 80013fc:	68bb      	ldr	r3, [r7, #8]
 80013fe:	401a      	ands	r2, r3
 8001400:	697b      	ldr	r3, [r7, #20]
 8001402:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001404:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001408:	697b      	ldr	r3, [r7, #20]
 800140a:	fa01 f303 	lsl.w	r3, r1, r3
 800140e:	43d9      	mvns	r1, r3
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001414:	4313      	orrs	r3, r2
         );
}
 8001416:	4618      	mov	r0, r3
 8001418:	3724      	adds	r7, #36	; 0x24
 800141a:	46bd      	mov	sp, r7
 800141c:	bc80      	pop	{r7}
 800141e:	4770      	bx	lr

08001420 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	b082      	sub	sp, #8
 8001424:	af00      	add	r7, sp, #0
 8001426:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001428:	687b      	ldr	r3, [r7, #4]
 800142a:	3b01      	subs	r3, #1
 800142c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001430:	d301      	bcc.n	8001436 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8001432:	2301      	movs	r3, #1
 8001434:	e00f      	b.n	8001456 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001436:	4a0a      	ldr	r2, [pc, #40]	; (8001460 <SysTick_Config+0x40>)
 8001438:	687b      	ldr	r3, [r7, #4]
 800143a:	3b01      	subs	r3, #1
 800143c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800143e:	210f      	movs	r1, #15
 8001440:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001444:	f7ff ff90 	bl	8001368 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001448:	4b05      	ldr	r3, [pc, #20]	; (8001460 <SysTick_Config+0x40>)
 800144a:	2200      	movs	r2, #0
 800144c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800144e:	4b04      	ldr	r3, [pc, #16]	; (8001460 <SysTick_Config+0x40>)
 8001450:	2207      	movs	r2, #7
 8001452:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001454:	2300      	movs	r3, #0
}
 8001456:	4618      	mov	r0, r3
 8001458:	3708      	adds	r7, #8
 800145a:	46bd      	mov	sp, r7
 800145c:	bd80      	pop	{r7, pc}
 800145e:	bf00      	nop
 8001460:	e000e010 	and	lr, r0, r0, lsl r0

08001464 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001464:	b580      	push	{r7, lr}
 8001466:	b082      	sub	sp, #8
 8001468:	af00      	add	r7, sp, #0
 800146a:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 800146c:	6878      	ldr	r0, [r7, #4]
 800146e:	f7ff ff2d 	bl	80012cc <__NVIC_SetPriorityGrouping>
}
 8001472:	bf00      	nop
 8001474:	3708      	adds	r7, #8
 8001476:	46bd      	mov	sp, r7
 8001478:	bd80      	pop	{r7, pc}

0800147a <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800147a:	b580      	push	{r7, lr}
 800147c:	b086      	sub	sp, #24
 800147e:	af00      	add	r7, sp, #0
 8001480:	4603      	mov	r3, r0
 8001482:	60b9      	str	r1, [r7, #8]
 8001484:	607a      	str	r2, [r7, #4]
 8001486:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001488:	2300      	movs	r3, #0
 800148a:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 800148c:	f7ff ff42 	bl	8001314 <__NVIC_GetPriorityGrouping>
 8001490:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8001492:	687a      	ldr	r2, [r7, #4]
 8001494:	68b9      	ldr	r1, [r7, #8]
 8001496:	6978      	ldr	r0, [r7, #20]
 8001498:	f7ff ff90 	bl	80013bc <NVIC_EncodePriority>
 800149c:	4602      	mov	r2, r0
 800149e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80014a2:	4611      	mov	r1, r2
 80014a4:	4618      	mov	r0, r3
 80014a6:	f7ff ff5f 	bl	8001368 <__NVIC_SetPriority>
}
 80014aa:	bf00      	nop
 80014ac:	3718      	adds	r7, #24
 80014ae:	46bd      	mov	sp, r7
 80014b0:	bd80      	pop	{r7, pc}

080014b2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80014b2:	b580      	push	{r7, lr}
 80014b4:	b082      	sub	sp, #8
 80014b6:	af00      	add	r7, sp, #0
 80014b8:	4603      	mov	r3, r0
 80014ba:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80014bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80014c0:	4618      	mov	r0, r3
 80014c2:	f7ff ff35 	bl	8001330 <__NVIC_EnableIRQ>
}
 80014c6:	bf00      	nop
 80014c8:	3708      	adds	r7, #8
 80014ca:	46bd      	mov	sp, r7
 80014cc:	bd80      	pop	{r7, pc}

080014ce <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80014ce:	b580      	push	{r7, lr}
 80014d0:	b082      	sub	sp, #8
 80014d2:	af00      	add	r7, sp, #0
 80014d4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80014d6:	6878      	ldr	r0, [r7, #4]
 80014d8:	f7ff ffa2 	bl	8001420 <SysTick_Config>
 80014dc:	4603      	mov	r3, r0
}
 80014de:	4618      	mov	r0, r3
 80014e0:	3708      	adds	r7, #8
 80014e2:	46bd      	mov	sp, r7
 80014e4:	bd80      	pop	{r7, pc}
	...

080014e8 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80014e8:	b480      	push	{r7}
 80014ea:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80014ec:	4b02      	ldr	r3, [pc, #8]	; (80014f8 <HAL_RCC_GetHCLKFreq+0x10>)
 80014ee:	681b      	ldr	r3, [r3, #0]
}
 80014f0:	4618      	mov	r0, r3
 80014f2:	46bd      	mov	sp, r7
 80014f4:	bc80      	pop	{r7}
 80014f6:	4770      	bx	lr
 80014f8:	20000430 	andcs	r0, r0, r0, lsr r4

080014fc <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80014fc:	b580      	push	{r7, lr}
 80014fe:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8001500:	f7ff fff2 	bl	80014e8 <HAL_RCC_GetHCLKFreq>
 8001504:	4601      	mov	r1, r0
 8001506:	4b05      	ldr	r3, [pc, #20]	; (800151c <HAL_RCC_GetPCLK1Freq+0x20>)
 8001508:	689b      	ldr	r3, [r3, #8]
 800150a:	0a9b      	lsrs	r3, r3, #10
 800150c:	f003 0307 	and.w	r3, r3, #7
 8001510:	4a03      	ldr	r2, [pc, #12]	; (8001520 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001512:	5cd3      	ldrb	r3, [r2, r3]
 8001514:	fa21 f303 	lsr.w	r3, r1, r3
}
 8001518:	4618      	mov	r0, r3
 800151a:	bd80      	pop	{r7, pc}
 800151c:	40023800 	andmi	r3, r2, r0, lsl #16
 8001520:	08003f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, ip, sp}

08001524 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8001524:	b580      	push	{r7, lr}
 8001526:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8001528:	f7ff ffde 	bl	80014e8 <HAL_RCC_GetHCLKFreq>
 800152c:	4601      	mov	r1, r0
 800152e:	4b05      	ldr	r3, [pc, #20]	; (8001544 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001530:	689b      	ldr	r3, [r3, #8]
 8001532:	0b5b      	lsrs	r3, r3, #13
 8001534:	f003 0307 	and.w	r3, r3, #7
 8001538:	4a03      	ldr	r2, [pc, #12]	; (8001548 <HAL_RCC_GetPCLK2Freq+0x24>)
 800153a:	5cd3      	ldrb	r3, [r2, r3]
 800153c:	fa21 f303 	lsr.w	r3, r1, r3
}
 8001540:	4618      	mov	r0, r3
 8001542:	bd80      	pop	{r7, pc}
 8001544:	40023800 	andmi	r3, r2, r0, lsl #16
 8001548:	08003f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, ip, sp}

0800154c <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800154c:	b580      	push	{r7, lr}
 800154e:	b086      	sub	sp, #24
 8001550:	af00      	add	r7, sp, #0
 8001552:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8001554:	2300      	movs	r3, #0
 8001556:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8001558:	f7ff fea8 	bl	80012ac <HAL_GetTick>
 800155c:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800155e:	687b      	ldr	r3, [r7, #4]
 8001560:	2b00      	cmp	r3, #0
 8001562:	d101      	bne.n	8001568 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8001564:	2301      	movs	r3, #1
 8001566:	e099      	b.n	800169c <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }
  
  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8001568:	687b      	ldr	r3, [r7, #4]
 800156a:	2200      	movs	r2, #0
 800156c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8001570:	687b      	ldr	r3, [r7, #4]
 8001572:	2202      	movs	r2, #2
 8001574:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8001578:	687b      	ldr	r3, [r7, #4]
 800157a:	681b      	ldr	r3, [r3, #0]
 800157c:	681a      	ldr	r2, [r3, #0]
 800157e:	687b      	ldr	r3, [r7, #4]
 8001580:	681b      	ldr	r3, [r3, #0]
 8001582:	f022 0201 	bic.w	r2, r2, #1
 8001586:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8001588:	e00f      	b.n	80015aa <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800158a:	f7ff fe8f 	bl	80012ac <HAL_GetTick>
 800158e:	4602      	mov	r2, r0
 8001590:	693b      	ldr	r3, [r7, #16]
 8001592:	1ad3      	subs	r3, r2, r3
 8001594:	2b05      	cmp	r3, #5
 8001596:	d908      	bls.n	80015aa <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	2220      	movs	r2, #32
 800159c:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800159e:	687b      	ldr	r3, [r7, #4]
 80015a0:	2203      	movs	r2, #3
 80015a2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 80015a6:	2303      	movs	r3, #3
 80015a8:	e078      	b.n	800169c <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80015aa:	687b      	ldr	r3, [r7, #4]
 80015ac:	681b      	ldr	r3, [r3, #0]
 80015ae:	681b      	ldr	r3, [r3, #0]
 80015b0:	f003 0301 	and.w	r3, r3, #1
 80015b4:	2b00      	cmp	r3, #0
 80015b6:	d1e8      	bne.n	800158a <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 80015b8:	687b      	ldr	r3, [r7, #4]
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80015c0:	697a      	ldr	r2, [r7, #20]
 80015c2:	4b38      	ldr	r3, [pc, #224]	; (80016a4 <HAL_DMA_Init+0x158>)
 80015c4:	4013      	ands	r3, r2
 80015c6:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80015c8:	687b      	ldr	r3, [r7, #4]
 80015ca:	685a      	ldr	r2, [r3, #4]
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	689b      	ldr	r3, [r3, #8]
 80015d0:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80015d2:	687b      	ldr	r3, [r7, #4]
 80015d4:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80015d6:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80015d8:	687b      	ldr	r3, [r7, #4]
 80015da:	691b      	ldr	r3, [r3, #16]
 80015dc:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80015de:	687b      	ldr	r3, [r7, #4]
 80015e0:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80015e2:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80015e4:	687b      	ldr	r3, [r7, #4]
 80015e6:	699b      	ldr	r3, [r3, #24]
 80015e8:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80015ea:	687b      	ldr	r3, [r7, #4]
 80015ec:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80015ee:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	6a1b      	ldr	r3, [r3, #32]
 80015f4:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80015f6:	697a      	ldr	r2, [r7, #20]
 80015f8:	4313      	orrs	r3, r2
 80015fa:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001600:	2b04      	cmp	r3, #4
 8001602:	d107      	bne.n	8001614 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001608:	687b      	ldr	r3, [r7, #4]
 800160a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800160c:	4313      	orrs	r3, r2
 800160e:	697a      	ldr	r2, [r7, #20]
 8001610:	4313      	orrs	r3, r2
 8001612:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8001614:	687b      	ldr	r3, [r7, #4]
 8001616:	681b      	ldr	r3, [r3, #0]
 8001618:	697a      	ldr	r2, [r7, #20]
 800161a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	695b      	ldr	r3, [r3, #20]
 8001622:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8001624:	697b      	ldr	r3, [r7, #20]
 8001626:	f023 0307 	bic.w	r3, r3, #7
 800162a:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001630:	697a      	ldr	r2, [r7, #20]
 8001632:	4313      	orrs	r3, r2
 8001634:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800163a:	2b04      	cmp	r3, #4
 800163c:	d117      	bne.n	800166e <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800163e:	687b      	ldr	r3, [r7, #4]
 8001640:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001642:	697a      	ldr	r2, [r7, #20]
 8001644:	4313      	orrs	r3, r2
 8001646:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8001648:	687b      	ldr	r3, [r7, #4]
 800164a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800164c:	2b00      	cmp	r3, #0
 800164e:	d00e      	beq.n	800166e <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8001650:	6878      	ldr	r0, [r7, #4]
 8001652:	f000 f85d 	bl	8001710 <DMA_CheckFifoParam>
 8001656:	4603      	mov	r3, r0
 8001658:	2b00      	cmp	r3, #0
 800165a:	d008      	beq.n	800166e <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800165c:	687b      	ldr	r3, [r7, #4]
 800165e:	2240      	movs	r2, #64	; 0x40
 8001660:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	2201      	movs	r2, #1
 8001666:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 800166a:	2301      	movs	r3, #1
 800166c:	e016      	b.n	800169c <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 800166e:	687b      	ldr	r3, [r7, #4]
 8001670:	681b      	ldr	r3, [r3, #0]
 8001672:	697a      	ldr	r2, [r7, #20]
 8001674:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8001676:	6878      	ldr	r0, [r7, #4]
 8001678:	f000 f816 	bl	80016a8 <DMA_CalcBaseAndBitshift>
 800167c:	4603      	mov	r3, r0
 800167e:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8001684:	223f      	movs	r2, #63	; 0x3f
 8001686:	409a      	lsls	r2, r3
 8001688:	68fb      	ldr	r3, [r7, #12]
 800168a:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	2200      	movs	r2, #0
 8001690:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	2201      	movs	r2, #1
 8001696:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 800169a:	2300      	movs	r3, #0
}
 800169c:	4618      	mov	r0, r3
 800169e:	3718      	adds	r7, #24
 80016a0:	46bd      	mov	sp, r7
 80016a2:	bd80      	pop	{r7, pc}
 80016a4:	f010803f 			; <UNDEFINED> instruction: 0xf010803f

080016a8 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 80016a8:	b480      	push	{r7}
 80016aa:	b085      	sub	sp, #20
 80016ac:	af00      	add	r7, sp, #0
 80016ae:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	b2db      	uxtb	r3, r3
 80016b6:	3b10      	subs	r3, #16
 80016b8:	4a13      	ldr	r2, [pc, #76]	; (8001708 <DMA_CalcBaseAndBitshift+0x60>)
 80016ba:	fba2 2303 	umull	r2, r3, r2, r3
 80016be:	091b      	lsrs	r3, r3, #4
 80016c0:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80016c2:	4a12      	ldr	r2, [pc, #72]	; (800170c <DMA_CalcBaseAndBitshift+0x64>)
 80016c4:	68fb      	ldr	r3, [r7, #12]
 80016c6:	4413      	add	r3, r2
 80016c8:	781b      	ldrb	r3, [r3, #0]
 80016ca:	461a      	mov	r2, r3
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 80016d0:	68fb      	ldr	r3, [r7, #12]
 80016d2:	2b03      	cmp	r3, #3
 80016d4:	d909      	bls.n	80016ea <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	681b      	ldr	r3, [r3, #0]
 80016da:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80016de:	f023 0303 	bic.w	r3, r3, #3
 80016e2:	1d1a      	adds	r2, r3, #4
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	659a      	str	r2, [r3, #88]	; 0x58
 80016e8:	e007      	b.n	80016fa <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 80016ea:	687b      	ldr	r3, [r7, #4]
 80016ec:	681b      	ldr	r3, [r3, #0]
 80016ee:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80016f2:	f023 0303 	bic.w	r3, r3, #3
 80016f6:	687a      	ldr	r2, [r7, #4]
 80016f8:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 80016fa:	687b      	ldr	r3, [r7, #4]
 80016fc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 80016fe:	4618      	mov	r0, r3
 8001700:	3714      	adds	r7, #20
 8001702:	46bd      	mov	sp, r7
 8001704:	bc80      	pop	{r7}
 8001706:	4770      	bx	lr
 8001708:	aaaaaaab 	bge	6aac1bc <_Min_Stack_Size+0x6aabdbc>
 800170c:	08003f1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, fp, ip, sp}

08001710 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8001710:	b480      	push	{r7}
 8001712:	b085      	sub	sp, #20
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8001718:	2300      	movs	r3, #0
 800171a:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 800171c:	687b      	ldr	r3, [r7, #4]
 800171e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001720:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	699b      	ldr	r3, [r3, #24]
 8001726:	2b00      	cmp	r3, #0
 8001728:	d11f      	bne.n	800176a <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 800172a:	68bb      	ldr	r3, [r7, #8]
 800172c:	2b03      	cmp	r3, #3
 800172e:	d856      	bhi.n	80017de <DMA_CheckFifoParam+0xce>
 8001730:	a201      	add	r2, pc, #4	; (adr r2, 8001738 <DMA_CheckFifoParam+0x28>)
 8001732:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001736:	bf00      	nop
 8001738:	08001749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, ip}
 800173c:	0800175b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, r9, sl, ip}
 8001740:	08001749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, ip}
 8001744:	080017df 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, ip}
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800174c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8001750:	2b00      	cmp	r3, #0
 8001752:	d046      	beq.n	80017e2 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8001754:	2301      	movs	r3, #1
 8001756:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8001758:	e043      	b.n	80017e2 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800175a:	687b      	ldr	r3, [r7, #4]
 800175c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800175e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8001762:	d140      	bne.n	80017e6 <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8001764:	2301      	movs	r3, #1
 8001766:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8001768:	e03d      	b.n	80017e6 <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	699b      	ldr	r3, [r3, #24]
 800176e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8001772:	d121      	bne.n	80017b8 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8001774:	68bb      	ldr	r3, [r7, #8]
 8001776:	2b03      	cmp	r3, #3
 8001778:	d837      	bhi.n	80017ea <DMA_CheckFifoParam+0xda>
 800177a:	a201      	add	r2, pc, #4	; (adr r2, 8001780 <DMA_CheckFifoParam+0x70>)
 800177c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001780:	08001791 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, ip}
 8001784:	08001797 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, r9, sl, ip}
 8001788:	08001791 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, ip}
 800178c:	080017a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, ip}
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8001790:	2301      	movs	r3, #1
 8001792:	73fb      	strb	r3, [r7, #15]
      break;
 8001794:	e030      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800179a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800179e:	2b00      	cmp	r3, #0
 80017a0:	d025      	beq.n	80017ee <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 80017a2:	2301      	movs	r3, #1
 80017a4:	73fb      	strb	r3, [r7, #15]
      }
      break;
 80017a6:	e022      	b.n	80017ee <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80017a8:	687b      	ldr	r3, [r7, #4]
 80017aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80017ac:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80017b0:	d11f      	bne.n	80017f2 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 80017b2:	2301      	movs	r3, #1
 80017b4:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 80017b6:	e01c      	b.n	80017f2 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 80017b8:	68bb      	ldr	r3, [r7, #8]
 80017ba:	2b02      	cmp	r3, #2
 80017bc:	d903      	bls.n	80017c6 <DMA_CheckFifoParam+0xb6>
 80017be:	68bb      	ldr	r3, [r7, #8]
 80017c0:	2b03      	cmp	r3, #3
 80017c2:	d003      	beq.n	80017cc <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 80017c4:	e018      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 80017c6:	2301      	movs	r3, #1
 80017c8:	73fb      	strb	r3, [r7, #15]
      break;
 80017ca:	e015      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80017d0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d00e      	beq.n	80017f6 <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 80017d8:	2301      	movs	r3, #1
 80017da:	73fb      	strb	r3, [r7, #15]
      break;
 80017dc:	e00b      	b.n	80017f6 <DMA_CheckFifoParam+0xe6>
      break;
 80017de:	bf00      	nop
 80017e0:	e00a      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      break;
 80017e2:	bf00      	nop
 80017e4:	e008      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      break;
 80017e6:	bf00      	nop
 80017e8:	e006      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      break;
 80017ea:	bf00      	nop
 80017ec:	e004      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      break;
 80017ee:	bf00      	nop
 80017f0:	e002      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      break;   
 80017f2:	bf00      	nop
 80017f4:	e000      	b.n	80017f8 <DMA_CheckFifoParam+0xe8>
      break;
 80017f6:	bf00      	nop
    }
  } 
  
  return status; 
 80017f8:	7bfb      	ldrb	r3, [r7, #15]
}
 80017fa:	4618      	mov	r0, r3
 80017fc:	3714      	adds	r7, #20
 80017fe:	46bd      	mov	sp, r7
 8001800:	bc80      	pop	{r7}
 8001802:	4770      	bx	lr

08001804 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001804:	b480      	push	{r7}
 8001806:	b089      	sub	sp, #36	; 0x24
 8001808:	af00      	add	r7, sp, #0
 800180a:	6078      	str	r0, [r7, #4]
 800180c:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 800180e:	2300      	movs	r3, #0
 8001810:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8001812:	2300      	movs	r3, #0
 8001814:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8001816:	2300      	movs	r3, #0
 8001818:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 800181a:	2300      	movs	r3, #0
 800181c:	61fb      	str	r3, [r7, #28]
 800181e:	e16b      	b.n	8001af8 <HAL_GPIO_Init+0x2f4>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8001820:	2201      	movs	r2, #1
 8001822:	69fb      	ldr	r3, [r7, #28]
 8001824:	fa02 f303 	lsl.w	r3, r2, r3
 8001828:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800182a:	683b      	ldr	r3, [r7, #0]
 800182c:	681b      	ldr	r3, [r3, #0]
 800182e:	697a      	ldr	r2, [r7, #20]
 8001830:	4013      	ands	r3, r2
 8001832:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8001834:	693a      	ldr	r2, [r7, #16]
 8001836:	697b      	ldr	r3, [r7, #20]
 8001838:	429a      	cmp	r2, r3
 800183a:	f040 815a 	bne.w	8001af2 <HAL_GPIO_Init+0x2ee>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800183e:	683b      	ldr	r3, [r7, #0]
 8001840:	685b      	ldr	r3, [r3, #4]
 8001842:	f003 0303 	and.w	r3, r3, #3
 8001846:	2b01      	cmp	r3, #1
 8001848:	d005      	beq.n	8001856 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800184a:	683b      	ldr	r3, [r7, #0]
 800184c:	685b      	ldr	r3, [r3, #4]
 800184e:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8001852:	2b02      	cmp	r3, #2
 8001854:	d130      	bne.n	80018b8 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8001856:	687b      	ldr	r3, [r7, #4]
 8001858:	689b      	ldr	r3, [r3, #8]
 800185a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800185c:	69fb      	ldr	r3, [r7, #28]
 800185e:	005b      	lsls	r3, r3, #1
 8001860:	2203      	movs	r2, #3
 8001862:	fa02 f303 	lsl.w	r3, r2, r3
 8001866:	43db      	mvns	r3, r3
 8001868:	69ba      	ldr	r2, [r7, #24]
 800186a:	4013      	ands	r3, r2
 800186c:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800186e:	683b      	ldr	r3, [r7, #0]
 8001870:	68da      	ldr	r2, [r3, #12]
 8001872:	69fb      	ldr	r3, [r7, #28]
 8001874:	005b      	lsls	r3, r3, #1
 8001876:	fa02 f303 	lsl.w	r3, r2, r3
 800187a:	69ba      	ldr	r2, [r7, #24]
 800187c:	4313      	orrs	r3, r2
 800187e:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	69ba      	ldr	r2, [r7, #24]
 8001884:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	685b      	ldr	r3, [r3, #4]
 800188a:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800188c:	2201      	movs	r2, #1
 800188e:	69fb      	ldr	r3, [r7, #28]
 8001890:	fa02 f303 	lsl.w	r3, r2, r3
 8001894:	43db      	mvns	r3, r3
 8001896:	69ba      	ldr	r2, [r7, #24]
 8001898:	4013      	ands	r3, r2
 800189a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800189c:	683b      	ldr	r3, [r7, #0]
 800189e:	685b      	ldr	r3, [r3, #4]
 80018a0:	091b      	lsrs	r3, r3, #4
 80018a2:	f003 0201 	and.w	r2, r3, #1
 80018a6:	69fb      	ldr	r3, [r7, #28]
 80018a8:	fa02 f303 	lsl.w	r3, r2, r3
 80018ac:	69ba      	ldr	r2, [r7, #24]
 80018ae:	4313      	orrs	r3, r2
 80018b0:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 80018b2:	687b      	ldr	r3, [r7, #4]
 80018b4:	69ba      	ldr	r2, [r7, #24]
 80018b6:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80018b8:	683b      	ldr	r3, [r7, #0]
 80018ba:	685b      	ldr	r3, [r3, #4]
 80018bc:	f003 0303 	and.w	r3, r3, #3
 80018c0:	2b03      	cmp	r3, #3
 80018c2:	d017      	beq.n	80018f4 <HAL_GPIO_Init+0xf0>
      {
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	68db      	ldr	r3, [r3, #12]
 80018c8:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80018ca:	69fb      	ldr	r3, [r7, #28]
 80018cc:	005b      	lsls	r3, r3, #1
 80018ce:	2203      	movs	r2, #3
 80018d0:	fa02 f303 	lsl.w	r3, r2, r3
 80018d4:	43db      	mvns	r3, r3
 80018d6:	69ba      	ldr	r2, [r7, #24]
 80018d8:	4013      	ands	r3, r2
 80018da:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80018dc:	683b      	ldr	r3, [r7, #0]
 80018de:	689a      	ldr	r2, [r3, #8]
 80018e0:	69fb      	ldr	r3, [r7, #28]
 80018e2:	005b      	lsls	r3, r3, #1
 80018e4:	fa02 f303 	lsl.w	r3, r2, r3
 80018e8:	69ba      	ldr	r2, [r7, #24]
 80018ea:	4313      	orrs	r3, r2
 80018ec:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 80018ee:	687b      	ldr	r3, [r7, #4]
 80018f0:	69ba      	ldr	r2, [r7, #24]
 80018f2:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80018f4:	683b      	ldr	r3, [r7, #0]
 80018f6:	685b      	ldr	r3, [r3, #4]
 80018f8:	f003 0303 	and.w	r3, r3, #3
 80018fc:	2b02      	cmp	r3, #2
 80018fe:	d123      	bne.n	8001948 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8001900:	69fb      	ldr	r3, [r7, #28]
 8001902:	08da      	lsrs	r2, r3, #3
 8001904:	687b      	ldr	r3, [r7, #4]
 8001906:	3208      	adds	r2, #8
 8001908:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800190c:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800190e:	69fb      	ldr	r3, [r7, #28]
 8001910:	f003 0307 	and.w	r3, r3, #7
 8001914:	009b      	lsls	r3, r3, #2
 8001916:	220f      	movs	r2, #15
 8001918:	fa02 f303 	lsl.w	r3, r2, r3
 800191c:	43db      	mvns	r3, r3
 800191e:	69ba      	ldr	r2, [r7, #24]
 8001920:	4013      	ands	r3, r2
 8001922:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001924:	683b      	ldr	r3, [r7, #0]
 8001926:	691a      	ldr	r2, [r3, #16]
 8001928:	69fb      	ldr	r3, [r7, #28]
 800192a:	f003 0307 	and.w	r3, r3, #7
 800192e:	009b      	lsls	r3, r3, #2
 8001930:	fa02 f303 	lsl.w	r3, r2, r3
 8001934:	69ba      	ldr	r2, [r7, #24]
 8001936:	4313      	orrs	r3, r2
 8001938:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 800193a:	69fb      	ldr	r3, [r7, #28]
 800193c:	08da      	lsrs	r2, r3, #3
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	3208      	adds	r2, #8
 8001942:	69b9      	ldr	r1, [r7, #24]
 8001944:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8001948:	687b      	ldr	r3, [r7, #4]
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800194e:	69fb      	ldr	r3, [r7, #28]
 8001950:	005b      	lsls	r3, r3, #1
 8001952:	2203      	movs	r2, #3
 8001954:	fa02 f303 	lsl.w	r3, r2, r3
 8001958:	43db      	mvns	r3, r3
 800195a:	69ba      	ldr	r2, [r7, #24]
 800195c:	4013      	ands	r3, r2
 800195e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001960:	683b      	ldr	r3, [r7, #0]
 8001962:	685b      	ldr	r3, [r3, #4]
 8001964:	f003 0203 	and.w	r2, r3, #3
 8001968:	69fb      	ldr	r3, [r7, #28]
 800196a:	005b      	lsls	r3, r3, #1
 800196c:	fa02 f303 	lsl.w	r3, r2, r3
 8001970:	69ba      	ldr	r2, [r7, #24]
 8001972:	4313      	orrs	r3, r2
 8001974:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	69ba      	ldr	r2, [r7, #24]
 800197a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800197c:	683b      	ldr	r3, [r7, #0]
 800197e:	685b      	ldr	r3, [r3, #4]
 8001980:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001984:	2b00      	cmp	r3, #0
 8001986:	f000 80b4 	beq.w	8001af2 <HAL_GPIO_Init+0x2ee>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800198a:	2300      	movs	r3, #0
 800198c:	60fb      	str	r3, [r7, #12]
 800198e:	4b5f      	ldr	r3, [pc, #380]	; (8001b0c <HAL_GPIO_Init+0x308>)
 8001990:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001992:	4a5e      	ldr	r2, [pc, #376]	; (8001b0c <HAL_GPIO_Init+0x308>)
 8001994:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001998:	6453      	str	r3, [r2, #68]	; 0x44
 800199a:	4b5c      	ldr	r3, [pc, #368]	; (8001b0c <HAL_GPIO_Init+0x308>)
 800199c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800199e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80019a2:	60fb      	str	r3, [r7, #12]
 80019a4:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 80019a6:	4a5a      	ldr	r2, [pc, #360]	; (8001b10 <HAL_GPIO_Init+0x30c>)
 80019a8:	69fb      	ldr	r3, [r7, #28]
 80019aa:	089b      	lsrs	r3, r3, #2
 80019ac:	3302      	adds	r3, #2
 80019ae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80019b2:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 80019b4:	69fb      	ldr	r3, [r7, #28]
 80019b6:	f003 0303 	and.w	r3, r3, #3
 80019ba:	009b      	lsls	r3, r3, #2
 80019bc:	220f      	movs	r2, #15
 80019be:	fa02 f303 	lsl.w	r3, r2, r3
 80019c2:	43db      	mvns	r3, r3
 80019c4:	69ba      	ldr	r2, [r7, #24]
 80019c6:	4013      	ands	r3, r2
 80019c8:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80019ca:	687b      	ldr	r3, [r7, #4]
 80019cc:	4a51      	ldr	r2, [pc, #324]	; (8001b14 <HAL_GPIO_Init+0x310>)
 80019ce:	4293      	cmp	r3, r2
 80019d0:	d02b      	beq.n	8001a2a <HAL_GPIO_Init+0x226>
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	4a50      	ldr	r2, [pc, #320]	; (8001b18 <HAL_GPIO_Init+0x314>)
 80019d6:	4293      	cmp	r3, r2
 80019d8:	d025      	beq.n	8001a26 <HAL_GPIO_Init+0x222>
 80019da:	687b      	ldr	r3, [r7, #4]
 80019dc:	4a4f      	ldr	r2, [pc, #316]	; (8001b1c <HAL_GPIO_Init+0x318>)
 80019de:	4293      	cmp	r3, r2
 80019e0:	d01f      	beq.n	8001a22 <HAL_GPIO_Init+0x21e>
 80019e2:	687b      	ldr	r3, [r7, #4]
 80019e4:	4a4e      	ldr	r2, [pc, #312]	; (8001b20 <HAL_GPIO_Init+0x31c>)
 80019e6:	4293      	cmp	r3, r2
 80019e8:	d019      	beq.n	8001a1e <HAL_GPIO_Init+0x21a>
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	4a4d      	ldr	r2, [pc, #308]	; (8001b24 <HAL_GPIO_Init+0x320>)
 80019ee:	4293      	cmp	r3, r2
 80019f0:	d013      	beq.n	8001a1a <HAL_GPIO_Init+0x216>
 80019f2:	687b      	ldr	r3, [r7, #4]
 80019f4:	4a4c      	ldr	r2, [pc, #304]	; (8001b28 <HAL_GPIO_Init+0x324>)
 80019f6:	4293      	cmp	r3, r2
 80019f8:	d00d      	beq.n	8001a16 <HAL_GPIO_Init+0x212>
 80019fa:	687b      	ldr	r3, [r7, #4]
 80019fc:	4a4b      	ldr	r2, [pc, #300]	; (8001b2c <HAL_GPIO_Init+0x328>)
 80019fe:	4293      	cmp	r3, r2
 8001a00:	d007      	beq.n	8001a12 <HAL_GPIO_Init+0x20e>
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	4a4a      	ldr	r2, [pc, #296]	; (8001b30 <HAL_GPIO_Init+0x32c>)
 8001a06:	4293      	cmp	r3, r2
 8001a08:	d101      	bne.n	8001a0e <HAL_GPIO_Init+0x20a>
 8001a0a:	2307      	movs	r3, #7
 8001a0c:	e00e      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a0e:	2308      	movs	r3, #8
 8001a10:	e00c      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a12:	2306      	movs	r3, #6
 8001a14:	e00a      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a16:	2305      	movs	r3, #5
 8001a18:	e008      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a1a:	2304      	movs	r3, #4
 8001a1c:	e006      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a1e:	2303      	movs	r3, #3
 8001a20:	e004      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a22:	2302      	movs	r3, #2
 8001a24:	e002      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a26:	2301      	movs	r3, #1
 8001a28:	e000      	b.n	8001a2c <HAL_GPIO_Init+0x228>
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	69fa      	ldr	r2, [r7, #28]
 8001a2e:	f002 0203 	and.w	r2, r2, #3
 8001a32:	0092      	lsls	r2, r2, #2
 8001a34:	4093      	lsls	r3, r2
 8001a36:	69ba      	ldr	r2, [r7, #24]
 8001a38:	4313      	orrs	r3, r2
 8001a3a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001a3c:	4934      	ldr	r1, [pc, #208]	; (8001b10 <HAL_GPIO_Init+0x30c>)
 8001a3e:	69fb      	ldr	r3, [r7, #28]
 8001a40:	089b      	lsrs	r3, r3, #2
 8001a42:	3302      	adds	r3, #2
 8001a44:	69ba      	ldr	r2, [r7, #24]
 8001a46:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8001a4a:	4b3a      	ldr	r3, [pc, #232]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001a50:	693b      	ldr	r3, [r7, #16]
 8001a52:	43db      	mvns	r3, r3
 8001a54:	69ba      	ldr	r2, [r7, #24]
 8001a56:	4013      	ands	r3, r2
 8001a58:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8001a5a:	683b      	ldr	r3, [r7, #0]
 8001a5c:	685b      	ldr	r3, [r3, #4]
 8001a5e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001a62:	2b00      	cmp	r3, #0
 8001a64:	d003      	beq.n	8001a6e <HAL_GPIO_Init+0x26a>
        {
          temp |= iocurrent;
 8001a66:	69ba      	ldr	r2, [r7, #24]
 8001a68:	693b      	ldr	r3, [r7, #16]
 8001a6a:	4313      	orrs	r3, r2
 8001a6c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8001a6e:	4a31      	ldr	r2, [pc, #196]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001a70:	69bb      	ldr	r3, [r7, #24]
 8001a72:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8001a74:	4b2f      	ldr	r3, [pc, #188]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001a76:	685b      	ldr	r3, [r3, #4]
 8001a78:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001a7a:	693b      	ldr	r3, [r7, #16]
 8001a7c:	43db      	mvns	r3, r3
 8001a7e:	69ba      	ldr	r2, [r7, #24]
 8001a80:	4013      	ands	r3, r2
 8001a82:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8001a84:	683b      	ldr	r3, [r7, #0]
 8001a86:	685b      	ldr	r3, [r3, #4]
 8001a88:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001a8c:	2b00      	cmp	r3, #0
 8001a8e:	d003      	beq.n	8001a98 <HAL_GPIO_Init+0x294>
        {
          temp |= iocurrent;
 8001a90:	69ba      	ldr	r2, [r7, #24]
 8001a92:	693b      	ldr	r3, [r7, #16]
 8001a94:	4313      	orrs	r3, r2
 8001a96:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8001a98:	4a26      	ldr	r2, [pc, #152]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001a9a:	69bb      	ldr	r3, [r7, #24]
 8001a9c:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001a9e:	4b25      	ldr	r3, [pc, #148]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001aa0:	689b      	ldr	r3, [r3, #8]
 8001aa2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001aa4:	693b      	ldr	r3, [r7, #16]
 8001aa6:	43db      	mvns	r3, r3
 8001aa8:	69ba      	ldr	r2, [r7, #24]
 8001aaa:	4013      	ands	r3, r2
 8001aac:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001aae:	683b      	ldr	r3, [r7, #0]
 8001ab0:	685b      	ldr	r3, [r3, #4]
 8001ab2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d003      	beq.n	8001ac2 <HAL_GPIO_Init+0x2be>
        {
          temp |= iocurrent;
 8001aba:	69ba      	ldr	r2, [r7, #24]
 8001abc:	693b      	ldr	r3, [r7, #16]
 8001abe:	4313      	orrs	r3, r2
 8001ac0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8001ac2:	4a1c      	ldr	r2, [pc, #112]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001ac4:	69bb      	ldr	r3, [r7, #24]
 8001ac6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8001ac8:	4b1a      	ldr	r3, [pc, #104]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001aca:	68db      	ldr	r3, [r3, #12]
 8001acc:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8001ace:	693b      	ldr	r3, [r7, #16]
 8001ad0:	43db      	mvns	r3, r3
 8001ad2:	69ba      	ldr	r2, [r7, #24]
 8001ad4:	4013      	ands	r3, r2
 8001ad6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8001ad8:	683b      	ldr	r3, [r7, #0]
 8001ada:	685b      	ldr	r3, [r3, #4]
 8001adc:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	d003      	beq.n	8001aec <HAL_GPIO_Init+0x2e8>
        {
          temp |= iocurrent;
 8001ae4:	69ba      	ldr	r2, [r7, #24]
 8001ae6:	693b      	ldr	r3, [r7, #16]
 8001ae8:	4313      	orrs	r3, r2
 8001aea:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8001aec:	4a11      	ldr	r2, [pc, #68]	; (8001b34 <HAL_GPIO_Init+0x330>)
 8001aee:	69bb      	ldr	r3, [r7, #24]
 8001af0:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8001af2:	69fb      	ldr	r3, [r7, #28]
 8001af4:	3301      	adds	r3, #1
 8001af6:	61fb      	str	r3, [r7, #28]
 8001af8:	69fb      	ldr	r3, [r7, #28]
 8001afa:	2b0f      	cmp	r3, #15
 8001afc:	f67f ae90 	bls.w	8001820 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8001b00:	bf00      	nop
 8001b02:	3724      	adds	r7, #36	; 0x24
 8001b04:	46bd      	mov	sp, r7
 8001b06:	bc80      	pop	{r7}
 8001b08:	4770      	bx	lr
 8001b0a:	bf00      	nop
 8001b0c:	40023800 	andmi	r3, r2, r0, lsl #16
 8001b10:	40013800 	andmi	r3, r1, r0, lsl #16
 8001b14:	40020000 	andmi	r0, r2, r0
 8001b18:	40020400 	andmi	r0, r2, r0, lsl #8
 8001b1c:	40020800 	andmi	r0, r2, r0, lsl #16
 8001b20:	40020c00 	andmi	r0, r2, r0, lsl #24
 8001b24:	40021000 	andmi	r1, r2, r0
 8001b28:	40021400 	andmi	r1, r2, r0, lsl #8
 8001b2c:	40021800 	andmi	r1, r2, r0, lsl #16
 8001b30:	40021c00 	andmi	r1, r2, r0, lsl #24
 8001b34:	40013c00 	andmi	r3, r1, r0, lsl #24

08001b38 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8001b38:	b580      	push	{r7, lr}
 8001b3a:	b082      	sub	sp, #8
 8001b3c:	af00      	add	r7, sp, #0
 8001b3e:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	2b00      	cmp	r3, #0
 8001b44:	d101      	bne.n	8001b4a <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8001b46:	2301      	movs	r3, #1
 8001b48:	e03f      	b.n	8001bca <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8001b4a:	687b      	ldr	r3, [r7, #4]
 8001b4c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8001b50:	b2db      	uxtb	r3, r3
 8001b52:	2b00      	cmp	r3, #0
 8001b54:	d106      	bne.n	8001b64 <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	2200      	movs	r2, #0
 8001b5a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8001b5e:	6878      	ldr	r0, [r7, #4]
 8001b60:	f7ff fa18 	bl	8000f94 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8001b64:	687b      	ldr	r3, [r7, #4]
 8001b66:	2224      	movs	r2, #36	; 0x24
 8001b68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	68da      	ldr	r2, [r3, #12]
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	681b      	ldr	r3, [r3, #0]
 8001b76:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8001b7a:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 8001b7c:	6878      	ldr	r0, [r7, #4]
 8001b7e:	f000 f829 	bl	8001bd4 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	681b      	ldr	r3, [r3, #0]
 8001b86:	691a      	ldr	r2, [r3, #16]
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	681b      	ldr	r3, [r3, #0]
 8001b8c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8001b90:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	681b      	ldr	r3, [r3, #0]
 8001b96:	695a      	ldr	r2, [r3, #20]
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8001ba0:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	68da      	ldr	r2, [r3, #12]
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8001bb0:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	2200      	movs	r2, #0
 8001bb6:	641a      	str	r2, [r3, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	2220      	movs	r2, #32
 8001bbc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	2220      	movs	r2, #32
 8001bc4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 8001bc8:	2300      	movs	r3, #0
}
 8001bca:	4618      	mov	r0, r3
 8001bcc:	3708      	adds	r7, #8
 8001bce:	46bd      	mov	sp, r7
 8001bd0:	bd80      	pop	{r7, pc}
	...

08001bd4 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8001bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001bd8:	b09f      	sub	sp, #124	; 0x7c
 8001bda:	af00      	add	r7, sp, #0
 8001bdc:	66f8      	str	r0, [r7, #108]	; 0x6c
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8001bde:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	691b      	ldr	r3, [r3, #16]
 8001be4:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8001be8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001bea:	68d9      	ldr	r1, [r3, #12]
 8001bec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001bee:	681a      	ldr	r2, [r3, #0]
 8001bf0:	ea40 0301 	orr.w	r3, r0, r1
 8001bf4:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8001bf6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001bf8:	689a      	ldr	r2, [r3, #8]
 8001bfa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001bfc:	691b      	ldr	r3, [r3, #16]
 8001bfe:	431a      	orrs	r2, r3
 8001c00:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c02:	695b      	ldr	r3, [r3, #20]
 8001c04:	431a      	orrs	r2, r3
 8001c06:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c08:	69db      	ldr	r3, [r3, #28]
 8001c0a:	4313      	orrs	r3, r2
 8001c0c:	673b      	str	r3, [r7, #112]	; 0x70
  MODIFY_REG(huart->Instance->CR1,
 8001c0e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c10:	681b      	ldr	r3, [r3, #0]
 8001c12:	68db      	ldr	r3, [r3, #12]
 8001c14:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8001c18:	f021 010c 	bic.w	r1, r1, #12
 8001c1c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c1e:	681a      	ldr	r2, [r3, #0]
 8001c20:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8001c22:	430b      	orrs	r3, r1
 8001c24:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8001c26:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c28:	681b      	ldr	r3, [r3, #0]
 8001c2a:	695b      	ldr	r3, [r3, #20]
 8001c2c:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8001c30:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c32:	6999      	ldr	r1, [r3, #24]
 8001c34:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c36:	681a      	ldr	r2, [r3, #0]
 8001c38:	ea40 0301 	orr.w	r3, r0, r1
 8001c3c:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8001c3e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c40:	681a      	ldr	r2, [r3, #0]
 8001c42:	4b6d      	ldr	r3, [pc, #436]	; (8001df8 <UART_SetConfig+0x224>)
 8001c44:	429a      	cmp	r2, r3
 8001c46:	d004      	beq.n	8001c52 <UART_SetConfig+0x7e>
 8001c48:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c4a:	681a      	ldr	r2, [r3, #0]
 8001c4c:	4b6b      	ldr	r3, [pc, #428]	; (8001dfc <UART_SetConfig+0x228>)
 8001c4e:	429a      	cmp	r2, r3
 8001c50:	d103      	bne.n	8001c5a <UART_SetConfig+0x86>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8001c52:	f7ff fc67 	bl	8001524 <HAL_RCC_GetPCLK2Freq>
 8001c56:	6778      	str	r0, [r7, #116]	; 0x74
 8001c58:	e002      	b.n	8001c60 <UART_SetConfig+0x8c>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8001c5a:	f7ff fc4f 	bl	80014fc <HAL_RCC_GetPCLK1Freq>
 8001c5e:	6778      	str	r0, [r7, #116]	; 0x74
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8001c60:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001c62:	69db      	ldr	r3, [r3, #28]
 8001c64:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001c68:	f040 80cc 	bne.w	8001e04 <UART_SetConfig+0x230>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8001c6c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001c6e:	461d      	mov	r5, r3
 8001c70:	f04f 0600 	mov.w	r6, #0
 8001c74:	462b      	mov	r3, r5
 8001c76:	4634      	mov	r4, r6
 8001c78:	eb13 0a03 	adds.w	sl, r3, r3
 8001c7c:	eb44 0b04 	adc.w	fp, r4, r4
 8001c80:	4653      	mov	r3, sl
 8001c82:	465c      	mov	r4, fp
 8001c84:	195b      	adds	r3, r3, r5
 8001c86:	eb46 0404 	adc.w	r4, r6, r4
 8001c8a:	f04f 0100 	mov.w	r1, #0
 8001c8e:	f04f 0200 	mov.w	r2, #0
 8001c92:	00e2      	lsls	r2, r4, #3
 8001c94:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8001c98:	00d9      	lsls	r1, r3, #3
 8001c9a:	460b      	mov	r3, r1
 8001c9c:	4614      	mov	r4, r2
 8001c9e:	195a      	adds	r2, r3, r5
 8001ca0:	663a      	str	r2, [r7, #96]	; 0x60
 8001ca2:	eb44 0306 	adc.w	r3, r4, r6
 8001ca6:	667b      	str	r3, [r7, #100]	; 0x64
 8001ca8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001caa:	685b      	ldr	r3, [r3, #4]
 8001cac:	f04f 0400 	mov.w	r4, #0
 8001cb0:	18da      	adds	r2, r3, r3
 8001cb2:	633a      	str	r2, [r7, #48]	; 0x30
 8001cb4:	eb44 0304 	adc.w	r3, r4, r4
 8001cb8:	637b      	str	r3, [r7, #52]	; 0x34
 8001cba:	e9d7 340c 	ldrd	r3, r4, [r7, #48]	; 0x30
 8001cbe:	461a      	mov	r2, r3
 8001cc0:	4623      	mov	r3, r4
 8001cc2:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8001cc6:	f7fe ff41 	bl	8000b4c <__aeabi_uldivmod>
 8001cca:	4603      	mov	r3, r0
 8001ccc:	460c      	mov	r4, r1
 8001cce:	461a      	mov	r2, r3
 8001cd0:	4b4b      	ldr	r3, [pc, #300]	; (8001e00 <UART_SetConfig+0x22c>)
 8001cd2:	fba3 2302 	umull	r2, r3, r3, r2
 8001cd6:	095b      	lsrs	r3, r3, #5
 8001cd8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8001cdc:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001cde:	461d      	mov	r5, r3
 8001ce0:	f04f 0600 	mov.w	r6, #0
 8001ce4:	462b      	mov	r3, r5
 8001ce6:	4634      	mov	r4, r6
 8001ce8:	18da      	adds	r2, r3, r3
 8001cea:	62ba      	str	r2, [r7, #40]	; 0x28
 8001cec:	eb44 0304 	adc.w	r3, r4, r4
 8001cf0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001cf2:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
 8001cf6:	195b      	adds	r3, r3, r5
 8001cf8:	eb46 0404 	adc.w	r4, r6, r4
 8001cfc:	f04f 0100 	mov.w	r1, #0
 8001d00:	f04f 0200 	mov.w	r2, #0
 8001d04:	00e2      	lsls	r2, r4, #3
 8001d06:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8001d0a:	00d9      	lsls	r1, r3, #3
 8001d0c:	460b      	mov	r3, r1
 8001d0e:	4614      	mov	r4, r2
 8001d10:	195a      	adds	r2, r3, r5
 8001d12:	65ba      	str	r2, [r7, #88]	; 0x58
 8001d14:	eb44 0306 	adc.w	r3, r4, r6
 8001d18:	65fb      	str	r3, [r7, #92]	; 0x5c
 8001d1a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001d1c:	685b      	ldr	r3, [r3, #4]
 8001d1e:	f04f 0400 	mov.w	r4, #0
 8001d22:	18da      	adds	r2, r3, r3
 8001d24:	623a      	str	r2, [r7, #32]
 8001d26:	eb44 0304 	adc.w	r3, r4, r4
 8001d2a:	627b      	str	r3, [r7, #36]	; 0x24
 8001d2c:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
 8001d30:	461a      	mov	r2, r3
 8001d32:	4623      	mov	r3, r4
 8001d34:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 8001d38:	f7fe ff08 	bl	8000b4c <__aeabi_uldivmod>
 8001d3c:	4603      	mov	r3, r0
 8001d3e:	460c      	mov	r4, r1
 8001d40:	461a      	mov	r2, r3
 8001d42:	4b2f      	ldr	r3, [pc, #188]	; (8001e00 <UART_SetConfig+0x22c>)
 8001d44:	fba3 1302 	umull	r1, r3, r3, r2
 8001d48:	095b      	lsrs	r3, r3, #5
 8001d4a:	2164      	movs	r1, #100	; 0x64
 8001d4c:	fb01 f303 	mul.w	r3, r1, r3
 8001d50:	1ad3      	subs	r3, r2, r3
 8001d52:	00db      	lsls	r3, r3, #3
 8001d54:	3332      	adds	r3, #50	; 0x32
 8001d56:	4a2a      	ldr	r2, [pc, #168]	; (8001e00 <UART_SetConfig+0x22c>)
 8001d58:	fba2 2303 	umull	r2, r3, r2, r3
 8001d5c:	095b      	lsrs	r3, r3, #5
 8001d5e:	005b      	lsls	r3, r3, #1
 8001d60:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8001d64:	4498      	add	r8, r3
 8001d66:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001d68:	4619      	mov	r1, r3
 8001d6a:	f04f 0200 	mov.w	r2, #0
 8001d6e:	460b      	mov	r3, r1
 8001d70:	4614      	mov	r4, r2
 8001d72:	18d8      	adds	r0, r3, r3
 8001d74:	61b8      	str	r0, [r7, #24]
 8001d76:	eb44 0304 	adc.w	r3, r4, r4
 8001d7a:	61fb      	str	r3, [r7, #28]
 8001d7c:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
 8001d80:	185b      	adds	r3, r3, r1
 8001d82:	eb42 0404 	adc.w	r4, r2, r4
 8001d86:	f04f 0500 	mov.w	r5, #0
 8001d8a:	f04f 0600 	mov.w	r6, #0
 8001d8e:	00e6      	lsls	r6, r4, #3
 8001d90:	ea46 7653 	orr.w	r6, r6, r3, lsr #29
 8001d94:	00dd      	lsls	r5, r3, #3
 8001d96:	462b      	mov	r3, r5
 8001d98:	4634      	mov	r4, r6
 8001d9a:	1858      	adds	r0, r3, r1
 8001d9c:	6538      	str	r0, [r7, #80]	; 0x50
 8001d9e:	eb44 0302 	adc.w	r3, r4, r2
 8001da2:	657b      	str	r3, [r7, #84]	; 0x54
 8001da4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001da6:	685b      	ldr	r3, [r3, #4]
 8001da8:	f04f 0400 	mov.w	r4, #0
 8001dac:	18da      	adds	r2, r3, r3
 8001dae:	613a      	str	r2, [r7, #16]
 8001db0:	eb44 0304 	adc.w	r3, r4, r4
 8001db4:	617b      	str	r3, [r7, #20]
 8001db6:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 8001dba:	461a      	mov	r2, r3
 8001dbc:	4623      	mov	r3, r4
 8001dbe:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8001dc2:	f7fe fec3 	bl	8000b4c <__aeabi_uldivmod>
 8001dc6:	4603      	mov	r3, r0
 8001dc8:	460c      	mov	r4, r1
 8001dca:	461a      	mov	r2, r3
 8001dcc:	4b0c      	ldr	r3, [pc, #48]	; (8001e00 <UART_SetConfig+0x22c>)
 8001dce:	fba3 1302 	umull	r1, r3, r3, r2
 8001dd2:	095b      	lsrs	r3, r3, #5
 8001dd4:	2164      	movs	r1, #100	; 0x64
 8001dd6:	fb01 f303 	mul.w	r3, r1, r3
 8001dda:	1ad3      	subs	r3, r2, r3
 8001ddc:	00db      	lsls	r3, r3, #3
 8001dde:	3332      	adds	r3, #50	; 0x32
 8001de0:	4a07      	ldr	r2, [pc, #28]	; (8001e00 <UART_SetConfig+0x22c>)
 8001de2:	fba2 2303 	umull	r2, r3, r2, r3
 8001de6:	095b      	lsrs	r3, r3, #5
 8001de8:	f003 0207 	and.w	r2, r3, #7
 8001dec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001dee:	681b      	ldr	r3, [r3, #0]
 8001df0:	4442      	add	r2, r8
 8001df2:	609a      	str	r2, [r3, #8]
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
  }
}
 8001df4:	e0cf      	b.n	8001f96 <UART_SetConfig+0x3c2>
 8001df6:	bf00      	nop
 8001df8:	40011000 	andmi	r1, r1, r0
 8001dfc:	40011400 	andmi	r1, r1, r0, lsl #8
 8001e00:	51eb851f 	mvnpl	r8, pc, lsl r5
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8001e04:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001e06:	461d      	mov	r5, r3
 8001e08:	f04f 0600 	mov.w	r6, #0
 8001e0c:	462b      	mov	r3, r5
 8001e0e:	4634      	mov	r4, r6
 8001e10:	eb13 0803 	adds.w	r8, r3, r3
 8001e14:	eb44 0904 	adc.w	r9, r4, r4
 8001e18:	4643      	mov	r3, r8
 8001e1a:	464c      	mov	r4, r9
 8001e1c:	195b      	adds	r3, r3, r5
 8001e1e:	eb46 0404 	adc.w	r4, r6, r4
 8001e22:	f04f 0100 	mov.w	r1, #0
 8001e26:	f04f 0200 	mov.w	r2, #0
 8001e2a:	00e2      	lsls	r2, r4, #3
 8001e2c:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 8001e30:	00d9      	lsls	r1, r3, #3
 8001e32:	460b      	mov	r3, r1
 8001e34:	4614      	mov	r4, r2
 8001e36:	195a      	adds	r2, r3, r5
 8001e38:	64ba      	str	r2, [r7, #72]	; 0x48
 8001e3a:	eb44 0306 	adc.w	r3, r4, r6
 8001e3e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8001e40:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001e42:	685b      	ldr	r3, [r3, #4]
 8001e44:	4619      	mov	r1, r3
 8001e46:	f04f 0200 	mov.w	r2, #0
 8001e4a:	f04f 0300 	mov.w	r3, #0
 8001e4e:	f04f 0400 	mov.w	r4, #0
 8001e52:	0094      	lsls	r4, r2, #2
 8001e54:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8001e58:	008b      	lsls	r3, r1, #2
 8001e5a:	461a      	mov	r2, r3
 8001e5c:	4623      	mov	r3, r4
 8001e5e:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8001e62:	f7fe fe73 	bl	8000b4c <__aeabi_uldivmod>
 8001e66:	4603      	mov	r3, r0
 8001e68:	460c      	mov	r4, r1
 8001e6a:	461a      	mov	r2, r3
 8001e6c:	4b4c      	ldr	r3, [pc, #304]	; (8001fa0 <UART_SetConfig+0x3cc>)
 8001e6e:	fba3 2302 	umull	r2, r3, r3, r2
 8001e72:	095b      	lsrs	r3, r3, #5
 8001e74:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8001e78:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001e7a:	4619      	mov	r1, r3
 8001e7c:	f04f 0200 	mov.w	r2, #0
 8001e80:	460b      	mov	r3, r1
 8001e82:	4614      	mov	r4, r2
 8001e84:	18d8      	adds	r0, r3, r3
 8001e86:	60b8      	str	r0, [r7, #8]
 8001e88:	eb44 0304 	adc.w	r3, r4, r4
 8001e8c:	60fb      	str	r3, [r7, #12]
 8001e8e:	e9d7 3402 	ldrd	r3, r4, [r7, #8]
 8001e92:	185b      	adds	r3, r3, r1
 8001e94:	eb42 0404 	adc.w	r4, r2, r4
 8001e98:	f04f 0500 	mov.w	r5, #0
 8001e9c:	f04f 0600 	mov.w	r6, #0
 8001ea0:	00e6      	lsls	r6, r4, #3
 8001ea2:	ea46 7653 	orr.w	r6, r6, r3, lsr #29
 8001ea6:	00dd      	lsls	r5, r3, #3
 8001ea8:	462b      	mov	r3, r5
 8001eaa:	4634      	mov	r4, r6
 8001eac:	1858      	adds	r0, r3, r1
 8001eae:	6438      	str	r0, [r7, #64]	; 0x40
 8001eb0:	eb44 0302 	adc.w	r3, r4, r2
 8001eb4:	647b      	str	r3, [r7, #68]	; 0x44
 8001eb6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001eb8:	685b      	ldr	r3, [r3, #4]
 8001eba:	4619      	mov	r1, r3
 8001ebc:	f04f 0200 	mov.w	r2, #0
 8001ec0:	f04f 0300 	mov.w	r3, #0
 8001ec4:	f04f 0400 	mov.w	r4, #0
 8001ec8:	0094      	lsls	r4, r2, #2
 8001eca:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8001ece:	008b      	lsls	r3, r1, #2
 8001ed0:	461a      	mov	r2, r3
 8001ed2:	4623      	mov	r3, r4
 8001ed4:	e9d7 0110 	ldrd	r0, r1, [r7, #64]	; 0x40
 8001ed8:	f7fe fe38 	bl	8000b4c <__aeabi_uldivmod>
 8001edc:	4603      	mov	r3, r0
 8001ede:	460c      	mov	r4, r1
 8001ee0:	461a      	mov	r2, r3
 8001ee2:	4b2f      	ldr	r3, [pc, #188]	; (8001fa0 <UART_SetConfig+0x3cc>)
 8001ee4:	fba3 1302 	umull	r1, r3, r3, r2
 8001ee8:	095b      	lsrs	r3, r3, #5
 8001eea:	2164      	movs	r1, #100	; 0x64
 8001eec:	fb01 f303 	mul.w	r3, r1, r3
 8001ef0:	1ad3      	subs	r3, r2, r3
 8001ef2:	011b      	lsls	r3, r3, #4
 8001ef4:	3332      	adds	r3, #50	; 0x32
 8001ef6:	4a2a      	ldr	r2, [pc, #168]	; (8001fa0 <UART_SetConfig+0x3cc>)
 8001ef8:	fba2 2303 	umull	r2, r3, r2, r3
 8001efc:	095b      	lsrs	r3, r3, #5
 8001efe:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001f02:	4498      	add	r8, r3
 8001f04:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8001f06:	4619      	mov	r1, r3
 8001f08:	f04f 0200 	mov.w	r2, #0
 8001f0c:	460b      	mov	r3, r1
 8001f0e:	4614      	mov	r4, r2
 8001f10:	18d8      	adds	r0, r3, r3
 8001f12:	6038      	str	r0, [r7, #0]
 8001f14:	eb44 0304 	adc.w	r3, r4, r4
 8001f18:	607b      	str	r3, [r7, #4]
 8001f1a:	e9d7 3400 	ldrd	r3, r4, [r7]
 8001f1e:	185b      	adds	r3, r3, r1
 8001f20:	eb42 0404 	adc.w	r4, r2, r4
 8001f24:	f04f 0500 	mov.w	r5, #0
 8001f28:	f04f 0600 	mov.w	r6, #0
 8001f2c:	00e6      	lsls	r6, r4, #3
 8001f2e:	ea46 7653 	orr.w	r6, r6, r3, lsr #29
 8001f32:	00dd      	lsls	r5, r3, #3
 8001f34:	462b      	mov	r3, r5
 8001f36:	4634      	mov	r4, r6
 8001f38:	1858      	adds	r0, r3, r1
 8001f3a:	63b8      	str	r0, [r7, #56]	; 0x38
 8001f3c:	eb44 0302 	adc.w	r3, r4, r2
 8001f40:	63fb      	str	r3, [r7, #60]	; 0x3c
 8001f42:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001f44:	685b      	ldr	r3, [r3, #4]
 8001f46:	4619      	mov	r1, r3
 8001f48:	f04f 0200 	mov.w	r2, #0
 8001f4c:	f04f 0300 	mov.w	r3, #0
 8001f50:	f04f 0400 	mov.w	r4, #0
 8001f54:	0094      	lsls	r4, r2, #2
 8001f56:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8001f5a:	008b      	lsls	r3, r1, #2
 8001f5c:	461a      	mov	r2, r3
 8001f5e:	4623      	mov	r3, r4
 8001f60:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 8001f64:	f7fe fdf2 	bl	8000b4c <__aeabi_uldivmod>
 8001f68:	4603      	mov	r3, r0
 8001f6a:	460c      	mov	r4, r1
 8001f6c:	461a      	mov	r2, r3
 8001f6e:	4b0c      	ldr	r3, [pc, #48]	; (8001fa0 <UART_SetConfig+0x3cc>)
 8001f70:	fba3 1302 	umull	r1, r3, r3, r2
 8001f74:	095b      	lsrs	r3, r3, #5
 8001f76:	2164      	movs	r1, #100	; 0x64
 8001f78:	fb01 f303 	mul.w	r3, r1, r3
 8001f7c:	1ad3      	subs	r3, r2, r3
 8001f7e:	011b      	lsls	r3, r3, #4
 8001f80:	3332      	adds	r3, #50	; 0x32
 8001f82:	4a07      	ldr	r2, [pc, #28]	; (8001fa0 <UART_SetConfig+0x3cc>)
 8001f84:	fba2 2303 	umull	r2, r3, r2, r3
 8001f88:	095b      	lsrs	r3, r3, #5
 8001f8a:	f003 020f 	and.w	r2, r3, #15
 8001f8e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8001f90:	681b      	ldr	r3, [r3, #0]
 8001f92:	4442      	add	r2, r8
 8001f94:	609a      	str	r2, [r3, #8]
}
 8001f96:	bf00      	nop
 8001f98:	377c      	adds	r7, #124	; 0x7c
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001fa0:	51eb851f 	mvnpl	r8, pc, lsl r5

08001fa4 <_out_null>:
}


// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
 8001fa4:	b480      	push	{r7}
 8001fa6:	b085      	sub	sp, #20
 8001fa8:	af00      	add	r7, sp, #0
 8001faa:	60b9      	str	r1, [r7, #8]
 8001fac:	607a      	str	r2, [r7, #4]
 8001fae:	603b      	str	r3, [r7, #0]
 8001fb0:	4603      	mov	r3, r0
 8001fb2:	73fb      	strb	r3, [r7, #15]
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
 8001fb4:	bf00      	nop
 8001fb6:	3714      	adds	r7, #20
 8001fb8:	46bd      	mov	sp, r7
 8001fba:	bc80      	pop	{r7}
 8001fbc:	4770      	bx	lr

08001fbe <_out_char>:


// internal _putchar wrapper
static inline void _out_char(char character, void* buffer, size_t idx, size_t maxlen)
{
 8001fbe:	b580      	push	{r7, lr}
 8001fc0:	b084      	sub	sp, #16
 8001fc2:	af00      	add	r7, sp, #0
 8001fc4:	60b9      	str	r1, [r7, #8]
 8001fc6:	607a      	str	r2, [r7, #4]
 8001fc8:	603b      	str	r3, [r7, #0]
 8001fca:	4603      	mov	r3, r0
 8001fcc:	73fb      	strb	r3, [r7, #15]
  (void)buffer; (void)idx; (void)maxlen;
  if (character) {
 8001fce:	7bfb      	ldrb	r3, [r7, #15]
 8001fd0:	2b00      	cmp	r3, #0
 8001fd2:	d003      	beq.n	8001fdc <_out_char+0x1e>
    _putchar(character);
 8001fd4:	7bfb      	ldrb	r3, [r7, #15]
 8001fd6:	4618      	mov	r0, r3
 8001fd8:	f001 f86c 	bl	80030b4 <_putchar>
  }
}
 8001fdc:	bf00      	nop
 8001fde:	3710      	adds	r7, #16
 8001fe0:	46bd      	mov	sp, r7
 8001fe2:	bd80      	pop	{r7, pc}

08001fe4 <_strnlen_s>:


// internal secure strlen
// \return The length of the string (excluding the terminating 0) limited by 'maxsize'
static inline unsigned int _strnlen_s(const char* str, size_t maxsize)
{
 8001fe4:	b480      	push	{r7}
 8001fe6:	b085      	sub	sp, #20
 8001fe8:	af00      	add	r7, sp, #0
 8001fea:	6078      	str	r0, [r7, #4]
 8001fec:	6039      	str	r1, [r7, #0]
  const char* s;
  for (s = str; *s && maxsize--; ++s);
 8001fee:	687b      	ldr	r3, [r7, #4]
 8001ff0:	60fb      	str	r3, [r7, #12]
 8001ff2:	e002      	b.n	8001ffa <_strnlen_s+0x16>
 8001ff4:	68fb      	ldr	r3, [r7, #12]
 8001ff6:	3301      	adds	r3, #1
 8001ff8:	60fb      	str	r3, [r7, #12]
 8001ffa:	68fb      	ldr	r3, [r7, #12]
 8001ffc:	781b      	ldrb	r3, [r3, #0]
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d004      	beq.n	800200c <_strnlen_s+0x28>
 8002002:	683b      	ldr	r3, [r7, #0]
 8002004:	1e5a      	subs	r2, r3, #1
 8002006:	603a      	str	r2, [r7, #0]
 8002008:	2b00      	cmp	r3, #0
 800200a:	d1f3      	bne.n	8001ff4 <_strnlen_s+0x10>
  return (unsigned int)(s - str);
 800200c:	68fa      	ldr	r2, [r7, #12]
 800200e:	687b      	ldr	r3, [r7, #4]
 8002010:	1ad3      	subs	r3, r2, r3
}
 8002012:	4618      	mov	r0, r3
 8002014:	3714      	adds	r7, #20
 8002016:	46bd      	mov	sp, r7
 8002018:	bc80      	pop	{r7}
 800201a:	4770      	bx	lr

0800201c <_is_digit>:


// internal test if char is a digit (0-9)
// \return true if char is a digit
static inline bool _is_digit(char ch)
{
 800201c:	b480      	push	{r7}
 800201e:	b083      	sub	sp, #12
 8002020:	af00      	add	r7, sp, #0
 8002022:	4603      	mov	r3, r0
 8002024:	71fb      	strb	r3, [r7, #7]
  return (ch >= '0') && (ch <= '9');
 8002026:	79fb      	ldrb	r3, [r7, #7]
 8002028:	2b2f      	cmp	r3, #47	; 0x2f
 800202a:	d904      	bls.n	8002036 <_is_digit+0x1a>
 800202c:	79fb      	ldrb	r3, [r7, #7]
 800202e:	2b39      	cmp	r3, #57	; 0x39
 8002030:	d801      	bhi.n	8002036 <_is_digit+0x1a>
 8002032:	2301      	movs	r3, #1
 8002034:	e000      	b.n	8002038 <_is_digit+0x1c>
 8002036:	2300      	movs	r3, #0
 8002038:	f003 0301 	and.w	r3, r3, #1
 800203c:	b2db      	uxtb	r3, r3
}
 800203e:	4618      	mov	r0, r3
 8002040:	370c      	adds	r7, #12
 8002042:	46bd      	mov	sp, r7
 8002044:	bc80      	pop	{r7}
 8002046:	4770      	bx	lr

08002048 <_atoi>:


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
 8002048:	b580      	push	{r7, lr}
 800204a:	b084      	sub	sp, #16
 800204c:	af00      	add	r7, sp, #0
 800204e:	6078      	str	r0, [r7, #4]
  unsigned int i = 0U;
 8002050:	2300      	movs	r3, #0
 8002052:	60fb      	str	r3, [r7, #12]
  while (_is_digit(**str)) {
 8002054:	e00e      	b.n	8002074 <_atoi+0x2c>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
 8002056:	68fa      	ldr	r2, [r7, #12]
 8002058:	4613      	mov	r3, r2
 800205a:	009b      	lsls	r3, r3, #2
 800205c:	4413      	add	r3, r2
 800205e:	005b      	lsls	r3, r3, #1
 8002060:	4618      	mov	r0, r3
 8002062:	687b      	ldr	r3, [r7, #4]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	1c59      	adds	r1, r3, #1
 8002068:	687a      	ldr	r2, [r7, #4]
 800206a:	6011      	str	r1, [r2, #0]
 800206c:	781b      	ldrb	r3, [r3, #0]
 800206e:	4403      	add	r3, r0
 8002070:	3b30      	subs	r3, #48	; 0x30
 8002072:	60fb      	str	r3, [r7, #12]
  while (_is_digit(**str)) {
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	781b      	ldrb	r3, [r3, #0]
 800207a:	4618      	mov	r0, r3
 800207c:	f7ff ffce 	bl	800201c <_is_digit>
 8002080:	4603      	mov	r3, r0
 8002082:	2b00      	cmp	r3, #0
 8002084:	d1e7      	bne.n	8002056 <_atoi+0xe>
  }
  return i;
 8002086:	68fb      	ldr	r3, [r7, #12]
}
 8002088:	4618      	mov	r0, r3
 800208a:	3710      	adds	r7, #16
 800208c:	46bd      	mov	sp, r7
 800208e:	bd80      	pop	{r7, pc}

08002090 <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
 8002090:	b590      	push	{r4, r7, lr}
 8002092:	b087      	sub	sp, #28
 8002094:	af00      	add	r7, sp, #0
 8002096:	60f8      	str	r0, [r7, #12]
 8002098:	60b9      	str	r1, [r7, #8]
 800209a:	607a      	str	r2, [r7, #4]
 800209c:	603b      	str	r3, [r7, #0]
  const size_t start_idx = idx;
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	613b      	str	r3, [r7, #16]

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 80020a2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80020a4:	f003 0302 	and.w	r3, r3, #2
 80020a8:	2b00      	cmp	r3, #0
 80020aa:	d125      	bne.n	80020f8 <_out_rev+0x68>
 80020ac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80020ae:	f003 0301 	and.w	r3, r3, #1
 80020b2:	2b00      	cmp	r3, #0
 80020b4:	d120      	bne.n	80020f8 <_out_rev+0x68>
    for (size_t i = len; i < width; i++) {
 80020b6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020b8:	617b      	str	r3, [r7, #20]
 80020ba:	e00a      	b.n	80020d2 <_out_rev+0x42>
      out(' ', buffer, idx++, maxlen);
 80020bc:	687a      	ldr	r2, [r7, #4]
 80020be:	1c53      	adds	r3, r2, #1
 80020c0:	607b      	str	r3, [r7, #4]
 80020c2:	68fc      	ldr	r4, [r7, #12]
 80020c4:	683b      	ldr	r3, [r7, #0]
 80020c6:	68b9      	ldr	r1, [r7, #8]
 80020c8:	2020      	movs	r0, #32
 80020ca:	47a0      	blx	r4
    for (size_t i = len; i < width; i++) {
 80020cc:	697b      	ldr	r3, [r7, #20]
 80020ce:	3301      	adds	r3, #1
 80020d0:	617b      	str	r3, [r7, #20]
 80020d2:	697a      	ldr	r2, [r7, #20]
 80020d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80020d6:	429a      	cmp	r2, r3
 80020d8:	d3f0      	bcc.n	80020bc <_out_rev+0x2c>
    }
  }

  // reverse string
  while (len) {
 80020da:	e00d      	b.n	80020f8 <_out_rev+0x68>
    out(buf[--len], buffer, idx++, maxlen);
 80020dc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020de:	3b01      	subs	r3, #1
 80020e0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80020e2:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80020e4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020e6:	4413      	add	r3, r2
 80020e8:	7818      	ldrb	r0, [r3, #0]
 80020ea:	687a      	ldr	r2, [r7, #4]
 80020ec:	1c53      	adds	r3, r2, #1
 80020ee:	607b      	str	r3, [r7, #4]
 80020f0:	68fc      	ldr	r4, [r7, #12]
 80020f2:	683b      	ldr	r3, [r7, #0]
 80020f4:	68b9      	ldr	r1, [r7, #8]
 80020f6:	47a0      	blx	r4
  while (len) {
 80020f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d1ee      	bne.n	80020dc <_out_rev+0x4c>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
 80020fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002100:	f003 0302 	and.w	r3, r3, #2
 8002104:	2b00      	cmp	r3, #0
 8002106:	d00e      	beq.n	8002126 <_out_rev+0x96>
    while (idx - start_idx < width) {
 8002108:	e007      	b.n	800211a <_out_rev+0x8a>
      out(' ', buffer, idx++, maxlen);
 800210a:	687a      	ldr	r2, [r7, #4]
 800210c:	1c53      	adds	r3, r2, #1
 800210e:	607b      	str	r3, [r7, #4]
 8002110:	68fc      	ldr	r4, [r7, #12]
 8002112:	683b      	ldr	r3, [r7, #0]
 8002114:	68b9      	ldr	r1, [r7, #8]
 8002116:	2020      	movs	r0, #32
 8002118:	47a0      	blx	r4
    while (idx - start_idx < width) {
 800211a:	687a      	ldr	r2, [r7, #4]
 800211c:	693b      	ldr	r3, [r7, #16]
 800211e:	1ad3      	subs	r3, r2, r3
 8002120:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002122:	429a      	cmp	r2, r3
 8002124:	d8f1      	bhi.n	800210a <_out_rev+0x7a>
    }
  }

  return idx;
 8002126:	687b      	ldr	r3, [r7, #4]
}
 8002128:	4618      	mov	r0, r3
 800212a:	371c      	adds	r7, #28
 800212c:	46bd      	mov	sp, r7
 800212e:	bd90      	pop	{r4, r7, pc}

08002130 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
 8002130:	b580      	push	{r7, lr}
 8002132:	b088      	sub	sp, #32
 8002134:	af04      	add	r7, sp, #16
 8002136:	60f8      	str	r0, [r7, #12]
 8002138:	60b9      	str	r1, [r7, #8]
 800213a:	607a      	str	r2, [r7, #4]
 800213c:	603b      	str	r3, [r7, #0]
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
 800213e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002140:	f003 0302 	and.w	r3, r3, #2
 8002144:	2b00      	cmp	r3, #0
 8002146:	d136      	bne.n	80021b6 <_ntoa_format+0x86>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 8002148:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800214a:	2b00      	cmp	r3, #0
 800214c:	d018      	beq.n	8002180 <_ntoa_format+0x50>
 800214e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002150:	f003 0301 	and.w	r3, r3, #1
 8002154:	2b00      	cmp	r3, #0
 8002156:	d013      	beq.n	8002180 <_ntoa_format+0x50>
 8002158:	f897 3020 	ldrb.w	r3, [r7, #32]
 800215c:	2b00      	cmp	r3, #0
 800215e:	d104      	bne.n	800216a <_ntoa_format+0x3a>
 8002160:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002162:	f003 030c 	and.w	r3, r3, #12
 8002166:	2b00      	cmp	r3, #0
 8002168:	d00a      	beq.n	8002180 <_ntoa_format+0x50>
      width--;
 800216a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800216c:	3b01      	subs	r3, #1
 800216e:	62fb      	str	r3, [r7, #44]	; 0x2c
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8002170:	e006      	b.n	8002180 <_ntoa_format+0x50>
      buf[len++] = '0';
 8002172:	69fb      	ldr	r3, [r7, #28]
 8002174:	1c5a      	adds	r2, r3, #1
 8002176:	61fa      	str	r2, [r7, #28]
 8002178:	69ba      	ldr	r2, [r7, #24]
 800217a:	4413      	add	r3, r2
 800217c:	2230      	movs	r2, #48	; 0x30
 800217e:	701a      	strb	r2, [r3, #0]
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8002180:	69fa      	ldr	r2, [r7, #28]
 8002182:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002184:	429a      	cmp	r2, r3
 8002186:	d20a      	bcs.n	800219e <_ntoa_format+0x6e>
 8002188:	69fb      	ldr	r3, [r7, #28]
 800218a:	2b1f      	cmp	r3, #31
 800218c:	d9f1      	bls.n	8002172 <_ntoa_format+0x42>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800218e:	e006      	b.n	800219e <_ntoa_format+0x6e>
      buf[len++] = '0';
 8002190:	69fb      	ldr	r3, [r7, #28]
 8002192:	1c5a      	adds	r2, r3, #1
 8002194:	61fa      	str	r2, [r7, #28]
 8002196:	69ba      	ldr	r2, [r7, #24]
 8002198:	4413      	add	r3, r2
 800219a:	2230      	movs	r2, #48	; 0x30
 800219c:	701a      	strb	r2, [r3, #0]
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800219e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80021a0:	f003 0301 	and.w	r3, r3, #1
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d006      	beq.n	80021b6 <_ntoa_format+0x86>
 80021a8:	69fa      	ldr	r2, [r7, #28]
 80021aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80021ac:	429a      	cmp	r2, r3
 80021ae:	d202      	bcs.n	80021b6 <_ntoa_format+0x86>
 80021b0:	69fb      	ldr	r3, [r7, #28]
 80021b2:	2b1f      	cmp	r3, #31
 80021b4:	d9ec      	bls.n	8002190 <_ntoa_format+0x60>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
 80021b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80021b8:	f003 0310 	and.w	r3, r3, #16
 80021bc:	2b00      	cmp	r3, #0
 80021be:	d058      	beq.n	8002272 <_ntoa_format+0x142>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 80021c0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80021c2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80021c6:	2b00      	cmp	r3, #0
 80021c8:	d116      	bne.n	80021f8 <_ntoa_format+0xc8>
 80021ca:	69fb      	ldr	r3, [r7, #28]
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	d013      	beq.n	80021f8 <_ntoa_format+0xc8>
 80021d0:	69fa      	ldr	r2, [r7, #28]
 80021d2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80021d4:	429a      	cmp	r2, r3
 80021d6:	d003      	beq.n	80021e0 <_ntoa_format+0xb0>
 80021d8:	69fa      	ldr	r2, [r7, #28]
 80021da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80021dc:	429a      	cmp	r2, r3
 80021de:	d10b      	bne.n	80021f8 <_ntoa_format+0xc8>
      len--;
 80021e0:	69fb      	ldr	r3, [r7, #28]
 80021e2:	3b01      	subs	r3, #1
 80021e4:	61fb      	str	r3, [r7, #28]
      if (len && (base == 16U)) {
 80021e6:	69fb      	ldr	r3, [r7, #28]
 80021e8:	2b00      	cmp	r3, #0
 80021ea:	d005      	beq.n	80021f8 <_ntoa_format+0xc8>
 80021ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021ee:	2b10      	cmp	r3, #16
 80021f0:	d102      	bne.n	80021f8 <_ntoa_format+0xc8>
        len--;
 80021f2:	69fb      	ldr	r3, [r7, #28]
 80021f4:	3b01      	subs	r3, #1
 80021f6:	61fb      	str	r3, [r7, #28]
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 80021f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021fa:	2b10      	cmp	r3, #16
 80021fc:	d10f      	bne.n	800221e <_ntoa_format+0xee>
 80021fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002200:	f003 0320 	and.w	r3, r3, #32
 8002204:	2b00      	cmp	r3, #0
 8002206:	d10a      	bne.n	800221e <_ntoa_format+0xee>
 8002208:	69fb      	ldr	r3, [r7, #28]
 800220a:	2b1f      	cmp	r3, #31
 800220c:	d807      	bhi.n	800221e <_ntoa_format+0xee>
      buf[len++] = 'x';
 800220e:	69fb      	ldr	r3, [r7, #28]
 8002210:	1c5a      	adds	r2, r3, #1
 8002212:	61fa      	str	r2, [r7, #28]
 8002214:	69ba      	ldr	r2, [r7, #24]
 8002216:	4413      	add	r3, r2
 8002218:	2278      	movs	r2, #120	; 0x78
 800221a:	701a      	strb	r2, [r3, #0]
 800221c:	e01f      	b.n	800225e <_ntoa_format+0x12e>
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 800221e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002220:	2b10      	cmp	r3, #16
 8002222:	d10f      	bne.n	8002244 <_ntoa_format+0x114>
 8002224:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002226:	f003 0320 	and.w	r3, r3, #32
 800222a:	2b00      	cmp	r3, #0
 800222c:	d00a      	beq.n	8002244 <_ntoa_format+0x114>
 800222e:	69fb      	ldr	r3, [r7, #28]
 8002230:	2b1f      	cmp	r3, #31
 8002232:	d807      	bhi.n	8002244 <_ntoa_format+0x114>
      buf[len++] = 'X';
 8002234:	69fb      	ldr	r3, [r7, #28]
 8002236:	1c5a      	adds	r2, r3, #1
 8002238:	61fa      	str	r2, [r7, #28]
 800223a:	69ba      	ldr	r2, [r7, #24]
 800223c:	4413      	add	r3, r2
 800223e:	2258      	movs	r2, #88	; 0x58
 8002240:	701a      	strb	r2, [r3, #0]
 8002242:	e00c      	b.n	800225e <_ntoa_format+0x12e>
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 8002244:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002246:	2b02      	cmp	r3, #2
 8002248:	d109      	bne.n	800225e <_ntoa_format+0x12e>
 800224a:	69fb      	ldr	r3, [r7, #28]
 800224c:	2b1f      	cmp	r3, #31
 800224e:	d806      	bhi.n	800225e <_ntoa_format+0x12e>
      buf[len++] = 'b';
 8002250:	69fb      	ldr	r3, [r7, #28]
 8002252:	1c5a      	adds	r2, r3, #1
 8002254:	61fa      	str	r2, [r7, #28]
 8002256:	69ba      	ldr	r2, [r7, #24]
 8002258:	4413      	add	r3, r2
 800225a:	2262      	movs	r2, #98	; 0x62
 800225c:	701a      	strb	r2, [r3, #0]
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
 800225e:	69fb      	ldr	r3, [r7, #28]
 8002260:	2b1f      	cmp	r3, #31
 8002262:	d806      	bhi.n	8002272 <_ntoa_format+0x142>
      buf[len++] = '0';
 8002264:	69fb      	ldr	r3, [r7, #28]
 8002266:	1c5a      	adds	r2, r3, #1
 8002268:	61fa      	str	r2, [r7, #28]
 800226a:	69ba      	ldr	r2, [r7, #24]
 800226c:	4413      	add	r3, r2
 800226e:	2230      	movs	r2, #48	; 0x30
 8002270:	701a      	strb	r2, [r3, #0]
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
 8002272:	69fb      	ldr	r3, [r7, #28]
 8002274:	2b1f      	cmp	r3, #31
 8002276:	d824      	bhi.n	80022c2 <_ntoa_format+0x192>
    if (negative) {
 8002278:	f897 3020 	ldrb.w	r3, [r7, #32]
 800227c:	2b00      	cmp	r3, #0
 800227e:	d007      	beq.n	8002290 <_ntoa_format+0x160>
      buf[len++] = '-';
 8002280:	69fb      	ldr	r3, [r7, #28]
 8002282:	1c5a      	adds	r2, r3, #1
 8002284:	61fa      	str	r2, [r7, #28]
 8002286:	69ba      	ldr	r2, [r7, #24]
 8002288:	4413      	add	r3, r2
 800228a:	222d      	movs	r2, #45	; 0x2d
 800228c:	701a      	strb	r2, [r3, #0]
 800228e:	e018      	b.n	80022c2 <_ntoa_format+0x192>
    }
    else if (flags & FLAGS_PLUS) {
 8002290:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002292:	f003 0304 	and.w	r3, r3, #4
 8002296:	2b00      	cmp	r3, #0
 8002298:	d007      	beq.n	80022aa <_ntoa_format+0x17a>
      buf[len++] = '+';  // ignore the space if the '+' exists
 800229a:	69fb      	ldr	r3, [r7, #28]
 800229c:	1c5a      	adds	r2, r3, #1
 800229e:	61fa      	str	r2, [r7, #28]
 80022a0:	69ba      	ldr	r2, [r7, #24]
 80022a2:	4413      	add	r3, r2
 80022a4:	222b      	movs	r2, #43	; 0x2b
 80022a6:	701a      	strb	r2, [r3, #0]
 80022a8:	e00b      	b.n	80022c2 <_ntoa_format+0x192>
    }
    else if (flags & FLAGS_SPACE) {
 80022aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80022ac:	f003 0308 	and.w	r3, r3, #8
 80022b0:	2b00      	cmp	r3, #0
 80022b2:	d006      	beq.n	80022c2 <_ntoa_format+0x192>
      buf[len++] = ' ';
 80022b4:	69fb      	ldr	r3, [r7, #28]
 80022b6:	1c5a      	adds	r2, r3, #1
 80022b8:	61fa      	str	r2, [r7, #28]
 80022ba:	69ba      	ldr	r2, [r7, #24]
 80022bc:	4413      	add	r3, r2
 80022be:	2220      	movs	r2, #32
 80022c0:	701a      	strb	r2, [r3, #0]
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 80022c2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80022c4:	9303      	str	r3, [sp, #12]
 80022c6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80022c8:	9302      	str	r3, [sp, #8]
 80022ca:	69fb      	ldr	r3, [r7, #28]
 80022cc:	9301      	str	r3, [sp, #4]
 80022ce:	69bb      	ldr	r3, [r7, #24]
 80022d0:	9300      	str	r3, [sp, #0]
 80022d2:	683b      	ldr	r3, [r7, #0]
 80022d4:	687a      	ldr	r2, [r7, #4]
 80022d6:	68b9      	ldr	r1, [r7, #8]
 80022d8:	68f8      	ldr	r0, [r7, #12]
 80022da:	f7ff fed9 	bl	8002090 <_out_rev>
 80022de:	4603      	mov	r3, r0
}
 80022e0:	4618      	mov	r0, r3
 80022e2:	3710      	adds	r7, #16
 80022e4:	46bd      	mov	sp, r7
 80022e6:	bd80      	pop	{r7, pc}

080022e8 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b096      	sub	sp, #88	; 0x58
 80022ec:	af08      	add	r7, sp, #32
 80022ee:	60f8      	str	r0, [r7, #12]
 80022f0:	60b9      	str	r1, [r7, #8]
 80022f2:	607a      	str	r2, [r7, #4]
 80022f4:	603b      	str	r3, [r7, #0]
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;
 80022f6:	2300      	movs	r3, #0
 80022f8:	637b      	str	r3, [r7, #52]	; 0x34

  // no hash for 0 values
  if (!value) {
 80022fa:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	d103      	bne.n	8002308 <_ntoa_long+0x20>
    flags &= ~FLAGS_HASH;
 8002300:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002302:	f023 0310 	bic.w	r3, r3, #16
 8002306:	657b      	str	r3, [r7, #84]	; 0x54
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
 8002308:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800230a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800230e:	2b00      	cmp	r3, #0
 8002310:	d002      	beq.n	8002318 <_ntoa_long+0x30>
 8002312:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002314:	2b00      	cmp	r3, #0
 8002316:	d033      	beq.n	8002380 <_ntoa_long+0x98>
    do {
      const char digit = (char)(value % base);
 8002318:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800231a:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800231c:	fbb3 f2f2 	udiv	r2, r3, r2
 8002320:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8002322:	fb01 f202 	mul.w	r2, r1, r2
 8002326:	1a9b      	subs	r3, r3, r2
 8002328:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
 800232c:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002330:	2b09      	cmp	r3, #9
 8002332:	d804      	bhi.n	800233e <_ntoa_long+0x56>
 8002334:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002338:	3330      	adds	r3, #48	; 0x30
 800233a:	b2da      	uxtb	r2, r3
 800233c:	e00d      	b.n	800235a <_ntoa_long+0x72>
 800233e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002340:	f003 0320 	and.w	r3, r3, #32
 8002344:	2b00      	cmp	r3, #0
 8002346:	d001      	beq.n	800234c <_ntoa_long+0x64>
 8002348:	2241      	movs	r2, #65	; 0x41
 800234a:	e000      	b.n	800234e <_ntoa_long+0x66>
 800234c:	2261      	movs	r2, #97	; 0x61
 800234e:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002352:	4413      	add	r3, r2
 8002354:	b2db      	uxtb	r3, r3
 8002356:	3b0a      	subs	r3, #10
 8002358:	b2da      	uxtb	r2, r3
 800235a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800235c:	1c59      	adds	r1, r3, #1
 800235e:	6379      	str	r1, [r7, #52]	; 0x34
 8002360:	f107 0138 	add.w	r1, r7, #56	; 0x38
 8002364:	440b      	add	r3, r1
 8002366:	f803 2c28 	strb.w	r2, [r3, #-40]
      value /= base;
 800236a:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800236c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800236e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002372:	643b      	str	r3, [r7, #64]	; 0x40
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
 8002374:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002376:	2b00      	cmp	r3, #0
 8002378:	d002      	beq.n	8002380 <_ntoa_long+0x98>
 800237a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800237c:	2b1f      	cmp	r3, #31
 800237e:	d9cb      	bls.n	8002318 <_ntoa_long+0x30>
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
 8002380:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002382:	9306      	str	r3, [sp, #24]
 8002384:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8002386:	9305      	str	r3, [sp, #20]
 8002388:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800238a:	9304      	str	r3, [sp, #16]
 800238c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800238e:	9303      	str	r3, [sp, #12]
 8002390:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8002394:	9302      	str	r3, [sp, #8]
 8002396:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002398:	9301      	str	r3, [sp, #4]
 800239a:	f107 0310 	add.w	r3, r7, #16
 800239e:	9300      	str	r3, [sp, #0]
 80023a0:	683b      	ldr	r3, [r7, #0]
 80023a2:	687a      	ldr	r2, [r7, #4]
 80023a4:	68b9      	ldr	r1, [r7, #8]
 80023a6:	68f8      	ldr	r0, [r7, #12]
 80023a8:	f7ff fec2 	bl	8002130 <_ntoa_format>
 80023ac:	4603      	mov	r3, r0
}
 80023ae:	4618      	mov	r0, r3
 80023b0:	3738      	adds	r7, #56	; 0x38
 80023b2:	46bd      	mov	sp, r7
 80023b4:	bd80      	pop	{r7, pc}
	...

080023b8 <_ftoa>:
#endif


// internal ftoa for fixed decimal floating point
static size_t _ftoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
 80023b8:	b590      	push	{r4, r7, lr}
 80023ba:	b09b      	sub	sp, #108	; 0x6c
 80023bc:	af04      	add	r7, sp, #16
 80023be:	60f8      	str	r0, [r7, #12]
 80023c0:	60b9      	str	r1, [r7, #8]
 80023c2:	607a      	str	r2, [r7, #4]
 80023c4:	603b      	str	r3, [r7, #0]
  char buf[PRINTF_FTOA_BUFFER_SIZE];
  size_t len  = 0U;
 80023c6:	2300      	movs	r3, #0
 80023c8:	657b      	str	r3, [r7, #84]	; 0x54
  double diff = 0.0;
 80023ca:	f04f 0300 	mov.w	r3, #0
 80023ce:	f04f 0400 	mov.w	r4, #0
 80023d2:	e9c7 340e 	strd	r3, r4, [r7, #56]	; 0x38

  // powers of 10
  static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000 };

  // test for special values
  if (value != value)
 80023d6:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 80023da:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80023de:	f7fe fb3b 	bl	8000a58 <__aeabi_dcmpeq>
 80023e2:	4603      	mov	r3, r0
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	d10f      	bne.n	8002408 <_ftoa+0x50>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 80023e8:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80023ea:	9303      	str	r3, [sp, #12]
 80023ec:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80023ee:	9302      	str	r3, [sp, #8]
 80023f0:	2303      	movs	r3, #3
 80023f2:	9301      	str	r3, [sp, #4]
 80023f4:	4ba8      	ldr	r3, [pc, #672]	; (8002698 <_ftoa+0x2e0>)
 80023f6:	9300      	str	r3, [sp, #0]
 80023f8:	683b      	ldr	r3, [r7, #0]
 80023fa:	687a      	ldr	r2, [r7, #4]
 80023fc:	68b9      	ldr	r1, [r7, #8]
 80023fe:	68f8      	ldr	r0, [r7, #12]
 8002400:	f7ff fe46 	bl	8002090 <_out_rev>
 8002404:	4603      	mov	r3, r0
 8002406:	e229      	b.n	800285c <_ftoa+0x4a4>
  if (value < -DBL_MAX)
 8002408:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800240c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
 8002410:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8002414:	f7fe fb2a 	bl	8000a6c <__aeabi_dcmplt>
 8002418:	4603      	mov	r3, r0
 800241a:	2b00      	cmp	r3, #0
 800241c:	d00f      	beq.n	800243e <_ftoa+0x86>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 800241e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002420:	9303      	str	r3, [sp, #12]
 8002422:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002424:	9302      	str	r3, [sp, #8]
 8002426:	2304      	movs	r3, #4
 8002428:	9301      	str	r3, [sp, #4]
 800242a:	4b9c      	ldr	r3, [pc, #624]	; (800269c <_ftoa+0x2e4>)
 800242c:	9300      	str	r3, [sp, #0]
 800242e:	683b      	ldr	r3, [r7, #0]
 8002430:	687a      	ldr	r2, [r7, #4]
 8002432:	68b9      	ldr	r1, [r7, #8]
 8002434:	68f8      	ldr	r0, [r7, #12]
 8002436:	f7ff fe2b 	bl	8002090 <_out_rev>
 800243a:	4603      	mov	r3, r0
 800243c:	e20e      	b.n	800285c <_ftoa+0x4a4>
  if (value > DBL_MAX)
 800243e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002442:	4b97      	ldr	r3, [pc, #604]	; (80026a0 <_ftoa+0x2e8>)
 8002444:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8002448:	f7fe fb2e 	bl	8000aa8 <__aeabi_dcmpgt>
 800244c:	4603      	mov	r3, r0
 800244e:	2b00      	cmp	r3, #0
 8002450:	d01d      	beq.n	800248e <_ftoa+0xd6>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
 8002452:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002454:	f003 0304 	and.w	r3, r3, #4
 8002458:	2b00      	cmp	r3, #0
 800245a:	d001      	beq.n	8002460 <_ftoa+0xa8>
 800245c:	4b91      	ldr	r3, [pc, #580]	; (80026a4 <_ftoa+0x2ec>)
 800245e:	e000      	b.n	8002462 <_ftoa+0xaa>
 8002460:	4b91      	ldr	r3, [pc, #580]	; (80026a8 <_ftoa+0x2f0>)
 8002462:	6fba      	ldr	r2, [r7, #120]	; 0x78
 8002464:	f002 0204 	and.w	r2, r2, #4
 8002468:	2a00      	cmp	r2, #0
 800246a:	d001      	beq.n	8002470 <_ftoa+0xb8>
 800246c:	2204      	movs	r2, #4
 800246e:	e000      	b.n	8002472 <_ftoa+0xba>
 8002470:	2203      	movs	r2, #3
 8002472:	6fb9      	ldr	r1, [r7, #120]	; 0x78
 8002474:	9103      	str	r1, [sp, #12]
 8002476:	6f79      	ldr	r1, [r7, #116]	; 0x74
 8002478:	9102      	str	r1, [sp, #8]
 800247a:	9201      	str	r2, [sp, #4]
 800247c:	9300      	str	r3, [sp, #0]
 800247e:	683b      	ldr	r3, [r7, #0]
 8002480:	687a      	ldr	r2, [r7, #4]
 8002482:	68b9      	ldr	r1, [r7, #8]
 8002484:	68f8      	ldr	r0, [r7, #12]
 8002486:	f7ff fe03 	bl	8002090 <_out_rev>
 800248a:	4603      	mov	r3, r0
 800248c:	e1e6      	b.n	800285c <_ftoa+0x4a4>

  // test for very large values
  // standard printf behavior is to print EVERY whole number digit -- which could be 100s of characters overflowing your buffers == bad
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 800248e:	a37e      	add	r3, pc, #504	; (adr r3, 8002688 <_ftoa+0x2d0>)
 8002490:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002494:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8002498:	f7fe fb06 	bl	8000aa8 <__aeabi_dcmpgt>
 800249c:	4603      	mov	r3, r0
 800249e:	2b00      	cmp	r3, #0
 80024a0:	d109      	bne.n	80024b6 <_ftoa+0xfe>
 80024a2:	a37b      	add	r3, pc, #492	; (adr r3, 8002690 <_ftoa+0x2d8>)
 80024a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80024a8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80024ac:	f7fe fade 	bl	8000a6c <__aeabi_dcmplt>
 80024b0:	4603      	mov	r3, r0
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d001      	beq.n	80024ba <_ftoa+0x102>
#if defined(PRINTF_SUPPORT_EXPONENTIAL)
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
#else
    return 0U;
 80024b6:	2300      	movs	r3, #0
 80024b8:	e1d0      	b.n	800285c <_ftoa+0x4a4>
#endif
  }

  // test for negative
  bool negative = false;
 80024ba:	2300      	movs	r3, #0
 80024bc:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
  if (value < 0) {
 80024c0:	f04f 0200 	mov.w	r2, #0
 80024c4:	f04f 0300 	mov.w	r3, #0
 80024c8:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 80024cc:	f7fe face 	bl	8000a6c <__aeabi_dcmplt>
 80024d0:	4603      	mov	r3, r0
 80024d2:	2b00      	cmp	r3, #0
 80024d4:	d00e      	beq.n	80024f4 <_ftoa+0x13c>
    negative = true;
 80024d6:	2301      	movs	r3, #1
 80024d8:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
    value = 0 - value;
 80024dc:	e9d7 231a 	ldrd	r2, r3, [r7, #104]	; 0x68
 80024e0:	f04f 0000 	mov.w	r0, #0
 80024e4:	f04f 0100 	mov.w	r1, #0
 80024e8:	f7fd fe96 	bl	8000218 <__aeabi_dsub>
 80024ec:	4603      	mov	r3, r0
 80024ee:	460c      	mov	r4, r1
 80024f0:	e9c7 341a 	strd	r3, r4, [r7, #104]	; 0x68
  }

  // set default precision, if not set explicitly
  if (!(flags & FLAGS_PRECISION)) {
 80024f4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80024f6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d10e      	bne.n	800251c <_ftoa+0x164>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 80024fe:	2306      	movs	r3, #6
 8002500:	673b      	str	r3, [r7, #112]	; 0x70
  }
  // limit precision to 9, cause a prec >= 10 can lead to overflow errors
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 8002502:	e00b      	b.n	800251c <_ftoa+0x164>
    buf[len++] = '0';
 8002504:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002506:	1c5a      	adds	r2, r3, #1
 8002508:	657a      	str	r2, [r7, #84]	; 0x54
 800250a:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800250e:	4413      	add	r3, r2
 8002510:	2230      	movs	r2, #48	; 0x30
 8002512:	f803 2c48 	strb.w	r2, [r3, #-72]
    prec--;
 8002516:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002518:	3b01      	subs	r3, #1
 800251a:	673b      	str	r3, [r7, #112]	; 0x70
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 800251c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800251e:	2b1f      	cmp	r3, #31
 8002520:	d802      	bhi.n	8002528 <_ftoa+0x170>
 8002522:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002524:	2b09      	cmp	r3, #9
 8002526:	d8ed      	bhi.n	8002504 <_ftoa+0x14c>
  }

  int whole = (int)value;
 8002528:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800252c:	f7fe fac6 	bl	8000abc <__aeabi_d2iz>
 8002530:	4603      	mov	r3, r0
 8002532:	64fb      	str	r3, [r7, #76]	; 0x4c
  double tmp = (value - whole) * pow10[prec];
 8002534:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8002536:	f7fd ffbd 	bl	80004b4 <__aeabi_i2d>
 800253a:	4603      	mov	r3, r0
 800253c:	460c      	mov	r4, r1
 800253e:	461a      	mov	r2, r3
 8002540:	4623      	mov	r3, r4
 8002542:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8002546:	f7fd fe67 	bl	8000218 <__aeabi_dsub>
 800254a:	4603      	mov	r3, r0
 800254c:	460c      	mov	r4, r1
 800254e:	4618      	mov	r0, r3
 8002550:	4621      	mov	r1, r4
 8002552:	4a56      	ldr	r2, [pc, #344]	; (80026ac <_ftoa+0x2f4>)
 8002554:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8002556:	00db      	lsls	r3, r3, #3
 8002558:	4413      	add	r3, r2
 800255a:	e9d3 3400 	ldrd	r3, r4, [r3]
 800255e:	461a      	mov	r2, r3
 8002560:	4623      	mov	r3, r4
 8002562:	f7fe f811 	bl	8000588 <__aeabi_dmul>
 8002566:	4603      	mov	r3, r0
 8002568:	460c      	mov	r4, r1
 800256a:	e9c7 340c 	strd	r3, r4, [r7, #48]	; 0x30
  unsigned long frac = (unsigned long)tmp;
 800256e:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 8002572:	f7fe facb 	bl	8000b0c <__aeabi_d2uiz>
 8002576:	4603      	mov	r3, r0
 8002578:	64bb      	str	r3, [r7, #72]	; 0x48
  diff = tmp - frac;
 800257a:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 800257c:	f7fd ff8a 	bl	8000494 <__aeabi_ui2d>
 8002580:	4603      	mov	r3, r0
 8002582:	460c      	mov	r4, r1
 8002584:	461a      	mov	r2, r3
 8002586:	4623      	mov	r3, r4
 8002588:	e9d7 010c 	ldrd	r0, r1, [r7, #48]	; 0x30
 800258c:	f7fd fe44 	bl	8000218 <__aeabi_dsub>
 8002590:	4603      	mov	r3, r0
 8002592:	460c      	mov	r4, r1
 8002594:	e9c7 340e 	strd	r3, r4, [r7, #56]	; 0x38

  if (diff > 0.5) {
 8002598:	f04f 0200 	mov.w	r2, #0
 800259c:	4b44      	ldr	r3, [pc, #272]	; (80026b0 <_ftoa+0x2f8>)
 800259e:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 80025a2:	f7fe fa81 	bl	8000aa8 <__aeabi_dcmpgt>
 80025a6:	4603      	mov	r3, r0
 80025a8:	2b00      	cmp	r3, #0
 80025aa:	d018      	beq.n	80025de <_ftoa+0x226>
    ++frac;
 80025ac:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80025ae:	3301      	adds	r3, #1
 80025b0:	64bb      	str	r3, [r7, #72]	; 0x48
    // handle rollover, e.g. case 0.99 with prec 1 is 1.0
    if (frac >= pow10[prec]) {
 80025b2:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 80025b4:	f7fd ff6e 	bl	8000494 <__aeabi_ui2d>
 80025b8:	4a3c      	ldr	r2, [pc, #240]	; (80026ac <_ftoa+0x2f4>)
 80025ba:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80025bc:	00db      	lsls	r3, r3, #3
 80025be:	4413      	add	r3, r2
 80025c0:	e9d3 3400 	ldrd	r3, r4, [r3]
 80025c4:	461a      	mov	r2, r3
 80025c6:	4623      	mov	r3, r4
 80025c8:	f7fe fa64 	bl	8000a94 <__aeabi_dcmpge>
 80025cc:	4603      	mov	r3, r0
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	d01a      	beq.n	8002608 <_ftoa+0x250>
      frac = 0;
 80025d2:	2300      	movs	r3, #0
 80025d4:	64bb      	str	r3, [r7, #72]	; 0x48
      ++whole;
 80025d6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80025d8:	3301      	adds	r3, #1
 80025da:	64fb      	str	r3, [r7, #76]	; 0x4c
 80025dc:	e014      	b.n	8002608 <_ftoa+0x250>
    }
  }
  else if (diff < 0.5) {
 80025de:	f04f 0200 	mov.w	r2, #0
 80025e2:	4b33      	ldr	r3, [pc, #204]	; (80026b0 <_ftoa+0x2f8>)
 80025e4:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 80025e8:	f7fe fa40 	bl	8000a6c <__aeabi_dcmplt>
 80025ec:	4603      	mov	r3, r0
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d10a      	bne.n	8002608 <_ftoa+0x250>
  }
  else if ((frac == 0U) || (frac & 1U)) {
 80025f2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d004      	beq.n	8002602 <_ftoa+0x24a>
 80025f8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80025fa:	f003 0301 	and.w	r3, r3, #1
 80025fe:	2b00      	cmp	r3, #0
 8002600:	d002      	beq.n	8002608 <_ftoa+0x250>
    // if halfway, round up if odd OR if last digit is 0
    ++frac;
 8002602:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8002604:	3301      	adds	r3, #1
 8002606:	64bb      	str	r3, [r7, #72]	; 0x48
  }

  if (prec == 0U) {
 8002608:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800260a:	2b00      	cmp	r3, #0
 800260c:	d136      	bne.n	800267c <_ftoa+0x2c4>
    diff = value - (double)whole;
 800260e:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8002610:	f7fd ff50 	bl	80004b4 <__aeabi_i2d>
 8002614:	4603      	mov	r3, r0
 8002616:	460c      	mov	r4, r1
 8002618:	461a      	mov	r2, r3
 800261a:	4623      	mov	r3, r4
 800261c:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8002620:	f7fd fdfa 	bl	8000218 <__aeabi_dsub>
 8002624:	4603      	mov	r3, r0
 8002626:	460c      	mov	r4, r1
 8002628:	e9c7 340e 	strd	r3, r4, [r7, #56]	; 0x38
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 800262c:	2301      	movs	r3, #1
 800262e:	461c      	mov	r4, r3
 8002630:	f04f 0200 	mov.w	r2, #0
 8002634:	4b1e      	ldr	r3, [pc, #120]	; (80026b0 <_ftoa+0x2f8>)
 8002636:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800263a:	f7fe fa17 	bl	8000a6c <__aeabi_dcmplt>
 800263e:	4603      	mov	r3, r0
 8002640:	2b00      	cmp	r3, #0
 8002642:	d101      	bne.n	8002648 <_ftoa+0x290>
 8002644:	2300      	movs	r3, #0
 8002646:	461c      	mov	r4, r3
 8002648:	b2e3      	uxtb	r3, r4
 800264a:	f083 0301 	eor.w	r3, r3, #1
 800264e:	b2db      	uxtb	r3, r3
 8002650:	2b00      	cmp	r3, #0
 8002652:	d109      	bne.n	8002668 <_ftoa+0x2b0>
 8002654:	f04f 0200 	mov.w	r2, #0
 8002658:	4b15      	ldr	r3, [pc, #84]	; (80026b0 <_ftoa+0x2f8>)
 800265a:	e9d7 010e 	ldrd	r0, r1, [r7, #56]	; 0x38
 800265e:	f7fe fa23 	bl	8000aa8 <__aeabi_dcmpgt>
 8002662:	4603      	mov	r3, r0
 8002664:	2b00      	cmp	r3, #0
 8002666:	d069      	beq.n	800273c <_ftoa+0x384>
 8002668:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800266a:	f003 0301 	and.w	r3, r3, #1
 800266e:	2b00      	cmp	r3, #0
 8002670:	f000 8087 	beq.w	8002782 <_ftoa+0x3ca>
      // exactly 0.5 and ODD, then round up
      // 1.5 -> 2, but 2.5 -> 2
      ++whole;
 8002674:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8002676:	3301      	adds	r3, #1
 8002678:	64fb      	str	r3, [r7, #76]	; 0x4c
 800267a:	e082      	b.n	8002782 <_ftoa+0x3ca>
    }
  }
  else {
    unsigned int count = prec;
 800267c:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800267e:	647b      	str	r3, [r7, #68]	; 0x44
    // now do fractional part, as an unsigned number
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
 8002680:	e039      	b.n	80026f6 <_ftoa+0x33e>
 8002682:	bf00      	nop
 8002684:	f3af 8000 	nop.w
 8002688:	00000000 	andeq	r0, r0, r0
 800268c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
 8002690:	00000000 	andeq	r0, r0, r0
 8002694:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
 8002698:	08003ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp, ip, sp}
 800269c:	08003ecc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, fp, ip, sp}
 80026a0:	7fefffff 	svcvc	0x00efffff
 80026a4:	08003ed4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl, fp, ip, sp}
 80026a8:	08003edc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, fp, ip, sp}
 80026ac:	08003f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, ip, sp}
 80026b0:	3fe00000 	svccc	0x00e00000
      --count;
 80026b4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80026b6:	3b01      	subs	r3, #1
 80026b8:	647b      	str	r3, [r7, #68]	; 0x44
      buf[len++] = (char)(48U + (frac % 10U));
 80026ba:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 80026bc:	4b69      	ldr	r3, [pc, #420]	; (8002864 <_ftoa+0x4ac>)
 80026be:	fba3 2301 	umull	r2, r3, r3, r1
 80026c2:	08da      	lsrs	r2, r3, #3
 80026c4:	4613      	mov	r3, r2
 80026c6:	009b      	lsls	r3, r3, #2
 80026c8:	4413      	add	r3, r2
 80026ca:	005b      	lsls	r3, r3, #1
 80026cc:	1aca      	subs	r2, r1, r3
 80026ce:	b2d2      	uxtb	r2, r2
 80026d0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80026d2:	1c59      	adds	r1, r3, #1
 80026d4:	6579      	str	r1, [r7, #84]	; 0x54
 80026d6:	3230      	adds	r2, #48	; 0x30
 80026d8:	b2d2      	uxtb	r2, r2
 80026da:	f107 0158 	add.w	r1, r7, #88	; 0x58
 80026de:	440b      	add	r3, r1
 80026e0:	f803 2c48 	strb.w	r2, [r3, #-72]
      if (!(frac /= 10U)) {
 80026e4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80026e6:	4a5f      	ldr	r2, [pc, #380]	; (8002864 <_ftoa+0x4ac>)
 80026e8:	fba2 2303 	umull	r2, r3, r2, r3
 80026ec:	08db      	lsrs	r3, r3, #3
 80026ee:	64bb      	str	r3, [r7, #72]	; 0x48
 80026f0:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80026f2:	2b00      	cmp	r3, #0
 80026f4:	d003      	beq.n	80026fe <_ftoa+0x346>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
 80026f6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80026f8:	2b1f      	cmp	r3, #31
 80026fa:	d9db      	bls.n	80026b4 <_ftoa+0x2fc>
 80026fc:	e00a      	b.n	8002714 <_ftoa+0x35c>
        break;
 80026fe:	bf00      	nop
      }
    }
    // add extra 0s
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 8002700:	e008      	b.n	8002714 <_ftoa+0x35c>
      buf[len++] = '0';
 8002702:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002704:	1c5a      	adds	r2, r3, #1
 8002706:	657a      	str	r2, [r7, #84]	; 0x54
 8002708:	f107 0258 	add.w	r2, r7, #88	; 0x58
 800270c:	4413      	add	r3, r2
 800270e:	2230      	movs	r2, #48	; 0x30
 8002710:	f803 2c48 	strb.w	r2, [r3, #-72]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 8002714:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002716:	2b1f      	cmp	r3, #31
 8002718:	d804      	bhi.n	8002724 <_ftoa+0x36c>
 800271a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800271c:	1e5a      	subs	r2, r3, #1
 800271e:	647a      	str	r2, [r7, #68]	; 0x44
 8002720:	2b00      	cmp	r3, #0
 8002722:	d1ee      	bne.n	8002702 <_ftoa+0x34a>
    }
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
 8002724:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002726:	2b1f      	cmp	r3, #31
 8002728:	d82b      	bhi.n	8002782 <_ftoa+0x3ca>
      // add decimal
      buf[len++] = '.';
 800272a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800272c:	1c5a      	adds	r2, r3, #1
 800272e:	657a      	str	r2, [r7, #84]	; 0x54
 8002730:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8002734:	4413      	add	r3, r2
 8002736:	222e      	movs	r2, #46	; 0x2e
 8002738:	f803 2c48 	strb.w	r2, [r3, #-72]
    }
  }

  // do whole part, number is reversed
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
 800273c:	e021      	b.n	8002782 <_ftoa+0x3ca>
    buf[len++] = (char)(48 + (whole % 10));
 800273e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8002740:	4b49      	ldr	r3, [pc, #292]	; (8002868 <_ftoa+0x4b0>)
 8002742:	fb83 1302 	smull	r1, r3, r3, r2
 8002746:	1099      	asrs	r1, r3, #2
 8002748:	17d3      	asrs	r3, r2, #31
 800274a:	1ac9      	subs	r1, r1, r3
 800274c:	460b      	mov	r3, r1
 800274e:	009b      	lsls	r3, r3, #2
 8002750:	440b      	add	r3, r1
 8002752:	005b      	lsls	r3, r3, #1
 8002754:	1ad1      	subs	r1, r2, r3
 8002756:	b2ca      	uxtb	r2, r1
 8002758:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800275a:	1c59      	adds	r1, r3, #1
 800275c:	6579      	str	r1, [r7, #84]	; 0x54
 800275e:	3230      	adds	r2, #48	; 0x30
 8002760:	b2d2      	uxtb	r2, r2
 8002762:	f107 0158 	add.w	r1, r7, #88	; 0x58
 8002766:	440b      	add	r3, r1
 8002768:	f803 2c48 	strb.w	r2, [r3, #-72]
    if (!(whole /= 10)) {
 800276c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800276e:	4a3e      	ldr	r2, [pc, #248]	; (8002868 <_ftoa+0x4b0>)
 8002770:	fb82 1203 	smull	r1, r2, r2, r3
 8002774:	1092      	asrs	r2, r2, #2
 8002776:	17db      	asrs	r3, r3, #31
 8002778:	1ad3      	subs	r3, r2, r3
 800277a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800277c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800277e:	2b00      	cmp	r3, #0
 8002780:	d003      	beq.n	800278a <_ftoa+0x3d2>
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
 8002782:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002784:	2b1f      	cmp	r3, #31
 8002786:	d9da      	bls.n	800273e <_ftoa+0x386>
 8002788:	e000      	b.n	800278c <_ftoa+0x3d4>
      break;
 800278a:	bf00      	nop
    }
  }

  // pad leading zeros
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 800278c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800278e:	f003 0302 	and.w	r3, r3, #2
 8002792:	2b00      	cmp	r3, #0
 8002794:	d124      	bne.n	80027e0 <_ftoa+0x428>
 8002796:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002798:	f003 0301 	and.w	r3, r3, #1
 800279c:	2b00      	cmp	r3, #0
 800279e:	d01f      	beq.n	80027e0 <_ftoa+0x428>
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 80027a0:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	d015      	beq.n	80027d2 <_ftoa+0x41a>
 80027a6:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	d104      	bne.n	80027b8 <_ftoa+0x400>
 80027ae:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80027b0:	f003 030c 	and.w	r3, r3, #12
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	d00c      	beq.n	80027d2 <_ftoa+0x41a>
      width--;
 80027b8:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80027ba:	3b01      	subs	r3, #1
 80027bc:	677b      	str	r3, [r7, #116]	; 0x74
    }
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 80027be:	e008      	b.n	80027d2 <_ftoa+0x41a>
      buf[len++] = '0';
 80027c0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80027c2:	1c5a      	adds	r2, r3, #1
 80027c4:	657a      	str	r2, [r7, #84]	; 0x54
 80027c6:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80027ca:	4413      	add	r3, r2
 80027cc:	2230      	movs	r2, #48	; 0x30
 80027ce:	f803 2c48 	strb.w	r2, [r3, #-72]
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 80027d2:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80027d4:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80027d6:	429a      	cmp	r2, r3
 80027d8:	d202      	bcs.n	80027e0 <_ftoa+0x428>
 80027da:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80027dc:	2b1f      	cmp	r3, #31
 80027de:	d9ef      	bls.n	80027c0 <_ftoa+0x408>
    }
  }

  if (len < PRINTF_FTOA_BUFFER_SIZE) {
 80027e0:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80027e2:	2b1f      	cmp	r3, #31
 80027e4:	d82a      	bhi.n	800283c <_ftoa+0x484>
    if (negative) {
 80027e6:	f897 3053 	ldrb.w	r3, [r7, #83]	; 0x53
 80027ea:	2b00      	cmp	r3, #0
 80027ec:	d009      	beq.n	8002802 <_ftoa+0x44a>
      buf[len++] = '-';
 80027ee:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80027f0:	1c5a      	adds	r2, r3, #1
 80027f2:	657a      	str	r2, [r7, #84]	; 0x54
 80027f4:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80027f8:	4413      	add	r3, r2
 80027fa:	222d      	movs	r2, #45	; 0x2d
 80027fc:	f803 2c48 	strb.w	r2, [r3, #-72]
 8002800:	e01c      	b.n	800283c <_ftoa+0x484>
    }
    else if (flags & FLAGS_PLUS) {
 8002802:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002804:	f003 0304 	and.w	r3, r3, #4
 8002808:	2b00      	cmp	r3, #0
 800280a:	d009      	beq.n	8002820 <_ftoa+0x468>
      buf[len++] = '+';  // ignore the space if the '+' exists
 800280c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800280e:	1c5a      	adds	r2, r3, #1
 8002810:	657a      	str	r2, [r7, #84]	; 0x54
 8002812:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8002816:	4413      	add	r3, r2
 8002818:	222b      	movs	r2, #43	; 0x2b
 800281a:	f803 2c48 	strb.w	r2, [r3, #-72]
 800281e:	e00d      	b.n	800283c <_ftoa+0x484>
    }
    else if (flags & FLAGS_SPACE) {
 8002820:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8002822:	f003 0308 	and.w	r3, r3, #8
 8002826:	2b00      	cmp	r3, #0
 8002828:	d008      	beq.n	800283c <_ftoa+0x484>
      buf[len++] = ' ';
 800282a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800282c:	1c5a      	adds	r2, r3, #1
 800282e:	657a      	str	r2, [r7, #84]	; 0x54
 8002830:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8002834:	4413      	add	r3, r2
 8002836:	2220      	movs	r2, #32
 8002838:	f803 2c48 	strb.w	r2, [r3, #-72]
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 800283c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800283e:	9303      	str	r3, [sp, #12]
 8002840:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8002842:	9302      	str	r3, [sp, #8]
 8002844:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8002846:	9301      	str	r3, [sp, #4]
 8002848:	f107 0310 	add.w	r3, r7, #16
 800284c:	9300      	str	r3, [sp, #0]
 800284e:	683b      	ldr	r3, [r7, #0]
 8002850:	687a      	ldr	r2, [r7, #4]
 8002852:	68b9      	ldr	r1, [r7, #8]
 8002854:	68f8      	ldr	r0, [r7, #12]
 8002856:	f7ff fc1b 	bl	8002090 <_out_rev>
 800285a:	4603      	mov	r3, r0
}
 800285c:	4618      	mov	r0, r3
 800285e:	375c      	adds	r7, #92	; 0x5c
 8002860:	46bd      	mov	sp, r7
 8002862:	bd90      	pop	{r4, r7, pc}
 8002864:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
 8002868:	66666667 	strbtvs	r6, [r6], -r7, ror #12

0800286c <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
 800286c:	b590      	push	{r4, r7, lr}
 800286e:	b099      	sub	sp, #100	; 0x64
 8002870:	af06      	add	r7, sp, #24
 8002872:	60f8      	str	r0, [r7, #12]
 8002874:	60b9      	str	r1, [r7, #8]
 8002876:	607a      	str	r2, [r7, #4]
 8002878:	603b      	str	r3, [r7, #0]
  unsigned int flags, width, precision, n;
  size_t idx = 0U;
 800287a:	2300      	movs	r3, #0
 800287c:	637b      	str	r3, [r7, #52]	; 0x34

  if (!buffer) {
 800287e:	68bb      	ldr	r3, [r7, #8]
 8002880:	2b00      	cmp	r3, #0
 8002882:	f040 83e3 	bne.w	800304c <_vsnprintf+0x7e0>
    // use null output function
    out = _out_null;
 8002886:	4b9f      	ldr	r3, [pc, #636]	; (8002b04 <_vsnprintf+0x298>)
 8002888:	60fb      	str	r3, [r7, #12]
  }

  while (*format)
 800288a:	e3df      	b.n	800304c <_vsnprintf+0x7e0>
  {
    // format specifier?  %[flags][width][.precision][length]
    if (*format != '%') {
 800288c:	683b      	ldr	r3, [r7, #0]
 800288e:	781b      	ldrb	r3, [r3, #0]
 8002890:	2b25      	cmp	r3, #37	; 0x25
 8002892:	d00c      	beq.n	80028ae <_vsnprintf+0x42>
      // no
      out(*format, buffer, idx++, maxlen);
 8002894:	683b      	ldr	r3, [r7, #0]
 8002896:	7818      	ldrb	r0, [r3, #0]
 8002898:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800289a:	1c53      	adds	r3, r2, #1
 800289c:	637b      	str	r3, [r7, #52]	; 0x34
 800289e:	68fc      	ldr	r4, [r7, #12]
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	68b9      	ldr	r1, [r7, #8]
 80028a4:	47a0      	blx	r4
      format++;
 80028a6:	683b      	ldr	r3, [r7, #0]
 80028a8:	3301      	adds	r3, #1
 80028aa:	603b      	str	r3, [r7, #0]
      continue;
 80028ac:	e3ce      	b.n	800304c <_vsnprintf+0x7e0>
    }
    else {
      // yes, evaluate it
      format++;
 80028ae:	683b      	ldr	r3, [r7, #0]
 80028b0:	3301      	adds	r3, #1
 80028b2:	603b      	str	r3, [r7, #0]
    }

    // evaluate flags
    flags = 0U;
 80028b4:	2300      	movs	r3, #0
 80028b6:	647b      	str	r3, [r7, #68]	; 0x44
    do {
      switch (*format) {
 80028b8:	683b      	ldr	r3, [r7, #0]
 80028ba:	781b      	ldrb	r3, [r3, #0]
 80028bc:	3b20      	subs	r3, #32
 80028be:	2b10      	cmp	r3, #16
 80028c0:	d856      	bhi.n	8002970 <_vsnprintf+0x104>
 80028c2:	a201      	add	r2, pc, #4	; (adr r2, 80028c8 <_vsnprintf+0x5c>)
 80028c4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028c8:	08002949 	stmdaeq	r0, {r0, r3, r6, r8, fp, sp}
 80028cc:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028d0:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028d4:	0800295d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, fp, sp}
 80028d8:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028dc:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028e0:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028e4:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028e8:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028ec:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028f0:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028f4:	08002935 	stmdaeq	r0, {r0, r2, r4, r5, r8, fp, sp}
 80028f8:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 80028fc:	08002921 	stmdaeq	r0, {r0, r5, r8, fp, sp}
 8002900:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 8002904:	08002971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp}
 8002908:	0800290d 	stmdaeq	r0, {r0, r2, r3, r8, fp, sp}
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
 800290c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800290e:	f043 0301 	orr.w	r3, r3, #1
 8002912:	647b      	str	r3, [r7, #68]	; 0x44
 8002914:	683b      	ldr	r3, [r7, #0]
 8002916:	3301      	adds	r3, #1
 8002918:	603b      	str	r3, [r7, #0]
 800291a:	2301      	movs	r3, #1
 800291c:	63bb      	str	r3, [r7, #56]	; 0x38
 800291e:	e02a      	b.n	8002976 <_vsnprintf+0x10a>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
 8002920:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002922:	f043 0302 	orr.w	r3, r3, #2
 8002926:	647b      	str	r3, [r7, #68]	; 0x44
 8002928:	683b      	ldr	r3, [r7, #0]
 800292a:	3301      	adds	r3, #1
 800292c:	603b      	str	r3, [r7, #0]
 800292e:	2301      	movs	r3, #1
 8002930:	63bb      	str	r3, [r7, #56]	; 0x38
 8002932:	e020      	b.n	8002976 <_vsnprintf+0x10a>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
 8002934:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002936:	f043 0304 	orr.w	r3, r3, #4
 800293a:	647b      	str	r3, [r7, #68]	; 0x44
 800293c:	683b      	ldr	r3, [r7, #0]
 800293e:	3301      	adds	r3, #1
 8002940:	603b      	str	r3, [r7, #0]
 8002942:	2301      	movs	r3, #1
 8002944:	63bb      	str	r3, [r7, #56]	; 0x38
 8002946:	e016      	b.n	8002976 <_vsnprintf+0x10a>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
 8002948:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800294a:	f043 0308 	orr.w	r3, r3, #8
 800294e:	647b      	str	r3, [r7, #68]	; 0x44
 8002950:	683b      	ldr	r3, [r7, #0]
 8002952:	3301      	adds	r3, #1
 8002954:	603b      	str	r3, [r7, #0]
 8002956:	2301      	movs	r3, #1
 8002958:	63bb      	str	r3, [r7, #56]	; 0x38
 800295a:	e00c      	b.n	8002976 <_vsnprintf+0x10a>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
 800295c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800295e:	f043 0310 	orr.w	r3, r3, #16
 8002962:	647b      	str	r3, [r7, #68]	; 0x44
 8002964:	683b      	ldr	r3, [r7, #0]
 8002966:	3301      	adds	r3, #1
 8002968:	603b      	str	r3, [r7, #0]
 800296a:	2301      	movs	r3, #1
 800296c:	63bb      	str	r3, [r7, #56]	; 0x38
 800296e:	e002      	b.n	8002976 <_vsnprintf+0x10a>
        default :                                   n = 0U; break;
 8002970:	2300      	movs	r3, #0
 8002972:	63bb      	str	r3, [r7, #56]	; 0x38
 8002974:	bf00      	nop
      }
    } while (n);
 8002976:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002978:	2b00      	cmp	r3, #0
 800297a:	d19d      	bne.n	80028b8 <_vsnprintf+0x4c>

    // evaluate width field
    width = 0U;
 800297c:	2300      	movs	r3, #0
 800297e:	643b      	str	r3, [r7, #64]	; 0x40
    if (_is_digit(*format)) {
 8002980:	683b      	ldr	r3, [r7, #0]
 8002982:	781b      	ldrb	r3, [r3, #0]
 8002984:	4618      	mov	r0, r3
 8002986:	f7ff fb49 	bl	800201c <_is_digit>
 800298a:	4603      	mov	r3, r0
 800298c:	2b00      	cmp	r3, #0
 800298e:	d005      	beq.n	800299c <_vsnprintf+0x130>
      width = _atoi(&format);
 8002990:	463b      	mov	r3, r7
 8002992:	4618      	mov	r0, r3
 8002994:	f7ff fb58 	bl	8002048 <_atoi>
 8002998:	6438      	str	r0, [r7, #64]	; 0x40
 800299a:	e018      	b.n	80029ce <_vsnprintf+0x162>
    }
    else if (*format == '*') {
 800299c:	683b      	ldr	r3, [r7, #0]
 800299e:	781b      	ldrb	r3, [r3, #0]
 80029a0:	2b2a      	cmp	r3, #42	; 0x2a
 80029a2:	d114      	bne.n	80029ce <_vsnprintf+0x162>
      const int w = va_arg(va, int);
 80029a4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80029a6:	1d1a      	adds	r2, r3, #4
 80029a8:	65ba      	str	r2, [r7, #88]	; 0x58
 80029aa:	681b      	ldr	r3, [r3, #0]
 80029ac:	623b      	str	r3, [r7, #32]
      if (w < 0) {
 80029ae:	6a3b      	ldr	r3, [r7, #32]
 80029b0:	2b00      	cmp	r3, #0
 80029b2:	da07      	bge.n	80029c4 <_vsnprintf+0x158>
        flags |= FLAGS_LEFT;    // reverse padding
 80029b4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80029b6:	f043 0302 	orr.w	r3, r3, #2
 80029ba:	647b      	str	r3, [r7, #68]	; 0x44
        width = (unsigned int)-w;
 80029bc:	6a3b      	ldr	r3, [r7, #32]
 80029be:	425b      	negs	r3, r3
 80029c0:	643b      	str	r3, [r7, #64]	; 0x40
 80029c2:	e001      	b.n	80029c8 <_vsnprintf+0x15c>
      }
      else {
        width = (unsigned int)w;
 80029c4:	6a3b      	ldr	r3, [r7, #32]
 80029c6:	643b      	str	r3, [r7, #64]	; 0x40
      }
      format++;
 80029c8:	683b      	ldr	r3, [r7, #0]
 80029ca:	3301      	adds	r3, #1
 80029cc:	603b      	str	r3, [r7, #0]
    }

    // evaluate precision field
    precision = 0U;
 80029ce:	2300      	movs	r3, #0
 80029d0:	63fb      	str	r3, [r7, #60]	; 0x3c
    if (*format == '.') {
 80029d2:	683b      	ldr	r3, [r7, #0]
 80029d4:	781b      	ldrb	r3, [r3, #0]
 80029d6:	2b2e      	cmp	r3, #46	; 0x2e
 80029d8:	d124      	bne.n	8002a24 <_vsnprintf+0x1b8>
      flags |= FLAGS_PRECISION;
 80029da:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80029dc:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80029e0:	647b      	str	r3, [r7, #68]	; 0x44
      format++;
 80029e2:	683b      	ldr	r3, [r7, #0]
 80029e4:	3301      	adds	r3, #1
 80029e6:	603b      	str	r3, [r7, #0]
      if (_is_digit(*format)) {
 80029e8:	683b      	ldr	r3, [r7, #0]
 80029ea:	781b      	ldrb	r3, [r3, #0]
 80029ec:	4618      	mov	r0, r3
 80029ee:	f7ff fb15 	bl	800201c <_is_digit>
 80029f2:	4603      	mov	r3, r0
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	d005      	beq.n	8002a04 <_vsnprintf+0x198>
        precision = _atoi(&format);
 80029f8:	463b      	mov	r3, r7
 80029fa:	4618      	mov	r0, r3
 80029fc:	f7ff fb24 	bl	8002048 <_atoi>
 8002a00:	63f8      	str	r0, [r7, #60]	; 0x3c
 8002a02:	e00f      	b.n	8002a24 <_vsnprintf+0x1b8>
      }
      else if (*format == '*') {
 8002a04:	683b      	ldr	r3, [r7, #0]
 8002a06:	781b      	ldrb	r3, [r3, #0]
 8002a08:	2b2a      	cmp	r3, #42	; 0x2a
 8002a0a:	d10b      	bne.n	8002a24 <_vsnprintf+0x1b8>
        const int prec = (int)va_arg(va, int);
 8002a0c:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002a0e:	1d1a      	adds	r2, r3, #4
 8002a10:	65ba      	str	r2, [r7, #88]	; 0x58
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	61fb      	str	r3, [r7, #28]
        precision = prec > 0 ? (unsigned int)prec : 0U;
 8002a16:	69fb      	ldr	r3, [r7, #28]
 8002a18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8002a1c:	63fb      	str	r3, [r7, #60]	; 0x3c
        format++;
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	3301      	adds	r3, #1
 8002a22:	603b      	str	r3, [r7, #0]
      }
    }

    // evaluate length field
    switch (*format) {
 8002a24:	683b      	ldr	r3, [r7, #0]
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	3b68      	subs	r3, #104	; 0x68
 8002a2a:	2b12      	cmp	r3, #18
 8002a2c:	d866      	bhi.n	8002afc <_vsnprintf+0x290>
 8002a2e:	a201      	add	r2, pc, #4	; (adr r2, 8002a34 <_vsnprintf+0x1c8>)
 8002a30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002a34:	08002aa7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9, fp, sp}
 8002a38:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a3c:	08002add 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp, sp}
 8002a40:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a44:	08002a81 	stmdaeq	r0, {r0, r7, r9, fp, sp}
 8002a48:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a4c:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a50:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a54:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a58:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a5c:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a60:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a64:	08002acd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, fp, sp}
 8002a68:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a6c:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a70:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a74:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a78:	08002afd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp}
 8002a7c:	08002aed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, fp, sp}
      case 'l' :
        flags |= FLAGS_LONG;
 8002a80:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002a82:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002a86:	647b      	str	r3, [r7, #68]	; 0x44
        format++;
 8002a88:	683b      	ldr	r3, [r7, #0]
 8002a8a:	3301      	adds	r3, #1
 8002a8c:	603b      	str	r3, [r7, #0]
        if (*format == 'l') {
 8002a8e:	683b      	ldr	r3, [r7, #0]
 8002a90:	781b      	ldrb	r3, [r3, #0]
 8002a92:	2b6c      	cmp	r3, #108	; 0x6c
 8002a94:	d134      	bne.n	8002b00 <_vsnprintf+0x294>
          flags |= FLAGS_LONG_LONG;
 8002a96:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002a98:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002a9c:	647b      	str	r3, [r7, #68]	; 0x44
          format++;
 8002a9e:	683b      	ldr	r3, [r7, #0]
 8002aa0:	3301      	adds	r3, #1
 8002aa2:	603b      	str	r3, [r7, #0]
        }
        break;
 8002aa4:	e02c      	b.n	8002b00 <_vsnprintf+0x294>
      case 'h' :
        flags |= FLAGS_SHORT;
 8002aa6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002aa8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002aac:	647b      	str	r3, [r7, #68]	; 0x44
        format++;
 8002aae:	683b      	ldr	r3, [r7, #0]
 8002ab0:	3301      	adds	r3, #1
 8002ab2:	603b      	str	r3, [r7, #0]
        if (*format == 'h') {
 8002ab4:	683b      	ldr	r3, [r7, #0]
 8002ab6:	781b      	ldrb	r3, [r3, #0]
 8002ab8:	2b68      	cmp	r3, #104	; 0x68
 8002aba:	d125      	bne.n	8002b08 <_vsnprintf+0x29c>
          flags |= FLAGS_CHAR;
 8002abc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002abe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002ac2:	647b      	str	r3, [r7, #68]	; 0x44
          format++;
 8002ac4:	683b      	ldr	r3, [r7, #0]
 8002ac6:	3301      	adds	r3, #1
 8002ac8:	603b      	str	r3, [r7, #0]
        }
        break;
 8002aca:	e01d      	b.n	8002b08 <_vsnprintf+0x29c>
#if defined(PRINTF_SUPPORT_PTRDIFF_T)
      case 't' :
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 8002acc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ace:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002ad2:	647b      	str	r3, [r7, #68]	; 0x44
        format++;
 8002ad4:	683b      	ldr	r3, [r7, #0]
 8002ad6:	3301      	adds	r3, #1
 8002ad8:	603b      	str	r3, [r7, #0]
        break;
 8002ada:	e016      	b.n	8002b0a <_vsnprintf+0x29e>
#endif
      case 'j' :
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 8002adc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ade:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002ae2:	647b      	str	r3, [r7, #68]	; 0x44
        format++;
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	3301      	adds	r3, #1
 8002ae8:	603b      	str	r3, [r7, #0]
        break;
 8002aea:	e00e      	b.n	8002b0a <_vsnprintf+0x29e>
      case 'z' :
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 8002aec:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002aee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002af2:	647b      	str	r3, [r7, #68]	; 0x44
        format++;
 8002af4:	683b      	ldr	r3, [r7, #0]
 8002af6:	3301      	adds	r3, #1
 8002af8:	603b      	str	r3, [r7, #0]
        break;
 8002afa:	e006      	b.n	8002b0a <_vsnprintf+0x29e>
      default :
        break;
 8002afc:	bf00      	nop
 8002afe:	e004      	b.n	8002b0a <_vsnprintf+0x29e>
        break;
 8002b00:	bf00      	nop
 8002b02:	e002      	b.n	8002b0a <_vsnprintf+0x29e>
 8002b04:	08001fa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, ip}
        break;
 8002b08:	bf00      	nop
    }

    // evaluate specifier
    switch (*format) {
 8002b0a:	683b      	ldr	r3, [r7, #0]
 8002b0c:	781b      	ldrb	r3, [r3, #0]
 8002b0e:	3b25      	subs	r3, #37	; 0x25
 8002b10:	2b53      	cmp	r3, #83	; 0x53
 8002b12:	f200 828e 	bhi.w	8003032 <_vsnprintf+0x7c6>
 8002b16:	a201      	add	r2, pc, #4	; (adr r2, 8002b1c <_vsnprintf+0x2b0>)
 8002b18:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002b1c:	0800301b 	stmdaeq	r0, {r0, r1, r3, r4, ip, sp}
 8002b20:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b24:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b28:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b2c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b30:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b34:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b38:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b3c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b40:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b44:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b48:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b4c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b50:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b54:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b58:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b5c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b60:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b64:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b68:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b6c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b70:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b74:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b78:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b7c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b80:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b84:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b88:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b8c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b90:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b94:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b98:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002b9c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002ba0:	08002e59 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, fp, sp}
 8002ba4:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002ba8:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bac:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bb0:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bb4:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bb8:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bbc:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bc0:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bc4:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bc8:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bcc:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bd0:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bd4:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bd8:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bdc:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002be0:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002be4:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002be8:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
 8002bec:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bf0:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bf4:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bf8:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002bfc:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c00:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c04:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c08:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c0c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c10:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
 8002c14:	08002ea1 	stmdaeq	r0, {r0, r5, r7, r9, sl, fp, sp}
 8002c18:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
 8002c1c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c20:	08002e59 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, fp, sp}
 8002c24:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c28:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c2c:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
 8002c30:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c34:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c38:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c3c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c40:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c44:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
 8002c48:	08002fd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, fp, sp}
 8002c4c:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c50:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c54:	08002f15 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, fp, sp}
 8002c58:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c5c:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
 8002c60:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c64:	08003033 	stmdaeq	r0, {r0, r1, r4, r5, ip, sp}
 8002c68:	08002c6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp}
      case 'X' :
      case 'o' :
      case 'b' : {
        // set the base
        unsigned int base;
        if (*format == 'x' || *format == 'X') {
 8002c6c:	683b      	ldr	r3, [r7, #0]
 8002c6e:	781b      	ldrb	r3, [r3, #0]
 8002c70:	2b78      	cmp	r3, #120	; 0x78
 8002c72:	d003      	beq.n	8002c7c <_vsnprintf+0x410>
 8002c74:	683b      	ldr	r3, [r7, #0]
 8002c76:	781b      	ldrb	r3, [r3, #0]
 8002c78:	2b58      	cmp	r3, #88	; 0x58
 8002c7a:	d102      	bne.n	8002c82 <_vsnprintf+0x416>
          base = 16U;
 8002c7c:	2310      	movs	r3, #16
 8002c7e:	633b      	str	r3, [r7, #48]	; 0x30
 8002c80:	e013      	b.n	8002caa <_vsnprintf+0x43e>
        }
        else if (*format == 'o') {
 8002c82:	683b      	ldr	r3, [r7, #0]
 8002c84:	781b      	ldrb	r3, [r3, #0]
 8002c86:	2b6f      	cmp	r3, #111	; 0x6f
 8002c88:	d102      	bne.n	8002c90 <_vsnprintf+0x424>
          base =  8U;
 8002c8a:	2308      	movs	r3, #8
 8002c8c:	633b      	str	r3, [r7, #48]	; 0x30
 8002c8e:	e00c      	b.n	8002caa <_vsnprintf+0x43e>
        }
        else if (*format == 'b') {
 8002c90:	683b      	ldr	r3, [r7, #0]
 8002c92:	781b      	ldrb	r3, [r3, #0]
 8002c94:	2b62      	cmp	r3, #98	; 0x62
 8002c96:	d102      	bne.n	8002c9e <_vsnprintf+0x432>
          base =  2U;
 8002c98:	2302      	movs	r3, #2
 8002c9a:	633b      	str	r3, [r7, #48]	; 0x30
 8002c9c:	e005      	b.n	8002caa <_vsnprintf+0x43e>
        }
        else {
          base = 10U;
 8002c9e:	230a      	movs	r3, #10
 8002ca0:	633b      	str	r3, [r7, #48]	; 0x30
          flags &= ~FLAGS_HASH;   // no hash for dec format
 8002ca2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ca4:	f023 0310 	bic.w	r3, r3, #16
 8002ca8:	647b      	str	r3, [r7, #68]	; 0x44
        }
        // uppercase
        if (*format == 'X') {
 8002caa:	683b      	ldr	r3, [r7, #0]
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	2b58      	cmp	r3, #88	; 0x58
 8002cb0:	d103      	bne.n	8002cba <_vsnprintf+0x44e>
          flags |= FLAGS_UPPERCASE;
 8002cb2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002cb4:	f043 0320 	orr.w	r3, r3, #32
 8002cb8:	647b      	str	r3, [r7, #68]	; 0x44
        }

        // no plus or space flag for u, x, X, o, b
        if ((*format != 'i') && (*format != 'd')) {
 8002cba:	683b      	ldr	r3, [r7, #0]
 8002cbc:	781b      	ldrb	r3, [r3, #0]
 8002cbe:	2b69      	cmp	r3, #105	; 0x69
 8002cc0:	d007      	beq.n	8002cd2 <_vsnprintf+0x466>
 8002cc2:	683b      	ldr	r3, [r7, #0]
 8002cc4:	781b      	ldrb	r3, [r3, #0]
 8002cc6:	2b64      	cmp	r3, #100	; 0x64
 8002cc8:	d003      	beq.n	8002cd2 <_vsnprintf+0x466>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 8002cca:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ccc:	f023 030c 	bic.w	r3, r3, #12
 8002cd0:	647b      	str	r3, [r7, #68]	; 0x44
        }

        // ignore '0' flag when precision is given
        if (flags & FLAGS_PRECISION) {
 8002cd2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002cd4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	d003      	beq.n	8002ce4 <_vsnprintf+0x478>
          flags &= ~FLAGS_ZEROPAD;
 8002cdc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002cde:	f023 0301 	bic.w	r3, r3, #1
 8002ce2:	647b      	str	r3, [r7, #68]	; 0x44
        }

        // convert the integer
        if ((*format == 'i') || (*format == 'd')) {
 8002ce4:	683b      	ldr	r3, [r7, #0]
 8002ce6:	781b      	ldrb	r3, [r3, #0]
 8002ce8:	2b69      	cmp	r3, #105	; 0x69
 8002cea:	d003      	beq.n	8002cf4 <_vsnprintf+0x488>
 8002cec:	683b      	ldr	r3, [r7, #0]
 8002cee:	781b      	ldrb	r3, [r3, #0]
 8002cf0:	2b64      	cmp	r3, #100	; 0x64
 8002cf2:	d15e      	bne.n	8002db2 <_vsnprintf+0x546>
          // signed
          if (flags & FLAGS_LONG_LONG) {
 8002cf4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002cf6:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002cfa:	2b00      	cmp	r3, #0
 8002cfc:	f040 80a8 	bne.w	8002e50 <_vsnprintf+0x5e4>
#if defined(PRINTF_SUPPORT_LONG_LONG)
            const long long value = va_arg(va, long long);
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
#endif
          }
          else if (flags & FLAGS_LONG) {
 8002d00:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002d02:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002d06:	2b00      	cmp	r3, #0
 8002d08:	d01e      	beq.n	8002d48 <_vsnprintf+0x4dc>
            const long value = va_arg(va, long);
 8002d0a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002d0c:	1d1a      	adds	r2, r3, #4
 8002d0e:	65ba      	str	r2, [r7, #88]	; 0x58
 8002d10:	681b      	ldr	r3, [r3, #0]
 8002d12:	617b      	str	r3, [r7, #20]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8002d14:	697b      	ldr	r3, [r7, #20]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	bfb8      	it	lt
 8002d1a:	425b      	neglt	r3, r3
 8002d1c:	4619      	mov	r1, r3
 8002d1e:	697b      	ldr	r3, [r7, #20]
 8002d20:	0fdb      	lsrs	r3, r3, #31
 8002d22:	b2db      	uxtb	r3, r3
 8002d24:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002d26:	9205      	str	r2, [sp, #20]
 8002d28:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002d2a:	9204      	str	r2, [sp, #16]
 8002d2c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002d2e:	9203      	str	r2, [sp, #12]
 8002d30:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002d32:	9202      	str	r2, [sp, #8]
 8002d34:	9301      	str	r3, [sp, #4]
 8002d36:	9100      	str	r1, [sp, #0]
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002d3c:	68b9      	ldr	r1, [r7, #8]
 8002d3e:	68f8      	ldr	r0, [r7, #12]
 8002d40:	f7ff fad2 	bl	80022e8 <_ntoa_long>
 8002d44:	6378      	str	r0, [r7, #52]	; 0x34
          if (flags & FLAGS_LONG_LONG) {
 8002d46:	e083      	b.n	8002e50 <_vsnprintf+0x5e4>
          }
          else {
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
 8002d48:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002d4a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d005      	beq.n	8002d5e <_vsnprintf+0x4f2>
 8002d52:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002d54:	1d1a      	adds	r2, r3, #4
 8002d56:	65ba      	str	r2, [r7, #88]	; 0x58
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	b2db      	uxtb	r3, r3
 8002d5c:	e00e      	b.n	8002d7c <_vsnprintf+0x510>
 8002d5e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002d60:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002d64:	2b00      	cmp	r3, #0
 8002d66:	d005      	beq.n	8002d74 <_vsnprintf+0x508>
 8002d68:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002d6a:	1d1a      	adds	r2, r3, #4
 8002d6c:	65ba      	str	r2, [r7, #88]	; 0x58
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	b21b      	sxth	r3, r3
 8002d72:	e003      	b.n	8002d7c <_vsnprintf+0x510>
 8002d74:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002d76:	1d1a      	adds	r2, r3, #4
 8002d78:	65ba      	str	r2, [r7, #88]	; 0x58
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	613b      	str	r3, [r7, #16]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
 8002d7e:	693b      	ldr	r3, [r7, #16]
 8002d80:	2b00      	cmp	r3, #0
 8002d82:	bfb8      	it	lt
 8002d84:	425b      	neglt	r3, r3
 8002d86:	4619      	mov	r1, r3
 8002d88:	693b      	ldr	r3, [r7, #16]
 8002d8a:	0fdb      	lsrs	r3, r3, #31
 8002d8c:	b2db      	uxtb	r3, r3
 8002d8e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002d90:	9205      	str	r2, [sp, #20]
 8002d92:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002d94:	9204      	str	r2, [sp, #16]
 8002d96:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002d98:	9203      	str	r2, [sp, #12]
 8002d9a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002d9c:	9202      	str	r2, [sp, #8]
 8002d9e:	9301      	str	r3, [sp, #4]
 8002da0:	9100      	str	r1, [sp, #0]
 8002da2:	687b      	ldr	r3, [r7, #4]
 8002da4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002da6:	68b9      	ldr	r1, [r7, #8]
 8002da8:	68f8      	ldr	r0, [r7, #12]
 8002daa:	f7ff fa9d 	bl	80022e8 <_ntoa_long>
 8002dae:	6378      	str	r0, [r7, #52]	; 0x34
          if (flags & FLAGS_LONG_LONG) {
 8002db0:	e04e      	b.n	8002e50 <_vsnprintf+0x5e4>
          }
        }
        else {
          // unsigned
          if (flags & FLAGS_LONG_LONG) {
 8002db2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002db4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d149      	bne.n	8002e50 <_vsnprintf+0x5e4>
#if defined(PRINTF_SUPPORT_LONG_LONG)
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
#endif
          }
          else if (flags & FLAGS_LONG) {
 8002dbc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002dbe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	d016      	beq.n	8002df4 <_vsnprintf+0x588>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
 8002dc6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002dc8:	1d1a      	adds	r2, r3, #4
 8002dca:	65ba      	str	r2, [r7, #88]	; 0x58
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002dd0:	9205      	str	r2, [sp, #20]
 8002dd2:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002dd4:	9204      	str	r2, [sp, #16]
 8002dd6:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002dd8:	9203      	str	r2, [sp, #12]
 8002dda:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002ddc:	9202      	str	r2, [sp, #8]
 8002dde:	2200      	movs	r2, #0
 8002de0:	9201      	str	r2, [sp, #4]
 8002de2:	9300      	str	r3, [sp, #0]
 8002de4:	687b      	ldr	r3, [r7, #4]
 8002de6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002de8:	68b9      	ldr	r1, [r7, #8]
 8002dea:	68f8      	ldr	r0, [r7, #12]
 8002dec:	f7ff fa7c 	bl	80022e8 <_ntoa_long>
 8002df0:	6378      	str	r0, [r7, #52]	; 0x34
 8002df2:	e02d      	b.n	8002e50 <_vsnprintf+0x5e4>
          }
          else {
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
 8002df4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002df6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002dfa:	2b00      	cmp	r3, #0
 8002dfc:	d005      	beq.n	8002e0a <_vsnprintf+0x59e>
 8002dfe:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002e00:	1d1a      	adds	r2, r3, #4
 8002e02:	65ba      	str	r2, [r7, #88]	; 0x58
 8002e04:	681b      	ldr	r3, [r3, #0]
 8002e06:	b2db      	uxtb	r3, r3
 8002e08:	e00e      	b.n	8002e28 <_vsnprintf+0x5bc>
 8002e0a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002e0c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	d005      	beq.n	8002e20 <_vsnprintf+0x5b4>
 8002e14:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002e16:	1d1a      	adds	r2, r3, #4
 8002e18:	65ba      	str	r2, [r7, #88]	; 0x58
 8002e1a:	681b      	ldr	r3, [r3, #0]
 8002e1c:	b29b      	uxth	r3, r3
 8002e1e:	e003      	b.n	8002e28 <_vsnprintf+0x5bc>
 8002e20:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002e22:	1d1a      	adds	r2, r3, #4
 8002e24:	65ba      	str	r2, [r7, #88]	; 0x58
 8002e26:	681b      	ldr	r3, [r3, #0]
 8002e28:	61bb      	str	r3, [r7, #24]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
 8002e2a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002e2c:	9305      	str	r3, [sp, #20]
 8002e2e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002e30:	9304      	str	r3, [sp, #16]
 8002e32:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002e34:	9303      	str	r3, [sp, #12]
 8002e36:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002e38:	9302      	str	r3, [sp, #8]
 8002e3a:	2300      	movs	r3, #0
 8002e3c:	9301      	str	r3, [sp, #4]
 8002e3e:	69bb      	ldr	r3, [r7, #24]
 8002e40:	9300      	str	r3, [sp, #0]
 8002e42:	687b      	ldr	r3, [r7, #4]
 8002e44:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002e46:	68b9      	ldr	r1, [r7, #8]
 8002e48:	68f8      	ldr	r0, [r7, #12]
 8002e4a:	f7ff fa4d 	bl	80022e8 <_ntoa_long>
 8002e4e:	6378      	str	r0, [r7, #52]	; 0x34
          }
        }
        format++;
 8002e50:	683b      	ldr	r3, [r7, #0]
 8002e52:	3301      	adds	r3, #1
 8002e54:	603b      	str	r3, [r7, #0]
        break;
 8002e56:	e0f9      	b.n	800304c <_vsnprintf+0x7e0>
      }
#if defined(PRINTF_SUPPORT_FLOAT)
      case 'f' :
      case 'F' :
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
 8002e58:	683b      	ldr	r3, [r7, #0]
 8002e5a:	781b      	ldrb	r3, [r3, #0]
 8002e5c:	2b46      	cmp	r3, #70	; 0x46
 8002e5e:	d103      	bne.n	8002e68 <_vsnprintf+0x5fc>
 8002e60:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002e62:	f043 0320 	orr.w	r3, r3, #32
 8002e66:	647b      	str	r3, [r7, #68]	; 0x44
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 8002e68:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002e6a:	3307      	adds	r3, #7
 8002e6c:	f023 0307 	bic.w	r3, r3, #7
 8002e70:	f103 0208 	add.w	r2, r3, #8
 8002e74:	65ba      	str	r2, [r7, #88]	; 0x58
 8002e76:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002e7a:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002e7c:	9204      	str	r2, [sp, #16]
 8002e7e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002e80:	9203      	str	r2, [sp, #12]
 8002e82:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002e84:	9202      	str	r2, [sp, #8]
 8002e86:	e9cd 3400 	strd	r3, r4, [sp]
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002e8e:	68b9      	ldr	r1, [r7, #8]
 8002e90:	68f8      	ldr	r0, [r7, #12]
 8002e92:	f7ff fa91 	bl	80023b8 <_ftoa>
 8002e96:	6378      	str	r0, [r7, #52]	; 0x34
        format++;
 8002e98:	683b      	ldr	r3, [r7, #0]
 8002e9a:	3301      	adds	r3, #1
 8002e9c:	603b      	str	r3, [r7, #0]
        break;
 8002e9e:	e0d5      	b.n	800304c <_vsnprintf+0x7e0>
        format++;
        break;
#endif  // PRINTF_SUPPORT_EXPONENTIAL
#endif  // PRINTF_SUPPORT_FLOAT
      case 'c' : {
        unsigned int l = 1U;
 8002ea0:	2301      	movs	r3, #1
 8002ea2:	62fb      	str	r3, [r7, #44]	; 0x2c
        // pre padding
        if (!(flags & FLAGS_LEFT)) {
 8002ea4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ea6:	f003 0302 	and.w	r3, r3, #2
 8002eaa:	2b00      	cmp	r3, #0
 8002eac:	d10e      	bne.n	8002ecc <_vsnprintf+0x660>
          while (l++ < width) {
 8002eae:	e007      	b.n	8002ec0 <_vsnprintf+0x654>
            out(' ', buffer, idx++, maxlen);
 8002eb0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002eb2:	1c53      	adds	r3, r2, #1
 8002eb4:	637b      	str	r3, [r7, #52]	; 0x34
 8002eb6:	68fc      	ldr	r4, [r7, #12]
 8002eb8:	687b      	ldr	r3, [r7, #4]
 8002eba:	68b9      	ldr	r1, [r7, #8]
 8002ebc:	2020      	movs	r0, #32
 8002ebe:	47a0      	blx	r4
          while (l++ < width) {
 8002ec0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002ec2:	1c5a      	adds	r2, r3, #1
 8002ec4:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002ec6:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002ec8:	429a      	cmp	r2, r3
 8002eca:	d8f1      	bhi.n	8002eb0 <_vsnprintf+0x644>
          }
        }
        // char output
        out((char)va_arg(va, int), buffer, idx++, maxlen);
 8002ecc:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002ece:	1d1a      	adds	r2, r3, #4
 8002ed0:	65ba      	str	r2, [r7, #88]	; 0x58
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	b2d8      	uxtb	r0, r3
 8002ed6:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002ed8:	1c53      	adds	r3, r2, #1
 8002eda:	637b      	str	r3, [r7, #52]	; 0x34
 8002edc:	68fc      	ldr	r4, [r7, #12]
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	68b9      	ldr	r1, [r7, #8]
 8002ee2:	47a0      	blx	r4
        // post padding
        if (flags & FLAGS_LEFT) {
 8002ee4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ee6:	f003 0302 	and.w	r3, r3, #2
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d00e      	beq.n	8002f0c <_vsnprintf+0x6a0>
          while (l++ < width) {
 8002eee:	e007      	b.n	8002f00 <_vsnprintf+0x694>
            out(' ', buffer, idx++, maxlen);
 8002ef0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002ef2:	1c53      	adds	r3, r2, #1
 8002ef4:	637b      	str	r3, [r7, #52]	; 0x34
 8002ef6:	68fc      	ldr	r4, [r7, #12]
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	68b9      	ldr	r1, [r7, #8]
 8002efc:	2020      	movs	r0, #32
 8002efe:	47a0      	blx	r4
          while (l++ < width) {
 8002f00:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002f02:	1c5a      	adds	r2, r3, #1
 8002f04:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002f06:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002f08:	429a      	cmp	r2, r3
 8002f0a:	d8f1      	bhi.n	8002ef0 <_vsnprintf+0x684>
          }
        }
        format++;
 8002f0c:	683b      	ldr	r3, [r7, #0]
 8002f0e:	3301      	adds	r3, #1
 8002f10:	603b      	str	r3, [r7, #0]
        break;
 8002f12:	e09b      	b.n	800304c <_vsnprintf+0x7e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
 8002f14:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002f16:	1d1a      	adds	r2, r3, #4
 8002f18:	65ba      	str	r2, [r7, #88]	; 0x58
 8002f1a:	681b      	ldr	r3, [r3, #0]
 8002f1c:	62bb      	str	r3, [r7, #40]	; 0x28
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
 8002f1e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002f20:	2b00      	cmp	r3, #0
 8002f22:	d001      	beq.n	8002f28 <_vsnprintf+0x6bc>
 8002f24:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002f26:	e001      	b.n	8002f2c <_vsnprintf+0x6c0>
 8002f28:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002f2c:	4619      	mov	r1, r3
 8002f2e:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002f30:	f7ff f858 	bl	8001fe4 <_strnlen_s>
 8002f34:	6278      	str	r0, [r7, #36]	; 0x24
        // pre padding
        if (flags & FLAGS_PRECISION) {
 8002f36:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002f38:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002f3c:	2b00      	cmp	r3, #0
 8002f3e:	d005      	beq.n	8002f4c <_vsnprintf+0x6e0>
          l = (l < precision ? l : precision);
 8002f40:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002f42:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002f44:	4293      	cmp	r3, r2
 8002f46:	bf28      	it	cs
 8002f48:	4613      	movcs	r3, r2
 8002f4a:	627b      	str	r3, [r7, #36]	; 0x24
        }
        if (!(flags & FLAGS_LEFT)) {
 8002f4c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002f4e:	f003 0302 	and.w	r3, r3, #2
 8002f52:	2b00      	cmp	r3, #0
 8002f54:	d11a      	bne.n	8002f8c <_vsnprintf+0x720>
          while (l++ < width) {
 8002f56:	e007      	b.n	8002f68 <_vsnprintf+0x6fc>
            out(' ', buffer, idx++, maxlen);
 8002f58:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002f5a:	1c53      	adds	r3, r2, #1
 8002f5c:	637b      	str	r3, [r7, #52]	; 0x34
 8002f5e:	68fc      	ldr	r4, [r7, #12]
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	68b9      	ldr	r1, [r7, #8]
 8002f64:	2020      	movs	r0, #32
 8002f66:	47a0      	blx	r4
          while (l++ < width) {
 8002f68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f6a:	1c5a      	adds	r2, r3, #1
 8002f6c:	627a      	str	r2, [r7, #36]	; 0x24
 8002f6e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002f70:	429a      	cmp	r2, r3
 8002f72:	d8f1      	bhi.n	8002f58 <_vsnprintf+0x6ec>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8002f74:	e00a      	b.n	8002f8c <_vsnprintf+0x720>
          out(*(p++), buffer, idx++, maxlen);
 8002f76:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002f78:	1c5a      	adds	r2, r3, #1
 8002f7a:	62ba      	str	r2, [r7, #40]	; 0x28
 8002f7c:	7818      	ldrb	r0, [r3, #0]
 8002f7e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002f80:	1c53      	adds	r3, r2, #1
 8002f82:	637b      	str	r3, [r7, #52]	; 0x34
 8002f84:	68fc      	ldr	r4, [r7, #12]
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	68b9      	ldr	r1, [r7, #8]
 8002f8a:	47a0      	blx	r4
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 8002f8c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002f8e:	781b      	ldrb	r3, [r3, #0]
 8002f90:	2b00      	cmp	r3, #0
 8002f92:	d009      	beq.n	8002fa8 <_vsnprintf+0x73c>
 8002f94:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002f96:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d0eb      	beq.n	8002f76 <_vsnprintf+0x70a>
 8002f9e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002fa0:	1e5a      	subs	r2, r3, #1
 8002fa2:	63fa      	str	r2, [r7, #60]	; 0x3c
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d1e6      	bne.n	8002f76 <_vsnprintf+0x70a>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
 8002fa8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002faa:	f003 0302 	and.w	r3, r3, #2
 8002fae:	2b00      	cmp	r3, #0
 8002fb0:	d00e      	beq.n	8002fd0 <_vsnprintf+0x764>
          while (l++ < width) {
 8002fb2:	e007      	b.n	8002fc4 <_vsnprintf+0x758>
            out(' ', buffer, idx++, maxlen);
 8002fb4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002fb6:	1c53      	adds	r3, r2, #1
 8002fb8:	637b      	str	r3, [r7, #52]	; 0x34
 8002fba:	68fc      	ldr	r4, [r7, #12]
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	68b9      	ldr	r1, [r7, #8]
 8002fc0:	2020      	movs	r0, #32
 8002fc2:	47a0      	blx	r4
          while (l++ < width) {
 8002fc4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fc6:	1c5a      	adds	r2, r3, #1
 8002fc8:	627a      	str	r2, [r7, #36]	; 0x24
 8002fca:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002fcc:	429a      	cmp	r2, r3
 8002fce:	d8f1      	bhi.n	8002fb4 <_vsnprintf+0x748>
          }
        }
        format++;
 8002fd0:	683b      	ldr	r3, [r7, #0]
 8002fd2:	3301      	adds	r3, #1
 8002fd4:	603b      	str	r3, [r7, #0]
        break;
 8002fd6:	e039      	b.n	800304c <_vsnprintf+0x7e0>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
 8002fd8:	2308      	movs	r3, #8
 8002fda:	643b      	str	r3, [r7, #64]	; 0x40
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
 8002fdc:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002fde:	f043 0321 	orr.w	r3, r3, #33	; 0x21
 8002fe2:	647b      	str	r3, [r7, #68]	; 0x44
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
 8002fe4:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8002fe6:	1d1a      	adds	r2, r3, #4
 8002fe8:	65ba      	str	r2, [r7, #88]	; 0x58
 8002fea:	681b      	ldr	r3, [r3, #0]
 8002fec:	461a      	mov	r2, r3
 8002fee:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002ff0:	9305      	str	r3, [sp, #20]
 8002ff2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002ff4:	9304      	str	r3, [sp, #16]
 8002ff6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8002ff8:	9303      	str	r3, [sp, #12]
 8002ffa:	2310      	movs	r3, #16
 8002ffc:	9302      	str	r3, [sp, #8]
 8002ffe:	2300      	movs	r3, #0
 8003000:	9301      	str	r3, [sp, #4]
 8003002:	9200      	str	r2, [sp, #0]
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003008:	68b9      	ldr	r1, [r7, #8]
 800300a:	68f8      	ldr	r0, [r7, #12]
 800300c:	f7ff f96c 	bl	80022e8 <_ntoa_long>
 8003010:	6378      	str	r0, [r7, #52]	; 0x34
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
 8003012:	683b      	ldr	r3, [r7, #0]
 8003014:	3301      	adds	r3, #1
 8003016:	603b      	str	r3, [r7, #0]
        break;
 8003018:	e018      	b.n	800304c <_vsnprintf+0x7e0>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
 800301a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800301c:	1c53      	adds	r3, r2, #1
 800301e:	637b      	str	r3, [r7, #52]	; 0x34
 8003020:	68fc      	ldr	r4, [r7, #12]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	68b9      	ldr	r1, [r7, #8]
 8003026:	2025      	movs	r0, #37	; 0x25
 8003028:	47a0      	blx	r4
        format++;
 800302a:	683b      	ldr	r3, [r7, #0]
 800302c:	3301      	adds	r3, #1
 800302e:	603b      	str	r3, [r7, #0]
        break;
 8003030:	e00c      	b.n	800304c <_vsnprintf+0x7e0>

      default :
        out(*format, buffer, idx++, maxlen);
 8003032:	683b      	ldr	r3, [r7, #0]
 8003034:	7818      	ldrb	r0, [r3, #0]
 8003036:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003038:	1c53      	adds	r3, r2, #1
 800303a:	637b      	str	r3, [r7, #52]	; 0x34
 800303c:	68fc      	ldr	r4, [r7, #12]
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	68b9      	ldr	r1, [r7, #8]
 8003042:	47a0      	blx	r4
        format++;
 8003044:	683b      	ldr	r3, [r7, #0]
 8003046:	3301      	adds	r3, #1
 8003048:	603b      	str	r3, [r7, #0]
        break;
 800304a:	bf00      	nop
  while (*format)
 800304c:	683b      	ldr	r3, [r7, #0]
 800304e:	781b      	ldrb	r3, [r3, #0]
 8003050:	2b00      	cmp	r3, #0
 8003052:	f47f ac1b 	bne.w	800288c <_vsnprintf+0x20>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 8003056:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	429a      	cmp	r2, r3
 800305c:	d302      	bcc.n	8003064 <_vsnprintf+0x7f8>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	1e5a      	subs	r2, r3, #1
 8003062:	e000      	b.n	8003066 <_vsnprintf+0x7fa>
 8003064:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8003066:	68fc      	ldr	r4, [r7, #12]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	68b9      	ldr	r1, [r7, #8]
 800306c:	2000      	movs	r0, #0
 800306e:	47a0      	blx	r4

  // return written chars without terminating \0
  return (int)idx;
 8003070:	6b7b      	ldr	r3, [r7, #52]	; 0x34
}
 8003072:	4618      	mov	r0, r3
 8003074:	374c      	adds	r7, #76	; 0x4c
 8003076:	46bd      	mov	sp, r7
 8003078:	bd90      	pop	{r4, r7, pc}
 800307a:	bf00      	nop

0800307c <printf_>:


///////////////////////////////////////////////////////////////////////////////

int printf_(const char* format, ...)
{
 800307c:	b40f      	push	{r0, r1, r2, r3}
 800307e:	b580      	push	{r7, lr}
 8003080:	b086      	sub	sp, #24
 8003082:	af02      	add	r7, sp, #8
  va_list va;
  va_start(va, format);
 8003084:	f107 031c 	add.w	r3, r7, #28
 8003088:	60bb      	str	r3, [r7, #8]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
 800308a:	1d39      	adds	r1, r7, #4
 800308c:	68bb      	ldr	r3, [r7, #8]
 800308e:	9300      	str	r3, [sp, #0]
 8003090:	69bb      	ldr	r3, [r7, #24]
 8003092:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003096:	4806      	ldr	r0, [pc, #24]	; (80030b0 <printf_+0x34>)
 8003098:	f7ff fbe8 	bl	800286c <_vsnprintf>
 800309c:	60f8      	str	r0, [r7, #12]
  va_end(va);
  return ret;
 800309e:	68fb      	ldr	r3, [r7, #12]
}
 80030a0:	4618      	mov	r0, r3
 80030a2:	3710      	adds	r7, #16
 80030a4:	46bd      	mov	sp, r7
 80030a6:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80030aa:	b004      	add	sp, #16
 80030ac:	4770      	bx	lr
 80030ae:	bf00      	nop
 80030b0:	08001fbf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}

080030b4 <_putchar>:

extern int __io_putchar(int ch);
extern int __io_getchar(void);

void _putchar(const char ch)
{
 80030b4:	b580      	push	{r7, lr}
 80030b6:	b082      	sub	sp, #8
 80030b8:	af00      	add	r7, sp, #0
 80030ba:	4603      	mov	r3, r0
 80030bc:	71fb      	strb	r3, [r7, #7]
    __io_putchar(ch);
 80030be:	79fb      	ldrb	r3, [r7, #7]
 80030c0:	4618      	mov	r0, r3
 80030c2:	f7fd ff57 	bl	8000f74 <__io_putchar>
}
 80030c6:	bf00      	nop
 80030c8:	3708      	adds	r7, #8
 80030ca:	46bd      	mov	sp, r7
 80030cc:	bd80      	pop	{r7, pc}
	...

080030d0 <__NVIC_SetPriority>:
{
 80030d0:	b480      	push	{r7}
 80030d2:	b083      	sub	sp, #12
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	4603      	mov	r3, r0
 80030d8:	6039      	str	r1, [r7, #0]
 80030da:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80030dc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030e0:	2b00      	cmp	r3, #0
 80030e2:	db0a      	blt.n	80030fa <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80030e4:	683b      	ldr	r3, [r7, #0]
 80030e6:	b2da      	uxtb	r2, r3
 80030e8:	490c      	ldr	r1, [pc, #48]	; (800311c <__NVIC_SetPriority+0x4c>)
 80030ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80030ee:	0112      	lsls	r2, r2, #4
 80030f0:	b2d2      	uxtb	r2, r2
 80030f2:	440b      	add	r3, r1
 80030f4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80030f8:	e00a      	b.n	8003110 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80030fa:	683b      	ldr	r3, [r7, #0]
 80030fc:	b2da      	uxtb	r2, r3
 80030fe:	4908      	ldr	r1, [pc, #32]	; (8003120 <__NVIC_SetPriority+0x50>)
 8003100:	79fb      	ldrb	r3, [r7, #7]
 8003102:	f003 030f 	and.w	r3, r3, #15
 8003106:	3b04      	subs	r3, #4
 8003108:	0112      	lsls	r2, r2, #4
 800310a:	b2d2      	uxtb	r2, r2
 800310c:	440b      	add	r3, r1
 800310e:	761a      	strb	r2, [r3, #24]
}
 8003110:	bf00      	nop
 8003112:	370c      	adds	r7, #12
 8003114:	46bd      	mov	sp, r7
 8003116:	bc80      	pop	{r7}
 8003118:	4770      	bx	lr
 800311a:	bf00      	nop
 800311c:	e000e100 	and	lr, r0, r0, lsl #2
 8003120:	e000ed00 	and	lr, r0, r0, lsl #26

08003124 <task_enter_critical>:
#include "hal_platform.h"

uint8_t sched_lock_count;

uint32_t task_enter_critical(void)
{
 8003124:	b480      	push	{r7}
 8003126:	b083      	sub	sp, #12
 8003128:	af00      	add	r7, sp, #0
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800312a:	f3ef 8310 	mrs	r3, PRIMASK
 800312e:	603b      	str	r3, [r7, #0]
  return(result);
 8003130:	683b      	ldr	r3, [r7, #0]
    uint32_t primask = __get_PRIMASK();
 8003132:	607b      	str	r3, [r7, #4]
  __ASM volatile ("cpsid i" : : : "memory");
 8003134:	b672      	cpsid	i
    __disable_irq();        // CPSID I
    return primask;  
 8003136:	687b      	ldr	r3, [r7, #4]
}
 8003138:	4618      	mov	r0, r3
 800313a:	370c      	adds	r7, #12
 800313c:	46bd      	mov	sp, r7
 800313e:	bc80      	pop	{r7}
 8003140:	4770      	bx	lr

08003142 <task_exit_critical>:

void task_exit_critical (uint32_t status) 
{
 8003142:	b480      	push	{r7}
 8003144:	b085      	sub	sp, #20
 8003146:	af00      	add	r7, sp, #0
 8003148:	6078      	str	r0, [r7, #4]
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	60fb      	str	r3, [r7, #12]
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800314e:	68fb      	ldr	r3, [r7, #12]
 8003150:	f383 8810 	msr	PRIMASK, r3
    __set_PRIMASK(status);
}
 8003154:	bf00      	nop
 8003156:	3714      	adds	r7, #20
 8003158:	46bd      	mov	sp, r7
 800315a:	bc80      	pop	{r7}
 800315c:	4770      	bx	lr
	...

08003160 <run_first_task>:

void run_first_task(void)
{
 8003160:	b580      	push	{r7, lr}
 8003162:	b082      	sub	sp, #8
 8003164:	af00      	add	r7, sp, #0
 8003166:	2300      	movs	r3, #0
 8003168:	607b      	str	r3, [r7, #4]
  __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 800316a:	687b      	ldr	r3, [r7, #4]
 800316c:	f383 8809 	msr	PSP, r3
    __set_PSP(0);//psp=0 表示第一个任务
    NVIC_SetPriority(PendSV_IRQn, 0xFF);//将pendsv优先级配置为最低
 8003170:	21ff      	movs	r1, #255	; 0xff
 8003172:	f06f 0001 	mvn.w	r0, #1
 8003176:	f7ff ffab 	bl	80030d0 <__NVIC_SetPriority>
    SCB->ICSR |= SCB_ICSR_PENDSVSET_Msk;//将pendsv pending bit 设为1
 800317a:	4b05      	ldr	r3, [pc, #20]	; (8003190 <run_first_task+0x30>)
 800317c:	685b      	ldr	r3, [r3, #4]
 800317e:	4a04      	ldr	r2, [pc, #16]	; (8003190 <run_first_task+0x30>)
 8003180:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003184:	6053      	str	r3, [r2, #4]
}
 8003186:	bf00      	nop
 8003188:	3708      	adds	r7, #8
 800318a:	46bd      	mov	sp, r7
 800318c:	bd80      	pop	{r7, pc}
 800318e:	bf00      	nop
 8003190:	e000ed00 	and	lr, r0, r0, lsl #26

08003194 <task_switch>:
void task_switch(void)
{
 8003194:	b480      	push	{r7}
 8003196:	af00      	add	r7, sp, #0
    SCB->ICSR |= SCB_ICSR_PENDSVSET_Msk;//将pendsv pending bit 设为1
 8003198:	4b04      	ldr	r3, [pc, #16]	; (80031ac <task_switch+0x18>)
 800319a:	685b      	ldr	r3, [r3, #4]
 800319c:	4a03      	ldr	r2, [pc, #12]	; (80031ac <task_switch+0x18>)
 800319e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80031a2:	6053      	str	r3, [r2, #4]
}
 80031a4:	bf00      	nop
 80031a6:	46bd      	mov	sp, r7
 80031a8:	bc80      	pop	{r7}
 80031aa:	4770      	bx	lr
 80031ac:	e000ed00 	and	lr, r0, r0, lsl #26

080031b0 <__NVIC_SetPriority>:
{
 80031b0:	b480      	push	{r7}
 80031b2:	b083      	sub	sp, #12
 80031b4:	af00      	add	r7, sp, #0
 80031b6:	4603      	mov	r3, r0
 80031b8:	6039      	str	r1, [r7, #0]
 80031ba:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80031bc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031c0:	2b00      	cmp	r3, #0
 80031c2:	db0a      	blt.n	80031da <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	b2da      	uxtb	r2, r3
 80031c8:	490c      	ldr	r1, [pc, #48]	; (80031fc <__NVIC_SetPriority+0x4c>)
 80031ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80031ce:	0112      	lsls	r2, r2, #4
 80031d0:	b2d2      	uxtb	r2, r2
 80031d2:	440b      	add	r3, r1
 80031d4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 80031d8:	e00a      	b.n	80031f0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80031da:	683b      	ldr	r3, [r7, #0]
 80031dc:	b2da      	uxtb	r2, r3
 80031de:	4908      	ldr	r1, [pc, #32]	; (8003200 <__NVIC_SetPriority+0x50>)
 80031e0:	79fb      	ldrb	r3, [r7, #7]
 80031e2:	f003 030f 	and.w	r3, r3, #15
 80031e6:	3b04      	subs	r3, #4
 80031e8:	0112      	lsls	r2, r2, #4
 80031ea:	b2d2      	uxtb	r2, r2
 80031ec:	440b      	add	r3, r1
 80031ee:	761a      	strb	r2, [r3, #24]
}
 80031f0:	bf00      	nop
 80031f2:	370c      	adds	r7, #12
 80031f4:	46bd      	mov	sp, r7
 80031f6:	bc80      	pop	{r7}
 80031f8:	4770      	bx	lr
 80031fa:	bf00      	nop
 80031fc:	e000e100 	and	lr, r0, r0, lsl #2
 8003200:	e000ed00 	and	lr, r0, r0, lsl #26

08003204 <SysTick_Config>:
{
 8003204:	b580      	push	{r7, lr}
 8003206:	b082      	sub	sp, #8
 8003208:	af00      	add	r7, sp, #0
 800320a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	3b01      	subs	r3, #1
 8003210:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8003214:	d301      	bcc.n	800321a <SysTick_Config+0x16>
    return (1UL);                                                   /* Reload value impossible */
 8003216:	2301      	movs	r3, #1
 8003218:	e00f      	b.n	800323a <SysTick_Config+0x36>
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800321a:	4a0a      	ldr	r2, [pc, #40]	; (8003244 <SysTick_Config+0x40>)
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	3b01      	subs	r3, #1
 8003220:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003222:	210f      	movs	r1, #15
 8003224:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003228:	f7ff ffc2 	bl	80031b0 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800322c:	4b05      	ldr	r3, [pc, #20]	; (8003244 <SysTick_Config+0x40>)
 800322e:	2200      	movs	r2, #0
 8003230:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003232:	4b04      	ldr	r3, [pc, #16]	; (8003244 <SysTick_Config+0x40>)
 8003234:	2207      	movs	r2, #7
 8003236:	601a      	str	r2, [r3, #0]
  return (0UL);                                                     /* Function successful */
 8003238:	2300      	movs	r3, #0
}
 800323a:	4618      	mov	r0, r3
 800323c:	3708      	adds	r7, #8
 800323e:	46bd      	mov	sp, r7
 8003240:	bd80      	pop	{r7, pc}
 8003242:	bf00      	nop
 8003244:	e000e010 	and	lr, r0, r0, lsl r0

08003248 <task_create>:
typedef void (*task_entry_t)(void* param);

#define GET_TICKS() tick_counter

void task_create(task_t * task, task_entry_t entry, void *param, uint32_t priority, uint32_t* stack)
{
 8003248:	b580      	push	{r7, lr}
 800324a:	b084      	sub	sp, #16
 800324c:	af00      	add	r7, sp, #0
 800324e:	60f8      	str	r0, [r7, #12]
 8003250:	60b9      	str	r1, [r7, #8]
 8003252:	607a      	str	r2, [r7, #4]
 8003254:	603b      	str	r3, [r7, #0]
    *(--stack) = (unsigned long)(1<<24);                // XPSR, 设置了Thumb模式，恢复到Thumb状态而非ARM状态运行
 8003256:	69bb      	ldr	r3, [r7, #24]
 8003258:	3b04      	subs	r3, #4
 800325a:	61bb      	str	r3, [r7, #24]
 800325c:	69bb      	ldr	r3, [r7, #24]
 800325e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8003262:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)entry;                  // 程序的入口地址
 8003264:	69bb      	ldr	r3, [r7, #24]
 8003266:	3b04      	subs	r3, #4
 8003268:	61bb      	str	r3, [r7, #24]
 800326a:	68ba      	ldr	r2, [r7, #8]
 800326c:	69bb      	ldr	r3, [r7, #24]
 800326e:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x14;                   // R14(LR), 任务不会通过return xxx结束自己，所以未用
 8003270:	69bb      	ldr	r3, [r7, #24]
 8003272:	3b04      	subs	r3, #4
 8003274:	61bb      	str	r3, [r7, #24]
 8003276:	69bb      	ldr	r3, [r7, #24]
 8003278:	2214      	movs	r2, #20
 800327a:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x12;                   // R12, 未用
 800327c:	69bb      	ldr	r3, [r7, #24]
 800327e:	3b04      	subs	r3, #4
 8003280:	61bb      	str	r3, [r7, #24]
 8003282:	69bb      	ldr	r3, [r7, #24]
 8003284:	2212      	movs	r2, #18
 8003286:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x3;                    // R3, 未用
 8003288:	69bb      	ldr	r3, [r7, #24]
 800328a:	3b04      	subs	r3, #4
 800328c:	61bb      	str	r3, [r7, #24]
 800328e:	69bb      	ldr	r3, [r7, #24]
 8003290:	2203      	movs	r2, #3
 8003292:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x2;                    // R2, 未用
 8003294:	69bb      	ldr	r3, [r7, #24]
 8003296:	3b04      	subs	r3, #4
 8003298:	61bb      	str	r3, [r7, #24]
 800329a:	69bb      	ldr	r3, [r7, #24]
 800329c:	2202      	movs	r2, #2
 800329e:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x1;                    // R1, 未用
 80032a0:	69bb      	ldr	r3, [r7, #24]
 80032a2:	3b04      	subs	r3, #4
 80032a4:	61bb      	str	r3, [r7, #24]
 80032a6:	69bb      	ldr	r3, [r7, #24]
 80032a8:	2201      	movs	r2, #1
 80032aa:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)param;                  // R0 = param, 传给任务的入口函数
 80032ac:	69bb      	ldr	r3, [r7, #24]
 80032ae:	3b04      	subs	r3, #4
 80032b0:	61bb      	str	r3, [r7, #24]
 80032b2:	687a      	ldr	r2, [r7, #4]
 80032b4:	69bb      	ldr	r3, [r7, #24]
 80032b6:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x11;                   // R11, 未用
 80032b8:	69bb      	ldr	r3, [r7, #24]
 80032ba:	3b04      	subs	r3, #4
 80032bc:	61bb      	str	r3, [r7, #24]
 80032be:	69bb      	ldr	r3, [r7, #24]
 80032c0:	2211      	movs	r2, #17
 80032c2:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x10;                   // R10, 未用
 80032c4:	69bb      	ldr	r3, [r7, #24]
 80032c6:	3b04      	subs	r3, #4
 80032c8:	61bb      	str	r3, [r7, #24]
 80032ca:	69bb      	ldr	r3, [r7, #24]
 80032cc:	2210      	movs	r2, #16
 80032ce:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x9;                    // R9, 未用
 80032d0:	69bb      	ldr	r3, [r7, #24]
 80032d2:	3b04      	subs	r3, #4
 80032d4:	61bb      	str	r3, [r7, #24]
 80032d6:	69bb      	ldr	r3, [r7, #24]
 80032d8:	2209      	movs	r2, #9
 80032da:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x8;                    // R8, 未用
 80032dc:	69bb      	ldr	r3, [r7, #24]
 80032de:	3b04      	subs	r3, #4
 80032e0:	61bb      	str	r3, [r7, #24]
 80032e2:	69bb      	ldr	r3, [r7, #24]
 80032e4:	2208      	movs	r2, #8
 80032e6:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x7;                    // R7, 未用
 80032e8:	69bb      	ldr	r3, [r7, #24]
 80032ea:	3b04      	subs	r3, #4
 80032ec:	61bb      	str	r3, [r7, #24]
 80032ee:	69bb      	ldr	r3, [r7, #24]
 80032f0:	2207      	movs	r2, #7
 80032f2:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x6;                    // R6, 未用
 80032f4:	69bb      	ldr	r3, [r7, #24]
 80032f6:	3b04      	subs	r3, #4
 80032f8:	61bb      	str	r3, [r7, #24]
 80032fa:	69bb      	ldr	r3, [r7, #24]
 80032fc:	2206      	movs	r2, #6
 80032fe:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x5;                    // R5, 未用
 8003300:	69bb      	ldr	r3, [r7, #24]
 8003302:	3b04      	subs	r3, #4
 8003304:	61bb      	str	r3, [r7, #24]
 8003306:	69bb      	ldr	r3, [r7, #24]
 8003308:	2205      	movs	r2, #5
 800330a:	601a      	str	r2, [r3, #0]
    *(--stack) = (unsigned long)0x4;                    // R4, 未用
 800330c:	69bb      	ldr	r3, [r7, #24]
 800330e:	3b04      	subs	r3, #4
 8003310:	61bb      	str	r3, [r7, #24]
 8003312:	69bb      	ldr	r3, [r7, #24]
 8003314:	2204      	movs	r2, #4
 8003316:	601a      	str	r2, [r3, #0]
    task->stack = stack;
 8003318:	68fb      	ldr	r3, [r7, #12]
 800331a:	69ba      	ldr	r2, [r7, #24]
 800331c:	601a      	str	r2, [r3, #0]
    task->delay_ticks = 0;
 800331e:	68fb      	ldr	r3, [r7, #12]
 8003320:	2200      	movs	r2, #0
 8003322:	605a      	str	r2, [r3, #4]
    task->priority = priority;
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	683a      	ldr	r2, [r7, #0]
 8003328:	609a      	str	r2, [r3, #8]
    task->state = OS_TASK_STATE_RDY;
 800332a:	68fb      	ldr	r3, [r7, #12]
 800332c:	2200      	movs	r2, #0
 800332e:	61da      	str	r2, [r3, #28]
    task->slice = OS_SLICE_MAX;
 8003330:	68fb      	ldr	r3, [r7, #12]
 8003332:	220a      	movs	r2, #10
 8003334:	621a      	str	r2, [r3, #32]

    node_init(&task->delay_node);
 8003336:	68fb      	ldr	r3, [r7, #12]
 8003338:	330c      	adds	r3, #12
 800333a:	4618      	mov	r0, r3
 800333c:	f000 fba4 	bl	8003a88 <node_init>
    node_init(&task->link_node);
 8003340:	68fb      	ldr	r3, [r7, #12]
 8003342:	3314      	adds	r3, #20
 8003344:	4618      	mov	r0, r3
 8003346:	f000 fb9f 	bl	8003a88 <node_init>
    list_add_last(&task_table[priority], &task->link_node);
 800334a:	683a      	ldr	r2, [r7, #0]
 800334c:	4613      	mov	r3, r2
 800334e:	005b      	lsls	r3, r3, #1
 8003350:	4413      	add	r3, r2
 8003352:	009b      	lsls	r3, r3, #2
 8003354:	4a07      	ldr	r2, [pc, #28]	; (8003374 <task_create+0x12c>)
 8003356:	441a      	add	r2, r3
 8003358:	68fb      	ldr	r3, [r7, #12]
 800335a:	3314      	adds	r3, #20
 800335c:	4619      	mov	r1, r3
 800335e:	4610      	mov	r0, r2
 8003360:	f000 fbd1 	bl	8003b06 <list_add_last>
    // task_table[priority] = task;
    bitmap_set_bit(&task_priority_bitmap, priority);
 8003364:	6839      	ldr	r1, [r7, #0]
 8003366:	4804      	ldr	r0, [pc, #16]	; (8003378 <task_create+0x130>)
 8003368:	f000 fb25 	bl	80039b6 <bitmap_set_bit>
}
 800336c:	bf00      	nop
 800336e:	3710      	adds	r7, #16
 8003370:	46bd      	mov	sp, r7
 8003372:	bd80      	pop	{r7, pc}
 8003374:	200046ec 	andcs	r4, r0, ip, ror #13
 8003378:	200026e8 	andcs	r2, r0, r8, ror #13

0800337c <task_highest_ready>:
task_t * task_highest_ready (void)
{
 800337c:	b580      	push	{r7, lr}
 800337e:	b082      	sub	sp, #8
 8003380:	af00      	add	r7, sp, #0
    uint32_t highest_priority = bitmap_get_first(&task_priority_bitmap);
 8003382:	480b      	ldr	r0, [pc, #44]	; (80033b0 <task_highest_ready+0x34>)
 8003384:	f000 fb3e 	bl	8003a04 <bitmap_get_first>
 8003388:	6078      	str	r0, [r7, #4]
    // return task_table[highest_priority];
    node_t * node = list_first(&task_table[highest_priority]);
 800338a:	687a      	ldr	r2, [r7, #4]
 800338c:	4613      	mov	r3, r2
 800338e:	005b      	lsls	r3, r3, #1
 8003390:	4413      	add	r3, r2
 8003392:	009b      	lsls	r3, r3, #2
 8003394:	4a07      	ldr	r2, [pc, #28]	; (80033b4 <task_highest_ready+0x38>)
 8003396:	4413      	add	r3, r2
 8003398:	4618      	mov	r0, r3
 800339a:	f000 fba1 	bl	8003ae0 <list_first>
 800339e:	4603      	mov	r3, r0
 80033a0:	603b      	str	r3, [r7, #0]
    return (task_t*)NODE_PARENT(node, task_t, link_node);
 80033a2:	683b      	ldr	r3, [r7, #0]
 80033a4:	3b14      	subs	r3, #20
}
 80033a6:	4618      	mov	r0, r3
 80033a8:	3708      	adds	r7, #8
 80033aa:	46bd      	mov	sp, r7
 80033ac:	bd80      	pop	{r7, pc}
 80033ae:	bf00      	nop
 80033b0:	200026e8 	andcs	r2, r0, r8, ror #13
 80033b4:	200046ec 	andcs	r4, r0, ip, ror #13

080033b8 <task_sched_init>:

void task_sched_init(void)
{
 80033b8:	b580      	push	{r7, lr}
 80033ba:	b082      	sub	sp, #8
 80033bc:	af00      	add	r7, sp, #0
    int i = 0;
 80033be:	2300      	movs	r3, #0
 80033c0:	607b      	str	r3, [r7, #4]
    sched_lock_count = 0;
 80033c2:	4b0e      	ldr	r3, [pc, #56]	; (80033fc <task_sched_init+0x44>)
 80033c4:	2200      	movs	r2, #0
 80033c6:	701a      	strb	r2, [r3, #0]
    bitmap_init(&task_priority_bitmap);
 80033c8:	480d      	ldr	r0, [pc, #52]	; (8003400 <task_sched_init+0x48>)
 80033ca:	f000 fae1 	bl	8003990 <bitmap_init>
    for (i = 0; i < OS_PRO_COUNT; i++) {
 80033ce:	2300      	movs	r3, #0
 80033d0:	607b      	str	r3, [r7, #4]
 80033d2:	e00c      	b.n	80033ee <task_sched_init+0x36>
        list_init(&task_table[i]);
 80033d4:	687a      	ldr	r2, [r7, #4]
 80033d6:	4613      	mov	r3, r2
 80033d8:	005b      	lsls	r3, r3, #1
 80033da:	4413      	add	r3, r2
 80033dc:	009b      	lsls	r3, r3, #2
 80033de:	4a09      	ldr	r2, [pc, #36]	; (8003404 <task_sched_init+0x4c>)
 80033e0:	4413      	add	r3, r2
 80033e2:	4618      	mov	r0, r3
 80033e4:	f000 fb5f 	bl	8003aa6 <list_init>
    for (i = 0; i < OS_PRO_COUNT; i++) {
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	3301      	adds	r3, #1
 80033ec:	607b      	str	r3, [r7, #4]
 80033ee:	687b      	ldr	r3, [r7, #4]
 80033f0:	2b1f      	cmp	r3, #31
 80033f2:	ddef      	ble.n	80033d4 <task_sched_init+0x1c>
    }
}
 80033f4:	bf00      	nop
 80033f6:	3708      	adds	r7, #8
 80033f8:	46bd      	mov	sp, r7
 80033fa:	bd80      	pop	{r7, pc}
 80033fc:	20000650 	andcs	r0, r0, r0, asr r6
 8003400:	200026e8 	andcs	r2, r0, r8, ror #13
 8003404:	200046ec 	andcs	r4, r0, ip, ror #13

08003408 <task_sched_disable>:

void task_sched_disable(void)
{
 8003408:	b580      	push	{r7, lr}
 800340a:	b082      	sub	sp, #8
 800340c:	af00      	add	r7, sp, #0
    uint32_t status = task_enter_critical();
 800340e:	f7ff fe89 	bl	8003124 <task_enter_critical>
 8003412:	6078      	str	r0, [r7, #4]
    if (sched_lock_count < 255) {
 8003414:	4b08      	ldr	r3, [pc, #32]	; (8003438 <task_sched_disable+0x30>)
 8003416:	781b      	ldrb	r3, [r3, #0]
 8003418:	2bff      	cmp	r3, #255	; 0xff
 800341a:	d005      	beq.n	8003428 <task_sched_disable+0x20>
        sched_lock_count++;
 800341c:	4b06      	ldr	r3, [pc, #24]	; (8003438 <task_sched_disable+0x30>)
 800341e:	781b      	ldrb	r3, [r3, #0]
 8003420:	3301      	adds	r3, #1
 8003422:	b2da      	uxtb	r2, r3
 8003424:	4b04      	ldr	r3, [pc, #16]	; (8003438 <task_sched_disable+0x30>)
 8003426:	701a      	strb	r2, [r3, #0]
    }
    task_exit_critical(status);
 8003428:	6878      	ldr	r0, [r7, #4]
 800342a:	f7ff fe8a 	bl	8003142 <task_exit_critical>
}
 800342e:	bf00      	nop
 8003430:	3708      	adds	r7, #8
 8003432:	46bd      	mov	sp, r7
 8003434:	bd80      	pop	{r7, pc}
 8003436:	bf00      	nop
 8003438:	20000650 	andcs	r0, r0, r0, asr r6

0800343c <task_sched_enable>:

void task_sched_enable(void)
{
 800343c:	b580      	push	{r7, lr}
 800343e:	b082      	sub	sp, #8
 8003440:	af00      	add	r7, sp, #0
    uint32_t status = task_enter_critical();
 8003442:	f7ff fe6f 	bl	8003124 <task_enter_critical>
 8003446:	6078      	str	r0, [r7, #4]
    if (sched_lock_count > 0) {
 8003448:	4b0b      	ldr	r3, [pc, #44]	; (8003478 <task_sched_enable+0x3c>)
 800344a:	781b      	ldrb	r3, [r3, #0]
 800344c:	2b00      	cmp	r3, #0
 800344e:	d00b      	beq.n	8003468 <task_sched_enable+0x2c>
        if (--sched_lock_count == 0) {
 8003450:	4b09      	ldr	r3, [pc, #36]	; (8003478 <task_sched_enable+0x3c>)
 8003452:	781b      	ldrb	r3, [r3, #0]
 8003454:	3b01      	subs	r3, #1
 8003456:	b2da      	uxtb	r2, r3
 8003458:	4b07      	ldr	r3, [pc, #28]	; (8003478 <task_sched_enable+0x3c>)
 800345a:	701a      	strb	r2, [r3, #0]
 800345c:	4b06      	ldr	r3, [pc, #24]	; (8003478 <task_sched_enable+0x3c>)
 800345e:	781b      	ldrb	r3, [r3, #0]
 8003460:	2b00      	cmp	r3, #0
 8003462:	d101      	bne.n	8003468 <task_sched_enable+0x2c>
            task_sched();
 8003464:	f000 f858 	bl	8003518 <task_sched>
        }
    }
    task_exit_critical(status);
 8003468:	6878      	ldr	r0, [r7, #4]
 800346a:	f7ff fe6a 	bl	8003142 <task_exit_critical>
}
 800346e:	bf00      	nop
 8003470:	3708      	adds	r7, #8
 8003472:	46bd      	mov	sp, r7
 8003474:	bd80      	pop	{r7, pc}
 8003476:	bf00      	nop
 8003478:	20000650 	andcs	r0, r0, r0, asr r6

0800347c <task_sched_ready>:

void task_sched_ready(task_t *task)
{
 800347c:	b580      	push	{r7, lr}
 800347e:	b082      	sub	sp, #8
 8003480:	af00      	add	r7, sp, #0
 8003482:	6078      	str	r0, [r7, #4]
    // task_table[task->priority] = task;
    list_add_last(&task_table[task->priority], &task->link_node);
 8003484:	687b      	ldr	r3, [r7, #4]
 8003486:	689a      	ldr	r2, [r3, #8]
 8003488:	4613      	mov	r3, r2
 800348a:	005b      	lsls	r3, r3, #1
 800348c:	4413      	add	r3, r2
 800348e:	009b      	lsls	r3, r3, #2
 8003490:	4a08      	ldr	r2, [pc, #32]	; (80034b4 <task_sched_ready+0x38>)
 8003492:	441a      	add	r2, r3
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	3314      	adds	r3, #20
 8003498:	4619      	mov	r1, r3
 800349a:	4610      	mov	r0, r2
 800349c:	f000 fb33 	bl	8003b06 <list_add_last>
    bitmap_set_bit(&task_priority_bitmap, task->priority);
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	689b      	ldr	r3, [r3, #8]
 80034a4:	4619      	mov	r1, r3
 80034a6:	4804      	ldr	r0, [pc, #16]	; (80034b8 <task_sched_ready+0x3c>)
 80034a8:	f000 fa85 	bl	80039b6 <bitmap_set_bit>
}
 80034ac:	bf00      	nop
 80034ae:	3708      	adds	r7, #8
 80034b0:	46bd      	mov	sp, r7
 80034b2:	bd80      	pop	{r7, pc}
 80034b4:	200046ec 	andcs	r4, r0, ip, ror #13
 80034b8:	200026e8 	andcs	r2, r0, r8, ror #13

080034bc <task_sched_not_ready>:
void task_sched_not_ready(task_t *task)
{
 80034bc:	b580      	push	{r7, lr}
 80034be:	b082      	sub	sp, #8
 80034c0:	af00      	add	r7, sp, #0
 80034c2:	6078      	str	r0, [r7, #4]
    // task_table[task->priority] = (task_t*)0;
    list_remove(&task_table[task->priority], &task->link_node);
 80034c4:	687b      	ldr	r3, [r7, #4]
 80034c6:	689a      	ldr	r2, [r3, #8]
 80034c8:	4613      	mov	r3, r2
 80034ca:	005b      	lsls	r3, r3, #1
 80034cc:	4413      	add	r3, r2
 80034ce:	009b      	lsls	r3, r3, #2
 80034d0:	4a0f      	ldr	r2, [pc, #60]	; (8003510 <task_sched_not_ready+0x54>)
 80034d2:	441a      	add	r2, r3
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	3314      	adds	r3, #20
 80034d8:	4619      	mov	r1, r3
 80034da:	4610      	mov	r0, r2
 80034dc:	f000 fb50 	bl	8003b80 <list_remove>
    //同一优先级可能有多个任务
    if (list_count(&task_table[task->priority]) == 0) {
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	689a      	ldr	r2, [r3, #8]
 80034e4:	4613      	mov	r3, r2
 80034e6:	005b      	lsls	r3, r3, #1
 80034e8:	4413      	add	r3, r2
 80034ea:	009b      	lsls	r3, r3, #2
 80034ec:	4a08      	ldr	r2, [pc, #32]	; (8003510 <task_sched_not_ready+0x54>)
 80034ee:	4413      	add	r3, r2
 80034f0:	4618      	mov	r0, r3
 80034f2:	f000 faea 	bl	8003aca <list_count>
 80034f6:	4603      	mov	r3, r0
 80034f8:	2b00      	cmp	r3, #0
 80034fa:	d105      	bne.n	8003508 <task_sched_not_ready+0x4c>
        bitmap_clear_bit(&task_priority_bitmap, task->priority);
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	689b      	ldr	r3, [r3, #8]
 8003500:	4619      	mov	r1, r3
 8003502:	4804      	ldr	r0, [pc, #16]	; (8003514 <task_sched_not_ready+0x58>)
 8003504:	f000 fa6a 	bl	80039dc <bitmap_clear_bit>
    }
}
 8003508:	bf00      	nop
 800350a:	3708      	adds	r7, #8
 800350c:	46bd      	mov	sp, r7
 800350e:	bd80      	pop	{r7, pc}
 8003510:	200046ec 	andcs	r4, r0, ip, ror #13
 8003514:	200026e8 	andcs	r2, r0, r8, ror #13

08003518 <task_sched>:

void task_sched(void)
{
 8003518:	b580      	push	{r7, lr}
 800351a:	b082      	sub	sp, #8
 800351c:	af00      	add	r7, sp, #0
    task_t *tmp_task;
    uint32_t status = task_enter_critical();
 800351e:	f7ff fe01 	bl	8003124 <task_enter_critical>
 8003522:	6078      	str	r0, [r7, #4]

    if (sched_lock_count > 0) {
 8003524:	4b0d      	ldr	r3, [pc, #52]	; (800355c <task_sched+0x44>)
 8003526:	781b      	ldrb	r3, [r3, #0]
 8003528:	2b00      	cmp	r3, #0
 800352a:	d003      	beq.n	8003534 <task_sched+0x1c>
        task_exit_critical(status);
 800352c:	6878      	ldr	r0, [r7, #4]
 800352e:	f7ff fe08 	bl	8003142 <task_exit_critical>
        return;
 8003532:	e00f      	b.n	8003554 <task_sched+0x3c>
    }
#if 1
    tmp_task = task_highest_ready();
 8003534:	f7ff ff22 	bl	800337c <task_highest_ready>
 8003538:	6038      	str	r0, [r7, #0]
    if (tmp_task != current_task) {
 800353a:	4b09      	ldr	r3, [pc, #36]	; (8003560 <task_sched+0x48>)
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	683a      	ldr	r2, [r7, #0]
 8003540:	429a      	cmp	r2, r3
 8003542:	d004      	beq.n	800354e <task_sched+0x36>
        next_task = tmp_task;
 8003544:	4a07      	ldr	r2, [pc, #28]	; (8003564 <task_sched+0x4c>)
 8003546:	683b      	ldr	r3, [r7, #0]
 8003548:	6013      	str	r3, [r2, #0]
        task_switch();
 800354a:	f7ff fe23 	bl	8003194 <task_switch>
    }
    task_exit_critical(status);
 800354e:	6878      	ldr	r0, [r7, #4]
 8003550:	f7ff fdf7 	bl	8003142 <task_exit_critical>
        }
    }
    task_switch();
    task_exit_critical(status);
#endif
}
 8003554:	3708      	adds	r7, #8
 8003556:	46bd      	mov	sp, r7
 8003558:	bd80      	pop	{r7, pc}
 800355a:	bf00      	nop
 800355c:	20000650 	andcs	r0, r0, r0, asr r6
 8003560:	20000600 	andcs	r0, r0, r0, lsl #12
 8003564:	20000654 	andcs	r0, r0, r4, asr r6

08003568 <task_delay_init>:
void task_delay_init(void)
{
 8003568:	b580      	push	{r7, lr}
 800356a:	af00      	add	r7, sp, #0
    list_init(&task_delay_list);
 800356c:	4802      	ldr	r0, [pc, #8]	; (8003578 <task_delay_init+0x10>)
 800356e:	f000 fa9a 	bl	8003aa6 <list_init>
}
 8003572:	bf00      	nop
 8003574:	bd80      	pop	{r7, pc}
 8003576:	bf00      	nop
 8003578:	200026dc 	ldrdcs	r2, [r0], -ip

0800357c <task_time_wait>:
void task_time_wait(task_t *task, uint32_t ticks)
{
 800357c:	b580      	push	{r7, lr}
 800357e:	b082      	sub	sp, #8
 8003580:	af00      	add	r7, sp, #0
 8003582:	6078      	str	r0, [r7, #4]
 8003584:	6039      	str	r1, [r7, #0]
    task->delay_ticks = ticks;
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	683a      	ldr	r2, [r7, #0]
 800358a:	605a      	str	r2, [r3, #4]
    list_add_last(&task_delay_list, &task->delay_node);
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	330c      	adds	r3, #12
 8003590:	4619      	mov	r1, r3
 8003592:	4806      	ldr	r0, [pc, #24]	; (80035ac <task_time_wait+0x30>)
 8003594:	f000 fab7 	bl	8003b06 <list_add_last>
    task->state |= OS_TASK_STATE_DELAYED;
 8003598:	687b      	ldr	r3, [r7, #4]
 800359a:	69db      	ldr	r3, [r3, #28]
 800359c:	f043 0202 	orr.w	r2, r3, #2
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	61da      	str	r2, [r3, #28]
}
 80035a4:	bf00      	nop
 80035a6:	3708      	adds	r7, #8
 80035a8:	46bd      	mov	sp, r7
 80035aa:	bd80      	pop	{r7, pc}
 80035ac:	200026dc 	ldrdcs	r2, [r0], -ip

080035b0 <task_time_wakeup>:
void task_time_wakeup(task_t *task)
{
 80035b0:	b580      	push	{r7, lr}
 80035b2:	b082      	sub	sp, #8
 80035b4:	af00      	add	r7, sp, #0
 80035b6:	6078      	str	r0, [r7, #4]
    list_remove(&task_delay_list, &task->delay_node);
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	330c      	adds	r3, #12
 80035bc:	4619      	mov	r1, r3
 80035be:	4806      	ldr	r0, [pc, #24]	; (80035d8 <task_time_wakeup+0x28>)
 80035c0:	f000 fade 	bl	8003b80 <list_remove>
    task->state &= ~OS_TASK_STATE_DELAYED;
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	69db      	ldr	r3, [r3, #28]
 80035c8:	f023 0202 	bic.w	r2, r3, #2
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	61da      	str	r2, [r3, #28]
}
 80035d0:	bf00      	nop
 80035d2:	3708      	adds	r7, #8
 80035d4:	46bd      	mov	sp, r7
 80035d6:	bd80      	pop	{r7, pc}
 80035d8:	200026dc 	ldrdcs	r2, [r0], -ip

080035dc <task_systick_handler>:

void task_systick_handler(void)
{
 80035dc:	b580      	push	{r7, lr}
 80035de:	b084      	sub	sp, #16
 80035e0:	af00      	add	r7, sp, #0
    node_t *node;

    int i;
    uint32_t status = task_enter_critical();
 80035e2:	f7ff fd9f 	bl	8003124 <task_enter_critical>
 80035e6:	60b8      	str	r0, [r7, #8]
    for (node = task_delay_list.head_node.next_node; node != &task_delay_list.head_node; node = node->next_node) {
 80035e8:	4b2e      	ldr	r3, [pc, #184]	; (80036a4 <task_systick_handler+0xc8>)
 80035ea:	685b      	ldr	r3, [r3, #4]
 80035ec:	60fb      	str	r3, [r7, #12]
 80035ee:	e014      	b.n	800361a <task_systick_handler+0x3e>
        task_t *task = NODE_PARENT(node, task_t, delay_node);
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	3b0c      	subs	r3, #12
 80035f4:	607b      	str	r3, [r7, #4]
        // if (task != NULL) {
            if (--task->delay_ticks == 0) {
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	685b      	ldr	r3, [r3, #4]
 80035fa:	1e5a      	subs	r2, r3, #1
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	605a      	str	r2, [r3, #4]
 8003600:	687b      	ldr	r3, [r7, #4]
 8003602:	685b      	ldr	r3, [r3, #4]
 8003604:	2b00      	cmp	r3, #0
 8003606:	d105      	bne.n	8003614 <task_systick_handler+0x38>
                task_time_wakeup(task);
 8003608:	6878      	ldr	r0, [r7, #4]
 800360a:	f7ff ffd1 	bl	80035b0 <task_time_wakeup>
                task_sched_ready(task);
 800360e:	6878      	ldr	r0, [r7, #4]
 8003610:	f7ff ff34 	bl	800347c <task_sched_ready>
    for (node = task_delay_list.head_node.next_node; node != &task_delay_list.head_node; node = node->next_node) {
 8003614:	68fb      	ldr	r3, [r7, #12]
 8003616:	685b      	ldr	r3, [r3, #4]
 8003618:	60fb      	str	r3, [r7, #12]
 800361a:	68fb      	ldr	r3, [r7, #12]
 800361c:	4a21      	ldr	r2, [pc, #132]	; (80036a4 <task_systick_handler+0xc8>)
 800361e:	4293      	cmp	r3, r2
 8003620:	d1e6      	bne.n	80035f0 <task_systick_handler+0x14>
            }
        // }

    }

    if (--current_task->slice == 0) {
 8003622:	4b21      	ldr	r3, [pc, #132]	; (80036a8 <task_systick_handler+0xcc>)
 8003624:	681b      	ldr	r3, [r3, #0]
 8003626:	6a1a      	ldr	r2, [r3, #32]
 8003628:	3a01      	subs	r2, #1
 800362a:	621a      	str	r2, [r3, #32]
 800362c:	6a1b      	ldr	r3, [r3, #32]
 800362e:	2b00      	cmp	r3, #0
 8003630:	d12e      	bne.n	8003690 <task_systick_handler+0xb4>
        if (list_count(&task_table[current_task->priority]) > 0) {
 8003632:	4b1d      	ldr	r3, [pc, #116]	; (80036a8 <task_systick_handler+0xcc>)
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	689a      	ldr	r2, [r3, #8]
 8003638:	4613      	mov	r3, r2
 800363a:	005b      	lsls	r3, r3, #1
 800363c:	4413      	add	r3, r2
 800363e:	009b      	lsls	r3, r3, #2
 8003640:	4a1a      	ldr	r2, [pc, #104]	; (80036ac <task_systick_handler+0xd0>)
 8003642:	4413      	add	r3, r2
 8003644:	4618      	mov	r0, r3
 8003646:	f000 fa40 	bl	8003aca <list_count>
 800364a:	4603      	mov	r3, r0
 800364c:	2b00      	cmp	r3, #0
 800364e:	d01f      	beq.n	8003690 <task_systick_handler+0xb4>
            list_remove_first(&task_table[current_task->priority]);
 8003650:	4b15      	ldr	r3, [pc, #84]	; (80036a8 <task_systick_handler+0xcc>)
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	689a      	ldr	r2, [r3, #8]
 8003656:	4613      	mov	r3, r2
 8003658:	005b      	lsls	r3, r3, #1
 800365a:	4413      	add	r3, r2
 800365c:	009b      	lsls	r3, r3, #2
 800365e:	4a13      	ldr	r2, [pc, #76]	; (80036ac <task_systick_handler+0xd0>)
 8003660:	4413      	add	r3, r2
 8003662:	4618      	mov	r0, r3
 8003664:	f000 fa6c 	bl	8003b40 <list_remove_first>
            list_add_last(&task_table[current_task->priority], &current_task->link_node);
 8003668:	4b0f      	ldr	r3, [pc, #60]	; (80036a8 <task_systick_handler+0xcc>)
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	689a      	ldr	r2, [r3, #8]
 800366e:	4613      	mov	r3, r2
 8003670:	005b      	lsls	r3, r3, #1
 8003672:	4413      	add	r3, r2
 8003674:	009b      	lsls	r3, r3, #2
 8003676:	4a0d      	ldr	r2, [pc, #52]	; (80036ac <task_systick_handler+0xd0>)
 8003678:	441a      	add	r2, r3
 800367a:	4b0b      	ldr	r3, [pc, #44]	; (80036a8 <task_systick_handler+0xcc>)
 800367c:	681b      	ldr	r3, [r3, #0]
 800367e:	3314      	adds	r3, #20
 8003680:	4619      	mov	r1, r3
 8003682:	4610      	mov	r0, r2
 8003684:	f000 fa3f 	bl	8003b06 <list_add_last>
            //reset counter
            current_task->slice = OS_SLICE_MAX;
 8003688:	4b07      	ldr	r3, [pc, #28]	; (80036a8 <task_systick_handler+0xcc>)
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	220a      	movs	r2, #10
 800368e:	621a      	str	r2, [r3, #32]
        }
    }
    task_exit_critical(status);
 8003690:	68b8      	ldr	r0, [r7, #8]
 8003692:	f7ff fd56 	bl	8003142 <task_exit_critical>

    task_sched();
 8003696:	f7ff ff3f 	bl	8003518 <task_sched>
}
 800369a:	bf00      	nop
 800369c:	3710      	adds	r7, #16
 800369e:	46bd      	mov	sp, r7
 80036a0:	bd80      	pop	{r7, pc}
 80036a2:	bf00      	nop
 80036a4:	200026dc 	ldrdcs	r2, [r0], -ip
 80036a8:	20000600 	andcs	r0, r0, r0, lsl #12
 80036ac:	200046ec 	andcs	r4, r0, ip, ror #13

080036b0 <task_delay>:


void task_delay(uint32_t delay) 
{
 80036b0:	b580      	push	{r7, lr}
 80036b2:	b084      	sub	sp, #16
 80036b4:	af00      	add	r7, sp, #0
 80036b6:	6078      	str	r0, [r7, #4]
    uint32_t status = task_enter_critical();
 80036b8:	f7ff fd34 	bl	8003124 <task_enter_critical>
 80036bc:	60f8      	str	r0, [r7, #12]
    task_time_wait(current_task, delay);
 80036be:	4b0a      	ldr	r3, [pc, #40]	; (80036e8 <task_delay+0x38>)
 80036c0:	681b      	ldr	r3, [r3, #0]
 80036c2:	6879      	ldr	r1, [r7, #4]
 80036c4:	4618      	mov	r0, r3
 80036c6:	f7ff ff59 	bl	800357c <task_time_wait>
    task_sched_not_ready(current_task);
 80036ca:	4b07      	ldr	r3, [pc, #28]	; (80036e8 <task_delay+0x38>)
 80036cc:	681b      	ldr	r3, [r3, #0]
 80036ce:	4618      	mov	r0, r3
 80036d0:	f7ff fef4 	bl	80034bc <task_sched_not_ready>
    task_sched();
 80036d4:	f7ff ff20 	bl	8003518 <task_sched>
    task_exit_critical(status);
 80036d8:	68f8      	ldr	r0, [r7, #12]
 80036da:	f7ff fd32 	bl	8003142 <task_exit_critical>
}
 80036de:	bf00      	nop
 80036e0:	3710      	adds	r7, #16
 80036e2:	46bd      	mov	sp, r7
 80036e4:	bd80      	pop	{r7, pc}
 80036e6:	bf00      	nop
 80036e8:	20000600 	andcs	r0, r0, r0, lsl #12

080036ec <SysTick_Handler>:

void SysTick_Handler (void) 
{
 80036ec:	b580      	push	{r7, lr}
 80036ee:	af00      	add	r7, sp, #0
    HAL_IncTick();
 80036f0:	f7fd fdca 	bl	8001288 <HAL_IncTick>
    tick_counter++;
 80036f4:	4b06      	ldr	r3, [pc, #24]	; (8003710 <SysTick_Handler+0x24>)
 80036f6:	681b      	ldr	r3, [r3, #0]
 80036f8:	3301      	adds	r3, #1
 80036fa:	4a05      	ldr	r2, [pc, #20]	; (8003710 <SysTick_Handler+0x24>)
 80036fc:	6013      	str	r3, [r2, #0]
    if (is_scheduler_ready) {
 80036fe:	4b05      	ldr	r3, [pc, #20]	; (8003714 <SysTick_Handler+0x28>)
 8003700:	781b      	ldrb	r3, [r3, #0]
 8003702:	2b00      	cmp	r3, #0
 8003704:	d001      	beq.n	800370a <SysTick_Handler+0x1e>
        task_systick_handler();
 8003706:	f7ff ff69 	bl	80035dc <task_systick_handler>
    }
}
 800370a:	bf00      	nop
 800370c:	bd80      	pop	{r7, pc}
 800370e:	bf00      	nop
 8003710:	20000604 	andcs	r0, r0, r4, lsl #12
 8003714:	200005fc 	strdcs	r0, [r0], -ip

08003718 <set_systick_period>:

__attribute__((weak)) uint32_t SystemCoreClock = 24000000;
void set_systick_period(uint32_t ms)
{
 8003718:	b580      	push	{r7, lr}
 800371a:	b084      	sub	sp, #16
 800371c:	af00      	add	r7, sp, #0
 800371e:	6078      	str	r0, [r7, #4]
    uint32_t ticks = 24000;//SystemCoreClock/1000;
 8003720:	f645 53c0 	movw	r3, #24000	; 0x5dc0
 8003724:	60fb      	str	r3, [r7, #12]
    ticks = ms*ticks;
 8003726:	68fb      	ldr	r3, [r7, #12]
 8003728:	687a      	ldr	r2, [r7, #4]
 800372a:	fb02 f303 	mul.w	r3, r2, r3
 800372e:	60fb      	str	r3, [r7, #12]

    SysTick_Config(ticks);
 8003730:	68f8      	ldr	r0, [r7, #12]
 8003732:	f7ff fd67 	bl	8003204 <SysTick_Config>
}
 8003736:	bf00      	nop
 8003738:	3710      	adds	r7, #16
 800373a:	46bd      	mov	sp, r7
 800373c:	bd80      	pop	{r7, pc}
	...

08003740 <task_entry_1>:

int share_count;
int task1_flag;
int first_set;
void task_entry_1(void* param)
{
 8003740:	b580      	push	{r7, lr}
 8003742:	b086      	sub	sp, #24
 8003744:	af00      	add	r7, sp, #0
 8003746:	6078      	str	r0, [r7, #4]
    bitmap_t bitmap;
    int i;
    bitmap_init(&bitmap);
 8003748:	f107 030c 	add.w	r3, r7, #12
 800374c:	4618      	mov	r0, r3
 800374e:	f000 f91f 	bl	8003990 <bitmap_init>
    // 依次从最高位开始，将所有位Set，然后检查第1个Set的位置序号
    for (i = bitmap_pos_count() - 1; i >= 0 ; i--) 
 8003752:	f000 f929 	bl	80039a8 <bitmap_pos_count>
 8003756:	4603      	mov	r3, r0
 8003758:	3b01      	subs	r3, #1
 800375a:	617b      	str	r3, [r7, #20]
 800375c:	e012      	b.n	8003784 <task_entry_1+0x44>
    {
        bitmap_set_bit(&bitmap, i);
 800375e:	697a      	ldr	r2, [r7, #20]
 8003760:	f107 030c 	add.w	r3, r7, #12
 8003764:	4611      	mov	r1, r2
 8003766:	4618      	mov	r0, r3
 8003768:	f000 f925 	bl	80039b6 <bitmap_set_bit>

        // first_set 的值应当依次为7,6,5,....,1,0
        first_set = bitmap_get_first(&bitmap);
 800376c:	f107 030c 	add.w	r3, r7, #12
 8003770:	4618      	mov	r0, r3
 8003772:	f000 f947 	bl	8003a04 <bitmap_get_first>
 8003776:	4603      	mov	r3, r0
 8003778:	461a      	mov	r2, r3
 800377a:	4b25      	ldr	r3, [pc, #148]	; (8003810 <task_entry_1+0xd0>)
 800377c:	601a      	str	r2, [r3, #0]
    for (i = bitmap_pos_count() - 1; i >= 0 ; i--) 
 800377e:	697b      	ldr	r3, [r7, #20]
 8003780:	3b01      	subs	r3, #1
 8003782:	617b      	str	r3, [r7, #20]
 8003784:	697b      	ldr	r3, [r7, #20]
 8003786:	2b00      	cmp	r3, #0
 8003788:	dae9      	bge.n	800375e <task_entry_1+0x1e>
    }

    // 依次从第0位开始，将所有位Set，然后检查实际Set的位置序号
    for (i = 0; i < bitmap_pos_count(); i++) 
 800378a:	2300      	movs	r3, #0
 800378c:	617b      	str	r3, [r7, #20]
 800378e:	e012      	b.n	80037b6 <task_entry_1+0x76>
    {
        bitmap_clear_bit(&bitmap, i);
 8003790:	697a      	ldr	r2, [r7, #20]
 8003792:	f107 030c 	add.w	r3, r7, #12
 8003796:	4611      	mov	r1, r2
 8003798:	4618      	mov	r0, r3
 800379a:	f000 f91f 	bl	80039dc <bitmap_clear_bit>
        
        // first_set 的值应当依次为7,6,5,....,1,0
        first_set = bitmap_get_first(&bitmap);
 800379e:	f107 030c 	add.w	r3, r7, #12
 80037a2:	4618      	mov	r0, r3
 80037a4:	f000 f92e 	bl	8003a04 <bitmap_get_first>
 80037a8:	4603      	mov	r3, r0
 80037aa:	461a      	mov	r2, r3
 80037ac:	4b18      	ldr	r3, [pc, #96]	; (8003810 <task_entry_1+0xd0>)
 80037ae:	601a      	str	r2, [r3, #0]
    for (i = 0; i < bitmap_pos_count(); i++) 
 80037b0:	697b      	ldr	r3, [r7, #20]
 80037b2:	3301      	adds	r3, #1
 80037b4:	617b      	str	r3, [r7, #20]
 80037b6:	f000 f8f7 	bl	80039a8 <bitmap_pos_count>
 80037ba:	4602      	mov	r2, r0
 80037bc:	697b      	ldr	r3, [r7, #20]
 80037be:	429a      	cmp	r2, r3
 80037c0:	d8e6      	bhi.n	8003790 <task_entry_1+0x50>
    }
    set_systick_period(10);
 80037c2:	200a      	movs	r0, #10
 80037c4:	f7ff ffa8 	bl	8003718 <set_systick_period>
    for(;;) {
        int var;
        task_sched_disable();
 80037c8:	f7ff fe1e 	bl	8003408 <task_sched_disable>
        printf("[%05d] This is %s. share_count=%d\n", GET_TICKS(), __func__, share_count);
 80037cc:	4b11      	ldr	r3, [pc, #68]	; (8003814 <task_entry_1+0xd4>)
 80037ce:	6819      	ldr	r1, [r3, #0]
 80037d0:	4b11      	ldr	r3, [pc, #68]	; (8003818 <task_entry_1+0xd8>)
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	4a11      	ldr	r2, [pc, #68]	; (800381c <task_entry_1+0xdc>)
 80037d6:	4812      	ldr	r0, [pc, #72]	; (8003820 <task_entry_1+0xe0>)
 80037d8:	f7ff fc50 	bl	800307c <printf_>
        var = share_count;
 80037dc:	4b0e      	ldr	r3, [pc, #56]	; (8003818 <task_entry_1+0xd8>)
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	613b      	str	r3, [r7, #16]
        task1_flag = 1;
 80037e2:	4b10      	ldr	r3, [pc, #64]	; (8003824 <task_entry_1+0xe4>)
 80037e4:	2201      	movs	r2, #1
 80037e6:	601a      	str	r2, [r3, #0]
        task_delay(500);
 80037e8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80037ec:	f7ff ff60 	bl	80036b0 <task_delay>
        var++;
 80037f0:	693b      	ldr	r3, [r7, #16]
 80037f2:	3301      	adds	r3, #1
 80037f4:	613b      	str	r3, [r7, #16]
        share_count = var;
 80037f6:	4a08      	ldr	r2, [pc, #32]	; (8003818 <task_entry_1+0xd8>)
 80037f8:	693b      	ldr	r3, [r7, #16]
 80037fa:	6013      	str	r3, [r2, #0]
        task_sched_enable();
 80037fc:	f7ff fe1e 	bl	800343c <task_sched_enable>
        task1_flag = 0;
 8003800:	4b08      	ldr	r3, [pc, #32]	; (8003824 <task_entry_1+0xe4>)
 8003802:	2200      	movs	r2, #0
 8003804:	601a      	str	r2, [r3, #0]
        task_delay(500);
 8003806:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800380a:	f7ff ff51 	bl	80036b0 <task_delay>
    for(;;) {
 800380e:	e7db      	b.n	80037c8 <task_entry_1+0x88>
 8003810:	200026d0 	ldrdcs	r2, [r0], -r0
 8003814:	20000604 	andcs	r0, r0, r4, lsl #12
 8003818:	200026d4 	ldrdcs	r2, [r0], -r4
 800381c:	08003f78 	stmdaeq	r0, {r3, r4, r5, r6, r8, r9, sl, fp, ip, sp}
 8003820:	08003ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp, ip, sp}
 8003824:	20001680 	andcs	r1, r0, r0, lsl #13

08003828 <task_entry_2>:
    }
}
int task2_flag;
void task_entry_2(void* param)
{
 8003828:	b580      	push	{r7, lr}
 800382a:	b082      	sub	sp, #8
 800382c:	af00      	add	r7, sp, #0
 800382e:	6078      	str	r0, [r7, #4]
    for(;;) {
        task_delay(500);
 8003830:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003834:	f7ff ff3c 	bl	80036b0 <task_delay>
        task_sched_disable();
 8003838:	f7ff fde6 	bl	8003408 <task_sched_disable>
        printf("[%05d] This is %s. share_count=%d\n", GET_TICKS(), __func__, share_count);
 800383c:	4b0c      	ldr	r3, [pc, #48]	; (8003870 <task_entry_2+0x48>)
 800383e:	6819      	ldr	r1, [r3, #0]
 8003840:	4b0c      	ldr	r3, [pc, #48]	; (8003874 <task_entry_2+0x4c>)
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	4a0c      	ldr	r2, [pc, #48]	; (8003878 <task_entry_2+0x50>)
 8003846:	480d      	ldr	r0, [pc, #52]	; (800387c <task_entry_2+0x54>)
 8003848:	f7ff fc18 	bl	800307c <printf_>
        share_count++;
 800384c:	4b09      	ldr	r3, [pc, #36]	; (8003874 <task_entry_2+0x4c>)
 800384e:	681b      	ldr	r3, [r3, #0]
 8003850:	3301      	adds	r3, #1
 8003852:	4a08      	ldr	r2, [pc, #32]	; (8003874 <task_entry_2+0x4c>)
 8003854:	6013      	str	r3, [r2, #0]
        task_sched_enable();
 8003856:	f7ff fdf1 	bl	800343c <task_sched_enable>

        task2_flag = 1;
 800385a:	4b09      	ldr	r3, [pc, #36]	; (8003880 <task_entry_2+0x58>)
 800385c:	2201      	movs	r2, #1
 800385e:	601a      	str	r2, [r3, #0]
        task_delay(500);
 8003860:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003864:	f7ff ff24 	bl	80036b0 <task_delay>
        task2_flag = 0;
 8003868:	4b05      	ldr	r3, [pc, #20]	; (8003880 <task_entry_2+0x58>)
 800386a:	2200      	movs	r2, #0
 800386c:	601a      	str	r2, [r3, #0]
        task_delay(500);
 800386e:	e7df      	b.n	8003830 <task_entry_2+0x8>
 8003870:	20000604 	andcs	r0, r0, r4, lsl #12
 8003874:	200026d4 	ldrdcs	r2, [r0], -r4
 8003878:	08003f88 	stmdaeq	r0, {r3, r7, r8, r9, sl, fp, ip, sp}
 800387c:	08003ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp, ip, sp}
 8003880:	20000658 	andcs	r0, r0, r8, asr r6

08003884 <task_entry_3>:
        // task_delay(500);
    }
}
int task3_flag;
void task_entry_3(void* param)
{
 8003884:	b580      	push	{r7, lr}
 8003886:	b082      	sub	sp, #8
 8003888:	af00      	add	r7, sp, #0
 800388a:	6078      	str	r0, [r7, #4]
    for(;;) {
        task_delay(500);
 800388c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8003890:	f7ff ff0e 	bl	80036b0 <task_delay>
        task_sched_disable();
 8003894:	f7ff fdb8 	bl	8003408 <task_sched_disable>
        printf("[%05d] This is %s. share_count=%d\n", GET_TICKS(), __func__, share_count);
 8003898:	4b0c      	ldr	r3, [pc, #48]	; (80038cc <task_entry_3+0x48>)
 800389a:	6819      	ldr	r1, [r3, #0]
 800389c:	4b0c      	ldr	r3, [pc, #48]	; (80038d0 <task_entry_3+0x4c>)
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	4a0c      	ldr	r2, [pc, #48]	; (80038d4 <task_entry_3+0x50>)
 80038a2:	480d      	ldr	r0, [pc, #52]	; (80038d8 <task_entry_3+0x54>)
 80038a4:	f7ff fbea 	bl	800307c <printf_>
        share_count++;
 80038a8:	4b09      	ldr	r3, [pc, #36]	; (80038d0 <task_entry_3+0x4c>)
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	3301      	adds	r3, #1
 80038ae:	4a08      	ldr	r2, [pc, #32]	; (80038d0 <task_entry_3+0x4c>)
 80038b0:	6013      	str	r3, [r2, #0]
        task_sched_enable();
 80038b2:	f7ff fdc3 	bl	800343c <task_sched_enable>

        task3_flag = 1;
 80038b6:	4b09      	ldr	r3, [pc, #36]	; (80038dc <task_entry_3+0x58>)
 80038b8:	2201      	movs	r2, #1
 80038ba:	601a      	str	r2, [r3, #0]
        task_delay(500);
 80038bc:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80038c0:	f7ff fef6 	bl	80036b0 <task_delay>
        task3_flag = 0;
 80038c4:	4b05      	ldr	r3, [pc, #20]	; (80038dc <task_entry_3+0x58>)
 80038c6:	2200      	movs	r2, #0
 80038c8:	601a      	str	r2, [r3, #0]
        task_delay(500);
 80038ca:	e7df      	b.n	800388c <task_entry_3+0x8>
 80038cc:	20000604 	andcs	r0, r0, r4, lsl #12
 80038d0:	200026d4 	ldrdcs	r2, [r0], -r4
 80038d4:	08003f98 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, fp, ip, sp}
 80038d8:	08003ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp, ip, sp}
 80038dc:	20001684 	andcs	r1, r0, r4, lsl #13

080038e0 <task_entry_idle>:
        // task_delay(500);
    }
}

void task_entry_idle(void* param)
{
 80038e0:	b480      	push	{r7}
 80038e2:	b083      	sub	sp, #12
 80038e4:	af00      	add	r7, sp, #0
 80038e6:	6078      	str	r0, [r7, #4]
    for(;;) {
 80038e8:	e7fe      	b.n	80038e8 <task_entry_idle+0x8>
	...

080038ec <task_start>:
task_t task_idle;
uint32_t idletask_env[1024];


void task_start(void)
{
 80038ec:	b580      	push	{r7, lr}
 80038ee:	b082      	sub	sp, #8
 80038f0:	af02      	add	r7, sp, #8
    task_sched_init();
 80038f2:	f7ff fd61 	bl	80033b8 <task_sched_init>
    task_delay_init();
 80038f6:	f7ff fe37 	bl	8003568 <task_delay_init>

    task_create(&task1, task_entry_1, (void*)0x11111111, 0, &task1_env[1024]);
 80038fa:	4b17      	ldr	r3, [pc, #92]	; (8003958 <task_start+0x6c>)
 80038fc:	9300      	str	r3, [sp, #0]
 80038fe:	2300      	movs	r3, #0
 8003900:	f04f 3211 	mov.w	r2, #286331153	; 0x11111111
 8003904:	4915      	ldr	r1, [pc, #84]	; (800395c <task_start+0x70>)
 8003906:	4816      	ldr	r0, [pc, #88]	; (8003960 <task_start+0x74>)
 8003908:	f7ff fc9e 	bl	8003248 <task_create>
    task_create(&task2, task_entry_2, (void*)0x22222222, 1, &task2_env[1024]);
 800390c:	4b15      	ldr	r3, [pc, #84]	; (8003964 <task_start+0x78>)
 800390e:	9300      	str	r3, [sp, #0]
 8003910:	2301      	movs	r3, #1
 8003912:	f04f 3222 	mov.w	r2, #572662306	; 0x22222222
 8003916:	4914      	ldr	r1, [pc, #80]	; (8003968 <task_start+0x7c>)
 8003918:	4814      	ldr	r0, [pc, #80]	; (800396c <task_start+0x80>)
 800391a:	f7ff fc95 	bl	8003248 <task_create>
    task_create(&task3, task_entry_3, (void*)0x33333333, 1, &task3_env[1024]);
 800391e:	4b14      	ldr	r3, [pc, #80]	; (8003970 <task_start+0x84>)
 8003920:	9300      	str	r3, [sp, #0]
 8003922:	2301      	movs	r3, #1
 8003924:	f04f 3233 	mov.w	r2, #858993459	; 0x33333333
 8003928:	4912      	ldr	r1, [pc, #72]	; (8003974 <task_start+0x88>)
 800392a:	4813      	ldr	r0, [pc, #76]	; (8003978 <task_start+0x8c>)
 800392c:	f7ff fc8c 	bl	8003248 <task_create>
    // current_task = &task1;

    // task_table[0] = &task1;
    // task_table[1] = &task2;
    
    task_create(&task_idle, task_entry_idle, (void*)0, OS_PRO_COUNT - 1,&idletask_env[1024]);
 8003930:	4b12      	ldr	r3, [pc, #72]	; (800397c <task_start+0x90>)
 8003932:	9300      	str	r3, [sp, #0]
 8003934:	231f      	movs	r3, #31
 8003936:	2200      	movs	r2, #0
 8003938:	4911      	ldr	r1, [pc, #68]	; (8003980 <task_start+0x94>)
 800393a:	4812      	ldr	r0, [pc, #72]	; (8003984 <task_start+0x98>)
 800393c:	f7ff fc84 	bl	8003248 <task_create>
    // idle_task = &task_idle;
    next_task = task_highest_ready();
 8003940:	f7ff fd1c 	bl	800337c <task_highest_ready>
 8003944:	4602      	mov	r2, r0
 8003946:	4b10      	ldr	r3, [pc, #64]	; (8003988 <task_start+0x9c>)
 8003948:	601a      	str	r2, [r3, #0]
    is_scheduler_ready = true;
 800394a:	4b10      	ldr	r3, [pc, #64]	; (800398c <task_start+0xa0>)
 800394c:	2201      	movs	r2, #1
 800394e:	701a      	strb	r2, [r3, #0]
    run_first_task();
 8003950:	f7ff fc06 	bl	8003160 <run_first_task>
    while(1);
 8003954:	e7fe      	b.n	8003954 <task_start+0x68>
 8003956:	bf00      	nop
 8003958:	20001680 	andcs	r1, r0, r0, lsl #13
 800395c:	08003741 	stmdaeq	r0, {r0, r6, r8, r9, sl, ip, sp}
 8003960:	20001688 	andcs	r1, r0, r8, lsl #13
 8003964:	200026ac 	andcs	r2, r0, ip, lsr #13
 8003968:	08003829 	stmdaeq	r0, {r0, r3, r5, fp, ip, sp}
 800396c:	200026ac 	andcs	r2, r0, ip, lsr #13
 8003970:	200036ec 	andcs	r3, r0, ip, ror #13
 8003974:	08003885 	stmdaeq	r0, {r0, r2, r7, fp, ip, sp}
 8003978:	2000486c 	andcs	r4, r0, ip, ror #16
 800397c:	200046ec 	andcs	r4, r0, ip, ror #13
 8003980:	080038e1 	stmdaeq	r0, {r0, r5, r6, r7, fp, ip, sp}
 8003984:	2000065c 	andcs	r0, r0, ip, asr r6
 8003988:	20000654 	andcs	r0, r0, r4, asr r6
 800398c:	200005fc 	strdcs	r0, [r0], -ip

08003990 <bitmap_init>:
#include "bitmap.h"

void bitmap_init(bitmap_t *bitmap)
{
 8003990:	b480      	push	{r7}
 8003992:	b083      	sub	sp, #12
 8003994:	af00      	add	r7, sp, #0
 8003996:	6078      	str	r0, [r7, #4]
    bitmap->bitmap = 0;
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	2200      	movs	r2, #0
 800399c:	601a      	str	r2, [r3, #0]
}
 800399e:	bf00      	nop
 80039a0:	370c      	adds	r7, #12
 80039a2:	46bd      	mov	sp, r7
 80039a4:	bc80      	pop	{r7}
 80039a6:	4770      	bx	lr

080039a8 <bitmap_pos_count>:

uint32_t bitmap_pos_count(void)
{
 80039a8:	b480      	push	{r7}
 80039aa:	af00      	add	r7, sp, #0
    return 32;
 80039ac:	2320      	movs	r3, #32
}
 80039ae:	4618      	mov	r0, r3
 80039b0:	46bd      	mov	sp, r7
 80039b2:	bc80      	pop	{r7}
 80039b4:	4770      	bx	lr

080039b6 <bitmap_set_bit>:
void bitmap_set_bit(bitmap_t *bitmap, uint32_t pos)
{
 80039b6:	b480      	push	{r7}
 80039b8:	b083      	sub	sp, #12
 80039ba:	af00      	add	r7, sp, #0
 80039bc:	6078      	str	r0, [r7, #4]
 80039be:	6039      	str	r1, [r7, #0]
    bitmap->bitmap |= 1 << pos;
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	2101      	movs	r1, #1
 80039c6:	683a      	ldr	r2, [r7, #0]
 80039c8:	fa01 f202 	lsl.w	r2, r1, r2
 80039cc:	431a      	orrs	r2, r3
 80039ce:	687b      	ldr	r3, [r7, #4]
 80039d0:	601a      	str	r2, [r3, #0]
}
 80039d2:	bf00      	nop
 80039d4:	370c      	adds	r7, #12
 80039d6:	46bd      	mov	sp, r7
 80039d8:	bc80      	pop	{r7}
 80039da:	4770      	bx	lr

080039dc <bitmap_clear_bit>:
void bitmap_clear_bit(bitmap_t *bitmap, uint32_t pos)
{
 80039dc:	b480      	push	{r7}
 80039de:	b083      	sub	sp, #12
 80039e0:	af00      	add	r7, sp, #0
 80039e2:	6078      	str	r0, [r7, #4]
 80039e4:	6039      	str	r1, [r7, #0]
    bitmap->bitmap &= ~(1 << pos);
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	2101      	movs	r1, #1
 80039ec:	683a      	ldr	r2, [r7, #0]
 80039ee:	fa01 f202 	lsl.w	r2, r1, r2
 80039f2:	43d2      	mvns	r2, r2
 80039f4:	401a      	ands	r2, r3
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	601a      	str	r2, [r3, #0]
}
 80039fa:	bf00      	nop
 80039fc:	370c      	adds	r7, #12
 80039fe:	46bd      	mov	sp, r7
 8003a00:	bc80      	pop	{r7}
 8003a02:	4770      	bx	lr

08003a04 <bitmap_get_first>:

uint32_t bitmap_get_first(bitmap_t *bitmap)
{
 8003a04:	b580      	push	{r7, lr}
 8003a06:	b082      	sub	sp, #8
 8003a08:	af00      	add	r7, sp, #0
 8003a0a:	6078      	str	r0, [r7, #4]
	    /* D0 */ 4,    0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
	    /* E0 */ 5,    0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
	    /* F0 */ 4,    0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0
	};

	if (bitmap->bitmap & 0xff)
 8003a0c:	687b      	ldr	r3, [r7, #4]
 8003a0e:	681b      	ldr	r3, [r3, #0]
 8003a10:	b2db      	uxtb	r3, r3
 8003a12:	2b00      	cmp	r3, #0
 8003a14:	d005      	beq.n	8003a22 <bitmap_get_first+0x1e>
    {
        return quick_find_table[bitmap->bitmap & 0xff];         
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	681b      	ldr	r3, [r3, #0]
 8003a1a:	b2db      	uxtb	r3, r3
 8003a1c:	4a19      	ldr	r2, [pc, #100]	; (8003a84 <bitmap_get_first+0x80>)
 8003a1e:	5cd3      	ldrb	r3, [r2, r3]
 8003a20:	e02b      	b.n	8003a7a <bitmap_get_first+0x76>
    }
    else if (bitmap->bitmap & 0xff00)
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	681b      	ldr	r3, [r3, #0]
 8003a26:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8003a2a:	2b00      	cmp	r3, #0
 8003a2c:	d007      	beq.n	8003a3e <bitmap_get_first+0x3a>
    {
        return quick_find_table[(bitmap->bitmap >> 8) & 0xff] + 8;        
 8003a2e:	687b      	ldr	r3, [r7, #4]
 8003a30:	681b      	ldr	r3, [r3, #0]
 8003a32:	0a1b      	lsrs	r3, r3, #8
 8003a34:	b2db      	uxtb	r3, r3
 8003a36:	4a13      	ldr	r2, [pc, #76]	; (8003a84 <bitmap_get_first+0x80>)
 8003a38:	5cd3      	ldrb	r3, [r2, r3]
 8003a3a:	3308      	adds	r3, #8
 8003a3c:	e01d      	b.n	8003a7a <bitmap_get_first+0x76>
    }
    else if (bitmap->bitmap & 0xff0000)
 8003a3e:	687b      	ldr	r3, [r7, #4]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8003a46:	2b00      	cmp	r3, #0
 8003a48:	d007      	beq.n	8003a5a <bitmap_get_first+0x56>
    {
        return quick_find_table[(bitmap->bitmap >> 16) & 0xff] + 16;        
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	0c1b      	lsrs	r3, r3, #16
 8003a50:	b2db      	uxtb	r3, r3
 8003a52:	4a0c      	ldr	r2, [pc, #48]	; (8003a84 <bitmap_get_first+0x80>)
 8003a54:	5cd3      	ldrb	r3, [r2, r3]
 8003a56:	3310      	adds	r3, #16
 8003a58:	e00f      	b.n	8003a7a <bitmap_get_first+0x76>
    }
    else if (bitmap->bitmap & 0xFF000000)
 8003a5a:	687b      	ldr	r3, [r7, #4]
 8003a5c:	681b      	ldr	r3, [r3, #0]
 8003a5e:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d006      	beq.n	8003a74 <bitmap_get_first+0x70>
    {
        return quick_find_table[(bitmap->bitmap >> 24) & 0xFF] + 24;
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	0e1b      	lsrs	r3, r3, #24
 8003a6c:	4a05      	ldr	r2, [pc, #20]	; (8003a84 <bitmap_get_first+0x80>)
 8003a6e:	5cd3      	ldrb	r3, [r2, r3]
 8003a70:	3318      	adds	r3, #24
 8003a72:	e002      	b.n	8003a7a <bitmap_get_first+0x76>
    }
    else
    {
        return bitmap_pos_count();
 8003a74:	f7ff ff98 	bl	80039a8 <bitmap_pos_count>
 8003a78:	4603      	mov	r3, r0
    }
}
 8003a7a:	4618      	mov	r0, r3
 8003a7c:	3708      	adds	r7, #8
 8003a7e:	46bd      	mov	sp, r7
 8003a80:	bd80      	pop	{r7, pc}
 8003a82:	bf00      	nop
 8003a84:	08003fa8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, fp, ip, sp}

08003a88 <node_init>:
#include "list.h"
#define first_node   head_node.next_node
#define last_node    head_node.prev_node

void node_init (node_t * node)
{
 8003a88:	b480      	push	{r7}
 8003a8a:	b083      	sub	sp, #12
 8003a8c:	af00      	add	r7, sp, #0
 8003a8e:	6078      	str	r0, [r7, #4]
    node->next_node = node;
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	687a      	ldr	r2, [r7, #4]
 8003a94:	605a      	str	r2, [r3, #4]
    node->prev_node = node;
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	687a      	ldr	r2, [r7, #4]
 8003a9a:	601a      	str	r2, [r3, #0]
}
 8003a9c:	bf00      	nop
 8003a9e:	370c      	adds	r7, #12
 8003aa0:	46bd      	mov	sp, r7
 8003aa2:	bc80      	pop	{r7}
 8003aa4:	4770      	bx	lr

08003aa6 <list_init>:
void list_init (list_t * list)
{
 8003aa6:	b480      	push	{r7}
 8003aa8:	b083      	sub	sp, #12
 8003aaa:	af00      	add	r7, sp, #0
 8003aac:	6078      	str	r0, [r7, #4]
	list->first_node = &(list->head_node);
 8003aae:	687a      	ldr	r2, [r7, #4]
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	605a      	str	r2, [r3, #4]
    list->last_node = &(list->head_node);
 8003ab4:	687a      	ldr	r2, [r7, #4]
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	601a      	str	r2, [r3, #0]
    list->node_count = 0;
 8003aba:	687b      	ldr	r3, [r7, #4]
 8003abc:	2200      	movs	r2, #0
 8003abe:	609a      	str	r2, [r3, #8]
}
 8003ac0:	bf00      	nop
 8003ac2:	370c      	adds	r7, #12
 8003ac4:	46bd      	mov	sp, r7
 8003ac6:	bc80      	pop	{r7}
 8003ac8:	4770      	bx	lr

08003aca <list_count>:

uint32_t list_count (list_t * list)
{
 8003aca:	b480      	push	{r7}
 8003acc:	b083      	sub	sp, #12
 8003ace:	af00      	add	r7, sp, #0
 8003ad0:	6078      	str	r0, [r7, #4]
    return list->node_count;
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	689b      	ldr	r3, [r3, #8]
}
 8003ad6:	4618      	mov	r0, r3
 8003ad8:	370c      	adds	r7, #12
 8003ada:	46bd      	mov	sp, r7
 8003adc:	bc80      	pop	{r7}
 8003ade:	4770      	bx	lr

08003ae0 <list_first>:

uint32_t list_first (list_t * list)
{
 8003ae0:	b480      	push	{r7}
 8003ae2:	b085      	sub	sp, #20
 8003ae4:	af00      	add	r7, sp, #0
 8003ae6:	6078      	str	r0, [r7, #4]
    node_t *node = (node_t*)0;
 8003ae8:	2300      	movs	r3, #0
 8003aea:	60fb      	str	r3, [r7, #12]

    if (list->node_count != 0) {
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	689b      	ldr	r3, [r3, #8]
 8003af0:	2b00      	cmp	r3, #0
 8003af2:	d002      	beq.n	8003afa <list_first+0x1a>
        node = list->first_node;
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	685b      	ldr	r3, [r3, #4]
 8003af8:	60fb      	str	r3, [r7, #12]
    }

    return node;
 8003afa:	68fb      	ldr	r3, [r7, #12]
}
 8003afc:	4618      	mov	r0, r3
 8003afe:	3714      	adds	r7, #20
 8003b00:	46bd      	mov	sp, r7
 8003b02:	bc80      	pop	{r7}
 8003b04:	4770      	bx	lr

08003b06 <list_add_last>:
    list->first_node->prev_node = node;
    list->first_node = node;
    list->node_count++;    
}
void list_add_last (list_t * list, node_t * node)
{
 8003b06:	b480      	push	{r7}
 8003b08:	b083      	sub	sp, #12
 8003b0a:	af00      	add	r7, sp, #0
 8003b0c:	6078      	str	r0, [r7, #4]
 8003b0e:	6039      	str	r1, [r7, #0]
	node->next_node = &(list->head_node);
 8003b10:	687a      	ldr	r2, [r7, #4]
 8003b12:	683b      	ldr	r3, [r7, #0]
 8003b14:	605a      	str	r2, [r3, #4]
    node->prev_node = list->last_node;
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681a      	ldr	r2, [r3, #0]
 8003b1a:	683b      	ldr	r3, [r7, #0]
 8003b1c:	601a      	str	r2, [r3, #0]

    list->last_node->next_node = node;
 8003b1e:	687b      	ldr	r3, [r7, #4]
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	683a      	ldr	r2, [r7, #0]
 8003b24:	605a      	str	r2, [r3, #4]
    list->last_node = node;
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	683a      	ldr	r2, [r7, #0]
 8003b2a:	601a      	str	r2, [r3, #0]
    list->node_count++;
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	689b      	ldr	r3, [r3, #8]
 8003b30:	1c5a      	adds	r2, r3, #1
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	609a      	str	r2, [r3, #8]
}
 8003b36:	bf00      	nop
 8003b38:	370c      	adds	r7, #12
 8003b3a:	46bd      	mov	sp, r7
 8003b3c:	bc80      	pop	{r7}
 8003b3e:	4770      	bx	lr

08003b40 <list_remove_first>:
node_t * list_remove_first (list_t * list)
{
 8003b40:	b480      	push	{r7}
 8003b42:	b085      	sub	sp, #20
 8003b44:	af00      	add	r7, sp, #0
 8003b46:	6078      	str	r0, [r7, #4]
    node_t * node = (node_t *)0;
 8003b48:	2300      	movs	r3, #0
 8003b4a:	60fb      	str	r3, [r7, #12]

	if( list->node_count != 0 )
 8003b4c:	687b      	ldr	r3, [r7, #4]
 8003b4e:	689b      	ldr	r3, [r3, #8]
 8003b50:	2b00      	cmp	r3, #0
 8003b52:	d00f      	beq.n	8003b74 <list_remove_first+0x34>
    {
        node = list->first_node;
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	685b      	ldr	r3, [r3, #4]
 8003b58:	60fb      	str	r3, [r7, #12]

        node->next_node->prev_node = &(list->head_node);
 8003b5a:	68fb      	ldr	r3, [r7, #12]
 8003b5c:	685b      	ldr	r3, [r3, #4]
 8003b5e:	687a      	ldr	r2, [r7, #4]
 8003b60:	601a      	str	r2, [r3, #0]
        list->first_node = node->next_node;
 8003b62:	68fb      	ldr	r3, [r7, #12]
 8003b64:	685a      	ldr	r2, [r3, #4]
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	605a      	str	r2, [r3, #4]
        list->node_count--;
 8003b6a:	687b      	ldr	r3, [r7, #4]
 8003b6c:	689b      	ldr	r3, [r3, #8]
 8003b6e:	1e5a      	subs	r2, r3, #1
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	609a      	str	r2, [r3, #8]
    }
    return  node;
 8003b74:	68fb      	ldr	r3, [r7, #12]
}
 8003b76:	4618      	mov	r0, r3
 8003b78:	3714      	adds	r7, #20
 8003b7a:	46bd      	mov	sp, r7
 8003b7c:	bc80      	pop	{r7}
 8003b7e:	4770      	bx	lr

08003b80 <list_remove>:
    node_after->next_node = node_to_insert;

    list->node_count++;
}
void list_remove (list_t * list, node_t * node)
{
 8003b80:	b480      	push	{r7}
 8003b82:	b083      	sub	sp, #12
 8003b84:	af00      	add	r7, sp, #0
 8003b86:	6078      	str	r0, [r7, #4]
 8003b88:	6039      	str	r1, [r7, #0]
    node->prev_node->next_node = node->next_node;
 8003b8a:	683b      	ldr	r3, [r7, #0]
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	683a      	ldr	r2, [r7, #0]
 8003b90:	6852      	ldr	r2, [r2, #4]
 8003b92:	605a      	str	r2, [r3, #4]
    node->next_node->prev_node = node->prev_node;
 8003b94:	683b      	ldr	r3, [r7, #0]
 8003b96:	685b      	ldr	r3, [r3, #4]
 8003b98:	683a      	ldr	r2, [r7, #0]
 8003b9a:	6812      	ldr	r2, [r2, #0]
 8003b9c:	601a      	str	r2, [r3, #0]
    list->node_count--;
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	689b      	ldr	r3, [r3, #8]
 8003ba2:	1e5a      	subs	r2, r3, #1
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	609a      	str	r2, [r3, #8]
 8003ba8:	bf00      	nop
 8003baa:	370c      	adds	r7, #12
 8003bac:	46bd      	mov	sp, r7
 8003bae:	bc80      	pop	{r7}
 8003bb0:	4770      	bx	lr
	...

08003bb4 <HardFault_Handler_C>:
//set *((uint32_t*)0xE000EDFC) |= 0x0000400;

// Disable optimizations for this function so "frame" argument
// does not get optimized away
__attribute__((optimize("O0")))
void HardFault_Handler_C(sCrashInfo *sCrashInfo) {
 8003bb4:	b480      	push	{r7}
 8003bb6:	b087      	sub	sp, #28
 8003bb8:	af00      	add	r7, sp, #0
 8003bba:	6078      	str	r0, [r7, #4]
    sContextStateFrame *frame = &sCrashInfo->frame;
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	3304      	adds	r3, #4
 8003bc0:	617b      	str	r3, [r7, #20]

  // If and only if a debugger is attached, execute a breakpoint
  // instruction so we can take a look at what triggered the fault
  HALT_IF_DEBUGGING();
 8003bc2:	4b26      	ldr	r3, [pc, #152]	; (8003c5c <HardFault_Handler_C+0xa8>)
 8003bc4:	681b      	ldr	r3, [r3, #0]
 8003bc6:	f003 0301 	and.w	r3, r3, #1
 8003bca:	2b00      	cmp	r3, #0
 8003bcc:	d000      	beq.n	8003bd0 <HardFault_Handler_C+0x1c>
 8003bce:	be01      	bkpt	0x0001

  //
  // Example "recovery" mechanism for UsageFaults while not running
  // in an ISR
  // 
  const uint32_t usage_fault_mask = 0xffff0000;
 8003bd0:	4b23      	ldr	r3, [pc, #140]	; (8003c60 <HardFault_Handler_C+0xac>)
 8003bd2:	613b      	str	r3, [r7, #16]
  const bool non_usage_fault_occurred = (SCB->CFSR & ~usage_fault_mask) != 0;
 8003bd4:	4b23      	ldr	r3, [pc, #140]	; (8003c64 <HardFault_Handler_C+0xb0>)
 8003bd6:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003bd8:	693b      	ldr	r3, [r7, #16]
 8003bda:	43db      	mvns	r3, r3
 8003bdc:	4013      	ands	r3, r2
 8003bde:	2b00      	cmp	r3, #0
 8003be0:	bf14      	ite	ne
 8003be2:	2301      	movne	r3, #1
 8003be4:	2300      	moveq	r3, #0
 8003be6:	73fb      	strb	r3, [r7, #15]
  // the bottom 8 bits of the xpsr hold the exception number of the
  // executing exception or 0 if the processor is in Thread mode
  const bool faulted_from_exception = ((frame->xpsr & 0xFF) != 0);
 8003be8:	697b      	ldr	r3, [r7, #20]
 8003bea:	69db      	ldr	r3, [r3, #28]
 8003bec:	b2db      	uxtb	r3, r3
 8003bee:	2b00      	cmp	r3, #0
 8003bf0:	bf14      	ite	ne
 8003bf2:	2301      	movne	r3, #1
 8003bf4:	2300      	moveq	r3, #0
 8003bf6:	73bb      	strb	r3, [r7, #14]

  if (faulted_from_exception || non_usage_fault_occurred) {
 8003bf8:	7bbb      	ldrb	r3, [r7, #14]
 8003bfa:	2b00      	cmp	r3, #0
 8003bfc:	d102      	bne.n	8003c04 <HardFault_Handler_C+0x50>
 8003bfe:	7bfb      	ldrb	r3, [r7, #15]
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d000      	beq.n	8003c06 <HardFault_Handler_C+0x52>
    // For any fault within an ISR or non-usage faults
    // let's reboot the system
    // SCB->AIRCR = (0x05FA << 16) | SCB_AIRCR_SYSRESETREQ_Msk;
    while (1) { } // should be unreachable
 8003c04:	e7fe      	b.n	8003c04 <HardFault_Handler_C+0x50>
  }
  extern void recover_from_task_fault(void);
  // If it's just a usage fault, let's "recover"
  // Clear any logged faults from the CFSR
  SCB->CFSR |= SCB->CFSR;
 8003c06:	4b17      	ldr	r3, [pc, #92]	; (8003c64 <HardFault_Handler_C+0xb0>)
 8003c08:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8003c0a:	4b16      	ldr	r3, [pc, #88]	; (8003c64 <HardFault_Handler_C+0xb0>)
 8003c0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003c0e:	4915      	ldr	r1, [pc, #84]	; (8003c64 <HardFault_Handler_C+0xb0>)
 8003c10:	4313      	orrs	r3, r2
 8003c12:	628b      	str	r3, [r1, #40]	; 0x28
  // the instruction we will return to when we exit from the exception
  frame->pc = (uint32_t)recover_from_task_fault;
 8003c14:	4a14      	ldr	r2, [pc, #80]	; (8003c68 <HardFault_Handler_C+0xb4>)
 8003c16:	697b      	ldr	r3, [r7, #20]
 8003c18:	619a      	str	r2, [r3, #24]
  // the function we are returning to should never branch
  // so set lr to a pattern that would fault if it did
  frame->lr = 0xdeadbeef;
 8003c1a:	697b      	ldr	r3, [r7, #20]
 8003c1c:	2200      	movs	r2, #0
 8003c1e:	f062 0210 	orn	r2, r2, #16
 8003c22:	751a      	strb	r2, [r3, #20]
 8003c24:	2200      	movs	r2, #0
 8003c26:	f062 0241 	orn	r2, r2, #65	; 0x41
 8003c2a:	755a      	strb	r2, [r3, #21]
 8003c2c:	2200      	movs	r2, #0
 8003c2e:	f062 0252 	orn	r2, r2, #82	; 0x52
 8003c32:	759a      	strb	r2, [r3, #22]
 8003c34:	2200      	movs	r2, #0
 8003c36:	f062 0221 	orn	r2, r2, #33	; 0x21
 8003c3a:	75da      	strb	r2, [r3, #23]
  // reset the psr state and only leave the
  // "thumb instruction interworking" bit set
  frame->xpsr = (1 << 24);
 8003c3c:	697b      	ldr	r3, [r7, #20]
 8003c3e:	2200      	movs	r2, #0
 8003c40:	771a      	strb	r2, [r3, #28]
 8003c42:	2200      	movs	r2, #0
 8003c44:	775a      	strb	r2, [r3, #29]
 8003c46:	2200      	movs	r2, #0
 8003c48:	779a      	strb	r2, [r3, #30]
 8003c4a:	2200      	movs	r2, #0
 8003c4c:	f042 0201 	orr.w	r2, r2, #1
 8003c50:	77da      	strb	r2, [r3, #31]
}
 8003c52:	bf00      	nop
 8003c54:	371c      	adds	r7, #28
 8003c56:	46bd      	mov	sp, r7
 8003c58:	bc80      	pop	{r7}
 8003c5a:	4770      	bx	lr
 8003c5c:	e000edf0 	strd	lr, [r0], -r0
 8003c60:	ffff0000 			; <UNDEFINED> instruction: 0xffff0000
 8003c64:	e000ed00 	and	lr, r0, r0, lsl #26
 8003c68:	08003dd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, sp}

08003c6c <HardFault_Handler>:
/* The prototype shows it is a naked function - in effect this is just an
assembly function. */
__attribute__((naked))
void HardFault_Handler(void)
{
  HARDFAULT_HANDLING_ASM();
 8003c6c:	f3ef 8310 	mrs	r3, PRIMASK
 8003c70:	b672      	cpsid	i
 8003c72:	491a      	ldr	r1, [pc, #104]	; (8003cdc <HardFault_Handler+0x70>)
 8003c74:	4a1a      	ldr	r2, [pc, #104]	; (8003ce0 <HardFault_Handler+0x74>)
 8003c76:	600a      	str	r2, [r1, #0]
 8003c78:	f101 0104 	add.w	r1, r1, #4
 8003c7c:	4674      	mov	r4, lr
 8003c7e:	f01e 0f04 	tst.w	lr, #4
 8003c82:	bf0c      	ite	eq
 8003c84:	f3ef 8008 	mrseq	r0, MSP
 8003c88:	f3ef 8009 	mrsne	r0, PSP
 8003c8c:	6802      	ldr	r2, [r0, #0]
 8003c8e:	600a      	str	r2, [r1, #0]
 8003c90:	6842      	ldr	r2, [r0, #4]
 8003c92:	604a      	str	r2, [r1, #4]
 8003c94:	6882      	ldr	r2, [r0, #8]
 8003c96:	608a      	str	r2, [r1, #8]
 8003c98:	68c2      	ldr	r2, [r0, #12]
 8003c9a:	60ca      	str	r2, [r1, #12]
 8003c9c:	6902      	ldr	r2, [r0, #16]
 8003c9e:	610a      	str	r2, [r1, #16]
 8003ca0:	6942      	ldr	r2, [r0, #20]
 8003ca2:	614a      	str	r2, [r1, #20]
 8003ca4:	6982      	ldr	r2, [r0, #24]
 8003ca6:	618a      	str	r2, [r1, #24]
 8003ca8:	69c2      	ldr	r2, [r0, #28]
 8003caa:	61ca      	str	r2, [r1, #28]
 8003cac:	f101 011c 	add.w	r1, r1, #28
 8003cb0:	e8a1 0ff0 	stmia.w	r1!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003cb4:	f3ef 8209 	mrs	r2, PSP
 8003cb8:	600a      	str	r2, [r1, #0]
 8003cba:	f3ef 8208 	mrs	r2, MSP
 8003cbe:	604a      	str	r2, [r1, #4]
 8003cc0:	f3ef 8214 	mrs	r2, CONTROL
 8003cc4:	608a      	str	r2, [r1, #8]
 8003cc6:	f3ef 8211 	mrs	r2, BASEPRI
 8003cca:	60ca      	str	r2, [r1, #12]
 8003ccc:	610b      	str	r3, [r1, #16]
 8003cce:	f3ef 8213 	mrs	r2, FAULTMASK
 8003cd2:	614a      	str	r2, [r1, #20]
 8003cd4:	4801      	ldr	r0, [pc, #4]	; (8003cdc <HardFault_Handler+0x70>)
 8003cd6:	f7ff bf6d 	b.w	8003bb4 <HardFault_Handler_C>
}
 8003cda:	bf00      	nop
 8003cdc:	2000043c 	andcs	r0, r0, ip, lsr r4
 8003ce0:	dead55aa 	cdple	5, 10, cr5, cr13, cr10, {5}

08003ce4 <BusFault_Handler>:
void MemoryManagement_Handler(void) {
  HARDFAULT_HANDLING_ASM();
}
__attribute__((naked))
void BusFault_Handler(void) {
  HARDFAULT_HANDLING_ASM();
 8003ce4:	f3ef 8310 	mrs	r3, PRIMASK
 8003ce8:	b672      	cpsid	i
 8003cea:	491a      	ldr	r1, [pc, #104]	; (8003d54 <BusFault_Handler+0x70>)
 8003cec:	4a1a      	ldr	r2, [pc, #104]	; (8003d58 <BusFault_Handler+0x74>)
 8003cee:	600a      	str	r2, [r1, #0]
 8003cf0:	f101 0104 	add.w	r1, r1, #4
 8003cf4:	4674      	mov	r4, lr
 8003cf6:	f01e 0f04 	tst.w	lr, #4
 8003cfa:	bf0c      	ite	eq
 8003cfc:	f3ef 8008 	mrseq	r0, MSP
 8003d00:	f3ef 8009 	mrsne	r0, PSP
 8003d04:	6802      	ldr	r2, [r0, #0]
 8003d06:	600a      	str	r2, [r1, #0]
 8003d08:	6842      	ldr	r2, [r0, #4]
 8003d0a:	604a      	str	r2, [r1, #4]
 8003d0c:	6882      	ldr	r2, [r0, #8]
 8003d0e:	608a      	str	r2, [r1, #8]
 8003d10:	68c2      	ldr	r2, [r0, #12]
 8003d12:	60ca      	str	r2, [r1, #12]
 8003d14:	6902      	ldr	r2, [r0, #16]
 8003d16:	610a      	str	r2, [r1, #16]
 8003d18:	6942      	ldr	r2, [r0, #20]
 8003d1a:	614a      	str	r2, [r1, #20]
 8003d1c:	6982      	ldr	r2, [r0, #24]
 8003d1e:	618a      	str	r2, [r1, #24]
 8003d20:	69c2      	ldr	r2, [r0, #28]
 8003d22:	61ca      	str	r2, [r1, #28]
 8003d24:	f101 011c 	add.w	r1, r1, #28
 8003d28:	e8a1 0ff0 	stmia.w	r1!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003d2c:	f3ef 8209 	mrs	r2, PSP
 8003d30:	600a      	str	r2, [r1, #0]
 8003d32:	f3ef 8208 	mrs	r2, MSP
 8003d36:	604a      	str	r2, [r1, #4]
 8003d38:	f3ef 8214 	mrs	r2, CONTROL
 8003d3c:	608a      	str	r2, [r1, #8]
 8003d3e:	f3ef 8211 	mrs	r2, BASEPRI
 8003d42:	60ca      	str	r2, [r1, #12]
 8003d44:	610b      	str	r3, [r1, #16]
 8003d46:	f3ef 8213 	mrs	r2, FAULTMASK
 8003d4a:	614a      	str	r2, [r1, #20]
 8003d4c:	4801      	ldr	r0, [pc, #4]	; (8003d54 <BusFault_Handler+0x70>)
 8003d4e:	f7ff bf31 	b.w	8003bb4 <HardFault_Handler_C>
}
 8003d52:	bf00      	nop
 8003d54:	2000043c 	andcs	r0, r0, ip, lsr r4
 8003d58:	dead55aa 	cdple	5, 10, cr5, cr13, cr10, {5}

08003d5c <UsageFault_Handler>:
__attribute__((naked))
void UsageFault_Handler(void) {
  HARDFAULT_HANDLING_ASM();
 8003d5c:	f3ef 8310 	mrs	r3, PRIMASK
 8003d60:	b672      	cpsid	i
 8003d62:	491a      	ldr	r1, [pc, #104]	; (8003dcc <UsageFault_Handler+0x70>)
 8003d64:	4a1a      	ldr	r2, [pc, #104]	; (8003dd0 <UsageFault_Handler+0x74>)
 8003d66:	600a      	str	r2, [r1, #0]
 8003d68:	f101 0104 	add.w	r1, r1, #4
 8003d6c:	4674      	mov	r4, lr
 8003d6e:	f01e 0f04 	tst.w	lr, #4
 8003d72:	bf0c      	ite	eq
 8003d74:	f3ef 8008 	mrseq	r0, MSP
 8003d78:	f3ef 8009 	mrsne	r0, PSP
 8003d7c:	6802      	ldr	r2, [r0, #0]
 8003d7e:	600a      	str	r2, [r1, #0]
 8003d80:	6842      	ldr	r2, [r0, #4]
 8003d82:	604a      	str	r2, [r1, #4]
 8003d84:	6882      	ldr	r2, [r0, #8]
 8003d86:	608a      	str	r2, [r1, #8]
 8003d88:	68c2      	ldr	r2, [r0, #12]
 8003d8a:	60ca      	str	r2, [r1, #12]
 8003d8c:	6902      	ldr	r2, [r0, #16]
 8003d8e:	610a      	str	r2, [r1, #16]
 8003d90:	6942      	ldr	r2, [r0, #20]
 8003d92:	614a      	str	r2, [r1, #20]
 8003d94:	6982      	ldr	r2, [r0, #24]
 8003d96:	618a      	str	r2, [r1, #24]
 8003d98:	69c2      	ldr	r2, [r0, #28]
 8003d9a:	61ca      	str	r2, [r1, #28]
 8003d9c:	f101 011c 	add.w	r1, r1, #28
 8003da0:	e8a1 0ff0 	stmia.w	r1!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8003da4:	f3ef 8209 	mrs	r2, PSP
 8003da8:	600a      	str	r2, [r1, #0]
 8003daa:	f3ef 8208 	mrs	r2, MSP
 8003dae:	604a      	str	r2, [r1, #4]
 8003db0:	f3ef 8214 	mrs	r2, CONTROL
 8003db4:	608a      	str	r2, [r1, #8]
 8003db6:	f3ef 8211 	mrs	r2, BASEPRI
 8003dba:	60ca      	str	r2, [r1, #12]
 8003dbc:	610b      	str	r3, [r1, #16]
 8003dbe:	f3ef 8213 	mrs	r2, FAULTMASK
 8003dc2:	614a      	str	r2, [r1, #20]
 8003dc4:	4801      	ldr	r0, [pc, #4]	; (8003dcc <UsageFault_Handler+0x70>)
 8003dc6:	f7ff bef5 	b.w	8003bb4 <HardFault_Handler_C>
}
 8003dca:	bf00      	nop
 8003dcc:	2000043c 	andcs	r0, r0, ip, lsr r4
 8003dd0:	dead55aa 	cdple	5, 10, cr5, cr13, cr10, {5}

08003dd4 <recover_from_task_fault>:
    default:
      break;
  }
}
void recover_from_task_fault(void) 
{
 8003dd4:	b480      	push	{r7}
 8003dd6:	af00      	add	r7, sp, #0
  while (1) {
 8003dd8:	e7fe      	b.n	8003dd8 <recover_from_task_fault+0x4>
	...

08003ddc <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8003ddc:	f8df d00c 	ldr.w	sp, [pc, #12]	; 8003dec <Reset_Handler+0x10>
LoopFillZerobss:
  cmp r2, r4
  bcc FillZerobss
*/
/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8003de0:	f7fd f9d2 	bl	8001188 <SystemInit>
/* Call static constructors */
    # bl __libc_init_array
/* Call the application's entry point.*/
  bl  main
 8003de4:	f7fd f888 	bl	8000ef8 <main>
  bx  lr    
 8003de8:	4770      	bx	lr
 8003dea:	00000000 	andeq	r0, r0, r0
  ldr   sp, =_estack     /* set stack pointer */
 8003dee:	 	ldrb	r2, [lr, r2]!

08003df0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003df0:	e7fe      	b.n	8003df0 <ADC_IRQHandler>
  bkpt 1
 8003df2:	be01      	bkpt	0x0001

08003df4 <PendSV_Handler>:

.section .text.pendsv_handler,"ax",%progbits
.type PendSV_Handler, %function

PendSV_Handler:
mrs r0, psp
 8003df4:	f3ef 8009 	mrs	r0, PSP
cbz r0, PendSVHandler_nosave
 8003df8:	b120      	cbz	r0, 8003e04 <PendSVHandler_nosave>

stmdb r0!,{r4-r11}
 8003dfa:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}

ldr r1,  =current_task
 8003dfe:	4907      	ldr	r1, [pc, #28]	; (8003e1c <PendSVHandler_nosave+0x18>)
ldr r1, [r1] 
 8003e00:	6809      	ldr	r1, [r1, #0]
str r0, [r1] //把sp保存在task堆栈里
 8003e02:	6008      	str	r0, [r1, #0]

08003e04 <PendSVHandler_nosave>:

PendSVHandler_nosave:
ldr r0,=current_task
 8003e04:	4805      	ldr	r0, [pc, #20]	; (8003e1c <PendSVHandler_nosave+0x18>)
ldr r1,=next_task
 8003e06:	4906      	ldr	r1, [pc, #24]	; (8003e20 <PendSVHandler_nosave+0x1c>)
ldr r2,[r1]
 8003e08:	680a      	ldr	r2, [r1, #0]
str r2,[r0]
 8003e0a:	6002      	str	r2, [r0, #0]

ldr   r0, [r2]
 8003e0c:	6810      	ldr	r0, [r2, #0]
ldmia R0!,{r4-r11}
 8003e0e:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
msr psp, r0
 8003e12:	f380 8809 	msr	PSP, r0
orr lr,lr,#0x04
 8003e16:	f04e 0e04 	orr.w	lr, lr, #4
bx lr
 8003e1a:	4770      	bx	lr
ldr r1,  =current_task
 8003e1c:	20000600 	andcs	r0, r0, r0, lsl #12
ldr r1,=next_task
 8003e20:	20000654 	andcs	r0, r0, r4, asr r6

08003e24 <register_fini>:
 8003e24:	4b02      	ldr	r3, [pc, #8]	; (8003e30 <register_fini+0xc>)
 8003e26:	b113      	cbz	r3, 8003e2e <register_fini+0xa>
 8003e28:	4802      	ldr	r0, [pc, #8]	; (8003e34 <register_fini+0x10>)
 8003e2a:	f7fd b811 	b.w	8000e50 <atexit>
 8003e2e:	4770      	bx	lr
 8003e30:	00000000 	andeq	r0, r0, r0
 8003e34:	08000e5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, sl, fp}

08003e38 <_init>:
 8003e38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e3a:	bf00      	nop
 8003e3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003e3e:	bc08      	pop	{r3}
 8003e40:	469e      	mov	lr, r3
 8003e42:	4770      	bx	lr

08003e44 <_fini>:
 8003e44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e46:	bf00      	nop
 8003e48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003e4a:	bc08      	pop	{r3}
 8003e4c:	469e      	mov	lr, r3
 8003e4e:	4770      	bx	lr

Disassembly of section .rodata:

08003e50 <_global_impure_ptr-0xb4>:
 8003e50:	706c6568 	rsbvc	r6, ip, r8, ror #10
 8003e54:	00000000 	andeq	r0, r0, r0
 8003e58:	776f6873 			; <UNDEFINED> instruction: 0x776f6873
 8003e5c:	6c6c6120 	stfvse	f6, [ip], #-128	; 0xffffff80
 8003e60:	6d6f6320 	stclvs	3, cr6, [pc, #-128]!	; 8003de8 <Reset_Handler+0xc>
 8003e64:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
 8003e68:	00000073 	andeq	r0, r0, r3, ror r0
 8003e6c:	2d200d0a 	stccs	13, cr0, [r0, #-40]!	; 0xffffffd8
 8003e70:	4155202d 	cmpmi	r5, sp, lsr #32
 8003e74:	50205452 	eorpl	r5, r0, r2, asr r4
 8003e78:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 8003e7c:	78452066 	stmdavc	r5, {r1, r2, r5, r6, sp}^
 8003e80:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
 8003e84:	72203a65 	eorvc	r3, r0, #413696	; 0x65000
 8003e88:	72617465 	rsbvc	r7, r1, #1694498816	; 0x65000000
 8003e8c:	20746567 	rsbscs	r6, r4, r7, ror #10
 8003e90:	20656874 	rsbcs	r6, r5, r4, ror r8
 8003e94:	696c2043 	stmdbvs	ip!, {r0, r1, r6, sp}^
 8003e98:	72617262 	rsbvc	r7, r1, #536870918	; 0x20000006
 8003e9c:	72702079 	rsbsvc	r2, r0, #121	; 0x79
 8003ea0:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
 8003ea4:	6e756620 	cdpvs	6, 7, cr6, cr5, cr0, {1}
 8003ea8:	6f697463 	svcvs	0x00697463
 8003eac:	6f74206e 	svcvs	0x0074206e
 8003eb0:	65687420 	strbvs	r7, [r8, #-1056]!	; 0xfffffbe0
 8003eb4:	52415520 	subpl	r5, r1, #32, 10	; 0x8000000
 8003eb8:	25202c54 	strcs	r2, [r0, #-3156]!	; 0xfffff3ac
 8003ebc:	000d0a64 	andeq	r0, sp, r4, ror #20
 8003ec0:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
 8003ec4:	00000a20 	andeq	r0, r0, r0, lsr #20
 8003ec8:	006e616e 	rsbeq	r6, lr, lr, ror #2
 8003ecc:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
 8003ed0:	00000000 	andeq	r0, r0, r0
 8003ed4:	2b696e66 	blcs	9a5f874 <_siccmram+0x1a5b298>
 8003ed8:	00000000 	andeq	r0, r0, r0
 8003edc:	00696e66 	rsbeq	r6, r9, r6, ror #28
 8003ee0:	3530255b 	ldrcc	r2, [r0, #-1371]!	; 0xfffffaa5
 8003ee4:	54205d64 	strtpl	r5, [r0], #-3428	; 0xfffff29c
 8003ee8:	20736968 	rsbscs	r6, r3, r8, ror #18
 8003eec:	25207369 	strcs	r7, [r0, #-873]!	; 0xfffffc97
 8003ef0:	73202e73 			; <UNDEFINED> instruction: 0x73202e73
 8003ef4:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
 8003ef8:	756f635f 	strbvc	r6, [pc, #-863]!	; 8003ba1 <list_remove+0x21>
 8003efc:	253d746e 	ldrcs	r7, [sp, #-1134]!	; 0xfffffb92
 8003f00:	00000a64 	andeq	r0, r0, r4, ror #20

08003f04 <_global_impure_ptr>:
 8003f04:	20000008 	andcs	r0, r0, r8

08003f08 <__func__.10911>:
 8003f08:	5f435653 	svcpl	0x00435653
 8003f0c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 8003f10:	0072656c 	rsbseq	r6, r2, ip, ror #10

08003f14 <APBPrescTable>:
const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 8003f14:	00000000 	andeq	r0, r0, r0
 8003f18:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff

08003f1c <flagBitshiftOffset.9744>:
 8003f1c:	16100600 	ldrne	r0, [r0], -r0, lsl #12
 8003f20:	16100600 	ldrne	r0, [r0], -r0, lsl #12
 8003f24:	00000000 	andeq	r0, r0, r0

08003f28 <pow10.3845>:
 8003f28:	00000000 	andeq	r0, r0, r0
 8003f2c:	3ff00000 	svccc	0x00f00000	; IMB
 8003f30:	00000000 	andeq	r0, r0, r0
 8003f34:	40240000 	eormi	r0, r4, r0
 8003f38:	00000000 	andeq	r0, r0, r0
 8003f3c:	40590000 	subsmi	r0, r9, r0
 8003f40:	00000000 	andeq	r0, r0, r0
 8003f44:	408f4000 	addmi	r4, pc, r0
 8003f48:	00000000 	andeq	r0, r0, r0
 8003f4c:	40c38800 	sbcmi	r8, r3, r0, lsl #16
 8003f50:	00000000 	andeq	r0, r0, r0
 8003f54:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
 8003f58:	00000000 	andeq	r0, r0, r0
 8003f5c:	412e8480 	smlawbmi	lr, r0, r4, r8
 8003f60:	00000000 	andeq	r0, r0, r0
 8003f64:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
 8003f68:	00000000 	andeq	r0, r0, r0
 8003f6c:	4197d784 	orrsmi	sp, r7, r4, lsl #15
 8003f70:	00000000 	andeq	r0, r0, r0
 8003f74:	41cdcd65 	bicmi	ip, sp, r5, ror #26

08003f78 <__func__.6927>:
 8003f78:	6b736174 	blvs	9cdc550 <_siccmram+0x1cd7f74>
 8003f7c:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
 8003f80:	315f7972 	cmpcc	pc, r2, ror r9	; <UNPREDICTABLE>
 8003f84:	00000000 	andeq	r0, r0, r0

08003f88 <__func__.6933>:
 8003f88:	6b736174 	blvs	9cdc560 <_siccmram+0x1cd7f84>
 8003f8c:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
 8003f90:	325f7972 	subscc	r7, pc, #1867776	; 0x1c8000
 8003f94:	00000000 	andeq	r0, r0, r0

08003f98 <__func__.6939>:
 8003f98:	6b736174 	blvs	9cdc570 <_siccmram+0x1cd7f94>
 8003f9c:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
 8003fa0:	335f7972 	cmpcc	pc, #1867776	; 0x1c8000
 8003fa4:	00000000 	andeq	r0, r0, r0

08003fa8 <quick_find_table.3720>:
 8003fa8:	000100ff 	strdeq	r0, [r1], -pc	; <UNPREDICTABLE>
 8003fac:	00010002 	andeq	r0, r1, r2
 8003fb0:	00010003 	andeq	r0, r1, r3
 8003fb4:	00010002 	andeq	r0, r1, r2
 8003fb8:	00010004 	andeq	r0, r1, r4
 8003fbc:	00010002 	andeq	r0, r1, r2
 8003fc0:	00010003 	andeq	r0, r1, r3
 8003fc4:	00010002 	andeq	r0, r1, r2
 8003fc8:	00010005 	andeq	r0, r1, r5
 8003fcc:	00010002 	andeq	r0, r1, r2
 8003fd0:	00010003 	andeq	r0, r1, r3
 8003fd4:	00010002 	andeq	r0, r1, r2
 8003fd8:	00010004 	andeq	r0, r1, r4
 8003fdc:	00010002 	andeq	r0, r1, r2
 8003fe0:	00010003 	andeq	r0, r1, r3
 8003fe4:	00010002 	andeq	r0, r1, r2
 8003fe8:	00010006 	andeq	r0, r1, r6
 8003fec:	00010002 	andeq	r0, r1, r2
 8003ff0:	00010003 	andeq	r0, r1, r3
 8003ff4:	00010002 	andeq	r0, r1, r2
 8003ff8:	00010004 	andeq	r0, r1, r4
 8003ffc:	00010002 	andeq	r0, r1, r2
 8004000:	00010003 	andeq	r0, r1, r3
 8004004:	00010002 	andeq	r0, r1, r2
 8004008:	00010005 	andeq	r0, r1, r5
 800400c:	00010002 	andeq	r0, r1, r2
 8004010:	00010003 	andeq	r0, r1, r3
 8004014:	00010002 	andeq	r0, r1, r2
 8004018:	00010004 	andeq	r0, r1, r4
 800401c:	00010002 	andeq	r0, r1, r2
 8004020:	00010003 	andeq	r0, r1, r3
 8004024:	00010002 	andeq	r0, r1, r2
 8004028:	00010007 	andeq	r0, r1, r7
 800402c:	00010002 	andeq	r0, r1, r2
 8004030:	00010003 	andeq	r0, r1, r3
 8004034:	00010002 	andeq	r0, r1, r2
 8004038:	00010004 	andeq	r0, r1, r4
 800403c:	00010002 	andeq	r0, r1, r2
 8004040:	00010003 	andeq	r0, r1, r3
 8004044:	00010002 	andeq	r0, r1, r2
 8004048:	00010005 	andeq	r0, r1, r5
 800404c:	00010002 	andeq	r0, r1, r2
 8004050:	00010003 	andeq	r0, r1, r3
 8004054:	00010002 	andeq	r0, r1, r2
 8004058:	00010004 	andeq	r0, r1, r4
 800405c:	00010002 	andeq	r0, r1, r2
 8004060:	00010003 	andeq	r0, r1, r3
 8004064:	00010002 	andeq	r0, r1, r2
 8004068:	00010006 	andeq	r0, r1, r6
 800406c:	00010002 	andeq	r0, r1, r2
 8004070:	00010003 	andeq	r0, r1, r3
 8004074:	00010002 	andeq	r0, r1, r2
 8004078:	00010004 	andeq	r0, r1, r4
 800407c:	00010002 	andeq	r0, r1, r2
 8004080:	00010003 	andeq	r0, r1, r3
 8004084:	00010002 	andeq	r0, r1, r2
 8004088:	00010005 	andeq	r0, r1, r5
 800408c:	00010002 	andeq	r0, r1, r2
 8004090:	00010003 	andeq	r0, r1, r3
 8004094:	00010002 	andeq	r0, r1, r2
 8004098:	00010004 	andeq	r0, r1, r4
 800409c:	00010002 	andeq	r0, r1, r2
 80040a0:	00010003 	andeq	r0, r1, r3
 80040a4:	00010002 	andeq	r0, r1, r2

Disassembly of section .ARM:

080040a8 <__exidx_start>:
 80040a8:	7fffcad4 	svcvc	0x00ffcad4
 80040ac:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

080040b0 <__init_array_start>:
 80040b0:	08003e25 	stmdaeq	r0, {r0, r2, r5, r9, sl, fp, ip, sp}

080040b4 <__frame_dummy_init_array_entry>:
 80040b4:	080001f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8}

Disassembly of section .fini_array:

080040b8 <__do_global_dtors_aux_fini_array_entry>:
 80040b8:	080001c9 	stmdaeq	r0, {r0, r3, r6, r7, r8}

Disassembly of section .data:

20000000 <_impure_ptr>:
20000000:	20000008 	andcs	r0, r0, r8
20000004:	00000000 	andeq	r0, r0, r0

20000008 <impure_data>:
20000008:	00000000 	andeq	r0, r0, r0
2000000c:	200002f4 	strdcs	r0, [r0], -r4
20000010:	2000035c 	andcs	r0, r0, ip, asr r3
20000014:	200003c4 	andcs	r0, r0, r4, asr #7
	...
200000b0:	00000001 	andeq	r0, r0, r1
200000b4:	00000000 	andeq	r0, r0, r0
200000b8:	abcd330e 	blge	1f34ccf8 <_eccmram+0xf34ccf8>
200000bc:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
200000c0:	0005deec 	andeq	sp, r5, ip, ror #29
200000c4:	0000000b 	andeq	r0, r0, fp
	...

20000430 <SystemCoreClock>:
__attribute__((weak)) uint32_t SystemCoreClock = 24000000;
20000430:	00f42400 	rscseq	r2, r4, r0, lsl #8

20000434 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000434:	00000010 	andeq	r0, r0, r0, lsl r0

20000438 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000438:	00000001 	andeq	r0, r0, r1

2000043c <last_crash_info>:
	...

Disassembly of section .bss:

20000520 <__bss_start__>:
20000520:	00000000 	andeq	r0, r0, r0

20000524 <object.6713>:
	...

2000053c <hdma_tx.10893>:
	...

2000059c <hdma_rx.10894>:
	...

200005fc <is_scheduler_ready>:
bool is_scheduler_ready = false;
200005fc:	00000000 	andeq	r0, r0, r0

20000600 <current_task>:
task_t *current_task = NULL;
20000600:	00000000 	andeq	r0, r0, r0

20000604 <tick_counter>:
uint32_t tick_counter = 0;
20000604:	00000000 	andeq	r0, r0, r0

20000608 <UartHandle>:
	...

2000064c <uwTick>:
__IO uint32_t uwTick;
2000064c:	00000000 	andeq	r0, r0, r0

20000650 <sched_lock_count>:
uint8_t sched_lock_count;
20000650:	00000000 	andeq	r0, r0, r0

20000654 <next_task>:
task_t *next_task;
20000654:	00000000 	andeq	r0, r0, r0

20000658 <task2_flag>:
int task2_flag;
20000658:	00000000 	andeq	r0, r0, r0

2000065c <task_idle>:
	...

20000680 <task1_env>:
	...

20001680 <task1_flag>:
int task1_flag;
20001680:	00000000 	andeq	r0, r0, r0

20001684 <task3_flag>:
int task3_flag;
20001684:	00000000 	andeq	r0, r0, r0

20001688 <task1>:
	...

200016ac <task2_env>:
	...

200026ac <task2>:
	...

200026d0 <first_set>:
int first_set;
200026d0:	00000000 	andeq	r0, r0, r0

200026d4 <share_count>:
int share_count;
200026d4:	00000000 	andeq	r0, r0, r0

200026d8 <idle_task>:
task_t *idle_task;
200026d8:	00000000 	andeq	r0, r0, r0

200026dc <task_delay_list>:
	...

200026e8 <task_priority_bitmap>:
bitmap_t task_priority_bitmap;
200026e8:	00000000 	andeq	r0, r0, r0

200026ec <task3_env>:
	...

200036ec <idletask_env>:
	...

200046ec <task_table>:
	...

2000486c <task3>:
	...

Disassembly of section ._user_heap_stack:

20004890 <_sheap>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
  * @note   This functiona is called from HAL_PPP_DeInit() function to perform 
  *         peripheral(PPP) system level de-initialization (GPIOs, clock, DMA, interrupt)
  * @retval None
  */
void HAL_PPP_MspDeInit(void)
{
   0:	00002941 	andeq	r2, r0, r1, asr #18

}
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
  char ch;
  /* Place your implementation of fputc here */
  /* e.g. write a character to the EVAL_COM1 and Loop until the end of transmission */
  // HAL_UART_Receive(&UartHandle, (uint8_t *)&ch, 1, 0xFFFF); 
  ch = *(volatile unsigned char*)(USART_DR_ADDR);
  return ch;
   c:	0000001f 	andeq	r0, r0, pc, lsl r0
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
int fctprintf(void (*out)(char character, void* arg), void* arg, const char* format, ...)
{
  va_list va;
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	011a0118 	tsteq	sl, r8, lsl r1
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
{
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
}
   4:	35312820 	ldrcc	r2, [r1, #-2080]!	; 0xfffff7e0
   8:	322d383a 	eorcc	r3, sp, #3801088	; 0x3a0000
  return ch;
   c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
  10:	312d3371 			; <UNDEFINED> instruction: 0x312d3371
  14:	2931622b 	ldmdbcs	r1!, {r0, r1, r3, r5, r9, sp, lr}
  18:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
  1c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  20:	30393130 	eorscc	r3, r9, r0, lsr r1
  24:	20333037 	eorscs	r3, r3, r7, lsr r0
  28:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  2c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  va_end(va);
  return ret;
  30:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
}
  34:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
  38:	6172622d 	cmnvs	r2, sp, lsr #4
  3c:	2068636e 	rsbcs	r6, r8, lr, ror #6
  40:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    list->node_count = 0;
  44:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  48:	33373220 	teqcc	r7, #32, 4
}
  4c:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
  50:	43434700 	movtmi	r4, #14080	; 0x3700
}
  54:	3128203a 			; <UNDEFINED> instruction: 0x3128203a
  HAL_DMA_DeInit(&hdma_rx);
  
  /*##-4- Disable the NVIC for DMA ###########################################*/
  HAL_NVIC_DisableIRQ(USARTx_DMA_TX_IRQn);
  HAL_NVIC_DisableIRQ(USARTx_DMA_RX_IRQn);
}
  58:	2d383a35 	vldmdbcs	r8!, {s6-s58}
  5c:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}

void Irq0_Handler(void) {
  HARDFAULT_HANDLING_ASM();
  60:	2d33712d 	ldfcss	f7, [r3, #-180]!	; 0xffffff4c
  64:	38202931 	stmdacc	r0!, {r0, r4, r5, r8, fp, sp}
  68:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
  6c:	31303220 	teqcc	r0, r0, lsr #4
  70:	30373039 	eorscc	r3, r7, r9, lsr r0
}
  74:	72282033 	eorvc	r2, r8, #51	; 0x33
  78:	61656c65 	cmnvs	r5, r5, ror #24
  7c:	20296573 	eorcs	r6, r9, r3, ror r5
  80:	6363675b 	cmnvs	r3, #23855104	; 0x16c0000
  else
  {
    MPU->RBAR = 0x00U;
    MPU->RASR = 0x00U;
  }
}
  84:	622d382d 	eorvs	r3, sp, #2949120	; 0x2d0000
  trigger_irq();
  88:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
}
  8c:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
  90:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
  94:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
  98:	32303337 	eorscc	r3, r0, #-603979776	; 0xdc000000
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  9c:	Address 0x000000000000009c is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
{
       0:	00000e2c 	andeq	r0, r0, ip, lsr #28
}
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
  return ch;
       c:	00000447 	andeq	r0, r0, r7, asr #8
      10:	0003130c 	andeq	r1, r3, ip, lsl #6
      14:	0001be00 	andeq	fp, r1, r0, lsl #28
	...
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
      24:	06010200 	streq	r0, [r1], -r0, lsl #4
      28:	000007a9 	andeq	r0, r0, r9, lsr #15
      2c:	00050202 	andeq	r0, r5, r2, lsl #4
  return ret;
      30:	03000000 	movweq	r0, #0
}
      34:	00002c12 	andeq	r2, r0, r2, lsl ip
      38:	44182802 	ldrmi	r2, [r8], #-2050	; 0xfffff7fe
      3c:	04000000 	streq	r0, [r0], #-0
      40:	00000033 	andeq	r0, r0, r3, lsr r0
    list->node_count = 0;
      44:	b5050402 	strlt	r0, [r5, #-1026]	; 0xfffffbfe
      48:	02000001 	andeq	r0, r0, #1
}
      4c:	01b00508 	lslseq	r0, r8, #10
      50:	ca030000 	bgt	c0058 <_Min_Stack_Size+0xbfc58>
      54:	0200002a 	andeq	r0, r0, #42	; 0x2a
      58:	0063182e 	rsbeq	r1, r3, lr, lsr #16
      5c:	52050000 	andpl	r0, r5, #0
  HARDFAULT_HANDLING_ASM();
      60:	02000000 	andeq	r0, r0, #0
      64:	07a70801 	streq	r0, [r7, r1, lsl #16]!
      68:	02020000 	andeq	r0, r2, #0
      6c:	00037707 	andeq	r7, r3, r7, lsl #14
      70:	2b6e0300 	blcs	1b80c78 <_Min_Stack_Size+0x1b80878>
}
      74:	34020000 	strcc	r0, [r2], #-0
      78:	00008219 	andeq	r8, r0, r9, lsl r2
      7c:	00710400 	rsbseq	r0, r1, r0, lsl #8
      80:	04020000 	streq	r0, [r2], #-0
      84:	0000a507 	andeq	sl, r0, r7, lsl #10
  trigger_irq();
      88:	07080200 	streq	r0, [r8, -r0, lsl #4]
}
      8c:	000000a0 	andeq	r0, r0, r0, lsr #1
      90:	69050406 	stmdbvs	r5, {r1, r2, sl}
      94:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
      98:	00aa0704 	adceq	r0, sl, r4, lsl #14
      9c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    Error_Handler();
      a0:	00071904 	andeq	r1, r7, r4, lsl #18
}
      a4:	03e00700 	mvneq	r0, #0, 14
      a8:	65030000 	strvs	r0, [r3, #-0]
      ac:	00971701 	addseq	r1, r7, r1, lsl #14
      b0:	62030000 	andvs	r0, r3, #0

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      SystemCoreClock = pllvco/pllp;
      break;
    default:
      SystemCoreClock = HSI_VALUE;
      b4:	04000005 	streq	r0, [r0], #-5
      break;
      b8:	00440e2e 	subeq	r0, r4, lr, lsr #28
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
      bc:	fb030000 	blx	c00c6 <_Min_Stack_Size+0xbfcc6>
      c0:	04000006 	streq	r0, [r0], #-6
      c4:	00440e74 	subeq	r0, r4, r4, ror lr
      c8:	04080000 	streq	r0, [r8], #-0
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
      cc:	ec03a504 	cfstr32	mvfx10, [r3], {4}
      d0:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
      d4:	000003da 	ldrdeq	r0, [r0], -sl
}
      d8:	a50ca704 	strge	sl, [ip, #-1796]	; 0xfffff8fc
      dc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
      e0:	000002ec 	andeq	r0, r0, ip, ror #5
      e4:	ec13a804 	ldc	8, cr10, [r3], {4}
      e8:	00000000 	andeq	r0, r0, r0
      ec:	0000630a 	andeq	r6, r0, sl, lsl #6
      f0:	0000fc00 	andeq	pc, r0, r0, lsl #24
      f4:	00970b00 	addseq	r0, r7, r0, lsl #22
        EXTI->IMR &= ~((uint32_t)iocurrent);
        EXTI->EMR &= ~((uint32_t)iocurrent);
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
        EXTI->FTSR &= ~((uint32_t)iocurrent);
      f8:	00030000 	andeq	r0, r3, r0
      fc:	a204080c 	andge	r0, r4, #12, 16	; 0xc0000
     100:	00012009 	andeq	r2, r1, r9

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
     104:	06e30d00 	strbteq	r0, [r3], r0, lsl #26
     108:	a4040000 	strge	r0, [r4], #-0
     10c:	00009007 	andeq	r9, r0, r7
     110:	0d0d0000 	stceq	0, cr0, [sp, #-0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     114:	04000008 	streq	r0, [r0], #-8
     118:	00ca05a9 	sbceq	r0, sl, r9, lsr #11
     11c:	00040000 	andeq	r0, r4, r0
     120:	00066d03 	andeq	r6, r6, r3, lsl #26
     124:	03aa0400 			; <UNDEFINED> instruction: 0x03aa0400
     128:	000000fc 	strdeq	r0, [r0], -ip
     12c:	c303040e 	movwgt	r0, #13326	; 0x340e
     130:	05000007 	streq	r0, [r0, #-7]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
     134:	00821916 	addeq	r1, r2, r6, lsl r9
     138:	cb030000 	blgt	c0140 <_Min_Stack_Size+0xbfd40>
     13c:	06000005 	streq	r0, [r0], -r5
     140:	00900d0c 	addseq	r0, r0, ip, lsl #26
     144:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
     148:	05000008 	streq	r0, [r0, #-8]
     14c:	013a1b23 	teqeq	sl, r3, lsr #22
     150:	9b0f0000 	blls	3c0158 <_Min_Stack_Size+0x3bfd58>
     154:	18000002 	stmdane	r0, {r1}
     158:	ac083405 	cfstrsge	mvf3, [r8], {5}
     15c:	0d000001 	stceq	0, cr0, [r0, #-4]
     160:	0000067d 	andeq	r0, r0, sp, ror r6
     164:	ac133605 	ldcge	6, cr3, [r3], {5}
     168:	00000001 	andeq	r0, r0, r1
     16c:	006b5f10 	rsbeq	r5, fp, r0, lsl pc
     170:	90073705 	andls	r3, r7, r5, lsl #14

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
     174:	04000000 	streq	r0, [r0], #-0
     178:	0006c40d 	andeq	ip, r6, sp, lsl #8
     17c:	0b370500 	bleq	dc1584 <_Min_Stack_Size+0xdc1184>
     180:	00000090 	muleq	r0, r0, r0
     184:	028d0d08 	addeq	r0, sp, #8, 26	; 0x200

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
     188:	37050000 	strcc	r0, [r5, -r0]
     18c:	00009014 	andeq	r9, r0, r4, lsl r0
     190:	9a0d0c00 	bls	343198 <_Min_Stack_Size+0x342d98>
     194:	05000001 	streq	r0, [r0, #-1]
     198:	00901b37 	addseq	r1, r0, r7, lsr fp

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
     19c:	10100000 	andsne	r0, r0, r0
     1a0:	0500785f 	streq	r7, [r0, #-2143]	; 0xfffff7a1
     1a4:	01b20b38 			; <UNDEFINED> instruction: 0x01b20b38
     1a8:	00140000 	andseq	r0, r4, r0
     1ac:	01520411 	cmpeq	r2, r1, lsl r4
     1b0:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
  for(position = 0U; position < GPIO_NUMBER; position++)
     1b4:	c2000001 	andgt	r0, r0, #1
     1b8:	0b000001 	bleq	1c4 <_Min_Heap_Size-0x3c>
     1bc:	00000097 	muleq	r0, r7, r0
    }
  }
}
     1c0:	d50f0000 	strle	r0, [pc, #-0]	; 1c8 <_Min_Heap_Size-0x38>
     1c4:	24000002 	strcs	r0, [r0], #-2
     1c8:	45083c05 	strmi	r3, [r8, #-3077]	; 0xfffff3fb
     1cc:	0d000002 	stceq	0, cr0, [r0, #-8]
     1d0:	00000108 	andeq	r0, r0, r8, lsl #2
     1d4:	90093e05 	andls	r3, r9, r5, lsl #28
     1d8:	00000000 	andeq	r0, r0, r0
     1dc:	0007b50d 	andeq	fp, r7, sp, lsl #10
     1e0:	093f0500 	ldmdbeq	pc!, {r8, sl}	; <UNPREDICTABLE>
     1e4:	00000090 	muleq	r0, r0, r0
     1e8:	01390d04 	teqeq	r9, r4, lsl #26
     1ec:	40050000 	andmi	r0, r5, r0
     1f0:	00009009 	andeq	r9, r0, r9
                res += _strlen(s);
                //返回值长度增加
                break;
            case 'c':
                _putchar((char)va_arg(ap, int)); //大家猜为什么不写char，而要写int
                res += 1;
     1f4:	ca0d0800 	bgt	3421fc <_Min_Stack_Size+0x341dfc>
     1f8:	05000008 	streq	r0, [r0, #-8]

                break;
            default:;
            }
            break;
     1fc:	00900941 	addseq	r0, r0, r1, asr #18
        case '\n':
            _putchar('\n');
     200:	0d0c0000 	stceq	0, cr0, [ip, #-0]
            res += 1;
     204:	00000538 	andeq	r0, r0, r8, lsr r5
     208:	90094205 	andls	r4, r9, r5, lsl #4
            break;
        case '\r':
            _putchar('\r');
     20c:	10000000 	andne	r0, r0, r0
     210:	0004210d 	andeq	r2, r4, sp, lsl #2
            res += 1;
     214:	09430500 	stmdbeq	r3, {r8, sl}^
            break;
     218:	00000090 	muleq	r0, r0, r0
        default: //显示原来的第一个参数的字符串(不是..里的参数o)
            _putchar(*str);
     21c:	07f60d14 			; <UNDEFINED> instruction: 0x07f60d14
     220:	44050000 	strmi	r0, [r5], #-0
            res += 1;
     224:	00009009 	andeq	r9, r0, r9
     228:	400d1800 	andmi	r1, sp, r0, lsl #16
            break;
     22c:	05000006 	streq	r0, [r0, #-6]
        }

        str++;
     230:	00900945 	addseq	r0, r0, r5, asr #18
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
     234:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
     238:	0000088c 	andeq	r0, r0, ip, lsl #17
     23c:	90094605 	andls	r4, r9, r5, lsl #12
    }
    va_end(ap);
    return res;
}
     240:	20000000 	andcs	r0, r0, r0
     244:	01481200 	mrseq	r1, (UNDEF: 104)
     248:	01080000 	mrseq	r0, (UNDEF: 8)
     24c:	8a084f05 	bhi	213e68 <_Min_Stack_Size+0x213a68>
     250:	0d000002 	stceq	0, cr0, [r0, #-8]
            hdma->XferCpltCallback(hdma);
     254:	0000026d 	andeq	r0, r0, sp, ror #4
     258:	8a0a5005 	bhi	294274 <_Min_Stack_Size+0x293e74>
     25c:	00000002 	andeq	r0, r0, r2
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
     260:	0005fe0d 	andeq	pc, r5, sp, lsl #28
     264:	09510500 	ldmdbeq	r1, {r8, sl}^
     268:	0000028a 	andeq	r0, r0, sl, lsl #5
     26c:	07961380 	ldreq	r1, [r6, r0, lsl #7]
          hdma->Instance->CR  &= ~(DMA_IT_TC);
     270:	53050000 	movwpl	r0, #20480	; 0x5000
     274:	00012e0a 	andeq	r2, r1, sl, lsl #28
     278:	13010000 	movwne	r0, #4096	; 0x1000
     27c:	00000192 	muleq	r0, r2, r1
          __HAL_UNLOCK(hdma);
     280:	2e0a5605 	cfmadd32cs	mvax0, mvfx5, mvfx10, mvfx5
     284:	04000001 	streq	r0, [r0], #-1
          hdma->State = HAL_DMA_STATE_READY;
     288:	2c0a0001 	stccs	0, cr0, [sl], {1}
     28c:	9a000001 	bls	298 <_Min_Heap_Size+0x98>
        if(hdma->XferCpltCallback != NULL)
     290:	0b000002 	bleq	2a0 <_Min_Heap_Size+0xa0>
     294:	00000097 	muleq	r0, r7, r0
          hdma->XferCpltCallback(hdma);
     298:	7612001f 			; <UNDEFINED> instruction: 0x7612001f
     29c:	9000004a 	andls	r0, r0, sl, asr #32
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
     2a0:	08620501 	stmdaeq	r2!, {r0, r8, sl}^
     2a4:	000002dd 	ldrdeq	r0, [r0], -sp
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
     2a8:	00067d0d 	andeq	r7, r6, sp, lsl #26
     2ac:	12630500 	rsbne	r0, r3, #0, 10
     2b0:	000002dd 	ldrdeq	r0, [r0], -sp
      hdma->State = HAL_DMA_STATE_ABORT;
     2b4:	068e0d00 	streq	r0, [lr], r0, lsl #26
     2b8:	64050000 	strvs	r0, [r5], #-0
      __HAL_DMA_DISABLE(hdma);
     2bc:	00009006 	andeq	r9, r0, r6
     2c0:	880d0400 	stmdahi	sp, {sl}
     2c4:	05000002 	streq	r0, [r0, #-2]
     2c8:	02e30966 	rsceq	r0, r3, #1671168	; 0x198000
        if (++count > timeout)
     2cc:	0d080000 	stceq	0, cr0, [r8, #-0]
     2d0:	00000148 	andeq	r0, r0, r8, asr #2
     2d4:	451e6705 	ldrmi	r6, [lr, #-1797]	; 0xfffff8fb
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
     2d8:	88000002 	stmdahi	r0, {r1}
     2dc:	9a041100 	bls	1046e4 <_Min_Stack_Size+0x1042e4>
     2e0:	0a000002 	beq	2f0 <_Min_Heap_Size+0xf0>
     2e4:	000002f3 	strdeq	r0, [r0], -r3
      __HAL_UNLOCK(hdma);
     2e8:	000002f3 	strdeq	r0, [r0], -r3
     2ec:	0000970b 	andeq	r9, r0, fp, lsl #14
      hdma->State = HAL_DMA_STATE_READY;
     2f0:	11001f00 	tstne	r0, r0, lsl #30
     2f4:	0002f904 	andeq	pc, r2, r4, lsl #18
    if(hdma->XferErrorCallback != NULL)
     2f8:	4a0f1400 	bmi	3c5300 <_Min_Stack_Size+0x3c4f00>
     2fc:	08000006 	stmdaeq	r0, {r1, r2}
      hdma->XferErrorCallback(hdma);
     300:	22087a05 	andcs	r7, r8, #20480	; 0x5000
     304:	0d000003 	stceq	0, cr0, [r0, #-12]
     308:	00000133 	andeq	r0, r0, r3, lsr r1
}
     30c:	22117b05 	andscs	r7, r1, #5120	; 0x1400
     310:	00000003 	andeq	r0, r0, r3
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
     314:	00072e0d 	andeq	r2, r7, sp, lsl #28
     318:	067c0500 	ldrbteq	r0, [ip], -r0, lsl #10
     31c:	00000090 	muleq	r0, r0, r0
    UART_Transmit_IT(huart);
     320:	04110004 	ldreq	r0, [r1], #-4
    return;
     324:	00000063 	andeq	r0, r0, r3, rrx
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
     328:	0000280f 	andeq	r2, r0, pc, lsl #16
     32c:	ba056800 	blt	15a334 <_Min_Stack_Size+0x159f34>
     330:	00046b08 	andeq	r6, r4, r8, lsl #22
     334:	705f1000 	subsvc	r1, pc, r0
     338:	12bb0500 	adcsne	r0, fp, #0, 10
    UART_EndTransmit_IT(huart);
     33c:	00000322 	andeq	r0, r0, r2, lsr #6
    return;
     340:	725f1000 	subsvc	r1, pc, #0
    return;
     344:	07bc0500 	ldreq	r0, [ip, r0, lsl #10]!
      return;
     348:	00000090 	muleq	r0, r0, r0
      return;
     34c:	775f1004 	ldrbvc	r1, [pc, -r4]
}
     350:	07bd0500 	ldreq	r0, [sp, r0, lsl #10]!
     354:	00000090 	muleq	r0, r0, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     358:	018b0d08 	orreq	r0, fp, r8, lsl #26
     35c:	be050000 	cdplt	0, 0, cr0, cr5, cr0, {0}
      tickstart = HAL_GetTick();
     360:	00002c09 	andeq	r2, r0, r9, lsl #24
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     364:	0d0d0c00 	stceq	12, cr0, [sp, #-0]
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     368:	05000003 	streq	r0, [r0, #-3]
     36c:	002c09bf 	strhteq	r0, [ip], -pc
     370:	100e0000 	andne	r0, lr, r0
     374:	0066625f 	rsbeq	r6, r6, pc, asr r2
          return HAL_TIMEOUT;
     378:	fa11c005 	blx	470394 <_Min_Stack_Size+0x46ff94>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     37c:	10000002 	andne	r0, r0, r2
     380:	0000b70d 	andeq	fp, r0, sp, lsl #14
     384:	07c10500 	strbeq	r0, [r1, r0, lsl #10]
    if(pwrclkchanged == SET)
     388:	00000090 	muleq	r0, r0, r0
     38c:	01690d18 	cmneq	r9, r8, lsl sp
      __HAL_RCC_PWR_CLK_DISABLE();
     390:	c8050000 	stmdagt	r5, {}	; <UNPREDICTABLE>
     394:	00012c0a 	andeq	r2, r1, sl, lsl #24
     398:	bd0d1c00 	stclt	12, cr1, [sp, #-0]
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     39c:	05000033 	streq	r0, [r0, #-51]	; 0xffffffcd
     3a0:	05ef1dca 	strbeq	r1, [pc, #3530]!	; 1172 <_Min_Stack_Size+0xd72>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     3a4:	0d200000 	stceq	0, cr0, [r0, #-0]
     3a8:	00003336 	andeq	r3, r0, r6, lsr r3
     3ac:	191dcc05 	ldmdbne	sp, {r0, r2, sl, fp, lr, pc}
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     3b0:	24000006 	strcs	r0, [r0], #-6
     3b4:	0006eb0d 	andeq	lr, r6, sp, lsl #22
        __HAL_RCC_PLL_DISABLE();
     3b8:	0dcf0500 	cfstr64eq	mvdx0, [pc]	; 3c0 <_Min_Heap_Size+0x1c0>
     3bc:	0000063d 	andeq	r0, r0, sp, lsr r6
        tickstart = HAL_GetTick();
     3c0:	08a60d28 	stmiaeq	r6!, {r3, r5, r8, sl, fp}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3c4:	d0050000 	andle	r0, r5, r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3c8:	00065709 	andeq	r5, r6, r9, lsl #14
     3cc:	5f102c00 	svcpl	0x00102c00
     3d0:	05006275 	streq	r6, [r0, #-629]	; 0xfffffd8b
            return HAL_TIMEOUT;
     3d4:	02fa11d3 	rscseq	r1, sl, #-1073741772	; 0xc0000034
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3d8:	10300000 	eorsne	r0, r0, r0
     3dc:	0070755f 	rsbseq	r7, r0, pc, asr r5
     3e0:	2212d405 	andscs	sp, r2, #83886080	; 0x5000000
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     3e4:	38000003 	stmdacc	r0, {r0, r1}
     3e8:	72755f10 	rsbsvc	r5, r5, #16, 30	; 0x40
     3ec:	07d50500 	ldrbeq	r0, [r5, r0, lsl #10]
     3f0:	00000090 	muleq	r0, r0, r0
     3f4:	012d0d3c 			; <UNDEFINED> instruction: 0x012d0d3c
     3f8:	d8050000 	stmdale	r5, {}	; <UNPREDICTABLE>
     3fc:	00065d11 	andeq	r5, r6, r1, lsl sp
     400:	760d4000 	strvc	r4, [sp], -r0
     404:	05000008 	streq	r0, [r0, #-8]
     408:	066d11d9 			; <UNDEFINED> instruction: 0x066d11d9
     40c:	10430000 	subne	r0, r3, r0
        __HAL_RCC_PLL_ENABLE();
     410:	00626c5f 	rsbeq	r6, r2, pc, asr ip
        tickstart = HAL_GetTick();
     414:	fa11dc05 	blx	477430 <_Min_Stack_Size+0x477030>
     418:	44000002 	strmi	r0, [r0], #-2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     41c:	0007250d 	andeq	r2, r7, sp, lsl #10
     420:	07df0500 	ldrbeq	r0, [pc, r0, lsl #10]
     424:	00000090 	muleq	r0, r0, r0
     428:	04380d4c 	ldrteq	r0, [r8], #-3404	; 0xfffff2b4
            return HAL_TIMEOUT;
     42c:	e0050000 	and	r0, r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     430:	0000b20a 	andeq	fp, r0, sl, lsl #4
     434:	aa0d5000 	bge	35443c <_Min_Stack_Size+0x35403c>
     438:	0500004b 	streq	r0, [r0, #-75]	; 0xffffffb5
        __HAL_RCC_PLL_DISABLE();
     43c:	048912e3 	streq	r1, [r9], #739	; 0x2e3
     440:	0d540000 	ldcleq	0, cr0, [r4, #-0]
        tickstart = HAL_GetTick();
     444:	000003f1 	strdeq	r0, [r0], -r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     448:	460ce705 	strmi	lr, [ip], -r5, lsl #14
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     44c:	58000001 	stmdapl	r0, {r0}
     450:	0002e30d 	andeq	lr, r2, sp, lsl #6
     454:	0ee90500 	cdpeq	5, 14, cr0, cr9, cr0, {0}
            return HAL_TIMEOUT;
     458:	00000120 	andeq	r0, r0, r0, lsr #2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	06510d5c 			; <UNDEFINED> instruction: 0x06510d5c
     460:	ea050000 	b	140468 <_Min_Stack_Size+0x140068>
     464:	00009009 	andeq	r9, r0, r9
     468:	15006400 	strne	r6, [r0, #-1024]	; 0xfffffc00
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     46c:	00000090 	muleq	r0, r0, r0
     470:	00000489 	andeq	r0, r0, r9, lsl #9
        return HAL_ERROR;
     474:	00048916 	andeq	r8, r4, r6, lsl r9
        pll_config = RCC->PLLCFGR;
     478:	012c1600 			; <UNDEFINED> instruction: 0x012c1600
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     47c:	dd160000 	ldcle	0, cr0, [r6, #-0]
     480:	16000005 	strne	r0, [r0], -r5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     484:	00000090 	muleq	r0, r0, r0
     488:	94041100 	strls	r1, [r4], #-256	; 0xffffff00
     48c:	05000004 	streq	r0, [r0, #-4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     490:	00000489 	andeq	r0, r0, r9, lsl #9
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     494:	0006cc17 	andeq	ip, r6, r7, lsl ip
     498:	05042800 	streq	r2, [r4, #-2048]	; 0xfffff800
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     49c:	dd080265 	sfmle	f0, 4, [r8, #-404]	; 0xfffffe6c
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4a0:	18000005 	stmdane	r0, {r0, r2}
     4a4:	0000062c 	andeq	r0, r0, ip, lsr #12
     4a8:	07026705 	streq	r6, [r2, -r5, lsl #14]
     4ac:	00000090 	muleq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     4b0:	08061800 	stmdaeq	r6, {fp, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b4:	6c050000 	stcvs	0, cr0, [r5], {-0}
     4b8:	06c90b02 	strbeq	r0, [r9], r2, lsl #22
     4bc:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     4c0:	000007ee 	andeq	r0, r0, lr, ror #15
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4c4:	14026c05 	strne	r6, [r2], #-3077	; 0xfffff3fb
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4c8:	000006c9 	andeq	r0, r0, r9, asr #13
     4cc:	02931808 	addseq	r1, r3, #8, 16	; 0x80000
     4d0:	6c050000 	stcvs	0, cr0, [r5], {-0}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4d4:	06c91e02 	strbeq	r1, [r9], r2, lsl #28
          return HAL_ERROR;
     4d8:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
}
     4dc:	00000689 	andeq	r0, r0, r9, lsl #13
     4e0:	08026e05 	stmdaeq	r2, {r0, r2, r9, sl, fp, sp, lr}
     4e4:	00000090 	muleq	r0, r0, r0
     4e8:	00421810 	subeq	r1, r2, r0, lsl r8
     4ec:	6f050000 	svcvs	0x00050000
     4f0:	08c90802 	stmiaeq	r9, {r1, fp}^
     4f4:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
     4f8:	000006ab 	andeq	r0, r0, fp, lsr #13
     4fc:	07027205 	streq	r7, [r2, -r5, lsl #4]
     500:	00000090 	muleq	r0, r0, r0
     504:	069b1830 			; <UNDEFINED> instruction: 0x069b1830
     508:	73050000 	movwvc	r0, #20480	; 0x5000
     50c:	08de1602 	ldmeq	lr, {r1, r9, sl, ip}^
     510:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
     514:	00000541 	andeq	r0, r0, r1, asr #10
     518:	07027505 	streq	r7, [r2, -r5, lsl #10]
     51c:	00000090 	muleq	r0, r0, r0
     520:	07e41838 			; <UNDEFINED> instruction: 0x07e41838
     524:	77050000 	strvc	r0, [r5, -r0]
     528:	08ef0a02 	stmiaeq	pc!, {r1, r9, fp}^	; <UNPREDICTABLE>
     52c:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
     530:	000003fd 	strdeq	r0, [r0], -sp
     534:	13027a05 	movwne	r7, #10757	; 0x2a05
     538:	000001ac 	andeq	r0, r0, ip, lsr #3
     53c:	01a61840 			; <UNDEFINED> instruction: 0x01a61840
     540:	7b050000 	blvc	140548 <_Min_Stack_Size+0x140148>
     544:	00900702 	addseq	r0, r0, r2, lsl #14
     548:	18440000 	stmdane	r4, {}^	; <UNPREDICTABLE>
     54c:	000008c0 	andeq	r0, r0, r0, asr #17
     550:	13027c05 	movwne	r7, #11269	; 0x2c05
     554:	000001ac 	andeq	r0, r0, ip, lsr #3
     558:	05a31848 	streq	r1, [r3, #2120]!	; 0x848
     55c:	7d050000 	stcvc	0, cr0, [r5, #-0]
     560:	08f51402 	ldmeq	r5!, {r1, sl, ip}^
     564:	184c0000 	stmdane	ip, {}^	; <UNPREDICTABLE>
     568:	00000305 	andeq	r0, r0, r5, lsl #6
     56c:	07028005 	streq	r8, [r2, -r5]
     570:	00000090 	muleq	r0, r0, r0
     574:	05f61850 	ldrbeq	r1, [r6, #2128]!	; 0x850
     578:	81050000 	mrshi	r0, (UNDEF: 5)
     57c:	05dd0902 	ldrbeq	r0, [sp, #2306]	; 0x902
     580:	18540000 	ldmdane	r4, {}^	; <UNPREDICTABLE>
     584:	0000061c 	andeq	r0, r0, ip, lsl r6
     588:	0702a405 	streq	sl, [r2, -r5, lsl #8]
     58c:	000008a4 	andeq	r0, r0, r4, lsr #17
     590:	4a761958 	bmi	1d86af8 <_Min_Stack_Size+0x1d866f8>
     594:	a8050000 	stmdage	r5, {}	; <UNPREDICTABLE>
     598:	02dd1302 	sbcseq	r1, sp, #134217728	; 0x8000000
     59c:	01480000 	mrseq	r0, (UNDEF: 72)
     5a0:	00038a19 	andeq	r8, r3, r9, lsl sl
     5a4:	02a90500 	adceq	r0, r9, #0, 10
     5a8:	00029a12 	andeq	r9, r2, r2, lsl sl
     5ac:	19014c00 	stmdbne	r1, {sl, fp, lr}
     5b0:	00000832 	andeq	r0, r0, r2, lsr r8
     5b4:	0c02ad05 	stceq	13, cr10, [r2], {5}
     5b8:	00000906 	andeq	r0, r0, r6, lsl #18
     5bc:	711902dc 			; <UNDEFINED> instruction: 0x711902dc
     5c0:	05000001 	streq	r0, [r0, #-1]
     5c4:	8a1002b2 	bhi	401094 <_Min_Stack_Size+0x400c94>
     5c8:	e0000006 	and	r0, r0, r6
     5cc:	01431902 	cmpeq	r3, r2, lsl #18
     5d0:	b4050000 	strlt	r0, [r5], #-0
     5d4:	09120a02 	ldmdbeq	r2, {r1, r9, fp}
     5d8:	02ec0000 	rsceq	r0, ip, #0
     5dc:	e3041100 	movw	r1, #16640	; 0x4100
     5e0:	02000005 	andeq	r0, r0, #5
     5e4:	07b00801 	ldreq	r0, [r0, r1, lsl #16]!
     5e8:	e3050000 	movw	r0, #20480	; 0x5000
     5ec:	11000005 	tstne	r0, r5
     5f0:	00046b04 	andeq	r6, r4, r4, lsl #22
     5f4:	00901500 	addseq	r1, r0, r0, lsl #10
     5f8:	06130000 	ldreq	r0, [r3], -r0
     5fc:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
     600:	16000004 	strne	r0, [r0], -r4
     604:	0000012c 	andeq	r0, r0, ip, lsr #2
     608:	00061316 	andeq	r1, r6, r6, lsl r3
     60c:	00901600 	addseq	r1, r0, r0, lsl #12
     610:	11000000 	mrsne	r0, (UNDEF: 0)
     614:	0005ea04 	andeq	lr, r5, r4, lsl #20
     618:	f5041100 			; <UNDEFINED> instruction: 0xf5041100
     61c:	15000005 	strne	r0, [r0, #-5]
     620:	000000be 	strheq	r0, [r0], -lr
     624:	0000063d 	andeq	r0, r0, sp, lsr r6
     628:	00048916 	andeq	r8, r4, r6, lsl r9
     62c:	012c1600 			; <UNDEFINED> instruction: 0x012c1600
     630:	be160000 	cdplt	0, 1, cr0, cr6, cr0, {0}
     634:	16000000 	strne	r0, [r0], -r0
     638:	00000090 	muleq	r0, r0, r0
     63c:	1f041100 	svcne	0x00041100
     640:	15000006 	strne	r0, [r0, #-6]
     644:	00000090 	muleq	r0, r0, r0
     648:	00000657 	andeq	r0, r0, r7, asr r6
     64c:	00048916 	andeq	r8, r4, r6, lsl r9
     650:	012c1600 			; <UNDEFINED> instruction: 0x012c1600
     654:	11000000 	mrsne	r0, (UNDEF: 0)
     658:	00064304 	andeq	r4, r6, r4, lsl #6
     65c:	00630a00 	rsbeq	r0, r3, r0, lsl #20
     660:	066d0000 	strbteq	r0, [sp], -r0
     664:	970b0000 	strls	r0, [fp, -r0]
     668:	02000000 	andeq	r0, r0, #0
     66c:	00630a00 	rsbeq	r0, r3, r0, lsl #20
     670:	067d0000 	ldrbteq	r0, [sp], -r0
     674:	970b0000 	strls	r0, [fp, -r0]
     678:	00000000 	andeq	r0, r0, r0
     67c:	019f0700 	orrseq	r0, pc, r0, lsl #14
     680:	24050000 	strcs	r0, [r5], #-0
     684:	03281a01 			; <UNDEFINED> instruction: 0x03281a01
     688:	001a0000 	andseq	r0, sl, r0
     68c:	0c000008 	stceq	0, cr0, [r0], {8}
     690:	08012805 	stmdaeq	r1, {r0, r2, fp, sp}
     694:	000006c3 	andeq	r0, r0, r3, asr #13
     698:	00067d18 	andeq	r7, r6, r8, lsl sp
     69c:	012a0500 			; <UNDEFINED> instruction: 0x012a0500
     6a0:	0006c311 	andeq	ip, r6, r1, lsl r3
     6a4:	70180000 	andsvc	r0, r8, r0
     6a8:	05000003 	streq	r0, [r0, #-3]
     6ac:	9007012b 	andls	r0, r7, fp, lsr #2
     6b0:	04000000 	streq	r0, [r0], #-0
     6b4:	00068318 	andeq	r8, r6, r8, lsl r3
     6b8:	012c0500 			; <UNDEFINED> instruction: 0x012c0500
     6bc:	0006c90b 	andeq	ip, r6, fp, lsl #18
     6c0:	11000800 	tstne	r0, r0, lsl #16
     6c4:	00068a04 	andeq	r8, r6, r4, lsl #20
     6c8:	7d041100 	stfvcs	f1, [r4, #-0]
     6cc:	1a000006 	bne	6ec <_Min_Stack_Size+0x2ec>
     6d0:	00000030 	andeq	r0, r0, r0, lsr r0
     6d4:	0144050e 	cmpeq	r4, lr, lsl #10
     6d8:	00070808 	andeq	r0, r7, r8, lsl #16
     6dc:	06d31800 	ldrbeq	r1, [r3], r0, lsl #16
     6e0:	45050000 	strmi	r0, [r5, #-0]
     6e4:	07081201 	streq	r1, [r8, -r1, lsl #4]
     6e8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     6ec:	000003f7 	strdeq	r0, [r0], -r7
     6f0:	12014605 	andne	r4, r1, #5242880	; 0x500000
     6f4:	00000708 	andeq	r0, r0, r8, lsl #14
     6f8:	07be1806 	ldreq	r1, [lr, r6, lsl #16]!
     6fc:	47050000 	strmi	r0, [r5, -r0]
     700:	006a1201 	rsbeq	r1, sl, r1, lsl #4
     704:	000c0000 	andeq	r0, ip, r0
     708:	00006a0a 	andeq	r6, r0, sl, lsl #20
     70c:	00071800 	andeq	r1, r7, r0, lsl #16
     710:	00970b00 	addseq	r0, r7, r0, lsl #22
     714:	00020000 	andeq	r0, r2, r0
     718:	8505d01b 	strhi	sp, [r5, #-27]	; 0xffffffe5
     71c:	082d0702 	stmdaeq	sp!, {r1, r8, r9, sl}
     720:	2b180000 	blcs	600728 <_Min_Stack_Size+0x600328>
     724:	05000004 	streq	r0, [r0, #-4]
     728:	97180287 	ldrls	r0, [r8, -r7, lsl #5]
     72c:	00000000 	andeq	r0, r0, r0
     730:	00078118 	andeq	r8, r7, r8, lsl r1
     734:	02880500 	addeq	r0, r8, #0, 10
     738:	0005dd12 	andeq	sp, r5, r2, lsl sp
     73c:	aa180400 	bge	601744 <_Min_Stack_Size+0x601344>
     740:	05000003 	streq	r0, [r0, #-3]
     744:	2d100289 	lfmcs	f0, 4, [r0, #-548]	; 0xfffffddc
     748:	08000008 	stmdaeq	r0, {r3}
     74c:	00089718 	andeq	r9, r8, r8, lsl r7
     750:	028a0500 	addeq	r0, sl, #0, 10
     754:	0001c217 	andeq	ip, r1, r7, lsl r2
     758:	a3182400 	tstge	r8, #0, 8
     75c:	05000002 	streq	r0, [r0, #-2]
     760:	900f028b 	andls	r0, pc, fp, lsl #5
     764:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
     768:	00067818 	andeq	r7, r6, r8, lsl r8
     76c:	028c0500 	addeq	r0, ip, #0, 10
     770:	0000892c 	andeq	r8, r0, ip, lsr #18
     774:	ad185000 	ldcge	0, cr5, [r8, #-0]
     778:	05000008 	streq	r0, [r0, #-8]
     77c:	cf1a028d 	svcgt	0x001a028d
     780:	58000006 	stmdapl	r0, {r1, r2}
     784:	00063318 	andeq	r3, r6, r8, lsl r3
     788:	028e0500 	addeq	r0, lr, #0, 10
     78c:	00012016 	andeq	r2, r1, r6, lsl r0
     790:	b2186800 	andslt	r6, r8, #0, 16
     794:	05000008 	streq	r0, [r0, #-8]
     798:	2016028f 	andscs	r0, r6, pc, lsl #5
     79c:	70000001 	andvc	r0, r0, r1
     7a0:	0000fa18 	andeq	pc, r0, r8, lsl sl	; <UNPREDICTABLE>
     7a4:	02900500 	addseq	r0, r0, #0, 10
     7a8:	00012016 	andeq	r2, r1, r6, lsl r0
     7ac:	15187800 	ldrne	r7, [r8, #-2048]	; 0xfffff800
     7b0:	05000008 	streq	r0, [r0, #-8]
     7b4:	3d100291 	lfmcc	f0, 4, [r0, #-580]	; 0xfffffdbc
     7b8:	80000008 	andhi	r0, r0, r8
     7bc:	00039e18 	andeq	r9, r3, r8, lsl lr
     7c0:	02920500 	addseq	r0, r2, #0, 10
     7c4:	00084d10 	andeq	r4, r8, r0, lsl sp
     7c8:	65188800 	ldrvs	r8, [r8, #-2048]	; 0xfffff800
     7cc:	05000000 	streq	r0, [r0, #-0]
     7d0:	900f0293 	mulls	pc, r3, r2	; <UNPREDICTABLE>
     7d4:	a0000000 	andge	r0, r0, r0
     7d8:	00025f18 	andeq	r5, r2, r8, lsl pc
     7dc:	02940500 	addseq	r0, r4, #0, 10
     7e0:	00012016 	andeq	r2, r1, r6, lsl r0
     7e4:	e118a400 	tst	r8, r0, lsl #8
     7e8:	05000000 	streq	r0, [r0, #-0]
     7ec:	20160295 	mulscs	r6, r5, r2
     7f0:	ac000001 	stcge	0, cr0, [r0], {1}
     7f4:	00023418 	andeq	r3, r2, r8, lsl r4
     7f8:	02960500 	addseq	r0, r6, #0, 10
     7fc:	00012016 	andeq	r2, r1, r6, lsl r0
     800:	7c18b400 	cfldrsvc	mvf11, [r8], {-0}
     804:	05000000 	streq	r0, [r0, #-0]
     808:	20160297 	mulscs	r6, r7, r2
     80c:	bc000001 	stclt	0, cr0, [r0], {1}
     810:	00058218 	andeq	r8, r5, r8, lsl r2
     814:	02980500 	addseq	r0, r8, #0, 10
     818:	00012016 	andeq	r2, r1, r6, lsl r0
     81c:	2a18c400 	bcs	631824 <_Min_Stack_Size+0x631424>
     820:	05000006 	streq	r0, [r0, #-6]
     824:	90080299 	mulls	r8, r9, r2
     828:	cc000000 	stcgt	0, cr0, [r0], {-0}
     82c:	05e30a00 	strbeq	r0, [r3, #2560]!	; 0xa00
     830:	083d0000 	ldmdaeq	sp!, {}	; <UNPREDICTABLE>
     834:	970b0000 	strls	r0, [fp, -r0]
     838:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
     83c:	05e30a00 	strbeq	r0, [r3, #2560]!	; 0xa00
     840:	084d0000 	stmdaeq	sp, {}^	; <UNPREDICTABLE>
     844:	970b0000 	strls	r0, [fp, -r0]
     848:	07000000 	streq	r0, [r0, -r0]
     84c:	05e30a00 	strbeq	r0, [r3, #2560]!	; 0xa00
     850:	085d0000 	ldmdaeq	sp, {}^	; <UNPREDICTABLE>
     854:	970b0000 	strls	r0, [fp, -r0]
     858:	17000000 	strne	r0, [r0, -r0]
     85c:	05f01b00 	ldrbeq	r1, [r0, #2816]!	; 0xb00
     860:	8407029e 	strhi	r0, [r7], #-670	; 0xfffffd62
     864:	18000008 	stmdane	r0, {r3}
     868:	00000440 	andeq	r0, r0, r0, asr #8
     86c:	1b02a105 	blne	a8c88 <_Min_Stack_Size+0xa8888>
     870:	00000884 	andeq	r0, r0, r4, lsl #17
     874:	02c01800 	sbceq	r1, r0, #0, 16
     878:	a2050000 	andge	r0, r5, #0
     87c:	08941802 	ldmeq	r4, {r1, fp, ip}
     880:	00780000 	rsbseq	r0, r8, r0
     884:	0003220a 	andeq	r2, r3, sl, lsl #4
     888:	00089400 	andeq	r9, r8, r0, lsl #8
     88c:	00970b00 	addseq	r0, r7, r0, lsl #22
     890:	001d0000 	andseq	r0, sp, r0
     894:	0000970a 	andeq	r9, r0, sl, lsl #14
     898:	0008a400 	andeq	sl, r8, r0, lsl #8
     89c:	00970b00 	addseq	r0, r7, r0, lsl #22
     8a0:	001d0000 	andseq	r0, sp, r0
     8a4:	8305f01c 	movwhi	pc, #20508	; 0x501c	; <UNPREDICTABLE>
     8a8:	08c90302 	stmiaeq	r9, {r1, r8, r9}^
     8ac:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
     8b0:	05000006 	streq	r0, [r0, #-6]
     8b4:	180b029a 	stmdane	fp, {r1, r3, r4, r7, r9}
     8b8:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
     8bc:	0000087c 	andeq	r0, r0, ip, ror r8
     8c0:	0b02a305 	bleq	a94dc <_Min_Stack_Size+0xa90dc>
     8c4:	0000085d 	andeq	r0, r0, sp, asr r8
     8c8:	05e30a00 	strbeq	r0, [r3, #2560]!	; 0xa00
     8cc:	08d90000 	ldmeq	r9, {}^	; <UNPREDICTABLE>
     8d0:	970b0000 	strls	r0, [fp, -r0]
     8d4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     8d8:	00c01e00 	sbceq	r1, r0, r0, lsl #28
     8dc:	04110000 	ldreq	r0, [r1], #-0
     8e0:	000008d9 	ldrdeq	r0, [r0], -r9
     8e4:	0008ef1f 	andeq	lr, r8, pc, lsl pc
     8e8:	04891600 	streq	r1, [r9], #1536	; 0x600
     8ec:	11000000 	mrsne	r0, (UNDEF: 0)
     8f0:	0008e404 	andeq	lr, r8, r4, lsl #8
     8f4:	ac041100 	stfges	f1, [r4], {-0}
     8f8:	1f000001 	svcne	0x00000001
     8fc:	00000906 	andeq	r0, r0, r6, lsl #18
     900:	00009016 	andeq	r9, r0, r6, lsl r0
     904:	04110000 	ldreq	r0, [r1], #-0
     908:	0000090c 	andeq	r0, r0, ip, lsl #18
     90c:	08fb0411 	ldmeq	fp!, {r0, r4, sl}^
     910:	7d0a0000 	stcvc	0, cr0, [sl, #-0]
     914:	22000006 	andcs	r0, r0, #6
     918:	0b000009 	bleq	944 <_Min_Stack_Size+0x544>
     91c:	00000097 	muleq	r0, r7, r0
     920:	d2200002 	eorle	r0, r0, #2
     924:	05000007 	streq	r0, [r0, #-7]
     928:	89170333 	ldmdbhi	r7, {r0, r1, r4, r5, r8, r9}
     92c:	20000004 	andcs	r0, r0, r4
     930:	000007cb 	andeq	r0, r0, fp, asr #15
     934:	1d033405 	cfstrsne	mvf3, [r3, #-20]	; 0xffffffec
     938:	0000048f 	andeq	r0, r0, pc, lsl #9
     93c:	0000710a 	andeq	r7, r0, sl, lsl #2
     940:	00094c00 	andeq	r4, r9, r0, lsl #24
     944:	00970b00 	addseq	r0, r7, r0, lsl #22
     948:	00010000 	andeq	r0, r1, r0
     94c:	0000d420 	andeq	sp, r0, r0, lsr #8
     950:	08040700 	stmdaeq	r4, {r8, r9, sl}
     954:	00003f19 	andeq	r3, r0, r9, lsl pc
     958:	05932100 	ldreq	r2, [r3, #256]	; 0x100
     95c:	4a080000 	bmi	200964 <_Min_Stack_Size+0x200564>
     960:	00007111 	andeq	r7, r0, r1, lsl r1
     964:	005e0a00 	subseq	r0, lr, r0, lsl #20
     968:	09750000 	ldmdbeq	r5!, {}^	; <UNPREDICTABLE>
     96c:	970b0000 	strls	r0, [fp, -r0]
     970:	0f000000 	svceq	0x00000000
     974:	09650500 	stmdbeq	r5!, {r8, sl}^
     978:	60210000 	eorvs	r0, r1, r0
     97c:	08000007 	stmdaeq	r0, {r0, r1, r2}
     980:	0975174c 	ldmdbeq	r5!, {r2, r3, r6, r8, r9, sl, ip}^
     984:	5e0a0000 	cdppl	0, 0, cr0, cr10, cr0, {0}
     988:	96000000 	strls	r0, [r0], -r0
     98c:	0b000009 	bleq	9b8 <_Min_Stack_Size+0x5b8>
     990:	00000097 	muleq	r0, r7, r0
     994:	86050007 	strhi	r0, [r5], -r7
     998:	21000009 	tstcs	r0, r9
     99c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     9a0:	96174d08 	ldrls	r4, [r7], -r8, lsl #26
     9a4:	1b000009 	blne	9d0 <_Min_Stack_Size+0x5d0>
     9a8:	01eb0908 	mvneq	r0, r8, lsl #18
     9ac:	0009cd09 	andeq	ip, r9, r9, lsl #26
     9b0:	52432200 	subpl	r2, r3, #0, 4
     9b4:	01ed0900 	mvneq	r0, r0, lsl #18
     9b8:	00007d11 	andeq	r7, r0, r1, lsl sp
     9bc:	43220000 			; <UNDEFINED> instruction: 0x43220000
     9c0:	09005253 	stmdbeq	r0, {r0, r1, r4, r6, r9, ip, lr}
     9c4:	7d1101ee 	ldfvcs	f0, [r1, #-952]	; 0xfffffc48
     9c8:	04000000 	streq	r0, [r0], #-0
     9cc:	01560700 	cmpeq	r6, r0, lsl #14
     9d0:	ef090000 	svc	0x00090000
     9d4:	09a70301 	stmibeq	r7!, {r0, r8, r9}
     9d8:	881b0000 	ldmdahi	fp, {}	; <UNPREDICTABLE>
     9dc:	0901f509 	stmdbeq	r1, {r0, r3, r8, sl, ip, sp, lr, pc}
     9e0:	00000b88 	andeq	r0, r0, r8, lsl #23
     9e4:	00524322 	subseq	r4, r2, r2, lsr #6
     9e8:	1101f709 	tstne	r1, r9, lsl #14	; <UNPREDICTABLE>
     9ec:	0000007d 	andeq	r0, r0, sp, ror r0
     9f0:	02451800 	subeq	r1, r5, #0, 16
     9f4:	f8090000 			; <UNDEFINED> instruction: 0xf8090000
     9f8:	007d1101 	rsbseq	r1, sp, r1, lsl #2
     9fc:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     a00:	00000248 	andeq	r0, r0, r8, asr #4
     a04:	1101f909 	tstne	r1, r9, lsl #18	; <UNPREDICTABLE>
     a08:	0000007d 	andeq	r0, r0, sp, ror r0
     a0c:	49432208 	stmdbmi	r3, {r3, r9, sp}^
     a10:	fa090052 	blx	240b60 <_Min_Stack_Size+0x240760>
     a14:	007d1101 	rsbseq	r1, sp, r1, lsl #2
     a18:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
     a1c:	00000124 	andeq	r0, r0, r4, lsr #2
     a20:	1101fb09 	tstne	r1, r9, lsl #22	; <UNPREDICTABLE>
     a24:	0000007d 	andeq	r0, r0, sp, ror r0
     a28:	07341810 			; <UNDEFINED> instruction: 0x07341810
     a2c:	fc090000 	stc2	0, cr0, [r9], {-0}
     a30:	007d1101 	rsbseq	r1, sp, r1, lsl #2
     a34:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
     a38:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
     a3c:	1101fd09 	tstne	r1, r9, lsl #26	; <UNPREDICTABLE>
     a40:	0000007d 	andeq	r0, r0, sp, ror r0
     a44:	05ad1818 	streq	r1, [sp, #2072]!	; 0x818
     a48:	fe090000 	cdp2	0, 0, cr0, cr9, cr0, {0}
     a4c:	00711101 	rsbseq	r1, r1, r1, lsl #2
     a50:	181c0000 	ldmdane	ip, {}	; <UNPREDICTABLE>
     a54:	00000569 	andeq	r0, r0, r9, ror #10
     a58:	1101ff09 	tstne	r1, r9, lsl #30	; <UNPREDICTABLE>
     a5c:	0000007d 	andeq	r0, r0, sp, ror r0
     a60:	01791820 	cmneq	r9, r0, lsr #16
     a64:	00090000 	andeq	r0, r9, r0
     a68:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     a6c:	18240000 	stmdane	r4!, {}	; <UNPREDICTABLE>
     a70:	000005b7 			; <UNDEFINED> instruction: 0x000005b7
     a74:	11020109 	tstne	r2, r9, lsl #2
     a78:	0000093c 	andeq	r0, r0, ip, lsr r9
     a7c:	08841828 	stmeq	r4, {r3, r5, fp, ip}
     a80:	02090000 	andeq	r0, r9, #0
     a84:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     a88:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
     a8c:	0000079f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
     a90:	11020309 	tstne	r2, r9, lsl #6
     a94:	0000007d 	andeq	r0, r0, sp, ror r0
     a98:	06a31834 			; <UNDEFINED> instruction: 0x06a31834
     a9c:	04090000 	streq	r0, [r9], #-0
     aa0:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     aa4:	18380000 	ldmdane	r8!, {}	; <UNPREDICTABLE>
     aa8:	000005c1 	andeq	r0, r0, r1, asr #11
     aac:	11020509 	tstne	r2, r9, lsl #10
     ab0:	00000071 	andeq	r0, r0, r1, ror r0
     ab4:	078e183c 			; <UNDEFINED> instruction: 0x078e183c
     ab8:	06090000 	streq	r0, [r9], -r0
     abc:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     ac0:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
     ac4:	00000693 	muleq	r0, r3, r6
     ac8:	11020709 	tstne	r2, r9, lsl #14
     acc:	0000007d 	andeq	r0, r0, sp, ror r0
     ad0:	00381844 	eorseq	r1, r8, r4, asr #16
     ad4:	08090000 	stmdaeq	r9, {}	; <UNPREDICTABLE>
     ad8:	093c1102 	ldmdbeq	ip!, {r1, r8, ip}
     adc:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
     ae0:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     ae4:	11020909 	tstne	r2, r9, lsl #18
     ae8:	0000007d 	andeq	r0, r0, sp, ror r0
     aec:	052e1850 	streq	r1, [lr, #-2128]!	; 0xfffff7b0
     af0:	0a090000 	beq	240af8 <_Min_Stack_Size+0x2406f8>
     af4:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     af8:	18540000 	ldmdane	r4, {}^	; <UNPREDICTABLE>
     afc:	00000659 	andeq	r0, r0, r9, asr r6
     b00:	11020b09 	tstne	r2, r9, lsl #22
     b04:	0000007d 	andeq	r0, r0, sp, ror r0
     b08:	05dd1858 	ldrbeq	r1, [sp, #2136]	; 0x858
     b0c:	0c090000 	stceq	0, cr0, [r9], {-0}
     b10:	00711102 	rsbseq	r1, r1, r2, lsl #2
     b14:	185c0000 	ldmdane	ip, {}^	; <UNPREDICTABLE>
     b18:	0000000a 	andeq	r0, r0, sl
     b1c:	11020d09 	tstne	r2, r9, lsl #26
     b20:	0000007d 	andeq	r0, r0, sp, ror r0
     b24:	03e71860 	mvneq	r1, #96, 16	; 0x600000
     b28:	0e090000 	cdpeq	0, 0, cr0, cr9, cr0, {0}
     b2c:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     b30:	18640000 	stmdane	r4!, {}^	; <UNPREDICTABLE>
     b34:	000006d9 	ldrdeq	r0, [r0], -r9
     b38:	11020f09 	tstne	r2, r9, lsl #30
     b3c:	0000093c 	andeq	r0, r0, ip, lsr r9
     b40:	05e71868 	strbeq	r1, [r7, #2152]!	; 0x868
     b44:	10090000 	andne	r0, r9, r0
     b48:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     b4c:	22700000 	rsbscs	r0, r0, #0
     b50:	00525343 	subseq	r5, r2, r3, asr #6
     b54:	11021109 	tstne	r2, r9, lsl #2
     b58:	0000007d 	andeq	r0, r0, sp, ror r0
     b5c:	05ec1874 	strbeq	r1, [ip, #2164]!	; 0x874
     b60:	12090000 	andne	r0, r9, #0
     b64:	093c1102 	ldmdbeq	ip!, {r1, r8, ip}
     b68:	18780000 	ldmdane	r8!, {}^	; <UNPREDICTABLE>
     b6c:	000007de 	ldrdeq	r0, [r0], -lr
     b70:	11021309 	tstne	r2, r9, lsl #6
     b74:	0000007d 	andeq	r0, r0, sp, ror r0
     b78:	03931880 	orrseq	r1, r3, #128, 16	; 0x800000
     b7c:	14090000 	strne	r0, [r9], #-0
     b80:	007d1102 	rsbseq	r1, sp, r2, lsl #2
     b84:	00840000 	addeq	r0, r4, r0
     b88:	00034a07 	andeq	r4, r3, r7, lsl #20
     b8c:	02150900 	andseq	r0, r5, #0, 18
     b90:	0009da03 	andeq	sp, r9, r3, lsl #20
     b94:	01072300 	mrseq	r2, SP_und
     b98:	00000063 	andeq	r0, r0, r3, rrx
     b9c:	bc01280c 	stclt	8, cr2, [r1], {12}
     ba0:	2400000b 	strcs	r0, [r0], #-11
     ba4:	00000369 	andeq	r0, r0, r9, ror #6
     ba8:	06f12400 	ldrbteq	r2, [r1], r0, lsl #8
     bac:	24010000 	strcs	r0, [r1], #-0
     bb0:	0000005c 	andeq	r0, r0, ip, asr r0
     bb4:	02c92402 	sbceq	r2, r9, #33554432	; 0x2000000
     bb8:	00030000 	andeq	r0, r3, r0
     bbc:	2f0a180c 	svccs	0x000a180c
     bc0:	000c1409 	andeq	r1, ip, r9, lsl #8
     bc4:	02170d00 	andseq	r0, r7, #0, 26
     bc8:	310a0000 	mrscc	r0, (UNDEF: 10)
     bcc:	0000710c 	andeq	r7, r0, ip, lsl #2
     bd0:	630d0000 	movwvs	r0, #53248	; 0xd000
     bd4:	0a000006 	beq	bf4 <_Min_Stack_Size+0x7f4>
     bd8:	00710c34 	rsbseq	r0, r1, r4, lsr ip
     bdc:	0d040000 	stceq	0, cr0, [r4, #-0]
     be0:	00000072 	andeq	r0, r0, r2, ror r0
     be4:	710c370a 	tstvc	ip, sl, lsl #14
     be8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     bec:	0000770d 	andeq	r7, r0, sp, lsl #14
     bf0:	0c3a0a00 			; <UNDEFINED> instruction: 0x0c3a0a00
     bf4:	00000071 	andeq	r0, r0, r1, ror r0
     bf8:	008b0d0c 	addeq	r0, fp, ip, lsl #26
     bfc:	3e0a0000 	cdpcc	0, 0, cr0, cr10, cr0, {0}
     c00:	0000710c 	andeq	r7, r0, ip, lsl #2
     c04:	900d1000 	andls	r1, sp, r0
     c08:	0a000000 	beq	c10 <_Min_Stack_Size+0x810>
     c0c:	00710c41 	rsbseq	r0, r1, r1, asr #24
     c10:	00140000 	andseq	r0, r4, r0
     c14:	00081f03 	andeq	r1, r8, r3, lsl #30
     c18:	024b0a00 	subeq	r0, fp, #0, 20
     c1c:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
     c20:	330b300c 	movwcc	r3, #45068	; 0xb00c
     c24:	000c8509 	andeq	r8, ip, r9, lsl #10
     c28:	03cb0d00 	biceq	r0, fp, #0, 26
     c2c:	350b0000 	strcc	r0, [fp, #-0]
     c30:	0000710c 	andeq	r7, r0, ip, lsl #2
     c34:	da0d0000 	ble	340c3c <_Min_Stack_Size+0x34083c>
     c38:	0b000002 	bleq	c48 <_Min_Stack_Size+0x848>
     c3c:	00710c38 	rsbseq	r0, r1, r8, lsr ip
     c40:	0d040000 	stceq	0, cr0, [r4, #-0]
     c44:	00000621 	andeq	r0, r0, r1, lsr #12
     c48:	710c3b0b 	tstvc	ip, fp, lsl #22
     c4c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     c50:	0000cb0d 	andeq	ip, r0, sp, lsl #22
     c54:	0c3e0b00 			; <UNDEFINED> instruction: 0x0c3e0b00
     c58:	00000071 	andeq	r0, r0, r1, ror r0
     c5c:	02200d0c 	eoreq	r0, r0, #12, 26	; 0x300
     c60:	410b0000 	mrsmi	r0, (UNDEF: 11)
     c64:	0000710c 	andeq	r7, r0, ip, lsl #2
     c68:	820d1000 	andhi	r1, sp, #0
     c6c:	0b000001 	bleq	c78 <_Min_Stack_Size+0x878>
     c70:	00710c44 	rsbseq	r0, r1, r4, asr #24
     c74:	10140000 	andsne	r0, r4, r0
     c78:	004c4c50 	subeq	r4, ip, r0, asr ip
     c7c:	1416470b 	ldrne	r4, [r6], #-1803	; 0xfffff8f5
     c80:	1800000c 	stmdane	r0, {r2, r3}
     c84:	01110300 	tsteq	r1, r0, lsl #6
     c88:	480b0000 	stmdami	fp, {}	; <UNPREDICTABLE>
     c8c:	000c2002 	andeq	r2, ip, r2
     c90:	0b140c00 	bleq	503c98 <_Min_Stack_Size+0x503898>
     c94:	0cdc094d 			; <UNDEFINED> instruction: 0x0cdc094d
     c98:	3c0d0000 	stccc	0, cr0, [sp], {-0}
     c9c:	0b000008 	bleq	cc4 <_Min_Stack_Size+0x8c4>
     ca0:	00710c4f 	rsbseq	r0, r1, pc, asr #24
     ca4:	0d000000 	stceq	0, cr0, [r0, #-0]
     ca8:	000008d4 	ldrdeq	r0, [r0], -r4
     cac:	710c520b 	tstvc	ip, fp, lsl #4
     cb0:	04000000 	streq	r0, [r0], #-0
     cb4:	0004050d 	andeq	r0, r4, sp, lsl #10
     cb8:	0c550b00 	mrrceq	11, 0, r0, r5, cr0
     cbc:	00000071 	andeq	r0, r0, r1, ror r0
     cc0:	004d0d08 	subeq	r0, sp, r8, lsl #26
     cc4:	580b0000 	stmdapl	fp, {}	; <UNPREDICTABLE>
     cc8:	0000710c 	andeq	r7, r0, ip, lsl #2
     ccc:	510d0c00 	tstpl	sp, r0, lsl #24
     cd0:	0b000007 	bleq	cf4 <_Min_Stack_Size+0x8f4>
     cd4:	00710c5b 	rsbseq	r0, r1, fp, asr ip
     cd8:	00100000 	andseq	r0, r0, r0
     cdc:	00027503 	andeq	r7, r2, r3, lsl #10
     ce0:	025e0b00 	subseq	r0, lr, #0, 22
     ce4:	00000c91 	muleq	r0, r1, ip
     ce8:	63010723 	movwvs	r0, #5923	; 0x1723
     cec:	0d000000 	stceq	0, cr0, [r0, #-0]
     cf0:	0d0f0133 	stfeqs	f0, [pc, #-204]	; c2c <_Min_Stack_Size+0x82c>
     cf4:	46240000 	strtmi	r0, [r4], -r0
     cf8:	64000008 	strvs	r0, [r0], #-8
     cfc:	00073d24 	andeq	r3, r7, r4, lsr #26
     d00:	56240a00 	strtpl	r0, [r4], -r0, lsl #20
     d04:	01000003 	tsteq	r0, r3
     d08:	00054c24 	andeq	r4, r5, r4, lsr #24
     d0c:	03000100 	movweq	r0, #256	; 0x100
     d10:	00000014 	andeq	r0, r0, r4, lsl r0
     d14:	e803380d 	stmda	r3, {r0, r2, r3, fp, ip, sp}
     d18:	2100000c 	tstcs	r0, ip
     d1c:	000002fe 	strdeq	r0, [r0], -lr
     d20:	7d16cd0d 	ldcvc	13, cr12, [r6, #-52]	; 0xffffffcc
     d24:	21000000 	mrscs	r0, (UNDEF: 0)
     d28:	000003c0 	andeq	r0, r0, r0, asr #7
     d2c:	7111ce0d 	tstvc	r1, sp, lsl #28
     d30:	21000000 	mrscs	r0, (UNDEF: 0)
     d34:	000002f3 	strdeq	r0, [r0], -r3
     d38:	0f1ccf0d 	svceq	0x001ccf0d
     d3c:	0c00000d 	stceq	0, cr0, [r0], {13}
     d40:	09500108 	ldmdbeq	r0, {r3, r8}^
     d44:	00000d63 	andeq	r0, r0, r3, ror #26
     d48:	003dcb0d 	eorseq	ip, sp, sp, lsl #22
     d4c:	0b510100 	bleq	1441154 <_Min_Stack_Size+0x1440d54>
     d50:	000005dd 	ldrdeq	r0, [r0], -sp
     d54:	009b0d00 	addseq	r0, fp, r0, lsl #26
     d58:	52010000 	andpl	r0, r1, #0
     d5c:	0005dd0b 	andeq	sp, r5, fp, lsl #26
     d60:	03000400 	movweq	r0, #1024	; 0x400
     d64:	00000572 	andeq	r0, r0, r2, ror r5
     d68:	3f035401 	svccc	0x00035401
     d6c:	2500000d 	strcs	r0, [r0, #-13]
     d70:	00000095 	muleq	r0, r5, r0
     d74:	63115601 	tstvs	r1, #1048576	; 0x100000
     d78:	0500000d 	streq	r0, [r0, #-13]
     d7c:	00000003 	andeq	r0, r0, r3
     d80:	07032100 	streq	r2, [r3, -r0, lsl #2]
     d84:	5a010000 	bpl	40d8c <_Min_Stack_Size+0x4098c>
     d88:	00007111 	andeq	r7, r0, r1, lsl r1
     d8c:	08622100 	stmdaeq	r2!, {r8, sp}^
     d90:	5b010000 	blpl	40d98 <_Min_Stack_Size+0x40998>
     d94:	00007111 	andeq	r7, r0, r1, lsl r1
     d98:	04132600 	ldreq	r2, [r3], #-1536	; 0xfffffa00
     d9c:	cc010000 	stcgt	0, cr0, [r1], {-0}
     da0:	000f1806 	andeq	r1, pc, r6, lsl #16
     da4:	00000608 	andeq	r0, r0, r8, lsl #12
     da8:	279c0100 	ldrcs	r0, [ip, r0, lsl #2]
     dac:	0000076e 	andeq	r0, r0, lr, ror #14
     db0:	000d9e01 	andeq	r9, sp, r1, lsl #28
     db4:	b4000000 	strlt	r0, [r0], #-0
     db8:	01000000 	mrseq	r0, (UNDEF: 0)
     dbc:	000e199c 	muleq	lr, ip, r9
     dc0:	060a2800 	streq	r2, [sl], -r0, lsl #16
     dc4:	a0010000 	andge	r0, r1, r0
     dc8:	000cdc16 	andeq	sp, ip, r6, lsl ip
     dcc:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     dd0:	00024d28 	andeq	r4, r2, r8, lsr #26
     dd4:	16a10100 	strtne	r0, [r1], r0, lsl #2
     dd8:	00000c85 	andeq	r0, r0, r5, lsl #25
     ddc:	7fb49103 	svcvc	0x00b49103
     de0:	00000029 	andeq	r0, r0, r9, lsr #32
     de4:	00001c00 	andeq	r1, r0, r0, lsl #24
     de8:	000dfe00 	andeq	pc, sp, r0, lsl #28
     dec:	01622800 	cmneq	r2, r0, lsl #16
     df0:	a4010000 	strge	r0, [r1], #-0
     df4:	00007d03 	andeq	r7, r0, r3, lsl #26
     df8:	b0910300 	addslt	r0, r1, r0, lsl #6
     dfc:	002a007f 	eoreq	r0, sl, pc, ror r0
     e00:	1c000000 	stcne	0, cr0, [r0], {-0}
     e04:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
     e08:	00000162 	andeq	r0, r0, r2, ror #2
     e0c:	7d03a901 	vstrvc.16	s20, [r3, #-2]	; <UNPREDICTABLE>
     e10:	03000000 	movweq	r0, #0
     e14:	007fac91 			; <UNDEFINED> instruction: 0x007fac91
     e18:	08c52b00 	stmiaeq	r5, {r8, r9, fp, sp}^
     e1c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
     e20:	00009005 	andeq	r9, r0, r5
     e24:	000ef800 	andeq	pc, lr, r0, lsl #16
     e28:	00002008 	andeq	r2, r0, r8
     e2c:	009c0100 	addseq	r0, ip, r0, lsl #2
     e30:	00000f47 	andeq	r0, r0, r7, asr #30
     e34:	02710004 	rsbseq	r0, r1, #4
     e38:	01040000 	mrseq	r0, (UNDEF: 4)
     e3c:	00000447 	andeq	r0, r0, r7, asr #8
     e40:	0008e10c 	andeq	lr, r8, ip, lsl #2
     e44:	0001be00 	andeq	fp, r1, r0, lsl #28
     e48:	00002000 	andeq	r2, r0, r0
     e4c:	00000000 	andeq	r0, r0, r0
     e50:	00027d00 	andeq	r7, r2, r0, lsl #26
     e54:	06010200 	streq	r0, [r1], -r0, lsl #4
     e58:	000007a9 	andeq	r0, r0, r9, lsr #15
     e5c:	00050202 	andeq	r0, r5, r2, lsl #4
     e60:	03000000 	movweq	r0, #0
     e64:	00002c12 	andeq	r2, r0, r2, lsl ip
     e68:	44182802 	ldrmi	r2, [r8], #-2050	; 0xfffff7fe
     e6c:	04000000 	streq	r0, [r0], #-0
     e70:	00000033 	andeq	r0, r0, r3, lsr r0
     e74:	b5050402 	strlt	r0, [r5, #-1026]	; 0xfffffbfe
     e78:	02000001 	andeq	r0, r0, #1
     e7c:	01b00508 	lslseq	r0, r8, #10
     e80:	ca030000 	bgt	c0e88 <_Min_Stack_Size+0xc0a88>
     e84:	0200002a 	andeq	r0, r0, #42	; 0x2a
     e88:	0063182e 	rsbeq	r1, r3, lr, lsr #16
     e8c:	52050000 	andpl	r0, r5, #0
     e90:	02000000 	andeq	r0, r0, #0
     e94:	07a70801 	streq	r0, [r7, r1, lsl #16]!
     e98:	33030000 	movwcc	r0, #12288	; 0x3000
     e9c:	0200000a 	andeq	r0, r0, #10
     ea0:	007b1931 	rsbseq	r1, fp, r1, lsr r9
     ea4:	6a040000 	bvs	100eac <_Min_Stack_Size+0x100aac>
     ea8:	02000000 	andeq	r0, r0, #0
     eac:	03770702 	cmneq	r7, #524288	; 0x80000
     eb0:	6e030000 	cdpvs	0, 0, cr0, cr3, cr0, {0}
     eb4:	0200002b 	andeq	r0, r0, #43	; 0x2b
     eb8:	00931934 	addseq	r1, r3, r4, lsr r9
     ebc:	82040000 	andhi	r0, r4, #0
     ec0:	02000000 	andeq	r0, r0, #0
     ec4:	00a50704 	adceq	r0, r5, r4, lsl #14
     ec8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     ecc:	0000a007 	andeq	sl, r0, r7
     ed0:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
     ed4:	00746e69 	rsbseq	r6, r4, r9, ror #28
     ed8:	aa070402 	bge	1c1ee8 <_Min_Stack_Size+0x1c1ae8>
     edc:	02000000 	andeq	r0, r0, #0
     ee0:	07190408 	ldreq	r0, [r9, -r8, lsl #8]
     ee4:	e0070000 	and	r0, r7, r0
     ee8:	03000003 	movweq	r0, #3
     eec:	a8170165 	ldmdage	r7, {r0, r2, r5, r6, r8}
     ef0:	03000000 	movweq	r0, #0
     ef4:	00000562 	andeq	r0, r0, r2, ror #10
     ef8:	440e2e04 	strmi	r2, [lr], #-3588	; 0xfffff1fc
     efc:	03000000 	movweq	r0, #0
     f00:	000006fb 	strdeq	r0, [r0], -fp
     f04:	440e7404 	strmi	r7, [lr], #-1028	; 0xfffffbfc
     f08:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     f0c:	03a50404 			; <UNDEFINED> instruction: 0x03a50404
     f10:	000000fd 	strdeq	r0, [r0], -sp
     f14:	0003da09 	andeq	sp, r3, r9, lsl #20
     f18:	0ca70400 	cfstrseq	mvf0, [r7]
     f1c:	000000b6 	strheq	r0, [r0], -r6
     f20:	0002ec09 	andeq	lr, r2, r9, lsl #24
     f24:	13a80400 			; <UNDEFINED> instruction: 0x13a80400
     f28:	000000fd 	strdeq	r0, [r0], -sp
     f2c:	00630a00 	rsbeq	r0, r3, r0, lsl #20
     f30:	010d0000 	mrseq	r0, (UNDEF: 13)
     f34:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
     f38:	03000000 	movweq	r0, #0
     f3c:	04080c00 	streq	r0, [r8], #-3072	; 0xfffff400
     f40:	013109a2 	teqeq	r1, r2, lsr #19
     f44:	e30d0000 	movw	r0, #53248	; 0xd000
     f48:	04000006 	streq	r0, [r0], #-6
     f4c:	00a107a4 	adceq	r0, r1, r4, lsr #15
     f50:	0d000000 	stceq	0, cr0, [r0, #-0]
     f54:	0000080d 	andeq	r0, r0, sp, lsl #16
     f58:	db05a904 	blle	16b370 <_Min_Stack_Size+0x16af70>
     f5c:	04000000 	streq	r0, [r0], #-0
     f60:	066d0300 	strbteq	r0, [sp], -r0, lsl #6
     f64:	aa040000 	bge	100f6c <_Min_Stack_Size+0x100b6c>
     f68:	00010d03 	andeq	r0, r1, r3, lsl #26
     f6c:	03040e00 	movweq	r0, #19968	; 0x4e00
     f70:	000007c3 	andeq	r0, r0, r3, asr #15
     f74:	93191605 	tstls	r9, #5242880	; 0x500000
     f78:	03000000 	movweq	r0, #0
     f7c:	000005cb 	andeq	r0, r0, fp, asr #11
     f80:	a10d0c06 	tstge	sp, r6, lsl #24
     f84:	03000000 	movweq	r0, #0
     f88:	00000859 	andeq	r0, r0, r9, asr r8
     f8c:	4b1b2305 	blmi	6c9ba8 <_Min_Stack_Size+0x6c97a8>
     f90:	0f000001 	svceq	0x00000001
     f94:	0000029b 	muleq	r0, fp, r2
     f98:	08340518 	ldmdaeq	r4!, {r3, r4, r8, sl}
     f9c:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
     fa0:	00067d0d 	andeq	r7, r6, sp, lsl #26
     fa4:	13360500 	teqne	r6, #0, 10
     fa8:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
     fac:	6b5f1000 	blvs	17c4fb4 <_Min_Stack_Size+0x17c4bb4>
     fb0:	07370500 	ldreq	r0, [r7, -r0, lsl #10]!
     fb4:	000000a1 	andeq	r0, r0, r1, lsr #1
     fb8:	06c40d04 	strbeq	r0, [r4], r4, lsl #26
     fbc:	37050000 	strcc	r0, [r5, -r0]
     fc0:	0000a10b 	andeq	sl, r0, fp, lsl #2
     fc4:	8d0d0800 	stchi	8, cr0, [sp, #-0]
     fc8:	05000002 	streq	r0, [r0, #-2]
     fcc:	00a11437 	adceq	r1, r1, r7, lsr r4
     fd0:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     fd4:	0000019a 	muleq	r0, sl, r1
     fd8:	a11b3705 	tstge	fp, r5, lsl #14
     fdc:	10000000 	andne	r0, r0, r0
     fe0:	00785f10 	rsbseq	r5, r8, r0, lsl pc
     fe4:	c30b3805 	movwgt	r3, #47109	; 0xb805
     fe8:	14000001 	strne	r0, [r0], #-1
     fec:	63041100 	movwvs	r1, #16640	; 0x4100
     ff0:	0a000001 	beq	ffc <_Min_Stack_Size+0xbfc>
     ff4:	0000013f 	andeq	r0, r0, pc, lsr r1
     ff8:	000001d3 	ldrdeq	r0, [r0], -r3
     ffc:	0000a80b 	andeq	sl, r0, fp, lsl #16
    1000:	0f000000 	svceq	0x00000000
    1004:	000002d5 	ldrdeq	r0, [r0], -r5
    1008:	083c0524 	ldmdaeq	ip!, {r2, r5, r8, sl}
    100c:	00000256 	andeq	r0, r0, r6, asr r2
    1010:	0001080d 	andeq	r0, r1, sp, lsl #16
    1014:	093e0500 	ldmdbeq	lr!, {r8, sl}
    1018:	000000a1 	andeq	r0, r0, r1, lsr #1
    101c:	07b50d00 	ldreq	r0, [r5, r0, lsl #26]!
    1020:	3f050000 	svccc	0x00050000
    1024:	0000a109 	andeq	sl, r0, r9, lsl #2
    1028:	390d0400 	stmdbcc	sp, {sl}
    102c:	05000001 	streq	r0, [r0, #-1]
    1030:	00a10940 	adceq	r0, r1, r0, asr #18
    1034:	0d080000 	stceq	0, cr0, [r8, #-0]
    1038:	000008ca 	andeq	r0, r0, sl, asr #17
    103c:	a1094105 	tstge	r9, r5, lsl #2
    1040:	0c000000 	stceq	0, cr0, [r0], {-0}
    1044:	0005380d 	andeq	r3, r5, sp, lsl #16
    1048:	09420500 	stmdbeq	r2, {r8, sl}^
    104c:	000000a1 	andeq	r0, r0, r1, lsr #1
    1050:	04210d10 	strteq	r0, [r1], #-3344	; 0xfffff2f0
    1054:	43050000 	movwmi	r0, #20480	; 0x5000
    1058:	0000a109 	andeq	sl, r0, r9, lsl #2
    105c:	f60d1400 			; <UNDEFINED> instruction: 0xf60d1400
    1060:	05000007 	streq	r0, [r0, #-7]
    1064:	00a10944 	adceq	r0, r1, r4, asr #18
    1068:	0d180000 	ldceq	0, cr0, [r8, #-0]
    106c:	00000640 	andeq	r0, r0, r0, asr #12
    1070:	a1094505 	tstge	r9, r5, lsl #10
    1074:	1c000000 	stcne	0, cr0, [r0], {-0}
    1078:	00088c0d 	andeq	r8, r8, sp, lsl #24
    107c:	09460500 	stmdbeq	r6, {r8, sl}^
    1080:	000000a1 	andeq	r0, r0, r1, lsr #1
    1084:	48120020 	ldmdami	r2, {r5}
    1088:	08000001 	stmdaeq	r0, {r0}
    108c:	084f0501 	stmdaeq	pc, {r0, r8, sl}^	; <UNPREDICTABLE>
    1090:	0000029b 	muleq	r0, fp, r2
    1094:	00026d0d 	andeq	r6, r2, sp, lsl #26
    1098:	0a500500 	beq	14024a0 <_Min_Stack_Size+0x14020a0>
    109c:	0000029b 	muleq	r0, fp, r2
    10a0:	05fe0d00 	ldrbeq	r0, [lr, #3328]!	; 0xd00
    10a4:	51050000 	mrspl	r0, (UNDEF: 5)
    10a8:	00029b09 	andeq	r9, r2, r9, lsl #22
    10ac:	96138000 	ldrls	r8, [r3], -r0
    10b0:	05000007 	streq	r0, [r0, #-7]
    10b4:	013f0a53 	teqeq	pc, r3, asr sl	; <UNPREDICTABLE>
    10b8:	01000000 	mrseq	r0, (UNDEF: 0)
    10bc:	00019213 	andeq	r9, r1, r3, lsl r2
    10c0:	0a560500 	beq	15824c8 <_Min_Stack_Size+0x15820c8>
    10c4:	0000013f 	andeq	r0, r0, pc, lsr r1
    10c8:	0a000104 	beq	14e0 <_Min_Stack_Size+0x10e0>
    10cc:	0000013d 	andeq	r0, r0, sp, lsr r1
    10d0:	000002ab 	andeq	r0, r0, fp, lsr #5
    10d4:	0000a80b 	andeq	sl, r0, fp, lsl #16
    10d8:	12001f00 	andne	r1, r0, #0, 30
    10dc:	00004a76 	andeq	r4, r0, r6, ror sl
    10e0:	62050190 	andvs	r0, r5, #144, 2	; 0x24
    10e4:	0002ee08 	andeq	lr, r2, r8, lsl #28
    10e8:	067d0d00 	ldrbteq	r0, [sp], -r0, lsl #26
    10ec:	63050000 	movwvs	r0, #20480	; 0x5000
    10f0:	0002ee12 	andeq	lr, r2, r2, lsl lr
    10f4:	8e0d0000 	cdphi	0, 0, cr0, cr13, cr0, {0}
    10f8:	05000006 	streq	r0, [r0, #-6]
    10fc:	00a10664 	adceq	r0, r1, r4, ror #12
    1100:	0d040000 	stceq	0, cr0, [r4, #-0]
    1104:	00000288 	andeq	r0, r0, r8, lsl #5
    1108:	f4096605 	vst1.8	{d6-d8}, [r9], r5
    110c:	08000002 	stmdaeq	r0, {r1}
    1110:	0001480d 	andeq	r4, r1, sp, lsl #16
    1114:	1e670500 	cdpne	5, 6, cr0, cr7, cr0, {0}
    1118:	00000256 	andeq	r0, r0, r6, asr r2
    111c:	04110088 	ldreq	r0, [r1], #-136	; 0xffffff78
    1120:	000002ab 	andeq	r0, r0, fp, lsr #5
    1124:	0003040a 	andeq	r0, r3, sl, lsl #8
    1128:	00030400 	andeq	r0, r3, r0, lsl #8
    112c:	00a80b00 	adceq	r0, r8, r0, lsl #22
    1130:	001f0000 	andseq	r0, pc, r0
    1134:	030a0411 	movweq	r0, #42001	; 0xa411
    1138:	0f140000 	svceq	0x00140000
    113c:	0000064a 	andeq	r0, r0, sl, asr #12
    1140:	087a0508 	ldmdaeq	sl!, {r3, r8, sl}^
    1144:	00000333 	andeq	r0, r0, r3, lsr r3
    1148:	0001330d 	andeq	r3, r1, sp, lsl #6
    114c:	117b0500 	cmnne	fp, r0, lsl #10
    1150:	00000333 	andeq	r0, r0, r3, lsr r3
    1154:	072e0d00 	streq	r0, [lr, -r0, lsl #26]!
    1158:	7c050000 	stcvc	0, cr0, [r5], {-0}
    115c:	0000a106 	andeq	sl, r0, r6, lsl #2
    1160:	11000400 	tstne	r0, r0, lsl #8
    1164:	00006304 	andeq	r6, r0, r4, lsl #6
    1168:	00280f00 	eoreq	r0, r8, r0, lsl #30
    116c:	05680000 	strbeq	r0, [r8, #-0]!
    1170:	047c08ba 	ldrbteq	r0, [ip], #-2234	; 0xfffff746
    1174:	5f100000 	svcpl	0x00100000
    1178:	bb050070 	bllt	141340 <_Min_Stack_Size+0x140f40>
    117c:	00033312 	andeq	r3, r3, r2, lsl r3
    1180:	5f100000 	svcpl	0x00100000
    1184:	bc050072 	stclt	0, cr0, [r5], {114}	; 0x72
    1188:	0000a107 	andeq	sl, r0, r7, lsl #2
    118c:	5f100400 	svcpl	0x00100400
    1190:	bd050077 	stclt	0, cr0, [r5, #-476]	; 0xfffffe24
    1194:	0000a107 	andeq	sl, r0, r7, lsl #2
    1198:	8b0d0800 	blhi	3431a0 <_Min_Stack_Size+0x342da0>
    119c:	05000001 	streq	r0, [r0, #-1]
    11a0:	002c09be 	strhteq	r0, [ip], -lr
    11a4:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    11a8:	0000030d 	andeq	r0, r0, sp, lsl #6
    11ac:	2c09bf05 	stccs	15, cr11, [r9], {5}
    11b0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    11b4:	66625f10 	uqadd16vs	r5, r2, r0
    11b8:	11c00500 	bicne	r0, r0, r0, lsl #10
    11bc:	0000030b 	andeq	r0, r0, fp, lsl #6
    11c0:	00b70d10 	adcseq	r0, r7, r0, lsl sp
    11c4:	c1050000 	mrsgt	r0, (UNDEF: 5)
    11c8:	0000a107 	andeq	sl, r0, r7, lsl #2
    11cc:	690d1800 	stmdbvs	sp, {fp, ip}
    11d0:	05000001 	streq	r0, [r0, #-1]
    11d4:	013d0ac8 	teqeq	sp, r8, asr #21
    11d8:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    11dc:	000033bd 			; <UNDEFINED> instruction: 0x000033bd
    11e0:	001dca05 	andseq	ip, sp, r5, lsl #20
    11e4:	20000006 	andcs	r0, r0, r6
    11e8:	0033360d 	eorseq	r3, r3, sp, lsl #12
    11ec:	1dcc0500 	cfstr64ne	mvdx0, [ip]
    11f0:	0000062a 	andeq	r0, r0, sl, lsr #12
    11f4:	06eb0d24 	strbteq	r0, [fp], r4, lsr #26
    11f8:	cf050000 	svcgt	0x00050000
    11fc:	00064e0d 	andeq	r4, r6, sp, lsl #28
    1200:	a60d2800 	strge	r2, [sp], -r0, lsl #16
    1204:	05000008 	streq	r0, [r0, #-8]
    1208:	066809d0 			; <UNDEFINED> instruction: 0x066809d0
    120c:	102c0000 	eorne	r0, ip, r0
    1210:	0062755f 	rsbeq	r7, r2, pc, asr r5
    1214:	0b11d305 	bleq	475e30 <_Min_Stack_Size+0x475a30>
    1218:	30000003 	andcc	r0, r0, r3
    121c:	70755f10 	rsbsvc	r5, r5, r0, lsl pc
    1220:	12d40500 	sbcsne	r0, r4, #0, 10
    1224:	00000333 	andeq	r0, r0, r3, lsr r3
    1228:	755f1038 	ldrbvc	r1, [pc, #-56]	; 11f8 <_Min_Stack_Size+0xdf8>
    122c:	d5050072 	strle	r0, [r5, #-114]	; 0xffffff8e
    1230:	0000a107 	andeq	sl, r0, r7, lsl #2
    1234:	2d0d3c00 	stccs	12, cr3, [sp, #-0]
    1238:	05000001 	streq	r0, [r0, #-1]
    123c:	066e11d8 			; <UNDEFINED> instruction: 0x066e11d8
    1240:	0d400000 	stcleq	0, cr0, [r0, #-0]
    1244:	00000876 	andeq	r0, r0, r6, ror r8
    1248:	7e11d905 	vnmlsvc.f16	s26, s2, s10	; <UNPREDICTABLE>
    124c:	43000006 	movwmi	r0, #6
    1250:	626c5f10 	rsbvs	r5, ip, #16, 30	; 0x40
    1254:	11dc0500 	bicsne	r0, ip, r0, lsl #10
    1258:	0000030b 	andeq	r0, r0, fp, lsl #6
    125c:	07250d44 	streq	r0, [r5, -r4, asr #26]!
    1260:	df050000 	svcle	0x00050000
    1264:	0000a107 	andeq	sl, r0, r7, lsl #2
    1268:	380d4c00 	stmdacc	sp, {sl, fp, lr}
    126c:	05000004 	streq	r0, [r0, #-4]
    1270:	00c30ae0 	sbceq	r0, r3, r0, ror #21
    1274:	0d500000 	ldcleq	0, cr0, [r0, #-0]
    1278:	00004baa 	andeq	r4, r0, sl, lsr #23
    127c:	9a12e305 	bls	4b9e98 <_Min_Stack_Size+0x4b9a98>
    1280:	54000004 	strpl	r0, [r0], #-4
    1284:	0003f10d 	andeq	pc, r3, sp, lsl #2
    1288:	0ce70500 	cfstr64eq	mvdx0, [r7]
    128c:	00000157 	andeq	r0, r0, r7, asr r1
    1290:	02e30d58 	rsceq	r0, r3, #88, 26	; 0x1600
    1294:	e9050000 	stmdb	r5, {}	; <UNPREDICTABLE>
    1298:	0001310e 	andeq	r3, r1, lr, lsl #2
    129c:	510d5c00 	tstpl	sp, r0, lsl #24
    12a0:	05000006 	streq	r0, [r0, #-6]
    12a4:	00a109ea 	adceq	r0, r1, sl, ror #19
    12a8:	00640000 	rsbeq	r0, r4, r0
    12ac:	0000a115 	andeq	sl, r0, r5, lsl r1
    12b0:	00049a00 	andeq	r9, r4, r0, lsl #20
    12b4:	049a1600 	ldreq	r1, [sl], #1536	; 0x600
    12b8:	3d160000 	ldccc	0, cr0, [r6, #-0]
    12bc:	16000001 	strne	r0, [r0], -r1
    12c0:	000005ee 	andeq	r0, r0, lr, ror #11
    12c4:	0000a116 	andeq	sl, r0, r6, lsl r1
    12c8:	04110000 	ldreq	r0, [r1], #-0
    12cc:	000004a5 	andeq	r0, r0, r5, lsr #9
    12d0:	00049a05 	andeq	r9, r4, r5, lsl #20
    12d4:	06cc1700 	strbeq	r1, [ip], r0, lsl #14
    12d8:	04280000 	strteq	r0, [r8], #-0
    12dc:	08026505 	stmdaeq	r2, {r0, r2, r8, sl, sp, lr}
    12e0:	000005ee 	andeq	r0, r0, lr, ror #11
    12e4:	00062c18 	andeq	r2, r6, r8, lsl ip
    12e8:	02670500 	rsbeq	r0, r7, #0, 10
    12ec:	0000a107 	andeq	sl, r0, r7, lsl #2
    12f0:	06180000 	ldreq	r0, [r8], -r0
    12f4:	05000008 	streq	r0, [r0, #-8]
    12f8:	da0b026c 	ble	2c1cb0 <_Min_Stack_Size+0x2c18b0>
    12fc:	04000006 	streq	r0, [r0], #-6
    1300:	0007ee18 	andeq	lr, r7, r8, lsl lr
    1304:	026c0500 	rsbeq	r0, ip, #0, 10
    1308:	0006da14 	andeq	sp, r6, r4, lsl sl
    130c:	93180800 	tstls	r8, #0, 16
    1310:	05000002 	streq	r0, [r0, #-2]
    1314:	da1e026c 	ble	781ccc <_Min_Stack_Size+0x7818cc>
    1318:	0c000006 	stceq	0, cr0, [r0], {6}
    131c:	00068918 	andeq	r8, r6, r8, lsl r9
    1320:	026e0500 	rsbeq	r0, lr, #0, 10
    1324:	0000a108 	andeq	sl, r0, r8, lsl #2
    1328:	42181000 	andsmi	r1, r8, #0
    132c:	05000000 	streq	r0, [r0, #-0]
    1330:	da08026f 	ble	201cf4 <_Min_Stack_Size+0x2018f4>
    1334:	14000008 	strne	r0, [r0], #-8
    1338:	0006ab18 	andeq	sl, r6, r8, lsl fp
    133c:	02720500 	rsbseq	r0, r2, #0, 10
    1340:	0000a107 	andeq	sl, r0, r7, lsl #2
    1344:	9b183000 	blls	60d34c <_Min_Stack_Size+0x60cf4c>
    1348:	05000006 	streq	r0, [r0, #-6]
    134c:	ef160273 	svc	0x00160273
    1350:	34000008 	strcc	r0, [r0], #-8
    1354:	00054118 	andeq	r4, r5, r8, lsl r1
    1358:	02750500 	rsbseq	r0, r5, #0, 10
    135c:	0000a107 	andeq	sl, r0, r7, lsl #2
    1360:	e4183800 	ldr	r3, [r8], #-2048	; 0xfffff800
    1364:	05000007 	streq	r0, [r0, #-7]
    1368:	000a0277 	andeq	r0, sl, r7, ror r2
    136c:	3c000009 	stccc	0, cr0, [r0], {9}
    1370:	0003fd18 	andeq	pc, r3, r8, lsl sp	; <UNPREDICTABLE>
    1374:	027a0500 	rsbseq	r0, sl, #0, 10
    1378:	0001bd13 	andeq	fp, r1, r3, lsl sp
    137c:	a6184000 	ldrge	r4, [r8], -r0
    1380:	05000001 	streq	r0, [r0, #-1]
    1384:	a107027b 	tstge	r7, fp, ror r2
    1388:	44000000 	strmi	r0, [r0], #-0
    138c:	0008c018 	andeq	ip, r8, r8, lsl r0
    1390:	027c0500 	rsbseq	r0, ip, #0, 10
    1394:	0001bd13 	andeq	fp, r1, r3, lsl sp
    1398:	a3184800 	tstge	r8, #0, 16
    139c:	05000005 	streq	r0, [r0, #-5]
    13a0:	0614027d 			; <UNDEFINED> instruction: 0x0614027d
    13a4:	4c000009 	stcmi	0, cr0, [r0], {9}
    13a8:	00030518 	andeq	r0, r3, r8, lsl r5
    13ac:	02800500 	addeq	r0, r0, #0, 10
    13b0:	0000a107 	andeq	sl, r0, r7, lsl #2
    13b4:	f6185000 			; <UNDEFINED> instruction: 0xf6185000
    13b8:	05000005 	streq	r0, [r0, #-5]
    13bc:	ee090281 	cdp	2, 0, cr0, cr9, cr1, {4}
    13c0:	54000005 	strpl	r0, [r0], #-5
    13c4:	00061c18 	andeq	r1, r6, r8, lsl ip
    13c8:	02a40500 	adceq	r0, r4, #0, 10
    13cc:	0008b507 	andeq	fp, r8, r7, lsl #10
    13d0:	76195800 	ldrvc	r5, [r9], -r0, lsl #16
    13d4:	0500004a 	streq	r0, [r0, #-74]	; 0xffffffb6
    13d8:	ee1302a8 	cdp	2, 1, cr0, cr3, cr8, {5}
    13dc:	48000002 	stmdami	r0, {r1}
    13e0:	038a1901 	orreq	r1, sl, #16384	; 0x4000
    13e4:	a9050000 	stmdbge	r5, {}	; <UNPREDICTABLE>
    13e8:	02ab1202 	adceq	r1, fp, #536870912	; 0x20000000
    13ec:	014c0000 	mrseq	r0, (UNDEF: 76)
    13f0:	00083219 	andeq	r3, r8, r9, lsl r2
    13f4:	02ad0500 	adceq	r0, sp, #0, 10
    13f8:	0009170c 	andeq	r1, r9, ip, lsl #14
    13fc:	1902dc00 	stmdbne	r2, {sl, fp, ip, lr, pc}
    1400:	00000171 	andeq	r0, r0, r1, ror r1
    1404:	1002b205 	andne	fp, r2, r5, lsl #4
    1408:	0000069b 	muleq	r0, fp, r6
    140c:	431902e0 	tstmi	r9, #224, 4
    1410:	05000001 	streq	r0, [r0, #-1]
    1414:	230a02b4 	movwcs	r0, #41652	; 0xa2b4
    1418:	ec000009 	stc	0, cr0, [r0], {9}
    141c:	04110002 	ldreq	r0, [r1], #-2
    1420:	000005f4 	strdeq	r0, [r0], -r4
    1424:	b0080102 	andlt	r0, r8, r2, lsl #2
    1428:	05000007 	streq	r0, [r0, #-7]
    142c:	000005f4 	strdeq	r0, [r0], -r4
    1430:	047c0411 	ldrbteq	r0, [ip], #-1041	; 0xfffffbef
    1434:	a1150000 	tstge	r5, r0
    1438:	24000000 	strcs	r0, [r0], #-0
    143c:	16000006 	strne	r0, [r0], -r6
    1440:	0000049a 	muleq	r0, sl, r4
    1444:	00013d16 	andeq	r3, r1, r6, lsl sp
    1448:	06241600 	strteq	r1, [r4], -r0, lsl #12
    144c:	a1160000 	tstge	r6, r0
    1450:	00000000 	andeq	r0, r0, r0
    1454:	05fb0411 	ldrbeq	r0, [fp, #1041]!	; 0x411
    1458:	04110000 	ldreq	r0, [r1], #-0
    145c:	00000606 	andeq	r0, r0, r6, lsl #12
    1460:	0000cf15 	andeq	ip, r0, r5, lsl pc
    1464:	00064e00 	andeq	r4, r6, r0, lsl #28
    1468:	049a1600 	ldreq	r1, [sl], #1536	; 0x600
    146c:	3d160000 	ldccc	0, cr0, [r6, #-0]
    1470:	16000001 	strne	r0, [r0], -r1
    1474:	000000cf 	andeq	r0, r0, pc, asr #1
    1478:	0000a116 	andeq	sl, r0, r6, lsl r1
    147c:	04110000 	ldreq	r0, [r1], #-0
    1480:	00000630 	andeq	r0, r0, r0, lsr r6
    1484:	0000a115 	andeq	sl, r0, r5, lsl r1
    1488:	00066800 	andeq	r6, r6, r0, lsl #16
    148c:	049a1600 	ldreq	r1, [sl], #1536	; 0x600
    1490:	3d160000 	ldccc	0, cr0, [r6, #-0]
    1494:	00000001 	andeq	r0, r0, r1
    1498:	06540411 			; <UNDEFINED> instruction: 0x06540411
    149c:	630a0000 	movwvs	r0, #40960	; 0xa000
    14a0:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    14a4:	0b000006 	bleq	14c4 <_Min_Stack_Size+0x10c4>
    14a8:	000000a8 	andeq	r0, r0, r8, lsr #1
    14ac:	630a0002 	movwvs	r0, #40962	; 0xa002
    14b0:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    14b4:	0b000006 	bleq	14d4 <_Min_Stack_Size+0x10d4>
    14b8:	000000a8 	andeq	r0, r0, r8, lsr #1
    14bc:	9f070000 	svcls	0x00070000
    14c0:	05000001 	streq	r0, [r0, #-1]
    14c4:	391a0124 	ldmdbcc	sl, {r2, r5, r8}
    14c8:	1a000003 	bne	14dc <_Min_Stack_Size+0x10dc>
    14cc:	00000800 	andeq	r0, r0, r0, lsl #16
    14d0:	0128050c 			; <UNDEFINED> instruction: 0x0128050c
    14d4:	0006d408 	andeq	sp, r6, r8, lsl #8
    14d8:	067d1800 	ldrbteq	r1, [sp], -r0, lsl #16
    14dc:	2a050000 	bcs	1414e4 <_Min_Stack_Size+0x1410e4>
    14e0:	06d41101 	ldrbeq	r1, [r4], r1, lsl #2
    14e4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    14e8:	00000370 	andeq	r0, r0, r0, ror r3
    14ec:	07012b05 	streq	r2, [r1, -r5, lsl #22]
    14f0:	000000a1 	andeq	r0, r0, r1, lsr #1
    14f4:	06831804 	streq	r1, [r3], r4, lsl #16
    14f8:	2c050000 	stccs	0, cr0, [r5], {-0}
    14fc:	06da0b01 	ldrbeq	r0, [sl], r1, lsl #22
    1500:	00080000 	andeq	r0, r8, r0
    1504:	069b0411 			; <UNDEFINED> instruction: 0x069b0411
    1508:	04110000 	ldreq	r0, [r1], #-0
    150c:	0000068e 	andeq	r0, r0, lr, lsl #13
    1510:	0000301a 	andeq	r3, r0, sl, lsl r0
    1514:	44050e00 	strmi	r0, [r5], #-3584	; 0xfffff200
    1518:	07190801 	ldreq	r0, [r9, -r1, lsl #16]
    151c:	d3180000 	tstle	r8, #0
    1520:	05000006 	streq	r0, [r0, #-6]
    1524:	19120145 	ldmdbne	r2, {r0, r2, r6, r8}
    1528:	00000007 	andeq	r0, r0, r7
    152c:	0003f718 	andeq	pc, r3, r8, lsl r7	; <UNPREDICTABLE>
    1530:	01460500 	cmpeq	r6, r0, lsl #10
    1534:	00071912 	andeq	r1, r7, r2, lsl r9
    1538:	be180600 	cfmsub32lt	mvax0, mvfx0, mvfx8, mvfx0
    153c:	05000007 	streq	r0, [r0, #-7]
    1540:	7b120147 	blvc	481a64 <_Min_Stack_Size+0x481664>
    1544:	0c000000 	stceq	0, cr0, [r0], {-0}
    1548:	007b0a00 	rsbseq	r0, fp, r0, lsl #20
    154c:	07290000 	streq	r0, [r9, -r0]!
    1550:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    1554:	02000000 	andeq	r0, r0, #0
    1558:	05d01b00 	ldrbeq	r1, [r0, #2816]	; 0xb00
    155c:	3e070285 	cdpcc	2, 0, cr0, cr7, cr5, {4}
    1560:	18000008 	stmdane	r0, {r3}
    1564:	0000042b 	andeq	r0, r0, fp, lsr #8
    1568:	18028705 	stmdane	r2, {r0, r2, r8, r9, sl, pc}
    156c:	000000a8 	andeq	r0, r0, r8, lsr #1
    1570:	07811800 	streq	r1, [r1, r0, lsl #16]
    1574:	88050000 	stmdahi	r5, {}	; <UNPREDICTABLE>
    1578:	05ee1202 	strbeq	r1, [lr, #514]!	; 0x202
    157c:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    1580:	000003aa 	andeq	r0, r0, sl, lsr #7
    1584:	10028905 	andne	r8, r2, r5, lsl #18
    1588:	0000083e 	andeq	r0, r0, lr, lsr r8
    158c:	08971808 	ldmeq	r7, {r3, fp, ip}
    1590:	8a050000 	bhi	141598 <_Min_Stack_Size+0x141198>
    1594:	01d31702 	bicseq	r1, r3, r2, lsl #14
    1598:	18240000 	stmdane	r4!, {}	; <UNPREDICTABLE>
    159c:	000002a3 	andeq	r0, r0, r3, lsr #5
    15a0:	0f028b05 	svceq	0x00028b05
    15a4:	000000a1 	andeq	r0, r0, r1, lsr #1
    15a8:	06781848 	ldrbteq	r1, [r8], -r8, asr #16
    15ac:	8c050000 	stchi	0, cr0, [r5], {-0}
    15b0:	009a2c02 	addseq	r2, sl, r2, lsl #24
    15b4:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
    15b8:	000008ad 	andeq	r0, r0, sp, lsr #17
    15bc:	1a028d05 	bne	a49d8 <_Min_Stack_Size+0xa45d8>
    15c0:	000006e0 	andeq	r0, r0, r0, ror #13
    15c4:	06331858 			; <UNDEFINED> instruction: 0x06331858
    15c8:	8e050000 	cdphi	0, 0, cr0, cr5, cr0, {0}
    15cc:	01311602 	teqeq	r1, r2, lsl #12
    15d0:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    15d4:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    15d8:	16028f05 	strne	r8, [r2], -r5, lsl #30
    15dc:	00000131 	andeq	r0, r0, r1, lsr r1
    15e0:	00fa1870 	rscseq	r1, sl, r0, ror r8
    15e4:	90050000 	andls	r0, r5, r0
    15e8:	01311602 	teqeq	r1, r2, lsl #12
    15ec:	18780000 	ldmdane	r8!, {}^	; <UNPREDICTABLE>
    15f0:	00000815 	andeq	r0, r0, r5, lsl r8
    15f4:	10029105 	andne	r9, r2, r5, lsl #2
    15f8:	0000084e 	andeq	r0, r0, lr, asr #16
    15fc:	039e1880 	orrseq	r1, lr, #128, 16	; 0x800000
    1600:	92050000 	andls	r0, r5, #0
    1604:	085e1002 	ldmdaeq	lr, {r1, ip}^
    1608:	18880000 	stmne	r8, {}	; <UNPREDICTABLE>
    160c:	00000065 	andeq	r0, r0, r5, rrx
    1610:	0f029305 	svceq	0x00029305
    1614:	000000a1 	andeq	r0, r0, r1, lsr #1
    1618:	025f18a0 	subseq	r1, pc, #160, 16	; 0xa00000
    161c:	94050000 	strls	r0, [r5], #-0
    1620:	01311602 	teqeq	r1, r2, lsl #12
    1624:	18a40000 	stmiane	r4!, {}	; <UNPREDICTABLE>
    1628:	000000e1 	andeq	r0, r0, r1, ror #1
    162c:	16029505 	strne	r9, [r2], -r5, lsl #10
    1630:	00000131 	andeq	r0, r0, r1, lsr r1
    1634:	023418ac 	eorseq	r1, r4, #172, 16	; 0xac0000
    1638:	96050000 	strls	r0, [r5], -r0
    163c:	01311602 	teqeq	r1, r2, lsl #12
    1640:	18b40000 	ldmne	r4!, {}	; <UNPREDICTABLE>
    1644:	0000007c 	andeq	r0, r0, ip, ror r0
    1648:	16029705 	strne	r9, [r2], -r5, lsl #14
    164c:	00000131 	andeq	r0, r0, r1, lsr r1
    1650:	058218bc 	streq	r1, [r2, #2236]	; 0x8bc
    1654:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
    1658:	01311602 	teqeq	r1, r2, lsl #12
    165c:	18c40000 	stmiane	r4, {}^	; <UNPREDICTABLE>
    1660:	0000062a 	andeq	r0, r0, sl, lsr #12
    1664:	08029905 	stmdaeq	r2, {r0, r2, r8, fp, ip, pc}
    1668:	000000a1 	andeq	r0, r0, r1, lsr #1
    166c:	f40a00cc 	vst4.<illegal width 64>	{d0-d3}, [sl], ip
    1670:	4e000005 	cdpmi	0, 0, cr0, cr0, cr5, {0}
    1674:	0b000008 	bleq	169c <_Min_Stack_Size+0x129c>
    1678:	000000a8 	andeq	r0, r0, r8, lsr #1
    167c:	f40a0019 	vst4.8	{d0-d3}, [sl :64], r9
    1680:	5e000005 	cdppl	0, 0, cr0, cr0, cr5, {0}
    1684:	0b000008 	bleq	16ac <_Min_Stack_Size+0x12ac>
    1688:	000000a8 	andeq	r0, r0, r8, lsr #1
    168c:	f40a0007 	vst4.8	{d0-d3}, [sl], r7
    1690:	6e000005 	cdpvs	0, 0, cr0, cr0, cr5, {0}
    1694:	0b000008 	bleq	16bc <_Min_Stack_Size+0x12bc>
    1698:	000000a8 	andeq	r0, r0, r8, lsr #1
    169c:	f01b0017 			; <UNDEFINED> instruction: 0xf01b0017
    16a0:	07029e05 	streq	r9, [r2, -r5, lsl #28]
    16a4:	00000895 	muleq	r0, r5, r8
    16a8:	00044018 	andeq	r4, r4, r8, lsl r0
    16ac:	02a10500 	adceq	r0, r1, #0, 10
    16b0:	0008951b 	andeq	r9, r8, fp, lsl r5
    16b4:	c0180000 	andsgt	r0, r8, r0
    16b8:	05000002 	streq	r0, [r0, #-2]
    16bc:	a51802a2 	ldrge	r0, [r8, #-674]	; 0xfffffd5e
    16c0:	78000008 	stmdavc	r0, {r3}
    16c4:	03330a00 	teqeq	r3, #0, 20
    16c8:	08a50000 	stmiaeq	r5!, {}	; <UNPREDICTABLE>
    16cc:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    16d0:	1d000000 	stcne	0, cr0, [r0, #-0]
    16d4:	00a80a00 	adceq	r0, r8, r0, lsl #20
    16d8:	08b50000 	ldmeq	r5!, {}	; <UNPREDICTABLE>
    16dc:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    16e0:	1d000000 	stcne	0, cr0, [r0, #-0]
    16e4:	05f01c00 	ldrbeq	r1, [r0, #3072]!	; 0xc00
    16e8:	da030283 	ble	c20fc <_Min_Stack_Size+0xc1cfc>
    16ec:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
    16f0:	000006cc 	andeq	r0, r0, ip, asr #13
    16f4:	0b029a05 	bleq	a7f10 <_Min_Stack_Size+0xa7b10>
    16f8:	00000729 	andeq	r0, r0, r9, lsr #14
    16fc:	00087c1d 	andeq	r7, r8, sp, lsl ip
    1700:	02a30500 	adceq	r0, r3, #0, 10
    1704:	00086e0b 	andeq	r6, r8, fp, lsl #28
    1708:	f40a0000 	vst4.8	{d0-d3}, [sl], r0
    170c:	ea000005 	b	1728 <_Min_Stack_Size+0x1328>
    1710:	0b000008 	bleq	1738 <_Min_Stack_Size+0x1338>
    1714:	000000a8 	andeq	r0, r0, r8, lsr #1
    1718:	c01e0018 	andsgt	r0, lr, r8, lsl r0
    171c:	11000000 	mrsne	r0, (UNDEF: 0)
    1720:	0008ea04 	andeq	lr, r8, r4, lsl #20
    1724:	09001f00 	stmdbeq	r0, {r8, r9, sl, fp, ip}
    1728:	9a160000 	bls	581730 <_Min_Stack_Size+0x581330>
    172c:	00000004 	andeq	r0, r0, r4
    1730:	08f50411 	ldmeq	r5!, {r0, r4, sl}^
    1734:	04110000 	ldreq	r0, [r1], #-0
    1738:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
    173c:	0009171f 	andeq	r1, r9, pc, lsl r7
    1740:	00a11600 	adceq	r1, r1, r0, lsl #12
    1744:	11000000 	mrsne	r0, (UNDEF: 0)
    1748:	00091d04 	andeq	r1, r9, r4, lsl #26
    174c:	0c041100 	stfeqs	f1, [r4], {-0}
    1750:	0a000009 	beq	177c <_Min_Stack_Size+0x137c>
    1754:	0000068e 	andeq	r0, r0, lr, lsl #13
    1758:	00000933 	andeq	r0, r0, r3, lsr r9
    175c:	0000a80b 	andeq	sl, r0, fp, lsl #16
    1760:	20000200 	andcs	r0, r0, r0, lsl #4
    1764:	000007d2 	ldrdeq	r0, [r0], -r2
    1768:	17033305 	strne	r3, [r3, -r5, lsl #6]
    176c:	0000049a 	muleq	r0, sl, r4
    1770:	0007cb20 	andeq	ip, r7, r0, lsr #22
    1774:	03340500 	teqeq	r4, #0, 10
    1778:	0004a01d 	andeq	sl, r4, sp, lsl r0
    177c:	00d42000 	sbcseq	r2, r4, r0
    1780:	04070000 	streq	r0, [r7], #-0
    1784:	003f1908 	eorseq	r1, pc, r8, lsl #18
    1788:	93210000 			; <UNDEFINED> instruction: 0x93210000
    178c:	08000005 	stmdaeq	r0, {r0, r2}
    1790:	0082114a 	addeq	r1, r2, sl, asr #2
    1794:	5e0a0000 	cdppl	0, 0, cr0, cr10, cr0, {0}
    1798:	76000000 	strvc	r0, [r0], -r0
    179c:	0b000009 	bleq	17c8 <_Min_Stack_Size+0x13c8>
    17a0:	000000a8 	andeq	r0, r0, r8, lsr #1
    17a4:	6605000f 	strvs	r0, [r5], -pc
    17a8:	21000009 	tstcs	r0, r9
    17ac:	00000760 	andeq	r0, r0, r0, ror #14
    17b0:	76174c08 	ldrvc	r4, [r7], -r8, lsl #24
    17b4:	0a000009 	beq	17e0 <_Min_Stack_Size+0x13e0>
    17b8:	0000005e 	andeq	r0, r0, lr, asr r0
    17bc:	00000997 	muleq	r0, r7, r9
    17c0:	0000a80b 	andeq	sl, r0, fp, lsl #16
    17c4:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    17c8:	00000987 	andeq	r0, r0, r7, lsl #19
    17cc:	0002b221 	andeq	fp, r2, r1, lsr #4
    17d0:	174d0800 	strbne	r0, [sp, -r0, lsl #16]
    17d4:	00000997 	muleq	r0, r7, r9
    17d8:	4509181b 	strmi	r1, [r9, #-2075]	; 0xfffff7e5
    17dc:	0a060901 	beq	183be8 <_Min_Stack_Size+0x1837e8>
    17e0:	43220000 			; <UNDEFINED> instruction: 0x43220000
    17e4:	47090052 	smlsdmi	r9, r2, r0, r0
    17e8:	008e1101 	addeq	r1, lr, r1, lsl #2
    17ec:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    17f0:	00000c2a 	andeq	r0, r0, sl, lsr #24
    17f4:	11014809 	tstne	r1, r9, lsl #16
    17f8:	0000008e 	andeq	r0, r0, lr, lsl #1
    17fc:	41502204 	cmpmi	r0, r4, lsl #4
    1800:	49090052 	stmdbmi	r9, {r1, r4, r6}
    1804:	008e1101 	addeq	r1, lr, r1, lsl #2
    1808:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    180c:	00000937 	andeq	r0, r0, r7, lsr r9
    1810:	11014a09 	tstne	r1, r9, lsl #20
    1814:	0000008e 	andeq	r0, r0, lr, lsl #1
    1818:	0c58180c 	mrrceq	8, 0, r1, r8, cr12
    181c:	4b090000 	blmi	241824 <_Min_Stack_Size+0x241424>
    1820:	008e1101 	addeq	r1, lr, r1, lsl #2
    1824:	22100000 	andscs	r0, r0, #0
    1828:	00524346 	subseq	r4, r2, r6, asr #6
    182c:	11014c09 	tstne	r1, r9, lsl #24
    1830:	0000008e 	andeq	r0, r0, lr, lsl #1
    1834:	2f070014 	svccs	0x00070014
    1838:	0900000c 	stmdbeq	r0, {r2, r3}
    183c:	a803014d 	stmdage	r3, {r0, r2, r3, r6, r8}
    1840:	1b000009 	blne	186c <_Min_Stack_Size+0x146c>
    1844:	0296091c 	addseq	r0, r6, #28, 18	; 0x70000
    1848:	000a7e09 	andeq	r7, sl, r9, lsl #28
    184c:	52532200 	subspl	r2, r3, #0, 4
    1850:	02980900 	addseq	r0, r8, #0, 18
    1854:	00008e11 	andeq	r8, r0, r1, lsl lr
    1858:	44220000 	strtmi	r0, [r2], #-0
    185c:	99090052 	stmdbls	r9, {r1, r4, r6}
    1860:	008e1102 	addeq	r1, lr, r2, lsl #2
    1864:	22040000 	andcs	r0, r4, #0
    1868:	00525242 	subseq	r5, r2, r2, asr #4
    186c:	11029a09 	tstne	r2, r9, lsl #20
    1870:	0000008e 	andeq	r0, r0, lr, lsl #1
    1874:	52432208 	subpl	r2, r3, #8, 4	; 0x80000000
    1878:	9b090031 	blls	241944 <_Min_Stack_Size+0x241544>
    187c:	008e1102 	addeq	r1, lr, r2, lsl #2
    1880:	220c0000 	andcs	r0, ip, #0
    1884:	00325243 	eorseq	r5, r2, r3, asr #4
    1888:	11029c09 	tstne	r2, r9, lsl #24
    188c:	0000008e 	andeq	r0, r0, lr, lsl #1
    1890:	52432210 	subpl	r2, r3, #16, 4
    1894:	9d090033 	stcls	0, cr0, [r9, #-204]	; 0xffffff34
    1898:	008e1102 	addeq	r1, lr, r2, lsl #2
    189c:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    18a0:	000009d7 	ldrdeq	r0, [r0], -r7
    18a4:	11029e09 	tstne	r2, r9, lsl #28
    18a8:	0000008e 	andeq	r0, r0, lr, lsl #1
    18ac:	d0070018 	andle	r0, r7, r8, lsl r0
    18b0:	0900000a 	stmdbeq	r0, {r1, r3}
    18b4:	1303029f 	movwne	r0, #12959	; 0x329f
    18b8:	2300000a 	movwcs	r0, #10
    18bc:	00630107 	rsbeq	r0, r3, r7, lsl #2
    18c0:	280a0000 	stmdacs	sl, {}	; <UNPREDICTABLE>
    18c4:	000ab201 	andeq	fp, sl, r1, lsl #4
    18c8:	03692400 	cmneq	r9, #0, 8
    18cc:	24000000 	strcs	r0, [r0], #-0
    18d0:	000006f1 	strdeq	r0, [r0], -r1
    18d4:	005c2401 	subseq	r2, ip, r1, lsl #8
    18d8:	24020000 	strcs	r0, [r2], #-0
    18dc:	000002c9 	andeq	r0, r0, r9, asr #5
    18e0:	07230003 	streq	r0, [r3, -r3]!
    18e4:	00006301 	andeq	r6, r0, r1, lsl #6
    18e8:	01330a00 	teqeq	r3, r0, lsl #20
    18ec:	00000acd 	andeq	r0, r0, sp, asr #21
    18f0:	000ce524 	andeq	lr, ip, r4, lsr #10
    18f4:	21240000 			; <UNDEFINED> instruction: 0x21240000
    18f8:	0100000b 	tsteq	r0, fp
    18fc:	09e50300 	stmibeq	r5!, {r8, r9}^
    1900:	360a0000 	strcc	r0, [sl], -r0
    1904:	000ab203 	andeq	fp, sl, r3, lsl #4
    1908:	0b300c00 	bleq	c04910 <_Min_Stack_Size+0xc04510>
    190c:	0b7f0931 	bleq	1fc3dd8 <_Min_Stack_Size+0x1fc39d8>
    1910:	910d0000 	mrsls	r0, (UNDEF: 13)
    1914:	0b00000b 	bleq	1948 <_Min_Stack_Size+0x1548>
    1918:	00820c33 	addeq	r0, r2, r3, lsr ip
    191c:	0d000000 	stceq	0, cr0, [r0, #-0]
    1920:	00000a5c 	andeq	r0, r0, ip, asr sl
    1924:	820c360b 	andhi	r3, ip, #11534336	; 0xb00000
    1928:	04000000 	streq	r0, [r0], #-0
    192c:	000a150d 	andeq	r1, sl, sp, lsl #10
    1930:	0c3a0b00 			; <UNDEFINED> instruction: 0x0c3a0b00
    1934:	00000082 	andeq	r0, r0, r2, lsl #1
    1938:	0c1c0d08 	ldceq	13, cr0, [ip], {8}
    193c:	3d0b0000 	stccc	0, cr0, [fp, #-0]
    1940:	0000820c 	andeq	r8, r0, ip, lsl #4
    1944:	5d0d0c00 	stcpl	12, cr0, [sp, #-0]
    1948:	0b00000c 	bleq	1980 <_Min_Stack_Size+0x1580>
    194c:	00820c40 	addeq	r0, r2, r0, asr #24
    1950:	0d100000 	ldceq	0, cr0, [r0, #-0]
    1954:	00000abf 			; <UNDEFINED> instruction: 0x00000abf
    1958:	820c430b 	andhi	r4, ip, #738197504	; 0x2c000000
    195c:	14000000 	strne	r0, [r0], #-0
    1960:	000be70d 	andeq	lr, fp, sp, lsl #14
    1964:	0c460b00 	mcrreq	11, 0, r0, r6, cr0
    1968:	00000082 	andeq	r0, r0, r2, lsl #1
    196c:	17fd0d18 			; <UNDEFINED> instruction: 0x17fd0d18
    1970:	4b0b0000 	blmi	2c1978 <_Min_Stack_Size+0x2c1578>
    1974:	0000820c 	andeq	r8, r0, ip, lsl #4
    1978:	e30d1c00 	movw	r1, #56320	; 0xdc00
    197c:	0b00000b 	bleq	19b0 <_Min_Stack_Size+0x15b0>
    1980:	00820c4e 	addeq	r0, r2, lr, asr #24
    1984:	0d200000 	stceq	0, cr0, [r0, #-0]
    1988:	00000bf7 	strdeq	r0, [r0], -r7
    198c:	820c530b 	andhi	r5, ip, #738197504	; 0x2c000000
    1990:	24000000 	strcs	r0, [r0], #-0
    1994:	00095f0d 	andeq	r5, r9, sp, lsl #30
    1998:	0c560b00 	mrrceq	11, 0, r0, r6, cr0
    199c:	00000082 	andeq	r0, r0, r2, lsl #1
    19a0:	0d2b0d28 	stceq	13, cr0, [fp, #-160]!	; 0xffffff60
    19a4:	5c0b0000 	stcpl	0, cr0, [fp], {-0}
    19a8:	0000820c 	andeq	r8, r0, ip, lsl #4
    19ac:	03002c00 	movweq	r2, #3072	; 0xc00
    19b0:	0000093c 	andeq	r0, r0, ip, lsr r9
    19b4:	d902610b 	stmdble	r2, {r0, r1, r3, r8, sp, lr}
    19b8:	2300000a 	movwcs	r0, #10
    19bc:	00630107 	rsbeq	r0, r3, r7, lsl #2
    19c0:	680b0000 	stmdavs	fp, {}	; <UNPREDICTABLE>
    19c4:	000bbe01 	andeq	fp, fp, r1, lsl #28
    19c8:	09682400 	stmdbeq	r8!, {sl, sp}^
    19cc:	24000000 	strcs	r0, [r0], #-0
    19d0:	00000ade 	ldrdeq	r0, [r0], -lr
    19d4:	094c2401 	stmdbeq	ip, {r0, sl, sp}^
    19d8:	24020000 	strcs	r0, [r2], #-0
    19dc:	00000c42 	andeq	r0, r0, r2, asr #24
    19e0:	0a1f2403 	beq	7ca9f4 <_Min_Stack_Size+0x7ca5f4>
    19e4:	24040000 	strcs	r0, [r4], #-0
    19e8:	00000aa1 	andeq	r0, r0, r1, lsr #21
    19ec:	a5030005 	strge	r0, [r3, #-5]
    19f0:	0b00000b 	bleq	1a24 <_Min_Stack_Size+0x1624>
    19f4:	0b8b026f 	bleq	fe2c23b8 <__StackLimit+0xde2a23b8>
    19f8:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
    19fc:	0f00000b 	svceq	0x0000000b
    1a00:	00000bcf 	andeq	r0, r0, pc, asr #23
    1a04:	108b0b60 	addne	r0, fp, r0, ror #22
    1a08:	00000c93 	muleq	r0, r3, ip
    1a0c:	000b5f0d 	andeq	r5, fp, sp, lsl #30
    1a10:	1f8d0b00 	svcne	0x008d0b00
    1a14:	00000c93 	muleq	r0, r3, ip
    1a18:	1f870d00 	svcne	0x00870d00
    1a1c:	8f0b0000 	svchi	0x000b0000
    1a20:	000b7f1e 	andeq	r7, fp, lr, lsl pc
    1a24:	570d0400 	strpl	r0, [sp, -r0, lsl #8]
    1a28:	0b00000a 	bleq	1a58 <_Min_Stack_Size+0x1658>
    1a2c:	0acd1e91 	beq	ff349478 <__StackLimit+0xdf329478>
    1a30:	0d340000 	ldceq	0, cr0, [r4, #-0]
    1a34:	000002dd 	ldrdeq	r0, [r0], -sp
    1a38:	ca1e930b 	bgt	7a666c <_Min_Stack_Size+0x7a626c>
    1a3c:	3500000b 	strcc	r0, [r0, #-11]
    1a40:	000a6d0d 	andeq	r6, sl, sp, lsl #26
    1a44:	1f950b00 	svcne	0x00950b00
    1a48:	0000013d 	andeq	r0, r0, sp, lsr r1
    1a4c:	0d1a0d38 	ldceq	13, cr0, [sl, #-224]	; 0xffffff20
    1a50:	970b0000 	strls	r0, [fp, -r0]
    1a54:	000caa21 	andeq	sl, ip, r1, lsr #20
    1a58:	f50d3c00 			; <UNDEFINED> instruction: 0xf50d3c00
    1a5c:	0b000009 	bleq	1a88 <_Min_Stack_Size+0x1688>
    1a60:	0caa2199 	stfeqs	f2, [sl], #612	; 0x264
    1a64:	0d400000 	stcleq	0, cr0, [r0, #-0]
    1a68:	00000989 	andeq	r0, r0, r9, lsl #19
    1a6c:	aa219b0b 	bge	8686a0 <_Min_Stack_Size+0x8682a0>
    1a70:	4400000c 	strmi	r0, [r0], #-12
    1a74:	000b7a0d 	andeq	r7, fp, sp, lsl #20
    1a78:	219d0b00 	orrscs	r0, sp, r0, lsl #22
    1a7c:	00000caa 	andeq	r0, r0, sl, lsr #25
    1a80:	0b680d48 	bleq	1a04fa8 <_Min_Stack_Size+0x1a04ba8>
    1a84:	9f0b0000 	svcls	0x000b0000
    1a88:	000caa21 	andeq	sl, ip, r1, lsr #20
    1a8c:	080d4c00 	stmdaeq	sp, {sl, fp, lr}
    1a90:	0b00000d 	bleq	1acc <_Min_Stack_Size+0x16cc>
    1a94:	0caa21a1 	stfeqs	f2, [sl], #644	; 0x284
    1a98:	0d500000 	ldcleq	0, cr0, [r0, #-0]
    1a9c:	00000ab5 			; <UNDEFINED> instruction: 0x00000ab5
    1aa0:	8e1ea30b 	cdphi	3, 1, cr10, cr14, cr11, {0}
    1aa4:	54000000 	strpl	r0, [r0], #-0
    1aa8:	000a450d 	andeq	r4, sl, sp, lsl #10
    1aac:	1ea50b00 	vfmane.f64	d0, d5, d0
    1ab0:	00000082 	andeq	r0, r0, r2, lsl #1
    1ab4:	0a7f0d58 	beq	1fc501c <_Min_Stack_Size+0x1fc4c1c>
    1ab8:	a70b0000 	strge	r0, [fp, -r0]
    1abc:	0000821e 	andeq	r8, r0, lr, lsl r2
    1ac0:	11005c00 	tstne	r0, r0, lsl #24
    1ac4:	000a0604 	andeq	r0, sl, r4, lsl #12
    1ac8:	0ca41f00 	stceq	15, cr1, [r4]
    1acc:	a4160000 	ldrge	r0, [r6], #-0
    1ad0:	0000000c 	andeq	r0, r0, ip
    1ad4:	0bcf0411 	bleq	ff3c2b20 <__StackLimit+0xdf3a2b20>
    1ad8:	04110000 	ldreq	r0, [r1], #-0
    1adc:	00000c99 	muleq	r0, r9, ip
    1ae0:	000bd103 	andeq	sp, fp, r3, lsl #2
    1ae4:	02a90b00 	adceq	r0, r9, #0, 22
    1ae8:	00000bcf 	andeq	r0, r0, pc, asr #23
    1aec:	0cb00411 	cfldrseq	mvf0, [r0], #68	; 0x44
    1af0:	04110000 	ldreq	r0, [r1], #-0
    1af4:	00000052 	andeq	r0, r0, r2, asr r0
    1af8:	2f0c1c0c 	svccs	0x000c1c0c
    1afc:	000d2d09 	andeq	r2, sp, r9, lsl #26
    1b00:	09dc0d00 	ldmibeq	ip, {r8, sl, fp}^
    1b04:	310c0000 	mrscc	r0, (UNDEF: 12)
    1b08:	0000820c 	andeq	r8, r0, ip, lsl #4
    1b0c:	ec0d0000 	stc	0, cr0, [sp], {-0}
    1b10:	0c00000b 	stceq	0, cr0, [r0], {11}
    1b14:	00820c37 	addeq	r0, r2, r7, lsr ip
    1b18:	0d040000 	stceq	0, cr0, [r4, #-0]
    1b1c:	00000a3c 	andeq	r0, r0, ip, lsr sl
    1b20:	820c3a0c 	andhi	r3, ip, #12, 20	; 0xc000
    1b24:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1b28:	000c230d 	andeq	r2, ip, sp, lsl #6
    1b2c:	0c3d0c00 	ldceq	12, cr0, [sp], #-0
    1b30:	00000082 	andeq	r0, r0, r2, lsl #1
    1b34:	0be70d0c 	bleq	ff9c4f6c <__StackLimit+0xdf9a4f6c>
    1b38:	440c0000 	strmi	r0, [ip], #-0
    1b3c:	0000820c 	andeq	r8, r0, ip, lsl #4
    1b40:	b00d1000 	andlt	r1, sp, r0
    1b44:	0c00000c 	stceq	0, cr0, [r0], {12}
    1b48:	00820c47 	addeq	r0, r2, r7, asr #24
    1b4c:	0d140000 	ldceq	0, cr0, [r4, #-0]
    1b50:	0000097c 	andeq	r0, r0, ip, ror r9
    1b54:	820c4a0c 	andhi	r4, ip, #12, 20	; 0xc000
    1b58:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1b5c:	0c710300 	ldcleq	3, cr0, [r1], #-0
    1b60:	4c0c0000 	stcmi	0, cr0, [ip], {-0}
    1b64:	000cc803 	andeq	ip, ip, r3, lsl #16
    1b68:	01072300 	mrseq	r2, SP_und
    1b6c:	00000063 	andeq	r0, r0, r3, rrx
    1b70:	7801760c 	stmdavc	r1, {r2, r3, r9, sl, ip, sp, lr}
    1b74:	2400000d 	strcs	r0, [r0], #-13
    1b78:	000009a8 	andeq	r0, r0, r8, lsr #19
    1b7c:	0b4a2400 	bleq	128ab84 <_Min_Stack_Size+0x128a784>
    1b80:	24200000 	strtcs	r0, [r0], #-0
    1b84:	00000cd1 	ldrdeq	r0, [r0], -r1
    1b88:	0b2c2424 	bleq	b0ac20 <_Min_Stack_Size+0xb0a820>
    1b8c:	24210000 	strtcs	r0, [r1], #-0
    1b90:	00000c05 	andeq	r0, r0, r5, lsl #24
    1b94:	09bd2422 	ldmibeq	sp!, {r1, r5, sl, sp}
    1b98:	24230000 	strtcs	r0, [r3], #-0
    1b9c:	00000c99 	muleq	r0, r9, ip
    1ba0:	0bba24a0 	bleq	fee8ae28 <__StackLimit+0xdee6ae28>
    1ba4:	00e00000 	rsceq	r0, r0, r0
    1ba8:	00091a03 	andeq	r1, r9, r3, lsl #20
    1bac:	03880c00 	orreq	r0, r8, #0, 24
    1bb0:	00000d39 	andeq	r0, r0, r9, lsr sp
    1bb4:	000d7804 	andeq	r7, sp, r4, lsl #16
    1bb8:	0c820300 	stceq	3, cr0, [r2], {0}
    1bbc:	910c0000 	mrsls	r0, (UNDEF: 12)
    1bc0:	00008212 	andeq	r8, r0, r2, lsl r2
    1bc4:	0d890400 	cfstrseq	mvf0, [r9]
    1bc8:	ff0f0000 			; <UNDEFINED> instruction: 0xff0f0000
    1bcc:	4400000a 	strmi	r0, [r0], #-10
    1bd0:	6b10960c 	blvs	427408 <_Min_Stack_Size+0x427008>
    1bd4:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    1bd8:	00000b5f 	andeq	r0, r0, pc, asr fp
    1bdc:	6b22980c 	blvs	8a7c14 <_Min_Stack_Size+0x8a7814>
    1be0:	0000000e 	andeq	r0, r0, lr
    1be4:	001f870d 	andseq	r8, pc, sp, lsl #14
    1be8:	219a0c00 	orrscs	r0, sl, r0, lsl #24
    1bec:	00000d2d 	andeq	r0, r0, sp, lsr #26
    1bf0:	0a0a0d04 	beq	285008 <_Min_Stack_Size+0x284c08>
    1bf4:	9c0c0000 	stcls	0, cr0, [ip], {-0}
    1bf8:	000cc222 	andeq	ip, ip, r2, lsr #4
    1bfc:	960d2000 	strls	r2, [sp], -r0
    1c00:	0c00000a 	stceq	0, cr0, [r0], {10}
    1c04:	006a219e 	mlseq	sl, lr, r1, r2
    1c08:	0d240000 	stceq	0, cr0, [r4, #-0]
    1c0c:	0000099c 	muleq	r0, ip, r9
    1c10:	7621a00c 	strtvc	sl, [r1], -ip
    1c14:	26000000 	strcs	r0, [r0], -r0
    1c18:	000cba0d 	andeq	fp, ip, sp, lsl #20
    1c1c:	22a20c00 	adccs	r0, r2, #0, 24
    1c20:	00000cc2 	andeq	r0, r0, r2, asr #25
    1c24:	0a8b0d28 	beq	fe2c50cc <__StackLimit+0xde2a50cc>
    1c28:	a40c0000 	strge	r0, [ip], #-0
    1c2c:	00006a21 	andeq	r6, r0, r1, lsr #20
    1c30:	c50d2c00 	strgt	r2, [sp, #-3072]	; 0xfffff400
    1c34:	0c00000c 	stceq	0, cr0, [r0], {12}
    1c38:	007621a6 	rsbseq	r2, r6, r6, lsr #3
    1c3c:	0d2e0000 	stceq	0, cr0, [lr, #-0]
    1c40:	00000cfa 	strdeq	r0, [r0], -sl
    1c44:	951fa80c 	ldrls	sl, [pc, #-2060]	; 1440 <_Min_Stack_Size+0x1040>
    1c48:	3000000d 	andcc	r0, r0, sp
    1c4c:	000b430d 	andeq	r4, fp, sp, lsl #6
    1c50:	22aa0c00 	adccs	r0, sl, #0, 24
    1c54:	00000cbc 			; <UNDEFINED> instruction: 0x00000cbc
    1c58:	0a660d34 	beq	1985130 <_Min_Stack_Size+0x1984d30>
    1c5c:	ac0c0000 	stcge	0, cr0, [ip], {-0}
    1c60:	000cbc22 	andeq	fp, ip, r2, lsr #24
    1c64:	570d3800 	strpl	r3, [sp, -r0, lsl #16]
    1c68:	0c00000a 	stceq	0, cr0, [r0], {10}
    1c6c:	0acd21ae 	beq	ff34a32c <__StackLimit+0xdf32a32c>
    1c70:	0d3c0000 	ldceq	0, cr0, [ip, #-0]
    1c74:	00000930 	andeq	r0, r0, r0, lsr r9
    1c78:	8421b00c 	strthi	fp, [r1], #-12
    1c7c:	3d00000d 	stccc	0, cr0, [r0, #-52]	; 0xffffffcc
    1c80:	000cf20d 	andeq	pc, ip, sp, lsl #4
    1c84:	21b40c00 			; <UNDEFINED> instruction: 0x21b40c00
    1c88:	00000d84 	andeq	r0, r0, r4, lsl #27
    1c8c:	0ab50d3e 	beq	fed4518c <__StackLimit+0xded2518c>
    1c90:	b70c0000 	strlt	r0, [ip, -r0]
    1c94:	00008e21 	andeq	r8, r0, r1, lsr #28
    1c98:	11004000 	mrsne	r4, (UNDEF: 0)
    1c9c:	000a7e04 	andeq	r7, sl, r4, lsl #28
    1ca0:	0b010300 	bleq	428a8 <_Min_Stack_Size+0x424a8>
    1ca4:	c90c0000 	stmdbgt	ip, {}	; <UNPREDICTABLE>
    1ca8:	000d9a03 	andeq	r9, sp, r3, lsl #20
    1cac:	01072300 	mrseq	r2, SP_und
    1cb0:	00000063 	andeq	r0, r0, r3, rrx
    1cb4:	a401330d 	strge	r3, [r1], #-781	; 0xfffffcf3
    1cb8:	2400000e 	strcs	r0, [r0], #-14
    1cbc:	00000846 	andeq	r0, r0, r6, asr #16
    1cc0:	073d2464 	ldreq	r2, [sp, -r4, ror #8]!
    1cc4:	240a0000 	strcs	r0, [sl], #-0
    1cc8:	00000356 	andeq	r0, r0, r6, asr r3
    1ccc:	054c2401 	strbeq	r2, [ip, #-1025]	; 0xfffffbff
    1cd0:	00010000 	andeq	r0, r1, r0
    1cd4:	00001403 	andeq	r1, r0, r3, lsl #8
    1cd8:	03380d00 	teqeq	r8, #0, 26
    1cdc:	00000e7d 	andeq	r0, r0, sp, ror lr
    1ce0:	0002fe21 	andeq	pc, r2, r1, lsr #28
    1ce4:	16cd0d00 	strbne	r0, [sp], r0, lsl #26
    1ce8:	0000008e 	andeq	r0, r0, lr, lsl #1
    1cec:	0003c021 	andeq	ip, r3, r1, lsr #32
    1cf0:	11ce0d00 	bicne	r0, lr, r0, lsl #26
    1cf4:	00000082 	andeq	r0, r0, r2, lsl #1
    1cf8:	0002f321 	andeq	pc, r2, r1, lsr #6
    1cfc:	1ccf0d00 	stclne	13, cr0, [pc], {0}
    1d00:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1d04:	000a7425 	andeq	r7, sl, r5, lsr #8
    1d08:	14050100 	strne	r0, [r5], #-256	; 0xffffff00
    1d0c:	00000e71 	andeq	r0, r0, r1, ror lr
    1d10:	06080305 	streq	r0, [r8], -r5, lsl #6
    1d14:	14262000 	strtne	r2, [r6], #-0
    1d18:	0100000b 	tsteq	r0, fp
    1d1c:	00a1013f 	adceq	r0, r1, pc, lsr r1
    1d20:	00000000 	andeq	r0, r0, r0
    1d24:	001c0000 	andseq	r0, ip, r0
    1d28:	9c010000 	stcls	0, cr0, [r1], {-0}
    1d2c:	00000f0f 	andeq	r0, r0, pc, lsl #30
    1d30:	00686327 	rsbeq	r6, r8, r7, lsr #6
    1d34:	f4084101 	vst4.8	{d4,d6,d8,d10}, [r8], r1
    1d38:	02000005 	andeq	r0, r0, #5
    1d3c:	26007791 			; <UNDEFINED> instruction: 0x26007791
    1d40:	00000af2 	strdeq	r0, [r0], -r2
    1d44:	a1013701 	tstge	r1, r1, lsl #14
    1d48:	74000000 	strvc	r0, [r0], #-0
    1d4c:	2008000f 	andcs	r0, r8, pc
    1d50:	01000000 	mrseq	r0, (UNDEF: 0)
    1d54:	000f389c 	muleq	pc, ip, r8	; <UNPREDICTABLE>
    1d58:	68632800 	stmdavs	r3!, {fp, sp}^
    1d5c:	01370100 	teqeq	r7, r0, lsl #2
    1d60:	000000a1 	andeq	r0, r0, r1, lsr #1
    1d64:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1d68:	000b9929 	andeq	r9, fp, r9, lsr #18
    1d6c:	06160100 	ldreq	r0, [r6], -r0, lsl #2
    1d70:	08000f20 	stmdaeq	r0, {r5, r8, r9, sl, fp}
    1d74:	00000054 	andeq	r0, r0, r4, asr r0
    1d78:	9f009c01 	svcls	0x00009c01
    1d7c:	04000014 	streq	r0, [r0], #-20	; 0xffffffec
    1d80:	0004c700 	andeq	ip, r4, r0, lsl #14
    1d84:	47010400 	strmi	r0, [r1, -r0, lsl #8]
    1d88:	0c000004 	stceq	0, cr0, [r0], {4}
    1d8c:	00000fac 	andeq	r0, r0, ip, lsr #31
    1d90:	000001be 			; <UNDEFINED> instruction: 0x000001be
    1d94:	00000040 	andeq	r0, r0, r0, asr #32
    1d98:	00000000 	andeq	r0, r0, r0
    1d9c:	000004d3 	ldrdeq	r0, [r0], -r3
    1da0:	a9060102 	stmdbge	r6, {r1, r8}
    1da4:	02000007 	andeq	r0, r0, #7
    1da8:	00000502 	andeq	r0, r0, r2, lsl #10
    1dac:	12030000 	andne	r0, r3, #0
    1db0:	0200002c 	andeq	r0, r0, #44	; 0x2c
    1db4:	00441828 	subeq	r1, r4, r8, lsr #16
    1db8:	33040000 	movwcc	r0, #16384	; 0x4000
    1dbc:	02000000 	andeq	r0, r0, #0
    1dc0:	01b50504 			; <UNDEFINED> instruction: 0x01b50504
    1dc4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1dc8:	0001b005 	andeq	fp, r1, r5
    1dcc:	2aca0300 	bcs	ff2829d4 <__StackLimit+0xdf2629d4>
    1dd0:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
    1dd4:	00006318 	andeq	r6, r0, r8, lsl r3
    1dd8:	00520500 	subseq	r0, r2, r0, lsl #10
    1ddc:	01020000 	mrseq	r0, (UNDEF: 2)
    1de0:	0007a708 	andeq	sl, r7, r8, lsl #14
    1de4:	0a330300 	beq	cc29ec <_Min_Stack_Size+0xcc25ec>
    1de8:	31020000 	mrscc	r0, (UNDEF: 2)
    1dec:	00007b19 	andeq	r7, r0, r9, lsl fp
    1df0:	006a0400 	rsbeq	r0, sl, r0, lsl #8
    1df4:	02020000 	andeq	r0, r2, #0
    1df8:	00037707 	andeq	r7, r3, r7, lsl #14
    1dfc:	2b6e0300 	blcs	1b82a04 <_Min_Stack_Size+0x1b82604>
    1e00:	34020000 	strcc	r0, [r2], #-0
    1e04:	00009319 	andeq	r9, r0, r9, lsl r3
    1e08:	00820400 	addeq	r0, r2, r0, lsl #8
    1e0c:	04020000 	streq	r0, [r2], #-0
    1e10:	0000a507 	andeq	sl, r0, r7, lsl #10
    1e14:	07080200 	streq	r0, [r8, -r0, lsl #4]
    1e18:	000000a0 	andeq	r0, r0, r0, lsr #1
    1e1c:	69050406 	stmdbvs	r5, {r1, r2, sl}
    1e20:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    1e24:	00aa0704 	adceq	r0, sl, r4, lsl #14
    1e28:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1e2c:	00071904 	andeq	r1, r7, r4, lsl #18
    1e30:	03e00700 	mvneq	r0, #0, 14
    1e34:	65030000 	strvs	r0, [r3, #-0]
    1e38:	00a81701 	adceq	r1, r8, r1, lsl #14
    1e3c:	62030000 	andvs	r0, r3, #0
    1e40:	04000005 	streq	r0, [r0], #-5
    1e44:	00440e2e 	subeq	r0, r4, lr, lsr #28
    1e48:	fb030000 	blx	c1e52 <_Min_Stack_Size+0xc1a52>
    1e4c:	04000006 	streq	r0, [r0], #-6
    1e50:	00440e74 	subeq	r0, r4, r4, ror lr
    1e54:	04080000 	streq	r0, [r8], #-0
    1e58:	fd03a504 	stc2	5, cr10, [r3, #-16]
    1e5c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1e60:	000003da 	ldrdeq	r0, [r0], -sl
    1e64:	b60ca704 	strlt	sl, [ip], -r4, lsl #14
    1e68:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1e6c:	000002ec 	andeq	r0, r0, ip, ror #5
    1e70:	fd13a804 	ldc2	8, cr10, [r3, #-16]
    1e74:	00000000 	andeq	r0, r0, r0
    1e78:	0000630a 	andeq	r6, r0, sl, lsl #6
    1e7c:	00010d00 	andeq	r0, r1, r0, lsl #26
    1e80:	00a80b00 	adceq	r0, r8, r0, lsl #22
    1e84:	00030000 	andeq	r0, r3, r0
    1e88:	a204080c 	andge	r0, r4, #12, 16	; 0xc0000
    1e8c:	00013109 	andeq	r3, r1, r9, lsl #2
    1e90:	06e30d00 	strbteq	r0, [r3], r0, lsl #26
    1e94:	a4040000 	strge	r0, [r4], #-0
    1e98:	0000a107 	andeq	sl, r0, r7, lsl #2
    1e9c:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    1ea0:	04000008 	streq	r0, [r0], #-8
    1ea4:	00db05a9 	sbcseq	r0, fp, r9, lsr #11
    1ea8:	00040000 	andeq	r0, r4, r0
    1eac:	00066d03 	andeq	r6, r6, r3, lsl #26
    1eb0:	03aa0400 			; <UNDEFINED> instruction: 0x03aa0400
    1eb4:	0000010d 	andeq	r0, r0, sp, lsl #2
    1eb8:	c303040e 	movwgt	r0, #13326	; 0x340e
    1ebc:	05000007 	streq	r0, [r0, #-7]
    1ec0:	00931916 	addseq	r1, r3, r6, lsl r9
    1ec4:	cb030000 	blgt	c1ecc <_Min_Stack_Size+0xc1acc>
    1ec8:	06000005 	streq	r0, [r0], -r5
    1ecc:	00a10d0c 	adceq	r0, r1, ip, lsl #26
    1ed0:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    1ed4:	05000008 	streq	r0, [r0, #-8]
    1ed8:	014b1b23 	cmpeq	fp, r3, lsr #22
    1edc:	9b0f0000 	blls	3c1ee4 <_Min_Stack_Size+0x3c1ae4>
    1ee0:	18000002 	stmdane	r0, {r1}
    1ee4:	bd083405 	cfstrslt	mvf3, [r8, #-20]	; 0xffffffec
    1ee8:	0d000001 	stceq	0, cr0, [r0, #-4]
    1eec:	0000067d 	andeq	r0, r0, sp, ror r6
    1ef0:	bd133605 	ldclt	6, cr3, [r3, #-20]	; 0xffffffec
    1ef4:	00000001 	andeq	r0, r0, r1
    1ef8:	006b5f10 	rsbeq	r5, fp, r0, lsl pc
    1efc:	a1073705 	tstge	r7, r5, lsl #14
    1f00:	04000000 	streq	r0, [r0], #-0
    1f04:	0006c40d 	andeq	ip, r6, sp, lsl #8
    1f08:	0b370500 	bleq	dc3310 <_Min_Stack_Size+0xdc2f10>
    1f0c:	000000a1 	andeq	r0, r0, r1, lsr #1
    1f10:	028d0d08 	addeq	r0, sp, #8, 26	; 0x200
    1f14:	37050000 	strcc	r0, [r5, -r0]
    1f18:	0000a114 	andeq	sl, r0, r4, lsl r1
    1f1c:	9a0d0c00 	bls	344f24 <_Min_Stack_Size+0x344b24>
    1f20:	05000001 	streq	r0, [r0, #-1]
    1f24:	00a11b37 	adceq	r1, r1, r7, lsr fp
    1f28:	10100000 	andsne	r0, r0, r0
    1f2c:	0500785f 	streq	r7, [r0, #-2143]	; 0xfffff7a1
    1f30:	01c30b38 	biceq	r0, r3, r8, lsr fp
    1f34:	00140000 	andseq	r0, r4, r0
    1f38:	01630411 	cmneq	r3, r1, lsl r4
    1f3c:	3f0a0000 	svccc	0x000a0000
    1f40:	d3000001 	movwle	r0, #1
    1f44:	0b000001 	bleq	1f50 <_Min_Stack_Size+0x1b50>
    1f48:	000000a8 	andeq	r0, r0, r8, lsr #1
    1f4c:	d50f0000 	strle	r0, [pc, #-0]	; 1f54 <_Min_Stack_Size+0x1b54>
    1f50:	24000002 	strcs	r0, [r0], #-2
    1f54:	56083c05 	strpl	r3, [r8], -r5, lsl #24
    1f58:	0d000002 	stceq	0, cr0, [r0, #-8]
    1f5c:	00000108 	andeq	r0, r0, r8, lsl #2
    1f60:	a1093e05 	tstge	r9, r5, lsl #28
    1f64:	00000000 	andeq	r0, r0, r0
    1f68:	0007b50d 	andeq	fp, r7, sp, lsl #10
    1f6c:	093f0500 	ldmdbeq	pc!, {r8, sl}	; <UNPREDICTABLE>
    1f70:	000000a1 	andeq	r0, r0, r1, lsr #1
    1f74:	01390d04 	teqeq	r9, r4, lsl #26
    1f78:	40050000 	andmi	r0, r5, r0
    1f7c:	0000a109 	andeq	sl, r0, r9, lsl #2
    1f80:	ca0d0800 	bgt	343f88 <_Min_Stack_Size+0x343b88>
    1f84:	05000008 	streq	r0, [r0, #-8]
    1f88:	00a10941 	adceq	r0, r1, r1, asr #18
    1f8c:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    1f90:	00000538 	andeq	r0, r0, r8, lsr r5
    1f94:	a1094205 	tstge	r9, r5, lsl #4
    1f98:	10000000 	andne	r0, r0, r0
    1f9c:	0004210d 	andeq	r2, r4, sp, lsl #2
    1fa0:	09430500 	stmdbeq	r3, {r8, sl}^
    1fa4:	000000a1 	andeq	r0, r0, r1, lsr #1
    1fa8:	07f60d14 			; <UNDEFINED> instruction: 0x07f60d14
    1fac:	44050000 	strmi	r0, [r5], #-0
    1fb0:	0000a109 	andeq	sl, r0, r9, lsl #2
    1fb4:	400d1800 	andmi	r1, sp, r0, lsl #16
    1fb8:	05000006 	streq	r0, [r0, #-6]
    1fbc:	00a10945 	adceq	r0, r1, r5, asr #18
    1fc0:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    1fc4:	0000088c 	andeq	r0, r0, ip, lsl #17
    1fc8:	a1094605 	tstge	r9, r5, lsl #12
    1fcc:	20000000 	andcs	r0, r0, r0
    1fd0:	01481200 	mrseq	r1, (UNDEF: 104)
    1fd4:	01080000 	mrseq	r0, (UNDEF: 8)
    1fd8:	9b084f05 	blls	215bf4 <_Min_Stack_Size+0x2157f4>
    1fdc:	0d000002 	stceq	0, cr0, [r0, #-8]
    1fe0:	0000026d 	andeq	r0, r0, sp, ror #4
    1fe4:	9b0a5005 	blls	296000 <_Min_Stack_Size+0x295c00>
    1fe8:	00000002 	andeq	r0, r0, r2
    1fec:	0005fe0d 	andeq	pc, r5, sp, lsl #28
    1ff0:	09510500 	ldmdbeq	r1, {r8, sl}^
    1ff4:	0000029b 	muleq	r0, fp, r2
    1ff8:	07961380 	ldreq	r1, [r6, r0, lsl #7]
    1ffc:	53050000 	movwpl	r0, #20480	; 0x5000
    2000:	00013f0a 	andeq	r3, r1, sl, lsl #30
    2004:	13010000 	movwne	r0, #4096	; 0x1000
    2008:	00000192 	muleq	r0, r2, r1
    200c:	3f0a5605 	svccc	0x000a5605
    2010:	04000001 	streq	r0, [r0], #-1
    2014:	3d0a0001 	stccc	0, cr0, [sl, #-4]
    2018:	ab000001 	blge	2024 <_Min_Stack_Size+0x1c24>
    201c:	0b000002 	bleq	202c <_Min_Stack_Size+0x1c2c>
    2020:	000000a8 	andeq	r0, r0, r8, lsr #1
    2024:	7612001f 			; <UNDEFINED> instruction: 0x7612001f
    2028:	9000004a 	andls	r0, r0, sl, asr #32
    202c:	08620501 	stmdaeq	r2!, {r0, r8, sl}^
    2030:	000002ee 	andeq	r0, r0, lr, ror #5
    2034:	00067d0d 	andeq	r7, r6, sp, lsl #26
    2038:	12630500 	rsbne	r0, r3, #0, 10
    203c:	000002ee 	andeq	r0, r0, lr, ror #5
    2040:	068e0d00 	streq	r0, [lr], r0, lsl #26
    2044:	64050000 	strvs	r0, [r5], #-0
    2048:	0000a106 	andeq	sl, r0, r6, lsl #2
    204c:	880d0400 	stmdahi	sp, {sl}
    2050:	05000002 	streq	r0, [r0, #-2]
    2054:	02f40966 	rscseq	r0, r4, #1671168	; 0x198000
    2058:	0d080000 	stceq	0, cr0, [r8, #-0]
    205c:	00000148 	andeq	r0, r0, r8, asr #2
    2060:	561e6705 	ldrpl	r6, [lr], -r5, lsl #14
    2064:	88000002 	stmdahi	r0, {r1}
    2068:	ab041100 	blge	106470 <_Min_Stack_Size+0x106070>
    206c:	0a000002 	beq	207c <_Min_Stack_Size+0x1c7c>
    2070:	00000304 	andeq	r0, r0, r4, lsl #6
    2074:	00000304 	andeq	r0, r0, r4, lsl #6
    2078:	0000a80b 	andeq	sl, r0, fp, lsl #16
    207c:	11001f00 	tstne	r0, r0, lsl #30
    2080:	00030a04 	andeq	r0, r3, r4, lsl #20
    2084:	4a0f1400 	bmi	3c708c <_Min_Stack_Size+0x3c6c8c>
    2088:	08000006 	stmdaeq	r0, {r1, r2}
    208c:	33087a05 	movwcc	r7, #35333	; 0x8a05
    2090:	0d000003 	stceq	0, cr0, [r0, #-12]
    2094:	00000133 	andeq	r0, r0, r3, lsr r1
    2098:	33117b05 	tstcc	r1, #5120	; 0x1400
    209c:	00000003 	andeq	r0, r0, r3
    20a0:	00072e0d 	andeq	r2, r7, sp, lsl #28
    20a4:	067c0500 	ldrbteq	r0, [ip], -r0, lsl #10
    20a8:	000000a1 	andeq	r0, r0, r1, lsr #1
    20ac:	04110004 	ldreq	r0, [r1], #-4
    20b0:	00000063 	andeq	r0, r0, r3, rrx
    20b4:	0000280f 	andeq	r2, r0, pc, lsl #16
    20b8:	ba056800 	blt	15c0c0 <_Min_Stack_Size+0x15bcc0>
    20bc:	00047c08 	andeq	r7, r4, r8, lsl #24
    20c0:	705f1000 	subsvc	r1, pc, r0
    20c4:	12bb0500 	adcsne	r0, fp, #0, 10
    20c8:	00000333 	andeq	r0, r0, r3, lsr r3
    20cc:	725f1000 	subsvc	r1, pc, #0
    20d0:	07bc0500 	ldreq	r0, [ip, r0, lsl #10]!
    20d4:	000000a1 	andeq	r0, r0, r1, lsr #1
    20d8:	775f1004 	ldrbvc	r1, [pc, -r4]
    20dc:	07bd0500 	ldreq	r0, [sp, r0, lsl #10]!
    20e0:	000000a1 	andeq	r0, r0, r1, lsr #1
    20e4:	018b0d08 	orreq	r0, fp, r8, lsl #26
    20e8:	be050000 	cdplt	0, 0, cr0, cr5, cr0, {0}
    20ec:	00002c09 	andeq	r2, r0, r9, lsl #24
    20f0:	0d0d0c00 	stceq	12, cr0, [sp, #-0]
    20f4:	05000003 	streq	r0, [r0, #-3]
    20f8:	002c09bf 	strhteq	r0, [ip], -pc
    20fc:	100e0000 	andne	r0, lr, r0
    2100:	0066625f 	rsbeq	r6, r6, pc, asr r2
    2104:	0b11c005 	bleq	472120 <_Min_Stack_Size+0x471d20>
    2108:	10000003 	andne	r0, r0, r3
    210c:	0000b70d 	andeq	fp, r0, sp, lsl #14
    2110:	07c10500 	strbeq	r0, [r1, r0, lsl #10]
    2114:	000000a1 	andeq	r0, r0, r1, lsr #1
    2118:	01690d18 	cmneq	r9, r8, lsl sp
    211c:	c8050000 	stmdagt	r5, {}	; <UNPREDICTABLE>
    2120:	00013d0a 	andeq	r3, r1, sl, lsl #26
    2124:	bd0d1c00 	stclt	12, cr1, [sp, #-0]
    2128:	05000033 	streq	r0, [r0, #-51]	; 0xffffffcd
    212c:	06001dca 	streq	r1, [r0], -sl, asr #27
    2130:	0d200000 	stceq	0, cr0, [r0, #-0]
    2134:	00003336 	andeq	r3, r0, r6, lsr r3
    2138:	2a1dcc05 	bcs	775154 <_Min_Stack_Size+0x774d54>
    213c:	24000006 	strcs	r0, [r0], #-6
    2140:	0006eb0d 	andeq	lr, r6, sp, lsl #22
    2144:	0dcf0500 	cfstr64eq	mvdx0, [pc]	; 214c <_Min_Stack_Size+0x1d4c>
    2148:	0000064e 	andeq	r0, r0, lr, asr #12
    214c:	08a60d28 	stmiaeq	r6!, {r3, r5, r8, sl, fp}
    2150:	d0050000 	andle	r0, r5, r0
    2154:	00066809 	andeq	r6, r6, r9, lsl #16
    2158:	5f102c00 	svcpl	0x00102c00
    215c:	05006275 	streq	r6, [r0, #-629]	; 0xfffffd8b
    2160:	030b11d3 	movweq	r1, #45523	; 0xb1d3
    2164:	10300000 	eorsne	r0, r0, r0
    2168:	0070755f 	rsbseq	r7, r0, pc, asr r5
    216c:	3312d405 	tstcc	r2, #83886080	; 0x5000000
    2170:	38000003 	stmdacc	r0, {r0, r1}
    2174:	72755f10 	rsbsvc	r5, r5, #16, 30	; 0x40
    2178:	07d50500 	ldrbeq	r0, [r5, r0, lsl #10]
    217c:	000000a1 	andeq	r0, r0, r1, lsr #1
    2180:	012d0d3c 			; <UNDEFINED> instruction: 0x012d0d3c
    2184:	d8050000 	stmdale	r5, {}	; <UNPREDICTABLE>
    2188:	00066e11 	andeq	r6, r6, r1, lsl lr
    218c:	760d4000 	strvc	r4, [sp], -r0
    2190:	05000008 	streq	r0, [r0, #-8]
    2194:	067e11d9 			; <UNDEFINED> instruction: 0x067e11d9
    2198:	10430000 	subne	r0, r3, r0
    219c:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    21a0:	0b11dc05 	bleq	4791bc <_Min_Stack_Size+0x478dbc>
    21a4:	44000003 	strmi	r0, [r0], #-3
    21a8:	0007250d 	andeq	r2, r7, sp, lsl #10
    21ac:	07df0500 	ldrbeq	r0, [pc, r0, lsl #10]
    21b0:	000000a1 	andeq	r0, r0, r1, lsr #1
    21b4:	04380d4c 	ldrteq	r0, [r8], #-3404	; 0xfffff2b4
    21b8:	e0050000 	and	r0, r5, r0
    21bc:	0000c30a 	andeq	ip, r0, sl, lsl #6
    21c0:	aa0d5000 	bge	3561c8 <_Min_Stack_Size+0x355dc8>
    21c4:	0500004b 	streq	r0, [r0, #-75]	; 0xffffffb5
    21c8:	049a12e3 	ldreq	r1, [sl], #739	; 0x2e3
    21cc:	0d540000 	ldcleq	0, cr0, [r4, #-0]
    21d0:	000003f1 	strdeq	r0, [r0], -r1
    21d4:	570ce705 	strpl	lr, [ip, -r5, lsl #14]
    21d8:	58000001 	stmdapl	r0, {r0}
    21dc:	0002e30d 	andeq	lr, r2, sp, lsl #6
    21e0:	0ee90500 	cdpeq	5, 14, cr0, cr9, cr0, {0}
    21e4:	00000131 	andeq	r0, r0, r1, lsr r1
    21e8:	06510d5c 			; <UNDEFINED> instruction: 0x06510d5c
    21ec:	ea050000 	b	1421f4 <_Min_Stack_Size+0x141df4>
    21f0:	0000a109 	andeq	sl, r0, r9, lsl #2
    21f4:	15006400 	strne	r6, [r0, #-1024]	; 0xfffffc00
    21f8:	000000a1 	andeq	r0, r0, r1, lsr #1
    21fc:	0000049a 	muleq	r0, sl, r4
    2200:	00049a16 	andeq	r9, r4, r6, lsl sl
    2204:	013d1600 	teqeq	sp, r0, lsl #12
    2208:	ee160000 	cdp	0, 1, cr0, cr6, cr0, {0}
    220c:	16000005 	strne	r0, [r0], -r5
    2210:	000000a1 	andeq	r0, r0, r1, lsr #1
    2214:	a5041100 	strge	r1, [r4, #-256]	; 0xffffff00
    2218:	05000004 	streq	r0, [r0, #-4]
    221c:	0000049a 	muleq	r0, sl, r4
    2220:	0006cc17 	andeq	ip, r6, r7, lsl ip
    2224:	05042800 	streq	r2, [r4, #-2048]	; 0xfffff800
    2228:	ee080265 	cdp	2, 0, cr0, cr8, cr5, {3}
    222c:	18000005 	stmdane	r0, {r0, r2}
    2230:	0000062c 	andeq	r0, r0, ip, lsr #12
    2234:	07026705 	streq	r6, [r2, -r5, lsl #14]
    2238:	000000a1 	andeq	r0, r0, r1, lsr #1
    223c:	08061800 	stmdaeq	r6, {fp, ip}
    2240:	6c050000 	stcvs	0, cr0, [r5], {-0}
    2244:	06da0b02 	ldrbeq	r0, [sl], r2, lsl #22
    2248:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    224c:	000007ee 	andeq	r0, r0, lr, ror #15
    2250:	14026c05 	strne	r6, [r2], #-3077	; 0xfffff3fb
    2254:	000006da 	ldrdeq	r0, [r0], -sl
    2258:	02931808 	addseq	r1, r3, #8, 16	; 0x80000
    225c:	6c050000 	stcvs	0, cr0, [r5], {-0}
    2260:	06da1e02 	ldrbeq	r1, [sl], r2, lsl #28
    2264:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
    2268:	00000689 	andeq	r0, r0, r9, lsl #13
    226c:	08026e05 	stmdaeq	r2, {r0, r2, r9, sl, fp, sp, lr}
    2270:	000000a1 	andeq	r0, r0, r1, lsr #1
    2274:	00421810 	subeq	r1, r2, r0, lsl r8
    2278:	6f050000 	svcvs	0x00050000
    227c:	08da0802 	ldmeq	sl, {r1, fp}^
    2280:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    2284:	000006ab 	andeq	r0, r0, fp, lsr #13
    2288:	07027205 	streq	r7, [r2, -r5, lsl #4]
    228c:	000000a1 	andeq	r0, r0, r1, lsr #1
    2290:	069b1830 			; <UNDEFINED> instruction: 0x069b1830
    2294:	73050000 	movwvc	r0, #20480	; 0x5000
    2298:	08ef1602 	stmiaeq	pc!, {r1, r9, sl, ip}^	; <UNPREDICTABLE>
    229c:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
    22a0:	00000541 	andeq	r0, r0, r1, asr #10
    22a4:	07027505 	streq	r7, [r2, -r5, lsl #10]
    22a8:	000000a1 	andeq	r0, r0, r1, lsr #1
    22ac:	07e41838 			; <UNDEFINED> instruction: 0x07e41838
    22b0:	77050000 	strvc	r0, [r5, -r0]
    22b4:	09000a02 	stmdbeq	r0, {r1, r9, fp}
    22b8:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
    22bc:	000003fd 	strdeq	r0, [r0], -sp
    22c0:	13027a05 	movwne	r7, #10757	; 0x2a05
    22c4:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
    22c8:	01a61840 			; <UNDEFINED> instruction: 0x01a61840
    22cc:	7b050000 	blvc	1422d4 <_Min_Stack_Size+0x141ed4>
    22d0:	00a10702 	adceq	r0, r1, r2, lsl #14
    22d4:	18440000 	stmdane	r4, {}^	; <UNPREDICTABLE>
    22d8:	000008c0 	andeq	r0, r0, r0, asr #17
    22dc:	13027c05 	movwne	r7, #11269	; 0x2c05
    22e0:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
    22e4:	05a31848 	streq	r1, [r3, #2120]!	; 0x848
    22e8:	7d050000 	stcvc	0, cr0, [r5, #-0]
    22ec:	09061402 	stmdbeq	r6, {r1, sl, ip}
    22f0:	184c0000 	stmdane	ip, {}^	; <UNPREDICTABLE>
    22f4:	00000305 	andeq	r0, r0, r5, lsl #6
    22f8:	07028005 	streq	r8, [r2, -r5]
    22fc:	000000a1 	andeq	r0, r0, r1, lsr #1
    2300:	05f61850 	ldrbeq	r1, [r6, #2128]!	; 0x850
    2304:	81050000 	mrshi	r0, (UNDEF: 5)
    2308:	05ee0902 	strbeq	r0, [lr, #2306]!	; 0x902
    230c:	18540000 	ldmdane	r4, {}^	; <UNPREDICTABLE>
    2310:	0000061c 	andeq	r0, r0, ip, lsl r6
    2314:	0702a405 	streq	sl, [r2, -r5, lsl #8]
    2318:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
    231c:	4a761958 	bmi	1d88884 <_Min_Stack_Size+0x1d88484>
    2320:	a8050000 	stmdage	r5, {}	; <UNPREDICTABLE>
    2324:	02ee1302 	rsceq	r1, lr, #134217728	; 0x8000000
    2328:	01480000 	mrseq	r0, (UNDEF: 72)
    232c:	00038a19 	andeq	r8, r3, r9, lsl sl
    2330:	02a90500 	adceq	r0, r9, #0, 10
    2334:	0002ab12 	andeq	sl, r2, r2, lsl fp
    2338:	19014c00 	stmdbne	r1, {sl, fp, lr}
    233c:	00000832 	andeq	r0, r0, r2, lsr r8
    2340:	0c02ad05 	stceq	13, cr10, [r2], {5}
    2344:	00000917 	andeq	r0, r0, r7, lsl r9
    2348:	711902dc 			; <UNDEFINED> instruction: 0x711902dc
    234c:	05000001 	streq	r0, [r0, #-1]
    2350:	9b1002b2 	blls	402e20 <_Min_Stack_Size+0x402a20>
    2354:	e0000006 	and	r0, r0, r6
    2358:	01431902 	cmpeq	r3, r2, lsl #18
    235c:	b4050000 	strlt	r0, [r5], #-0
    2360:	09230a02 	stmdbeq	r3!, {r1, r9, fp}
    2364:	02ec0000 	rsceq	r0, ip, #0
    2368:	f4041100 	vst4.8	{d1,d3,d5,d7}, [r4], r0
    236c:	02000005 	andeq	r0, r0, #5
    2370:	07b00801 	ldreq	r0, [r0, r1, lsl #16]!
    2374:	f4050000 	vst4.8	{d0-d3}, [r5], r0
    2378:	11000005 	tstne	r0, r5
    237c:	00047c04 	andeq	r7, r4, r4, lsl #24
    2380:	00a11500 	adceq	r1, r1, r0, lsl #10
    2384:	06240000 	strteq	r0, [r4], -r0
    2388:	9a160000 	bls	582390 <_Min_Stack_Size+0x581f90>
    238c:	16000004 	strne	r0, [r0], -r4
    2390:	0000013d 	andeq	r0, r0, sp, lsr r1
    2394:	00062416 	andeq	r2, r6, r6, lsl r4
    2398:	00a11600 	adceq	r1, r1, r0, lsl #12
    239c:	11000000 	mrsne	r0, (UNDEF: 0)
    23a0:	0005fb04 	andeq	pc, r5, r4, lsl #22
    23a4:	06041100 	streq	r1, [r4], -r0, lsl #2
    23a8:	15000006 	strne	r0, [r0, #-6]
    23ac:	000000cf 	andeq	r0, r0, pc, asr #1
    23b0:	0000064e 	andeq	r0, r0, lr, asr #12
    23b4:	00049a16 	andeq	r9, r4, r6, lsl sl
    23b8:	013d1600 	teqeq	sp, r0, lsl #12
    23bc:	cf160000 	svcgt	0x00160000
    23c0:	16000000 	strne	r0, [r0], -r0
    23c4:	000000a1 	andeq	r0, r0, r1, lsr #1
    23c8:	30041100 	andcc	r1, r4, r0, lsl #2
    23cc:	15000006 	strne	r0, [r0, #-6]
    23d0:	000000a1 	andeq	r0, r0, r1, lsr #1
    23d4:	00000668 	andeq	r0, r0, r8, ror #12
    23d8:	00049a16 	andeq	r9, r4, r6, lsl sl
    23dc:	013d1600 	teqeq	sp, r0, lsl #12
    23e0:	11000000 	mrsne	r0, (UNDEF: 0)
    23e4:	00065404 	andeq	r5, r6, r4, lsl #8
    23e8:	00630a00 	rsbeq	r0, r3, r0, lsl #20
    23ec:	067e0000 	ldrbteq	r0, [lr], -r0
    23f0:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    23f4:	02000000 	andeq	r0, r0, #0
    23f8:	00630a00 	rsbeq	r0, r3, r0, lsl #20
    23fc:	068e0000 	streq	r0, [lr], r0
    2400:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    2404:	00000000 	andeq	r0, r0, r0
    2408:	019f0700 	orrseq	r0, pc, r0, lsl #14
    240c:	24050000 	strcs	r0, [r5], #-0
    2410:	03391a01 	teqeq	r9, #4096	; 0x1000
    2414:	001a0000 	andseq	r0, sl, r0
    2418:	0c000008 	stceq	0, cr0, [r0], {8}
    241c:	08012805 	stmdaeq	r1, {r0, r2, fp, sp}
    2420:	000006d4 	ldrdeq	r0, [r0], -r4
    2424:	00067d18 	andeq	r7, r6, r8, lsl sp
    2428:	012a0500 			; <UNDEFINED> instruction: 0x012a0500
    242c:	0006d411 	andeq	sp, r6, r1, lsl r4
    2430:	70180000 	andsvc	r0, r8, r0
    2434:	05000003 	streq	r0, [r0, #-3]
    2438:	a107012b 	tstge	r7, fp, lsr #2
    243c:	04000000 	streq	r0, [r0], #-0
    2440:	00068318 	andeq	r8, r6, r8, lsl r3
    2444:	012c0500 			; <UNDEFINED> instruction: 0x012c0500
    2448:	0006da0b 	andeq	sp, r6, fp, lsl #20
    244c:	11000800 	tstne	r0, r0, lsl #16
    2450:	00069b04 	andeq	r9, r6, r4, lsl #22
    2454:	8e041100 	adfhis	f1, f4, f0
    2458:	1a000006 	bne	2478 <_Min_Stack_Size+0x2078>
    245c:	00000030 	andeq	r0, r0, r0, lsr r0
    2460:	0144050e 	cmpeq	r4, lr, lsl #10
    2464:	00071908 	andeq	r1, r7, r8, lsl #18
    2468:	06d31800 	ldrbeq	r1, [r3], r0, lsl #16
    246c:	45050000 	strmi	r0, [r5, #-0]
    2470:	07191201 	ldreq	r1, [r9, -r1, lsl #4]
    2474:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2478:	000003f7 	strdeq	r0, [r0], -r7
    247c:	12014605 	andne	r4, r1, #5242880	; 0x500000
    2480:	00000719 	andeq	r0, r0, r9, lsl r7
    2484:	07be1806 	ldreq	r1, [lr, r6, lsl #16]!
    2488:	47050000 	strmi	r0, [r5, -r0]
    248c:	007b1201 	rsbseq	r1, fp, r1, lsl #4
    2490:	000c0000 	andeq	r0, ip, r0
    2494:	00007b0a 	andeq	r7, r0, sl, lsl #22
    2498:	00072900 	andeq	r2, r7, r0, lsl #18
    249c:	00a80b00 	adceq	r0, r8, r0, lsl #22
    24a0:	00020000 	andeq	r0, r2, r0
    24a4:	8505d01b 	strhi	sp, [r5, #-27]	; 0xffffffe5
    24a8:	083e0702 	ldmdaeq	lr!, {r1, r8, r9, sl}
    24ac:	2b180000 	blcs	6024b4 <_Min_Stack_Size+0x6020b4>
    24b0:	05000004 	streq	r0, [r0, #-4]
    24b4:	a8180287 	ldmdage	r8, {r0, r1, r2, r7, r9}
    24b8:	00000000 	andeq	r0, r0, r0
    24bc:	00078118 	andeq	r8, r7, r8, lsl r1
    24c0:	02880500 	addeq	r0, r8, #0, 10
    24c4:	0005ee12 	andeq	lr, r5, r2, lsl lr
    24c8:	aa180400 	bge	6034d0 <_Min_Stack_Size+0x6030d0>
    24cc:	05000003 	streq	r0, [r0, #-3]
    24d0:	3e100289 	cdpcc	2, 1, cr0, cr0, cr9, {4}
    24d4:	08000008 	stmdaeq	r0, {r3}
    24d8:	00089718 	andeq	r9, r8, r8, lsl r7
    24dc:	028a0500 	addeq	r0, sl, #0, 10
    24e0:	0001d317 	andeq	sp, r1, r7, lsl r3
    24e4:	a3182400 	tstge	r8, #0, 8
    24e8:	05000002 	streq	r0, [r0, #-2]
    24ec:	a10f028b 	smlabbge	pc, fp, r2, r0	; <UNPREDICTABLE>
    24f0:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    24f4:	00067818 	andeq	r7, r6, r8, lsl r8
    24f8:	028c0500 	addeq	r0, ip, #0, 10
    24fc:	00009a2c 	andeq	r9, r0, ip, lsr #20
    2500:	ad185000 	ldcge	0, cr5, [r8, #-0]
    2504:	05000008 	streq	r0, [r0, #-8]
    2508:	e01a028d 	ands	r0, sl, sp, lsl #5
    250c:	58000006 	stmdapl	r0, {r1, r2}
    2510:	00063318 	andeq	r3, r6, r8, lsl r3
    2514:	028e0500 	addeq	r0, lr, #0, 10
    2518:	00013116 	andeq	r3, r1, r6, lsl r1
    251c:	b2186800 	andslt	r6, r8, #0, 16
    2520:	05000008 	streq	r0, [r0, #-8]
    2524:	3116028f 	tstcc	r6, pc, lsl #5
    2528:	70000001 	andvc	r0, r0, r1
    252c:	0000fa18 	andeq	pc, r0, r8, lsl sl	; <UNPREDICTABLE>
    2530:	02900500 	addseq	r0, r0, #0, 10
    2534:	00013116 	andeq	r3, r1, r6, lsl r1
    2538:	15187800 	ldrne	r7, [r8, #-2048]	; 0xfffff800
    253c:	05000008 	streq	r0, [r0, #-8]
    2540:	4e100291 	mrcmi	2, 0, r0, cr0, cr1, {4}
    2544:	80000008 	andhi	r0, r0, r8
    2548:	00039e18 	andeq	r9, r3, r8, lsl lr
    254c:	02920500 	addseq	r0, r2, #0, 10
    2550:	00085e10 	andeq	r5, r8, r0, lsl lr
    2554:	65188800 	ldrvs	r8, [r8, #-2048]	; 0xfffff800
    2558:	05000000 	streq	r0, [r0, #-0]
    255c:	a10f0293 			; <UNDEFINED> instruction: 0xa10f0293
    2560:	a0000000 	andge	r0, r0, r0
    2564:	00025f18 	andeq	r5, r2, r8, lsl pc
    2568:	02940500 	addseq	r0, r4, #0, 10
    256c:	00013116 	andeq	r3, r1, r6, lsl r1
    2570:	e118a400 	tst	r8, r0, lsl #8
    2574:	05000000 	streq	r0, [r0, #-0]
    2578:	31160295 			; <UNDEFINED> instruction: 0x31160295
    257c:	ac000001 	stcge	0, cr0, [r0], {1}
    2580:	00023418 	andeq	r3, r2, r8, lsl r4
    2584:	02960500 	addseq	r0, r6, #0, 10
    2588:	00013116 	andeq	r3, r1, r6, lsl r1
    258c:	7c18b400 	cfldrsvc	mvf11, [r8], {-0}
    2590:	05000000 	streq	r0, [r0, #-0]
    2594:	31160297 			; <UNDEFINED> instruction: 0x31160297
    2598:	bc000001 	stclt	0, cr0, [r0], {1}
    259c:	00058218 	andeq	r8, r5, r8, lsl r2
    25a0:	02980500 	addseq	r0, r8, #0, 10
    25a4:	00013116 	andeq	r3, r1, r6, lsl r1
    25a8:	2a18c400 	bcs	6335b0 <_Min_Stack_Size+0x6331b0>
    25ac:	05000006 	streq	r0, [r0, #-6]
    25b0:	a1080299 			; <UNDEFINED> instruction: 0xa1080299
    25b4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    25b8:	05f40a00 	ldrbeq	r0, [r4, #2560]!	; 0xa00
    25bc:	084e0000 	stmdaeq	lr, {}^	; <UNPREDICTABLE>
    25c0:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    25c4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    25c8:	05f40a00 	ldrbeq	r0, [r4, #2560]!	; 0xa00
    25cc:	085e0000 	ldmdaeq	lr, {}^	; <UNPREDICTABLE>
    25d0:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    25d4:	07000000 	streq	r0, [r0, -r0]
    25d8:	05f40a00 	ldrbeq	r0, [r4, #2560]!	; 0xa00
    25dc:	086e0000 	stmdaeq	lr!, {}^	; <UNPREDICTABLE>
    25e0:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    25e4:	17000000 	strne	r0, [r0, -r0]
    25e8:	05f01b00 	ldrbeq	r1, [r0, #2816]!	; 0xb00
    25ec:	9507029e 	strls	r0, [r7, #-670]	; 0xfffffd62
    25f0:	18000008 	stmdane	r0, {r3}
    25f4:	00000440 	andeq	r0, r0, r0, asr #8
    25f8:	1b02a105 	blne	aaa14 <_Min_Stack_Size+0xaa614>
    25fc:	00000895 	muleq	r0, r5, r8
    2600:	02c01800 	sbceq	r1, r0, #0, 16
    2604:	a2050000 	andge	r0, r5, #0
    2608:	08a51802 	stmiaeq	r5!, {r1, fp, ip}
    260c:	00780000 	rsbseq	r0, r8, r0
    2610:	0003330a 	andeq	r3, r3, sl, lsl #6
    2614:	0008a500 	andeq	sl, r8, r0, lsl #10
    2618:	00a80b00 	adceq	r0, r8, r0, lsl #22
    261c:	001d0000 	andseq	r0, sp, r0
    2620:	0000a80a 	andeq	sl, r0, sl, lsl #16
    2624:	0008b500 	andeq	fp, r8, r0, lsl #10
    2628:	00a80b00 	adceq	r0, r8, r0, lsl #22
    262c:	001d0000 	andseq	r0, sp, r0
    2630:	8305f01c 	movwhi	pc, #20508	; 0x501c	; <UNPREDICTABLE>
    2634:	08da0302 	ldmeq	sl, {r1, r8, r9}^
    2638:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
    263c:	05000006 	streq	r0, [r0, #-6]
    2640:	290b029a 	stmdbcs	fp, {r1, r3, r4, r7, r9}
    2644:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    2648:	0000087c 	andeq	r0, r0, ip, ror r8
    264c:	0b02a305 	bleq	ab268 <_Min_Stack_Size+0xaae68>
    2650:	0000086e 	andeq	r0, r0, lr, ror #16
    2654:	05f40a00 	ldrbeq	r0, [r4, #2560]!	; 0xa00
    2658:	08ea0000 	stmiaeq	sl!, {}^	; <UNPREDICTABLE>
    265c:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    2660:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2664:	00c01e00 	sbceq	r1, r0, r0, lsl #28
    2668:	04110000 	ldreq	r0, [r1], #-0
    266c:	000008ea 	andeq	r0, r0, sl, ror #17
    2670:	0009001f 	andeq	r0, r9, pc, lsl r0
    2674:	049a1600 	ldreq	r1, [sl], #1536	; 0x600
    2678:	11000000 	mrsne	r0, (UNDEF: 0)
    267c:	0008f504 	andeq	pc, r8, r4, lsl #10
    2680:	bd041100 	stflts	f1, [r4, #-0]
    2684:	1f000001 	svcne	0x00000001
    2688:	00000917 	andeq	r0, r0, r7, lsl r9
    268c:	0000a116 	andeq	sl, r0, r6, lsl r1
    2690:	04110000 	ldreq	r0, [r1], #-0
    2694:	0000091d 	andeq	r0, r0, sp, lsl r9
    2698:	090c0411 	stmdbeq	ip, {r0, r4, sl}
    269c:	8e0a0000 	cdphi	0, 0, cr0, cr10, cr0, {0}
    26a0:	33000006 	movwcc	r0, #6
    26a4:	0b000009 	bleq	26d0 <_Min_Stack_Size+0x22d0>
    26a8:	000000a8 	andeq	r0, r0, r8, lsr #1
    26ac:	d2200002 	eorle	r0, r0, #2
    26b0:	05000007 	streq	r0, [r0, #-7]
    26b4:	9a170333 	bls	5c3388 <_Min_Stack_Size+0x5c2f88>
    26b8:	20000004 	andcs	r0, r0, r4
    26bc:	000007cb 	andeq	r0, r0, fp, asr #15
    26c0:	1d033405 	cfstrsne	mvf3, [r3, #-20]	; 0xffffffec
    26c4:	000004a0 	andeq	r0, r0, r0, lsr #9
    26c8:	25010521 	strcs	r0, [r1, #-1313]	; 0xfffffadf
    26cc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    26d0:	0b600143 	bleq	1802be4 <_Min_Stack_Size+0x18027e4>
    26d4:	12220000 	eorne	r0, r2, #0
    26d8:	72000011 	andvc	r0, r0, #17
    26dc:	000e4d22 	andeq	r4, lr, r2, lsr #26
    26e0:	38227400 	stmdacc	r2!, {sl, ip, sp, lr}
    26e4:	75000010 	strvc	r0, [r0, #-16]
    26e8:	00120422 	andseq	r0, r2, r2, lsr #8
    26ec:	32227600 	eorcc	r7, r2, #0, 12
    26f0:	7b000012 	blvc	2740 <_Min_Stack_Size+0x2340>
    26f4:	0011f222 	andseq	pc, r1, r2, lsr #4
    26f8:	1c227c00 	stcne	12, cr7, [r2], #-0
    26fc:	7e00000e 	cdpvc	0, 0, cr0, cr0, cr14, {0}
    2700:	0011ca22 	andseq	ip, r1, r2, lsr #20
    2704:	03237f00 			; <UNDEFINED> instruction: 0x03237f00
    2708:	00000010 	andeq	r0, r0, r0, lsl r0
    270c:	00107a23 	andseq	r7, r0, r3, lsr #20
    2710:	63230100 			; <UNDEFINED> instruction: 0x63230100
    2714:	0200000e 	andeq	r0, r0, #14
    2718:	000f3823 	andeq	r3, pc, r3, lsr #16
    271c:	c3230300 			; <UNDEFINED> instruction: 0xc3230300
    2720:	0400000d 	streq	r0, [r0], #-13
    2724:	000e4423 	andeq	r4, lr, r3, lsr #8
    2728:	ce230500 	cfsh64gt	mvdx0, mvdx3, #0
    272c:	0600000d 	streq	r0, [r0], -sp
    2730:	00118b23 	andseq	r8, r1, r3, lsr #22
    2734:	5a230700 	bpl	8c433c <_Min_Stack_Size+0x8c3f3c>
    2738:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    273c:	00102d23 	andseq	r2, r0, r3, lsr #26
    2740:	5e230900 	vmulpl.f16	s0, s6, s0	; <UNPREDICTABLE>
    2744:	0a000010 	beq	278c <_Min_Stack_Size+0x238c>
    2748:	000db123 	andeq	fp, sp, r3, lsr #2
    274c:	a3230b00 			; <UNDEFINED> instruction: 0xa3230b00
    2750:	0c000010 	stceq	0, cr0, [r0], {16}
    2754:	000ec823 	andeq	ip, lr, r3, lsr #16
    2758:	7c230d00 	stcvc	13, cr0, [r3], #-0
    275c:	0e000012 	mcreq	0, 0, r0, cr0, cr2, {0}
    2760:	000f9a23 	andeq	r9, pc, r3, lsr #20
    2764:	95230f00 	strls	r0, [r3, #-3840]!	; 0xfffff100
    2768:	1000000d 	andne	r0, r0, sp
    276c:	00115923 	andseq	r5, r1, r3, lsr #18
    2770:	88231100 	stmdahi	r3!, {r8, ip}
    2774:	12000010 	andne	r0, r0, #16
    2778:	00117423 	andseq	r7, r1, r3, lsr #8
    277c:	b5231300 	strlt	r1, [r3, #-768]!	; 0xfffffd00
    2780:	14000010 	strne	r0, [r0], #-16
    2784:	000eee23 	andeq	lr, lr, r3, lsr #28
    2788:	58231500 	stmdapl	r3!, {r8, sl, ip}
    278c:	1600000d 	strne	r0, [r0], -sp
    2790:	00122523 	andseq	r2, r2, r3, lsr #10
    2794:	9b231700 	blls	8c839c <_Min_Stack_Size+0x8c7f9c>
    2798:	1800000e 	stmdane	r0, {r1, r2, r3}
    279c:	0012bb23 	andseq	fp, r2, r3, lsr #22
    27a0:	46231900 	strtmi	r1, [r3], -r0, lsl #18
    27a4:	1a000010 	bne	27ec <_Min_Stack_Size+0x23ec>
    27a8:	00113823 	andseq	r3, r1, r3, lsr #16
    27ac:	d7231b00 	strle	r1, [r3, -r0, lsl #22]!
    27b0:	1c000011 	stcne	0, cr0, [r0], {17}
    27b4:	000f8a23 	andeq	r8, pc, r3, lsr #20
    27b8:	a7231d00 	strge	r1, [r3, -r0, lsl #26]!
    27bc:	1e00000d 	cdpne	0, 0, cr0, cr0, cr13, {0}
    27c0:	000dd923 	andeq	sp, sp, r3, lsr #18
    27c4:	b1231f00 			; <UNDEFINED> instruction: 0xb1231f00
    27c8:	20000011 	andcs	r0, r0, r1, lsl r0
    27cc:	000f6523 	andeq	r6, pc, r3, lsr #10
    27d0:	66232100 	strtvs	r2, [r3], -r0, lsl #2
    27d4:	2200000d 	andcs	r0, r0, #13
    27d8:	000e9123 	andeq	r9, lr, r3, lsr #2
    27dc:	68232300 	stmdavs	r3!, {r8, r9, sp}
    27e0:	24000012 	strcs	r0, [r0], #-18	; 0xffffffee
    27e4:	0010fb23 	andseq	pc, r0, r3, lsr #22
    27e8:	19232500 	stmdbne	r3!, {r8, sl, sp}
    27ec:	2600000f 	strcs	r0, [r0], -pc
    27f0:	0012af23 	andseq	sl, r2, r3, lsr #30
    27f4:	f9232700 			; <UNDEFINED> instruction: 0xf9232700
    27f8:	2800000d 	stmdacs	r0, {r0, r2, r3}
    27fc:	0010c323 	andseq	ip, r0, r3, lsr #6
    2800:	28232900 	stmdacs	r3!, {r8, fp, sp}
    2804:	2a00000e 	bcs	2844 <_Min_Stack_Size+0x2444>
    2808:	000e0823 	andeq	r0, lr, r3, lsr #16
    280c:	f0232b00 			; <UNDEFINED> instruction: 0xf0232b00
    2810:	2c00000f 	stccs	0, cr0, [r0], {15}
    2814:	00123e23 	andseq	r3, r2, r3, lsr #28
    2818:	4c232d00 	stcmi	13, cr2, [r3], #-0
    281c:	2e000011 	mcrcs	0, 0, r0, cr0, cr1, {0}
    2820:	000eb623 	andeq	fp, lr, r3, lsr #12
    2824:	81232f00 			; <UNDEFINED> instruction: 0x81232f00
    2828:	30000011 	andcc	r0, r0, r1, lsl r0
    282c:	000d4e23 	andeq	r4, sp, r3, lsr #28
    2830:	91233100 			; <UNDEFINED> instruction: 0x91233100
    2834:	32000010 	andcc	r0, r0, #16
    2838:	000f7223 	andeq	r7, pc, r3, lsr #4
    283c:	39233300 	stmdbcc	r3!, {r8, r9, ip, sp}
    2840:	3400000e 	strcc	r0, [r0], #-14
    2844:	00110723 	andseq	r0, r1, r3, lsr #14
    2848:	96233500 	strtls	r3, [r3], -r0, lsl #10
    284c:	36000011 			; <UNDEFINED> instruction: 0x36000011
    2850:	00127223 	andseq	r7, r2, r3, lsr #4
    2854:	73233700 			; <UNDEFINED> instruction: 0x73233700
    2858:	3800000d 	stmdacc	r0, {r0, r2, r3}
    285c:	00112623 	andseq	r2, r1, r3, lsr #12
    2860:	7f233900 	svcvc	0x00233900
    2864:	3a00000e 	bcc	28a4 <_Min_Stack_Size+0x24a4>
    2868:	00125623 	andseq	r5, r2, r3, lsr #12
    286c:	1b233b00 	blne	8d1474 <_Min_Stack_Size+0x8d1074>
    2870:	3c000010 	stccc	0, cr0, [r0], {16}
    2874:	00128e23 	andseq	r8, r2, r3, lsr #28
    2878:	7c233f00 	stcvc	15, cr3, [r3], #-0
    287c:	4000000f 	andmi	r0, r0, pc
    2880:	00100d23 	andseq	r0, r0, r3, lsr #26
    2884:	e0234100 	eor	r4, r3, r0, lsl #2
    2888:	4200000e 	andmi	r0, r0, #14
    288c:	000e7323 	andeq	r7, lr, r3, lsr #6
    2890:	3c234300 	stccc	3, cr4, [r3], #-0
    2894:	4400000d 	strmi	r0, [r0], #-13
    2898:	0010dc23 	andseq	sp, r0, r3, lsr #24
    289c:	02234500 	eoreq	r4, r3, #0, 10
    28a0:	4600000f 	strmi	r0, [r0], -pc
    28a4:	0011be23 	andseq	fp, r1, r3, lsr #28
    28a8:	ee234700 	cdp	7, 2, cr4, cr3, cr0, {0}
    28ac:	48000010 	stmdami	r0, {r4}
    28b0:	000f2523 	andeq	r2, pc, r3, lsr #10
    28b4:	9b234900 	blls	8d4cbc <_Min_Stack_Size+0x8d48bc>
    28b8:	4a000012 	bmi	2908 <_Min_Stack_Size+0x2508>
    28bc:	000de623 	andeq	lr, sp, r3, lsr #12
    28c0:	e1234b00 			; <UNDEFINED> instruction: 0xe1234b00
    28c4:	4c000011 	stcmi	0, cr0, [r0], {17}
    28c8:	000f4623 	andeq	r4, pc, r3, lsr #12
    28cc:	6b234d00 	blvs	8d5cd4 <_Min_Stack_Size+0x8d58d4>
    28d0:	50000011 	andpl	r0, r0, r1, lsl r0
    28d4:	0012e123 	andseq	lr, r2, r3, lsr #2
    28d8:	0a005100 	beq	16ce0 <_Min_Stack_Size+0x168e0>
    28dc:	00000082 	andeq	r0, r0, r2, lsl #1
    28e0:	00000b70 	andeq	r0, r0, r0, ror fp
    28e4:	0000a80b 	andeq	sl, r0, fp, lsl #16
    28e8:	20000100 	andcs	r0, r0, r0, lsl #2
    28ec:	000000d4 	ldrdeq	r0, [r0], -r4
    28f0:	19080407 	stmdbne	r8, {r0, r1, r2, sl}
    28f4:	0000003f 	andeq	r0, r0, pc, lsr r0
    28f8:	00059324 	andeq	r9, r5, r4, lsr #6
    28fc:	114a0800 	cmpne	sl, r0, lsl #16
    2900:	00000082 	andeq	r0, r0, r2, lsl #1
    2904:	00005e0a 	andeq	r5, r0, sl, lsl #28
    2908:	000b9900 	andeq	r9, fp, r0, lsl #18
    290c:	00a80b00 	adceq	r0, r8, r0, lsl #22
    2910:	000f0000 	andeq	r0, pc, r0
    2914:	000b8905 	andeq	r8, fp, r5, lsl #18
    2918:	07602400 	strbeq	r2, [r0, -r0, lsl #8]!
    291c:	4c080000 	stcmi	0, cr0, [r8], {-0}
    2920:	000b9917 	andeq	r9, fp, r7, lsl r9
    2924:	005e0a00 	subseq	r0, lr, r0, lsl #20
    2928:	0bba0000 	bleq	fee82930 <__StackLimit+0xdee62930>
    292c:	a80b0000 	stmdage	fp, {}	; <UNPREDICTABLE>
    2930:	07000000 	streq	r0, [r0, -r0]
    2934:	0baa0500 	bleq	fea83d3c <__StackLimit+0xdea63d3c>
    2938:	b2240000 	eorlt	r0, r4, #0
    293c:	08000002 	stmdaeq	r0, {r1}
    2940:	0bba174d 	bleq	fee8867c <__StackLimit+0xdee6867c>
    2944:	181b0000 	ldmdane	fp, {}	; <UNPREDICTABLE>
    2948:	09014509 	stmdbeq	r1, {r0, r3, r8, sl, lr}
    294c:	00000c29 	andeq	r0, r0, r9, lsr #24
    2950:	00524325 	subseq	r4, r2, r5, lsr #6
    2954:	11014709 	tstne	r1, r9, lsl #14
    2958:	0000008e 	andeq	r0, r0, lr, lsl #1
    295c:	0c2a1800 	stceq	8, cr1, [sl], #-0
    2960:	48090000 	stmdami	r9, {}	; <UNPREDICTABLE>
    2964:	008e1101 	addeq	r1, lr, r1, lsl #2
    2968:	25040000 	strcs	r0, [r4, #-0]
    296c:	00524150 	subseq	r4, r2, r0, asr r1
    2970:	11014909 	tstne	r1, r9, lsl #18
    2974:	0000008e 	andeq	r0, r0, lr, lsl #1
    2978:	09371808 	ldmdbeq	r7!, {r3, fp, ip}
    297c:	4a090000 	bmi	242984 <_Min_Stack_Size+0x242584>
    2980:	008e1101 	addeq	r1, lr, r1, lsl #2
    2984:	180c0000 	stmdane	ip, {}	; <UNPREDICTABLE>
    2988:	00000c58 	andeq	r0, r0, r8, asr ip
    298c:	11014b09 	tstne	r1, r9, lsl #22
    2990:	0000008e 	andeq	r0, r0, lr, lsl #1
    2994:	43462510 	movtmi	r2, #25872	; 0x6510
    2998:	4c090052 	stcmi	0, cr0, [r9], {82}	; 0x52
    299c:	008e1101 	addeq	r1, lr, r1, lsl #2
    29a0:	00140000 	andseq	r0, r4, r0
    29a4:	000c2f07 	andeq	r2, ip, r7, lsl #30
    29a8:	014d0900 	cmpeq	sp, r0, lsl #18
    29ac:	000bcb03 	andeq	ip, fp, r3, lsl #22
    29b0:	09281b00 	stmdbeq	r8!, {r8, r9, fp, ip}
    29b4:	bf0901af 	svclt	0x000901af
    29b8:	1800000c 	stmdane	r0, {r2, r3}
    29bc:	00000f32 	andeq	r0, r0, r2, lsr pc
    29c0:	1101b109 	tstne	r1, r9, lsl #2
    29c4:	0000008e 	andeq	r0, r0, lr, lsl #1
    29c8:	11451800 	cmpne	r5, r0, lsl #16
    29cc:	b2090000 	andlt	r0, r9, #0
    29d0:	008e1101 	addeq	r1, lr, r1, lsl #2
    29d4:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    29d8:	0000109b 	muleq	r0, fp, r0
    29dc:	1101b309 	tstne	r1, r9, lsl #6
    29e0:	0000008e 	andeq	r0, r0, lr, lsl #1
    29e4:	0efc1808 	cdpeq	8, 15, cr1, cr12, cr8, {0}
    29e8:	b4090000 	strlt	r0, [r9], #-0
    29ec:	008e1101 	addeq	r1, lr, r1, lsl #2
    29f0:	250c0000 	strcs	r0, [ip, #-0]
    29f4:	00524449 	subseq	r4, r2, r9, asr #8
    29f8:	1101b509 	tstne	r1, r9, lsl #10
    29fc:	0000008e 	andeq	r0, r0, lr, lsl #1
    2a00:	444f2510 	strbmi	r2, [pc], #-1296	; 2a08 <_Min_Stack_Size+0x2608>
    2a04:	b6090052 			; <UNDEFINED> instruction: 0xb6090052
    2a08:	008e1101 	addeq	r1, lr, r1, lsl #2
    2a0c:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    2a10:	00000d37 	andeq	r0, r0, r7, lsr sp
    2a14:	1101b709 	tstne	r1, r9, lsl #14
    2a18:	0000008e 	andeq	r0, r0, lr, lsl #1
    2a1c:	10831818 	addne	r1, r3, r8, lsl r8
    2a20:	b8090000 	stmdalt	r9, {}	; <UNPREDICTABLE>
    2a24:	008e1101 	addeq	r1, lr, r1, lsl #2
    2a28:	251c0000 	ldrcs	r0, [ip, #-0]
    2a2c:	00524641 	subseq	r4, r2, r1, asr #12
    2a30:	1101b909 	tstne	r1, r9, lsl #18
    2a34:	00000ccf 	andeq	r0, r0, pc, asr #25
    2a38:	8e0a0020 	cdphi	0, 0, cr0, cr10, cr0, {1}
    2a3c:	cf000000 	svcgt	0x00000000
    2a40:	0b00000c 	bleq	2a78 <_Min_Stack_Size+0x2678>
    2a44:	000000a8 	andeq	r0, r0, r8, lsr #1
    2a48:	bf040001 	svclt	0x00040001
    2a4c:	0700000c 	streq	r0, [r0, -ip]
    2a50:	000011a4 	andeq	r1, r0, r4, lsr #3
    2a54:	0301ba09 	movweq	fp, #6665	; 0x1a09
    2a58:	00000c36 	andeq	r0, r0, r6, lsr ip
    2a5c:	f509881b 			; <UNDEFINED> instruction: 0xf509881b
    2a60:	0e8f0901 	vdiveq.f16	s0, s30, s2	; <UNPREDICTABLE>
    2a64:	43250000 			; <UNDEFINED> instruction: 0x43250000
    2a68:	f7090052 			; <UNDEFINED> instruction: 0xf7090052
    2a6c:	008e1101 	addeq	r1, lr, r1, lsl #2
    2a70:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2a74:	00000245 	andeq	r0, r0, r5, asr #4
    2a78:	1101f809 	tstne	r1, r9, lsl #16	; <UNPREDICTABLE>
    2a7c:	0000008e 	andeq	r0, r0, lr, lsl #1
    2a80:	02481804 	subeq	r1, r8, #4, 16	; 0x40000
    2a84:	f9090000 			; <UNDEFINED> instruction: 0xf9090000
    2a88:	008e1101 	addeq	r1, lr, r1, lsl #2
    2a8c:	25080000 	strcs	r0, [r8, #-0]
    2a90:	00524943 	subseq	r4, r2, r3, asr #18
    2a94:	1101fa09 	tstne	r1, r9, lsl #20	; <UNPREDICTABLE>
    2a98:	0000008e 	andeq	r0, r0, lr, lsl #1
    2a9c:	0124180c 			; <UNDEFINED> instruction: 0x0124180c
    2aa0:	fb090000 	blx	242aaa <_Min_Stack_Size+0x2426aa>
    2aa4:	008e1101 	addeq	r1, lr, r1, lsl #2
    2aa8:	18100000 	ldmdane	r0, {}	; <UNPREDICTABLE>
    2aac:	00000734 	andeq	r0, r0, r4, lsr r7
    2ab0:	1101fc09 	tstne	r1, r9, lsl #24	; <UNPREDICTABLE>
    2ab4:	0000008e 	andeq	r0, r0, lr, lsl #1
    2ab8:	03b71814 			; <UNDEFINED> instruction: 0x03b71814
    2abc:	fd090000 	stc2	0, cr0, [r9, #-0]
    2ac0:	008e1101 	addeq	r1, lr, r1, lsl #2
    2ac4:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
    2ac8:	000005ad 	andeq	r0, r0, sp, lsr #11
    2acc:	1101fe09 	tstne	r1, r9, lsl #28	; <UNPREDICTABLE>
    2ad0:	00000082 	andeq	r0, r0, r2, lsl #1
    2ad4:	0569181c 	strbeq	r1, [r9, #-2076]!	; 0xfffff7e4
    2ad8:	ff090000 			; <UNDEFINED> instruction: 0xff090000
    2adc:	008e1101 	addeq	r1, lr, r1, lsl #2
    2ae0:	18200000 	stmdane	r0!, {}	; <UNPREDICTABLE>
    2ae4:	00000179 	andeq	r0, r0, r9, ror r1
    2ae8:	11020009 	tstne	r2, r9
    2aec:	0000008e 	andeq	r0, r0, lr, lsl #1
    2af0:	05b71824 	ldreq	r1, [r7, #2084]!	; 0x824
    2af4:	01090000 	mrseq	r0, (UNDEF: 9)
    2af8:	0b601102 	bleq	1806f08 <_Min_Stack_Size+0x1806b08>
    2afc:	18280000 	stmdane	r8!, {}	; <UNPREDICTABLE>
    2b00:	00000884 	andeq	r0, r0, r4, lsl #17
    2b04:	11020209 	tstne	r2, r9, lsl #4
    2b08:	0000008e 	andeq	r0, r0, lr, lsl #1
    2b0c:	079f1830 			; <UNDEFINED> instruction: 0x079f1830
    2b10:	03090000 	movweq	r0, #36864	; 0x9000
    2b14:	008e1102 	addeq	r1, lr, r2, lsl #2
    2b18:	18340000 	ldmdane	r4!, {}	; <UNPREDICTABLE>
    2b1c:	000006a3 	andeq	r0, r0, r3, lsr #13
    2b20:	11020409 	tstne	r2, r9, lsl #8
    2b24:	0000008e 	andeq	r0, r0, lr, lsl #1
    2b28:	05c11838 	strbeq	r1, [r1, #2104]	; 0x838
    2b2c:	05090000 	streq	r0, [r9, #-0]
    2b30:	00821102 	addeq	r1, r2, r2, lsl #2
    2b34:	183c0000 	ldmdane	ip!, {}	; <UNPREDICTABLE>
    2b38:	0000078e 	andeq	r0, r0, lr, lsl #15
    2b3c:	11020609 	tstne	r2, r9, lsl #12
    2b40:	0000008e 	andeq	r0, r0, lr, lsl #1
    2b44:	06931840 	ldreq	r1, [r3], r0, asr #16
    2b48:	07090000 	streq	r0, [r9, -r0]
    2b4c:	008e1102 	addeq	r1, lr, r2, lsl #2
    2b50:	18440000 	stmdane	r4, {}^	; <UNPREDICTABLE>
    2b54:	00000038 	andeq	r0, r0, r8, lsr r0
    2b58:	11020809 	tstne	r2, r9, lsl #16
    2b5c:	00000b60 	andeq	r0, r0, r0, ror #22
    2b60:	00f01848 	rscseq	r1, r0, r8, asr #16
    2b64:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
    2b68:	008e1102 	addeq	r1, lr, r2, lsl #2
    2b6c:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
    2b70:	0000052e 	andeq	r0, r0, lr, lsr #10
    2b74:	11020a09 	tstne	r2, r9, lsl #20
    2b78:	0000008e 	andeq	r0, r0, lr, lsl #1
    2b7c:	06591854 			; <UNDEFINED> instruction: 0x06591854
    2b80:	0b090000 	bleq	242b88 <_Min_Stack_Size+0x242788>
    2b84:	008e1102 	addeq	r1, lr, r2, lsl #2
    2b88:	18580000 	ldmdane	r8, {}^	; <UNPREDICTABLE>
    2b8c:	000005dd 	ldrdeq	r0, [r0], -sp
    2b90:	11020c09 	tstne	r2, r9, lsl #24
    2b94:	00000082 	andeq	r0, r0, r2, lsl #1
    2b98:	000a185c 	andeq	r1, sl, ip, asr r8
    2b9c:	0d090000 	stceq	0, cr0, [r9, #-0]
    2ba0:	008e1102 	addeq	r1, lr, r2, lsl #2
    2ba4:	18600000 	stmdane	r0!, {}^	; <UNPREDICTABLE>
    2ba8:	000003e7 	andeq	r0, r0, r7, ror #7
    2bac:	11020e09 	tstne	r2, r9, lsl #28
    2bb0:	0000008e 	andeq	r0, r0, lr, lsl #1
    2bb4:	06d91864 	ldrbeq	r1, [r9], r4, ror #16
    2bb8:	0f090000 	svceq	0x00090000
    2bbc:	0b601102 	bleq	1806fcc <_Min_Stack_Size+0x1806bcc>
    2bc0:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    2bc4:	000005e7 	andeq	r0, r0, r7, ror #11
    2bc8:	11021009 	tstne	r2, r9
    2bcc:	0000008e 	andeq	r0, r0, lr, lsl #1
    2bd0:	53432570 	movtpl	r2, #13680	; 0x3570
    2bd4:	11090052 	qaddne	r0, r2, r9
    2bd8:	008e1102 	addeq	r1, lr, r2, lsl #2
    2bdc:	18740000 	ldmdane	r4!, {}^	; <UNPREDICTABLE>
    2be0:	000005ec 	andeq	r0, r0, ip, ror #11
    2be4:	11021209 	tstne	r2, r9, lsl #4
    2be8:	00000b60 	andeq	r0, r0, r0, ror #22
    2bec:	07de1878 			; <UNDEFINED> instruction: 0x07de1878
    2bf0:	13090000 	movwne	r0, #36864	; 0x9000
    2bf4:	008e1102 	addeq	r1, lr, r2, lsl #2
    2bf8:	18800000 	stmne	r0, {}	; <UNPREDICTABLE>
    2bfc:	00000393 	muleq	r0, r3, r3
    2c00:	11021409 	tstne	r2, r9, lsl #8
    2c04:	0000008e 	andeq	r0, r0, lr, lsl #1
    2c08:	4a070084 	bmi	1c2e20 <_Min_Stack_Size+0x1c2a20>
    2c0c:	09000003 	stmdbeq	r0, {r0, r1}
    2c10:	e1030215 	tst	r3, r5, lsl r2
    2c14:	1b00000c 	blne	2c4c <_Min_Stack_Size+0x284c>
    2c18:	0296091c 	addseq	r0, r6, #28, 18	; 0x70000
    2c1c:	000f0709 	andeq	r0, pc, r9, lsl #14
    2c20:	52532500 	subspl	r2, r3, #0, 10
    2c24:	02980900 	addseq	r0, r8, #0, 18
    2c28:	00008e11 	andeq	r8, r0, r1, lsl lr
    2c2c:	44250000 	strtmi	r0, [r5], #-0
    2c30:	99090052 	stmdbls	r9, {r1, r4, r6}
    2c34:	008e1102 	addeq	r1, lr, r2, lsl #2
    2c38:	25040000 	strcs	r0, [r4, #-0]
    2c3c:	00525242 	subseq	r5, r2, r2, asr #4
    2c40:	11029a09 	tstne	r2, r9, lsl #20
    2c44:	0000008e 	andeq	r0, r0, lr, lsl #1
    2c48:	52432508 	subpl	r2, r3, #8, 10	; 0x2000000
    2c4c:	9b090031 	blls	242d18 <_Min_Stack_Size+0x242918>
    2c50:	008e1102 	addeq	r1, lr, r2, lsl #2
    2c54:	250c0000 	strcs	r0, [ip, #-0]
    2c58:	00325243 	eorseq	r5, r2, r3, asr #4
    2c5c:	11029c09 	tstne	r2, r9, lsl #24
    2c60:	0000008e 	andeq	r0, r0, lr, lsl #1
    2c64:	52432510 	subpl	r2, r3, #16, 10	; 0x4000000
    2c68:	9d090033 	stcls	0, cr0, [r9, #-204]	; 0xffffff34
    2c6c:	008e1102 	addeq	r1, lr, r2, lsl #2
    2c70:	18140000 	ldmdane	r4, {}	; <UNPREDICTABLE>
    2c74:	000009d7 	ldrdeq	r0, [r0], -r7
    2c78:	11029e09 	tstne	r2, r9, lsl #28
    2c7c:	0000008e 	andeq	r0, r0, lr, lsl #1
    2c80:	d0070018 	andle	r0, r7, r8, lsl r0
    2c84:	0900000a 	stmdbeq	r0, {r1, r3}
    2c88:	9c03029f 	sfmls	f0, 4, [r3], {159}	; 0x9f
    2c8c:	2100000e 	tstcs	r0, lr
    2c90:	00630107 	rsbeq	r0, r3, r7, lsl #2
    2c94:	330a0000 	movwcc	r0, #40960	; 0xa000
    2c98:	000f2f01 	andeq	r2, pc, r1, lsl #30
    2c9c:	0ce52300 	stcleq	3, cr2, [r5]
    2ca0:	23000000 	movwcs	r0, #0
    2ca4:	00000b21 	andeq	r0, r0, r1, lsr #22
    2ca8:	e5030001 	str	r0, [r3, #-1]
    2cac:	0a000009 	beq	2cd8 <_Min_Stack_Size+0x28d8>
    2cb0:	0f140336 	svceq	0x00140336
    2cb4:	140c0000 	strne	r0, [ip], #-0
    2cb8:	86092f0b 	strhi	r2, [r9], -fp, lsl #30
    2cbc:	1000000f 	andne	r0, r0, pc
    2cc0:	006e6950 	rsbeq	r6, lr, r0, asr r9
    2cc4:	820c310b 	andhi	r3, ip, #-1073741822	; 0xc0000002
    2cc8:	00000000 	andeq	r0, r0, r0
    2ccc:	000be70d 	andeq	lr, fp, sp, lsl #14
    2cd0:	0c340b00 			; <UNDEFINED> instruction: 0x0c340b00
    2cd4:	00000082 	andeq	r0, r0, r2, lsl #1
    2cd8:	0f140d04 	svceq	0x00140d04
    2cdc:	370b0000 	strcc	r0, [fp, -r0]
    2ce0:	0000820c 	andeq	r8, r0, ip, lsl #4
    2ce4:	940d0800 	strls	r0, [sp], #-2048	; 0xfffff800
    2ce8:	0b00000f 	bleq	2d2c <_Min_Stack_Size+0x292c>
    2cec:	00820c3a 	addeq	r0, r2, sl, lsr ip
    2cf0:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    2cf4:	000010d2 	ldrdeq	r1, [r0], -r2
    2cf8:	820c3d0b 	andhi	r3, ip, #704	; 0x2c0
    2cfc:	10000000 	andne	r0, r0, r0
    2d00:	12140300 	andsne	r0, r4, #0, 6
    2d04:	3f0b0000 	svccc	0x000b0000
    2d08:	000f3b02 	andeq	r3, pc, r2, lsl #22
    2d0c:	0c300c00 	ldceq	12, cr0, [r0], #-0
    2d10:	10380931 	eorsne	r0, r8, r1, lsr r9
    2d14:	910d0000 	mrsls	r0, (UNDEF: 13)
    2d18:	0c00000b 	stceq	0, cr0, [r0], {11}
    2d1c:	00820c33 	addeq	r0, r2, r3, lsr ip
    2d20:	0d000000 	stceq	0, cr0, [r0, #-0]
    2d24:	00000a5c 	andeq	r0, r0, ip, asr sl
    2d28:	820c360c 	andhi	r3, ip, #12, 12	; 0xc00000
    2d2c:	04000000 	streq	r0, [r0], #-0
    2d30:	000a150d 	andeq	r1, sl, sp, lsl #10
    2d34:	0c3a0c00 	ldceq	12, cr0, [sl], #-0
    2d38:	00000082 	andeq	r0, r0, r2, lsl #1
    2d3c:	0c1c0d08 	ldceq	13, cr0, [ip], {8}
    2d40:	3d0c0000 	stccc	0, cr0, [ip, #-0]
    2d44:	0000820c 	andeq	r8, r0, ip, lsl #4
    2d48:	5d0d0c00 	stcpl	12, cr0, [sp, #-0]
    2d4c:	0c00000c 	stceq	0, cr0, [r0], {12}
    2d50:	00820c40 	addeq	r0, r2, r0, asr #24
    2d54:	0d100000 	ldceq	0, cr0, [r0, #-0]
    2d58:	00000abf 			; <UNDEFINED> instruction: 0x00000abf
    2d5c:	820c430c 	andhi	r4, ip, #12, 6	; 0x30000000
    2d60:	14000000 	strne	r0, [r0], #-0
    2d64:	000be70d 	andeq	lr, fp, sp, lsl #14
    2d68:	0c460c00 	mcrreq	12, 0, r0, r6, cr0
    2d6c:	00000082 	andeq	r0, r0, r2, lsl #1
    2d70:	17fd0d18 			; <UNDEFINED> instruction: 0x17fd0d18
    2d74:	4b0c0000 	blmi	302d7c <_Min_Stack_Size+0x30297c>
    2d78:	0000820c 	andeq	r8, r0, ip, lsl #4
    2d7c:	e30d1c00 	movw	r1, #56320	; 0xdc00
    2d80:	0c00000b 	stceq	0, cr0, [r0], {11}
    2d84:	00820c4e 	addeq	r0, r2, lr, asr #24
    2d88:	0d200000 	stceq	0, cr0, [r0, #-0]
    2d8c:	00000bf7 	strdeq	r0, [r0], -r7
    2d90:	820c530c 	andhi	r5, ip, #12, 6	; 0x30000000
    2d94:	24000000 	strcs	r0, [r0], #-0
    2d98:	00095f0d 	andeq	r5, r9, sp, lsl #30
    2d9c:	0c560c00 	mrrceq	12, 0, r0, r6, cr0
    2da0:	00000082 	andeq	r0, r0, r2, lsl #1
    2da4:	0d2b0d28 	stceq	13, cr0, [fp, #-160]!	; 0xffffff60
    2da8:	5c0c0000 	stcpl	0, cr0, [ip], {-0}
    2dac:	0000820c 	andeq	r8, r0, ip, lsl #4
    2db0:	03002c00 	movweq	r2, #3072	; 0xc00
    2db4:	0000093c 	andeq	r0, r0, ip, lsr r9
    2db8:	9202610c 	andls	r6, r2, #12, 2
    2dbc:	2100000f 	tstcs	r0, pc
    2dc0:	00630107 	rsbeq	r0, r3, r7, lsl #2
    2dc4:	680c0000 	stmdavs	ip, {}	; <UNPREDICTABLE>
    2dc8:	00107701 	andseq	r7, r0, r1, lsl #14
    2dcc:	09682300 	stmdbeq	r8!, {r8, r9, sp}^
    2dd0:	23000000 	movwcs	r0, #0
    2dd4:	00000ade 	ldrdeq	r0, [r0], -lr
    2dd8:	094c2301 	stmdbeq	ip, {r0, r8, r9, sp}^
    2ddc:	23020000 	movwcs	r0, #8192	; 0x2000
    2de0:	00000c42 	andeq	r0, r0, r2, asr #24
    2de4:	0a1f2303 	beq	7cb9f8 <_Min_Stack_Size+0x7cb5f8>
    2de8:	23040000 	movwcs	r0, #16384	; 0x4000
    2dec:	00000aa1 	andeq	r0, r0, r1, lsr #21
    2df0:	a5030005 	strge	r0, [r3, #-5]
    2df4:	0c00000b 	stceq	0, cr0, [r0], {11}
    2df8:	1044026f 	subne	r0, r4, pc, ror #4
    2dfc:	77040000 	strvc	r0, [r4, -r0]
    2e00:	0f000010 	svceq	0x00000010
    2e04:	00000bcf 	andeq	r0, r0, pc, asr #23
    2e08:	108b0c60 	addne	r0, fp, r0, ror #24
    2e0c:	0000114c 	andeq	r1, r0, ip, asr #2
    2e10:	000b5f0d 	andeq	r5, fp, sp, lsl #30
    2e14:	1f8d0c00 	svcne	0x008d0c00
    2e18:	0000114c 	andeq	r1, r0, ip, asr #2
    2e1c:	1f870d00 	svcne	0x00870d00
    2e20:	8f0c0000 	svchi	0x000c0000
    2e24:	0010381e 	andseq	r3, r0, lr, lsl r8
    2e28:	570d0400 	strpl	r0, [sp, -r0, lsl #8]
    2e2c:	0c00000a 	stceq	0, cr0, [r0], {10}
    2e30:	0f2f1e91 	svceq	0x002f1e91
    2e34:	0d340000 	ldceq	0, cr0, [r4, #-0]
    2e38:	000002dd 	ldrdeq	r0, [r0], -sp
    2e3c:	831e930c 	tsthi	lr, #12, 6	; 0x30000000
    2e40:	35000010 	strcc	r0, [r0, #-16]
    2e44:	000a6d0d 	andeq	r6, sl, sp, lsl #26
    2e48:	1f950c00 	svcne	0x00950c00
    2e4c:	0000013d 	andeq	r0, r0, sp, lsr r1
    2e50:	0d1a0d38 	ldceq	13, cr0, [sl, #-224]	; 0xffffff20
    2e54:	970c0000 	strls	r0, [ip, -r0]
    2e58:	00116321 	andseq	r6, r1, r1, lsr #6
    2e5c:	f50d3c00 			; <UNDEFINED> instruction: 0xf50d3c00
    2e60:	0c000009 	stceq	0, cr0, [r0], {9}
    2e64:	11632199 			; <UNDEFINED> instruction: 0x11632199
    2e68:	0d400000 	stcleq	0, cr0, [r0, #-0]
    2e6c:	00000989 	andeq	r0, r0, r9, lsl #19
    2e70:	63219b0c 			; <UNDEFINED> instruction: 0x63219b0c
    2e74:	44000011 	strmi	r0, [r0], #-17	; 0xffffffef
    2e78:	000b7a0d 	andeq	r7, fp, sp, lsl #20
    2e7c:	219d0c00 	orrscs	r0, sp, r0, lsl #24
    2e80:	00001163 	andeq	r1, r0, r3, ror #2
    2e84:	0b680d48 	bleq	1a063ac <_Min_Stack_Size+0x1a05fac>
    2e88:	9f0c0000 	svcls	0x000c0000
    2e8c:	00116321 	andseq	r6, r1, r1, lsr #6
    2e90:	080d4c00 	stmdaeq	sp, {sl, fp, lr}
    2e94:	0c00000d 	stceq	0, cr0, [r0], {13}
    2e98:	116321a1 	cmnne	r3, r1, lsr #3
    2e9c:	0d500000 	ldcleq	0, cr0, [r0, #-0]
    2ea0:	00000ab5 			; <UNDEFINED> instruction: 0x00000ab5
    2ea4:	8e1ea30c 	cdphi	3, 1, cr10, cr14, cr12, {0}
    2ea8:	54000000 	strpl	r0, [r0], #-0
    2eac:	000a450d 	andeq	r4, sl, sp, lsl #10
    2eb0:	1ea50c00 	cdpne	12, 10, cr0, cr5, cr0, {0}
    2eb4:	00000082 	andeq	r0, r0, r2, lsl #1
    2eb8:	0a7f0d58 	beq	1fc6420 <_Min_Stack_Size+0x1fc6020>
    2ebc:	a70c0000 	strge	r0, [ip, -r0]
    2ec0:	0000821e 	andeq	r8, r0, lr, lsl r2
    2ec4:	11005c00 	tstne	r0, r0, lsl #24
    2ec8:	000c2904 	andeq	r2, ip, r4, lsl #18
    2ecc:	115d1f00 	cmpne	sp, r0, lsl #30
    2ed0:	5d160000 	ldcpl	0, cr0, [r6, #-0]
    2ed4:	00000011 	andeq	r0, r0, r1, lsl r0
    2ed8:	10880411 	addne	r0, r8, r1, lsl r4
    2edc:	04110000 	ldreq	r0, [r1], #-0
    2ee0:	00001152 	andeq	r1, r0, r2, asr r1
    2ee4:	000bd103 	andeq	sp, fp, r3, lsl #2
    2ee8:	02a90c00 	adceq	r0, r9, #0, 24
    2eec:	00001088 	andeq	r1, r0, r8, lsl #1
    2ef0:	11690411 	cmnne	r9, r1, lsl r4
    2ef4:	04110000 	ldreq	r0, [r1], #-0
    2ef8:	00000052 	andeq	r0, r0, r2, asr r0
    2efc:	2f0d1c0c 	svccs	0x000d1c0c
    2f00:	0011e609 	andseq	lr, r1, r9, lsl #12
    2f04:	09dc0d00 	ldmibeq	ip, {r8, sl, fp}^
    2f08:	310d0000 	mrscc	r0, (UNDEF: 13)
    2f0c:	0000820c 	andeq	r8, r0, ip, lsl #4
    2f10:	ec0d0000 	stc	0, cr0, [sp], {-0}
    2f14:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    2f18:	00820c37 	addeq	r0, r2, r7, lsr ip
    2f1c:	0d040000 	stceq	0, cr0, [r4, #-0]
    2f20:	00000a3c 	andeq	r0, r0, ip, lsr sl
    2f24:	820c3a0d 	andhi	r3, ip, #53248	; 0xd000
    2f28:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2f2c:	000c230d 	andeq	r2, ip, sp, lsl #6
    2f30:	0c3d0d00 	ldceq	13, cr0, [sp], #-0
    2f34:	00000082 	andeq	r0, r0, r2, lsl #1
    2f38:	0be70d0c 	bleq	ff9c6370 <__StackLimit+0xdf9a6370>
    2f3c:	440d0000 	strmi	r0, [sp], #-0
    2f40:	0000820c 	andeq	r8, r0, ip, lsl #4
    2f44:	b00d1000 	andlt	r1, sp, r0
    2f48:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    2f4c:	00820c47 	addeq	r0, r2, r7, asr #24
    2f50:	0d140000 	ldceq	0, cr0, [r4, #-0]
    2f54:	0000097c 	andeq	r0, r0, ip, ror r9
    2f58:	820c4a0d 	andhi	r4, ip, #53248	; 0xd000
    2f5c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    2f60:	0c710300 	ldcleq	3, cr0, [r1], #-0
    2f64:	4c0d0000 	stcmi	0, cr0, [sp], {-0}
    2f68:	00118103 	andseq	r8, r1, r3, lsl #2
    2f6c:	01072100 	mrseq	r2, (UNDEF: 23)
    2f70:	00000063 	andeq	r0, r0, r3, rrx
    2f74:	3101760d 	tstcc	r1, sp, lsl #12
    2f78:	23000012 	movwcs	r0, #18
    2f7c:	000009a8 	andeq	r0, r0, r8, lsr #19
    2f80:	0b4a2300 	bleq	128bb88 <_Min_Stack_Size+0x128b788>
    2f84:	23200000 	nopcs	{0}	; <UNPREDICTABLE>
    2f88:	00000cd1 	ldrdeq	r0, [r0], -r1
    2f8c:	0b2c2324 	bleq	b0bc24 <_Min_Stack_Size+0xb0b824>
    2f90:	23210000 			; <UNDEFINED> instruction: 0x23210000
    2f94:	00000c05 	andeq	r0, r0, r5, lsl #24
    2f98:	09bd2322 	ldmibeq	sp!, {r1, r5, r8, r9, sp}
    2f9c:	23230000 			; <UNDEFINED> instruction: 0x23230000
    2fa0:	00000c99 	muleq	r0, r9, ip
    2fa4:	0bba23a0 	bleq	fee8be2c <__StackLimit+0xdee6be2c>
    2fa8:	00e00000 	rsceq	r0, r0, r0
    2fac:	00091a03 	andeq	r1, r9, r3, lsl #20
    2fb0:	03880d00 	orreq	r0, r8, #0, 26
    2fb4:	000011f2 	strdeq	r1, [r0], -r2
    2fb8:	00123104 	andseq	r3, r2, r4, lsl #2
    2fbc:	0c820300 	stceq	3, cr0, [r2], {0}
    2fc0:	910d0000 	mrsls	r0, (UNDEF: 13)
    2fc4:	00008212 	andeq	r8, r0, r2, lsl r2
    2fc8:	12420400 	subne	r0, r2, #0, 8
    2fcc:	ff0f0000 			; <UNDEFINED> instruction: 0xff0f0000
    2fd0:	4400000a 	strmi	r0, [r0], #-10
    2fd4:	2410960d 	ldrcs	r9, [r0], #-1549	; 0xfffff9f3
    2fd8:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    2fdc:	00000b5f 	andeq	r0, r0, pc, asr fp
    2fe0:	2422980d 	strtcs	r9, [r2], #-2061	; 0xfffff7f3
    2fe4:	00000013 	andeq	r0, r0, r3, lsl r0
    2fe8:	001f870d 	andseq	r8, pc, sp, lsl #14
    2fec:	219a0d00 	orrscs	r0, sl, r0, lsl #26
    2ff0:	000011e6 	andeq	r1, r0, r6, ror #3
    2ff4:	0a0a0d04 	beq	28640c <_Min_Stack_Size+0x28600c>
    2ff8:	9c0d0000 	stcls	0, cr0, [sp], {-0}
    2ffc:	00117b22 	andseq	r7, r1, r2, lsr #22
    3000:	960d2000 	strls	r2, [sp], -r0
    3004:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    3008:	006a219e 	mlseq	sl, lr, r1, r2
    300c:	0d240000 	stceq	0, cr0, [r4, #-0]
    3010:	0000099c 	muleq	r0, ip, r9
    3014:	7621a00d 	strtvc	sl, [r1], -sp
    3018:	26000000 	strcs	r0, [r0], -r0
    301c:	000cba0d 	andeq	fp, ip, sp, lsl #20
    3020:	22a20d00 	adccs	r0, r2, #0, 26
    3024:	0000117b 	andeq	r1, r0, fp, ror r1
    3028:	0a8b0d28 	beq	fe2c64d0 <__StackLimit+0xde2a64d0>
    302c:	a40d0000 	strge	r0, [sp], #-0
    3030:	00006a21 	andeq	r6, r0, r1, lsr #20
    3034:	c50d2c00 	strgt	r2, [sp, #-3072]	; 0xfffff400
    3038:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    303c:	007621a6 	rsbseq	r2, r6, r6, lsr #3
    3040:	0d2e0000 	stceq	0, cr0, [lr, #-0]
    3044:	00000cfa 	strdeq	r0, [r0], -sl
    3048:	4e1fa80d 	cdpmi	8, 1, cr10, cr15, cr13, {0}
    304c:	30000012 	andcc	r0, r0, r2, lsl r0
    3050:	000b430d 	andeq	r4, fp, sp, lsl #6
    3054:	22aa0d00 	adccs	r0, sl, #0, 26
    3058:	00001175 	andeq	r1, r0, r5, ror r1
    305c:	0a660d34 	beq	1986534 <_Min_Stack_Size+0x1986134>
    3060:	ac0d0000 	stcge	0, cr0, [sp], {-0}
    3064:	00117522 	andseq	r7, r1, r2, lsr #10
    3068:	570d3800 	strpl	r3, [sp, -r0, lsl #16]
    306c:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    3070:	0f2f21ae 	svceq	0x002f21ae
    3074:	0d3c0000 	ldceq	0, cr0, [ip, #-0]
    3078:	00000930 	andeq	r0, r0, r0, lsr r9
    307c:	3d21b00d 	stccc	0, cr11, [r1, #-52]!	; 0xffffffcc
    3080:	3d000012 	stccc	0, cr0, [r0, #-72]	; 0xffffffb8
    3084:	000cf20d 	andeq	pc, ip, sp, lsl #4
    3088:	21b40d00 			; <UNDEFINED> instruction: 0x21b40d00
    308c:	0000123d 	andeq	r1, r0, sp, lsr r2
    3090:	0ab50d3e 	beq	fed46590 <__StackLimit+0xded26590>
    3094:	b70d0000 	strlt	r0, [sp, -r0]
    3098:	00008e21 	andeq	r8, r0, r1, lsr #28
    309c:	11004000 	mrsne	r4, (UNDEF: 0)
    30a0:	000f0704 	andeq	r0, pc, r4, lsl #14
    30a4:	0b010300 	bleq	43cac <_Min_Stack_Size+0x438ac>
    30a8:	c90d0000 	stmdbgt	sp, {}	; <UNPREDICTABLE>
    30ac:	00125303 	andseq	r5, r2, r3, lsl #6
    30b0:	01072100 	mrseq	r2, (UNDEF: 23)
    30b4:	00000063 	andeq	r0, r0, r3, rrx
    30b8:	5d01330e 	stcpl	3, cr3, [r1, #-56]	; 0xffffffc8
    30bc:	23000013 	movwcs	r0, #19
    30c0:	00000846 	andeq	r0, r0, r6, asr #16
    30c4:	073d2364 	ldreq	r2, [sp, -r4, ror #6]!
    30c8:	230a0000 	movwcs	r0, #40960	; 0xa000
    30cc:	00000356 	andeq	r0, r0, r6, asr r3
    30d0:	054c2301 	strbeq	r2, [ip, #-769]	; 0xfffffcff
    30d4:	00010000 	andeq	r0, r1, r0
    30d8:	00001403 	andeq	r1, r0, r3, lsl #8
    30dc:	03380e00 	teqeq	r8, #0, 28
    30e0:	00001336 	andeq	r1, r0, r6, lsr r3
    30e4:	0002fe24 	andeq	pc, r2, r4, lsr #28
    30e8:	16cd0e00 	strbne	r0, [sp], r0, lsl #28
    30ec:	0000008e 	andeq	r0, r0, lr, lsl #1
    30f0:	0003c024 	andeq	ip, r3, r4, lsr #32
    30f4:	11ce0e00 	bicne	r0, lr, r0, lsl #28
    30f8:	00000082 	andeq	r0, r0, r2, lsl #1
    30fc:	0002f324 	andeq	pc, r2, r4, lsr #6
    3100:	1ccf0e00 	stclne	14, cr0, [pc], {0}
    3104:	0000135d 	andeq	r1, r0, sp, asr r3
    3108:	0012ce26 	andseq	ip, r2, r6, lsr #28
    310c:	06950100 	ldreq	r0, [r5], r0, lsl #2
    3110:	00000000 	andeq	r0, r0, r0
    3114:	00000060 	andeq	r0, r0, r0, rrx
    3118:	13d79c01 	bicsne	r9, r7, #256	; 0x100
    311c:	da270000 	ble	9c3124 <_Min_Stack_Size+0x9c2d24>
    3120:	0100000e 	tsteq	r0, lr
    3124:	13d72d95 	bicsne	r2, r7, #9536	; 0x2540
    3128:	91020000 	mrsls	r0, (UNDEF: 2)
    312c:	0f522874 	svceq	0x00522874
    3130:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    3134:	0011691c 	andseq	r6, r1, ip, lsl r9
    3138:	00030500 	andeq	r0, r3, r0, lsl #10
    313c:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    3140:	00000eae 	andeq	r0, r0, lr, lsr #29
    3144:	691c9901 	ldmdbvs	ip, {r0, r8, fp, ip, pc}
    3148:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    314c:	00000003 	andeq	r0, r0, r3
    3150:	04110000 	ldreq	r0, [r1], #-0
    3154:	0000132a 	andeq	r1, r0, sl, lsr #6
    3158:	00106929 	andseq	r6, r0, r9, lsr #18
    315c:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    3160:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
    3164:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3168:	da279c01 	ble	9ea174 <_Min_Stack_Size+0x9e9d74>
    316c:	0100000e 	tsteq	r0, lr
    3170:	13d72b34 	bicsne	r2, r7, #52, 22	; 0xd000
    3174:	91020000 	mrsls	r0, (UNDEF: 2)
    3178:	0f52284c 	svceq	0x0052284c
    317c:	36010000 	strcc	r0, [r1], -r0
    3180:	0011691c 	andseq	r6, r1, ip, lsl r9
    3184:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    3188:	28200005 	stmdacs	r0!, {r0, r2}
    318c:	00000eae 	andeq	r0, r0, lr, lsr #29
    3190:	691c3701 	ldmdbvs	ip, {r0, r8, r9, sl, ip, sp}
    3194:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    3198:	00059c03 	andeq	r9, r5, r3, lsl #24
    319c:	0d852820 	stceq	8, cr2, [r5, #128]	; 0x80
    31a0:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
    31a4:	000f8615 	andeq	r8, pc, r5, lsl r6	; <UNPREDICTABLE>
    31a8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    31ac:	000f9c2a 	andeq	r9, pc, sl, lsr #24
    31b0:	00001c08 	andeq	r1, r0, r8, lsl #24
    31b4:	00144e00 	andseq	r4, r4, r0, lsl #28
    31b8:	01622800 	cmneq	r2, r0, lsl #16
    31bc:	3d010000 	stccc	0, cr0, [r1, #-0]
    31c0:	00008e03 	andeq	r8, r0, r3, lsl #28
    31c4:	60910200 	addsvs	r0, r1, r0, lsl #4
    31c8:	0fb82a00 	svceq	0x00b82a00
    31cc:	001c0800 	andseq	r0, ip, r0, lsl #16
    31d0:	146b0000 	strbtne	r0, [fp], #-0
    31d4:	62280000 	eorvs	r0, r8, #0
    31d8:	01000001 	tsteq	r0, r1
    31dc:	008e033e 	addeq	r0, lr, lr, lsr r3
    31e0:	91020000 	mrsls	r0, (UNDEF: 2)
    31e4:	d42a005c 	strtle	r0, [sl], #-92	; 0xffffffa4
    31e8:	1c08000f 	stcne	0, cr0, [r8], {15}
    31ec:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    31f0:	28000014 	stmdacs	r0, {r2, r4}
    31f4:	00000162 	andeq	r0, r0, r2, ror #2
    31f8:	8e034001 	cdphi	0, 0, cr4, cr3, cr1, {0}
    31fc:	02000000 	andeq	r0, r0, #0
    3200:	2b005891 	blcs	1944c <_Min_Stack_Size+0x1904c>
    3204:	08000ff0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, fp}
    3208:	0000001c 	andeq	r0, r0, ip, lsl r0
    320c:	00016228 	andeq	r6, r1, r8, lsr #4
    3210:	03420100 	movteq	r0, #8448	; 0x2100
    3214:	0000008e 	andeq	r0, r0, lr, lsl #1
    3218:	00549102 	subseq	r9, r4, r2, lsl #2
    321c:	0a380000 	beq	e03224 <_Min_Stack_Size+0xe02e24>
    3220:	00040000 	andeq	r0, r4, r0
    3224:	00000725 	andeq	r0, r0, r5, lsr #14
    3228:	04470104 	strbeq	r0, [r7], #-260	; 0xfffffefc
    322c:	fb0c0000 	blx	303236 <_Min_Stack_Size+0x302e36>
    3230:	be000012 	mcrlt	0, 0, r0, cr0, cr2, {0}
    3234:	58000001 	stmdapl	r0, {r0}
    3238:	00000000 	andeq	r0, r0, r0
    323c:	62000000 	andvs	r0, r0, #0
    3240:	02000007 	andeq	r0, r0, #7
    3244:	07a90601 	streq	r0, [r9, r1, lsl #12]!
    3248:	02020000 	andeq	r0, r2, #0
    324c:	00000005 	andeq	r0, r0, r5
    3250:	2c120300 	ldccs	3, cr0, [r2], {-0}
    3254:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    3258:	00004418 	andeq	r4, r0, r8, lsl r4
    325c:	00330400 	eorseq	r0, r3, r0, lsl #8
    3260:	04020000 	streq	r0, [r2], #-0
    3264:	0001b505 	andeq	fp, r1, r5, lsl #10
    3268:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    326c:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    3270:	002aca03 	eoreq	ip, sl, r3, lsl #20
    3274:	182e0200 	stmdane	lr!, {r9}
    3278:	00000063 	andeq	r0, r0, r3, rrx
    327c:	00005205 	andeq	r5, r0, r5, lsl #4
    3280:	08010200 	stmdaeq	r1, {r9}
    3284:	000007a7 	andeq	r0, r0, r7, lsr #15
    3288:	77070202 	strvc	r0, [r7, -r2, lsl #4]
    328c:	03000003 	movweq	r0, #3
    3290:	00002b6e 	andeq	r2, r0, lr, ror #22
    3294:	82193402 	andshi	r3, r9, #33554432	; 0x2000000
    3298:	04000000 	streq	r0, [r0], #-0
    329c:	00000071 	andeq	r0, r0, r1, ror r0
    32a0:	a5070402 	strge	r0, [r7, #-1026]	; 0xfffffbfe
    32a4:	02000000 	andeq	r0, r0, #0
    32a8:	00a00708 	adceq	r0, r0, r8, lsl #14
    32ac:	04060000 	streq	r0, [r6], #-0
    32b0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    32b4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    32b8:	000000aa 	andeq	r0, r0, sl, lsr #1
    32bc:	19040802 	stmdbne	r4, {r1, fp}
    32c0:	07000007 	streq	r0, [r0, -r7]
    32c4:	000003e0 	andeq	r0, r0, r0, ror #7
    32c8:	17016503 	strne	r6, [r1, -r3, lsl #10]
    32cc:	00000097 	muleq	r0, r7, r0
    32d0:	00056203 	andeq	r6, r5, r3, lsl #4
    32d4:	0e2e0400 	cdpeq	4, 2, cr0, cr14, cr0, {0}
    32d8:	00000044 	andeq	r0, r0, r4, asr #32
    32dc:	0006fb03 	andeq	pc, r6, r3, lsl #22
    32e0:	0e740400 	cdpeq	4, 7, cr0, cr4, cr0, {0}
    32e4:	00000044 	andeq	r0, r0, r4, asr #32
    32e8:	a5040408 	strge	r0, [r4, #-1032]	; 0xfffffbf8
    32ec:	0000ec03 	andeq	lr, r0, r3, lsl #24
    32f0:	03da0900 	bicseq	r0, sl, #0, 18
    32f4:	a7040000 	strge	r0, [r4, -r0]
    32f8:	0000a50c 	andeq	sl, r0, ip, lsl #10
    32fc:	02ec0900 	rsceq	r0, ip, #0, 18
    3300:	a8040000 	stmdage	r4, {}	; <UNPREDICTABLE>
    3304:	0000ec13 	andeq	lr, r0, r3, lsl ip
    3308:	630a0000 	movwvs	r0, #40960	; 0xa000
    330c:	fc000000 	stc2	0, cr0, [r0], {-0}
    3310:	0b000000 	bleq	3318 <_Min_Stack_Size+0x2f18>
    3314:	00000097 	muleq	r0, r7, r0
    3318:	080c0003 	stmdaeq	ip, {r0, r1}
    331c:	2009a204 	andcs	sl, r9, r4, lsl #4
    3320:	0d000001 	stceq	0, cr0, [r0, #-4]
    3324:	000006e3 	andeq	r0, r0, r3, ror #13
    3328:	9007a404 	andls	sl, r7, r4, lsl #8
    332c:	00000000 	andeq	r0, r0, r0
    3330:	00080d0d 	andeq	r0, r8, sp, lsl #26
    3334:	05a90400 	streq	r0, [r9, #1024]!	; 0x400
    3338:	000000ca 	andeq	r0, r0, sl, asr #1
    333c:	6d030004 	stcvs	0, cr0, [r3, #-16]
    3340:	04000006 	streq	r0, [r0], #-6
    3344:	00fc03aa 	rscseq	r0, ip, sl, lsr #7
    3348:	040e0000 	streq	r0, [lr], #-0
    334c:	0007c303 	andeq	ip, r7, r3, lsl #6
    3350:	19160500 	ldmdbne	r6, {r8, sl}
    3354:	00000082 	andeq	r0, r0, r2, lsl #1
    3358:	0005cb03 	andeq	ip, r5, r3, lsl #22
    335c:	0d0c0600 	stceq	6, cr0, [ip, #-0]
    3360:	00000090 	muleq	r0, r0, r0
    3364:	00085903 	andeq	r5, r8, r3, lsl #18
    3368:	1b230500 	blne	8c4770 <_Min_Stack_Size+0x8c4370>
    336c:	0000013a 	andeq	r0, r0, sl, lsr r1
    3370:	00029b0f 	andeq	r9, r2, pc, lsl #22
    3374:	34051800 	strcc	r1, [r5], #-2048	; 0xfffff800
    3378:	0001ac08 	andeq	sl, r1, r8, lsl #24
    337c:	067d0d00 	ldrbteq	r0, [sp], -r0, lsl #26
    3380:	36050000 	strcc	r0, [r5], -r0
    3384:	0001ac13 	andeq	sl, r1, r3, lsl ip
    3388:	5f100000 	svcpl	0x00100000
    338c:	3705006b 	strcc	r0, [r5, -fp, rrx]
    3390:	00009007 	andeq	r9, r0, r7
    3394:	c40d0400 	strgt	r0, [sp], #-1024	; 0xfffffc00
    3398:	05000006 	streq	r0, [r0, #-6]
    339c:	00900b37 	addseq	r0, r0, r7, lsr fp
    33a0:	0d080000 	stceq	0, cr0, [r8, #-0]
    33a4:	0000028d 	andeq	r0, r0, sp, lsl #5
    33a8:	90143705 	andsls	r3, r4, r5, lsl #14
    33ac:	0c000000 	stceq	0, cr0, [r0], {-0}
    33b0:	00019a0d 	andeq	r9, r1, sp, lsl #20
    33b4:	1b370500 	blne	dc47bc <_Min_Stack_Size+0xdc43bc>
    33b8:	00000090 	muleq	r0, r0, r0
    33bc:	785f1010 	ldmdavc	pc, {r4, ip}^	; <UNPREDICTABLE>
    33c0:	0b380500 	bleq	e047c8 <_Min_Stack_Size+0xe043c8>
    33c4:	000001b2 			; <UNDEFINED> instruction: 0x000001b2
    33c8:	04110014 	ldreq	r0, [r1], #-20	; 0xffffffec
    33cc:	00000152 	andeq	r0, r0, r2, asr r1
    33d0:	00012e0a 	andeq	r2, r1, sl, lsl #28
    33d4:	0001c200 	andeq	ip, r1, r0, lsl #4
    33d8:	00970b00 	addseq	r0, r7, r0, lsl #22
    33dc:	00000000 	andeq	r0, r0, r0
    33e0:	0002d50f 	andeq	sp, r2, pc, lsl #10
    33e4:	3c052400 	cfstrscc	mvf2, [r5], {-0}
    33e8:	00024508 	andeq	r4, r2, r8, lsl #10
    33ec:	01080d00 	tsteq	r8, r0, lsl #26
    33f0:	3e050000 	cdpcc	0, 0, cr0, cr5, cr0, {0}
    33f4:	00009009 	andeq	r9, r0, r9
    33f8:	b50d0000 	strlt	r0, [sp, #-0]
    33fc:	05000007 	streq	r0, [r0, #-7]
    3400:	0090093f 	addseq	r0, r0, pc, lsr r9
    3404:	0d040000 	stceq	0, cr0, [r4, #-0]
    3408:	00000139 	andeq	r0, r0, r9, lsr r1
    340c:	90094005 	andls	r4, r9, r5
    3410:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3414:	0008ca0d 	andeq	ip, r8, sp, lsl #20
    3418:	09410500 	stmdbeq	r1, {r8, sl}^
    341c:	00000090 	muleq	r0, r0, r0
    3420:	05380d0c 	ldreq	r0, [r8, #-3340]!	; 0xfffff2f4
    3424:	42050000 	andmi	r0, r5, #0
    3428:	00009009 	andeq	r9, r0, r9
    342c:	210d1000 	mrscs	r1, (UNDEF: 13)
    3430:	05000004 	streq	r0, [r0, #-4]
    3434:	00900943 	addseq	r0, r0, r3, asr #18
    3438:	0d140000 	ldceq	0, cr0, [r4, #-0]
    343c:	000007f6 	strdeq	r0, [r0], -r6
    3440:	90094405 	andls	r4, r9, r5, lsl #8
    3444:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3448:	0006400d 	andeq	r4, r6, sp
    344c:	09450500 	stmdbeq	r5, {r8, sl}^
    3450:	00000090 	muleq	r0, r0, r0
    3454:	088c0d1c 	stmeq	ip, {r2, r3, r4, r8, sl, fp}
    3458:	46050000 	strmi	r0, [r5], -r0
    345c:	00009009 	andeq	r9, r0, r9
    3460:	12002000 	andne	r2, r0, #0
    3464:	00000148 	andeq	r0, r0, r8, asr #2
    3468:	4f050108 	svcmi	0x00050108
    346c:	00028a08 	andeq	r8, r2, r8, lsl #20
    3470:	026d0d00 	rsbeq	r0, sp, #0, 26
    3474:	50050000 	andpl	r0, r5, r0
    3478:	00028a0a 	andeq	r8, r2, sl, lsl #20
    347c:	fe0d0000 	cdp2	0, 0, cr0, cr13, cr0, {0}
    3480:	05000005 	streq	r0, [r0, #-5]
    3484:	028a0951 	addeq	r0, sl, #1327104	; 0x144000
    3488:	13800000 	orrne	r0, r0, #0
    348c:	00000796 	muleq	r0, r6, r7
    3490:	2e0a5305 	cdpcs	3, 0, cr5, cr10, cr5, {0}
    3494:	00000001 	andeq	r0, r0, r1
    3498:	01921301 	orrseq	r1, r2, r1, lsl #6
    349c:	56050000 	strpl	r0, [r5], -r0
    34a0:	00012e0a 	andeq	r2, r1, sl, lsl #28
    34a4:	00010400 	andeq	r0, r1, r0, lsl #8
    34a8:	00012c0a 	andeq	r2, r1, sl, lsl #24
    34ac:	00029a00 	andeq	r9, r2, r0, lsl #20
    34b0:	00970b00 	addseq	r0, r7, r0, lsl #22
    34b4:	001f0000 	andseq	r0, pc, r0
    34b8:	004a7612 	subeq	r7, sl, r2, lsl r6
    34bc:	05019000 	streq	r9, [r1, #-0]
    34c0:	02dd0862 	sbcseq	r0, sp, #6422528	; 0x620000
    34c4:	7d0d0000 	stcvc	0, cr0, [sp, #-0]
    34c8:	05000006 	streq	r0, [r0, #-6]
    34cc:	02dd1263 	sbcseq	r1, sp, #805306374	; 0x30000006
    34d0:	0d000000 	stceq	0, cr0, [r0, #-0]
    34d4:	0000068e 	andeq	r0, r0, lr, lsl #13
    34d8:	90066405 	andls	r6, r6, r5, lsl #8
    34dc:	04000000 	streq	r0, [r0], #-0
    34e0:	0002880d 	andeq	r8, r2, sp, lsl #16
    34e4:	09660500 	stmdbeq	r6!, {r8, sl}^
    34e8:	000002e3 	andeq	r0, r0, r3, ror #5
    34ec:	01480d08 	cmpeq	r8, r8, lsl #26
    34f0:	67050000 	strvs	r0, [r5, -r0]
    34f4:	0002451e 	andeq	r4, r2, lr, lsl r5
    34f8:	11008800 	tstne	r0, r0, lsl #16
    34fc:	00029a04 	andeq	r9, r2, r4, lsl #20
    3500:	02f30a00 	rscseq	r0, r3, #0, 20
    3504:	02f30000 	rscseq	r0, r3, #0
    3508:	970b0000 	strls	r0, [fp, -r0]
    350c:	1f000000 	svcne	0x00000000
    3510:	f9041100 			; <UNDEFINED> instruction: 0xf9041100
    3514:	14000002 	strne	r0, [r0], #-2
    3518:	00064a0f 	andeq	r4, r6, pc, lsl #20
    351c:	7a050800 	bvc	145524 <_Min_Stack_Size+0x145124>
    3520:	00032208 	andeq	r2, r3, r8, lsl #4
    3524:	01330d00 	teqeq	r3, r0, lsl #26
    3528:	7b050000 	blvc	143530 <_Min_Stack_Size+0x143130>
    352c:	00032211 	andeq	r2, r3, r1, lsl r2
    3530:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    3534:	05000007 	streq	r0, [r0, #-7]
    3538:	0090067c 	addseq	r0, r0, ip, ror r6
    353c:	00040000 	andeq	r0, r4, r0
    3540:	00630411 	rsbeq	r0, r3, r1, lsl r4
    3544:	280f0000 	stmdacs	pc, {}	; <UNPREDICTABLE>
    3548:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    354c:	6b08ba05 	blvs	231d68 <_Min_Stack_Size+0x231968>
    3550:	10000004 	andne	r0, r0, r4
    3554:	0500705f 	streq	r7, [r0, #-95]	; 0xffffffa1
    3558:	032212bb 			; <UNDEFINED> instruction: 0x032212bb
    355c:	10000000 	andne	r0, r0, r0
    3560:	0500725f 	streq	r7, [r0, #-607]	; 0xfffffda1
    3564:	009007bc 			; <UNDEFINED> instruction: 0x009007bc
    3568:	10040000 	andne	r0, r4, r0
    356c:	0500775f 	streq	r7, [r0, #-1887]	; 0xfffff8a1
    3570:	009007bd 			; <UNDEFINED> instruction: 0x009007bd
    3574:	0d080000 	stceq	0, cr0, [r8, #-0]
    3578:	0000018b 	andeq	r0, r0, fp, lsl #3
    357c:	2c09be05 	stccs	14, cr11, [r9], {5}
    3580:	0c000000 	stceq	0, cr0, [r0], {-0}
    3584:	00030d0d 	andeq	r0, r3, sp, lsl #26
    3588:	09bf0500 	ldmibeq	pc!, {r8, sl}	; <UNPREDICTABLE>
    358c:	0000002c 	andeq	r0, r0, ip, lsr #32
    3590:	625f100e 	subsvs	r1, pc, #14
    3594:	c0050066 	andgt	r0, r5, r6, rrx
    3598:	0002fa11 	andeq	pc, r2, r1, lsl sl	; <UNPREDICTABLE>
    359c:	b70d1000 	strlt	r1, [sp, -r0]
    35a0:	05000000 	streq	r0, [r0, #-0]
    35a4:	009007c1 	addseq	r0, r0, r1, asr #15
    35a8:	0d180000 	ldceq	0, cr0, [r8, #-0]
    35ac:	00000169 	andeq	r0, r0, r9, ror #2
    35b0:	2c0ac805 	stccs	8, cr12, [sl], {5}
    35b4:	1c000001 	stcne	0, cr0, [r0], {1}
    35b8:	0033bd0d 	eorseq	fp, r3, sp, lsl #26
    35bc:	1dca0500 	cfstr64ne	mvdx0, [sl]
    35c0:	000005ef 	andeq	r0, r0, pc, ror #11
    35c4:	33360d20 	teqcc	r6, #32, 26	; 0x800
    35c8:	cc050000 	stcgt	0, cr0, [r5], {-0}
    35cc:	0006191d 	andeq	r1, r6, sp, lsl r9
    35d0:	eb0d2400 	bl	34c5d8 <_Min_Stack_Size+0x34c1d8>
    35d4:	05000006 	streq	r0, [r0, #-6]
    35d8:	063d0dcf 	ldrteq	r0, [sp], -pc, asr #27
    35dc:	0d280000 	stceq	0, cr0, [r8, #-0]
    35e0:	000008a6 	andeq	r0, r0, r6, lsr #17
    35e4:	5709d005 	strpl	sp, [r9, -r5]
    35e8:	2c000006 	stccs	0, cr0, [r0], {6}
    35ec:	62755f10 	rsbsvs	r5, r5, #16, 30	; 0x40
    35f0:	11d30500 	bicsne	r0, r3, r0, lsl #10
    35f4:	000002fa 	strdeq	r0, [r0], -sl
    35f8:	755f1030 	ldrbvc	r1, [pc, #-48]	; 35d0 <_Min_Stack_Size+0x31d0>
    35fc:	d4050070 	strle	r0, [r5], #-112	; 0xffffff90
    3600:	00032212 	andeq	r2, r3, r2, lsl r2
    3604:	5f103800 	svcpl	0x00103800
    3608:	05007275 	streq	r7, [r0, #-629]	; 0xfffffd8b
    360c:	009007d5 			; <UNDEFINED> instruction: 0x009007d5
    3610:	0d3c0000 	ldceq	0, cr0, [ip, #-0]
    3614:	0000012d 	andeq	r0, r0, sp, lsr #2
    3618:	5d11d805 	ldcpl	8, cr13, [r1, #-20]	; 0xffffffec
    361c:	40000006 	andmi	r0, r0, r6
    3620:	0008760d 	andeq	r7, r8, sp, lsl #12
    3624:	11d90500 	bicsne	r0, r9, r0, lsl #10
    3628:	0000066d 	andeq	r0, r0, sp, ror #12
    362c:	6c5f1043 	mrrcvs	0, 4, r1, pc, cr3	; <UNPREDICTABLE>
    3630:	dc050062 	stcle	0, cr0, [r5], {98}	; 0x62
    3634:	0002fa11 	andeq	pc, r2, r1, lsl sl	; <UNPREDICTABLE>
    3638:	250d4400 	strcs	r4, [sp, #-1024]	; 0xfffffc00
    363c:	05000007 	streq	r0, [r0, #-7]
    3640:	009007df 			; <UNDEFINED> instruction: 0x009007df
    3644:	0d4c0000 	stcleq	0, cr0, [ip, #-0]
    3648:	00000438 	andeq	r0, r0, r8, lsr r4
    364c:	b20ae005 	andlt	lr, sl, #5
    3650:	50000000 	andpl	r0, r0, r0
    3654:	004baa0d 	subeq	sl, fp, sp, lsl #20
    3658:	12e30500 	rscne	r0, r3, #0, 10
    365c:	00000489 	andeq	r0, r0, r9, lsl #9
    3660:	03f10d54 	mvnseq	r0, #84, 26	; 0x1500
    3664:	e7050000 	str	r0, [r5, -r0]
    3668:	0001460c 	andeq	r4, r1, ip, lsl #12
    366c:	e30d5800 	movw	r5, #55296	; 0xd800
    3670:	05000002 	streq	r0, [r0, #-2]
    3674:	01200ee9 	smulwteq	r0, r9, lr
    3678:	0d5c0000 	ldcleq	0, cr0, [ip, #-0]
    367c:	00000651 	andeq	r0, r0, r1, asr r6
    3680:	9009ea05 	andls	lr, r9, r5, lsl #20
    3684:	64000000 	strvs	r0, [r0], #-0
    3688:	00901500 	addseq	r1, r0, r0, lsl #10
    368c:	04890000 	streq	r0, [r9], #0
    3690:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    3694:	16000004 	strne	r0, [r0], -r4
    3698:	0000012c 	andeq	r0, r0, ip, lsr #2
    369c:	0005dd16 	andeq	sp, r5, r6, lsl sp
    36a0:	00901600 	addseq	r1, r0, r0, lsl #12
    36a4:	11000000 	mrsne	r0, (UNDEF: 0)
    36a8:	00049404 	andeq	r9, r4, r4, lsl #8
    36ac:	04890500 	streq	r0, [r9], #1280	; 0x500
    36b0:	cc170000 	ldcgt	0, cr0, [r7], {-0}
    36b4:	28000006 	stmdacs	r0, {r1, r2}
    36b8:	02650504 	rsbeq	r0, r5, #4, 10	; 0x1000000
    36bc:	0005dd08 	andeq	sp, r5, r8, lsl #26
    36c0:	062c1800 	strteq	r1, [ip], -r0, lsl #16
    36c4:	67050000 	strvs	r0, [r5, -r0]
    36c8:	00900702 	addseq	r0, r0, r2, lsl #14
    36cc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    36d0:	00000806 	andeq	r0, r0, r6, lsl #16
    36d4:	0b026c05 	bleq	9e6f0 <_Min_Stack_Size+0x9e2f0>
    36d8:	000006c9 	andeq	r0, r0, r9, asr #13
    36dc:	07ee1804 	strbeq	r1, [lr, r4, lsl #16]!
    36e0:	6c050000 	stcvs	0, cr0, [r5], {-0}
    36e4:	06c91402 	strbeq	r1, [r9], r2, lsl #8
    36e8:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    36ec:	00000293 	muleq	r0, r3, r2
    36f0:	1e026c05 	cdpne	12, 0, cr6, cr2, cr5, {0}
    36f4:	000006c9 	andeq	r0, r0, r9, asr #13
    36f8:	0689180c 	streq	r1, [r9], ip, lsl #16
    36fc:	6e050000 	cdpvs	0, 0, cr0, cr5, cr0, {0}
    3700:	00900802 	addseq	r0, r0, r2, lsl #16
    3704:	18100000 	ldmdane	r0, {}	; <UNPREDICTABLE>
    3708:	00000042 	andeq	r0, r0, r2, asr #32
    370c:	08026f05 	stmdaeq	r2, {r0, r2, r8, r9, sl, fp, sp, lr}
    3710:	000008c9 	andeq	r0, r0, r9, asr #17
    3714:	06ab1814 	ssateq	r1, #12, r4, lsl #16
    3718:	72050000 	andvc	r0, r5, #0
    371c:	00900702 	addseq	r0, r0, r2, lsl #14
    3720:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
    3724:	0000069b 	muleq	r0, fp, r6
    3728:	16027305 	strne	r7, [r2], -r5, lsl #6
    372c:	000008de 	ldrdeq	r0, [r0], -lr
    3730:	05411834 	strbeq	r1, [r1, #-2100]	; 0xfffff7cc
    3734:	75050000 	strvc	r0, [r5, #-0]
    3738:	00900702 	addseq	r0, r0, r2, lsl #14
    373c:	18380000 	ldmdane	r8!, {}	; <UNPREDICTABLE>
    3740:	000007e4 	andeq	r0, r0, r4, ror #15
    3744:	0a027705 	beq	a1360 <_Min_Stack_Size+0xa0f60>
    3748:	000008ef 	andeq	r0, r0, pc, ror #17
    374c:	03fd183c 	mvnseq	r1, #60, 16	; 0x3c0000
    3750:	7a050000 	bvc	143758 <_Min_Stack_Size+0x143358>
    3754:	01ac1302 			; <UNDEFINED> instruction: 0x01ac1302
    3758:	18400000 	stmdane	r0, {}^	; <UNPREDICTABLE>
    375c:	000001a6 	andeq	r0, r0, r6, lsr #3
    3760:	07027b05 	streq	r7, [r2, -r5, lsl #22]
    3764:	00000090 	muleq	r0, r0, r0
    3768:	08c01844 	stmiaeq	r0, {r2, r6, fp, ip}^
    376c:	7c050000 	stcvc	0, cr0, [r5], {-0}
    3770:	01ac1302 			; <UNDEFINED> instruction: 0x01ac1302
    3774:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
    3778:	000005a3 	andeq	r0, r0, r3, lsr #11
    377c:	14027d05 	strne	r7, [r2], #-3333	; 0xfffff2fb
    3780:	000008f5 	strdeq	r0, [r0], -r5
    3784:	0305184c 	movweq	r1, #22604	; 0x584c
    3788:	80050000 	andhi	r0, r5, r0
    378c:	00900702 	addseq	r0, r0, r2, lsl #14
    3790:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
    3794:	000005f6 	strdeq	r0, [r0], -r6
    3798:	09028105 	stmdbeq	r2, {r0, r2, r8, pc}
    379c:	000005dd 	ldrdeq	r0, [r0], -sp
    37a0:	061c1854 			; <UNDEFINED> instruction: 0x061c1854
    37a4:	a4050000 	strge	r0, [r5], #-0
    37a8:	08a40702 	stmiaeq	r4!, {r1, r8, r9, sl}
    37ac:	19580000 	ldmdbne	r8, {}^	; <UNPREDICTABLE>
    37b0:	00004a76 	andeq	r4, r0, r6, ror sl
    37b4:	1302a805 	movwne	sl, #10245	; 0x2805
    37b8:	000002dd 	ldrdeq	r0, [r0], -sp
    37bc:	8a190148 	bhi	643ce4 <_Min_Stack_Size+0x6438e4>
    37c0:	05000003 	streq	r0, [r0, #-3]
    37c4:	9a1202a9 	bls	484270 <_Min_Stack_Size+0x483e70>
    37c8:	4c000002 	stcmi	0, cr0, [r0], {2}
    37cc:	08321901 	ldmdaeq	r2!, {r0, r8, fp, ip}
    37d0:	ad050000 	stcge	0, cr0, [r5, #-0]
    37d4:	09060c02 	stmdbeq	r6, {r1, sl, fp}
    37d8:	02dc0000 	sbcseq	r0, ip, #0
    37dc:	00017119 	andeq	r7, r1, r9, lsl r1
    37e0:	02b20500 	adcseq	r0, r2, #0, 10
    37e4:	00068a10 	andeq	r8, r6, r0, lsl sl
    37e8:	1902e000 	stmdbne	r2, {sp, lr, pc}
    37ec:	00000143 	andeq	r0, r0, r3, asr #2
    37f0:	0a02b405 	beq	b080c <_Min_Stack_Size+0xb040c>
    37f4:	00000912 	andeq	r0, r0, r2, lsl r9
    37f8:	110002ec 	smlattne	r0, ip, r2, r0
    37fc:	0005e304 	andeq	lr, r5, r4, lsl #6
    3800:	08010200 	stmdaeq	r1, {r9}
    3804:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    3808:	0005e305 	andeq	lr, r5, r5, lsl #6
    380c:	6b041100 	blvs	107c14 <_Min_Stack_Size+0x107814>
    3810:	15000004 	strne	r0, [r0, #-4]
    3814:	00000090 	muleq	r0, r0, r0
    3818:	00000613 	andeq	r0, r0, r3, lsl r6
    381c:	00048916 	andeq	r8, r4, r6, lsl r9
    3820:	012c1600 			; <UNDEFINED> instruction: 0x012c1600
    3824:	13160000 	tstne	r6, #0
    3828:	16000006 	strne	r0, [r0], -r6
    382c:	00000090 	muleq	r0, r0, r0
    3830:	ea041100 	b	107c38 <_Min_Stack_Size+0x107838>
    3834:	11000005 	tstne	r0, r5
    3838:	0005f504 	andeq	pc, r5, r4, lsl #10
    383c:	00be1500 	adcseq	r1, lr, r0, lsl #10
    3840:	063d0000 	ldrteq	r0, [sp], -r0
    3844:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    3848:	16000004 	strne	r0, [r0], -r4
    384c:	0000012c 	andeq	r0, r0, ip, lsr #2
    3850:	0000be16 	andeq	fp, r0, r6, lsl lr
    3854:	00901600 	addseq	r1, r0, r0, lsl #12
    3858:	11000000 	mrsne	r0, (UNDEF: 0)
    385c:	00061f04 	andeq	r1, r6, r4, lsl #30
    3860:	00901500 	addseq	r1, r0, r0, lsl #10
    3864:	06570000 	ldrbeq	r0, [r7], -r0
    3868:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    386c:	16000004 	strne	r0, [r0], -r4
    3870:	0000012c 	andeq	r0, r0, ip, lsr #2
    3874:	43041100 	movwmi	r1, #16640	; 0x4100
    3878:	0a000006 	beq	3898 <_Min_Stack_Size+0x3498>
    387c:	00000063 	andeq	r0, r0, r3, rrx
    3880:	0000066d 	andeq	r0, r0, sp, ror #12
    3884:	0000970b 	andeq	r9, r0, fp, lsl #14
    3888:	0a000200 	beq	4090 <_Min_Stack_Size+0x3c90>
    388c:	00000063 	andeq	r0, r0, r3, rrx
    3890:	0000067d 	andeq	r0, r0, sp, ror r6
    3894:	0000970b 	andeq	r9, r0, fp, lsl #14
    3898:	07000000 	streq	r0, [r0, -r0]
    389c:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    38a0:	1a012405 	bne	4c8bc <_Min_Stack_Size+0x4c4bc>
    38a4:	00000328 	andeq	r0, r0, r8, lsr #6
    38a8:	0008001a 	andeq	r0, r8, sl, lsl r0
    38ac:	28050c00 	stmdacs	r5, {sl, fp}
    38b0:	06c30801 	strbeq	r0, [r3], r1, lsl #16
    38b4:	7d180000 	ldcvc	0, cr0, [r8, #-0]
    38b8:	05000006 	streq	r0, [r0, #-6]
    38bc:	c311012a 	tstgt	r1, #-2147483638	; 0x8000000a
    38c0:	00000006 	andeq	r0, r0, r6
    38c4:	00037018 	andeq	r7, r3, r8, lsl r0
    38c8:	012b0500 			; <UNDEFINED> instruction: 0x012b0500
    38cc:	00009007 	andeq	r9, r0, r7
    38d0:	83180400 	tsthi	r8, #0, 8
    38d4:	05000006 	streq	r0, [r0, #-6]
    38d8:	c90b012c 	stmdbgt	fp, {r2, r3, r5, r8}
    38dc:	08000006 	stmdaeq	r0, {r1, r2}
    38e0:	8a041100 	bhi	107ce8 <_Min_Stack_Size+0x1078e8>
    38e4:	11000006 	tstne	r0, r6
    38e8:	00067d04 	andeq	r7, r6, r4, lsl #26
    38ec:	00301a00 	eorseq	r1, r0, r0, lsl #20
    38f0:	050e0000 	streq	r0, [lr, #-0]
    38f4:	08080144 	stmdaeq	r8, {r2, r6, r8}
    38f8:	18000007 	stmdane	r0, {r0, r1, r2}
    38fc:	000006d3 	ldrdeq	r0, [r0], -r3
    3900:	12014505 	andne	r4, r1, #20971520	; 0x1400000
    3904:	00000708 	andeq	r0, r0, r8, lsl #14
    3908:	03f71800 	mvnseq	r1, #0, 16
    390c:	46050000 	strmi	r0, [r5], -r0
    3910:	07081201 	streq	r1, [r8, -r1, lsl #4]
    3914:	18060000 	stmdane	r6, {}	; <UNPREDICTABLE>
    3918:	000007be 			; <UNDEFINED> instruction: 0x000007be
    391c:	12014705 	andne	r4, r1, #1310720	; 0x140000
    3920:	0000006a 	andeq	r0, r0, sl, rrx
    3924:	6a0a000c 	bvs	28395c <_Min_Stack_Size+0x28355c>
    3928:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    392c:	0b000007 	bleq	3950 <_Min_Stack_Size+0x3550>
    3930:	00000097 	muleq	r0, r7, r0
    3934:	d01b0002 	andsle	r0, fp, r2
    3938:	07028505 	streq	r8, [r2, -r5, lsl #10]
    393c:	0000082d 	andeq	r0, r0, sp, lsr #16
    3940:	00042b18 	andeq	r2, r4, r8, lsl fp
    3944:	02870500 	addeq	r0, r7, #0, 10
    3948:	00009718 	andeq	r9, r0, r8, lsl r7
    394c:	81180000 	tsthi	r8, r0
    3950:	05000007 	streq	r0, [r0, #-7]
    3954:	dd120288 	lfmle	f0, 4, [r2, #-544]	; 0xfffffde0
    3958:	04000005 	streq	r0, [r0], #-5
    395c:	0003aa18 	andeq	sl, r3, r8, lsl sl
    3960:	02890500 	addeq	r0, r9, #0, 10
    3964:	00082d10 	andeq	r2, r8, r0, lsl sp
    3968:	97180800 	ldrls	r0, [r8, -r0, lsl #16]
    396c:	05000008 	streq	r0, [r0, #-8]
    3970:	c217028a 	andsgt	r0, r7, #-1610612728	; 0xa0000008
    3974:	24000001 	strcs	r0, [r0], #-1
    3978:	0002a318 	andeq	sl, r2, r8, lsl r3
    397c:	028b0500 	addeq	r0, fp, #0, 10
    3980:	0000900f 	andeq	r9, r0, pc
    3984:	78184800 	ldmdavc	r8, {fp, lr}
    3988:	05000006 	streq	r0, [r0, #-6]
    398c:	892c028c 	stmdbhi	ip!, {r2, r3, r7, r9}
    3990:	50000000 	andpl	r0, r0, r0
    3994:	0008ad18 	andeq	sl, r8, r8, lsl sp
    3998:	028d0500 	addeq	r0, sp, #0, 10
    399c:	0006cf1a 	andeq	ip, r6, sl, lsl pc
    39a0:	33185800 	tstcc	r8, #0, 16
    39a4:	05000006 	streq	r0, [r0, #-6]
    39a8:	2016028e 	andscs	r0, r6, lr, lsl #5
    39ac:	68000001 	stmdavs	r0, {r0}
    39b0:	0008b218 	andeq	fp, r8, r8, lsl r2
    39b4:	028f0500 	addeq	r0, pc, #0, 10
    39b8:	00012016 	andeq	r2, r1, r6, lsl r0
    39bc:	fa187000 	blx	61f9c4 <_Min_Stack_Size+0x61f5c4>
    39c0:	05000000 	streq	r0, [r0, #-0]
    39c4:	20160290 	mulscs	r6, r0, r2
    39c8:	78000001 	stmdavc	r0, {r0}
    39cc:	00081518 	andeq	r1, r8, r8, lsl r5
    39d0:	02910500 	addseq	r0, r1, #0, 10
    39d4:	00083d10 	andeq	r3, r8, r0, lsl sp
    39d8:	9e188000 	cdpls	0, 1, cr8, cr8, cr0, {0}
    39dc:	05000003 	streq	r0, [r0, #-3]
    39e0:	4d100292 	lfmmi	f0, 4, [r0, #-584]	; 0xfffffdb8
    39e4:	88000008 	stmdahi	r0, {r3}
    39e8:	00006518 	andeq	r6, r0, r8, lsl r5
    39ec:	02930500 	addseq	r0, r3, #0, 10
    39f0:	0000900f 	andeq	r9, r0, pc
    39f4:	5f18a000 	svcpl	0x0018a000
    39f8:	05000002 	streq	r0, [r0, #-2]
    39fc:	20160294 	mulscs	r6, r4, r2
    3a00:	a4000001 	strge	r0, [r0], #-1
    3a04:	0000e118 	andeq	lr, r0, r8, lsl r1
    3a08:	02950500 	addseq	r0, r5, #0, 10
    3a0c:	00012016 	andeq	r2, r1, r6, lsl r0
    3a10:	3418ac00 	ldrcc	sl, [r8], #-3072	; 0xfffff400
    3a14:	05000002 	streq	r0, [r0, #-2]
    3a18:	20160296 	mulscs	r6, r6, r2
    3a1c:	b4000001 	strlt	r0, [r0], #-1
    3a20:	00007c18 	andeq	r7, r0, r8, lsl ip
    3a24:	02970500 	addseq	r0, r7, #0, 10
    3a28:	00012016 	andeq	r2, r1, r6, lsl r0
    3a2c:	8218bc00 	andshi	fp, r8, #0, 24
    3a30:	05000005 	streq	r0, [r0, #-5]
    3a34:	20160298 	mulscs	r6, r8, r2
    3a38:	c4000001 	strgt	r0, [r0], #-1
    3a3c:	00062a18 	andeq	r2, r6, r8, lsl sl
    3a40:	02990500 	addseq	r0, r9, #0, 10
    3a44:	00009008 	andeq	r9, r0, r8
    3a48:	0a00cc00 	beq	36a50 <_Min_Stack_Size+0x36650>
    3a4c:	000005e3 	andeq	r0, r0, r3, ror #11
    3a50:	0000083d 	andeq	r0, r0, sp, lsr r8
    3a54:	0000970b 	andeq	r9, r0, fp, lsl #14
    3a58:	0a001900 	beq	9e60 <_Min_Stack_Size+0x9a60>
    3a5c:	000005e3 	andeq	r0, r0, r3, ror #11
    3a60:	0000084d 	andeq	r0, r0, sp, asr #16
    3a64:	0000970b 	andeq	r9, r0, fp, lsl #14
    3a68:	0a000700 	beq	5670 <_Min_Stack_Size+0x5270>
    3a6c:	000005e3 	andeq	r0, r0, r3, ror #11
    3a70:	0000085d 	andeq	r0, r0, sp, asr r8
    3a74:	0000970b 	andeq	r9, r0, fp, lsl #14
    3a78:	1b001700 	blne	9680 <_Min_Stack_Size+0x9280>
    3a7c:	029e05f0 	addseq	r0, lr, #240, 10	; 0x3c000000
    3a80:	00088407 	andeq	r8, r8, r7, lsl #8
    3a84:	04401800 	strbeq	r1, [r0], #-2048	; 0xfffff800
    3a88:	a1050000 	mrsge	r0, (UNDEF: 5)
    3a8c:	08841b02 	stmeq	r4, {r1, r8, r9, fp, ip}
    3a90:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3a94:	000002c0 	andeq	r0, r0, r0, asr #5
    3a98:	1802a205 	stmdane	r2, {r0, r2, r9, sp, pc}
    3a9c:	00000894 	muleq	r0, r4, r8
    3aa0:	220a0078 	andcs	r0, sl, #120	; 0x78
    3aa4:	94000003 	strls	r0, [r0], #-3
    3aa8:	0b000008 	bleq	3ad0 <_Min_Stack_Size+0x36d0>
    3aac:	00000097 	muleq	r0, r7, r0
    3ab0:	970a001d 	smladls	sl, sp, r0, r0
    3ab4:	a4000000 	strge	r0, [r0], #-0
    3ab8:	0b000008 	bleq	3ae0 <_Min_Stack_Size+0x36e0>
    3abc:	00000097 	muleq	r0, r7, r0
    3ac0:	f01c001d 			; <UNDEFINED> instruction: 0xf01c001d
    3ac4:	03028305 	movweq	r8, #8965	; 0x2305
    3ac8:	000008c9 	andeq	r0, r0, r9, asr #17
    3acc:	0006cc1d 	andeq	ip, r6, sp, lsl ip
    3ad0:	029a0500 	addseq	r0, sl, #0, 10
    3ad4:	0007180b 	andeq	r1, r7, fp, lsl #16
    3ad8:	087c1d00 	ldmdaeq	ip!, {r8, sl, fp, ip}^
    3adc:	a3050000 	movwge	r0, #20480	; 0x5000
    3ae0:	085d0b02 	ldmdaeq	sp, {r1, r8, r9, fp}^
    3ae4:	0a000000 	beq	3aec <_Min_Stack_Size+0x36ec>
    3ae8:	000005e3 	andeq	r0, r0, r3, ror #11
    3aec:	000008d9 	ldrdeq	r0, [r0], -r9
    3af0:	0000970b 	andeq	r9, r0, fp, lsl #14
    3af4:	1e001800 	cdpne	8, 0, cr1, cr0, cr0, {0}
    3af8:	000000c0 	andeq	r0, r0, r0, asr #1
    3afc:	08d90411 	ldmeq	r9, {r0, r4, sl}^
    3b00:	ef1f0000 	svc	0x001f0000
    3b04:	16000008 	strne	r0, [r0], -r8
    3b08:	00000489 	andeq	r0, r0, r9, lsl #9
    3b0c:	e4041100 	str	r1, [r4], #-256	; 0xffffff00
    3b10:	11000008 	tstne	r0, r8
    3b14:	0001ac04 	andeq	sl, r1, r4, lsl #24
    3b18:	09061f00 	stmdbeq	r6, {r8, r9, sl, fp, ip}
    3b1c:	90160000 	andsls	r0, r6, r0
    3b20:	00000000 	andeq	r0, r0, r0
    3b24:	090c0411 	stmdbeq	ip, {r0, r4, sl}
    3b28:	04110000 	ldreq	r0, [r1], #-0
    3b2c:	000008fb 	strdeq	r0, [r0], -fp
    3b30:	00067d0a 	andeq	r7, r6, sl, lsl #26
    3b34:	00092200 	andeq	r2, r9, r0, lsl #4
    3b38:	00970b00 	addseq	r0, r7, r0, lsl #22
    3b3c:	00020000 	andeq	r0, r2, r0
    3b40:	0007d220 	andeq	sp, r7, r0, lsr #4
    3b44:	03330500 	teqeq	r3, #0, 10
    3b48:	00048917 	andeq	r8, r4, r7, lsl r9
    3b4c:	07cb2000 	strbeq	r2, [fp, r0]
    3b50:	34050000 	strcc	r0, [r5], #-0
    3b54:	048f1d03 	streq	r1, [pc], #3331	; 3b5c <_Min_Stack_Size+0x375c>
    3b58:	d4200000 	strtle	r0, [r0], #-0
    3b5c:	07000000 	streq	r0, [r0, -r0]
    3b60:	3f190804 	svccc	0x00190804
    3b64:	21000000 	mrscs	r0, (UNDEF: 0)
    3b68:	00000593 	muleq	r0, r3, r5
    3b6c:	71114a08 	tstvc	r1, r8, lsl #20
    3b70:	0a000000 	beq	3b78 <_Min_Stack_Size+0x3778>
    3b74:	0000005e 	andeq	r0, r0, lr, asr r0
    3b78:	00000965 	andeq	r0, r0, r5, ror #18
    3b7c:	0000970b 	andeq	r9, r0, fp, lsl #14
    3b80:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
    3b84:	00000955 	andeq	r0, r0, r5, asr r9
    3b88:	00076021 	andeq	r6, r7, r1, lsr #32
    3b8c:	174c0800 	strbne	r0, [ip, -r0, lsl #16]
    3b90:	00000965 	andeq	r0, r0, r5, ror #18
    3b94:	00005e0a 	andeq	r5, r0, sl, lsl #28
    3b98:	00098600 	andeq	r8, r9, r0, lsl #12
    3b9c:	00970b00 	addseq	r0, r7, r0, lsl #22
    3ba0:	00070000 	andeq	r0, r7, r0
    3ba4:	00097605 	andeq	r7, r9, r5, lsl #12
    3ba8:	02b22100 	adcseq	r2, r2, #0, 2
    3bac:	4d080000 	stcmi	0, cr0, [r8, #-0]
    3bb0:	00098617 	andeq	r8, r9, r7, lsl r6
    3bb4:	01072200 	mrseq	r2, (UNDEF: 39)
    3bb8:	00000063 	andeq	r0, r0, r3, rrx
    3bbc:	be013309 	cdplt	3, 0, cr3, cr1, cr9, {0}
    3bc0:	23000009 	movwcs	r0, #9
    3bc4:	00000846 	andeq	r0, r0, r6, asr #16
    3bc8:	073d2364 	ldreq	r2, [sp, -r4, ror #6]!
    3bcc:	230a0000 	movwcs	r0, #40960	; 0xa000
    3bd0:	00000356 	andeq	r0, r0, r6, asr r3
    3bd4:	054c2301 	strbeq	r2, [ip, #-769]	; 0xfffffcff
    3bd8:	00010000 	andeq	r0, r1, r0
    3bdc:	00001403 	andeq	r1, r0, r3, lsl #8
    3be0:	03380900 	teqeq	r8, #0, 18
    3be4:	00000997 	muleq	r0, r7, r9
    3be8:	0002fe21 	andeq	pc, r2, r1, lsr #28
    3bec:	16cd0900 	strbne	r0, [sp], r0, lsl #18
    3bf0:	0000007d 	andeq	r0, r0, sp, ror r0
    3bf4:	0003c021 	andeq	ip, r3, r1, lsr #32
    3bf8:	11ce0900 	bicne	r0, lr, r0, lsl #18
    3bfc:	00000071 	andeq	r0, r0, r1, ror r0
    3c00:	0002f321 	andeq	pc, r2, r1, lsr #6
    3c04:	1ccf0900 			; <UNDEFINED> instruction: 0x1ccf0900
    3c08:	000009be 			; <UNDEFINED> instruction: 0x000009be
    3c0c:	0012ea24 	andseq	lr, r2, r4, lsr #20
    3c10:	06890100 	streq	r0, [r9], r0, lsl #2
    3c14:	0800117c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, ip}
    3c18:	0000000c 	andeq	r0, r0, ip
    3c1c:	43259c01 			; <UNDEFINED> instruction: 0x43259c01
    3c20:	01000013 	tsteq	r0, r3, lsl r0
    3c24:	1164067f 	smcne	16495	; 0x406f
    3c28:	00180800 	andseq	r0, r8, r0, lsl #16
    3c2c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3c30:	00000a26 	andeq	r0, r0, r6, lsr #20
    3c34:	00133a26 	andseq	r3, r3, r6, lsr #20
    3c38:	000a3600 	andeq	r3, sl, r0, lsl #12
    3c3c:	08030500 	stmdaeq	r3, {r8, sl}
    3c40:	0008003f 	andeq	r0, r8, pc, lsr r0
    3c44:	0005ea0a 	andeq	lr, r5, sl, lsl #20
    3c48:	000a3600 	andeq	r3, sl, r0, lsl #12
    3c4c:	00970b00 	addseq	r0, r7, r0, lsl #22
    3c50:	000b0000 	andeq	r0, fp, r0
    3c54:	000a2605 	andeq	r2, sl, r5, lsl #12
    3c58:	051a0000 	ldreq	r0, [sl, #-0]
    3c5c:	00040000 	andeq	r0, r4, r0
    3c60:	00000940 	andeq	r0, r0, r0, asr #18
    3c64:	04470104 	strbeq	r0, [r7], #-260	; 0xfffffefc
    3c68:	650c0000 	strvs	r0, [ip, #-0]
    3c6c:	be000013 	mcrlt	0, 0, r0, cr0, cr3, {0}
    3c70:	70000001 	andvc	r0, r0, r1
    3c74:	00000000 	andeq	r0, r0, r0
    3c78:	31000000 	mrscc	r0, (UNDEF: 0)
    3c7c:	02000009 	andeq	r0, r0, #9
    3c80:	07a90601 	streq	r0, [r9, r1, lsl #12]!
    3c84:	02020000 	andeq	r0, r2, #0
    3c88:	00000005 	andeq	r0, r0, r5
    3c8c:	2c120300 	ldccs	3, cr0, [r2], {-0}
    3c90:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    3c94:	00004418 	andeq	r4, r0, r8, lsl r4
    3c98:	00330400 	eorseq	r0, r3, r0, lsl #8
    3c9c:	04020000 	streq	r0, [r2], #-0
    3ca0:	0001b505 	andeq	fp, r1, r5, lsl #10
    3ca4:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    3ca8:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    3cac:	002aca03 	eoreq	ip, sl, r3, lsl #20
    3cb0:	182e0200 	stmdane	lr!, {r9}
    3cb4:	00000068 	andeq	r0, r0, r8, rrx
    3cb8:	00005204 	andeq	r5, r0, r4, lsl #4
    3cbc:	00520500 	subseq	r0, r2, r0, lsl #10
    3cc0:	01020000 	mrseq	r0, (UNDEF: 2)
    3cc4:	0007a708 	andeq	sl, r7, r8, lsl #14
    3cc8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3ccc:	00000377 	andeq	r0, r0, r7, ror r3
    3cd0:	002b6e03 	eoreq	r6, fp, r3, lsl #28
    3cd4:	19340200 	ldmdbne	r4!, {r9}
    3cd8:	0000008c 	andeq	r0, r0, ip, lsl #1
    3cdc:	00007604 	andeq	r7, r0, r4, lsl #12
    3ce0:	00820500 	addeq	r0, r2, r0, lsl #10
    3ce4:	04020000 	streq	r0, [r2], #-0
    3ce8:	0000a507 	andeq	sl, r0, r7, lsl #10
    3cec:	07080200 	streq	r0, [r8, -r0, lsl #4]
    3cf0:	000000a0 	andeq	r0, r0, r0, lsr #1
    3cf4:	69050406 	stmdbvs	r5, {r1, r2, sl}
    3cf8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    3cfc:	00aa0704 	adceq	r0, sl, r4, lsl #14
    3d00:	8c070000 	stchi	0, cr0, [r7], {-0}
    3d04:	0901b803 	stmdbeq	r1, {r0, r1, fp, ip, sp, pc}
    3d08:	000001d9 	ldrdeq	r0, [r0], -r9
    3d0c:	00135408 	andseq	r5, r3, r8, lsl #8
    3d10:	01ba0300 			; <UNDEFINED> instruction: 0x01ba0300
    3d14:	00008712 	andeq	r8, r0, r2, lsl r7
    3d18:	4f080000 	svcmi	0x00080000
    3d1c:	03000013 	movweq	r0, #19
    3d20:	821201bb 	andshi	r0, r2, #-1073741778	; 0xc000002e
    3d24:	04000000 	streq	r0, [r0], #-0
    3d28:	0013fe08 	andseq	pc, r3, r8, lsl #28
    3d2c:	01bc0300 			; <UNDEFINED> instruction: 0x01bc0300
    3d30:	00008212 	andeq	r8, r0, r2, lsl r2
    3d34:	c6080800 	strgt	r0, [r8], -r0, lsl #16
    3d38:	03000013 	movweq	r0, #19
    3d3c:	821201bd 	andshi	r0, r2, #1073741871	; 0x4000002f
    3d40:	0c000000 	stceq	0, cr0, [r0], {-0}
    3d44:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
    3d48:	01be0300 			; <UNDEFINED> instruction: 0x01be0300
    3d4c:	00008212 	andeq	r8, r0, r2, lsl r2
    3d50:	43091000 	movwmi	r1, #36864	; 0x9000
    3d54:	03005243 	movweq	r5, #579	; 0x243
    3d58:	821201bf 	andshi	r0, r2, #-1073741777	; 0xc000002f
    3d5c:	14000000 	strne	r0, [r0], #-0
    3d60:	50485309 	subpl	r5, r8, r9, lsl #6
    3d64:	01c00300 	biceq	r0, r0, r0, lsl #6
    3d68:	0001e912 	andeq	lr, r1, r2, lsl r9
    3d6c:	d5081800 	strle	r1, [r8, #-2048]	; 0xfffff800
    3d70:	03000013 	movweq	r0, #19
    3d74:	821201c1 	andshi	r0, r2, #1073741872	; 0x40000030
    3d78:	24000000 	strcs	r0, [r0], #-0
    3d7c:	0013ad08 	andseq	sl, r3, r8, lsl #26
    3d80:	01c20300 	biceq	r0, r2, r0, lsl #6
    3d84:	00008212 	andeq	r8, r0, r2, lsl r2
    3d88:	0d082800 	stceq	8, cr2, [r8, #-0]
    3d8c:	03000014 	movweq	r0, #20
    3d90:	821201c3 	andshi	r0, r2, #-1073741776	; 0xc0000030
    3d94:	2c000000 	stccs	0, cr0, [r0], {-0}
    3d98:	00140808 	andseq	r0, r4, r8, lsl #16
    3d9c:	01c40300 	biceq	r0, r4, r0, lsl #6
    3da0:	00008212 	andeq	r8, r0, r2, lsl r2
    3da4:	f1083000 			; <UNDEFINED> instruction: 0xf1083000
    3da8:	03000013 	movweq	r0, #19
    3dac:	821201c5 	andshi	r0, r2, #1073741873	; 0x40000031
    3db0:	34000000 	strcc	r0, [r0], #-0
    3db4:	0013a808 	andseq	sl, r3, r8, lsl #16
    3db8:	01c60300 	biceq	r0, r6, r0, lsl #6
    3dbc:	00008212 	andeq	r8, r0, r2, lsl r2
    3dc0:	17083800 	strne	r3, [r8, -r0, lsl #16]
    3dc4:	03000014 	movweq	r0, #20
    3dc8:	821201c7 	andshi	r0, r2, #-1073741775	; 0xc0000031
    3dcc:	3c000000 	stccc	0, cr0, [r0], {-0}
    3dd0:	52465009 	subpl	r5, r6, #9
    3dd4:	01c80300 	biceq	r0, r8, r0, lsl #6
    3dd8:	00020312 	andeq	r0, r2, r2, lsl r3
    3ddc:	44094000 	strmi	r4, [r9], #-0
    3de0:	03005246 	movweq	r5, #582	; 0x246
    3de4:	871201c9 	ldrhi	r0, [r2, -r9, asr #3]
    3de8:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    3dec:	52444109 	subpl	r4, r4, #1073741826	; 0x40000002
    3df0:	01ca0300 	biceq	r0, sl, r0, lsl #6
    3df4:	00008712 	andeq	r8, r0, r2, lsl r7
    3df8:	12084c00 	andne	r4, r8, #0, 24
    3dfc:	03000014 	movweq	r0, #20
    3e00:	1d1201cb 	ldfnes	f0, [r2, #-812]	; 0xfffffcd4
    3e04:	50000002 	andpl	r0, r0, r2
    3e08:	00140308 	andseq	r0, r4, r8, lsl #6
    3e0c:	01cc0300 	biceq	r0, ip, r0, lsl #6
    3e10:	00023712 	andeq	r3, r2, r2, lsl r7
    3e14:	ad086000 	stcge	0, cr6, [r8, #-0]
    3e18:	03000005 	movweq	r0, #5
    3e1c:	3c1201cd 	ldfccs	f0, [r2], {205}	; 0xcd
    3e20:	74000002 	strvc	r0, [r0], #-2
    3e24:	00141c08 	andseq	r1, r4, r8, lsl #24
    3e28:	01ce0300 	biceq	r0, lr, r0, lsl #6
    3e2c:	00008212 	andeq	r8, r0, r2, lsl r2
    3e30:	0a008800 	beq	25e38 <_Min_Stack_Size+0x25a38>
    3e34:	0000005e 	andeq	r0, r0, lr, asr r0
    3e38:	000001e9 	andeq	r0, r0, r9, ror #3
    3e3c:	0000a10b 	andeq	sl, r0, fp, lsl #2
    3e40:	04000b00 	streq	r0, [r0], #-2816	; 0xfffff500
    3e44:	000001d9 	ldrdeq	r0, [r0], -r9
    3e48:	0000870a 	andeq	r8, r0, sl, lsl #14
    3e4c:	0001fe00 	andeq	pc, r1, r0, lsl #28
    3e50:	00a10b00 	adceq	r0, r1, r0, lsl #22
    3e54:	00010000 	andeq	r0, r1, r0
    3e58:	0001ee05 	andeq	lr, r1, r5, lsl #28
    3e5c:	01fe0400 	mvnseq	r0, r0, lsl #8
    3e60:	870a0000 	strhi	r0, [sl, -r0]
    3e64:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    3e68:	0b000002 	bleq	3e78 <_Min_Stack_Size+0x3a78>
    3e6c:	000000a1 	andeq	r0, r0, r1, lsr #1
    3e70:	08050003 	stmdaeq	r5, {r0, r1}
    3e74:	04000002 	streq	r0, [r0], #-2
    3e78:	00000218 	andeq	r0, r0, r8, lsl r2
    3e7c:	0000870a 	andeq	r8, r0, sl, lsl #14
    3e80:	00023200 	andeq	r3, r2, r0, lsl #4
    3e84:	00a10b00 	adceq	r0, r1, r0, lsl #22
    3e88:	00040000 	andeq	r0, r4, r0
    3e8c:	00022205 	andeq	r2, r2, r5, lsl #4
    3e90:	02320400 	eorseq	r0, r2, #0, 8
    3e94:	760a0000 	strvc	r0, [sl], -r0
    3e98:	4c000000 	stcmi	0, cr0, [r0], {-0}
    3e9c:	0b000002 	bleq	3eac <_Min_Stack_Size+0x3aac>
    3ea0:	000000a1 	andeq	r0, r0, r1, lsr #1
    3ea4:	cc0c0004 	stcgt	0, cr0, [ip], {4}
    3ea8:	03000013 	movweq	r0, #19
    3eac:	a80301cf 	stmdage	r3, {r0, r1, r2, r3, r6, r7, r8}
    3eb0:	0a000000 	beq	3eb8 <_Min_Stack_Size+0x3ab8>
    3eb4:	00000076 	andeq	r0, r0, r6, ror r0
    3eb8:	00000269 	andeq	r0, r0, r9, ror #4
    3ebc:	0000a10b 	andeq	sl, r0, fp, lsl #2
    3ec0:	0d000100 	stfeqs	f0, [r0, #-0]
    3ec4:	000000d4 	ldrdeq	r0, [r0], -r4
    3ec8:	19080403 	stmdbne	r8, {r0, r1, sl}
    3ecc:	0000003f 	andeq	r0, r0, pc, lsr r0
    3ed0:	0005930e 	andeq	r9, r5, lr, lsl #6
    3ed4:	114a0400 	cmpne	sl, r0, lsl #8
    3ed8:	00000076 	andeq	r0, r0, r6, ror r0
    3edc:	0000630a 	andeq	r6, r0, sl, lsl #6
    3ee0:	00029200 	andeq	r9, r2, r0, lsl #4
    3ee4:	00a10b00 	adceq	r0, r1, r0, lsl #22
    3ee8:	000f0000 	andeq	r0, pc, r0
    3eec:	00028205 	andeq	r8, r2, r5, lsl #4
    3ef0:	07600e00 	strbeq	r0, [r0, -r0, lsl #28]!
    3ef4:	4c040000 	stcmi	0, cr0, [r4], {-0}
    3ef8:	00029217 	andeq	r9, r2, r7, lsl r2
    3efc:	00630a00 	rsbeq	r0, r3, r0, lsl #20
    3f00:	02b30000 	adcseq	r0, r3, #0
    3f04:	a10b0000 	mrsge	r0, (UNDEF: 11)
    3f08:	07000000 	streq	r0, [r0, -r0]
    3f0c:	02a30500 	adceq	r0, r3, #0, 10
    3f10:	b20e0000 	andlt	r0, lr, #0
    3f14:	04000002 	streq	r0, [r0], #-2
    3f18:	02b3174d 	adcseq	r1, r3, #20185088	; 0x1340000
    3f1c:	88070000 	stmdahi	r7, {}	; <UNPREDICTABLE>
    3f20:	0901f505 	stmdbeq	r1, {r0, r2, r8, sl, ip, sp, lr, pc}
    3f24:	00000472 	andeq	r0, r0, r2, ror r4
    3f28:	00524309 	subseq	r4, r2, r9, lsl #6
    3f2c:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    3f30:	00000082 	andeq	r0, r0, r2, lsl #1
    3f34:	02450800 	subeq	r0, r5, #0, 16
    3f38:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    3f3c:	00821101 	addeq	r1, r2, r1, lsl #2
    3f40:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    3f44:	00000248 	andeq	r0, r0, r8, asr #4
    3f48:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    3f4c:	00000082 	andeq	r0, r0, r2, lsl #1
    3f50:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    3f54:	fa050052 	blx	1440a4 <_Min_Stack_Size+0x143ca4>
    3f58:	00821101 	addeq	r1, r2, r1, lsl #2
    3f5c:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    3f60:	00000124 	andeq	r0, r0, r4, lsr #2
    3f64:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    3f68:	00000082 	andeq	r0, r0, r2, lsl #1
    3f6c:	07340810 			; <UNDEFINED> instruction: 0x07340810
    3f70:	fc050000 	stc2	0, cr0, [r5], {-0}
    3f74:	00821101 	addeq	r1, r2, r1, lsl #2
    3f78:	08140000 	ldmdaeq	r4, {}	; <UNPREDICTABLE>
    3f7c:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
    3f80:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    3f84:	00000082 	andeq	r0, r0, r2, lsl #1
    3f88:	05ad0818 	streq	r0, [sp, #2072]!	; 0x818
    3f8c:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    3f90:	00761101 	rsbseq	r1, r6, r1, lsl #2
    3f94:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    3f98:	00000569 	andeq	r0, r0, r9, ror #10
    3f9c:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    3fa0:	00000082 	andeq	r0, r0, r2, lsl #1
    3fa4:	01790820 	cmneq	r9, r0, lsr #16
    3fa8:	00050000 	andeq	r0, r5, r0
    3fac:	00821102 	addeq	r1, r2, r2, lsl #2
    3fb0:	08240000 	stmdaeq	r4!, {}	; <UNPREDICTABLE>
    3fb4:	000005b7 			; <UNDEFINED> instruction: 0x000005b7
    3fb8:	11020105 	tstne	r2, r5, lsl #2
    3fbc:	00000259 	andeq	r0, r0, r9, asr r2
    3fc0:	08840828 	stmeq	r4, {r3, r5, fp}
    3fc4:	02050000 	andeq	r0, r5, #0
    3fc8:	00821102 	addeq	r1, r2, r2, lsl #2
    3fcc:	08300000 	ldmdaeq	r0!, {}	; <UNPREDICTABLE>
    3fd0:	0000079f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
    3fd4:	11020305 	tstne	r2, r5, lsl #6
    3fd8:	00000082 	andeq	r0, r0, r2, lsl #1
    3fdc:	06a30834 			; <UNDEFINED> instruction: 0x06a30834
    3fe0:	04050000 	streq	r0, [r5], #-0
    3fe4:	00821102 	addeq	r1, r2, r2, lsl #2
    3fe8:	08380000 	ldmdaeq	r8!, {}	; <UNPREDICTABLE>
    3fec:	000005c1 	andeq	r0, r0, r1, asr #11
    3ff0:	11020505 	tstne	r2, r5, lsl #10
    3ff4:	00000076 	andeq	r0, r0, r6, ror r0
    3ff8:	078e083c 			; <UNDEFINED> instruction: 0x078e083c
    3ffc:	06050000 	streq	r0, [r5], -r0
    4000:	00821102 	addeq	r1, r2, r2, lsl #2
    4004:	08400000 	stmdaeq	r0, {}^	; <UNPREDICTABLE>
    4008:	00000693 	muleq	r0, r3, r6
    400c:	11020705 	tstne	r2, r5, lsl #14
    4010:	00000082 	andeq	r0, r0, r2, lsl #1
    4014:	00380844 	eorseq	r0, r8, r4, asr #16
    4018:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    401c:	02591102 	subseq	r1, r9, #-2147483648	; 0x80000000
    4020:	08480000 	stmdaeq	r8, {}^	; <UNPREDICTABLE>
    4024:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4028:	11020905 	tstne	r2, r5, lsl #18
    402c:	00000082 	andeq	r0, r0, r2, lsl #1
    4030:	052e0850 	streq	r0, [lr, #-2128]!	; 0xfffff7b0
    4034:	0a050000 	beq	14403c <_Min_Stack_Size+0x143c3c>
    4038:	00821102 	addeq	r1, r2, r2, lsl #2
    403c:	08540000 	ldmdaeq	r4, {}^	; <UNPREDICTABLE>
    4040:	00000659 	andeq	r0, r0, r9, asr r6
    4044:	11020b05 	tstne	r2, r5, lsl #22
    4048:	00000082 	andeq	r0, r0, r2, lsl #1
    404c:	05dd0858 	ldrbeq	r0, [sp, #2136]	; 0x858
    4050:	0c050000 	stceq	0, cr0, [r5], {-0}
    4054:	00761102 	rsbseq	r1, r6, r2, lsl #2
    4058:	085c0000 	ldmdaeq	ip, {}^	; <UNPREDICTABLE>
    405c:	0000000a 	andeq	r0, r0, sl
    4060:	11020d05 	tstne	r2, r5, lsl #26
    4064:	00000082 	andeq	r0, r0, r2, lsl #1
    4068:	03e70860 	mvneq	r0, #96, 16	; 0x600000
    406c:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    4070:	00821102 	addeq	r1, r2, r2, lsl #2
    4074:	08640000 	stmdaeq	r4!, {}^	; <UNPREDICTABLE>
    4078:	000006d9 	ldrdeq	r0, [r0], -r9
    407c:	11020f05 	tstne	r2, r5, lsl #30
    4080:	00000259 	andeq	r0, r0, r9, asr r2
    4084:	05e70868 	strbeq	r0, [r7, #2152]!	; 0x868
    4088:	10050000 	andne	r0, r5, r0
    408c:	00821102 	addeq	r1, r2, r2, lsl #2
    4090:	09700000 	ldmdbeq	r0!, {}^	; <UNPREDICTABLE>
    4094:	00525343 	subseq	r5, r2, r3, asr #6
    4098:	11021105 	tstne	r2, r5, lsl #2
    409c:	00000082 	andeq	r0, r0, r2, lsl #1
    40a0:	05ec0874 	strbeq	r0, [ip, #2164]!	; 0x874
    40a4:	12050000 	andne	r0, r5, #0
    40a8:	02591102 	subseq	r1, r9, #-2147483648	; 0x80000000
    40ac:	08780000 	ldmdaeq	r8!, {}^	; <UNPREDICTABLE>
    40b0:	000007de 	ldrdeq	r0, [r0], -lr
    40b4:	11021305 	tstne	r2, r5, lsl #6
    40b8:	00000082 	andeq	r0, r0, r2, lsl #1
    40bc:	03930880 	orrseq	r0, r3, #128, 16	; 0x800000
    40c0:	14050000 	strne	r0, [r5], #-0
    40c4:	00821102 	addeq	r1, r2, r2, lsl #2
    40c8:	00840000 	addeq	r0, r4, r0
    40cc:	00034a0c 	andeq	r4, r3, ip, lsl #20
    40d0:	02150500 	andseq	r0, r5, #0, 10
    40d4:	0002c403 	andeq	ip, r2, r3, lsl #8
    40d8:	02760f00 	rsbseq	r0, r6, #0, 30
    40dc:	6a010000 	bvs	440e4 <_Min_Stack_Size+0x43ce4>
    40e0:	3003050a 	andcc	r0, r3, sl, lsl #10
    40e4:	0f200004 	svceq	0x00200004
    40e8:	00000297 	muleq	r0, r7, r2
    40ec:	050f6b01 	streq	r6, [pc, #-2817]	; 35f3 <_Min_Stack_Size+0x31f3>
    40f0:	00000003 	andeq	r0, r0, r3
    40f4:	02b80f00 	adcseq	r0, r8, #0, 30
    40f8:	6c010000 	stcvs	0, cr0, [r1], {-0}
    40fc:	1403050f 	strne	r0, [r3], #-1295	; 0xfffffaf1
    4100:	1008003f 	andne	r0, r8, pc, lsr r0
    4104:	000013db 	ldrdeq	r1, [r0], -fp
    4108:	0006c901 	andeq	ip, r6, r1, lsl #18
    410c:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    4110:	01000000 	mrseq	r0, (UNDEF: 0)
    4114:	00050b9c 	muleq	r5, ip, fp
    4118:	6d741100 	ldfvse	f1, [r4, #-0]
    411c:	cb010070 	blgt	442e4 <_Min_Stack_Size+0x43ee4>
    4120:	0000760c 	andeq	r7, r0, ip, lsl #12
    4124:	70910200 	addsvc	r0, r1, r0, lsl #4
    4128:	0013f712 	andseq	pc, r3, r2, lsl r7	; <UNPREDICTABLE>
    412c:	15cb0100 	strbne	r0, [fp, #256]	; 0x100
    4130:	00000076 	andeq	r0, r0, r6, ror r0
    4134:	12749102 	rsbsne	r9, r4, #-2147483648	; 0x80000000
    4138:	000013c1 	andeq	r1, r0, r1, asr #7
    413c:	7621cb01 	strtvc	ip, [r1], -r1, lsl #22
    4140:	02000000 	andeq	r0, r0, #0
    4144:	b2126c91 	andslt	r6, r2, #37120	; 0x9100
    4148:	01000013 	tsteq	r0, r3, lsl r0
    414c:	00762bcb 	rsbseq	r2, r6, fp, asr #23
    4150:	91020000 	mrsls	r0, (UNDEF: 2)
    4154:	13bc1268 			; <UNDEFINED> instruction: 0x13bc1268
    4158:	cb010000 	blgt	44160 <_Min_Stack_Size+0x43d60>
    415c:	0000763a 	andeq	r7, r0, sl, lsr r6
    4160:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    4164:	135a1300 	cmpne	sl, #0, 6
    4168:	84010000 	strhi	r0, [r1], #-0
    416c:	00118806 	andseq	r8, r1, r6, lsl #16
    4170:	00005c08 	andeq	r5, r0, r8, lsl #24
    4174:	009c0100 	addseq	r0, ip, r0, lsl #2
    4178:	00000984 	andeq	r0, r0, r4, lsl #19
    417c:	0a660004 	beq	1984194 <_Min_Stack_Size+0x1983d94>
    4180:	01040000 	mrseq	r0, (UNDEF: 4)
    4184:	00000447 	andeq	r0, r0, r7, asr #8
    4188:	00163b0c 	andseq	r3, r6, ip, lsl #22
    418c:	0001be00 	andeq	fp, r1, r0, lsl #28
    4190:	00008800 	andeq	r8, r0, r0, lsl #16
    4194:	00000000 	andeq	r0, r0, r0
    4198:	000b1700 	andeq	r1, fp, r0, lsl #14
    419c:	01050200 	mrseq	r0, SP_usr
    41a0:	00000238 	andeq	r0, r0, r8, lsr r2
    41a4:	38014305 	stmdacc	r1, {r0, r2, r8, r9, lr}
    41a8:	03000002 	movweq	r0, #2
    41ac:	00001112 	andeq	r1, r0, r2, lsl r1
    41b0:	0e4d0372 	mcreq	3, 2, r0, cr13, cr2, {3}
    41b4:	03740000 	cmneq	r4, #0
    41b8:	00001038 	andeq	r1, r0, r8, lsr r0
    41bc:	12040375 	andne	r0, r4, #-738197503	; 0xd4000001
    41c0:	03760000 	cmneq	r6, #0
    41c4:	00001232 	andeq	r1, r0, r2, lsr r2
    41c8:	11f2037b 	mvnsne	r0, fp, ror r3
    41cc:	037c0000 	cmneq	ip, #0
    41d0:	00000e1c 	andeq	r0, r0, ip, lsl lr
    41d4:	11ca037e 	bicne	r0, sl, lr, ror r3
    41d8:	047f0000 	ldrbteq	r0, [pc], #-0	; 41e0 <_Min_Stack_Size+0x3de0>
    41dc:	00001003 	andeq	r1, r0, r3
    41e0:	107a0400 	rsbsne	r0, sl, r0, lsl #8
    41e4:	04010000 	streq	r0, [r1], #-0
    41e8:	00000e63 	andeq	r0, r0, r3, ror #28
    41ec:	0f380402 	svceq	0x00380402
    41f0:	04030000 	streq	r0, [r3], #-0
    41f4:	00000dc3 	andeq	r0, r0, r3, asr #27
    41f8:	0e440404 	cdpeq	4, 4, cr0, cr4, cr4, {0}
    41fc:	04050000 	streq	r0, [r5], #-0
    4200:	00000dce 	andeq	r0, r0, lr, asr #27
    4204:	118b0406 	orrne	r0, fp, r6, lsl #8
    4208:	04070000 	streq	r0, [r7], #-0
    420c:	00000f5a 	andeq	r0, r0, sl, asr pc
    4210:	102d0408 	eorne	r0, sp, r8, lsl #8
    4214:	04090000 	streq	r0, [r9], #-0
    4218:	0000105e 	andeq	r1, r0, lr, asr r0
    421c:	0db1040a 	cfldrseq	mvf0, [r1, #40]!	; 0x28
    4220:	040b0000 	streq	r0, [fp], #-0
    4224:	000010a3 	andeq	r1, r0, r3, lsr #1
    4228:	0ec8040c 	cdpeq	4, 12, cr0, cr8, cr12, {0}
    422c:	040d0000 	streq	r0, [sp], #-0
    4230:	0000127c 	andeq	r1, r0, ip, ror r2
    4234:	0f9a040e 	svceq	0x009a040e
    4238:	040f0000 	streq	r0, [pc], #-0	; 4240 <_Min_Stack_Size+0x3e40>
    423c:	00000d95 	muleq	r0, r5, sp
    4240:	11590410 	cmpne	r9, r0, lsl r4
    4244:	04110000 	ldreq	r0, [r1], #-0
    4248:	00001088 	andeq	r1, r0, r8, lsl #1
    424c:	11740412 	cmnne	r4, r2, lsl r4
    4250:	04130000 	ldreq	r0, [r3], #-0
    4254:	000010b5 	strheq	r1, [r0], -r5
    4258:	0eee0414 	mcreq	4, 7, r0, cr14, cr4, {0}
    425c:	04150000 	ldreq	r0, [r5], #-0
    4260:	00000d58 	andeq	r0, r0, r8, asr sp
    4264:	12250416 	eorne	r0, r5, #369098752	; 0x16000000
    4268:	04170000 	ldreq	r0, [r7], #-0
    426c:	00000e9b 	muleq	r0, fp, lr
    4270:	12bb0418 	adcsne	r0, fp, #24, 8	; 0x18000000
    4274:	04190000 	ldreq	r0, [r9], #-0
    4278:	00001046 	andeq	r1, r0, r6, asr #32
    427c:	1138041a 	teqne	r8, sl, lsl r4
    4280:	041b0000 	ldreq	r0, [fp], #-0
    4284:	000011d7 	ldrdeq	r1, [r0], -r7
    4288:	0f8a041c 	svceq	0x008a041c
    428c:	041d0000 	ldreq	r0, [sp], #-0
    4290:	00000da7 	andeq	r0, r0, r7, lsr #27
    4294:	0dd9041e 	cfldrdeq	mvd0, [r9, #120]	; 0x78
    4298:	041f0000 	ldreq	r0, [pc], #-0	; 42a0 <_Min_Stack_Size+0x3ea0>
    429c:	000011b1 			; <UNDEFINED> instruction: 0x000011b1
    42a0:	0f650420 	svceq	0x00650420
    42a4:	04210000 	strteq	r0, [r1], #-0
    42a8:	00000d66 	andeq	r0, r0, r6, ror #26
    42ac:	0e910422 	cdpeq	4, 9, cr0, cr1, cr2, {1}
    42b0:	04230000 	strteq	r0, [r3], #-0
    42b4:	00001268 	andeq	r1, r0, r8, ror #4
    42b8:	10fb0424 	rscsne	r0, fp, r4, lsr #8
    42bc:	04250000 	strteq	r0, [r5], #-0
    42c0:	00000f19 	andeq	r0, r0, r9, lsl pc
    42c4:	12af0426 	adcne	r0, pc, #637534208	; 0x26000000
    42c8:	04270000 	strteq	r0, [r7], #-0
    42cc:	00000df9 	strdeq	r0, [r0], -r9
    42d0:	10c30428 	sbcne	r0, r3, r8, lsr #8
    42d4:	04290000 	strteq	r0, [r9], #-0
    42d8:	00000e28 	andeq	r0, r0, r8, lsr #28
    42dc:	0e08042a 	cdpeq	4, 0, cr0, cr8, cr10, {1}
    42e0:	042b0000 	strteq	r0, [fp], #-0
    42e4:	00000ff0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    42e8:	123e042c 	eorsne	r0, lr, #44, 8	; 0x2c000000
    42ec:	042d0000 	strteq	r0, [sp], #-0
    42f0:	0000114c 	andeq	r1, r0, ip, asr #2
    42f4:	0eb6042e 	cdpeq	4, 11, cr0, cr6, cr14, {1}
    42f8:	042f0000 	strteq	r0, [pc], #-0	; 4300 <_Min_Stack_Size+0x3f00>
    42fc:	00001181 	andeq	r1, r0, r1, lsl #3
    4300:	0d4e0430 	cfstrdeq	mvd0, [lr, #-192]	; 0xffffff40
    4304:	04310000 	ldrteq	r0, [r1], #-0
    4308:	00001091 	muleq	r0, r1, r0
    430c:	0f720432 	svceq	0x00720432
    4310:	04330000 	ldrteq	r0, [r3], #-0
    4314:	00000e39 	andeq	r0, r0, r9, lsr lr
    4318:	11070434 	tstne	r7, r4, lsr r4
    431c:	04350000 	ldrteq	r0, [r5], #-0
    4320:	00001196 	muleq	r0, r6, r1
    4324:	12720436 	rsbsne	r0, r2, #905969664	; 0x36000000
    4328:	04370000 	ldrteq	r0, [r7], #-0
    432c:	00000d73 	andeq	r0, r0, r3, ror sp
    4330:	11260438 			; <UNDEFINED> instruction: 0x11260438
    4334:	04390000 	ldrteq	r0, [r9], #-0
    4338:	00000e7f 	andeq	r0, r0, pc, ror lr
    433c:	1256043a 	subsne	r0, r6, #973078528	; 0x3a000000
    4340:	043b0000 	ldrteq	r0, [fp], #-0
    4344:	0000101b 	andeq	r1, r0, fp, lsl r0
    4348:	128e043c 	addne	r0, lr, #60, 8	; 0x3c000000
    434c:	043f0000 	ldrteq	r0, [pc], #-0	; 4354 <_Min_Stack_Size+0x3f54>
    4350:	00000f7c 	andeq	r0, r0, ip, ror pc
    4354:	100d0440 	andne	r0, sp, r0, asr #8
    4358:	04410000 	strbeq	r0, [r1], #-0
    435c:	00000ee0 	andeq	r0, r0, r0, ror #29
    4360:	0e730442 	cdpeq	4, 7, cr0, cr3, cr2, {2}
    4364:	04430000 	strbeq	r0, [r3], #-0
    4368:	00000d3c 	andeq	r0, r0, ip, lsr sp
    436c:	10dc0444 	sbcsne	r0, ip, r4, asr #8
    4370:	04450000 	strbeq	r0, [r5], #-0
    4374:	00000f02 	andeq	r0, r0, r2, lsl #30
    4378:	11be0446 			; <UNDEFINED> instruction: 0x11be0446
    437c:	04470000 	strbeq	r0, [r7], #-0
    4380:	000010ee 	andeq	r1, r0, lr, ror #1
    4384:	0f250448 	svceq	0x00250448
    4388:	04490000 	strbeq	r0, [r9], #-0
    438c:	0000129b 	muleq	r0, fp, r2
    4390:	0de6044a 	cfstrdeq	mvd0, [r6, #296]!	; 0x128
    4394:	044b0000 	strbeq	r0, [fp], #-0
    4398:	000011e1 	andeq	r1, r0, r1, ror #3
    439c:	0f46044c 	svceq	0x0046044c
    43a0:	044d0000 	strbeq	r0, [sp], #-0
    43a4:	0000116b 	andeq	r1, r0, fp, ror #2
    43a8:	12e10450 	rscne	r0, r1, #80, 8	; 0x50000000
    43ac:	00510000 	subseq	r0, r1, r0
    43b0:	a9060105 	stmdbge	r6, {r0, r2, r8}
    43b4:	05000007 	streq	r0, [r0, #-7]
    43b8:	00000502 	andeq	r0, r0, r2, lsl #10
    43bc:	12060000 	andne	r0, r6, #0
    43c0:	0200002c 	andeq	r0, r0, #44	; 0x2c
    43c4:	02571828 	subseq	r1, r7, #40, 16	; 0x280000
    43c8:	46070000 	strmi	r0, [r7], -r0
    43cc:	05000002 	streq	r0, [r0, #-2]
    43d0:	01b50504 			; <UNDEFINED> instruction: 0x01b50504
    43d4:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    43d8:	0001b005 	andeq	fp, r1, r5
    43dc:	2aca0600 	bcs	ff285be4 <__StackLimit+0xdf265be4>
    43e0:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
    43e4:	00027618 	andeq	r7, r2, r8, lsl r6
    43e8:	02650800 	rsbeq	r0, r5, #0, 16
    43ec:	01050000 	mrseq	r0, (UNDEF: 5)
    43f0:	0007a708 	andeq	sl, r7, r8, lsl #14
    43f4:	07020500 	streq	r0, [r2, -r0, lsl #10]
    43f8:	00000377 	andeq	r0, r0, r7, ror r3
    43fc:	002b6e06 	eoreq	r6, fp, r6, lsl #28
    4400:	19340200 	ldmdbne	r4!, {r9}
    4404:	0000029a 	muleq	r0, sl, r2
    4408:	00028407 	andeq	r8, r2, r7, lsl #8
    440c:	02900800 	addseq	r0, r0, #0, 16
    4410:	04050000 	streq	r0, [r5], #-0
    4414:	0000a507 	andeq	sl, r0, r7, lsl #10
    4418:	07080500 	streq	r0, [r8, -r0, lsl #10]
    441c:	000000a0 	andeq	r0, r0, r0, lsr #1
    4420:	69050409 	stmdbvs	r5, {r0, r3, sl}
    4424:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    4428:	00aa0704 	adceq	r0, sl, r4, lsl #14
    442c:	100a0000 	andne	r0, sl, r0
    4430:	0902f703 	stmdbeq	r2, {r0, r1, r8, r9, sl, ip, sp, lr, pc}
    4434:	000002f9 	strdeq	r0, [r0], -r9
    4438:	0016ab0b 	andseq	sl, r6, fp, lsl #22
    443c:	02f90300 	rscseq	r0, r9, #0, 6
    4440:	00029012 	andeq	r9, r2, r2, lsl r0
    4444:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
    4448:	03000015 	movweq	r0, #21
    444c:	901202fa 			; <UNDEFINED> instruction: 0x901202fa
    4450:	04000002 	streq	r0, [r0], #-2
    4454:	4c41560c 	mcrrmi	6, 0, r5, r1, cr12
    4458:	02fb0300 	rscseq	r0, fp, #0, 6
    445c:	00029012 	andeq	r9, r2, r2, lsl r0
    4460:	4c0b0800 	stcmi	8, cr0, [fp], {-0}
    4464:	03000015 	movweq	r0, #21
    4468:	951202fc 	ldrls	r0, [r2, #-764]	; 0xfffffd04
    446c:	0c000002 	stceq	0, cr0, [r0], {2}
    4470:	14b50d00 	ldrtne	r0, [r5], #3328	; 0xd00
    4474:	fd030000 	stc2	0, cr0, [r3, #-0]
    4478:	02b60302 	adcseq	r0, r6, #134217728	; 0x8000000
    447c:	840e0000 	strhi	r0, [lr], #-0
    4480:	16000002 	strne	r0, [r0], -r2
    4484:	0f000003 	svceq	0x00000003
    4488:	000002af 	andeq	r0, r0, pc, lsr #5
    448c:	d4100001 	ldrle	r0, [r0], #-1
    4490:	03000000 	movweq	r0, #0
    4494:	52190804 	andspl	r0, r9, #4, 16	; 0x40000
    4498:	11000002 	tstne	r0, r2
    449c:	00000593 	muleq	r0, r3, r5
    44a0:	84114a04 	ldrhi	r4, [r1], #-2564	; 0xfffff5fc
    44a4:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    44a8:	00000271 	andeq	r0, r0, r1, ror r2
    44ac:	0000033f 	andeq	r0, r0, pc, lsr r3
    44b0:	0002af0f 	andeq	sl, r2, pc, lsl #30
    44b4:	08000f00 	stmdaeq	r0, {r8, r9, sl, fp}
    44b8:	0000032f 	andeq	r0, r0, pc, lsr #6
    44bc:	00076011 	andeq	r6, r7, r1, lsl r0
    44c0:	174c0400 	strbne	r0, [ip, -r0, lsl #8]
    44c4:	0000033f 	andeq	r0, r0, pc, lsr r3
    44c8:	0002710e 	andeq	r7, r2, lr, lsl #2
    44cc:	00036000 	andeq	r6, r3, r0
    44d0:	02af0f00 	adceq	r0, pc, #0, 30
    44d4:	00070000 	andeq	r0, r7, r0
    44d8:	00035008 	andeq	r5, r3, r8
    44dc:	02b21100 	adcseq	r1, r2, #0, 2
    44e0:	4d040000 	stcmi	0, cr0, [r4, #-0]
    44e4:	00036017 	andeq	r6, r3, r7, lsl r0
    44e8:	05100a00 	ldreq	r0, [r0, #-2560]	; 0xfffff600
    44ec:	b3090138 	movwlt	r0, #37176	; 0x9138
    44f0:	0b000003 	bleq	4504 <_Min_Stack_Size+0x4104>
    44f4:	0000146f 	andeq	r1, r0, pc, ror #8
    44f8:	11013a05 	tstne	r1, r5, lsl #20
    44fc:	00000290 	muleq	r0, r0, r2
    4500:	52430c00 	subpl	r0, r3, #0, 24
    4504:	013b0500 	teqeq	fp, r0, lsl #10
    4508:	00029011 	andeq	r9, r2, r1, lsl r0
    450c:	150b0400 	strne	r0, [fp, #-1024]	; 0xfffffc00
    4510:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    4514:	9011013c 	andsls	r0, r1, ip, lsr r1
    4518:	08000002 	stmdaeq	r0, {r1}
    451c:	00157b0b 	andseq	r7, r5, fp, lsl #22
    4520:	013d0500 	teqeq	sp, r0, lsl #10
    4524:	00029011 	andeq	r9, r2, r1, lsl r0
    4528:	0d000c00 	stceq	12, cr0, [r0, #-0]
    452c:	0000161f 	andeq	r1, r0, pc, lsl r6
    4530:	02013e05 	andeq	r3, r1, #5, 28	; 0x50
    4534:	00000371 	andeq	r0, r0, r1, ror r3
    4538:	69051c0a 	stmdbvs	r5, {r1, r3, sl, fp, ip}
    453c:	042b0901 	strteq	r0, [fp], #-2305	; 0xfffff6ff
    4540:	410c0000 	mrsmi	r0, (UNDEF: 12)
    4544:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    4548:	9011016b 	andsls	r0, r1, fp, ror #2
    454c:	00000002 	andeq	r0, r0, r2
    4550:	0014b00b 	andseq	fp, r4, fp
    4554:	016c0500 	cmneq	ip, r0, lsl #10
    4558:	00029011 	andeq	r9, r2, r1, lsl r0
    455c:	ad0b0400 	cfstrsge	mvf0, [fp, #-0]
    4560:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    4564:	9011016d 	andsls	r0, r1, sp, ror #2
    4568:	08000002 	stmdaeq	r0, {r1}
    456c:	0052530c 	subseq	r5, r2, ip, lsl #6
    4570:	11016e05 	tstne	r1, r5, lsl #28
    4574:	00000290 	muleq	r0, r0, r2
    4578:	52430c0c 	subpl	r0, r3, #12, 24	; 0xc00
    457c:	016f0500 	cmneq	pc, r0, lsl #10
    4580:	00029011 	andeq	r9, r2, r1, lsl r0
    4584:	610b1000 	mrsvs	r1, (UNDEF: 11)
    4588:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    458c:	90110170 	andsls	r0, r1, r0, ror r1
    4590:	14000002 	strne	r0, [r0], #-2
    4594:	0015450b 	andseq	r4, r5, fp, lsl #10
    4598:	01710500 	cmneq	r1, r0, lsl #10
    459c:	00029011 	andeq	r9, r2, r1, lsl r0
    45a0:	0d001800 	stceq	8, cr1, [r0, #-0]
    45a4:	000016e4 	andeq	r1, r0, r4, ror #13
    45a8:	03017205 	movweq	r7, #4613	; 0x1205
    45ac:	000003c0 	andeq	r0, r0, r0, asr #7
    45b0:	f505880a 			; <UNDEFINED> instruction: 0xf505880a
    45b4:	05e60901 	strbeq	r0, [r6, #2305]!	; 0x901
    45b8:	430c0000 	movwmi	r0, #49152	; 0xc000
    45bc:	f7050052 			; <UNDEFINED> instruction: 0xf7050052
    45c0:	02901101 	addseq	r1, r0, #1073741824	; 0x40000000
    45c4:	0b000000 	bleq	45cc <_Min_Stack_Size+0x41cc>
    45c8:	00000245 	andeq	r0, r0, r5, asr #4
    45cc:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    45d0:	00000290 	muleq	r0, r0, r2
    45d4:	02480b04 	subeq	r0, r8, #4, 22	; 0x1000
    45d8:	f9050000 			; <UNDEFINED> instruction: 0xf9050000
    45dc:	02901101 	addseq	r1, r0, #1073741824	; 0x40000000
    45e0:	0c080000 	stceq	0, cr0, [r8], {-0}
    45e4:	00524943 	subseq	r4, r2, r3, asr #18
    45e8:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    45ec:	00000290 	muleq	r0, r0, r2
    45f0:	01240b0c 			; <UNDEFINED> instruction: 0x01240b0c
    45f4:	fb050000 	blx	1445fe <_Min_Stack_Size+0x1441fe>
    45f8:	02901101 	addseq	r1, r0, #1073741824	; 0x40000000
    45fc:	0b100000 	bleq	404604 <_Min_Stack_Size+0x404204>
    4600:	00000734 	andeq	r0, r0, r4, lsr r7
    4604:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    4608:	00000290 	muleq	r0, r0, r2
    460c:	03b70b14 			; <UNDEFINED> instruction: 0x03b70b14
    4610:	fd050000 	stc2	0, cr0, [r5, #-0]
    4614:	02901101 	addseq	r1, r0, #1073741824	; 0x40000000
    4618:	0b180000 	bleq	604620 <_Min_Stack_Size+0x604220>
    461c:	000005ad 	andeq	r0, r0, sp, lsr #11
    4620:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    4624:	00000284 	andeq	r0, r0, r4, lsl #5
    4628:	05690b1c 	strbeq	r0, [r9, #-2844]!	; 0xfffff4e4
    462c:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    4630:	02901101 	addseq	r1, r0, #1073741824	; 0x40000000
    4634:	0b200000 	bleq	80463c <_Min_Stack_Size+0x80423c>
    4638:	00000179 	andeq	r0, r0, r9, ror r1
    463c:	11020005 	tstne	r2, r5
    4640:	00000290 	muleq	r0, r0, r2
    4644:	05b70b24 	ldreq	r0, [r7, #2852]!	; 0xb24
    4648:	01050000 	mrseq	r0, (UNDEF: 5)
    464c:	03061102 	movweq	r1, #24834	; 0x6102
    4650:	0b280000 	bleq	a04658 <_Min_Stack_Size+0xa04258>
    4654:	00000884 	andeq	r0, r0, r4, lsl #17
    4658:	11020205 	tstne	r2, r5, lsl #4
    465c:	00000290 	muleq	r0, r0, r2
    4660:	079f0b30 			; <UNDEFINED> instruction: 0x079f0b30
    4664:	03050000 	movweq	r0, #20480	; 0x5000
    4668:	02901102 	addseq	r1, r0, #-2147483648	; 0x80000000
    466c:	0b340000 	bleq	d04674 <_Min_Stack_Size+0xd04274>
    4670:	000006a3 	andeq	r0, r0, r3, lsr #13
    4674:	11020405 	tstne	r2, r5, lsl #8
    4678:	00000290 	muleq	r0, r0, r2
    467c:	05c10b38 	strbeq	r0, [r1, #2872]	; 0xb38
    4680:	05050000 	streq	r0, [r5, #-0]
    4684:	02841102 	addeq	r1, r4, #-2147483648	; 0x80000000
    4688:	0b3c0000 	bleq	f04690 <_Min_Stack_Size+0xf04290>
    468c:	0000078e 	andeq	r0, r0, lr, lsl #15
    4690:	11020605 	tstne	r2, r5, lsl #12
    4694:	00000290 	muleq	r0, r0, r2
    4698:	06930b40 	ldreq	r0, [r3], r0, asr #22
    469c:	07050000 	streq	r0, [r5, -r0]
    46a0:	02901102 	addseq	r1, r0, #-2147483648	; 0x80000000
    46a4:	0b440000 	bleq	11046ac <_Min_Stack_Size+0x11042ac>
    46a8:	00000038 	andeq	r0, r0, r8, lsr r0
    46ac:	11020805 	tstne	r2, r5, lsl #16
    46b0:	00000306 	andeq	r0, r0, r6, lsl #6
    46b4:	00f00b48 	rscseq	r0, r0, r8, asr #22
    46b8:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    46bc:	02901102 	addseq	r1, r0, #-2147483648	; 0x80000000
    46c0:	0b500000 	bleq	14046c8 <_Min_Stack_Size+0x14042c8>
    46c4:	0000052e 	andeq	r0, r0, lr, lsr #10
    46c8:	11020a05 	tstne	r2, r5, lsl #20
    46cc:	00000290 	muleq	r0, r0, r2
    46d0:	06590b54 			; <UNDEFINED> instruction: 0x06590b54
    46d4:	0b050000 	bleq	1446dc <_Min_Stack_Size+0x1442dc>
    46d8:	02901102 	addseq	r1, r0, #-2147483648	; 0x80000000
    46dc:	0b580000 	bleq	16046e4 <_Min_Stack_Size+0x16042e4>
    46e0:	000005dd 	ldrdeq	r0, [r0], -sp
    46e4:	11020c05 	tstne	r2, r5, lsl #24
    46e8:	00000284 	andeq	r0, r0, r4, lsl #5
    46ec:	000a0b5c 	andeq	r0, sl, ip, asr fp
    46f0:	0d050000 	stceq	0, cr0, [r5, #-0]
    46f4:	02901102 	addseq	r1, r0, #-2147483648	; 0x80000000
    46f8:	0b600000 	bleq	1804700 <_Min_Stack_Size+0x1804300>
    46fc:	000003e7 	andeq	r0, r0, r7, ror #7
    4700:	11020e05 	tstne	r2, r5, lsl #28
    4704:	00000290 	muleq	r0, r0, r2
    4708:	06d90b64 	ldrbeq	r0, [r9], r4, ror #22
    470c:	0f050000 	svceq	0x00050000
    4710:	03061102 	movweq	r1, #24834	; 0x6102
    4714:	0b680000 	bleq	1a0471c <_Min_Stack_Size+0x1a0431c>
    4718:	000005e7 	andeq	r0, r0, r7, ror #11
    471c:	11021005 	tstne	r2, r5
    4720:	00000290 	muleq	r0, r0, r2
    4724:	53430c70 	movtpl	r0, #15472	; 0x3c70
    4728:	11050052 	qaddne	r0, r2, r5
    472c:	02901102 	addseq	r1, r0, #-2147483648	; 0x80000000
    4730:	0b740000 	bleq	1d04738 <_Min_Stack_Size+0x1d04338>
    4734:	000005ec 	andeq	r0, r0, ip, ror #11
    4738:	11021205 	tstne	r2, r5, lsl #4
    473c:	00000306 	andeq	r0, r0, r6, lsl #6
    4740:	07de0b78 			; <UNDEFINED> instruction: 0x07de0b78
    4744:	13050000 	movwne	r0, #20480	; 0x5000
    4748:	02901102 	addseq	r1, r0, #-2147483648	; 0x80000000
    474c:	0b800000 	bleq	fe004754 <__StackLimit+0xddfe4754>
    4750:	00000393 	muleq	r0, r3, r3
    4754:	11021405 	tstne	r2, r5, lsl #8
    4758:	00000290 	muleq	r0, r0, r2
    475c:	4a0d0084 	bmi	344974 <_Min_Stack_Size+0x344574>
    4760:	05000003 	streq	r0, [r0, #-3]
    4764:	38030215 	stmdacc	r3, {r0, r2, r4, r9}
    4768:	02000004 	andeq	r0, r0, #4
    476c:	02760107 	rsbseq	r0, r6, #-1073741823	; 0xc0000001
    4770:	c0060000 	andgt	r0, r6, r0
    4774:	00060e01 	andeq	r0, r6, r1, lsl #28
    4778:	14670400 	strbtne	r0, [r7], #-1024	; 0xfffffc00
    477c:	04000000 	streq	r0, [r0], #-0
    4780:	000014a6 	andeq	r1, r0, r6, lsr #9
    4784:	08050001 	stmdaeq	r5, {r0}
    4788:	00071904 	andeq	r1, r7, r4, lsl #18
    478c:	01070200 	mrseq	r0, (UNDEF: 39)
    4790:	00000276 	andeq	r0, r0, r6, ror r2
    4794:	3c012807 	stccc	8, cr2, [r1], {7}
    4798:	04000006 	streq	r0, [r0], #-6
    479c:	00000369 	andeq	r0, r0, r9, ror #6
    47a0:	06f10400 	ldrbteq	r0, [r1], r0, lsl #8
    47a4:	04010000 	streq	r0, [r1], #-0
    47a8:	0000005c 	andeq	r0, r0, ip, asr r0
    47ac:	02c90402 	sbceq	r0, r9, #33554432	; 0x2000000
    47b0:	00030000 	andeq	r0, r3, r0
    47b4:	00158206 	andseq	r8, r5, r6, lsl #4
    47b8:	032d0700 			; <UNDEFINED> instruction: 0x032d0700
    47bc:	00000615 	andeq	r0, r0, r5, lsl r6
    47c0:	76010702 	strvc	r0, [r1], -r2, lsl #14
    47c4:	08000002 	stmdaeq	r0, {r1}
    47c8:	066f0133 			; <UNDEFINED> instruction: 0x066f0133
    47cc:	46040000 	strmi	r0, [r4], -r0
    47d0:	64000008 	strvs	r0, [r0], #-8
    47d4:	00073d04 	andeq	r3, r7, r4, lsl #26
    47d8:	56040a00 	strpl	r0, [r4], -r0, lsl #20
    47dc:	01000003 	tsteq	r0, r3
    47e0:	00054c04 	andeq	r4, r5, r4, lsl #24
    47e4:	06000100 	streq	r0, [r0], -r0, lsl #2
    47e8:	00000014 	andeq	r0, r0, r4, lsl r0
    47ec:	48033808 	stmdami	r3, {r3, fp, ip, sp}
    47f0:	11000006 	tstne	r0, r6
    47f4:	000002fe 	strdeq	r0, [r0], -lr
    47f8:	9016cd08 	andsls	ip, r6, r8, lsl #26
    47fc:	11000002 	tstne	r0, r2
    4800:	000003c0 	andeq	r0, r0, r0, asr #7
    4804:	8411ce08 	ldrhi	ip, [r1], #-3592	; 0xfffff1f8
    4808:	11000002 	tstne	r0, r2
    480c:	000002f3 	strdeq	r0, [r0], -r3
    4810:	6f1ccf08 	svcvs	0x001ccf08
    4814:	12000006 	andne	r0, r0, #6
    4818:	0000067b 	andeq	r0, r0, fp, ror r6
    481c:	050f5e01 	streq	r5, [pc, #-3585]	; 3a23 <_Min_Stack_Size+0x3623>
    4820:	00064c03 	andeq	r4, r6, r3, lsl #24
    4824:	06871220 	streq	r1, [r7], r0, lsr #4
    4828:	5f010000 	svcpl	0x00010000
    482c:	3403050a 	strcc	r0, [r3], #-1290	; 0xfffffaf6
    4830:	12200004 	eorne	r0, r0, #4
    4834:	00000693 	muleq	r0, r3, r6
    4838:	05156001 	ldreq	r6, [r5, #-1]
    483c:	00043803 	andeq	r3, r4, r3, lsl #16
    4840:	16911320 	ldrne	r1, [r1], r0, lsr #6
    4844:	33010000 	movwcc	r0, #4096	; 0x1000
    4848:	02840a02 	addeq	r0, r4, #8192	; 0x2000
    484c:	00000000 	andeq	r0, r0, r0
    4850:	00140000 	andseq	r0, r4, r0
    4854:	9c010000 	stcls	0, cr0, [r1], {-0}
    4858:	0015a113 	andseq	sl, r5, r3, lsl r1
    485c:	022a0100 	eoreq	r0, sl, #0, 2
    4860:	0002840a 	andeq	r8, r2, sl, lsl #8
    4864:	00000000 	andeq	r0, r0, r0
    4868:	00001400 	andeq	r1, r0, r0, lsl #8
    486c:	139c0100 	orrsne	r0, ip, #0, 2
    4870:	00001594 	muleq	r0, r4, r5
    4874:	0a022101 	beq	8cc80 <_Min_Stack_Size+0x8c880>
    4878:	00000284 	andeq	r0, r0, r4, lsl #5
    487c:	00000000 	andeq	r0, r0, r0
    4880:	00000014 	andeq	r0, r0, r4, lsl r0
    4884:	f2149c01 			; <UNDEFINED> instruction: 0xf2149c01
    4888:	01000016 	tsteq	r0, r6, lsl r0
    488c:	00060218 	andeq	r0, r6, r8, lsl r2
    4890:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4894:	01000000 	mrseq	r0, (UNDEF: 0)
    4898:	16bc149c 	ssatne	r1, #29, ip, lsl #9
    489c:	0d010000 	stceq	0, cr0, [r1, #-0]
    48a0:	00000602 	andeq	r0, r0, r2, lsl #12
    48a4:	00180000 	andseq	r0, r8, r0
    48a8:	9c010000 	stcls	0, cr0, [r1], {-0}
    48ac:	0015db14 	andseq	sp, r5, r4, lsl fp
    48b0:	02020100 	andeq	r0, r2, #0, 2
    48b4:	00000006 	andeq	r0, r0, r6
    48b8:	00001c00 	andeq	r1, r0, r0, lsl #24
    48bc:	149c0100 	ldrne	r0, [ip], #256	; 0x100
    48c0:	00001476 	andeq	r1, r0, r6, ror r4
    48c4:	0601f901 	streq	pc, [r1], -r1, lsl #18
    48c8:	00000000 	andeq	r0, r0, r0
    48cc:	0000001c 	andeq	r0, r0, ip, lsl r0
    48d0:	1c149c01 	ldcne	12, cr9, [r4], {1}
    48d4:	01000015 	tsteq	r0, r5, lsl r0
    48d8:	000601f0 	strdeq	r0, [r6], -r0	; <UNPREDICTABLE>
    48dc:	1c000000 	stcne	0, cr0, [r0], {-0}
    48e0:	01000000 	mrseq	r0, (UNDEF: 0)
    48e4:	1552149c 	ldrbne	r1, [r2, #-1180]	; 0xfffffb64
    48e8:	e7010000 	str	r0, [r1, -r0]
    48ec:	00000601 	andeq	r0, r0, r1, lsl #12
    48f0:	001c0000 	andseq	r0, ip, r0
    48f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    48f8:	0014d814 	andseq	sp, r4, r4, lsl r8
    48fc:	01de0100 	bicseq	r0, lr, r0, lsl #2
    4900:	00000006 	andeq	r0, r0, r6
    4904:	00001c00 	andeq	r1, r0, r0, lsl #24
    4908:	149c0100 	ldrne	r0, [ip], #256	; 0x100
    490c:	000014f7 	strdeq	r1, [r0], -r7
    4910:	0601d501 	streq	sp, [r1], -r1, lsl #10
    4914:	00000000 	andeq	r0, r0, r0
    4918:	0000001c 	andeq	r0, r0, ip, lsl r0
    491c:	d7139c01 	ldrle	r9, [r3, -r1, lsl #24]
    4920:	01000016 	tsteq	r0, r6, lsl r0
    4924:	840a01cc 	strhi	r0, [sl], #-460	; 0xfffffe34
    4928:	00000002 	andeq	r0, r0, r2
    492c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    4930:	01000000 	mrseq	r0, (UNDEF: 0)
    4934:	162e139c 			; <UNDEFINED> instruction: 0x162e139c
    4938:	c3010000 	movwgt	r0, #4096	; 0x1000
    493c:	02840a01 	addeq	r0, r4, #4096	; 0x1000
    4940:	00000000 	andeq	r0, r0, r0
    4944:	00180000 	andseq	r0, r8, r0
    4948:	9c010000 	stcls	0, cr0, [r1], {-0}
    494c:	00142213 	andseq	r2, r4, r3, lsl r2
    4950:	01ba0100 			; <UNDEFINED> instruction: 0x01ba0100
    4954:	0002840a 	andeq	r8, r2, sl, lsl #8
    4958:	00000000 	andeq	r0, r0, r0
    495c:	00001400 	andeq	r1, r0, r0, lsl #8
    4960:	149c0100 	ldrne	r0, [ip], #256	; 0x100
    4964:	000015bf 			; <UNDEFINED> instruction: 0x000015bf
    4968:	0d01b001 	stceq	0, cr11, [r1, #-4]
    496c:	00000000 	andeq	r0, r0, r0
    4970:	0000001c 	andeq	r0, r0, ip, lsl r0
    4974:	06149c01 	ldreq	r9, [r4], -r1, lsl #24
    4978:	01000016 	tsteq	r0, r6, lsl r0
    497c:	000d01a0 	andeq	r0, sp, r0, lsr #3
    4980:	1c000000 	stcne	0, cr0, [r0], {-0}
    4984:	01000000 	mrseq	r0, (UNDEF: 0)
    4988:	1687159c 	pkhbtne	r1, r7, ip, lsl #11
    498c:	85010000 	strhi	r0, [r1, #-0]
    4990:	00000d01 	andeq	r0, r0, r1, lsl #26
    4994:	004c0000 	subeq	r0, ip, r0
    4998:	9c010000 	stcls	0, cr0, [r1], {-0}
    499c:	00000869 	andeq	r0, r0, r9, ror #16
    49a0:	00168b16 	andseq	r8, r6, r6, lsl fp
    49a4:	01850100 	orreq	r0, r5, r0, lsl #2
    49a8:	00028420 	andeq	r8, r2, r0, lsr #8
    49ac:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    49b0:	0015fc17 	andseq	pc, r5, r7, lsl ip	; <UNPREDICTABLE>
    49b4:	01870100 	orreq	r0, r7, r0, lsl #2
    49b8:	0002840c 	andeq	r8, r2, ip, lsl #8
    49bc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    49c0:	002e8c17 	eoreq	r8, lr, r7, lsl ip
    49c4:	01880100 	orreq	r0, r8, r0, lsl #2
    49c8:	0002840c 	andeq	r8, r2, ip, lsl #8
    49cc:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    49d0:	0014d017 	andseq	sp, r4, r7, lsl r0
    49d4:	01890100 	orreq	r0, r9, r0, lsl #2
    49d8:	0002840c 	andeq	r8, r2, ip, lsl #8
    49dc:	70910200 	addsvc	r0, r1, r0, lsl #4
    49e0:	14411300 	strbne	r1, [r1], #-768	; 0xfffffd00
    49e4:	75010000 	strvc	r0, [r1, #-0]
    49e8:	066f1501 	strbteq	r1, [pc], -r1, lsl #10
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	00140000 	andseq	r0, r4, r0
    49f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    49f8:	00145118 	andseq	r5, r4, r8, lsl r1
    49fc:	01550100 	cmpeq	r5, r0, lsl #2
    4a00:	00063c13 	andeq	r3, r6, r3, lsl ip
    4a04:	00000000 	andeq	r0, r0, r0
    4a08:	00005000 	andeq	r5, r0, r0
    4a0c:	cc9c0100 	ldfgts	f0, [ip], {0}
    4a10:	16000008 	strne	r0, [r0], -r8
    4a14:	00001c3b 	andeq	r1, r0, fp, lsr ip
    4a18:	37015501 	strcc	r5, [r1, -r1, lsl #10]
    4a1c:	0000066f 	andeq	r0, r0, pc, ror #12
    4a20:	176f9102 	strbne	r9, [pc, -r2, lsl #2]!
    4a24:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    4a28:	15015701 	strne	r5, [r1, #-1793]	; 0xfffff8ff
    4a2c:	0000063c 	andeq	r0, r0, ip, lsr r6
    4a30:	17779102 	ldrbne	r9, [r7, -r2, lsl #2]!
    4a34:	0000169e 	muleq	r0, lr, r6
    4a38:	17015801 	strne	r5, [r1, -r1, lsl #16]
    4a3c:	0000066f 	andeq	r0, r0, pc, ror #12
    4a40:	00769102 	rsbseq	r9, r6, r2, lsl #2
    4a44:	00149613 	andseq	r9, r4, r3, lsl r6
    4a48:	014c0100 	mrseq	r0, (UNDEF: 92)
    4a4c:	0002840a 	andeq	r8, r2, sl, lsl #8
    4a50:	00000000 	andeq	r0, r0, r0
    4a54:	00001400 	andeq	r1, r0, r0, lsl #8
    4a58:	139c0100 	orrsne	r0, ip, #0, 2
    4a5c:	000015b3 			; <UNDEFINED> instruction: 0x000015b3
    4a60:	11014301 	tstne	r1, r1, lsl #6
    4a64:	00000284 	andeq	r0, r0, r4, lsl #5
    4a68:	080012ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip}
    4a6c:	00000014 	andeq	r0, r0, r4, lsl r0
    4a70:	b0149c01 	andslt	r9, r4, r1, lsl #24
    4a74:	01000016 	tsteq	r0, r6, lsl r0
    4a78:	880d0138 	stmdahi	sp, {r3, r4, r5, r8}
    4a7c:	24080012 	strcs	r0, [r8], #-18	; 0xffffffee
    4a80:	01000000 	mrseq	r0, (UNDEF: 0)
    4a84:	15ce199c 	strbne	r1, [lr, #2460]	; 0x99c
    4a88:	fd010000 	stc2	0, cr0, [r1, #-0]
    4a8c:	00063c1a 	andeq	r3, r6, sl, lsl ip
    4a90:	00122800 	andseq	r2, r2, r0, lsl #16
    4a94:	00006008 	andeq	r6, r0, r8
    4a98:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    4a9c:	1a000009 	bne	4ac8 <_Min_Stack_Size+0x46c8>
    4aa0:	00001434 	andeq	r1, r0, r4, lsr r4
    4aa4:	8430fd01 	ldrthi	pc, [r0], #-3329	; 0xfffff2ff	; <UNPREDICTABLE>
    4aa8:	02000002 	andeq	r0, r0, #2
    4aac:	1b007491 	blne	21cf8 <_Min_Stack_Size+0x218f8>
    4ab0:	000014c2 	andeq	r1, r0, r2, asr #9
    4ab4:	000de601 	andeq	lr, sp, r1, lsl #12
    4ab8:	0c000000 	stceq	0, cr0, [r0], {-0}
    4abc:	01000000 	mrseq	r0, (UNDEF: 0)
    4ac0:	156f1b9c 	strbne	r1, [pc, #-2972]!	; 3f2c <_Min_Stack_Size+0x3b2c>
    4ac4:	db010000 	blle	44acc <_Min_Stack_Size+0x446cc>
    4ac8:	0000000d 	andeq	r0, r0, sp
    4acc:	00000c00 	andeq	r0, r0, r0, lsl #24
    4ad0:	1c9c0100 	ldfnes	f0, [ip], {0}
    4ad4:	0000153a 	andeq	r1, r0, sl, lsr r5
    4ad8:	3c13be01 	ldccc	14, cr11, [r3], {1}
    4adc:	00000006 	andeq	r0, r0, r6
    4ae0:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    4ae4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ae8:	16161c9c 			; <UNDEFINED> instruction: 0x16161c9c
    4aec:	9d010000 	stcls	0, cr0, [r1, #-0]
    4af0:	00063c13 	andeq	r3, r6, r3, lsl ip
    4af4:	0011e400 	andseq	lr, r1, r0, lsl #8
    4af8:	00004408 	andeq	r4, r0, r8, lsl #8
    4afc:	009c0100 	addseq	r0, ip, r0, lsl #2
    4b00:	0000019c 	muleq	r0, ip, r1
    4b04:	0c500004 	mrrceq	0, 0, r0, r0, cr4	; <UNPREDICTABLE>
    4b08:	01040000 	mrseq	r0, (UNDEF: 4)
    4b0c:	00000447 	andeq	r0, r0, r7, asr #8
    4b10:	00170e0c 	andseq	r0, r7, ip, lsl #28
    4b14:	0001be00 	andeq	fp, r1, r0, lsl #28
    4b18:	00016800 	andeq	r6, r1, r0, lsl #16
    4b1c:	00000000 	andeq	r0, r0, r0
    4b20:	000fa700 	andeq	sl, pc, r0, lsl #14
    4b24:	06010200 	streq	r0, [r1], -r0, lsl #4
    4b28:	000007a9 	andeq	r0, r0, r9, lsr #15
    4b2c:	00050202 	andeq	r0, r5, r2, lsl #4
    4b30:	03000000 	movweq	r0, #0
    4b34:	00002c12 	andeq	r2, r0, r2, lsl ip
    4b38:	44182802 	ldrmi	r2, [r8], #-2050	; 0xfffff7fe
    4b3c:	04000000 	streq	r0, [r0], #-0
    4b40:	00000033 	andeq	r0, r0, r3, lsr r0
    4b44:	b5050402 	strlt	r0, [r5, #-1026]	; 0xfffffbfe
    4b48:	02000001 	andeq	r0, r0, #1
    4b4c:	01b00508 	lslseq	r0, r8, #10
    4b50:	ca030000 	bgt	c4b58 <_Min_Stack_Size+0xc4758>
    4b54:	0200002a 	andeq	r0, r0, #42	; 0x2a
    4b58:	0063182e 	rsbeq	r1, r3, lr, lsr #16
    4b5c:	52050000 	andpl	r0, r5, #0
    4b60:	02000000 	andeq	r0, r0, #0
    4b64:	07a70801 	streq	r0, [r7, r1, lsl #16]!
    4b68:	02020000 	andeq	r0, r2, #0
    4b6c:	00037707 	andeq	r7, r3, r7, lsl #14
    4b70:	2b6e0300 	blcs	1b85778 <_Min_Stack_Size+0x1b85378>
    4b74:	34020000 	strcc	r0, [r2], #-0
    4b78:	00008219 	andeq	r8, r0, r9, lsl r2
    4b7c:	00710400 	rsbseq	r0, r1, r0, lsl #8
    4b80:	04020000 	streq	r0, [r2], #-0
    4b84:	0000a507 	andeq	sl, r0, r7, lsl #10
    4b88:	07080200 	streq	r0, [r8, -r0, lsl #4]
    4b8c:	000000a0 	andeq	r0, r0, r0, lsr #1
    4b90:	69050406 	stmdbvs	r5, {r1, r2, sl}
    4b94:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    4b98:	00aa0704 	adceq	r0, sl, r4, lsl #14
    4b9c:	d4070000 	strle	r0, [r7], #-0
    4ba0:	03000000 	movweq	r0, #0
    4ba4:	3f190804 	svccc	0x00190804
    4ba8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4bac:	00000593 	muleq	r0, r3, r5
    4bb0:	71114a04 	tstvc	r1, r4, lsl #20
    4bb4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    4bb8:	0000005e 	andeq	r0, r0, lr, asr r0
    4bbc:	000000c7 	andeq	r0, r0, r7, asr #1
    4bc0:	0000970a 	andeq	r9, r0, sl, lsl #14
    4bc4:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
    4bc8:	000000b7 	strheq	r0, [r0], -r7
    4bcc:	00076008 	andeq	r6, r7, r8
    4bd0:	174c0400 	strbne	r0, [ip, -r0, lsl #8]
    4bd4:	000000c7 	andeq	r0, r0, r7, asr #1
    4bd8:	00005e09 	andeq	r5, r0, r9, lsl #28
    4bdc:	0000e800 	andeq	lr, r0, r0, lsl #16
    4be0:	00970a00 	addseq	r0, r7, r0, lsl #20
    4be4:	00070000 	andeq	r0, r7, r0
    4be8:	0000d805 	andeq	sp, r0, r5, lsl #16
    4bec:	02b20800 	adcseq	r0, r2, #0, 16
    4bf0:	4d040000 	stcmi	0, cr0, [r4, #-0]
    4bf4:	0000e817 	andeq	lr, r0, r7, lsl r8
    4bf8:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    4bfc:	00000719 	andeq	r0, r0, r9, lsl r7
    4c00:	6301070b 	movwvs	r0, #5899	; 0x170b
    4c04:	05000000 	streq	r0, [r0, #-0]
    4c08:	01270133 			; <UNDEFINED> instruction: 0x01270133
    4c0c:	460c0000 	strmi	r0, [ip], -r0
    4c10:	64000008 	strvs	r0, [r0], #-8
    4c14:	00073d0c 	andeq	r3, r7, ip, lsl #26
    4c18:	560c0a00 	strpl	r0, [ip], -r0, lsl #20
    4c1c:	01000003 	tsteq	r0, r3
    4c20:	00054c0c 	andeq	r4, r5, ip, lsl #24
    4c24:	03000100 	movweq	r0, #256	; 0x100
    4c28:	00000014 	andeq	r0, r0, r4, lsl r0
    4c2c:	00033805 	andeq	r3, r3, r5, lsl #16
    4c30:	08000001 	stmdaeq	r0, {r0}
    4c34:	000002fe 	strdeq	r0, [r0], -lr
    4c38:	7d16cd05 	ldcvc	13, cr12, [r6, #-20]	; 0xffffffec
    4c3c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4c40:	000003c0 	andeq	r0, r0, r0, asr #7
    4c44:	7111ce05 	tstvc	r1, r5, lsl #28
    4c48:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    4c4c:	000002f3 	strdeq	r0, [r0], -r3
    4c50:	271ccf05 	ldrcs	ip, [ip, -r5, lsl #30]
    4c54:	0d000001 	stceq	0, cr0, [r0, #-4]
    4c58:	00001767 	andeq	r1, r0, r7, ror #14
    4c5c:	00065401 	andeq	r5, r6, r1, lsl #8
    4c60:	0c000000 	stceq	0, cr0, [r0], {-0}
    4c64:	01000000 	mrseq	r0, (UNDEF: 0)
    4c68:	17790d9c 			; <UNDEFINED> instruction: 0x17790d9c
    4c6c:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    4c70:	00000006 	andeq	r0, r0, r6
    4c74:	00000c00 	andeq	r0, r0, r0, lsl #24
    4c78:	0d9c0100 	ldfeqs	f0, [ip]
    4c7c:	000014c2 	andeq	r1, r0, r2, asr #9
    4c80:	00063e01 	andeq	r3, r6, r1, lsl #28
    4c84:	0c000000 	stceq	0, cr0, [r0], {-0}
    4c88:	01000000 	mrseq	r0, (UNDEF: 0)
    4c8c:	156f0d9c 	strbne	r0, [pc, #-3484]!	; 3ef8 <_Min_Stack_Size+0x3af8>
    4c90:	33010000 	movwcc	r0, #4096	; 0x1000
    4c94:	0012c006 	andseq	ip, r2, r6
    4c98:	00000c08 	andeq	r0, r0, r8, lsl #24
    4c9c:	009c0100 	addseq	r0, ip, r0, lsl #2
    4ca0:	00000e99 	muleq	r0, r9, lr
    4ca4:	0d050004 	stceq	0, cr0, [r5, #-16]
    4ca8:	01040000 	mrseq	r0, (UNDEF: 4)
    4cac:	00000447 	andeq	r0, r0, r7, asr #8
    4cb0:	0019fb0c 	andseq	pc, r9, ip, lsl #22
    4cb4:	0001be00 	andeq	fp, r1, r0, lsl #28
    4cb8:	00019000 	andeq	r9, r1, r0
    4cbc:	00000000 	andeq	r0, r0, r0
    4cc0:	00116a00 	andseq	r6, r1, r0, lsl #20
    4cc4:	01050200 	mrseq	r0, SP_usr
    4cc8:	00000238 	andeq	r0, r0, r8, lsr r2
    4ccc:	38014304 	stmdacc	r1, {r2, r8, r9, lr}
    4cd0:	03000002 	movweq	r0, #2
    4cd4:	00001112 	andeq	r1, r0, r2, lsl r1
    4cd8:	0e4d0372 	mcreq	3, 2, r0, cr13, cr2, {3}
    4cdc:	03740000 	cmneq	r4, #0
    4ce0:	00001038 	andeq	r1, r0, r8, lsr r0
    4ce4:	12040375 	andne	r0, r4, #-738197503	; 0xd4000001
    4ce8:	03760000 	cmneq	r6, #0
    4cec:	00001232 	andeq	r1, r0, r2, lsr r2
    4cf0:	11f2037b 	mvnsne	r0, fp, ror r3
    4cf4:	037c0000 	cmneq	ip, #0
    4cf8:	00000e1c 	andeq	r0, r0, ip, lsl lr
    4cfc:	11ca037e 	bicne	r0, sl, lr, ror r3
    4d00:	047f0000 	ldrbteq	r0, [pc], #-0	; 4d08 <_Min_Stack_Size+0x4908>
    4d04:	00001003 	andeq	r1, r0, r3
    4d08:	107a0400 	rsbsne	r0, sl, r0, lsl #8
    4d0c:	04010000 	streq	r0, [r1], #-0
    4d10:	00000e63 	andeq	r0, r0, r3, ror #28
    4d14:	0f380402 	svceq	0x00380402
    4d18:	04030000 	streq	r0, [r3], #-0
    4d1c:	00000dc3 	andeq	r0, r0, r3, asr #27
    4d20:	0e440404 	cdpeq	4, 4, cr0, cr4, cr4, {0}
    4d24:	04050000 	streq	r0, [r5], #-0
    4d28:	00000dce 	andeq	r0, r0, lr, asr #27
    4d2c:	118b0406 	orrne	r0, fp, r6, lsl #8
    4d30:	04070000 	streq	r0, [r7], #-0
    4d34:	00000f5a 	andeq	r0, r0, sl, asr pc
    4d38:	102d0408 	eorne	r0, sp, r8, lsl #8
    4d3c:	04090000 	streq	r0, [r9], #-0
    4d40:	0000105e 	andeq	r1, r0, lr, asr r0
    4d44:	0db1040a 	cfldrseq	mvf0, [r1, #40]!	; 0x28
    4d48:	040b0000 	streq	r0, [fp], #-0
    4d4c:	000010a3 	andeq	r1, r0, r3, lsr #1
    4d50:	0ec8040c 	cdpeq	4, 12, cr0, cr8, cr12, {0}
    4d54:	040d0000 	streq	r0, [sp], #-0
    4d58:	0000127c 	andeq	r1, r0, ip, ror r2
    4d5c:	0f9a040e 	svceq	0x009a040e
    4d60:	040f0000 	streq	r0, [pc], #-0	; 4d68 <_Min_Stack_Size+0x4968>
    4d64:	00000d95 	muleq	r0, r5, sp
    4d68:	11590410 	cmpne	r9, r0, lsl r4
    4d6c:	04110000 	ldreq	r0, [r1], #-0
    4d70:	00001088 	andeq	r1, r0, r8, lsl #1
    4d74:	11740412 	cmnne	r4, r2, lsl r4
    4d78:	04130000 	ldreq	r0, [r3], #-0
    4d7c:	000010b5 	strheq	r1, [r0], -r5
    4d80:	0eee0414 	mcreq	4, 7, r0, cr14, cr4, {0}
    4d84:	04150000 	ldreq	r0, [r5], #-0
    4d88:	00000d58 	andeq	r0, r0, r8, asr sp
    4d8c:	12250416 	eorne	r0, r5, #369098752	; 0x16000000
    4d90:	04170000 	ldreq	r0, [r7], #-0
    4d94:	00000e9b 	muleq	r0, fp, lr
    4d98:	12bb0418 	adcsne	r0, fp, #24, 8	; 0x18000000
    4d9c:	04190000 	ldreq	r0, [r9], #-0
    4da0:	00001046 	andeq	r1, r0, r6, asr #32
    4da4:	1138041a 	teqne	r8, sl, lsl r4
    4da8:	041b0000 	ldreq	r0, [fp], #-0
    4dac:	000011d7 	ldrdeq	r1, [r0], -r7
    4db0:	0f8a041c 	svceq	0x008a041c
    4db4:	041d0000 	ldreq	r0, [sp], #-0
    4db8:	00000da7 	andeq	r0, r0, r7, lsr #27
    4dbc:	0dd9041e 	cfldrdeq	mvd0, [r9, #120]	; 0x78
    4dc0:	041f0000 	ldreq	r0, [pc], #-0	; 4dc8 <_Min_Stack_Size+0x49c8>
    4dc4:	000011b1 			; <UNDEFINED> instruction: 0x000011b1
    4dc8:	0f650420 	svceq	0x00650420
    4dcc:	04210000 	strteq	r0, [r1], #-0
    4dd0:	00000d66 	andeq	r0, r0, r6, ror #26
    4dd4:	0e910422 	cdpeq	4, 9, cr0, cr1, cr2, {1}
    4dd8:	04230000 	strteq	r0, [r3], #-0
    4ddc:	00001268 	andeq	r1, r0, r8, ror #4
    4de0:	10fb0424 	rscsne	r0, fp, r4, lsr #8
    4de4:	04250000 	strteq	r0, [r5], #-0
    4de8:	00000f19 	andeq	r0, r0, r9, lsl pc
    4dec:	12af0426 	adcne	r0, pc, #637534208	; 0x26000000
    4df0:	04270000 	strteq	r0, [r7], #-0
    4df4:	00000df9 	strdeq	r0, [r0], -r9
    4df8:	10c30428 	sbcne	r0, r3, r8, lsr #8
    4dfc:	04290000 	strteq	r0, [r9], #-0
    4e00:	00000e28 	andeq	r0, r0, r8, lsr #28
    4e04:	0e08042a 	cdpeq	4, 0, cr0, cr8, cr10, {1}
    4e08:	042b0000 	strteq	r0, [fp], #-0
    4e0c:	00000ff0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4e10:	123e042c 	eorsne	r0, lr, #44, 8	; 0x2c000000
    4e14:	042d0000 	strteq	r0, [sp], #-0
    4e18:	0000114c 	andeq	r1, r0, ip, asr #2
    4e1c:	0eb6042e 	cdpeq	4, 11, cr0, cr6, cr14, {1}
    4e20:	042f0000 	strteq	r0, [pc], #-0	; 4e28 <_Min_Stack_Size+0x4a28>
    4e24:	00001181 	andeq	r1, r0, r1, lsl #3
    4e28:	0d4e0430 	cfstrdeq	mvd0, [lr, #-192]	; 0xffffff40
    4e2c:	04310000 	ldrteq	r0, [r1], #-0
    4e30:	00001091 	muleq	r0, r1, r0
    4e34:	0f720432 	svceq	0x00720432
    4e38:	04330000 	ldrteq	r0, [r3], #-0
    4e3c:	00000e39 	andeq	r0, r0, r9, lsr lr
    4e40:	11070434 	tstne	r7, r4, lsr r4
    4e44:	04350000 	ldrteq	r0, [r5], #-0
    4e48:	00001196 	muleq	r0, r6, r1
    4e4c:	12720436 	rsbsne	r0, r2, #905969664	; 0x36000000
    4e50:	04370000 	ldrteq	r0, [r7], #-0
    4e54:	00000d73 	andeq	r0, r0, r3, ror sp
    4e58:	11260438 			; <UNDEFINED> instruction: 0x11260438
    4e5c:	04390000 	ldrteq	r0, [r9], #-0
    4e60:	00000e7f 	andeq	r0, r0, pc, ror lr
    4e64:	1256043a 	subsne	r0, r6, #973078528	; 0x3a000000
    4e68:	043b0000 	ldrteq	r0, [fp], #-0
    4e6c:	0000101b 	andeq	r1, r0, fp, lsl r0
    4e70:	128e043c 	addne	r0, lr, #60, 8	; 0x3c000000
    4e74:	043f0000 	ldrteq	r0, [pc], #-0	; 4e7c <_Min_Stack_Size+0x4a7c>
    4e78:	00000f7c 	andeq	r0, r0, ip, ror pc
    4e7c:	100d0440 	andne	r0, sp, r0, asr #8
    4e80:	04410000 	strbeq	r0, [r1], #-0
    4e84:	00000ee0 	andeq	r0, r0, r0, ror #29
    4e88:	0e730442 	cdpeq	4, 7, cr0, cr3, cr2, {2}
    4e8c:	04430000 	strbeq	r0, [r3], #-0
    4e90:	00000d3c 	andeq	r0, r0, ip, lsr sp
    4e94:	10dc0444 	sbcsne	r0, ip, r4, asr #8
    4e98:	04450000 	strbeq	r0, [r5], #-0
    4e9c:	00000f02 	andeq	r0, r0, r2, lsl #30
    4ea0:	11be0446 			; <UNDEFINED> instruction: 0x11be0446
    4ea4:	04470000 	strbeq	r0, [r7], #-0
    4ea8:	000010ee 	andeq	r1, r0, lr, ror #1
    4eac:	0f250448 	svceq	0x00250448
    4eb0:	04490000 	strbeq	r0, [r9], #-0
    4eb4:	0000129b 	muleq	r0, fp, r2
    4eb8:	0de6044a 	cfstrdeq	mvd0, [r6, #296]!	; 0x128
    4ebc:	044b0000 	strbeq	r0, [fp], #-0
    4ec0:	000011e1 	andeq	r1, r0, r1, ror #3
    4ec4:	0f46044c 	svceq	0x0046044c
    4ec8:	044d0000 	strbeq	r0, [sp], #-0
    4ecc:	0000116b 	andeq	r1, r0, fp, ror #2
    4ed0:	12e10450 	rscne	r0, r1, #80, 8	; 0x50000000
    4ed4:	00510000 	subseq	r0, r1, r0
    4ed8:	a9060105 	stmdbge	r6, {r0, r2, r8}
    4edc:	06000007 	streq	r0, [r0], -r7
    4ee0:	00001b31 	andeq	r1, r0, r1, lsr fp
    4ee4:	25039c04 	strcs	r9, [r3, #-3076]	; 0xfffff3fc
    4ee8:	05000000 	streq	r0, [r0, #-0]
    4eec:	00000502 	andeq	r0, r0, r2, lsl #10
    4ef0:	12060000 	andne	r0, r6, #0
    4ef4:	0500002c 	streq	r0, [r0, #-44]	; 0xffffffd4
    4ef8:	02631828 	rsbeq	r1, r3, #40, 16	; 0x280000
    4efc:	52070000 	andpl	r0, r7, #0
    4f00:	05000002 	streq	r0, [r0, #-2]
    4f04:	01b50504 			; <UNDEFINED> instruction: 0x01b50504
    4f08:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    4f0c:	0001b005 	andeq	fp, r1, r5
    4f10:	2aca0600 	bcs	ff286718 <__StackLimit+0xdf266718>
    4f14:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
    4f18:	00028718 	andeq	r8, r2, r8, lsl r7
    4f1c:	02710700 	rsbseq	r0, r1, #0, 14
    4f20:	71080000 	mrsvc	r0, (UNDEF: 8)
    4f24:	05000002 	streq	r0, [r0, #-2]
    4f28:	07a70801 	streq	r0, [r7, r1, lsl #16]!
    4f2c:	02050000 	andeq	r0, r5, #0
    4f30:	00037707 	andeq	r7, r3, r7, lsl #14
    4f34:	2b6e0600 	blcs	1b8673c <_Min_Stack_Size+0x1b8633c>
    4f38:	34050000 	strcc	r0, [r5], #-0
    4f3c:	0002ab19 	andeq	sl, r2, r9, lsl fp
    4f40:	02950700 	addseq	r0, r5, #0, 14
    4f44:	a1080000 	mrsge	r0, (UNDEF: 8)
    4f48:	05000002 	streq	r0, [r0, #-2]
    4f4c:	00a50704 	adceq	r0, r5, r4, lsl #14
    4f50:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    4f54:	0000a007 	andeq	sl, r0, r7
    4f58:	05040900 	streq	r0, [r4, #-2304]	; 0xfffff700
    4f5c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    4f60:	aa070405 	bge	1c5f7c <_Min_Stack_Size+0x1c5b7c>
    4f64:	0a000000 	beq	4f6c <_Min_Stack_Size+0x4b6c>
    4f68:	96010e04 	strls	r0, [r1], -r4, lsl #28
    4f6c:	03910901 	orrseq	r0, r1, #16384	; 0x4000
    4f70:	c90b0000 	stmdbgt	fp, {}	; <UNPREDICTABLE>
    4f74:	0100001a 	tsteq	r0, sl, lsl r0
    4f78:	a1120198 			; <UNDEFINED> instruction: 0xa1120198
    4f7c:	00000003 	andeq	r0, r0, r3
    4f80:	0005ad0b 	andeq	sl, r5, fp, lsl #26
    4f84:	01990100 	orrseq	r0, r9, r0, lsl #2
    4f88:	0003a612 	andeq	sl, r3, r2, lsl r6
    4f8c:	620b2000 	andvs	r2, fp, #0
    4f90:	0100001a 	tsteq	r0, sl, lsl r0
    4f94:	a112019a 			; <UNDEFINED> instruction: 0xa112019a
    4f98:	80000003 	andhi	r0, r0, r3
    4f9c:	001c110b 	andseq	r1, ip, fp, lsl #2
    4fa0:	019b0100 	orrseq	r0, fp, r0, lsl #2
    4fa4:	0003a612 	andeq	sl, r3, r2, lsl r6
    4fa8:	d90ca000 	stmdble	ip, {sp, pc}
    4fac:	01000017 	tsteq	r0, r7, lsl r0
    4fb0:	a112019c 			; <UNDEFINED> instruction: 0xa112019c
    4fb4:	00000003 	andeq	r0, r0, r3
    4fb8:	05c10c01 	strbeq	r0, [r1, #3073]	; 0xc01
    4fbc:	9d010000 	stcls	0, cr0, [r1, #-0]
    4fc0:	03a61201 			; <UNDEFINED> instruction: 0x03a61201
    4fc4:	01200000 			; <UNDEFINED> instruction: 0x01200000
    4fc8:	0017890c 	andseq	r8, r7, ip, lsl #18
    4fcc:	019e0100 	orrseq	r0, lr, r0, lsl #2
    4fd0:	0003a112 	andeq	sl, r3, r2, lsl r1
    4fd4:	0c018000 	stceq	0, cr8, [r1], {-0}
    4fd8:	00000038 	andeq	r0, r0, r8, lsr r0
    4fdc:	12019f01 	andne	r9, r1, #1, 30
    4fe0:	000003a6 	andeq	r0, r0, r6, lsr #7
    4fe4:	e10c01a0 	smlatb	ip, r0, r1, r0
    4fe8:	01000019 	tsteq	r0, r9, lsl r0
    4fec:	a11201a0 	tstge	r2, r0, lsr #3
    4ff0:	00000003 	andeq	r0, r0, r3
    4ff4:	05dd0c02 	ldrbeq	r0, [sp, #3074]	; 0xc02
    4ff8:	a1010000 	mrsge	r0, (UNDEF: 1)
    4ffc:	03b61201 			; <UNDEFINED> instruction: 0x03b61201
    5000:	02200000 	eoreq	r0, r0, #0
    5004:	0050490d 	subseq	r4, r0, sp, lsl #18
    5008:	1201a201 	andne	sl, r1, #268435456	; 0x10000000
    500c:	000003d6 	ldrdeq	r0, [r0], -r6
    5010:	d90c0300 	stmdble	ip, {r8, r9}
    5014:	01000006 	tsteq	r0, r6
    5018:	db1201a3 	blle	4856ac <_Min_Stack_Size+0x4852ac>
    501c:	f0000003 			; <UNDEFINED> instruction: 0xf0000003
    5020:	1c1a0c03 	ldcne	12, cr0, [sl], {3}
    5024:	a4010000 	strge	r0, [r1], #-0
    5028:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    502c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    5030:	02a10e00 	adceq	r0, r1, #0, 28
    5034:	03a10000 			; <UNDEFINED> instruction: 0x03a10000
    5038:	c00f0000 	andgt	r0, pc, r0
    503c:	07000002 	streq	r0, [r0, -r2]
    5040:	03910700 	orrseq	r0, r1, #0, 14
    5044:	950e0000 	strls	r0, [lr, #-0]
    5048:	b6000002 	strlt	r0, [r0], -r2
    504c:	0f000003 	svceq	0x00000003
    5050:	000002c0 	andeq	r0, r0, r0, asr #5
    5054:	950e0017 	strls	r0, [lr, #-23]	; 0xffffffe9
    5058:	c6000002 	strgt	r0, [r0], -r2
    505c:	0f000003 	svceq	0x00000003
    5060:	000002c0 	andeq	r0, r0, r0, asr #5
    5064:	7d0e0037 	stcvc	0, cr0, [lr, #-220]	; 0xffffff24
    5068:	d6000002 	strle	r0, [r0], -r2
    506c:	0f000003 	svceq	0x00000003
    5070:	000002c0 	andeq	r0, r0, r0, asr #5
    5074:	c60700ef 	strgt	r0, [r7], -pc, ror #1
    5078:	0e000003 	cdpeq	0, 0, cr0, cr0, cr3, {0}
    507c:	00000295 	muleq	r0, r5, r2
    5080:	000003ec 	andeq	r0, r0, ip, ror #7
    5084:	0002c010 	andeq	ip, r2, r0, lsl r0
    5088:	00028300 	andeq	r8, r2, r0, lsl #6
    508c:	001ace11 	andseq	ip, sl, r1, lsl lr
    5090:	01a50100 			; <UNDEFINED> instruction: 0x01a50100
    5094:	0002c704 	andeq	ip, r2, r4, lsl #14
    5098:	018c1200 	orreq	r1, ip, r0, lsl #4
    509c:	2a0901b8 	bcs	245784 <_Min_Stack_Size+0x245384>
    50a0:	0b000005 	bleq	50bc <_Min_Stack_Size+0x4cbc>
    50a4:	00001354 	andeq	r1, r0, r4, asr r3
    50a8:	1201ba01 	andne	fp, r1, #4096	; 0x1000
    50ac:	000002a6 	andeq	r0, r0, r6, lsr #5
    50b0:	134f0b00 	movtne	r0, #64256	; 0xfb00
    50b4:	bb010000 	bllt	450bc <_Min_Stack_Size+0x44cbc>
    50b8:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    50bc:	0b040000 	bleq	1050c4 <_Min_Stack_Size+0x104cc4>
    50c0:	000013fe 	strdeq	r1, [r0], -lr
    50c4:	1201bc01 	andne	fp, r1, #256	; 0x100
    50c8:	000002a1 	andeq	r0, r0, r1, lsr #5
    50cc:	13c60b08 	bicne	r0, r6, #8, 22	; 0x2000
    50d0:	bd010000 	stclt	0, cr0, [r1, #-0]
    50d4:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    50d8:	130c0000 	movwne	r0, #49152	; 0xc000
    50dc:	00524353 	subseq	r4, r2, r3, asr r3
    50e0:	1201be01 	andne	fp, r1, #1, 28
    50e4:	000002a1 	andeq	r0, r0, r1, lsr #5
    50e8:	43431310 	movtmi	r1, #13072	; 0x3310
    50ec:	bf010052 	svclt	0x00010052
    50f0:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    50f4:	13140000 	tstne	r4, #0
    50f8:	00504853 	subseq	r4, r0, r3, asr r8
    50fc:	1201c001 	andne	ip, r1, #1
    5100:	0000053a 	andeq	r0, r0, sl, lsr r5
    5104:	13d50b18 	bicsne	r0, r5, #24, 22	; 0x6000
    5108:	c1010000 	mrsgt	r0, (UNDEF: 1)
    510c:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    5110:	0b240000 	bleq	905118 <_Min_Stack_Size+0x904d18>
    5114:	000013ad 	andeq	r1, r0, sp, lsr #7
    5118:	1201c201 	andne	ip, r1, #268435456	; 0x10000000
    511c:	000002a1 	andeq	r0, r0, r1, lsr #5
    5120:	140d0b28 	strne	r0, [sp], #-2856	; 0xfffff4d8
    5124:	c3010000 	movwgt	r0, #4096	; 0x1000
    5128:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    512c:	0b2c0000 	bleq	b05134 <_Min_Stack_Size+0xb04d34>
    5130:	00001408 	andeq	r1, r0, r8, lsl #8
    5134:	1201c401 	andne	ip, r1, #16777216	; 0x1000000
    5138:	000002a1 	andeq	r0, r0, r1, lsr #5
    513c:	13f10b30 	mvnsne	r0, #48, 22	; 0xc000
    5140:	c5010000 	strgt	r0, [r1, #-0]
    5144:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    5148:	0b340000 	bleq	d05150 <_Min_Stack_Size+0xd04d50>
    514c:	000013a8 	andeq	r1, r0, r8, lsr #7
    5150:	1201c601 	andne	ip, r1, #1048576	; 0x100000
    5154:	000002a1 	andeq	r0, r0, r1, lsr #5
    5158:	14170b38 	ldrne	r0, [r7], #-2872	; 0xfffff4c8
    515c:	c7010000 	strgt	r0, [r1, -r0]
    5160:	02a11201 	adceq	r1, r1, #268435456	; 0x10000000
    5164:	133c0000 	teqne	ip, #0
    5168:	00524650 	subseq	r4, r2, r0, asr r6
    516c:	1201c801 	andne	ip, r1, #65536	; 0x10000
    5170:	00000554 	andeq	r0, r0, r4, asr r5
    5174:	46441340 	strbmi	r1, [r4], -r0, asr #6
    5178:	c9010052 	stmdbgt	r1, {r1, r4, r6}
    517c:	02a61201 	adceq	r1, r6, #268435456	; 0x10000000
    5180:	13480000 	movtne	r0, #32768	; 0x8000
    5184:	00524441 	subseq	r4, r2, r1, asr #8
    5188:	1201ca01 	andne	ip, r1, #4096	; 0x1000
    518c:	000002a6 	andeq	r0, r0, r6, lsr #5
    5190:	14120b4c 	ldrne	r0, [r2], #-2892	; 0xfffff4b4
    5194:	cb010000 	blgt	4519c <_Min_Stack_Size+0x44d9c>
    5198:	056e1201 	strbeq	r1, [lr, #-513]!	; 0xfffffdff
    519c:	0b500000 	bleq	14051a4 <_Min_Stack_Size+0x1404da4>
    51a0:	00001403 	andeq	r1, r0, r3, lsl #8
    51a4:	1201cc01 	andne	ip, r1, #256	; 0x100
    51a8:	00000588 	andeq	r0, r0, r8, lsl #11
    51ac:	05ad0b60 	streq	r0, [sp, #2912]!	; 0xb60
    51b0:	cd010000 	stcgt	0, cr0, [r1, #-0]
    51b4:	058d1201 	streq	r1, [sp, #513]	; 0x201
    51b8:	0b740000 	bleq	1d051c0 <_Min_Stack_Size+0x1d04dc0>
    51bc:	0000141c 	andeq	r1, r0, ip, lsl r4
    51c0:	1201ce01 	andne	ip, r1, #1, 28
    51c4:	000002a1 	andeq	r0, r0, r1, lsr #5
    51c8:	7d0e0088 	stcvc	0, cr0, [lr, #-544]	; 0xfffffde0
    51cc:	3a000002 	bcc	51dc <_Min_Stack_Size+0x4ddc>
    51d0:	0f000005 	svceq	0x00000005
    51d4:	000002c0 	andeq	r0, r0, r0, asr #5
    51d8:	2a07000b 	bcs	1c520c <_Min_Stack_Size+0x1c4e0c>
    51dc:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    51e0:	000002a6 	andeq	r0, r0, r6, lsr #5
    51e4:	0000054f 	andeq	r0, r0, pc, asr #10
    51e8:	0002c00f 	andeq	ip, r2, pc
    51ec:	08000100 	stmdaeq	r0, {r8}
    51f0:	0000053f 	andeq	r0, r0, pc, lsr r5
    51f4:	00054f07 	andeq	r4, r5, r7, lsl #30
    51f8:	02a60e00 	adceq	r0, r6, #0, 28
    51fc:	05690000 	strbeq	r0, [r9, #-0]!
    5200:	c00f0000 	andgt	r0, pc, r0
    5204:	03000002 	movweq	r0, #2
    5208:	05590800 	ldrbeq	r0, [r9, #-2048]	; 0xfffff800
    520c:	69070000 	stmdbvs	r7, {}	; <UNPREDICTABLE>
    5210:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    5214:	000002a6 	andeq	r0, r0, r6, lsr #5
    5218:	00000583 	andeq	r0, r0, r3, lsl #11
    521c:	0002c00f 	andeq	ip, r2, pc
    5220:	08000400 	stmdaeq	r0, {sl}
    5224:	00000573 	andeq	r0, r0, r3, ror r5
    5228:	00058307 	andeq	r8, r5, r7, lsl #6
    522c:	02950e00 	addseq	r0, r5, #0, 28
    5230:	059d0000 	ldreq	r0, [sp]
    5234:	c00f0000 	andgt	r0, pc, r0
    5238:	04000002 	streq	r0, [r0], #-2
    523c:	13cc1100 	bicne	r1, ip, #0, 2
    5240:	cf010000 	svcgt	0x00010000
    5244:	03f90301 	mvnseq	r0, #67108864	; 0x4000000
    5248:	10120000 	andsne	r0, r2, r0
    524c:	0902f701 	stmdbeq	r2, {r0, r8, r9, sl, ip, sp, lr, pc}
    5250:	000005ed 	andeq	r0, r0, sp, ror #11
    5254:	0016ab0b 	andseq	sl, r6, fp, lsl #22
    5258:	02f90100 	rscseq	r0, r9, #0, 2
    525c:	0002a112 	andeq	sl, r2, r2, lsl r1
    5260:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
    5264:	01000015 	tsteq	r0, r5, lsl r0
    5268:	a11202fa 			; <UNDEFINED> instruction: 0xa11202fa
    526c:	04000002 	streq	r0, [r0], #-2
    5270:	4c415613 	mcrrmi	6, 1, r5, r1, cr3
    5274:	02fb0100 	rscseq	r0, fp, #0, 2
    5278:	0002a112 	andeq	sl, r2, r2, lsl r1
    527c:	4c0b0800 	stcmi	8, cr0, [fp], {-0}
    5280:	01000015 	tsteq	r0, r5, lsl r0
    5284:	a61202fc 			; <UNDEFINED> instruction: 0xa61202fc
    5288:	0c000002 	stceq	0, cr0, [r0], {2}
    528c:	14b51100 	ldrtne	r1, [r5], #256	; 0x100
    5290:	fd010000 	stc2	0, cr0, [r1, #-0]
    5294:	05aa0302 	streq	r0, [sl, #770]!	; 0x302
    5298:	2c120000 	ldccs	0, cr0, [r2], {-0}
    529c:	0904c701 	stmdbeq	r4, {r0, r8, r9, sl, lr, pc}
    52a0:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    52a4:	001b840b 	andseq	r8, fp, fp, lsl #8
    52a8:	04c90100 	strbeq	r0, [r9], #256	; 0x100
    52ac:	0002a612 	andeq	sl, r2, r2, lsl r6
    52b0:	ab0b0000 	blge	2c52b8 <_Min_Stack_Size+0x2c4eb8>
    52b4:	01000016 	tsteq	r0, r6, lsl r0
    52b8:	a11204ca 	tstge	r2, sl, asr #9
    52bc:	04000002 	streq	r0, [r0], #-2
    52c0:	524e5213 	subpl	r5, lr, #805306369	; 0x30000001
    52c4:	04cb0100 	strbeq	r0, [fp], #256	; 0x100
    52c8:	0002a112 	andeq	sl, r2, r2, lsl r1
    52cc:	1b0b0800 	blne	2c72d4 <_Min_Stack_Size+0x2c6ed4>
    52d0:	0100001b 	tsteq	r0, fp, lsl r0
    52d4:	a11204cc 	tstge	r2, ip, asr #9
    52d8:	0c000002 	stceq	0, cr0, [r0], {2}
    52dc:	001b630b 	andseq	r6, fp, fp, lsl #6
    52e0:	04cd0100 	strbeq	r0, [sp], #256	; 0x100
    52e4:	0002a112 	andeq	sl, r2, r2, lsl r1
    52e8:	9d0b1000 	stcls	0, cr1, [fp, #-0]
    52ec:	01000018 	tsteq	r0, r8, lsl r0
    52f0:	a11204ce 	tstge	r2, lr, asr #9
    52f4:	14000002 	strne	r0, [r0], #-2
    52f8:	0017c10b 	andseq	ip, r7, fp, lsl #2
    52fc:	04cf0100 	strbeq	r0, [pc], #256	; 5304 <_Min_Stack_Size+0x4f04>
    5300:	0002a112 	andeq	sl, r2, r2, lsl r1
    5304:	a50b1800 	strge	r1, [fp, #-2048]	; 0xfffff800
    5308:	01000018 	tsteq	r0, r8, lsl r0
    530c:	a11204d0 			; <UNDEFINED> instruction: 0xa11204d0
    5310:	1c000002 	stcne	0, cr0, [r0], {2}
    5314:	0017c90b 	andseq	ip, r7, fp, lsl #18
    5318:	04d10100 	ldrbeq	r0, [r1], #256	; 0x100
    531c:	0002a112 	andeq	sl, r2, r2, lsl r1
    5320:	ad0b2000 	stcge	0, cr2, [fp, #-0]
    5324:	01000018 	tsteq	r0, r8, lsl r0
    5328:	a11204d2 			; <UNDEFINED> instruction: 0xa11204d2
    532c:	24000002 	strcs	r0, [r0], #-2
    5330:	0017d10b 	andseq	sp, r7, fp, lsl #2
    5334:	04d30100 	ldrbeq	r0, [r3], #256	; 0x100
    5338:	0002a112 	andeq	sl, r2, r2, lsl r1
    533c:	11002800 	tstne	r0, r0, lsl #16
    5340:	00001b3b 	andeq	r1, r0, fp, lsr fp
    5344:	0304d401 	movweq	sp, #17409	; 0x4401
    5348:	000005fa 	strdeq	r0, [r0], -sl
    534c:	0000d414 	andeq	sp, r0, r4, lsl r4
    5350:	08040100 	stmdaeq	r4, {r8}
    5354:	00025e19 	andeq	r5, r2, r9, lsl lr
    5358:	05931500 	ldreq	r1, [r3, #1280]	; 0x500
    535c:	4a060000 	bmi	185364 <_Min_Stack_Size+0x184f64>
    5360:	00029511 	andeq	r9, r2, r1, lsl r5
    5364:	02820e00 	addeq	r0, r2, #0, 28
    5368:	06d50000 	ldrbeq	r0, [r5], r0
    536c:	c00f0000 	andgt	r0, pc, r0
    5370:	0f000002 	svceq	0x00000002
    5374:	06c50800 	strbeq	r0, [r5], r0, lsl #16
    5378:	60150000 	andsvs	r0, r5, r0
    537c:	06000007 	streq	r0, [r0], -r7
    5380:	06d5174c 	ldrbeq	r1, [r5], ip, asr #14
    5384:	820e0000 	andhi	r0, lr, #0
    5388:	f6000002 			; <UNDEFINED> instruction: 0xf6000002
    538c:	0f000006 	svceq	0x00000006
    5390:	000002c0 	andeq	r0, r0, r0, asr #5
    5394:	e6080007 	str	r0, [r8], -r7
    5398:	15000006 	strne	r0, [r0, #-6]
    539c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    53a0:	f6174d06 			; <UNDEFINED> instruction: 0xf6174d06
    53a4:	02000006 	andeq	r0, r0, #6
    53a8:	02870107 	addeq	r0, r7, #-1073741823	; 0xc0000001
    53ac:	ba070000 	blt	1c53b4 <_Min_Stack_Size+0x1c4fb4>
    53b0:	00072201 	andeq	r2, r7, r1, lsl #4
    53b4:	09760400 	ldmdbeq	r6!, {sl}^
    53b8:	16000000 	strne	r0, [r0], -r0
    53bc:	00544553 	subseq	r4, r4, r3, asr r5
    53c0:	08050001 	stmdaeq	r5, {r0}
    53c4:	00071904 	andeq	r1, r7, r4, lsl #18
    53c8:	08101700 	ldmdaeq	r0, {r8, r9, sl, ip}
    53cc:	07c20930 			; <UNDEFINED> instruction: 0x07c20930
    53d0:	d8180000 	ldmdale	r8, {}	; <UNPREDICTABLE>
    53d4:	0800001b 	stmdaeq	r0, {r0, r1, r3, r4}
    53d8:	02711a32 	rsbseq	r1, r1, #204800	; 0x32000
    53dc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    53e0:	000019cc 	andeq	r1, r0, ip, asr #19
    53e4:	711a3408 	tstvc	sl, r8, lsl #8
    53e8:	01000002 	tsteq	r0, r2
    53ec:	000a4b18 	andeq	r4, sl, r8, lsl fp
    53f0:	1a360800 	bne	d873f8 <_Min_Stack_Size+0xd86ff8>
    53f4:	00000295 	muleq	r0, r5, r2
    53f8:	0a911804 	beq	fe44b410 <__StackLimit+0xde42b410>
    53fc:	37080000 	strcc	r0, [r8, -r0]
    5400:	0002711a 	andeq	r7, r2, sl, lsl r1
    5404:	b8180800 	ldmdalt	r8, {fp}
    5408:	0800001a 	stmdaeq	r0, {r1, r3, r4}
    540c:	02711a39 	rsbseq	r1, r1, #233472	; 0x39000
    5410:	18090000 	stmdane	r9, {}	; <UNPREDICTABLE>
    5414:	0000178e 	andeq	r1, r0, lr, lsl #15
    5418:	711a3b08 	tstvc	sl, r8, lsl #22
    541c:	0a000002 	beq	542c <_Min_Stack_Size+0x502c>
    5420:	00194d18 	andseq	r4, r9, r8, lsl sp
    5424:	1a3d0800 	bne	f4742c <_Min_Stack_Size+0xf4702c>
    5428:	00000271 	andeq	r0, r0, r1, ror r2
    542c:	1806180b 	stmdane	r6, {r0, r1, r3, fp, ip}
    5430:	3f080000 	svccc	0x00080000
    5434:	0002711a 	andeq	r7, r2, sl, lsl r1
    5438:	1f180c00 	svcne	0x00180c00
    543c:	0800001c 	stmdaeq	r0, {r2, r3, r4}
    5440:	02711a41 	rsbseq	r1, r1, #266240	; 0x41000
    5444:	180d0000 	stmdane	sp, {}	; <UNPREDICTABLE>
    5448:	000018e9 	andeq	r1, r0, r9, ror #17
    544c:	711a4308 	tstvc	sl, r8, lsl #6
    5450:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    5454:	0017de18 	andseq	sp, r7, r8, lsl lr
    5458:	1a450800 	bne	1147460 <_Min_Stack_Size+0x1147060>
    545c:	00000271 	andeq	r0, r0, r1, ror r2
    5460:	d206000f 	andle	r0, r6, #15
    5464:	08000018 	stmdaeq	r0, {r3, r4}
    5468:	07290247 	streq	r0, [r9, -r7, asr #4]!
    546c:	07020000 	streq	r0, [r2, -r0]
    5470:	00028701 	andeq	r8, r2, r1, lsl #14
    5474:	01330900 	teqeq	r3, r0, lsl #18
    5478:	000007f5 	strdeq	r0, [r0], -r5
    547c:	00084604 	andeq	r4, r8, r4, lsl #12
    5480:	3d046400 	cfstrscc	mvf6, [r4, #-0]
    5484:	0a000007 	beq	54a8 <_Min_Stack_Size+0x50a8>
    5488:	00035604 	andeq	r5, r3, r4, lsl #12
    548c:	4c040100 	stfmis	f0, [r4], {-0}
    5490:	01000005 	tsteq	r0, r5
    5494:	00140600 	andseq	r0, r4, r0, lsl #12
    5498:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    549c:	0007ce03 	andeq	ip, r7, r3, lsl #28
    54a0:	02fe1500 	rscseq	r1, lr, #0, 10
    54a4:	cd090000 	stcgt	0, cr0, [r9, #-0]
    54a8:	0002a116 	andeq	sl, r2, r6, lsl r1
    54ac:	03c01500 	biceq	r1, r0, #0, 10
    54b0:	ce090000 	cdpgt	0, 0, cr0, cr9, cr0, {0}
    54b4:	00029511 	andeq	r9, r2, r1, lsl r5
    54b8:	02f31500 	rscseq	r1, r3, #0, 10
    54bc:	cf090000 	svcgt	0x00090000
    54c0:	0007f51c 	andeq	pc, r7, ip, lsl r5	; <UNPREDICTABLE>
    54c4:	1a7b1900 	bne	1ecb8cc <_Min_Stack_Size+0x1ecb4cc>
    54c8:	e1030000 	mrs	r0, (UNDEF: 3)
    54cc:	00000d01 	andeq	r0, r0, r1, lsl #26
    54d0:	000c0000 	andeq	r0, ip, r0
    54d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    54d8:	0018121a 	andseq	r1, r8, sl, lsl r2
    54dc:	01d80300 	bicseq	r0, r8, r0, lsl #6
    54e0:	00000006 	andeq	r0, r0, r6
    54e4:	00000c00 	andeq	r0, r0, r0, lsl #24
    54e8:	1b9c0100 	blne	fe7058f0 <__StackLimit+0xde6e58f0>
    54ec:	00001b68 	andeq	r1, r0, r8, ror #22
    54f0:	0601c603 	streq	ip, [r1], -r3, lsl #12
    54f4:	00000000 	andeq	r0, r0, r0
    54f8:	00000038 	andeq	r0, r0, r8, lsr r0
    54fc:	08739c01 	ldmdaeq	r3!, {r0, sl, fp, ip, pc}^
    5500:	d71c0000 	ldrle	r0, [ip, -r0]
    5504:	03000008 	movweq	r0, #8
    5508:	952b01c6 	strls	r0, [fp, #-454]!	; 0xfffffe3a
    550c:	02000002 	andeq	r0, r0, #2
    5510:	1d007491 	cfstrsne	mvf7, [r0, #-580]	; 0xfffffdbc
    5514:	00001979 	andeq	r1, r0, r9, ror r9
    5518:	0a01b503 	beq	7292c <_Min_Stack_Size+0x7252c>
    551c:	00000295 	muleq	r0, r5, r2
    5520:	00000000 	andeq	r0, r0, r0
    5524:	0000001e 	andeq	r0, r0, lr, lsl r0
    5528:	089f9c01 	ldmeq	pc, {r0, sl, fp, ip, pc}	; <UNPREDICTABLE>
    552c:	c91c0000 	ldmdbgt	ip, {}	; <UNPREDICTABLE>
    5530:	03000012 	movweq	r0, #18
    5534:	3f2701b5 	svccc	0x002701b5
    5538:	02000002 	andeq	r0, r0, #2
    553c:	1e007791 	mcrne	7, 0, r7, cr0, cr1, {4}
    5540:	00001829 	andeq	r1, r0, r9, lsr #16
    5544:	0601a403 	streq	sl, [r1], -r3, lsl #8
    5548:	00000000 	andeq	r0, r0, r0
    554c:	0000001c 	andeq	r0, r0, ip, lsl r0
    5550:	08c79c01 	stmiaeq	r7, {r0, sl, fp, ip, pc}^
    5554:	c91c0000 	ldmdbgt	ip, {}	; <UNPREDICTABLE>
    5558:	03000012 	movweq	r0, #18
    555c:	3f2901a4 	svccc	0x002901a4
    5560:	02000002 	andeq	r0, r0, #2
    5564:	1d007791 	stcne	7, cr7, [r0, #-580]	; 0xfffffdbc
    5568:	00001911 	andeq	r1, r0, r1, lsl r9
    556c:	0a019403 	beq	6a580 <_Min_Stack_Size+0x6a180>
    5570:	00000295 	muleq	r0, r5, r2
    5574:	00000000 	andeq	r0, r0, r0
    5578:	0000001e 	andeq	r0, r0, lr, lsl r0
    557c:	08f39c01 	ldmeq	r3!, {r0, sl, fp, ip, pc}^
    5580:	c91c0000 	ldmdbgt	ip, {}	; <UNPREDICTABLE>
    5584:	03000012 	movweq	r0, #18
    5588:	3f2b0194 	svccc	0x002b0194
    558c:	02000002 	andeq	r0, r0, #2
    5590:	1e007791 	mcrne	7, 0, r7, cr0, cr1, {4}
    5594:	000019a5 	andeq	r1, r0, r5, lsr #19
    5598:	06018203 	streq	r8, [r1], -r3, lsl #4
    559c:	00000000 	andeq	r0, r0, r0
    55a0:	0000001c 	andeq	r0, r0, ip, lsl r0
    55a4:	091b9c01 	ldmdbeq	fp, {r0, sl, fp, ip, pc}
    55a8:	c91c0000 	ldmdbgt	ip, {}	; <UNPREDICTABLE>
    55ac:	03000012 	movweq	r0, #18
    55b0:	3f270182 	svccc	0x00270182
    55b4:	02000002 	andeq	r0, r0, #2
    55b8:	1e007791 	mcrne	7, 0, r7, cr0, cr1, {4}
    55bc:	0000185e 	andeq	r1, r0, lr, asr r8
    55c0:	06017303 	streq	r7, [r1], -r3, lsl #6
    55c4:	00000000 	andeq	r0, r0, r0
    55c8:	0000002c 	andeq	r0, r0, ip, lsr #32
    55cc:	09739c01 	ldmdbeq	r3!, {r0, sl, fp, ip, pc}^
    55d0:	c91c0000 	ldmdbgt	ip, {}	; <UNPREDICTABLE>
    55d4:	03000012 	movweq	r0, #18
    55d8:	3f250173 	svccc	0x00250173
    55dc:	02000002 	andeq	r0, r0, #2
    55e0:	eb1c7791 	bl	72342c <_Min_Stack_Size+0x72302c>
    55e4:	03000017 	movweq	r0, #23
    55e8:	95340173 	ldrls	r0, [r4, #-371]!	; 0xfffffe8d
    55ec:	02000002 	andeq	r0, r0, #2
    55f0:	3c1c7091 	ldccc	0, cr7, [ip], {145}	; 0x91
    55f4:	03000019 	movweq	r0, #25
    55f8:	734d0173 	movtvc	r0, #53619	; 0xd173
    55fc:	02000009 	andeq	r0, r0, #9
    5600:	f91c6c91 			; <UNDEFINED> instruction: 0xf91c6c91
    5604:	03000017 	movweq	r0, #23
    5608:	73690173 	cmnvc	r9, #-1073741796	; 0xc000001c
    560c:	02000009 	andeq	r0, r0, #9
    5610:	1f006891 	svcne	0x00006891
    5614:	00029504 	andeq	r9, r2, r4, lsl #10
    5618:	09730800 	ldmdbeq	r3!, {fp}^
    561c:	b3200000 	noplt	{0}	; <UNPREDICTABLE>
    5620:	0300001b 	movweq	r0, #27
    5624:	950a0158 	strls	r0, [sl, #-344]	; 0xfffffea8
    5628:	00000002 	andeq	r0, r0, r2
    562c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    5630:	01000000 	mrseq	r0, (UNDEF: 0)
    5634:	1b891b9c 	blne	fe24c4ac <__StackLimit+0xde22c4ac>
    5638:	2c030000 	stccs	0, cr0, [r3], {-0}
    563c:	00000601 	andeq	r0, r0, r1, lsl #12
    5640:	00880000 	addeq	r0, r8, r0
    5644:	9c010000 	stcls	0, cr0, [r1], {-0}
    5648:	000009bd 			; <UNDEFINED> instruction: 0x000009bd
    564c:	0018b51c 	andseq	fp, r8, ip, lsl r5
    5650:	012c0300 			; <UNDEFINED> instruction: 0x012c0300
    5654:	0009bd33 	andeq	fp, r9, r3, lsr sp
    5658:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    565c:	c2041f00 	andgt	r1, r4, #0, 30
    5660:	1b000007 	blne	5684 <_Min_Stack_Size+0x5284>
    5664:	00001bd0 	ldrdeq	r1, [r0], -r0
    5668:	06011903 	streq	r1, [r1], -r3, lsl #18
    566c:	00000000 	andeq	r0, r0, r0
    5670:	00000038 	andeq	r0, r0, r8, lsr r0
    5674:	0a0d9c01 	beq	36c680 <_Min_Stack_Size+0x36c280>
    5678:	521c0000 	andspl	r0, ip, #0
    567c:	03000018 	movweq	r0, #24
    5680:	951e0119 	ldrls	r0, [lr, #-281]	; 0xfffffee7
    5684:	02000002 	andeq	r0, r0, #2
    5688:	88217491 	stmdahi	r1!, {r0, r4, r7, sl, ip, sp, lr}
    568c:	0000000e 	andeq	r0, r0, lr
    5690:	04000000 	streq	r0, [r0], #-0
    5694:	03000000 	movweq	r0, #0
    5698:	21030122 	tstcs	r3, r2, lsr #2
    569c:	00000e92 	muleq	r0, r2, lr
    56a0:	00000000 	andeq	r0, r0, r0
    56a4:	00000004 	andeq	r0, r0, r4
    56a8:	03012303 	movweq	r2, #4867	; 0x1303
    56ac:	18421b00 	stmdane	r2, {r8, r9, fp, ip}^
    56b0:	02030000 	andeq	r0, r3, #0
    56b4:	00000601 	andeq	r0, r0, r1, lsl #12
    56b8:	002c0000 	eoreq	r0, ip, r0
    56bc:	9c010000 	stcls	0, cr0, [r1], {-0}
    56c0:	00000a36 	andeq	r0, r0, r6, lsr sl
    56c4:	000e7e21 	andeq	r7, lr, r1, lsr #28
    56c8:	00000000 	andeq	r0, r0, r0
    56cc:	00000400 	andeq	r0, r0, r0, lsl #8
    56d0:	01050300 	mrseq	r0, SP_abt
    56d4:	a5220003 	strge	r0, [r2, #-3]!
    56d8:	0300001a 	movweq	r0, #26
    56dc:	02950ae5 	addseq	r0, r5, #937984	; 0xe5000
    56e0:	14ce0000 	strbne	r0, [lr], #0
    56e4:	00180800 	andseq	r0, r8, r0, lsl #16
    56e8:	9c010000 	stcls	0, cr0, [r1], {-0}
    56ec:	00000a60 	andeq	r0, r0, r0, ror #20
    56f0:	001b5923 	andseq	r5, fp, r3, lsr #18
    56f4:	26e50300 	strbtcs	r0, [r5], r0, lsl #6
    56f8:	00000295 	muleq	r0, r5, r2
    56fc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    5700:	001a9024 	andseq	r9, sl, r4, lsr #32
    5704:	06d80300 	ldrbeq	r0, [r8], r0, lsl #6
    5708:	00000000 	andeq	r0, r0, r0
    570c:	00000008 	andeq	r0, r0, r8
    5710:	28259c01 	stmdacs	r5!, {r0, sl, fp, ip, pc}
    5714:	03000019 	movweq	r0, #25
    5718:	000006cb 	andeq	r0, r0, fp, asr #13
    571c:	001c0000 	andseq	r0, ip, r0
    5720:	9c010000 	stcls	0, cr0, [r1], {-0}
    5724:	00000a98 	muleq	r0, r8, sl
    5728:	0012c923 	andseq	ip, r2, r3, lsr #18
    572c:	24cb0300 	strbcs	r0, [fp], #768	; 0x300
    5730:	0000023f 	andeq	r0, r0, pc, lsr r2
    5734:	00779102 	rsbseq	r9, r7, r2, lsl #2
    5738:	00179b25 	andseq	r9, r7, r5, lsr #22
    573c:	06bb0300 	ldrteq	r0, [fp], r0, lsl #6
    5740:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
    5744:	0000001c 	andeq	r0, r0, ip, lsl r0
    5748:	0abe9c01 	beq	fefac754 <__StackLimit+0xdef8c754>
    574c:	c9230000 	stmdbgt	r3!, {}	; <UNPREDICTABLE>
    5750:	03000012 	movweq	r0, #18
    5754:	023f23bb 	eorseq	r2, pc, #-335544318	; 0xec000002
    5758:	91020000 	mrsls	r0, (UNDEF: 2)
    575c:	44250077 	strtmi	r0, [r5], #-119	; 0xffffff89
    5760:	0300001b 	movweq	r0, #27
    5764:	147a06a5 	ldrbtne	r0, [sl], #-1701	; 0xfffff95b
    5768:	00380800 	eorseq	r0, r8, r0, lsl #16
    576c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5770:	00000b11 	andeq	r0, r0, r1, lsl fp
    5774:	0012c923 	andseq	ip, r2, r3, lsr #18
    5778:	25a50300 	strcs	r0, [r5, #768]!	; 0x300
    577c:	0000023f 	andeq	r0, r0, pc, lsr r2
    5780:	236f9102 	cmncs	pc, #-2147483648	; 0x80000000
    5784:	0000193d 	andeq	r1, r0, sp, lsr r9
    5788:	9534a503 	ldrls	sl, [r4, #-1283]!	; 0xfffffafd
    578c:	02000002 	andeq	r0, r0, #2
    5790:	fa236891 	blx	8df9dc <_Min_Stack_Size+0x8df5dc>
    5794:	03000017 	movweq	r0, #23
    5798:	02954ea5 	addseq	r4, r5, #2640	; 0xa50
    579c:	91020000 	mrsls	r0, (UNDEF: 2)
    57a0:	19d32664 	ldmibne	r3, {r2, r5, r6, r9, sl, sp}^
    57a4:	a7030000 	strge	r0, [r3, -r0]
    57a8:	0002950c 	andeq	r9, r2, ip, lsl #10
    57ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    57b0:	1ad82500 	bne	ff60ebb8 <__StackLimit+0xdf5eebb8>
    57b4:	8f030000 	svchi	0x00030000
    57b8:	00146406 	andseq	r6, r4, r6, lsl #8
    57bc:	00001608 	andeq	r1, r0, r8, lsl #12
    57c0:	379c0100 	ldrcc	r0, [ip, r0, lsl #2]
    57c4:	2300000b 	movwcs	r0, #11
    57c8:	000017eb 	andeq	r1, r0, fp, ror #15
    57cc:	952c8f03 	strls	r8, [ip, #-3843]!	; 0xfffff0fd
    57d0:	02000002 	andeq	r0, r0, #2
    57d4:	27007491 			; <UNDEFINED> instruction: 0x27007491
    57d8:	00001b9e 	muleq	r0, lr, fp
    57dc:	1a07e601 	bne	1fefe8 <_Min_Stack_Size+0x1febe8>
    57e0:	00000295 	muleq	r0, r5, r2
    57e4:	08001420 	stmdaeq	r0, {r5, sl, ip}
    57e8:	00000044 	andeq	r0, r0, r4, asr #32
    57ec:	0b639c01 	bleq	18ec7f8 <_Min_Stack_Size+0x18ec3f8>
    57f0:	301c0000 	andscc	r0, ip, r0
    57f4:	0100002b 	tsteq	r0, fp, lsr #32
    57f8:	953207e6 	ldrls	r0, [r2, #-2022]!	; 0xfffff81a
    57fc:	02000002 	andeq	r0, r0, #2
    5800:	28007491 	stmdacs	r0, {r0, r4, r7, sl, ip, sp, lr}
    5804:	0000188a 	andeq	r1, r0, sl, lsl #17
    5808:	22079301 	andcs	r9, r7, #67108864	; 0x4000000
    580c:	00000000 	andeq	r0, r0, r0
    5810:	00000028 	andeq	r0, r0, r8, lsr #32
    5814:	0b9d9c01 	bleq	fe76c820 <__StackLimit+0xde74c820>
    5818:	88210000 	stmdahi	r1!, {}	; <UNPREDICTABLE>
    581c:	0000000e 	andeq	r0, r0, lr
    5820:	04000000 	streq	r0, [r0], #-0
    5824:	01000000 	mrseq	r0, (UNDEF: 0)
    5828:	21030795 			; <UNDEFINED> instruction: 0x21030795
    582c:	00000e88 	andeq	r0, r0, r8, lsl #29
    5830:	00000000 	andeq	r0, r0, r0
    5834:	00000004 	andeq	r0, r0, r4
    5838:	03079a01 	movweq	r9, #31233	; 0x7a01
    583c:	1a672900 	bne	19cfc44 <_Min_Stack_Size+0x19cf844>
    5840:	62010000 	andvs	r0, r1, #0
    5844:	00001607 	andeq	r1, r0, r7, lsl #12
    5848:	006c0000 	rsbeq	r0, ip, r0
    584c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5850:	00000c25 	andeq	r0, r0, r5, lsr #24
    5854:	0017fd1c 	andseq	pc, r7, ip, lsl sp	; <UNPREDICTABLE>
    5858:	07620100 	strbeq	r0, [r2, -r0, lsl #2]!
    585c:	00029534 	andeq	r9, r2, r4, lsr r5
    5860:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    5864:	0017eb1c 	andseq	lr, r7, ip, lsl fp
    5868:	07620100 	strbeq	r0, [r2, -r0, lsl #2]!
    586c:	00029547 	andeq	r9, r2, r7, asr #10
    5870:	60910200 	addsvs	r0, r1, r0, lsl #4
    5874:	00193c1c 	andseq	r3, r9, ip, lsl ip
    5878:	07620100 	strbeq	r0, [r2, -r0, lsl #2]!
    587c:	00097966 	andeq	r7, r9, r6, ror #18
    5880:	5c910200 	lfmpl	f0, 4, [r1], {0}
    5884:	0017f91c 	andseq	pc, r7, ip, lsl r9	; <UNPREDICTABLE>
    5888:	07620100 	strbeq	r0, [r2, -r0, lsl #2]!
    588c:	00097988 	andeq	r7, r9, r8, lsl #19
    5890:	58910200 	ldmpl	r1, {r9}
    5894:	001b202a 	andseq	r2, fp, sl, lsr #32
    5898:	07640100 	strbeq	r0, [r4, -r0, lsl #2]!
    589c:	0002950c 	andeq	r9, r2, ip, lsl #10
    58a0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    58a4:	0018be2a 	andseq	fp, r8, sl, lsr #28
    58a8:	07650100 	strbeq	r0, [r5, -r0, lsl #2]!
    58ac:	0002950c 	andeq	r9, r2, ip, lsl #10
    58b0:	70910200 	addsvc	r0, r1, r0, lsl #4
    58b4:	0019bc2a 	andseq	fp, r9, sl, lsr #24
    58b8:	07660100 	strbeq	r0, [r6, -r0, lsl #2]!
    58bc:	0002950c 	andeq	r9, r2, ip, lsl #10
    58c0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    58c4:	1a4e2b00 	bne	13904cc <_Min_Stack_Size+0x13900cc>
    58c8:	47010000 	strmi	r0, [r1, -r0]
    58cc:	02951a07 	addseq	r1, r5, #28672	; 0x7000
    58d0:	13bc0000 			; <UNDEFINED> instruction: 0x13bc0000
    58d4:	00640800 	rsbeq	r0, r4, r0, lsl #16
    58d8:	9c010000 	stcls	0, cr0, [r1], {-0}
    58dc:	00000ca1 	andeq	r0, r0, r1, lsr #25
    58e0:	0017eb1c 	andseq	lr, r7, ip, lsl fp
    58e4:	07470100 	strbeq	r0, [r7, -r0, lsl #2]
    58e8:	00029538 	andeq	r9, r2, r8, lsr r5
    58ec:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    58f0:	00193d1c 	andseq	r3, r9, ip, lsl sp
    58f4:	07470100 	strbeq	r0, [r7, -r0, lsl #2]
    58f8:	00029550 	andeq	r9, r2, r0, asr r5
    58fc:	60910200 	addsvs	r0, r1, r0, lsl #4
    5900:	0017fa1c 	andseq	pc, r7, ip, lsl sl	; <UNPREDICTABLE>
    5904:	07470100 	strbeq	r0, [r7, -r0, lsl #2]
    5908:	0002956a 	andeq	r9, r2, sl, ror #10
    590c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    5910:	001b202a 	andseq	r2, fp, sl, lsr #32
    5914:	07490100 	strbeq	r0, [r9, -r0, lsl #2]
    5918:	0002950c 	andeq	r9, r2, ip, lsl #10
    591c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    5920:	0018be2a 	andseq	fp, r8, sl, lsr #28
    5924:	074a0100 	strbeq	r0, [sl, -r0, lsl #2]
    5928:	0002950c 	andeq	r9, r2, ip, lsl #10
    592c:	70910200 	addsvc	r0, r1, r0, lsl #4
    5930:	0019bc2a 	andseq	fp, r9, sl, lsr #24
    5934:	074b0100 	strbeq	r0, [fp, -r0, lsl #2]
    5938:	0002950c 	andeq	r9, r2, ip, lsl #10
    593c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    5940:	19922b00 	ldmibne	r2, {r8, r9, fp, sp}
    5944:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5948:	02951a07 	addseq	r1, r5, #28672	; 0x7000
    594c:	00000000 	andeq	r0, r0, r0
    5950:	004c0000 	subeq	r0, ip, r0
    5954:	9c010000 	stcls	0, cr0, [r1], {-0}
    5958:	00000ccd 	andeq	r0, r0, sp, asr #25
    595c:	0012c91c 	andseq	ip, r2, ip, lsl r9
    5960:	072e0100 	streq	r0, [lr, -r0, lsl #2]!
    5964:	00023f37 	andeq	r3, r2, r7, lsr pc
    5968:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    596c:	17ae2900 	strne	r2, [lr, r0, lsl #18]!
    5970:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
    5974:	13681607 	cmnne	r8, #7340032	; 0x700000
    5978:	00540800 	subseq	r0, r4, r0, lsl #16
    597c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5980:	00000d05 	andeq	r0, r0, r5, lsl #26
    5984:	0012c91c 	andseq	ip, r2, ip, lsl r9
    5988:	07180100 	ldreq	r0, [r8, -r0, lsl #2]
    598c:	00023f33 	andeq	r3, r2, r3, lsr pc
    5990:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    5994:	002cee1c 	eoreq	lr, ip, ip, lsl lr
    5998:	07180100 	ldreq	r0, [r8, -r0, lsl #2]
    599c:	00029542 	andeq	r9, r2, r2, asr #10
    59a0:	70910200 	addsvc	r0, r1, r0, lsl #4
    59a4:	1bdf2b00 	blne	ff7d05ac <__StackLimit+0xdf7b05ac>
    59a8:	02010000 	andeq	r0, r1, #0
    59ac:	02951a07 	addseq	r1, r5, #28672	; 0x7000
    59b0:	00000000 	andeq	r0, r0, r0
    59b4:	00400000 	subeq	r0, r0, r0
    59b8:	9c010000 	stcls	0, cr0, [r1], {-0}
    59bc:	00000d31 	andeq	r0, r0, r1, lsr sp
    59c0:	0012c91c 	andseq	ip, r2, ip, lsl r9
    59c4:	07020100 	streq	r0, [r2, -r0, lsl #2]
    59c8:	00023f35 	andeq	r3, r2, r5, lsr pc
    59cc:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    59d0:	18732900 	ldmdane	r3!, {r8, fp, sp}^
    59d4:	f1010000 	setend	le
    59d8:	00001606 	andeq	r1, r0, r6, lsl #12
    59dc:	003c0000 	eorseq	r0, ip, r0
    59e0:	9c010000 	stcls	0, cr0, [r1], {-0}
    59e4:	00000d59 	andeq	r0, r0, r9, asr sp
    59e8:	0012c91c 	andseq	ip, r2, ip, lsl r9
    59ec:	06f10100 	ldrbteq	r0, [r1], r0, lsl #2
    59f0:	00023f37 	andeq	r3, r2, r7, lsr pc
    59f4:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    59f8:	1af52900 	bne	ffd4fe00 <__StackLimit+0xdfd2fe00>
    59fc:	e2010000 	and	r0, r1, #0
    5a00:	00001606 	andeq	r1, r0, r6, lsl #12
    5a04:	003c0000 	eorseq	r0, ip, r0
    5a08:	9c010000 	stcls	0, cr0, [r1], {-0}
    5a0c:	00000d81 	andeq	r0, r0, r1, lsl #27
    5a10:	0012c91c 	andseq	ip, r2, ip, lsl r9
    5a14:	06e20100 	strbteq	r0, [r2], r0, lsl #2
    5a18:	00023f35 	andeq	r3, r2, r5, lsr pc
    5a1c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    5a20:	19e62b00 	stmibne	r6!, {r8, r9, fp, sp}^
    5a24:	cf010000 	svcgt	0x00010000
    5a28:	02951a06 	addseq	r1, r5, #24576	; 0x6000
    5a2c:	00000000 	andeq	r0, r0, r0
    5a30:	00400000 	subeq	r0, r0, r0
    5a34:	9c010000 	stcls	0, cr0, [r1], {-0}
    5a38:	00000dad 	andeq	r0, r0, sp, lsr #27
    5a3c:	0012c91c 	andseq	ip, r2, ip, lsl r9
    5a40:	06cf0100 	strbeq	r0, [pc], r0, lsl #2
    5a44:	00023f39 	andeq	r3, r2, r9, lsr pc
    5a48:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    5a4c:	18f52900 	ldmne	r5!, {r8, fp, sp}^
    5a50:	bc010000 	stclt	0, cr0, [r1], {-0}
    5a54:	00001606 	andeq	r1, r0, r6, lsl #12
    5a58:	00440000 	subeq	r0, r4, r0
    5a5c:	9c010000 	stcls	0, cr0, [r1], {-0}
    5a60:	00000df7 	strdeq	r0, [r0], -r7
    5a64:	0012c91c 	andseq	ip, r2, ip, lsl r9
    5a68:	06bc0100 	ldrteq	r0, [ip], r0, lsl #2
    5a6c:	00023f32 	andeq	r3, r2, r2, lsr pc
    5a70:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    5a74:	000e8821 	andeq	r8, lr, r1, lsr #16
    5a78:	00000000 	andeq	r0, r0, r0
    5a7c:	00000400 	andeq	r0, r0, r0, lsl #8
    5a80:	06c10100 	strbeq	r0, [r1], r0, lsl #2
    5a84:	0e922105 	fmleqs	f2, f2, f5
    5a88:	00000000 	andeq	r0, r0, r0
    5a8c:	00040000 	andeq	r0, r4, r0
    5a90:	c2010000 	andgt	r0, r1, #0
    5a94:	29000506 	stmdbcs	r0, {r1, r2, r8, sl}
    5a98:	00001b0a 	andeq	r1, r0, sl, lsl #22
    5a9c:	16069801 	strne	r9, [r6], -r1, lsl #16
    5aa0:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
    5aa4:	00000038 	andeq	r0, r0, r8, lsr r0
    5aa8:	0e1f9c01 	cdpeq	12, 1, cr9, cr15, cr1, {0}
    5aac:	c91c0000 	ldmdbgt	ip, {}	; <UNPREDICTABLE>
    5ab0:	01000012 	tsteq	r0, r2, lsl r0
    5ab4:	3f310698 	svccc	0x00310698
    5ab8:	02000002 	andeq	r0, r0, #2
    5abc:	2c007791 	stccs	7, cr7, [r0], {145}	; 0x91
    5ac0:	00001bf6 	strdeq	r1, [r0], -r6
    5ac4:	1a068c01 	bne	1a8ad0 <_Min_Stack_Size+0x1a86d0>
    5ac8:	00000295 	muleq	r0, r5, r2
    5acc:	08001314 	stmdaeq	r0, {r2, r4, r8, r9, ip}
    5ad0:	0000001c 	andeq	r0, r0, ip, lsl r0
    5ad4:	5e299c01 	cdppl	12, 2, cr9, cr9, cr1, {0}
    5ad8:	01000019 	tsteq	r0, r9, lsl r0
    5adc:	cc160679 	ldcgt	6, cr0, [r6], {121}	; 0x79
    5ae0:	48080012 	stmdami	r8, {r1, r4}
    5ae4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ae8:	000e7e9c 	muleq	lr, ip, lr
    5aec:	17eb1c00 	strbne	r1, [fp, r0, lsl #24]!
    5af0:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    5af4:	02953a06 	addseq	r3, r5, #24576	; 0x6000
    5af8:	91020000 	mrsls	r0, (UNDEF: 2)
    5afc:	19072a6c 	stmdbne	r7, {r2, r3, r5, r6, r9, fp, sp}
    5b00:	7b010000 	blvc	45b08 <_Min_Stack_Size+0x45708>
    5b04:	02950c06 	addseq	r0, r5, #1536	; 0x600
    5b08:	91020000 	mrsls	r0, (UNDEF: 2)
    5b0c:	1b202a70 	blne	8104d4 <_Min_Stack_Size+0x8100d4>
    5b10:	7c010000 	stcvc	0, cr0, [r1], {-0}
    5b14:	02950c06 	addseq	r0, r5, #1536	; 0x600
    5b18:	91020000 	mrsls	r0, (UNDEF: 2)
    5b1c:	f02d0074 			; <UNDEFINED> instruction: 0xf02d0074
    5b20:	0200001b 	andeq	r0, r0, #27
    5b24:	031b0378 	tsteq	fp, #120, 6	; 0xe0000001
    5b28:	00198c2d 	andseq	r8, r9, sp, lsr #24
    5b2c:	036d0200 	cmneq	sp, #0, 4
    5b30:	ad2d031b 	stcge	3, cr0, [sp, #-108]!	; 0xffffff94
    5b34:	0200001b 	andeq	r0, r0, #27
    5b38:	031b0362 	tsteq	fp, #-2013265919	; 0x88000001
    5b3c:	00095200 	andeq	r5, r9, r0, lsl #4
    5b40:	3e000400 	cfcpyscc	mvf0, mvf0
    5b44:	04000010 	streq	r0, [r0], #-16
    5b48:	00044701 	andeq	r4, r4, r1, lsl #14
    5b4c:	1cb30c00 	ldcne	12, cr0, [r3]
    5b50:	01be0000 			; <UNDEFINED> instruction: 0x01be0000
    5b54:	02980000 	addseq	r0, r8, #0
    5b58:	00000000 	andeq	r0, r0, r0
    5b5c:	18af0000 	stmiane	pc!, {}	; <UNPREDICTABLE>
    5b60:	01020000 	mrseq	r0, (UNDEF: 2)
    5b64:	0007a906 	andeq	sl, r7, r6, lsl #18
    5b68:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    5b6c:	00000000 	andeq	r0, r0, r0
    5b70:	002c1203 	eoreq	r1, ip, r3, lsl #4
    5b74:	18280200 	stmdane	r8!, {r9}
    5b78:	00000044 	andeq	r0, r0, r4, asr #32
    5b7c:	00003304 	andeq	r3, r0, r4, lsl #6
    5b80:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5b84:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
    5b88:	b0050802 	andlt	r0, r5, r2, lsl #16
    5b8c:	03000001 	movweq	r0, #1
    5b90:	00002aca 	andeq	r2, r0, sl, asr #21
    5b94:	63182e02 	tstvs	r8, #2, 28
    5b98:	05000000 	streq	r0, [r0, #-0]
    5b9c:	00000052 	andeq	r0, r0, r2, asr r0
    5ba0:	a7080102 	strge	r0, [r8, -r2, lsl #2]
    5ba4:	03000007 	movweq	r0, #7
    5ba8:	00000a33 	andeq	r0, r0, r3, lsr sl
    5bac:	76193102 	ldrvc	r3, [r9], -r2, lsl #2
    5bb0:	02000000 	andeq	r0, r0, #0
    5bb4:	03770702 	cmneq	r7, #524288	; 0x80000
    5bb8:	6e030000 	cdpvs	0, 0, cr0, cr3, cr0, {0}
    5bbc:	0200002b 	andeq	r0, r0, #43	; 0x2b
    5bc0:	008e1934 	addeq	r1, lr, r4, lsr r9
    5bc4:	7d040000 	stcvc	0, cr0, [r4, #-0]
    5bc8:	02000000 	andeq	r0, r0, #0
    5bcc:	00a50704 	adceq	r0, r5, r4, lsl #14
    5bd0:	4b030000 	blmi	c5bd8 <_Min_Stack_Size+0xc57d8>
    5bd4:	0200001c 	andeq	r0, r0, #28
    5bd8:	00a11937 	adceq	r1, r1, r7, lsr r9
    5bdc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    5be0:	0000a007 	andeq	sl, r0, r7
    5be4:	05040600 	streq	r0, [r4, #-1536]	; 0xfffffa00
    5be8:	00746e69 	rsbseq	r6, r4, r9, ror #28
    5bec:	aa070402 	bge	1c6bfc <_Min_Stack_Size+0x1c67fc>
    5bf0:	07000000 	streq	r0, [r0, -r0]
    5bf4:	0000007d 	andeq	r0, r0, sp, ror r0
    5bf8:	000000c6 	andeq	r0, r0, r6, asr #1
    5bfc:	0000af08 	andeq	sl, r0, r8, lsl #30
    5c00:	09000100 	stmdbeq	r0, {r8}
    5c04:	000000d4 	ldrdeq	r0, [r0], -r4
    5c08:	19080403 	stmdbne	r8, {r0, r1, sl}
    5c0c:	0000003f 	andeq	r0, r0, pc, lsr r0
    5c10:	0005930a 	andeq	r9, r5, sl, lsl #6
    5c14:	114a0400 	cmpne	sl, r0, lsl #8
    5c18:	0000007d 	andeq	r0, r0, sp, ror r0
    5c1c:	00005e07 	andeq	r5, r0, r7, lsl #28
    5c20:	0000ef00 	andeq	lr, r0, r0, lsl #30
    5c24:	00af0800 	adceq	r0, pc, r0, lsl #16
    5c28:	000f0000 	andeq	r0, pc, r0
    5c2c:	0000df05 	andeq	sp, r0, r5, lsl #30
    5c30:	07600a00 	strbeq	r0, [r0, -r0, lsl #20]!
    5c34:	4c040000 	stcmi	0, cr0, [r4], {-0}
    5c38:	0000ef17 	andeq	lr, r0, r7, lsl pc
    5c3c:	005e0700 	subseq	r0, lr, r0, lsl #14
    5c40:	01100000 	tsteq	r0, r0
    5c44:	af080000 	svcge	0x00080000
    5c48:	07000000 	streq	r0, [r0, -r0]
    5c4c:	01000500 	tsteq	r0, r0, lsl #10
    5c50:	b20a0000 	andlt	r0, sl, #0
    5c54:	04000002 	streq	r0, [r0], #-2
    5c58:	0110174d 	tsteq	r0, sp, asr #14
    5c5c:	1c0b0000 	stcne	0, cr0, [fp], {-0}
    5c60:	09016905 	stmdbeq	r1, {r0, r2, r8, fp, sp, lr}
    5c64:	0000018c 	andeq	r0, r0, ip, lsl #3
    5c68:	5243410c 	subpl	r4, r3, #12, 2
    5c6c:	016b0500 	cmneq	fp, r0, lsl #10
    5c70:	00008911 	andeq	r8, r0, r1, lsl r9
    5c74:	b00d0000 	andlt	r0, sp, r0
    5c78:	05000014 	streq	r0, [r0, #-20]	; 0xffffffec
    5c7c:	8911016c 	ldmdbhi	r1, {r2, r3, r5, r6, r8}
    5c80:	04000000 	streq	r0, [r0], #-0
    5c84:	0014ad0d 	andseq	sl, r4, sp, lsl #26
    5c88:	016d0500 	cmneq	sp, r0, lsl #10
    5c8c:	00008911 	andeq	r8, r0, r1, lsl r9
    5c90:	530c0800 	movwpl	r0, #51200	; 0xc800
    5c94:	6e050052 	mcrvs	0, 0, r0, cr5, cr2, {2}
    5c98:	00891101 	addeq	r1, r9, r1, lsl #2
    5c9c:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    5ca0:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    5ca4:	8911016f 	ldmdbhi	r1, {r0, r1, r2, r3, r5, r6, r8}
    5ca8:	10000000 	andne	r0, r0, r0
    5cac:	0014610d 	andseq	r6, r4, sp, lsl #2
    5cb0:	01700500 	cmneq	r0, r0, lsl #10
    5cb4:	00008911 	andeq	r8, r0, r1, lsl r9
    5cb8:	450d1400 	strmi	r1, [sp, #-1024]	; 0xfffffc00
    5cbc:	05000015 	streq	r0, [r0, #-21]	; 0xffffffeb
    5cc0:	89110171 	ldmdbhi	r1, {r0, r4, r5, r6, r8}
    5cc4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5cc8:	16e40e00 	strbtne	r0, [r4], r0, lsl #28
    5ccc:	72050000 	andvc	r0, r5, #0
    5cd0:	01210301 			; <UNDEFINED> instruction: 0x01210301
    5cd4:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    5cd8:	0901af05 	stmdbeq	r1, {r0, r2, r8, r9, sl, fp, sp, pc}
    5cdc:	00000222 	andeq	r0, r0, r2, lsr #4
    5ce0:	000f320d 	andeq	r3, pc, sp, lsl #4
    5ce4:	01b10500 			; <UNDEFINED> instruction: 0x01b10500
    5ce8:	00008911 	andeq	r8, r0, r1, lsl r9
    5cec:	450d0000 	strmi	r0, [sp, #-0]
    5cf0:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    5cf4:	891101b2 	ldmdbhi	r1, {r1, r4, r5, r7, r8}
    5cf8:	04000000 	streq	r0, [r0], #-0
    5cfc:	00109b0d 	andseq	r9, r0, sp, lsl #22
    5d00:	01b30500 			; <UNDEFINED> instruction: 0x01b30500
    5d04:	00008911 	andeq	r8, r0, r1, lsl r9
    5d08:	fc0d0800 	stc2	8, cr0, [sp], {-0}
    5d0c:	0500000e 	streq	r0, [r0, #-14]
    5d10:	891101b4 	ldmdbhi	r1, {r2, r4, r5, r7, r8}
    5d14:	0c000000 	stceq	0, cr0, [r0], {-0}
    5d18:	5244490c 	subpl	r4, r4, #12, 18	; 0x30000
    5d1c:	01b50500 			; <UNDEFINED> instruction: 0x01b50500
    5d20:	00008911 	andeq	r8, r0, r1, lsl r9
    5d24:	4f0c1000 	svcmi	0x000c1000
    5d28:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    5d2c:	891101b6 	ldmdbhi	r1, {r1, r2, r4, r5, r7, r8}
    5d30:	14000000 	strne	r0, [r0], #-0
    5d34:	000d370d 	andeq	r3, sp, sp, lsl #14
    5d38:	01b70500 			; <UNDEFINED> instruction: 0x01b70500
    5d3c:	00008911 	andeq	r8, r0, r1, lsl r9
    5d40:	830d1800 	movwhi	r1, #55296	; 0xd800
    5d44:	05000010 	streq	r0, [r0, #-16]
    5d48:	891101b8 	ldmdbhi	r1, {r3, r4, r5, r7, r8}
    5d4c:	1c000000 	stcne	0, cr0, [r0], {-0}
    5d50:	5246410c 	subpl	r4, r6, #12, 2
    5d54:	01b90500 			; <UNDEFINED> instruction: 0x01b90500
    5d58:	00023211 	andeq	r3, r2, r1, lsl r2
    5d5c:	07002000 	streq	r2, [r0, -r0]
    5d60:	00000089 	andeq	r0, r0, r9, lsl #1
    5d64:	00000232 	andeq	r0, r0, r2, lsr r2
    5d68:	0000af08 	andeq	sl, r0, r8, lsl #30
    5d6c:	04000100 	streq	r0, [r0], #-256	; 0xffffff00
    5d70:	00000222 	andeq	r0, r0, r2, lsr #4
    5d74:	0011a40e 	andseq	sl, r1, lr, lsl #8
    5d78:	01ba0500 			; <UNDEFINED> instruction: 0x01ba0500
    5d7c:	00019903 	andeq	r9, r1, r3, lsl #18
    5d80:	05080b00 	streq	r0, [r8, #-2816]	; 0xfffff500
    5d84:	6a0901eb 	bvs	246538 <_Min_Stack_Size+0x246138>
    5d88:	0c000002 	stceq	0, cr0, [r0], {2}
    5d8c:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    5d90:	891101ed 	ldmdbhi	r1, {r0, r2, r3, r5, r6, r7, r8}
    5d94:	00000000 	andeq	r0, r0, r0
    5d98:	5253430c 	subspl	r4, r3, #12, 6	; 0x30000000
    5d9c:	01ee0500 	mvneq	r0, r0, lsl #10
    5da0:	00008911 	andeq	r8, r0, r1, lsl r9
    5da4:	0e000400 	cfcpyseq	mvf0, mvf0
    5da8:	00000156 	andeq	r0, r0, r6, asr r1
    5dac:	0301ef05 	movweq	lr, #7941	; 0x1f05
    5db0:	00000244 	andeq	r0, r0, r4, asr #4
    5db4:	f505880b 			; <UNDEFINED> instruction: 0xf505880b
    5db8:	04250901 	strteq	r0, [r5], #-2305	; 0xfffff6ff
    5dbc:	430c0000 	movwmi	r0, #49152	; 0xc000
    5dc0:	f7050052 			; <UNDEFINED> instruction: 0xf7050052
    5dc4:	00891101 	addeq	r1, r9, r1, lsl #2
    5dc8:	0d000000 	stceq	0, cr0, [r0, #-0]
    5dcc:	00000245 	andeq	r0, r0, r5, asr #4
    5dd0:	1101f805 	tstne	r1, r5, lsl #16	; <UNPREDICTABLE>
    5dd4:	00000089 	andeq	r0, r0, r9, lsl #1
    5dd8:	02480d04 	subeq	r0, r8, #4, 26	; 0x100
    5ddc:	f9050000 			; <UNDEFINED> instruction: 0xf9050000
    5de0:	00891101 	addeq	r1, r9, r1, lsl #2
    5de4:	0c080000 	stceq	0, cr0, [r8], {-0}
    5de8:	00524943 	subseq	r4, r2, r3, asr #18
    5dec:	1101fa05 	tstne	r1, r5, lsl #20	; <UNPREDICTABLE>
    5df0:	00000089 	andeq	r0, r0, r9, lsl #1
    5df4:	01240d0c 			; <UNDEFINED> instruction: 0x01240d0c
    5df8:	fb050000 	blx	145e02 <_Min_Stack_Size+0x145a02>
    5dfc:	00891101 	addeq	r1, r9, r1, lsl #2
    5e00:	0d100000 	ldceq	0, cr0, [r0, #-0]
    5e04:	00000734 	andeq	r0, r0, r4, lsr r7
    5e08:	1101fc05 	tstne	r1, r5, lsl #24	; <UNPREDICTABLE>
    5e0c:	00000089 	andeq	r0, r0, r9, lsl #1
    5e10:	03b70d14 			; <UNDEFINED> instruction: 0x03b70d14
    5e14:	fd050000 	stc2	0, cr0, [r5, #-0]
    5e18:	00891101 	addeq	r1, r9, r1, lsl #2
    5e1c:	0d180000 	ldceq	0, cr0, [r8, #-0]
    5e20:	000005ad 	andeq	r0, r0, sp, lsr #11
    5e24:	1101fe05 	tstne	r1, r5, lsl #28	; <UNPREDICTABLE>
    5e28:	0000007d 	andeq	r0, r0, sp, ror r0
    5e2c:	05690d1c 	strbeq	r0, [r9, #-3356]!	; 0xfffff2e4
    5e30:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    5e34:	00891101 	addeq	r1, r9, r1, lsl #2
    5e38:	0d200000 	stceq	0, cr0, [r0, #-0]
    5e3c:	00000179 	andeq	r0, r0, r9, ror r1
    5e40:	11020005 	tstne	r2, r5
    5e44:	00000089 	andeq	r0, r0, r9, lsl #1
    5e48:	05b70d24 	ldreq	r0, [r7, #3364]!	; 0xd24
    5e4c:	01050000 	mrseq	r0, (UNDEF: 5)
    5e50:	00b61102 	adcseq	r1, r6, r2, lsl #2
    5e54:	0d280000 	stceq	0, cr0, [r8, #-0]
    5e58:	00000884 	andeq	r0, r0, r4, lsl #17
    5e5c:	11020205 	tstne	r2, r5, lsl #4
    5e60:	00000089 	andeq	r0, r0, r9, lsl #1
    5e64:	079f0d30 			; <UNDEFINED> instruction: 0x079f0d30
    5e68:	03050000 	movweq	r0, #20480	; 0x5000
    5e6c:	00891102 	addeq	r1, r9, r2, lsl #2
    5e70:	0d340000 	ldceq	0, cr0, [r4, #-0]
    5e74:	000006a3 	andeq	r0, r0, r3, lsr #13
    5e78:	11020405 	tstne	r2, r5, lsl #8
    5e7c:	00000089 	andeq	r0, r0, r9, lsl #1
    5e80:	05c10d38 	strbeq	r0, [r1, #3384]	; 0xd38
    5e84:	05050000 	streq	r0, [r5, #-0]
    5e88:	007d1102 	rsbseq	r1, sp, r2, lsl #2
    5e8c:	0d3c0000 	ldceq	0, cr0, [ip, #-0]
    5e90:	0000078e 	andeq	r0, r0, lr, lsl #15
    5e94:	11020605 	tstne	r2, r5, lsl #12
    5e98:	00000089 	andeq	r0, r0, r9, lsl #1
    5e9c:	06930d40 	ldreq	r0, [r3], r0, asr #26
    5ea0:	07050000 	streq	r0, [r5, -r0]
    5ea4:	00891102 	addeq	r1, r9, r2, lsl #2
    5ea8:	0d440000 	stcleq	0, cr0, [r4, #-0]
    5eac:	00000038 	andeq	r0, r0, r8, lsr r0
    5eb0:	11020805 	tstne	r2, r5, lsl #16
    5eb4:	000000b6 	strheq	r0, [r0], -r6
    5eb8:	00f00d48 	rscseq	r0, r0, r8, asr #26
    5ebc:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    5ec0:	00891102 	addeq	r1, r9, r2, lsl #2
    5ec4:	0d500000 	ldcleq	0, cr0, [r0, #-0]
    5ec8:	0000052e 	andeq	r0, r0, lr, lsr #10
    5ecc:	11020a05 	tstne	r2, r5, lsl #20
    5ed0:	00000089 	andeq	r0, r0, r9, lsl #1
    5ed4:	06590d54 			; <UNDEFINED> instruction: 0x06590d54
    5ed8:	0b050000 	bleq	145ee0 <_Min_Stack_Size+0x145ae0>
    5edc:	00891102 	addeq	r1, r9, r2, lsl #2
    5ee0:	0d580000 	ldcleq	0, cr0, [r8, #-0]
    5ee4:	000005dd 	ldrdeq	r0, [r0], -sp
    5ee8:	11020c05 	tstne	r2, r5, lsl #24
    5eec:	0000007d 	andeq	r0, r0, sp, ror r0
    5ef0:	000a0d5c 	andeq	r0, sl, ip, asr sp
    5ef4:	0d050000 	stceq	0, cr0, [r5, #-0]
    5ef8:	00891102 	addeq	r1, r9, r2, lsl #2
    5efc:	0d600000 	stcleq	0, cr0, [r0, #-0]
    5f00:	000003e7 	andeq	r0, r0, r7, ror #7
    5f04:	11020e05 	tstne	r2, r5, lsl #28
    5f08:	00000089 	andeq	r0, r0, r9, lsl #1
    5f0c:	06d90d64 	ldrbeq	r0, [r9], r4, ror #26
    5f10:	0f050000 	svceq	0x00050000
    5f14:	00b61102 	adcseq	r1, r6, r2, lsl #2
    5f18:	0d680000 	stcleq	0, cr0, [r8, #-0]
    5f1c:	000005e7 	andeq	r0, r0, r7, ror #11
    5f20:	11021005 	tstne	r2, r5
    5f24:	00000089 	andeq	r0, r0, r9, lsl #1
    5f28:	53430c70 	movtpl	r0, #15472	; 0x3c70
    5f2c:	11050052 	qaddne	r0, r2, r5
    5f30:	00891102 	addeq	r1, r9, r2, lsl #2
    5f34:	0d740000 	ldcleq	0, cr0, [r4, #-0]
    5f38:	000005ec 	andeq	r0, r0, ip, ror #11
    5f3c:	11021205 	tstne	r2, r5, lsl #4
    5f40:	000000b6 	strheq	r0, [r0], -r6
    5f44:	07de0d78 			; <UNDEFINED> instruction: 0x07de0d78
    5f48:	13050000 	movwne	r0, #20480	; 0x5000
    5f4c:	00891102 	addeq	r1, r9, r2, lsl #2
    5f50:	0d800000 	stceq	0, cr0, [r0]
    5f54:	00000393 	muleq	r0, r3, r3
    5f58:	11021405 	tstne	r2, r5, lsl #8
    5f5c:	00000089 	andeq	r0, r0, r9, lsl #1
    5f60:	4a0e0084 	bmi	386178 <_Min_Stack_Size+0x385d78>
    5f64:	05000003 	streq	r0, [r0, #-3]
    5f68:	77030215 	smladvc	r3, r5, r2, r0
    5f6c:	0f000002 	svceq	0x00000002
    5f70:	00630107 	rsbeq	r0, r3, r7, lsl #2
    5f74:	ba060000 	blt	185f7c <_Min_Stack_Size+0x185b7c>
    5f78:	00044d01 	andeq	r4, r4, r1, lsl #26
    5f7c:	09761000 	ldmdbeq	r6!, {ip}^
    5f80:	11000000 	mrsne	r0, (UNDEF: 0)
    5f84:	00544553 	subseq	r4, r4, r3, asr r5
    5f88:	40030001 	andmi	r0, r3, r1
    5f8c:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    5f90:	043203bd 	ldrteq	r0, [r2], #-957	; 0xfffffc43
    5f94:	070f0000 	streq	r0, [pc, -r0]
    5f98:	00006301 	andeq	r6, r0, r1, lsl #6
    5f9c:	01c00600 	biceq	r0, r0, r0, lsl #12
    5fa0:	00000474 	andeq	r0, r0, r4, ror r4
    5fa4:	00146710 	andseq	r6, r4, r0, lsl r7
    5fa8:	a6100000 	ldrge	r0, [r0], -r0
    5fac:	01000014 	tsteq	r0, r4, lsl r0
    5fb0:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    5fb4:	00000719 	andeq	r0, r0, r9, lsl r7
    5fb8:	6301070f 	movwvs	r0, #5903	; 0x170f
    5fbc:	07000000 	streq	r0, [r0, -r0]
    5fc0:	04a20128 	strteq	r0, [r2], #296	; 0x128
    5fc4:	69100000 	ldmdbvs	r0, {}	; <UNPREDICTABLE>
    5fc8:	00000003 	andeq	r0, r0, r3
    5fcc:	0006f110 	andeq	pc, r6, r0, lsl r1	; <UNPREDICTABLE>
    5fd0:	5c100100 	ldfpls	f0, [r0], {-0}
    5fd4:	02000000 	andeq	r0, r0, #0
    5fd8:	0002c910 	andeq	ip, r2, r0, lsl r9
    5fdc:	03000300 	movweq	r0, #768	; 0x300
    5fe0:	00001582 	andeq	r1, r0, r2, lsl #11
    5fe4:	7b032d07 	blvc	d1408 <_Min_Stack_Size+0xd1008>
    5fe8:	12000004 	andne	r0, r0, #4
    5fec:	092f0818 	stmdbeq	pc!, {r3, r4, fp}	; <UNPREDICTABLE>
    5ff0:	00000506 	andeq	r0, r0, r6, lsl #10
    5ff4:	00021713 	andeq	r1, r2, r3, lsl r7
    5ff8:	0c310800 	ldceq	8, cr0, [r1], #-0
    5ffc:	0000007d 	andeq	r0, r0, sp, ror r0
    6000:	06631300 	strbteq	r1, [r3], -r0, lsl #6
    6004:	34080000 	strcc	r0, [r8], #-0
    6008:	00007d0c 	andeq	r7, r0, ip, lsl #26
    600c:	72130400 	andsvc	r0, r3, #0, 8
    6010:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6014:	007d0c37 	rsbseq	r0, sp, r7, lsr ip
    6018:	13080000 	movwne	r0, #32768	; 0x8000
    601c:	00000077 	andeq	r0, r0, r7, ror r0
    6020:	7d0c3a08 	vstrvc	s6, [ip, #-32]	; 0xffffffe0
    6024:	0c000000 	stceq	0, cr0, [r0], {-0}
    6028:	00008b13 	andeq	r8, r0, r3, lsl fp
    602c:	0c3e0800 	ldceq	8, cr0, [lr], #-0
    6030:	0000007d 	andeq	r0, r0, sp, ror r0
    6034:	00901310 	addseq	r1, r0, r0, lsl r3
    6038:	41080000 	mrsmi	r0, (UNDEF: 8)
    603c:	00007d0c 	andeq	r7, r0, ip, lsl #26
    6040:	03001400 	movweq	r1, #1024	; 0x400
    6044:	0000081f 	andeq	r0, r0, pc, lsl r8
    6048:	ae024b08 	vmlage.f64	d4, d2, d8
    604c:	12000004 	andne	r0, r0, #4
    6050:	09330930 	ldmdbeq	r3!, {r4, r5, r8, fp}
    6054:	00000577 	andeq	r0, r0, r7, ror r5
    6058:	0003cb13 	andeq	ip, r3, r3, lsl fp
    605c:	0c350900 			; <UNDEFINED> instruction: 0x0c350900
    6060:	0000007d 	andeq	r0, r0, sp, ror r0
    6064:	02da1300 	sbcseq	r1, sl, #0, 6
    6068:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    606c:	00007d0c 	andeq	r7, r0, ip, lsl #26
    6070:	21130400 	tstcs	r3, r0, lsl #8
    6074:	09000006 	stmdbeq	r0, {r1, r2}
    6078:	007d0c3b 	rsbseq	r0, sp, fp, lsr ip
    607c:	13080000 	movwne	r0, #32768	; 0x8000
    6080:	000000cb 	andeq	r0, r0, fp, asr #1
    6084:	7d0c3e09 	stcvc	14, cr3, [ip, #-36]	; 0xffffffdc
    6088:	0c000000 	stceq	0, cr0, [r0], {-0}
    608c:	00022013 	andeq	r2, r2, r3, lsl r0
    6090:	0c410900 	mcrreq	9, 0, r0, r1, cr0	; <UNPREDICTABLE>
    6094:	0000007d 	andeq	r0, r0, sp, ror r0
    6098:	01821310 	orreq	r1, r2, r0, lsl r3
    609c:	44090000 	strmi	r0, [r9], #-0
    60a0:	00007d0c 	andeq	r7, r0, ip, lsl #26
    60a4:	50141400 	andspl	r1, r4, r0, lsl #8
    60a8:	09004c4c 	stmdbeq	r0, {r2, r3, r6, sl, fp, lr}
    60ac:	05061647 	streq	r1, [r6, #-1607]	; 0xfffff9b9
    60b0:	00180000 	andseq	r0, r8, r0
    60b4:	00011103 	andeq	r1, r1, r3, lsl #2
    60b8:	02480900 	subeq	r0, r8, #0, 18
    60bc:	00000512 	andeq	r0, r0, r2, lsl r5
    60c0:	4d091412 	cfstrsmi	mvf1, [r9, #-72]	; 0xffffffb8
    60c4:	0005ce09 	andeq	ip, r5, r9, lsl #28
    60c8:	083c1300 	ldmdaeq	ip!, {r8, r9, ip}
    60cc:	4f090000 	svcmi	0x00090000
    60d0:	00007d0c 	andeq	r7, r0, ip, lsl #26
    60d4:	d4130000 	ldrle	r0, [r3], #-0
    60d8:	09000008 	stmdbeq	r0, {r3}
    60dc:	007d0c52 	rsbseq	r0, sp, r2, asr ip
    60e0:	13040000 	movwne	r0, #16384	; 0x4000
    60e4:	00000405 	andeq	r0, r0, r5, lsl #8
    60e8:	7d0c5509 	cfstr32vc	mvfx5, [ip, #-36]	; 0xffffffdc
    60ec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    60f0:	00004d13 	andeq	r4, r0, r3, lsl sp
    60f4:	0c580900 	mrrceq	9, 0, r0, r8, cr0	; <UNPREDICTABLE>
    60f8:	0000007d 	andeq	r0, r0, sp, ror r0
    60fc:	0751130c 	ldrbeq	r1, [r1, -ip, lsl #6]
    6100:	5b090000 	blpl	246108 <_Min_Stack_Size+0x245d08>
    6104:	00007d0c 	andeq	r7, r0, ip, lsl #26
    6108:	03001000 	movweq	r1, #0
    610c:	00000275 	andeq	r0, r0, r5, ror r2
    6110:	83025e09 	movwhi	r5, #11785	; 0x2e09
    6114:	12000005 	andne	r0, r0, #5
    6118:	092f0a14 	stmdbeq	pc!, {r2, r4, r9, fp}	; <UNPREDICTABLE>
    611c:	00000625 	andeq	r0, r0, r5, lsr #12
    6120:	6e695014 	mcrvs	0, 3, r5, cr9, cr4, {0}
    6124:	0c310a00 			; <UNDEFINED> instruction: 0x0c310a00
    6128:	0000007d 	andeq	r0, r0, sp, ror r0
    612c:	0be71300 	bleq	ff9cad34 <__StackLimit+0xdf9aad34>
    6130:	340a0000 	strcc	r0, [sl], #-0
    6134:	00007d0c 	andeq	r7, r0, ip, lsl #26
    6138:	14130400 	ldrne	r0, [r3], #-1024	; 0xfffffc00
    613c:	0a00000f 	beq	6180 <_Min_Stack_Size+0x5d80>
    6140:	007d0c37 	rsbseq	r0, sp, r7, lsr ip
    6144:	13080000 	movwne	r0, #32768	; 0x8000
    6148:	00000f94 	muleq	r0, r4, pc	; <UNPREDICTABLE>
    614c:	7d0c3a0a 	vstrvc	s6, [ip, #-40]	; 0xffffffd8
    6150:	0c000000 	stceq	0, cr0, [r0], {-0}
    6154:	0010d213 	andseq	sp, r0, r3, lsl r2
    6158:	0c3d0a00 			; <UNDEFINED> instruction: 0x0c3d0a00
    615c:	0000007d 	andeq	r0, r0, sp, ror r0
    6160:	14030010 	strne	r0, [r3], #-16
    6164:	0a000012 	beq	61b4 <_Min_Stack_Size+0x5db4>
    6168:	05da023f 	ldrbeq	r0, [sl, #575]	; 0x23f
    616c:	070f0000 	streq	r0, [pc, -r0]
    6170:	00006301 	andeq	r6, r0, r1, lsl #6
    6174:	01330b00 	teqeq	r3, r0, lsl #22
    6178:	00000658 	andeq	r0, r0, r8, asr r6
    617c:	00084610 	andeq	r4, r8, r0, lsl r6
    6180:	3d106400 	cfldrscc	mvf6, [r0, #-0]
    6184:	0a000007 	beq	61a8 <_Min_Stack_Size+0x5da8>
    6188:	00035610 	andeq	r5, r3, r0, lsl r6
    618c:	4c100100 	ldfmis	f0, [r0], {-0}
    6190:	01000005 	tsteq	r0, r5
    6194:	00140300 	andseq	r0, r4, r0, lsl #6
    6198:	380b0000 	stmdacc	fp, {}	; <UNPREDICTABLE>
    619c:	00063103 	andeq	r3, r6, r3, lsl #2
    61a0:	02fe0a00 	rscseq	r0, lr, #0, 20
    61a4:	cd0b0000 	stcgt	0, cr0, [fp, #-0]
    61a8:	00008916 	andeq	r8, r0, r6, lsl r9
    61ac:	03c00a00 	biceq	r0, r0, #0, 20
    61b0:	ce0b0000 	cdpgt	0, 0, cr0, cr11, cr0, {0}
    61b4:	00007d11 	andeq	r7, r0, r1, lsl sp
    61b8:	02f30a00 	rscseq	r0, r3, #0, 20
    61bc:	cf0b0000 	svcgt	0x000b0000
    61c0:	0006581c 	andeq	r5, r6, ip, lsl r8
    61c4:	1d351500 	cfldr32ne	mvfx1, [r5, #-0]
    61c8:	4d010000 	stcmi	0, cr0, [r1, #-0]
    61cc:	00000d04 	andeq	r0, r0, r4, lsl #26
    61d0:	000c0000 	andeq	r0, ip, r0
    61d4:	9c010000 	stcls	0, cr0, [r1], {-0}
    61d8:	001de316 	andseq	lr, sp, r6, lsl r3
    61dc:	043c0100 	ldrteq	r0, [ip], #-256	; 0xffffff00
    61e0:	00000006 	andeq	r0, r0, r6
    61e4:	00002800 	andeq	r2, r0, r0, lsl #16
    61e8:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    61ec:	00001d90 	muleq	r0, r0, sp
    61f0:	06042201 	streq	r2, [r4], -r1, lsl #4
    61f4:	00000000 	andeq	r0, r0, r0
    61f8:	00000060 	andeq	r0, r0, r0, rrx
    61fc:	06e69c01 	strbteq	r9, [r6], r1, lsl #24
    6200:	0a180000 	beq	606208 <_Min_Stack_Size+0x605e08>
    6204:	01000006 	tsteq	r0, r6
    6208:	e6320422 	ldrt	r0, [r2], -r2, lsr #8
    620c:	02000006 	andeq	r0, r0, #6
    6210:	a7187491 			; <UNDEFINED> instruction: 0xa7187491
    6214:	0100001d 	tsteq	r0, sp, lsl r0
    6218:	ec4f0422 	cfstrd	mvd0, [pc], {34}	; 0x22
    621c:	02000006 	andeq	r0, r0, #6
    6220:	19007091 	stmdbne	r0, {r0, r4, r7, ip, sp, lr}
    6224:	0005ce04 	andeq	ip, r5, r4, lsl #28
    6228:	7d041900 	vstrvc.16	s2, [r4, #-0]	; <UNPREDICTABLE>
    622c:	17000000 	strne	r0, [r0, -r0]
    6230:	00001dce 	andeq	r1, r0, lr, asr #27
    6234:	0d03d301 	stceq	3, cr13, [r3, #-4]
    6238:	00000000 	andeq	r0, r0, r0
    623c:	00000128 	andeq	r0, r0, r8, lsr #2
    6240:	071a9c01 	ldreq	r9, [sl, -r1, lsl #24]
    6244:	4d180000 	ldcmi	0, cr0, [r8, #-0]
    6248:	01000002 	tsteq	r0, r2
    624c:	1a3703d3 	bne	dc71a0 <_Min_Stack_Size+0xdc6da0>
    6250:	02000007 	andeq	r0, r0, #7
    6254:	19007491 	stmdbne	r0, {r0, r4, r7, sl, ip, sp, lr}
    6258:	00057704 	andeq	r7, r5, r4, lsl #14
    625c:	1d151a00 	vldrne	s2, [r5, #-0]
    6260:	c6010000 	strgt	r0, [r1], -r0
    6264:	007d0a03 	rsbseq	r0, sp, r3, lsl #20
    6268:	15240000 	strne	r0, [r4, #-0]!
    626c:	00280800 	eoreq	r0, r8, r0, lsl #16
    6270:	9c010000 	stcls	0, cr0, [r1], {-0}
    6274:	001c2b1a 	andseq	r2, ip, sl, lsl fp
    6278:	03ba0100 			; <UNDEFINED> instruction: 0x03ba0100
    627c:	00007d0a 	andeq	r7, r0, sl, lsl #26
    6280:	0014fc00 	andseq	pc, r4, r0, lsl #24
    6284:	00002808 	andeq	r2, r0, r8, lsl #16
    6288:	1b9c0100 	blne	fe706690 <__StackLimit+0xde6e6690>
    628c:	00001c8c 	andeq	r1, r0, ip, lsl #25
    6290:	0a03af01 	beq	f1e9c <_Min_Stack_Size+0xf1a9c>
    6294:	0000007d 	andeq	r0, r0, sp, ror r0
    6298:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
    629c:	00000014 	andeq	r0, r0, r4, lsl r0
    62a0:	5b1c9c01 	blpl	72d2ac <_Min_Stack_Size+0x72ceac>
    62a4:	0100001d 	tsteq	r0, sp, lsl r0
    62a8:	7d110377 	ldcvc	3, cr0, [r1, #-476]	; 0xfffffe24
    62ac:	00000000 	andeq	r0, r0, r0
    62b0:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    62b4:	01000001 	tsteq	r0, r1
    62b8:	0007c19c 	muleq	r7, ip, r1
    62bc:	13bc1d00 			; <UNDEFINED> instruction: 0x13bc1d00
    62c0:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    62c4:	007d0c03 	rsbseq	r0, sp, r3, lsl #24
    62c8:	91020000 	mrsls	r0, (UNDEF: 2)
    62cc:	13f71d54 	mvnsne	r1, #84, 26	; 0x1500
    62d0:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    62d4:	007d1703 	rsbseq	r1, sp, r3, lsl #14
    62d8:	91020000 	mrsls	r0, (UNDEF: 2)
    62dc:	13c11d5c 	bicne	r1, r1, #92, 26	; 0x1700
    62e0:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    62e4:	007d2403 	rsbseq	r2, sp, r3, lsl #8
    62e8:	91020000 	mrsls	r0, (UNDEF: 2)
    62ec:	1c7f1d50 	ldclne	13, cr1, [pc], #-320	; 61b4 <_Min_Stack_Size+0x5db4>
    62f0:	7a010000 	bvc	462f8 <_Min_Stack_Size+0x45ef8>
    62f4:	007d0c03 	rsbseq	r0, sp, r3, lsl #24
    62f8:	91020000 	mrsls	r0, (UNDEF: 2)
    62fc:	a0150058 	andsge	r0, r5, r8, asr r0
    6300:	0100001c 	tsteq	r0, ip, lsl r0
    6304:	00060354 	andeq	r0, r6, r4, asr r3
    6308:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    630c:	01000000 	mrseq	r0, (UNDEF: 0)
    6310:	1c6d159c 	cfstr64ne	mvdx1, [sp], #-624	; 0xfffffd90
    6314:	4b010000 	blmi	4631c <_Min_Stack_Size+0x45f1c>
    6318:	00000603 	andeq	r0, r0, r3, lsl #12
    631c:	00180000 	andseq	r0, r8, r0
    6320:	9c010000 	stcls	0, cr0, [r1], {-0}
    6324:	001d031e 	andseq	r0, sp, lr, lsl r3
    6328:	03090100 	movweq	r0, #37120	; 0x9100
    632c:	00000006 	andeq	r0, r0, r6
    6330:	0000d000 	andeq	sp, r0, r0
    6334:	779c0100 	ldrvc	r0, [ip, r0, lsl #2]
    6338:	18000008 	stmdane	r0, {r3}
    633c:	00001dc5 	andeq	r1, r0, r5, asr #27
    6340:	21030901 	tstcs	r3, r1, lsl #18
    6344:	0000007d 	andeq	r0, r0, sp, ror r0
    6348:	18549102 	ldmdane	r4, {r1, r8, ip, pc}^
    634c:	00001d82 	andeq	r1, r0, r2, lsl #27
    6350:	34030901 	strcc	r0, [r3], #-2305	; 0xfffff6ff
    6354:	0000007d 	andeq	r0, r0, sp, ror r0
    6358:	18509102 	ldmdane	r0, {r1, r8, ip, pc}^
    635c:	00001c62 	andeq	r1, r0, r2, ror #24
    6360:	4c030901 			; <UNDEFINED> instruction: 0x4c030901
    6364:	0000007d 	andeq	r0, r0, sp, ror r0
    6368:	1d4c9102 	stfnep	f1, [ip, #-8]
    636c:	00000d85 	andeq	r0, r0, r5, lsl #27
    6370:	14030b01 	strne	r0, [r3], #-2817	; 0xfffff4ff
    6374:	00000625 	andeq	r0, r0, r5, lsr #12
    6378:	1f649102 	svcne	0x00649102
    637c:	00000000 	andeq	r0, r0, r0
    6380:	0000001c 	andeq	r0, r0, ip, lsl r0
    6384:	0000085c 	andeq	r0, r0, ip, asr r8
    6388:	0001621d 	andeq	r6, r1, sp, lsl r2
    638c:	03150100 	tsteq	r5, #0, 2
    6390:	00008905 	andeq	r8, r0, r5, lsl #18
    6394:	60910200 	addsvs	r0, r1, r0, lsl #4
    6398:	00002000 	andeq	r2, r0, r0
    639c:	001c0000 	andseq	r0, ip, r0
    63a0:	621d0000 	andsvs	r0, sp, #0
    63a4:	01000001 	tsteq	r0, r1
    63a8:	8905032d 	stmdbhi	r5, {r0, r2, r3, r5, r8, r9}
    63ac:	02000000 	andeq	r0, r0, #0
    63b0:	00005c91 	muleq	r0, r1, ip
    63b4:	001db11c 	andseq	fp, sp, ip, lsl r1
    63b8:	02510100 	subseq	r0, r1, #0, 2
    63bc:	0004a213 	andeq	sl, r4, r3, lsl r2
    63c0:	00000000 	andeq	r0, r0, r0
    63c4:	0001cc00 	andeq	ip, r1, r0, lsl #24
    63c8:	c39c0100 	orrsgt	r0, ip, #0, 2
    63cc:	18000008 	stmdane	r0, {r3}
    63d0:	0000060a 	andeq	r0, r0, sl, lsl #12
    63d4:	3c025101 	stfccs	f5, [r2], {1}
    63d8:	000006e6 	andeq	r0, r0, r6, ror #13
    63dc:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
    63e0:	00001da8 	andeq	r1, r0, r8, lsr #27
    63e4:	58025101 	stmdapl	r2, {r0, r8, ip, lr}
    63e8:	0000007d 	andeq	r0, r0, sp, ror r0
    63ec:	1d689102 	stfnep	f1, [r8, #-8]!
    63f0:	000015fc 	strdeq	r1, [r0], -ip
    63f4:	0c025301 	stceq	3, cr5, [r2], {1}
    63f8:	0000007d 	andeq	r0, r0, sp, ror r0
    63fc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6400:	001d4921 	andseq	r4, sp, r1, lsr #18
    6404:	1add0100 	bne	ff74680c <__StackLimit+0xdf72680c>
    6408:	000004a2 	andeq	r0, r0, r2, lsr #9
    640c:	00000000 	andeq	r0, r0, r0
    6410:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6414:	093f9c01 	ldmdbeq	pc!, {r0, sl, fp, ip, pc}	; <UNPREDICTABLE>
    6418:	4d220000 	stcmi	0, cr0, [r2, #-0]
    641c:	01000002 	tsteq	r0, r2
    6420:	071a41dd 			; <UNDEFINED> instruction: 0x071a41dd
    6424:	91020000 	mrsls	r0, (UNDEF: 2)
    6428:	15fc2364 	ldrbne	r2, [ip, #868]!	; 0x364
    642c:	df010000 	svcle	0x00010000
    6430:	00007d0c 	andeq	r7, r0, ip, lsl #26
    6434:	70910200 	addsvc	r0, r1, r0, lsl #4
    6438:	001d2a23 	andseq	r2, sp, r3, lsr #20
    643c:	17df0100 	ldrbne	r0, [pc, r0, lsl #2]
    6440:	0000007d 	andeq	r0, r0, sp, ror r0
    6444:	206c9102 	rsbcs	r9, ip, r2, lsl #2
    6448:	00000000 	andeq	r0, r0, r0
    644c:	00000140 	andeq	r0, r0, r0, asr #2
    6450:	001c541d 	andseq	r5, ip, sp, lsl r4
    6454:	01890100 	orreq	r0, r9, r0, lsl #2
    6458:	00044d16 	andeq	r4, r4, r6, lsl sp
    645c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    6460:	00000020 	andeq	r0, r0, r0, lsr #32
    6464:	00001c00 	andeq	r1, r0, r0, lsl #24
    6468:	01621d00 	cmneq	r2, r0, lsl #26
    646c:	92010000 	andls	r0, r1, #0
    6470:	00890701 	addeq	r0, r9, r1, lsl #14
    6474:	91020000 	mrsls	r0, (UNDEF: 2)
    6478:	00000068 	andeq	r0, r0, r8, rrx
    647c:	001d7324 	andseq	r7, sp, r4, lsr #6
    6480:	1aca0100 	bne	ff286888 <__StackLimit+0xdf266888>
    6484:	000004a2 	andeq	r0, r0, r2, lsr #9
    6488:	00000000 	andeq	r0, r0, r0
    648c:	0000000e 	andeq	r0, r0, lr
    6490:	c5009c01 	strgt	r9, [r0, #-3073]	; 0xfffff3ff
    6494:	04000009 	streq	r0, [r0], #-9
    6498:	0012b000 	andseq	fp, r2, r0
    649c:	47010400 	strmi	r0, [r1, -r0, lsl #8]
    64a0:	0c000004 	stceq	0, cr0, [r0], {4}
    64a4:	00001e18 	andeq	r1, r0, r8, lsl lr
    64a8:	000001be 			; <UNDEFINED> instruction: 0x000001be
    64ac:	00000310 	andeq	r0, r0, r0, lsl r3
    64b0:	00000000 	andeq	r0, r0, r0
    64b4:	0000210d 	andeq	r2, r0, sp, lsl #2
    64b8:	a9060102 	stmdbge	r6, {r1, r8}
    64bc:	02000007 	andeq	r0, r0, #7
    64c0:	00000502 	andeq	r0, r0, r2, lsl #10
    64c4:	12030000 	andne	r0, r3, #0
    64c8:	0200002c 	andeq	r0, r0, #44	; 0x2c
    64cc:	00441828 	subeq	r1, r4, r8, lsr #16
    64d0:	33040000 	movwcc	r0, #16384	; 0x4000
    64d4:	02000000 	andeq	r0, r0, #0
    64d8:	01b50504 			; <UNDEFINED> instruction: 0x01b50504
    64dc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    64e0:	0001b005 	andeq	fp, r1, r5
    64e4:	2aca0300 	bcs	ff2870ec <__StackLimit+0xdf2670ec>
    64e8:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
    64ec:	00006318 	andeq	r6, r0, r8, lsl r3
    64f0:	00520500 	subseq	r0, r2, r0, lsl #10
    64f4:	01020000 	mrseq	r0, (UNDEF: 2)
    64f8:	0007a708 	andeq	sl, r7, r8, lsl #14
    64fc:	07020200 	streq	r0, [r2, -r0, lsl #4]
    6500:	00000377 	andeq	r0, r0, r7, ror r3
    6504:	002b6e03 	eoreq	r6, fp, r3, lsl #28
    6508:	19340200 	ldmdbne	r4!, {r9}
    650c:	00000082 	andeq	r0, r0, r2, lsl #1
    6510:	00007104 	andeq	r7, r0, r4, lsl #2
    6514:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6518:	000000a5 	andeq	r0, r0, r5, lsr #1
    651c:	a0070802 	andge	r0, r7, r2, lsl #16
    6520:	06000000 	streq	r0, [r0], -r0
    6524:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    6528:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    652c:	0000aa07 	andeq	sl, r0, r7, lsl #20
    6530:	00d40700 	sbcseq	r0, r4, r0, lsl #14
    6534:	04030000 	streq	r0, [r3], #-0
    6538:	003f1908 	eorseq	r1, pc, r8, lsl #18
    653c:	93080000 	movwls	r0, #32768	; 0x8000
    6540:	04000005 	streq	r0, [r0], #-5
    6544:	0071114a 	rsbseq	r1, r1, sl, asr #2
    6548:	5e090000 	cdppl	0, 0, cr0, cr9, cr0, {0}
    654c:	c7000000 	strgt	r0, [r0, -r0]
    6550:	0a000000 	beq	6558 <_Min_Stack_Size+0x6158>
    6554:	00000097 	muleq	r0, r7, r0
    6558:	b705000f 	strlt	r0, [r5, -pc]
    655c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6560:	00000760 	andeq	r0, r0, r0, ror #14
    6564:	c7174c04 	ldrgt	r4, [r7, -r4, lsl #24]
    6568:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    656c:	0000005e 	andeq	r0, r0, lr, asr r0
    6570:	000000e8 	andeq	r0, r0, r8, ror #1
    6574:	0000970a 	andeq	r9, r0, sl, lsl #14
    6578:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    657c:	000000d8 	ldrdeq	r0, [r0], -r8
    6580:	0002b208 	andeq	fp, r2, r8, lsl #4
    6584:	174d0400 	strbne	r0, [sp, -r0, lsl #8]
    6588:	000000e8 	andeq	r0, r0, r8, ror #1
    658c:	4505180b 	strmi	r1, [r5, #-2059]	; 0xfffff7f5
    6590:	01570901 	cmpeq	r7, r1, lsl #18
    6594:	430c0000 	movwmi	r0, #49152	; 0xc000
    6598:	47050052 	smlsdmi	r5, r2, r0, r0
    659c:	007d1101 	rsbseq	r1, sp, r1, lsl #2
    65a0:	0d000000 	stceq	0, cr0, [r0, #-0]
    65a4:	00000c2a 	andeq	r0, r0, sl, lsr #24
    65a8:	11014805 	tstne	r1, r5, lsl #16
    65ac:	0000007d 	andeq	r0, r0, sp, ror r0
    65b0:	41500c04 	cmpmi	r0, r4, lsl #24
    65b4:	49050052 	stmdbmi	r5, {r1, r4, r6}
    65b8:	007d1101 	rsbseq	r1, sp, r1, lsl #2
    65bc:	0d080000 	stceq	0, cr0, [r8, #-0]
    65c0:	00000937 	andeq	r0, r0, r7, lsr r9
    65c4:	11014a05 	tstne	r1, r5, lsl #20
    65c8:	0000007d 	andeq	r0, r0, sp, ror r0
    65cc:	0c580d0c 	mrrceq	13, 0, r0, r8, cr12
    65d0:	4b050000 	blmi	1465d8 <_Min_Stack_Size+0x1461d8>
    65d4:	007d1101 	rsbseq	r1, sp, r1, lsl #2
    65d8:	0c100000 	ldceq	0, cr0, [r0], {-0}
    65dc:	00524346 	subseq	r4, r2, r6, asr #6
    65e0:	11014c05 	tstne	r1, r5, lsl #24
    65e4:	0000007d 	andeq	r0, r0, sp, ror r0
    65e8:	2f0e0014 	svccs	0x000e0014
    65ec:	0500000c 	streq	r0, [r0, #-12]
    65f0:	f903014d 			; <UNDEFINED> instruction: 0xf903014d
    65f4:	0f000000 	svceq	0x00000000
    65f8:	00630107 	rsbeq	r0, r3, r7, lsl #2
    65fc:	ba060000 	blt	186604 <_Min_Stack_Size+0x186204>
    6600:	00017f01 	andeq	r7, r1, r1, lsl #30
    6604:	09761000 	ldmdbeq	r6!, {ip}^
    6608:	11000000 	mrsne	r0, (UNDEF: 0)
    660c:	00544553 	subseq	r4, r4, r3, asr r5
    6610:	08020001 	stmdaeq	r2, {r0}
    6614:	00071904 	andeq	r1, r7, r4, lsl #18
    6618:	01070f00 	tsteq	r7, r0, lsl #30
    661c:	00000063 	andeq	r0, r0, r3, rrx
    6620:	ad012807 	stcge	8, cr2, [r1, #-28]	; 0xffffffe4
    6624:	10000001 	andne	r0, r0, r1
    6628:	00000369 	andeq	r0, r0, r9, ror #6
    662c:	06f11000 	ldrbteq	r1, [r1], r0
    6630:	10010000 	andne	r0, r1, r0
    6634:	0000005c 	andeq	r0, r0, ip, asr r0
    6638:	02c91002 	sbceq	r1, r9, #2
    663c:	00030000 	andeq	r0, r3, r0
    6640:	00158203 	andseq	r8, r5, r3, lsl #4
    6644:	032d0700 			; <UNDEFINED> instruction: 0x032d0700
    6648:	00000186 	andeq	r0, r0, r6, lsl #3
    664c:	6301070f 	movwvs	r0, #5903	; 0x170f
    6650:	07000000 	streq	r0, [r0, -r0]
    6654:	01d40133 	bicseq	r0, r4, r3, lsr r1
    6658:	e5100000 	ldr	r0, [r0, #-0]
    665c:	0000000c 	andeq	r0, r0, ip
    6660:	000b2110 	andeq	r2, fp, r0, lsl r1
    6664:	03000100 	movweq	r0, #256	; 0x100
    6668:	000009e5 	andeq	r0, r0, r5, ror #19
    666c:	b9033607 	stmdblt	r3, {r0, r1, r2, r9, sl, ip, sp}
    6670:	12000001 	andne	r0, r0, #1
    6674:	09310830 	ldmdbeq	r1!, {r4, r5, fp}
    6678:	00000286 	andeq	r0, r0, r6, lsl #5
    667c:	000b9113 	andeq	r9, fp, r3, lsl r1
    6680:	0c330800 	ldceq	8, cr0, [r3], #-0
    6684:	00000071 	andeq	r0, r0, r1, ror r0
    6688:	0a5c1300 	beq	170b290 <_Min_Stack_Size+0x170ae90>
    668c:	36080000 	strcc	r0, [r8], -r0
    6690:	0000710c 	andeq	r7, r0, ip, lsl #2
    6694:	15130400 	ldrne	r0, [r3, #-1024]	; 0xfffffc00
    6698:	0800000a 	stmdaeq	r0, {r1, r3}
    669c:	00710c3a 	rsbseq	r0, r1, sl, lsr ip
    66a0:	13080000 	movwne	r0, #32768	; 0x8000
    66a4:	00000c1c 	andeq	r0, r0, ip, lsl ip
    66a8:	710c3d08 	tstvc	ip, r8, lsl #26
    66ac:	0c000000 	stceq	0, cr0, [r0], {-0}
    66b0:	000c5d13 	andeq	r5, ip, r3, lsl sp
    66b4:	0c400800 	mcrreq	8, 0, r0, r0, cr0
    66b8:	00000071 	andeq	r0, r0, r1, ror r0
    66bc:	0abf1310 	beq	fefcb304 <__StackLimit+0xdefab304>
    66c0:	43080000 	movwmi	r0, #32768	; 0x8000
    66c4:	0000710c 	andeq	r7, r0, ip, lsl #2
    66c8:	e7131400 	ldr	r1, [r3, -r0, lsl #8]
    66cc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    66d0:	00710c46 	rsbseq	r0, r1, r6, asr #24
    66d4:	13180000 	tstne	r8, #0
    66d8:	000017fd 	strdeq	r1, [r0], -sp
    66dc:	710c4b08 	tstvc	ip, r8, lsl #22
    66e0:	1c000000 	stcne	0, cr0, [r0], {-0}
    66e4:	000be313 	andeq	lr, fp, r3, lsl r3
    66e8:	0c4e0800 	mcrreq	8, 0, r0, lr, cr0
    66ec:	00000071 	andeq	r0, r0, r1, ror r0
    66f0:	0bf71320 	bleq	ffdcb378 <__StackLimit+0xdfdab378>
    66f4:	53080000 	movwpl	r0, #32768	; 0x8000
    66f8:	0000710c 	andeq	r7, r0, ip, lsl #2
    66fc:	5f132400 	svcpl	0x00132400
    6700:	08000009 	stmdaeq	r0, {r0, r3}
    6704:	00710c56 	rsbseq	r0, r1, r6, asr ip
    6708:	13280000 			; <UNDEFINED> instruction: 0x13280000
    670c:	00000d2b 	andeq	r0, r0, fp, lsr #26
    6710:	710c5c08 	tstvc	ip, r8, lsl #24
    6714:	2c000000 	stccs	0, cr0, [r0], {-0}
    6718:	093c0300 	ldmdbeq	ip!, {r8, r9}
    671c:	61080000 	mrsvs	r0, (UNDEF: 8)
    6720:	0001e002 	andeq	lr, r1, r2
    6724:	01070f00 	tsteq	r7, r0, lsl #30
    6728:	00000063 	andeq	r0, r0, r3, rrx
    672c:	c5016808 	strgt	r6, [r1, #-2056]	; 0xfffff7f8
    6730:	10000002 	andne	r0, r0, r2
    6734:	00000968 	andeq	r0, r0, r8, ror #18
    6738:	0ade1000 	beq	ff78a740 <__StackLimit+0xdf76a740>
    673c:	10010000 	andne	r0, r1, r0
    6740:	0000094c 	andeq	r0, r0, ip, asr #18
    6744:	0c421002 	mcrreq	0, 0, r1, r2, cr2
    6748:	10030000 	andne	r0, r3, r0
    674c:	00000a1f 	andeq	r0, r0, pc, lsl sl
    6750:	0aa11004 	beq	fe84a768 <__StackLimit+0xde82a768>
    6754:	00050000 	andeq	r0, r5, r0
    6758:	000ba503 	andeq	sl, fp, r3, lsl #10
    675c:	026f0800 	rsbeq	r0, pc, #0, 16
    6760:	00000292 	muleq	r0, r2, r2
    6764:	0002c504 	andeq	ip, r2, r4, lsl #10
    6768:	01070f00 	tsteq	r7, r0, lsl #30
    676c:	00000063 	andeq	r0, r0, r3, rrx
    6770:	f1017508 			; <UNDEFINED> instruction: 0xf1017508
    6774:	10000002 	andne	r0, r0, r2
    6778:	0000201b 	andeq	r2, r0, fp, lsl r0
    677c:	1f241000 	svcne	0x00241000
    6780:	00010000 	andeq	r0, r1, r0
    6784:	001f3a03 	andseq	r3, pc, r3, lsl #20
    6788:	02780800 	rsbseq	r0, r8, #0, 16
    678c:	000002d6 	ldrdeq	r0, [r0], -r6
    6790:	6301070f 	movwvs	r0, #5903	; 0x170f
    6794:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6798:	0336017e 	teqeq	r6, #-2147483617	; 0x8000001f
    679c:	8c100000 	ldchi	0, cr0, [r0], {-0}
    67a0:	0000001f 	andeq	r0, r0, pc, lsl r0
    67a4:	001f0810 	andseq	r0, pc, r0, lsl r8	; <UNPREDICTABLE>
    67a8:	86100100 	ldrhi	r0, [r0], -r0, lsl #2
    67ac:	0200001e 	andeq	r0, r0, #30
    67b0:	0020a010 	eoreq	sl, r0, r0, lsl r0
    67b4:	db100300 	blle	4073bc <_Min_Stack_Size+0x406fbc>
    67b8:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
    67bc:	0020be10 	eoreq	fp, r0, r0, lsl lr
    67c0:	c0100500 	andsgt	r0, r0, r0, lsl #10
    67c4:	0600001e 			; <UNDEFINED> instruction: 0x0600001e
    67c8:	1f570300 	svcne	0x00570300
    67cc:	86080000 	strhi	r0, [r8], -r0
    67d0:	0002fd02 	andeq	pc, r2, r2, lsl #26
    67d4:	0bcf1400 	bleq	ff3cb7dc <__StackLimit+0xdf3ab7dc>
    67d8:	08600000 	stmdaeq	r0!, {}^	; <UNPREDICTABLE>
    67dc:	0406108b 	streq	r1, [r6], #-139	; 0xffffff75
    67e0:	5f130000 	svcpl	0x00130000
    67e4:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    67e8:	04061f8d 	streq	r1, [r6], #-3981	; 0xfffff073
    67ec:	13000000 	movwne	r0, #0
    67f0:	00001f87 	andeq	r1, r0, r7, lsl #31
    67f4:	861e8f08 	ldrhi	r8, [lr], -r8, lsl #30
    67f8:	04000002 	streq	r0, [r0], #-2
    67fc:	000a5713 	andeq	r5, sl, r3, lsl r7
    6800:	1e910800 	cdpne	8, 9, cr0, cr1, cr0, {0}
    6804:	000001d4 	ldrdeq	r0, [r0], -r4
    6808:	02dd1334 	sbcseq	r1, sp, #52, 6	; 0xd0000000
    680c:	93080000 	movwls	r0, #32768	; 0x8000
    6810:	0002d11e 	andeq	sp, r2, lr, lsl r1
    6814:	6d133500 	cfldr32vs	mvfx3, [r3, #-0]
    6818:	0800000a 	stmdaeq	r0, {r1, r3}
    681c:	040c1f95 	streq	r1, [ip], #-3989	; 0xfffff06b
    6820:	13380000 	teqne	r8, #0
    6824:	00000d1a 	andeq	r0, r0, sl, lsl sp
    6828:	1f219708 	svcne	0x00219708
    682c:	3c000004 	stccc	0, cr0, [r0], {4}
    6830:	0009f513 	andeq	pc, r9, r3, lsl r5	; <UNPREDICTABLE>
    6834:	21990800 	orrscs	r0, r9, r0, lsl #16
    6838:	0000041f 	andeq	r0, r0, pc, lsl r4
    683c:	09891340 	stmibeq	r9, {r6, r8, r9, ip}
    6840:	9b080000 	blls	206848 <_Min_Stack_Size+0x206448>
    6844:	00041f21 	andeq	r1, r4, r1, lsr #30
    6848:	7a134400 	bvc	4d7850 <_Min_Stack_Size+0x4d7450>
    684c:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    6850:	041f219d 	ldreq	r2, [pc], #-413	; 6858 <_Min_Stack_Size+0x6458>
    6854:	13480000 	movtne	r0, #32768	; 0x8000
    6858:	00000b68 	andeq	r0, r0, r8, ror #22
    685c:	1f219f08 	svcne	0x00219f08
    6860:	4c000004 	stcmi	0, cr0, [r0], {4}
    6864:	000d0813 	andeq	r0, sp, r3, lsl r8
    6868:	21a10800 			; <UNDEFINED> instruction: 0x21a10800
    686c:	0000041f 	andeq	r0, r0, pc, lsl r4
    6870:	0ab51350 	beq	fed4b5b8 <__StackLimit+0xded2b5b8>
    6874:	a3080000 	movwge	r0, #32768	; 0x8000
    6878:	00007d1e 	andeq	r7, r0, lr, lsl sp
    687c:	45135400 	ldrmi	r5, [r3, #-1024]	; 0xfffffc00
    6880:	0800000a 	stmdaeq	r0, {r1, r3}
    6884:	00711ea5 	rsbseq	r1, r1, r5, lsr #29
    6888:	13580000 	cmpne	r8, #0
    688c:	00000a7f 	andeq	r0, r0, pc, ror sl
    6890:	711ea708 	tstvc	lr, r8, lsl #14
    6894:	5c000000 	stcpl	0, cr0, [r0], {-0}
    6898:	57041500 	strpl	r1, [r4, -r0, lsl #10]
    689c:	16000001 	strne	r0, [r0], -r1
    68a0:	04191704 	ldreq	r1, [r9], #-1796	; 0xfffff8fc
    68a4:	19180000 	ldmdbne	r8, {}	; <UNPREDICTABLE>
    68a8:	00000004 	andeq	r0, r0, r4
    68ac:	03420415 	movteq	r0, #9237	; 0x2415
    68b0:	04150000 	ldreq	r0, [r5], #-0
    68b4:	0000040e 	andeq	r0, r0, lr, lsl #8
    68b8:	000bd103 	andeq	sp, fp, r3, lsl #2
    68bc:	02a90800 	adceq	r0, r9, #0, 16
    68c0:	00000342 	andeq	r0, r0, r2, asr #6
    68c4:	04250415 	strteq	r0, [r5], #-1045	; 0xfffffbeb
    68c8:	070f0000 	streq	r0, [pc, -r0]
    68cc:	00006301 	andeq	r6, r0, r1, lsl #6
    68d0:	01330900 	teqeq	r3, r0, lsl #18
    68d4:	0000045e 	andeq	r0, r0, lr, asr r4
    68d8:	00084610 	andeq	r4, r8, r0, lsl r6
    68dc:	3d106400 	cfldrscc	mvf6, [r0, #-0]
    68e0:	0a000007 	beq	6904 <_Min_Stack_Size+0x6504>
    68e4:	00035610 	andeq	r5, r3, r0, lsl r6
    68e8:	4c100100 	ldfmis	f0, [r0], {-0}
    68ec:	01000005 	tsteq	r0, r5
    68f0:	00140300 	andseq	r0, r4, r0, lsl #6
    68f4:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    68f8:	00043703 	andeq	r3, r4, r3, lsl #14
    68fc:	02fe0800 	rscseq	r0, lr, #0, 16
    6900:	cd090000 	stcgt	0, cr0, [r9, #-0]
    6904:	00007d16 	andeq	r7, r0, r6, lsl sp
    6908:	03c00800 	biceq	r0, r0, #0, 16
    690c:	ce090000 	cdpgt	0, 0, cr0, cr9, cr0, {0}
    6910:	00007111 	andeq	r7, r0, r1, lsl r1
    6914:	02f30800 	rscseq	r0, r3, #0, 16
    6918:	cf090000 	svcgt	0x00090000
    691c:	00045e1c 	andeq	r5, r4, ip, lsl lr
    6920:	010c1200 	mrseq	r1, R12_fiq
    6924:	04bf0970 	ldrteq	r0, [pc], #2416	; 692c <_Min_Stack_Size+0x652c>
    6928:	49190000 	ldmdbmi	r9, {}	; <UNPREDICTABLE>
    692c:	01005253 	tsteq	r0, r3, asr r2
    6930:	007d1172 	rsbseq	r1, sp, r2, ror r1
    6934:	13000000 	movwne	r0, #0
    6938:	00001ee2 	andeq	r1, r0, r2, ror #29
    693c:	7d117301 	ldcvc	3, cr7, [r1, #-4]
    6940:	04000000 	streq	r0, [r0], #-0
    6944:	00209b13 	eoreq	r9, r0, r3, lsl fp
    6948:	11740100 	cmnne	r4, r0, lsl #2
    694c:	0000007d 	andeq	r0, r0, sp, ror r0
    6950:	05030008 	streq	r0, [r3, #-8]
    6954:	01000021 	tsteq	r0, r1, lsr #32
    6958:	048e0375 	streq	r0, [lr], #885	; 0x375
    695c:	731a0000 	tstvc	sl, #0
    6960:	0100001e 	tsteq	r0, lr, lsl r0
    6964:	ad1a04bc 	cfldrsge	mvf0, [sl, #-752]	; 0xfffffd10
    6968:	10000001 	andne	r0, r0, r1
    696c:	f4080017 	vst4.8	{d0-d3}, [r8 :64], r7
    6970:	01000000 	mrseq	r0, (UNDEF: 0)
    6974:	0005179c 	muleq	r5, ip, r7
    6978:	21181b00 	tstcs	r8, r0, lsl #22
    697c:	bc010000 	stclt	0, cr0, [r1], {-0}
    6980:	04314004 	ldrteq	r4, [r1], #-4
    6984:	91020000 	mrsls	r0, (UNDEF: 2)
    6988:	21bb1c6c 			; <UNDEFINED> instruction: 0x21bb1c6c
    698c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    6990:	01ad1504 			; <UNDEFINED> instruction: 0x01ad1504
    6994:	91020000 	mrsls	r0, (UNDEF: 2)
    6998:	6d741d77 	ldclvs	13, cr1, [r4, #-476]!	; 0xfffffe24
    699c:	bf010070 	svclt	0x00010070
    69a0:	00710c04 	rsbseq	r0, r1, r4, lsl #24
    69a4:	91020000 	mrsls	r0, (UNDEF: 2)
    69a8:	f41a0070 			; <UNDEFINED> instruction: 0xf41a0070
    69ac:	0100001f 	tsteq	r0, pc, lsl r0
    69b0:	711104a0 	tstvc	r1, r0, lsr #9
    69b4:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    69b8:	68080016 	stmdavs	r8, {r1, r2, r4}
    69bc:	01000000 	mrseq	r0, (UNDEF: 0)
    69c0:	0005669c 	muleq	r5, ip, r6
    69c4:	21181b00 	tstcs	r8, r0, lsl #22
    69c8:	a0010000 	andge	r0, r1, r0
    69cc:	04313c04 	ldrteq	r3, [r1], #-3076	; 0xfffff3fc
    69d0:	91020000 	mrsls	r0, (UNDEF: 2)
    69d4:	20581c6c 	subscs	r1, r8, ip, ror #24
    69d8:	a2010000 	andge	r0, r1, #0
    69dc:	00710c04 	rsbseq	r0, r1, r4, lsl #24
    69e0:	91020000 	mrsls	r0, (UNDEF: 2)
    69e4:	20f21c74 	rscscs	r1, r2, r4, ror ip
    69e8:	a5010000 	strge	r0, [r1, #-0]
    69ec:	00e81804 	rsceq	r1, r8, r4, lsl #16
    69f0:	03050000 	movweq	r0, #20480	; 0x5000
    69f4:	08003f1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, fp, ip, sp}
    69f8:	206d1e00 	rsbcs	r1, sp, r0, lsl #28
    69fc:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
    6a00:	00000d04 	andeq	r0, r0, r4, lsl #26
    6a04:	005a0000 	subseq	r0, sl, r0
    6a08:	9c010000 	stcls	0, cr0, [r1], {-0}
    6a0c:	000005be 			; <UNDEFINED> instruction: 0x000005be
    6a10:	0021181b 	eoreq	r1, r1, fp, lsl r8
    6a14:	047e0100 	ldrbteq	r0, [lr], #-256	; 0xffffff00
    6a18:	0004312e 	andeq	r3, r4, lr, lsr #2
    6a1c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6a20:	001e0d1b 	andseq	r0, lr, fp, lsl sp
    6a24:	047e0100 	ldrbteq	r0, [lr], #-256	; 0xffffff00
    6a28:	0000713d 	andeq	r7, r0, sp, lsr r1
    6a2c:	70910200 	addsvc	r0, r1, r0, lsl #4
    6a30:	001efd1b 	andseq	pc, lr, fp, lsl sp	; <UNPREDICTABLE>
    6a34:	047e0100 	ldrbteq	r0, [lr], #-256	; 0xffffff00
    6a38:	00007152 	andeq	r7, r0, r2, asr r1
    6a3c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    6a40:	001e681b 	andseq	r6, lr, fp, lsl r8
    6a44:	047e0100 	ldrbteq	r0, [lr], #-256	; 0xffffff00
    6a48:	00007167 	andeq	r7, r0, r7, ror #2
    6a4c:	68910200 	ldmvs	r1, {r9}
    6a50:	207b1f00 	rsbscs	r1, fp, r0, lsl #30
    6a54:	64010000 	strvs	r0, [r1], #-0
    6a58:	00710a04 	rsbseq	r0, r1, r4, lsl #20
    6a5c:	00000000 	andeq	r0, r0, r0
    6a60:	00160000 	andseq	r0, r6, r0
    6a64:	9c010000 	stcls	0, cr0, [r1], {-0}
    6a68:	000005ea 	andeq	r0, r0, sl, ror #11
    6a6c:	0021181b 	eoreq	r1, r1, fp, lsl r8
    6a70:	04640100 	strbteq	r0, [r4], #-256	; 0xffffff00
    6a74:	0004312e 	andeq	r3, r4, lr, lsr #2
    6a78:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6a7c:	1eaf1f00 	cdpne	15, 10, cr1, cr15, cr0, {0}
    6a80:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    6a84:	02c51604 	sbceq	r1, r5, #4, 12	; 0x400000
    6a88:	00000000 	andeq	r0, r0, r0
    6a8c:	001a0000 	andseq	r0, sl, r0
    6a90:	9c010000 	stcls	0, cr0, [r1], {-0}
    6a94:	00000616 	andeq	r0, r0, r6, lsl r6
    6a98:	0021181b 	eoreq	r1, r1, fp, lsl r8
    6a9c:	04590100 	ldrbeq	r0, [r9], #-256	; 0xffffff00
    6aa0:	0004313a 	andeq	r3, r4, sl, lsr r1
    6aa4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6aa8:	20d71f00 	sbcscs	r1, r7, r0, lsl #30
    6aac:	04010000 	streq	r0, [r1], #-0
    6ab0:	01ad1304 			; <UNDEFINED> instruction: 0x01ad1304
    6ab4:	00000000 	andeq	r0, r0, r0
    6ab8:	00d20000 	sbcseq	r0, r2, r0
    6abc:	9c010000 	stcls	0, cr0, [r1], {-0}
    6ac0:	00000662 	andeq	r0, r0, r2, ror #12
    6ac4:	0021181b 	eoreq	r1, r1, fp, lsl r8
    6ac8:	04040100 	streq	r0, [r4], #-256	; 0xffffff00
    6acc:	00043141 	andeq	r3, r4, r1, asr #2
    6ad0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    6ad4:	001ed71b 	andseq	sp, lr, fp, lsl r7
    6ad8:	04040100 	streq	r0, [r4], #-256	; 0xffffff00
    6adc:	00033661 	andeq	r3, r3, r1, ror #12
    6ae0:	6b910200 	blvs	fe4472e8 <__StackLimit+0xde4272e8>
    6ae4:	0021bb1c 	eoreq	fp, r1, ip, lsl fp
    6ae8:	04060100 	streq	r0, [r6], #-256	; 0xffffff00
    6aec:	0001ad15 	andeq	sl, r1, r5, lsl sp
    6af0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    6af4:	20311f00 	eorscs	r1, r1, r0, lsl #30
    6af8:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    6afc:	01ad1303 			; <UNDEFINED> instruction: 0x01ad1303
    6b00:	00000000 	andeq	r0, r0, r0
    6b04:	00a40000 	adceq	r0, r4, r0
    6b08:	9c010000 	stcls	0, cr0, [r1], {-0}
    6b0c:	000006be 			; <UNDEFINED> instruction: 0x000006be
    6b10:	0021181b 	eoreq	r1, r1, fp, lsl r8
    6b14:	03c80100 	biceq	r0, r8, #0, 2
    6b18:	0004313f 	andeq	r3, r4, pc, lsr r1
    6b1c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    6b20:	001ed71b 	andseq	sp, lr, fp, lsl r7
    6b24:	03c80100 	biceq	r0, r8, #0, 2
    6b28:	0003365f 	andeq	r3, r3, pc, asr r6
    6b2c:	6b910200 	blvs	fe447334 <__StackLimit+0xde427334>
    6b30:	00208c1b 	eoreq	r8, r0, fp, lsl ip
    6b34:	03c80100 	biceq	r0, r8, #0, 2
    6b38:	0006c973 	andeq	ip, r6, r3, ror r9
    6b3c:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    6b40:	0021bb1c 	eoreq	fp, r1, ip, lsl fp
    6b44:	03cb0100 	biceq	r0, fp, #0, 2
    6b48:	0001ad15 	andeq	sl, r1, r5, lsl sp
    6b4c:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    6b50:	06c91700 	strbeq	r1, [r9], r0, lsl #14
    6b54:	31180000 	tstcc	r8, r0
    6b58:	00000004 	andeq	r0, r0, r4
    6b5c:	06be0415 	ssateq	r0, #31, r5, lsl #8
    6b60:	fa200000 	blx	806b68 <_Min_Stack_Size+0x806768>
    6b64:	0100001d 	tsteq	r0, sp, lsl r0
    6b68:	000602eb 	andeq	r0, r6, fp, ror #5
    6b6c:	12000000 	andne	r0, r0, #0
    6b70:	01000003 	tsteq	r0, r3
    6b74:	0007379c 	muleq	r7, ip, r7
    6b78:	21181b00 	tstcs	r8, r0, lsl #22
    6b7c:	eb010000 	bl	46b84 <_Min_Stack_Size+0x46784>
    6b80:	04312c02 	ldrteq	r2, [r1], #-3074	; 0xfffff3fe
    6b84:	91020000 	mrsls	r0, (UNDEF: 2)
    6b88:	20661c64 	rsbcs	r1, r6, r4, ror #24
    6b8c:	ed010000 	stc	0, cr0, [r1, #-0]
    6b90:	00710c02 	rsbseq	r0, r1, r2, lsl #24
    6b94:	91020000 	mrsls	r0, (UNDEF: 2)
    6b98:	06e51c6c 	strbteq	r1, [r5], ip, ror #24
    6b9c:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    6ba0:	007d1102 	rsbseq	r1, sp, r2, lsl #2
    6ba4:	91020000 	mrsls	r0, (UNDEF: 2)
    6ba8:	211d1c68 	tstcs	sp, r8, ror #24
    6bac:	ef010000 	svc	0x00010000
    6bb0:	00710c02 	rsbseq	r0, r1, r2, lsl #24
    6bb4:	91020000 	mrsls	r0, (UNDEF: 2)
    6bb8:	20961c74 	addscs	r1, r6, r4, ror ip
    6bbc:	f2010000 	vhadd.s8	d0, d1, d0
    6bc0:	07371702 	ldreq	r1, [r7, -r2, lsl #14]!
    6bc4:	91020000 	mrsls	r0, (UNDEF: 2)
    6bc8:	04150070 	ldreq	r0, [r5], #-112	; 0xffffff90
    6bcc:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    6bd0:	001fb521 	andseq	fp, pc, r1, lsr #10
    6bd4:	02630100 	rsbeq	r0, r3, #0, 2
    6bd8:	0001ad13 	andeq	sl, r1, r3, lsl sp
    6bdc:	00000000 	andeq	r0, r0, r0
    6be0:	0001be00 	andeq	fp, r1, r0, lsl #28
    6be4:	d99c0100 	ldmible	ip, {r8}
    6be8:	1b000007 	blne	6c0c <_Min_Stack_Size+0x680c>
    6bec:	00002118 	andeq	r2, r0, r8, lsl r1
    6bf0:	3e026301 	cdpcc	3, 0, cr6, cr2, cr1, {0}
    6bf4:	00000431 	andeq	r0, r0, r1, lsr r4
    6bf8:	1b5c9102 	blne	172b008 <_Min_Stack_Size+0x172ac08>
    6bfc:	0000204a 	andeq	r2, r0, sl, asr #32
    6c00:	61026301 	tstvs	r2, r1, lsl #6
    6c04:	000002f1 	strdeq	r0, [r0], -r1
    6c08:	1b5b9102 	blne	16eb018 <_Min_Stack_Size+0x16eac18>
    6c0c:	00002629 	andeq	r2, r0, r9, lsr #12
    6c10:	79026301 	stmdbvc	r2, {r0, r8, r9, sp, lr}
    6c14:	00000071 	andeq	r0, r0, r1, ror r0
    6c18:	1c549102 	ldfnep	f1, [r4], {2}
    6c1c:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    6c20:	15026501 	strne	r6, [r2, #-1281]	; 0xfffffaff
    6c24:	000001ad 	andeq	r0, r0, sp, lsr #3
    6c28:	1c6f9102 	stfnep	f1, [pc], #-8	; 6c28 <_Min_Stack_Size+0x6828>
    6c2c:	0000200c 	andeq	r2, r0, ip
    6c30:	0c026601 	stceq	6, cr6, [r2], {1}
    6c34:	00000071 	andeq	r0, r0, r1, ror r0
    6c38:	1c749102 	ldfnep	f1, [r4], #-8
    6c3c:	000015fc 	strdeq	r1, [r0], -ip
    6c40:	0c026701 	stceq	7, cr6, [r2], {1}
    6c44:	00000071 	andeq	r0, r0, r1, ror r0
    6c48:	1c689102 	stfnep	f1, [r8], #-8
    6c4c:	00002066 	andeq	r2, r0, r6, rrx
    6c50:	0c026801 	stceq	8, cr6, [r2], {1}
    6c54:	00000071 	andeq	r0, r0, r1, ror r0
    6c58:	1c709102 	ldfnep	f1, [r0], #-8
    6c5c:	00002096 	muleq	r0, r6, r0
    6c60:	17026b01 	strne	r6, [r2, -r1, lsl #22]
    6c64:	00000737 	andeq	r0, r0, r7, lsr r7
    6c68:	00649102 	rsbeq	r9, r4, r2, lsl #2
    6c6c:	001fa41f 	andseq	sl, pc, pc, lsl r4	; <UNPREDICTABLE>
    6c70:	02450100 	subeq	r0, r5, #0, 2
    6c74:	0001ad13 	andeq	sl, r1, r3, lsl sp
    6c78:	00000000 	andeq	r0, r0, r0
    6c7c:	00004200 	andeq	r4, r0, r0, lsl #4
    6c80:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
    6c84:	1b000008 	blne	6cac <_Min_Stack_Size+0x68ac>
    6c88:	00002118 	andeq	r2, r0, r8, lsl r1
    6c8c:	37024501 	strcc	r4, [r2, -r1, lsl #10]
    6c90:	00000431 	andeq	r0, r0, r1, lsr r4
    6c94:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6c98:	001fcd21 	andseq	ip, pc, r1, lsr #26
    6c9c:	02020100 	andeq	r0, r2, #0, 2
    6ca0:	0001ad13 	andeq	sl, r1, r3, lsl sp
    6ca4:	00000000 	andeq	r0, r0, r0
    6ca8:	0000e000 	andeq	lr, r0, r0
    6cac:	519c0100 	orrspl	r0, ip, r0, lsl #2
    6cb0:	1b000008 	blne	6cd8 <_Min_Stack_Size+0x68d8>
    6cb4:	00002118 	andeq	r2, r0, r8, lsl r1
    6cb8:	34020201 	strcc	r0, [r2], #-513	; 0xfffffdff
    6cbc:	00000431 	andeq	r0, r0, r1, lsr r4
    6cc0:	1c6c9102 	stfnep	f1, [ip], #-8
    6cc4:	00002096 	muleq	r0, r6, r0
    6cc8:	17020501 	strne	r0, [r2, -r1, lsl #10]
    6ccc:	00000737 	andeq	r0, r0, r7, lsr r7
    6cd0:	1c749102 	ldfnep	f1, [r4], #-8
    6cd4:	000015fc 	strdeq	r1, [r0], -ip
    6cd8:	0c020701 	stceq	7, cr0, [r2], {1}
    6cdc:	00000071 	andeq	r0, r0, r1, ror r0
    6ce0:	00709102 	rsbseq	r9, r0, r2, lsl #2
    6ce4:	001eec21 	andseq	lr, lr, r1, lsr #24
    6ce8:	01c40100 	biceq	r0, r4, r0, lsl #2
    6cec:	0001ad13 	andeq	sl, r1, r3, lsl sp
    6cf0:	00000000 	andeq	r0, r0, r0
    6cf4:	0000b000 	andeq	fp, r0, r0
    6cf8:	cd9c0100 	ldfgts	f0, [ip]
    6cfc:	1b000008 	blne	6d24 <_Min_Stack_Size+0x6924>
    6d00:	00002118 	andeq	r2, r0, r8, lsl r1
    6d04:	3701c401 	strcc	ip, [r1, -r1, lsl #8]
    6d08:	00000431 	andeq	r0, r0, r1, lsr r4
    6d0c:	1b6c9102 	blne	1b2b11c <_Min_Stack_Size+0x1b2ad1c>
    6d10:	00001e0d 	andeq	r1, r0, sp, lsl #28
    6d14:	4601c401 	strmi	ip, [r1], -r1, lsl #8
    6d18:	00000071 	andeq	r0, r0, r1, ror r0
    6d1c:	1b689102 	blne	1a2b12c <_Min_Stack_Size+0x1a2ad2c>
    6d20:	00001efd 	strdeq	r1, [r0], -sp
    6d24:	5b01c401 	blpl	77d30 <_Min_Stack_Size+0x77930>
    6d28:	00000071 	andeq	r0, r0, r1, ror r0
    6d2c:	1b649102 	blne	192b13c <_Min_Stack_Size+0x192ad3c>
    6d30:	00001e68 	andeq	r1, r0, r8, ror #28
    6d34:	7001c401 	andvc	ip, r1, r1, lsl #8
    6d38:	00000071 	andeq	r0, r0, r1, ror r0
    6d3c:	1c609102 	stfnep	f1, [r0], #-8
    6d40:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    6d44:	1501c601 	strne	ip, [r1, #-1537]	; 0xfffff9ff
    6d48:	000001ad 	andeq	r0, r0, sp, lsr #3
    6d4c:	1c779102 	ldfnep	f1, [r7], #-8
    6d50:	00002096 	muleq	r0, r6, r0
    6d54:	1701c901 	strne	ip, [r1, -r1, lsl #18]
    6d58:	00000737 	andeq	r0, r0, r7, lsr r7
    6d5c:	00709102 	rsbseq	r9, r0, r2, lsl #2
    6d60:	001f7121 	andseq	r7, pc, r1, lsr #2
    6d64:	01980100 	orrseq	r0, r8, r0, lsl #2
    6d68:	0001ad13 	andeq	sl, r1, r3, lsl sp
    6d6c:	00000000 	andeq	r0, r0, r0
    6d70:	00007600 	andeq	r7, r0, r0, lsl #12
    6d74:	399c0100 	ldmibcc	ip, {r8}
    6d78:	1b000009 	blne	6da4 <_Min_Stack_Size+0x69a4>
    6d7c:	00002118 	andeq	r2, r0, r8, lsl r1
    6d80:	34019801 	strcc	r9, [r1], #-2049	; 0xfffff7ff
    6d84:	00000431 	andeq	r0, r0, r1, lsr r4
    6d88:	1b6c9102 	blne	1b2b198 <_Min_Stack_Size+0x1b2ad98>
    6d8c:	00001e0d 	andeq	r1, r0, sp, lsl #28
    6d90:	43019801 	movwmi	r9, #6145	; 0x1801
    6d94:	00000071 	andeq	r0, r0, r1, ror r0
    6d98:	1b689102 	blne	1a2b1a8 <_Min_Stack_Size+0x1a2ada8>
    6d9c:	00001efd 	strdeq	r1, [r0], -sp
    6da0:	58019801 	stmdapl	r1, {r0, fp, ip, pc}
    6da4:	00000071 	andeq	r0, r0, r1, ror r0
    6da8:	1b649102 	blne	192b1b8 <_Min_Stack_Size+0x192adb8>
    6dac:	00001e68 	andeq	r1, r0, r8, ror #28
    6db0:	6d019801 	stcvs	8, cr9, [r1, #-4]
    6db4:	00000071 	andeq	r0, r0, r1, ror r0
    6db8:	1c609102 	stfnep	f1, [r0], #-8
    6dbc:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    6dc0:	15019a01 	strne	r9, [r1, #-2561]	; 0xfffff5ff
    6dc4:	000001ad 	andeq	r0, r0, sp, lsr #3
    6dc8:	00779102 	rsbseq	r9, r7, r2, lsl #2
    6dcc:	001ea021 	andseq	sl, lr, r1, lsr #32
    6dd0:	01360100 	teqeq	r6, r0, lsl #2
    6dd4:	0001ad13 	andeq	sl, r1, r3, lsl sp
    6dd8:	00000000 	andeq	r0, r0, r0
    6ddc:	0000bc00 	andeq	fp, r0, r0, lsl #24
    6de0:	759c0100 	ldrvc	r0, [ip, #256]	; 0x100
    6de4:	1b000009 	blne	6e10 <_Min_Stack_Size+0x6a10>
    6de8:	00002118 	andeq	r2, r0, r8, lsl r1
    6dec:	35013601 	strcc	r3, [r1, #-1537]	; 0xfffff9ff
    6df0:	00000431 	andeq	r0, r0, r1, lsr r4
    6df4:	1c6c9102 	stfnep	f1, [ip], #-8
    6df8:	00002096 	muleq	r0, r6, r0
    6dfc:	17013801 	strne	r3, [r1, -r1, lsl #16]
    6e00:	00000737 	andeq	r0, r0, r7, lsr r7
    6e04:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6e08:	001f7f22 	andseq	r7, pc, r2, lsr #30
    6e0c:	13ab0100 			; <UNDEFINED> instruction: 0x13ab0100
    6e10:	000001ad 	andeq	r0, r0, sp, lsr #3
    6e14:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    6e18:	0000015c 	andeq	r0, r0, ip, asr r1
    6e1c:	18239c01 	stmdane	r3!, {r0, sl, fp, ip, pc}
    6e20:	01000021 	tsteq	r0, r1, lsr #32
    6e24:	043133ab 	ldrteq	r3, [r1], #-939	; 0xfffffc55
    6e28:	91020000 	mrsls	r0, (UNDEF: 2)
    6e2c:	6d742464 	cfldrdvs	mvd2, [r4, #-400]!	; 0xfffffe70
    6e30:	ad010070 	stcge	0, cr0, [r1, #-448]	; 0xfffffe40
    6e34:	0000710c 	andeq	r7, r0, ip, lsl #2
    6e38:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6e3c:	0015fc25 	andseq	pc, r5, r5, lsr #24
    6e40:	0cae0100 	stfeqs	f0, [lr]
    6e44:	00000071 	andeq	r0, r0, r1, ror r0
    6e48:	25709102 	ldrbcs	r9, [r0, #-258]!	; 0xfffffefe
    6e4c:	00002096 	muleq	r0, r6, r0
    6e50:	3717af01 	ldrcc	sl, [r7, -r1, lsl #30]
    6e54:	02000007 	andeq	r0, r0, #7
    6e58:	00006c91 	muleq	r0, r1, ip
    6e5c:	00000806 	andeq	r0, r0, r6, lsl #16
    6e60:	15060004 	strne	r0, [r6, #-4]
    6e64:	01040000 	mrseq	r0, (UNDEF: 4)
    6e68:	00000447 	andeq	r0, r0, r7, asr #8
    6e6c:	0021c20c 	eoreq	ip, r1, ip, lsl #4
    6e70:	0001be00 	andeq	fp, r1, r0, lsl #28
    6e74:	00039000 	andeq	r9, r3, r0
    6e78:	00000000 	andeq	r0, r0, r0
    6e7c:	002b2800 	eoreq	r2, fp, r0, lsl #16
    6e80:	06010200 	streq	r0, [r1], -r0, lsl #4
    6e84:	000007a9 	andeq	r0, r0, r9, lsr #15
    6e88:	00050202 	andeq	r0, r5, r2, lsl #4
    6e8c:	03000000 	movweq	r0, #0
    6e90:	00002c12 	andeq	r2, r0, r2, lsl ip
    6e94:	44182802 	ldrmi	r2, [r8], #-2050	; 0xfffff7fe
    6e98:	04000000 	streq	r0, [r0], #-0
    6e9c:	00000033 	andeq	r0, r0, r3, lsr r0
    6ea0:	b5050402 	strlt	r0, [r5, #-1026]	; 0xfffffbfe
    6ea4:	02000001 	andeq	r0, r0, #1
    6ea8:	01b00508 	lslseq	r0, r8, #10
    6eac:	ca030000 	bgt	c6eb4 <_Min_Stack_Size+0xc6ab4>
    6eb0:	0200002a 	andeq	r0, r0, #42	; 0x2a
    6eb4:	0063182e 	rsbeq	r1, r3, lr, lsr #16
    6eb8:	52050000 	andpl	r0, r5, #0
    6ebc:	02000000 	andeq	r0, r0, #0
    6ec0:	07a70801 	streq	r0, [r7, r1, lsl #16]!
    6ec4:	33030000 	movwcc	r0, #12288	; 0x3000
    6ec8:	0200000a 	andeq	r0, r0, #10
    6ecc:	00761931 	rsbseq	r1, r6, r1, lsr r9
    6ed0:	02020000 	andeq	r0, r2, #0
    6ed4:	00037707 	andeq	r7, r3, r7, lsl #14
    6ed8:	2b6e0300 	blcs	1b87ae0 <_Min_Stack_Size+0x1b876e0>
    6edc:	34020000 	strcc	r0, [r2], #-0
    6ee0:	00008e19 	andeq	r8, r0, r9, lsl lr
    6ee4:	007d0400 	rsbseq	r0, sp, r0, lsl #8
    6ee8:	04020000 	streq	r0, [r2], #-0
    6eec:	0000a507 	andeq	sl, r0, r7, lsl #10
    6ef0:	07080200 	streq	r0, [r8, -r0, lsl #4]
    6ef4:	000000a0 	andeq	r0, r0, r0, lsr #1
    6ef8:	69050406 	stmdbvs	r5, {r1, r2, sl}
    6efc:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    6f00:	00aa0704 	adceq	r0, sl, r4, lsl #14
    6f04:	7d070000 	stcvc	0, cr0, [r7, #-0]
    6f08:	ba000000 	blt	6f10 <_Min_Stack_Size+0x6b10>
    6f0c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    6f10:	000000a3 	andeq	r0, r0, r3, lsr #1
    6f14:	d4090001 	strle	r0, [r9], #-1
    6f18:	03000000 	movweq	r0, #0
    6f1c:	3f190804 	svccc	0x00190804
    6f20:	0a000000 	beq	6f28 <_Min_Stack_Size+0x6b28>
    6f24:	00000593 	muleq	r0, r3, r5
    6f28:	7d114a04 	vldrvc	s8, [r1, #-16]
    6f2c:	07000000 	streq	r0, [r0, -r0]
    6f30:	0000005e 	andeq	r0, r0, lr, asr r0
    6f34:	000000e3 	andeq	r0, r0, r3, ror #1
    6f38:	0000a308 	andeq	sl, r0, r8, lsl #6
    6f3c:	05000f00 	streq	r0, [r0, #-3840]	; 0xfffff100
    6f40:	000000d3 	ldrdeq	r0, [r0], -r3
    6f44:	0007600a 	andeq	r6, r7, sl
    6f48:	174c0400 	strbne	r0, [ip, -r0, lsl #8]
    6f4c:	000000e3 	andeq	r0, r0, r3, ror #1
    6f50:	00005e07 	andeq	r5, r0, r7, lsl #28
    6f54:	00010400 	andeq	r0, r1, r0, lsl #8
    6f58:	00a30800 	adceq	r0, r3, r0, lsl #16
    6f5c:	00070000 	andeq	r0, r7, r0
    6f60:	0000f405 	andeq	pc, r0, r5, lsl #8
    6f64:	02b20a00 	adcseq	r0, r2, #0, 20
    6f68:	4d040000 	stcmi	0, cr0, [r4, #-0]
    6f6c:	00010417 	andeq	r0, r1, r7, lsl r4
    6f70:	05180b00 	ldreq	r0, [r8, #-2816]	; 0xfffff500
    6f74:	7309015b 	movwvc	r0, #37211	; 0x915b
    6f78:	0c000001 	stceq	0, cr0, [r0], {1}
    6f7c:	00524d49 	subseq	r4, r2, r9, asr #26
    6f80:	11015d05 	tstne	r1, r5, lsl #26
    6f84:	00000089 	andeq	r0, r0, r9, lsl #1
    6f88:	4d450c00 	stclmi	12, cr0, [r5, #-0]
    6f8c:	5e050052 	mcrpl	0, 0, r0, cr5, cr2, {2}
    6f90:	00891101 	addeq	r1, r9, r1, lsl #2
    6f94:	0d040000 	stceq	0, cr0, [r4, #-0]
    6f98:	0000226c 	andeq	r2, r0, ip, ror #4
    6f9c:	11015f05 	tstne	r1, r5, lsl #30
    6fa0:	00000089 	andeq	r0, r0, r9, lsl #1
    6fa4:	22250d08 	eorcs	r0, r5, #8, 26	; 0x200
    6fa8:	60050000 	andvs	r0, r5, r0
    6fac:	00891101 	addeq	r1, r9, r1, lsl #2
    6fb0:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    6fb4:	000022ab 	andeq	r2, r0, fp, lsr #5
    6fb8:	11016105 	tstne	r1, r5, lsl #2
    6fbc:	00000089 	andeq	r0, r0, r9, lsl #1
    6fc0:	52500c10 	subspl	r0, r0, #16, 24	; 0x1000
    6fc4:	01620500 	cmneq	r2, r0, lsl #10
    6fc8:	00008911 	andeq	r8, r0, r1, lsl r9
    6fcc:	0e001400 	cfcpyseq	mvf1, mvf0
    6fd0:	000021ab 	andeq	r2, r0, fp, lsr #3
    6fd4:	03016305 	movweq	r6, #4869	; 0x1305
    6fd8:	00000115 	andeq	r0, r0, r5, lsl r1
    6fdc:	af05280b 	svcge	0x0005280b
    6fe0:	02090901 	andeq	r0, r9, #16384	; 0x4000
    6fe4:	320d0000 	andcc	r0, sp, #0
    6fe8:	0500000f 	streq	r0, [r0, #-15]
    6fec:	891101b1 	ldmdbhi	r1, {r0, r4, r5, r7, r8}
    6ff0:	00000000 	andeq	r0, r0, r0
    6ff4:	0011450d 	andseq	r4, r1, sp, lsl #10
    6ff8:	01b20500 			; <UNDEFINED> instruction: 0x01b20500
    6ffc:	00008911 	andeq	r8, r0, r1, lsl r9
    7000:	9b0d0400 	blls	348008 <_Min_Stack_Size+0x347c08>
    7004:	05000010 	streq	r0, [r0, #-16]
    7008:	891101b3 	ldmdbhi	r1, {r0, r1, r4, r5, r7, r8}
    700c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7010:	000efc0d 	andeq	pc, lr, sp, lsl #24
    7014:	01b40500 			; <UNDEFINED> instruction: 0x01b40500
    7018:	00008911 	andeq	r8, r0, r1, lsl r9
    701c:	490c0c00 	stmdbmi	ip, {sl, fp}
    7020:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    7024:	891101b5 	ldmdbhi	r1, {r0, r2, r4, r5, r7, r8}
    7028:	10000000 	andne	r0, r0, r0
    702c:	52444f0c 	subpl	r4, r4, #12, 30	; 0x30
    7030:	01b60500 			; <UNDEFINED> instruction: 0x01b60500
    7034:	00008911 	andeq	r8, r0, r1, lsl r9
    7038:	370d1400 	strcc	r1, [sp, -r0, lsl #8]
    703c:	0500000d 	streq	r0, [r0, #-13]
    7040:	891101b7 	ldmdbhi	r1, {r0, r1, r2, r4, r5, r7, r8}
    7044:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    7048:	0010830d 	andseq	r8, r0, sp, lsl #6
    704c:	01b80500 			; <UNDEFINED> instruction: 0x01b80500
    7050:	00008911 	andeq	r8, r0, r1, lsl r9
    7054:	410c1c00 	tstmi	ip, r0, lsl #24
    7058:	05005246 	streq	r5, [r0, #-582]	; 0xfffffdba
    705c:	191101b9 	ldmdbne	r1, {r0, r3, r4, r5, r7, r8}
    7060:	20000002 	andcs	r0, r0, r2
    7064:	00890700 	addeq	r0, r9, r0, lsl #14
    7068:	02190000 	andseq	r0, r9, #0
    706c:	a3080000 	movwge	r0, #32768	; 0x8000
    7070:	01000000 	mrseq	r0, (UNDEF: 0)
    7074:	02090400 	andeq	r0, r9, #0, 8
    7078:	a40e0000 	strge	r0, [lr], #-0
    707c:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    7080:	800301ba 			; <UNDEFINED> instruction: 0x800301ba
    7084:	0b000001 	bleq	7090 <_Min_Stack_Size+0x6c90>
    7088:	01c00524 	biceq	r0, r0, r4, lsr #10
    708c:	00027c09 	andeq	r7, r2, r9, lsl #24
    7090:	217d0d00 	cmncs	sp, r0, lsl #26
    7094:	c2050000 	andgt	r0, r5, #0
    7098:	00891101 	addeq	r1, r9, r1, lsl #2
    709c:	0c000000 	stceq	0, cr0, [r0], {-0}
    70a0:	00434d50 	subeq	r4, r3, r0, asr sp
    70a4:	1101c305 	tstne	r1, r5, lsl #6
    70a8:	00000089 	andeq	r0, r0, r9, lsl #1
    70ac:	21840d04 	orrcs	r0, r4, r4, lsl #26
    70b0:	c4050000 	strgt	r0, [r5], #-0
    70b4:	028c1101 	addeq	r1, ip, #1073741824	; 0x40000000
    70b8:	0d080000 	stceq	0, cr0, [r8, #-0]
    70bc:	00002294 	muleq	r0, r4, r2
    70c0:	1101c505 	tstne	r1, r5, lsl #10
    70c4:	000000aa 	andeq	r0, r0, sl, lsr #1
    70c8:	22770d18 	rsbscs	r0, r7, #24, 26	; 0x600
    70cc:	c6050000 	strgt	r0, [r5], -r0
    70d0:	00891101 	addeq	r1, r9, r1, lsl #2
    70d4:	00200000 	eoreq	r0, r0, r0
    70d8:	00008907 	andeq	r8, r0, r7, lsl #18
    70dc:	00028c00 	andeq	r8, r2, r0, lsl #24
    70e0:	00a30800 	adceq	r0, r3, r0, lsl #16
    70e4:	00030000 	andeq	r0, r3, r0
    70e8:	00027c04 	andeq	r7, r2, r4, lsl #24
    70ec:	224d0e00 	subcs	r0, sp, #0, 28
    70f0:	c7050000 	strgt	r0, [r5, -r0]
    70f4:	022b0301 	eoreq	r0, fp, #67108864	; 0x4000000
    70f8:	880b0000 	stmdahi	fp, {}	; <UNPREDICTABLE>
    70fc:	0901f505 	stmdbeq	r1, {r0, r2, r8, sl, ip, sp, lr, pc}
    7100:	0000044c 	andeq	r0, r0, ip, asr #8
    7104:	0052430c 	subseq	r4, r2, ip, lsl #6
    7108:	1101f705 	tstne	r1, r5, lsl #14	; <UNPREDICTABLE>
    710c:	00000089 	andeq	r0, r0, r9, lsl #1
    7110:	02450d00 	subeq	r0, r5, #0, 26
    7114:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    7118:	00891101 	addeq	r1, r9, r1, lsl #2
    711c:	0d040000 	stceq	0, cr0, [r4, #-0]
    7120:	00000248 	andeq	r0, r0, r8, asr #4
    7124:	1101f905 	tstne	r1, r5, lsl #18	; <UNPREDICTABLE>
    7128:	00000089 	andeq	r0, r0, r9, lsl #1
    712c:	49430c08 	stmdbmi	r3, {r3, sl, fp}^
    7130:	fa050052 	blx	147280 <_Min_Stack_Size+0x146e80>
    7134:	00891101 	addeq	r1, r9, r1, lsl #2
    7138:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    713c:	00000124 	andeq	r0, r0, r4, lsr #2
    7140:	1101fb05 	tstne	r1, r5, lsl #22	; <UNPREDICTABLE>
    7144:	00000089 	andeq	r0, r0, r9, lsl #1
    7148:	07340d10 			; <UNDEFINED> instruction: 0x07340d10
    714c:	fc050000 	stc2	0, cr0, [r5], {-0}
    7150:	00891101 	addeq	r1, r9, r1, lsl #2
    7154:	0d140000 	ldceq	0, cr0, [r4, #-0]
    7158:	000003b7 			; <UNDEFINED> instruction: 0x000003b7
    715c:	1101fd05 	tstne	r1, r5, lsl #26	; <UNPREDICTABLE>
    7160:	00000089 	andeq	r0, r0, r9, lsl #1
    7164:	05ad0d18 	streq	r0, [sp, #3352]!	; 0xd18
    7168:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    716c:	007d1101 	rsbseq	r1, sp, r1, lsl #2
    7170:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    7174:	00000569 	andeq	r0, r0, r9, ror #10
    7178:	1101ff05 	tstne	r1, r5, lsl #30	; <UNPREDICTABLE>
    717c:	00000089 	andeq	r0, r0, r9, lsl #1
    7180:	01790d20 	cmneq	r9, r0, lsr #26
    7184:	00050000 	andeq	r0, r5, r0
    7188:	00891102 	addeq	r1, r9, r2, lsl #2
    718c:	0d240000 	stceq	0, cr0, [r4, #-0]
    7190:	000005b7 			; <UNDEFINED> instruction: 0x000005b7
    7194:	11020105 	tstne	r2, r5, lsl #2
    7198:	000000aa 	andeq	r0, r0, sl, lsr #1
    719c:	08840d28 	stmeq	r4, {r3, r5, r8, sl, fp}
    71a0:	02050000 	andeq	r0, r5, #0
    71a4:	00891102 	addeq	r1, r9, r2, lsl #2
    71a8:	0d300000 	ldceq	0, cr0, [r0, #-0]
    71ac:	0000079f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
    71b0:	11020305 	tstne	r2, r5, lsl #6
    71b4:	00000089 	andeq	r0, r0, r9, lsl #1
    71b8:	06a30d34 			; <UNDEFINED> instruction: 0x06a30d34
    71bc:	04050000 	streq	r0, [r5], #-0
    71c0:	00891102 	addeq	r1, r9, r2, lsl #2
    71c4:	0d380000 	ldceq	0, cr0, [r8, #-0]
    71c8:	000005c1 	andeq	r0, r0, r1, asr #11
    71cc:	11020505 	tstne	r2, r5, lsl #10
    71d0:	0000007d 	andeq	r0, r0, sp, ror r0
    71d4:	078e0d3c 			; <UNDEFINED> instruction: 0x078e0d3c
    71d8:	06050000 	streq	r0, [r5], -r0
    71dc:	00891102 	addeq	r1, r9, r2, lsl #2
    71e0:	0d400000 	stcleq	0, cr0, [r0, #-0]
    71e4:	00000693 	muleq	r0, r3, r6
    71e8:	11020705 	tstne	r2, r5, lsl #14
    71ec:	00000089 	andeq	r0, r0, r9, lsl #1
    71f0:	00380d44 	eorseq	r0, r8, r4, asr #26
    71f4:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    71f8:	00aa1102 	adceq	r1, sl, r2, lsl #2
    71fc:	0d480000 	stcleq	0, cr0, [r8, #-0]
    7200:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    7204:	11020905 	tstne	r2, r5, lsl #18
    7208:	00000089 	andeq	r0, r0, r9, lsl #1
    720c:	052e0d50 	streq	r0, [lr, #-3408]!	; 0xfffff2b0
    7210:	0a050000 	beq	147218 <_Min_Stack_Size+0x146e18>
    7214:	00891102 	addeq	r1, r9, r2, lsl #2
    7218:	0d540000 	ldcleq	0, cr0, [r4, #-0]
    721c:	00000659 	andeq	r0, r0, r9, asr r6
    7220:	11020b05 	tstne	r2, r5, lsl #22
    7224:	00000089 	andeq	r0, r0, r9, lsl #1
    7228:	05dd0d58 	ldrbeq	r0, [sp, #3416]	; 0xd58
    722c:	0c050000 	stceq	0, cr0, [r5], {-0}
    7230:	007d1102 	rsbseq	r1, sp, r2, lsl #2
    7234:	0d5c0000 	ldcleq	0, cr0, [ip, #-0]
    7238:	0000000a 	andeq	r0, r0, sl
    723c:	11020d05 	tstne	r2, r5, lsl #26
    7240:	00000089 	andeq	r0, r0, r9, lsl #1
    7244:	03e70d60 	mvneq	r0, #96, 26	; 0x1800
    7248:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    724c:	00891102 	addeq	r1, r9, r2, lsl #2
    7250:	0d640000 	stcleq	0, cr0, [r4, #-0]
    7254:	000006d9 	ldrdeq	r0, [r0], -r9
    7258:	11020f05 	tstne	r2, r5, lsl #30
    725c:	000000aa 	andeq	r0, r0, sl, lsr #1
    7260:	05e70d68 	strbeq	r0, [r7, #3432]!	; 0xd68
    7264:	10050000 	andne	r0, r5, r0
    7268:	00891102 	addeq	r1, r9, r2, lsl #2
    726c:	0c700000 	ldcleq	0, cr0, [r0], #-0
    7270:	00525343 	subseq	r5, r2, r3, asr #6
    7274:	11021105 	tstne	r2, r5, lsl #2
    7278:	00000089 	andeq	r0, r0, r9, lsl #1
    727c:	05ec0d74 	strbeq	r0, [ip, #3444]!	; 0xd74
    7280:	12050000 	andne	r0, r5, #0
    7284:	00aa1102 	adceq	r1, sl, r2, lsl #2
    7288:	0d780000 	ldcleq	0, cr0, [r8, #-0]
    728c:	000007de 	ldrdeq	r0, [r0], -lr
    7290:	11021305 	tstne	r2, r5, lsl #6
    7294:	00000089 	andeq	r0, r0, r9, lsl #1
    7298:	03930d80 	orrseq	r0, r3, #128, 26	; 0x2000
    729c:	14050000 	strne	r0, [r5], #-0
    72a0:	00891102 	addeq	r1, r9, r2, lsl #2
    72a4:	00840000 	addeq	r0, r4, r0
    72a8:	00034a0e 	andeq	r4, r3, lr, lsl #20
    72ac:	02150500 	andseq	r0, r5, #0, 10
    72b0:	00029e03 	andeq	r9, r2, r3, lsl #28
    72b4:	01070f00 	tsteq	r7, r0, lsl #30
    72b8:	00000063 	andeq	r0, r0, r3, rrx
    72bc:	7401ba06 	strvc	fp, [r1], #-2566	; 0xfffff5fa
    72c0:	10000004 	andne	r0, r0, r4
    72c4:	00000976 	andeq	r0, r0, r6, ror r9
    72c8:	45531100 	ldrbmi	r1, [r3, #-256]	; 0xffffff00
    72cc:	00010054 	andeq	r0, r1, r4, asr r0
    72d0:	19040802 	stmdbne	r4, {r1, fp}
    72d4:	0f000007 	svceq	0x00000007
    72d8:	00630107 	rsbeq	r0, r3, r7, lsl #2
    72dc:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    72e0:	0004a201 	andeq	sl, r4, r1, lsl #4
    72e4:	03691000 	cmneq	r9, #0
    72e8:	10000000 	andne	r0, r0, r0
    72ec:	000006f1 	strdeq	r0, [r0], -r1
    72f0:	005c1001 	subseq	r1, ip, r1
    72f4:	10020000 	andne	r0, r2, r0
    72f8:	000002c9 	andeq	r0, r0, r9, asr #5
    72fc:	82030003 	andhi	r0, r3, #3
    7300:	07000015 	smladeq	r0, r5, r0, r0
    7304:	047b032d 	ldrbteq	r0, [fp], #-813	; 0xfffffcd3
    7308:	14120000 	ldrne	r0, [r2], #-0
    730c:	f9092f08 			; <UNDEFINED> instruction: 0xf9092f08
    7310:	13000004 	movwne	r0, #4
    7314:	006e6950 	rsbeq	r6, lr, r0, asr r9
    7318:	7d0c3108 	stfvcs	f3, [ip, #-32]	; 0xffffffe0
    731c:	00000000 	andeq	r0, r0, r0
    7320:	000be714 	andeq	lr, fp, r4, lsl r7
    7324:	0c340800 	ldceq	8, cr0, [r4], #-0
    7328:	0000007d 	andeq	r0, r0, sp, ror r0
    732c:	0f141404 	svceq	0x00141404
    7330:	37080000 	strcc	r0, [r8, -r0]
    7334:	00007d0c 	andeq	r7, r0, ip, lsl #26
    7338:	94140800 	ldrls	r0, [r4], #-2048	; 0xfffff800
    733c:	0800000f 	stmdaeq	r0, {r0, r1, r2, r3}
    7340:	007d0c3a 	rsbseq	r0, sp, sl, lsr ip
    7344:	140c0000 	strne	r0, [ip], #-0
    7348:	000010d2 	ldrdeq	r1, [r0], -r2
    734c:	7d0c3d08 	stcvc	13, cr3, [ip, #-32]	; 0xffffffe0
    7350:	10000000 	andne	r0, r0, r0
    7354:	12140300 	andsne	r0, r4, #0, 6
    7358:	3f080000 	svccc	0x00080000
    735c:	0004ae02 	andeq	sl, r4, r2, lsl #28
    7360:	01070f00 	tsteq	r7, r0, lsl #30
    7364:	00000063 	andeq	r0, r0, r3, rrx
    7368:	20014508 	andcs	r4, r1, r8, lsl #10
    736c:	10000005 	andne	r0, r0, r5
    7370:	0000214d 	andeq	r2, r0, sp, asr #2
    7374:	219e1000 	orrscs	r1, lr, r0
    7378:	00010000 	andeq	r0, r1, r0
    737c:	00229d03 	eoreq	r9, r2, r3, lsl #26
    7380:	02480800 	subeq	r0, r8, #0, 16
    7384:	00000505 	andeq	r0, r0, r5, lsl #10
    7388:	6301070f 	movwvs	r0, #5903	; 0x170f
    738c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    7390:	05530133 	ldrbeq	r0, [r3, #-307]	; 0xfffffecd
    7394:	46100000 	ldrmi	r0, [r0], -r0
    7398:	64000008 	strvs	r0, [r0], #-8
    739c:	00073d10 	andeq	r3, r7, r0, lsl sp
    73a0:	56100a00 	ldrpl	r0, [r0], -r0, lsl #20
    73a4:	01000003 	tsteq	r0, r3
    73a8:	00054c10 	andeq	r4, r5, r0, lsl ip
    73ac:	03000100 	movweq	r0, #256	; 0x100
    73b0:	00000014 	andeq	r0, r0, r4, lsl r0
    73b4:	2c033809 	stccs	8, cr3, [r3], {9}
    73b8:	0a000005 	beq	73d4 <_Min_Stack_Size+0x6fd4>
    73bc:	000002fe 	strdeq	r0, [r0], -lr
    73c0:	8916cd09 	ldmdbhi	r6, {r0, r3, r8, sl, fp, lr, pc}
    73c4:	0a000000 	beq	73cc <_Min_Stack_Size+0x6fcc>
    73c8:	000003c0 	andeq	r0, r0, r0, asr #7
    73cc:	7d11ce09 	ldcvc	14, cr12, [r1, #-36]	; 0xffffffdc
    73d0:	0a000000 	beq	73d8 <_Min_Stack_Size+0x6fd8>
    73d4:	000002f3 	strdeq	r0, [r0], -r3
    73d8:	531ccf09 	tstpl	ip, #9, 30	; 0x24
    73dc:	15000005 	strne	r0, [r0, #-5]
    73e0:	0000227d 	andeq	r2, r0, sp, ror r2
    73e4:	0d01f901 	vstreq.16	s30, [r1, #-2]	; <UNPREDICTABLE>
    73e8:	00000000 	andeq	r0, r0, r0
    73ec:	00000014 	andeq	r0, r0, r4, lsl r0
    73f0:	05ab9c01 	streq	r9, [fp, #3073]!	; 0xc01
    73f4:	25160000 	ldrcs	r0, [r6, #-0]
    73f8:	01000021 	tsteq	r0, r1, lsr #32
    73fc:	6a2d01f9 	bvs	b47be8 <_Min_Stack_Size+0xb477e8>
    7400:	02000000 	andeq	r0, r0, #0
    7404:	17007691 			; <UNDEFINED> instruction: 0x17007691
    7408:	0000222a 	andeq	r2, r0, sl, lsr #4
    740c:	0601ea01 	streq	lr, [r1], -r1, lsl #20
    7410:	00000000 	andeq	r0, r0, r0
    7414:	00000030 	andeq	r0, r0, r0, lsr r0
    7418:	05d39c01 	ldrbeq	r9, [r3, #3073]	; 0xc01
    741c:	25160000 	ldrcs	r0, [r6, #-0]
    7420:	01000021 	tsteq	r0, r1, lsr #32
    7424:	6a2801ea 	bvs	a07bd4 <_Min_Stack_Size+0xa077d4>
    7428:	02000000 	andeq	r0, r0, #0
    742c:	18007691 	stmdane	r0, {r0, r4, r7, r9, sl, ip, sp, lr}
    7430:	0000215c 	andeq	r2, r0, ip, asr r1
    7434:	1301c801 	movwne	ip, #6145	; 0x1801
    7438:	000004a2 	andeq	r0, r0, r2, lsr #9
    743c:	00000000 	andeq	r0, r0, r0
    7440:	0000004e 	andeq	r0, r0, lr, asr #32
    7444:	061f9c01 	ldreq	r9, [pc], -r1, lsl #24
    7448:	71160000 	tstvc	r6, r0
    744c:	01000022 	tsteq	r0, r2, lsr #32
    7450:	1f3201c8 	svcne	0x003201c8
    7454:	02000006 	andeq	r0, r0, #6
    7458:	25166c91 	ldrcs	r6, [r6, #-3217]	; 0xfffff36f
    745c:	01000021 	tsteq	r0, r1, lsr #32
    7460:	6a4201c8 	bvs	1087b88 <_Min_Stack_Size+0x1087788>
    7464:	02000000 	andeq	r0, r0, #0
    7468:	74196a91 	ldrvc	r6, [r9], #-2705	; 0xfffff56f
    746c:	0100706d 	tsteq	r0, sp, rrx
    7470:	891101ca 	ldmdbhi	r1, {r1, r3, r6, r7, r8}
    7474:	02000000 	andeq	r0, r0, #0
    7478:	1a007491 	bne	246c4 <_Min_Stack_Size+0x242c4>
    747c:	00021e04 	andeq	r1, r2, r4, lsl #28
    7480:	218b1500 	orrcs	r1, fp, r0, lsl #10
    7484:	af010000 	svcge	0x00010000
    7488:	00000601 	andeq	r0, r0, r1, lsl #12
    748c:	00320000 	eorseq	r0, r2, r0
    7490:	9c010000 	stcls	0, cr0, [r1], {-0}
    7494:	0000066d 	andeq	r0, r0, sp, ror #12
    7498:	00227116 	eoreq	r7, r2, r6, lsl r1
    749c:	01af0100 			; <UNDEFINED> instruction: 0x01af0100
    74a0:	00061f27 	andeq	r1, r6, r7, lsr #30
    74a4:	6c910200 	lfmvs	f0, 4, [r1], {0}
    74a8:	00212516 	eoreq	r2, r1, r6, lsl r5
    74ac:	01af0100 			; <UNDEFINED> instruction: 0x01af0100
    74b0:	00006a37 	andeq	r6, r0, r7, lsr sl
    74b4:	6a910200 	bvs	fe447cbc <__StackLimit+0xde427cbc>
    74b8:	72646f19 	rsbvc	r6, r4, #25, 30	; 0x64
    74bc:	01b10100 			; <UNDEFINED> instruction: 0x01b10100
    74c0:	00007d0c 	andeq	r7, r0, ip, lsl #26
    74c4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    74c8:	22131500 	andscs	r1, r3, #0, 10
    74cc:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    74d0:	00000601 	andeq	r0, r0, r1, lsl #12
    74d4:	00300000 	eorseq	r0, r0, r0
    74d8:	9c010000 	stcls	0, cr0, [r1], {-0}
    74dc:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
    74e0:	00227116 	eoreq	r7, r2, r6, lsl r1
    74e4:	01980100 	orrseq	r0, r8, r0, lsl #2
    74e8:	00061f26 	andeq	r1, r6, r6, lsr #30
    74ec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    74f0:	00212516 	eoreq	r2, r1, r6, lsl r5
    74f4:	01980100 	orrseq	r0, r8, r0, lsl #2
    74f8:	00006a36 	andeq	r6, r0, r6, lsr sl
    74fc:	72910200 	addsvc	r0, r1, #0, 4
    7500:	0022a216 	eoreq	sl, r2, r6, lsl r2
    7504:	01980100 	orrseq	r0, r8, r0, lsl #2
    7508:	0005204e 	andeq	r2, r5, lr, asr #32
    750c:	71910200 	orrsvc	r0, r1, r0, lsl #4
    7510:	212e1800 			; <UNDEFINED> instruction: 0x212e1800
    7514:	75010000 	strvc	r0, [r1, #-0]
    7518:	05200f01 	streq	r0, [r0, #-3841]!	; 0xfffff0ff
    751c:	00000000 	andeq	r0, r0, r0
    7520:	002e0000 	eoreq	r0, lr, r0
    7524:	9c010000 	stcls	0, cr0, [r1], {-0}
    7528:	00000701 	andeq	r0, r0, r1, lsl #14
    752c:	00227116 	eoreq	r7, r2, r6, lsl r1
    7530:	01750100 	cmneq	r5, r0, lsl #2
    7534:	00061f2e 	andeq	r1, r6, lr, lsr #30
    7538:	6c910200 	lfmvs	f0, 4, [r1], {0}
    753c:	00212516 	eoreq	r2, r1, r6, lsl r5
    7540:	01750100 	cmneq	r5, r0, lsl #2
    7544:	00006a3e 	andeq	r6, r0, lr, lsr sl
    7548:	6a910200 	bvs	fe447d50 <__StackLimit+0xde427d50>
    754c:	0021b81b 	eoreq	fp, r1, fp, lsl r8
    7550:	01770100 	cmneq	r7, r0, lsl #2
    7554:	00052011 	andeq	r2, r5, r1, lsl r0
    7558:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    755c:	225c1500 	subscs	r1, ip, #0, 10
    7560:	24010000 	strcs	r0, [r1], #-0
    7564:	00000601 	andeq	r0, r0, r1, lsl #12
    7568:	01f40000 	mvnseq	r0, r0
    756c:	9c010000 	stcls	0, cr0, [r1], {-0}
    7570:	00000779 	andeq	r0, r0, r9, ror r7
    7574:	00227116 	eoreq	r7, r2, r6, lsl r1
    7578:	01240100 			; <UNDEFINED> instruction: 0x01240100
    757c:	00061f25 	andeq	r1, r6, r5, lsr #30
    7580:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    7584:	00212516 	eoreq	r2, r1, r6, lsl r5
    7588:	01240100 			; <UNDEFINED> instruction: 0x01240100
    758c:	00007d35 	andeq	r7, r0, r5, lsr sp
    7590:	60910200 	addsvs	r0, r1, r0, lsl #4
    7594:	0021741b 	eoreq	r7, r1, fp, lsl r4
    7598:	01260100 			; <UNDEFINED> instruction: 0x01260100
    759c:	00007d0c 	andeq	r7, r0, ip, lsl #26
    75a0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    75a4:	0021721b 	eoreq	r7, r1, fp, lsl r2
    75a8:	01270100 			; <UNDEFINED> instruction: 0x01270100
    75ac:	00007d0c 	andeq	r7, r0, ip, lsl #26
    75b0:	70910200 	addsvc	r0, r1, r0, lsl #4
    75b4:	0022431b 	eoreq	r4, r2, fp, lsl r3
    75b8:	01280100 			; <UNDEFINED> instruction: 0x01280100
    75bc:	00007d0c 	andeq	r7, r0, ip, lsl #26
    75c0:	6c910200 	lfmvs	f0, 4, [r1], {0}
    75c4:	706d7419 	rsbvc	r7, sp, r9, lsl r4
    75c8:	01290100 			; <UNDEFINED> instruction: 0x01290100
    75cc:	00007d0c 	andeq	r7, r0, ip, lsl #26
    75d0:	68910200 	ldmvs	r1, {r9}
    75d4:	213f1c00 	teqcs	pc, r0, lsl #24
    75d8:	a4010000 	strge	r0, [r1], #-0
    75dc:	00180406 	andseq	r0, r8, r6, lsl #8
    75e0:	00033408 	andeq	r3, r3, r8, lsl #8
    75e4:	039c0100 	orrseq	r0, ip, #0, 2
    75e8:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
    75ec:	00002271 	andeq	r2, r0, r1, ror r2
    75f0:	1f23a401 	svcne	0x0023a401
    75f4:	02000006 	andeq	r0, r0, #6
    75f8:	431d5c91 	tstmi	sp, #37120	; 0x9100
    75fc:	01000021 	tsteq	r0, r1, lsr #32
    7600:	08033ca4 	stmdaeq	r3, {r2, r5, r7, sl, fp, ip, sp}
    7604:	91020000 	mrsls	r0, (UNDEF: 2)
    7608:	21741e58 	cmncs	r4, r8, asr lr
    760c:	a6010000 	strge	r0, [r1], -r0
    7610:	00007d0c 	andeq	r7, r0, ip, lsl #26
    7614:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    7618:	0021721e 	eoreq	r7, r1, lr, lsl r2
    761c:	0ca70100 	stfeqs	f0, [r7]
    7620:	0000007d 	andeq	r0, r0, sp, ror r0
    7624:	1e6c9102 	lgnnee	f1, f2
    7628:	00002243 	andeq	r2, r0, r3, asr #4
    762c:	7d0ca801 	stcvc	8, cr10, [ip, #-4]
    7630:	02000000 	andeq	r0, r0, #0
    7634:	6d1e6891 	ldcvs	8, cr6, [lr, #-580]	; 0xfffffdbc
    7638:	01000021 	tsteq	r0, r1, lsr #32
    763c:	007d0ca9 	rsbseq	r0, sp, r9, lsr #25
    7640:	91020000 	mrsls	r0, (UNDEF: 2)
    7644:	198a1f70 	stmibne	sl, {r4, r5, r6, r8, r9, sl, fp, ip}
    7648:	001c0800 	andseq	r0, ip, r0, lsl #16
    764c:	621e0000 	andsvs	r0, lr, #0
    7650:	01000001 	tsteq	r0, r1
    7654:	008909ef 	addeq	r0, r9, pc, ror #19
    7658:	91020000 	mrsls	r0, (UNDEF: 2)
    765c:	1a000064 	bne	77f4 <_Min_Stack_Size+0x73f4>
    7660:	0004f904 	andeq	pc, r4, r4, lsl #18
    7664:	16210000 	strtne	r0, [r1], -r0
    7668:	00040000 	andeq	r0, r4, r0
    766c:	000016f4 	strdeq	r1, [r0], -r4
    7670:	04470104 	strbeq	r0, [r7], #-260	; 0xfffffefc
    7674:	830c0000 	movwhi	r0, #49152	; 0xc000
    7678:	be000025 	cdplt	0, 0, cr0, cr0, cr5, {1}
    767c:	08000001 	stmdaeq	r0, {r0}
    7680:	00000004 	andeq	r0, r0, r4
    7684:	51000000 	mrspl	r0, (UNDEF: 0)
    7688:	02000031 	andeq	r0, r0, #49	; 0x31
    768c:	07a90601 	streq	r0, [r9, r1, lsl #12]!
    7690:	02020000 	andeq	r0, r2, #0
    7694:	00000005 	andeq	r0, r0, r5
    7698:	2c120300 	ldccs	3, cr0, [r2], {-0}
    769c:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    76a0:	00004418 	andeq	r4, r0, r8, lsl r4
    76a4:	00330400 	eorseq	r0, r3, r0, lsl #8
    76a8:	04020000 	streq	r0, [r2], #-0
    76ac:	0001b505 	andeq	fp, r1, r5, lsl #10
    76b0:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    76b4:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    76b8:	002aca03 	eoreq	ip, sl, r3, lsl #20
    76bc:	182e0200 	stmdane	lr!, {r9}
    76c0:	00000063 	andeq	r0, r0, r3, rrx
    76c4:	00005205 	andeq	r5, r0, r5, lsl #4
    76c8:	08010200 	stmdaeq	r1, {r9}
    76cc:	000007a7 	andeq	r0, r0, r7, lsr #15
    76d0:	000a3303 	andeq	r3, sl, r3, lsl #6
    76d4:	19310200 	ldmdbne	r1!, {r9}
    76d8:	0000007b 	andeq	r0, r0, fp, ror r0
    76dc:	00006a04 	andeq	r6, r0, r4, lsl #20
    76e0:	07020200 	streq	r0, [r2, -r0, lsl #4]
    76e4:	00000377 	andeq	r0, r0, r7, ror r3
    76e8:	002b6e03 	eoreq	r6, fp, r3, lsl #28
    76ec:	19340200 	ldmdbne	r4!, {r9}
    76f0:	00000093 	muleq	r0, r3, r0
    76f4:	00008204 	andeq	r8, r0, r4, lsl #4
    76f8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    76fc:	000000a5 	andeq	r0, r0, r5, lsr #1
    7700:	001c4b03 	andseq	r4, ip, r3, lsl #22
    7704:	19370200 	ldmdbne	r7!, {r9}
    7708:	000000a6 	andeq	r0, r0, r6, lsr #1
    770c:	a0070802 	andge	r0, r7, r2, lsl #16
    7710:	06000000 	streq	r0, [r0], -r0
    7714:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    7718:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    771c:	0000aa07 	andeq	sl, r0, r7, lsl #20
    7720:	00d40700 	sbcseq	r0, r4, r0, lsl #14
    7724:	04030000 	streq	r0, [r3], #-0
    7728:	003f1908 	eorseq	r1, pc, r8, lsl #18
    772c:	93080000 	movwls	r0, #32768	; 0x8000
    7730:	04000005 	streq	r0, [r0], #-5
    7734:	0082114a 	addeq	r1, r2, sl, asr #2
    7738:	5e090000 	cdppl	0, 0, cr0, cr9, cr0, {0}
    773c:	e4000000 	str	r0, [r0], #-0
    7740:	0a000000 	beq	7748 <_Min_Stack_Size+0x7348>
    7744:	000000b4 	strheq	r0, [r0], -r4
    7748:	d405000f 	strle	r0, [r5], #-15
    774c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7750:	00000760 	andeq	r0, r0, r0, ror #14
    7754:	e4174c04 	ldr	r4, [r7], #-3076	; 0xfffff3fc
    7758:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    775c:	0000005e 	andeq	r0, r0, lr, asr r0
    7760:	00000105 	andeq	r0, r0, r5, lsl #2
    7764:	0000b40a 	andeq	fp, r0, sl, lsl #8
    7768:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    776c:	000000f5 	strdeq	r0, [r0], -r5
    7770:	0002b208 	andeq	fp, r2, r8, lsl #4
    7774:	174d0400 	strbne	r0, [sp, -r0, lsl #8]
    7778:	00000105 	andeq	r0, r0, r5, lsl #2
    777c:	4505180b 	strmi	r1, [r5, #-2059]	; 0xfffff7f5
    7780:	01740901 	cmneq	r4, r1, lsl #18
    7784:	430c0000 	movwmi	r0, #49152	; 0xc000
    7788:	47050052 	smlsdmi	r5, r2, r0, r0
    778c:	008e1101 	addeq	r1, lr, r1, lsl #2
    7790:	0d000000 	stceq	0, cr0, [r0, #-0]
    7794:	00000c2a 	andeq	r0, r0, sl, lsr #24
    7798:	11014805 	tstne	r1, r5, lsl #16
    779c:	0000008e 	andeq	r0, r0, lr, lsl #1
    77a0:	41500c04 	cmpmi	r0, r4, lsl #24
    77a4:	49050052 	stmdbmi	r5, {r1, r4, r6}
    77a8:	008e1101 	addeq	r1, lr, r1, lsl #2
    77ac:	0d080000 	stceq	0, cr0, [r8, #-0]
    77b0:	00000937 	andeq	r0, r0, r7, lsr r9
    77b4:	11014a05 	tstne	r1, r5, lsl #20
    77b8:	0000008e 	andeq	r0, r0, lr, lsl #1
    77bc:	0c580d0c 	mrrceq	13, 0, r0, r8, cr12
    77c0:	4b050000 	blmi	1477c8 <_Min_Stack_Size+0x1473c8>
    77c4:	008e1101 	addeq	r1, lr, r1, lsl #2
    77c8:	0c100000 	ldceq	0, cr0, [r0], {-0}
    77cc:	00524346 	subseq	r4, r2, r6, asr #6
    77d0:	11014c05 	tstne	r1, r5, lsl #24
    77d4:	0000008e 	andeq	r0, r0, lr, lsl #1
    77d8:	2f0e0014 	svccs	0x000e0014
    77dc:	0500000c 	streq	r0, [r0, #-12]
    77e0:	1603014d 	strne	r0, [r3], -sp, asr #2
    77e4:	0b000001 	bleq	77f0 <_Min_Stack_Size+0x73f0>
    77e8:	0296051c 	addseq	r0, r6, #28, 10	; 0x7000000
    77ec:	0001ec09 	andeq	lr, r1, r9, lsl #24
    77f0:	52530c00 	subspl	r0, r3, #0, 24
    77f4:	02980500 	addseq	r0, r8, #0, 10
    77f8:	00008e11 	andeq	r8, r0, r1, lsl lr
    77fc:	440c0000 	strmi	r0, [ip], #-0
    7800:	99050052 	stmdbls	r5, {r1, r4, r6}
    7804:	008e1102 	addeq	r1, lr, r2, lsl #2
    7808:	0c040000 	stceq	0, cr0, [r4], {-0}
    780c:	00525242 	subseq	r5, r2, r2, asr #4
    7810:	11029a05 	tstne	r2, r5, lsl #20
    7814:	0000008e 	andeq	r0, r0, lr, lsl #1
    7818:	52430c08 	subpl	r0, r3, #8, 24	; 0x800
    781c:	9b050031 	blls	1478e8 <_Min_Stack_Size+0x1474e8>
    7820:	008e1102 	addeq	r1, lr, r2, lsl #2
    7824:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    7828:	00325243 	eorseq	r5, r2, r3, asr #4
    782c:	11029c05 	tstne	r2, r5, lsl #24
    7830:	0000008e 	andeq	r0, r0, lr, lsl #1
    7834:	52430c10 	subpl	r0, r3, #16, 24	; 0x1000
    7838:	9d050033 	stcls	0, cr0, [r5, #-204]	; 0xffffff34
    783c:	008e1102 	addeq	r1, lr, r2, lsl #2
    7840:	0d140000 	ldceq	0, cr0, [r4, #-0]
    7844:	000009d7 	ldrdeq	r0, [r0], -r7
    7848:	11029e05 	tstne	r2, r5, lsl #28
    784c:	0000008e 	andeq	r0, r0, lr, lsl #1
    7850:	d00e0018 	andle	r0, lr, r8, lsl r0
    7854:	0500000a 	streq	r0, [r0, #-10]
    7858:	8103029f 			; <UNDEFINED> instruction: 0x8103029f
    785c:	0f000001 	svceq	0x00000001
    7860:	00630107 	rsbeq	r0, r3, r7, lsl #2
    7864:	ba060000 	blt	18786c <_Min_Stack_Size+0x18746c>
    7868:	00021401 	andeq	r1, r2, r1, lsl #8
    786c:	09761000 	ldmdbeq	r6!, {ip}^
    7870:	11000000 	mrsne	r0, (UNDEF: 0)
    7874:	00544553 	subseq	r4, r4, r3, asr r5
    7878:	40030001 	andmi	r0, r3, r1
    787c:	0600001c 			; <UNDEFINED> instruction: 0x0600001c
    7880:	01f903bd 	ldrheq	r0, [r9, #61]!	; 0x3d
    7884:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    7888:	00071904 	andeq	r1, r7, r4, lsl #18
    788c:	01070f00 	tsteq	r7, r0, lsl #30
    7890:	00000063 	andeq	r0, r0, r3, rrx
    7894:	4e012807 	cdpmi	8, 0, cr2, cr1, cr7, {0}
    7898:	10000002 	andne	r0, r0, r2
    789c:	00000369 	andeq	r0, r0, r9, ror #6
    78a0:	06f11000 	ldrbteq	r1, [r1], r0
    78a4:	10010000 	andne	r0, r1, r0
    78a8:	0000005c 	andeq	r0, r0, ip, asr r0
    78ac:	02c91002 	sbceq	r1, r9, #2
    78b0:	00030000 	andeq	r0, r3, r0
    78b4:	00158203 	andseq	r8, r5, r3, lsl #4
    78b8:	032d0700 			; <UNDEFINED> instruction: 0x032d0700
    78bc:	00000227 	andeq	r0, r0, r7, lsr #4
    78c0:	6301070f 	movwvs	r0, #5903	; 0x170f
    78c4:	07000000 	streq	r0, [r0, -r0]
    78c8:	02750133 	rsbseq	r0, r5, #-1073741812	; 0xc000000c
    78cc:	e5100000 	ldr	r0, [r0, #-0]
    78d0:	0000000c 	andeq	r0, r0, ip
    78d4:	000b2110 	andeq	r2, fp, r0, lsl r1
    78d8:	03000100 	movweq	r0, #256	; 0x100
    78dc:	000009e5 	andeq	r0, r0, r5, ror #19
    78e0:	5a033607 	bpl	d5104 <_Min_Stack_Size+0xd4d04>
    78e4:	12000002 	andne	r0, r0, #2
    78e8:	09310830 	ldmdbeq	r1!, {r4, r5, fp}
    78ec:	00000327 	andeq	r0, r0, r7, lsr #6
    78f0:	000b9113 	andeq	r9, fp, r3, lsl r1
    78f4:	0c330800 	ldceq	8, cr0, [r3], #-0
    78f8:	00000082 	andeq	r0, r0, r2, lsl #1
    78fc:	0a5c1300 	beq	170c504 <_Min_Stack_Size+0x170c104>
    7900:	36080000 	strcc	r0, [r8], -r0
    7904:	0000820c 	andeq	r8, r0, ip, lsl #4
    7908:	15130400 	ldrne	r0, [r3, #-1024]	; 0xfffffc00
    790c:	0800000a 	stmdaeq	r0, {r1, r3}
    7910:	00820c3a 	addeq	r0, r2, sl, lsr ip
    7914:	13080000 	movwne	r0, #32768	; 0x8000
    7918:	00000c1c 	andeq	r0, r0, ip, lsl ip
    791c:	820c3d08 	andhi	r3, ip, #8, 26	; 0x200
    7920:	0c000000 	stceq	0, cr0, [r0], {-0}
    7924:	000c5d13 	andeq	r5, ip, r3, lsl sp
    7928:	0c400800 	mcrreq	8, 0, r0, r0, cr0
    792c:	00000082 	andeq	r0, r0, r2, lsl #1
    7930:	0abf1310 	beq	fefcc578 <__StackLimit+0xdefac578>
    7934:	43080000 	movwmi	r0, #32768	; 0x8000
    7938:	0000820c 	andeq	r8, r0, ip, lsl #4
    793c:	e7131400 	ldr	r1, [r3, -r0, lsl #8]
    7940:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    7944:	00820c46 	addeq	r0, r2, r6, asr #24
    7948:	13180000 	tstne	r8, #0
    794c:	000017fd 	strdeq	r1, [r0], -sp
    7950:	820c4b08 	andhi	r4, ip, #8, 22	; 0x2000
    7954:	1c000000 	stcne	0, cr0, [r0], {-0}
    7958:	000be313 	andeq	lr, fp, r3, lsl r3
    795c:	0c4e0800 	mcrreq	8, 0, r0, lr, cr0
    7960:	00000082 	andeq	r0, r0, r2, lsl #1
    7964:	0bf71320 	bleq	ffdcc5ec <__StackLimit+0xdfdac5ec>
    7968:	53080000 	movwpl	r0, #32768	; 0x8000
    796c:	0000820c 	andeq	r8, r0, ip, lsl #4
    7970:	5f132400 	svcpl	0x00132400
    7974:	08000009 	stmdaeq	r0, {r0, r3}
    7978:	00820c56 	addeq	r0, r2, r6, asr ip
    797c:	13280000 			; <UNDEFINED> instruction: 0x13280000
    7980:	00000d2b 	andeq	r0, r0, fp, lsr #26
    7984:	820c5c08 	andhi	r5, ip, #8, 24	; 0x800
    7988:	2c000000 	stccs	0, cr0, [r0], {-0}
    798c:	093c0300 	ldmdbeq	ip!, {r8, r9}
    7990:	61080000 	mrsvs	r0, (UNDEF: 8)
    7994:	00028102 	andeq	r8, r2, r2, lsl #2
    7998:	01070f00 	tsteq	r7, r0, lsl #30
    799c:	00000063 	andeq	r0, r0, r3, rrx
    79a0:	66016808 	strvs	r6, [r1], -r8, lsl #16
    79a4:	10000003 	andne	r0, r0, r3
    79a8:	00000968 	andeq	r0, r0, r8, ror #18
    79ac:	0ade1000 	beq	ff78b9b4 <__StackLimit+0xdf76b9b4>
    79b0:	10010000 	andne	r0, r1, r0
    79b4:	0000094c 	andeq	r0, r0, ip, asr #18
    79b8:	0c421002 	mcrreq	0, 0, r1, r2, cr2
    79bc:	10030000 	andne	r0, r3, r0
    79c0:	00000a1f 	andeq	r0, r0, pc, lsl sl
    79c4:	0aa11004 	beq	fe84b9dc <__StackLimit+0xde82b9dc>
    79c8:	00050000 	andeq	r0, r5, r0
    79cc:	000ba503 	andeq	sl, fp, r3, lsl #10
    79d0:	026f0800 	rsbeq	r0, pc, #0, 16
    79d4:	00000333 	andeq	r0, r0, r3, lsr r3
    79d8:	00036604 	andeq	r6, r3, r4, lsl #12
    79dc:	0bcf1400 	bleq	ff3cc9e4 <__StackLimit+0xdf3ac9e4>
    79e0:	08600000 	stmdaeq	r0!, {}^	; <UNPREDICTABLE>
    79e4:	043b108b 	ldrteq	r1, [fp], #-139	; 0xffffff75
    79e8:	5f130000 	svcpl	0x00130000
    79ec:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    79f0:	043b1f8d 	ldrteq	r1, [fp], #-3981	; 0xfffff073
    79f4:	13000000 	movwne	r0, #0
    79f8:	00001f87 	andeq	r1, r0, r7, lsl #31
    79fc:	271e8f08 	ldrcs	r8, [lr, -r8, lsl #30]
    7a00:	04000003 	streq	r0, [r0], #-3
    7a04:	000a5713 	andeq	r5, sl, r3, lsl r7
    7a08:	1e910800 	cdpne	8, 9, cr0, cr1, cr0, {0}
    7a0c:	00000275 	andeq	r0, r0, r5, ror r2
    7a10:	02dd1334 	sbcseq	r1, sp, #52, 6	; 0xd0000000
    7a14:	93080000 	movwls	r0, #32768	; 0x8000
    7a18:	0003721e 	andeq	r7, r3, lr, lsl r2
    7a1c:	6d133500 	cfldr32vs	mvfx3, [r3, #-0]
    7a20:	0800000a 	stmdaeq	r0, {r1, r3}
    7a24:	04411f95 	strbeq	r1, [r1], #-3989	; 0xfffff06b
    7a28:	13380000 	teqne	r8, #0
    7a2c:	00000d1a 	andeq	r0, r0, sl, lsl sp
    7a30:	54219708 	strtpl	r9, [r1], #-1800	; 0xfffff8f8
    7a34:	3c000004 	stccc	0, cr0, [r0], {4}
    7a38:	0009f513 	andeq	pc, r9, r3, lsl r5	; <UNPREDICTABLE>
    7a3c:	21990800 	orrscs	r0, r9, r0, lsl #16
    7a40:	00000454 	andeq	r0, r0, r4, asr r4
    7a44:	09891340 	stmibeq	r9, {r6, r8, r9, ip}
    7a48:	9b080000 	blls	207a50 <_Min_Stack_Size+0x207650>
    7a4c:	00045421 	andeq	r5, r4, r1, lsr #8
    7a50:	7a134400 	bvc	4d8a58 <_Min_Stack_Size+0x4d8658>
    7a54:	0800000b 	stmdaeq	r0, {r0, r1, r3}
    7a58:	0454219d 	ldrbeq	r2, [r4], #-413	; 0xfffffe63
    7a5c:	13480000 	movtne	r0, #32768	; 0x8000
    7a60:	00000b68 	andeq	r0, r0, r8, ror #22
    7a64:	54219f08 	strtpl	r9, [r1], #-3848	; 0xfffff0f8
    7a68:	4c000004 	stcmi	0, cr0, [r0], {4}
    7a6c:	000d0813 	andeq	r0, sp, r3, lsl r8
    7a70:	21a10800 			; <UNDEFINED> instruction: 0x21a10800
    7a74:	00000454 	andeq	r0, r0, r4, asr r4
    7a78:	0ab51350 	beq	fed4c7c0 <__StackLimit+0xded2c7c0>
    7a7c:	a3080000 	movwge	r0, #32768	; 0x8000
    7a80:	00008e1e 	andeq	r8, r0, lr, lsl lr
    7a84:	45135400 	ldrmi	r5, [r3, #-1024]	; 0xfffffc00
    7a88:	0800000a 	stmdaeq	r0, {r1, r3}
    7a8c:	00821ea5 	addeq	r1, r2, r5, lsr #29
    7a90:	13580000 	cmpne	r8, #0
    7a94:	00000a7f 	andeq	r0, r0, pc, ror sl
    7a98:	821ea708 	andshi	sl, lr, #8, 14	; 0x200000
    7a9c:	5c000000 	stcpl	0, cr0, [r0], {-0}
    7aa0:	74041500 	strvc	r1, [r4], #-1280	; 0xfffffb00
    7aa4:	16000001 	strne	r0, [r0], -r1
    7aa8:	044e1704 	strbeq	r1, [lr], #-1796	; 0xfffff8fc
    7aac:	4e180000 	cdpmi	0, 1, cr0, cr8, cr0, {0}
    7ab0:	00000004 	andeq	r0, r0, r4
    7ab4:	03770415 	cmneq	r7, #352321536	; 0x15000000
    7ab8:	04150000 	ldreq	r0, [r5], #-0
    7abc:	00000443 	andeq	r0, r0, r3, asr #8
    7ac0:	000bd103 	andeq	sp, fp, r3, lsl #2
    7ac4:	02a90800 	adceq	r0, r9, #0, 16
    7ac8:	00000377 	andeq	r0, r0, r7, ror r3
    7acc:	045a0415 	ldrbeq	r0, [sl], #-1045	; 0xfffffbeb
    7ad0:	04150000 	ldreq	r0, [r5], #-0
    7ad4:	00000052 	andeq	r0, r0, r2, asr r0
    7ad8:	006a0415 	rsbeq	r0, sl, r5, lsl r4
    7adc:	1c120000 	ldcne	0, cr0, [r2], {-0}
    7ae0:	dd092f09 	stcle	15, cr2, [r9, #-36]	; 0xffffffdc
    7ae4:	13000004 	movwne	r0, #4
    7ae8:	000009dc 	ldrdeq	r0, [r0], -ip
    7aec:	820c3109 	andhi	r3, ip, #1073741826	; 0x40000002
    7af0:	00000000 	andeq	r0, r0, r0
    7af4:	000bec13 	andeq	lr, fp, r3, lsl ip
    7af8:	0c370900 			; <UNDEFINED> instruction: 0x0c370900
    7afc:	00000082 	andeq	r0, r0, r2, lsl #1
    7b00:	0a3c1304 	beq	f0c718 <_Min_Stack_Size+0xf0c318>
    7b04:	3a090000 	bcc	247b0c <_Min_Stack_Size+0x24770c>
    7b08:	0000820c 	andeq	r8, r0, ip, lsl #4
    7b0c:	23130800 	tstcs	r3, #0, 16
    7b10:	0900000c 	stmdbeq	r0, {r2, r3}
    7b14:	00820c3d 	addeq	r0, r2, sp, lsr ip
    7b18:	130c0000 	movwne	r0, #49152	; 0xc000
    7b1c:	00000be7 	andeq	r0, r0, r7, ror #23
    7b20:	820c4409 	andhi	r4, ip, #150994944	; 0x9000000
    7b24:	10000000 	andne	r0, r0, r0
    7b28:	000cb013 	andeq	fp, ip, r3, lsl r0
    7b2c:	0c470900 	mcrreq	9, 0, r0, r7, cr0	; <UNPREDICTABLE>
    7b30:	00000082 	andeq	r0, r0, r2, lsl #1
    7b34:	097c1314 	ldmdbeq	ip!, {r2, r4, r8, r9, ip}^
    7b38:	4a090000 	bmi	247b40 <_Min_Stack_Size+0x247740>
    7b3c:	0000820c 	andeq	r8, r0, ip, lsl #4
    7b40:	03001800 	movweq	r1, #2048	; 0x800
    7b44:	00000c71 	andeq	r0, r0, r1, ror ip
    7b48:	78034c09 	stmdavc	r3, {r0, r3, sl, fp, lr}
    7b4c:	0f000004 	svceq	0x00000004
    7b50:	00630107 	rsbeq	r0, r3, r7, lsl #2
    7b54:	76090000 	strvc	r0, [r9], -r0
    7b58:	00052801 	andeq	r2, r5, r1, lsl #16
    7b5c:	09a81000 	stmibeq	r8!, {ip}
    7b60:	10000000 	andne	r0, r0, r0
    7b64:	00000b4a 	andeq	r0, r0, sl, asr #22
    7b68:	0cd11020 	ldcleq	0, cr1, [r1], {32}
    7b6c:	10240000 	eorne	r0, r4, r0
    7b70:	00000b2c 	andeq	r0, r0, ip, lsr #22
    7b74:	0c051021 	stceq	0, cr1, [r5], {33}	; 0x21
    7b78:	10220000 	eorne	r0, r2, r0
    7b7c:	000009bd 			; <UNDEFINED> instruction: 0x000009bd
    7b80:	0c991023 	ldceq	0, cr1, [r9], {35}	; 0x23
    7b84:	10a00000 	adcne	r0, r0, r0
    7b88:	00000bba 			; <UNDEFINED> instruction: 0x00000bba
    7b8c:	1a0300e0 	bne	c7f14 <_Min_Stack_Size+0xc7b14>
    7b90:	09000009 	stmdbeq	r0, {r0, r3}
    7b94:	04e90388 	strbteq	r0, [r9], #904	; 0x388
    7b98:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    7b9c:	03000005 	movweq	r0, #5
    7ba0:	00000c82 	andeq	r0, r0, r2, lsl #25
    7ba4:	82129109 	andshi	r9, r2, #1073741826	; 0x40000002
    7ba8:	04000000 	streq	r0, [r0], #-0
    7bac:	00000539 	andeq	r0, r0, r9, lsr r5
    7bb0:	000aff14 	andeq	pc, sl, r4, lsl pc	; <UNPREDICTABLE>
    7bb4:	96094400 	strls	r4, [r9], -r0, lsl #8
    7bb8:	00061b10 	andeq	r1, r6, r0, lsl fp
    7bbc:	0b5f1300 	bleq	17cc7c4 <_Min_Stack_Size+0x17cc3c4>
    7bc0:	98090000 	stmdals	r9, {}	; <UNPREDICTABLE>
    7bc4:	00061b22 	andeq	r1, r6, r2, lsr #22
    7bc8:	87130000 	ldrhi	r0, [r3, -r0]
    7bcc:	0900001f 	stmdbeq	r0, {r0, r1, r2, r3, r4}
    7bd0:	04dd219a 	ldrbeq	r2, [sp], #410	; 0x19a
    7bd4:	13040000 	movwne	r0, #16384	; 0x4000
    7bd8:	00000a0a 	andeq	r0, r0, sl, lsl #20
    7bdc:	6c229c09 	stcvs	12, cr9, [r2], #-36	; 0xffffffdc
    7be0:	20000004 	andcs	r0, r0, r4
    7be4:	000a9613 	andeq	r9, sl, r3, lsl r6
    7be8:	219e0900 	orrscs	r0, lr, r0, lsl #18
    7bec:	0000006a 	andeq	r0, r0, sl, rrx
    7bf0:	099c1324 	ldmibeq	ip, {r2, r5, r8, r9, ip}
    7bf4:	a0090000 	andge	r0, r9, r0
    7bf8:	00007621 	andeq	r7, r0, r1, lsr #12
    7bfc:	ba132600 	blt	4d1404 <_Min_Stack_Size+0x4d1004>
    7c00:	0900000c 	stmdbeq	r0, {r2, r3}
    7c04:	046c22a2 	strbteq	r2, [ip], #-674	; 0xfffffd5e
    7c08:	13280000 			; <UNDEFINED> instruction: 0x13280000
    7c0c:	00000a8b 	andeq	r0, r0, fp, lsl #21
    7c10:	6a21a409 	bvs	870c3c <_Min_Stack_Size+0x87083c>
    7c14:	2c000000 	stccs	0, cr0, [r0], {-0}
    7c18:	000cc513 	andeq	ip, ip, r3, lsl r5
    7c1c:	21a60900 			; <UNDEFINED> instruction: 0x21a60900
    7c20:	00000076 	andeq	r0, r0, r6, ror r0
    7c24:	0cfa132e 	ldcleq	3, cr1, [sl], #184	; 0xb8
    7c28:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
    7c2c:	0005451f 	andeq	r4, r5, pc, lsl r5
    7c30:	43133000 	tstmi	r3, #0
    7c34:	0900000b 	stmdbeq	r0, {r0, r1, r3}
    7c38:	046622aa 	strbteq	r2, [r6], #-682	; 0xfffffd56
    7c3c:	13340000 	teqne	r4, #0
    7c40:	00000a66 	andeq	r0, r0, r6, ror #20
    7c44:	6622ac09 	strtvs	sl, [r2], -r9, lsl #24
    7c48:	38000004 	stmdacc	r0, {r2}
    7c4c:	000a5713 	andeq	r5, sl, r3, lsl r7
    7c50:	21ae0900 			; <UNDEFINED> instruction: 0x21ae0900
    7c54:	00000275 	andeq	r0, r0, r5, ror r2
    7c58:	0930133c 	ldmdbeq	r0!, {r2, r3, r4, r5, r8, r9, ip}
    7c5c:	b0090000 	andlt	r0, r9, r0
    7c60:	00053421 	andeq	r3, r5, r1, lsr #8
    7c64:	f2133d00 	vadd.f16	d3, d3, d0
    7c68:	0900000c 	stmdbeq	r0, {r2, r3}
    7c6c:	053421b4 	ldreq	r2, [r4, #-436]!	; 0xfffffe4c
    7c70:	133e0000 	teqne	lr, #0
    7c74:	00000ab5 			; <UNDEFINED> instruction: 0x00000ab5
    7c78:	8e21b709 	cdphi	7, 2, cr11, cr1, cr9, {0}
    7c7c:	40000000 	andmi	r0, r0, r0
    7c80:	ec041500 	cfstr32	mvfx1, [r4], {-0}
    7c84:	03000001 	movweq	r0, #1
    7c88:	00000b01 	andeq	r0, r0, r1, lsl #22
    7c8c:	4a03c909 	bmi	fa0b8 <_Min_Stack_Size+0xf9cb8>
    7c90:	0f000005 	svceq	0x00000005
    7c94:	00630107 	rsbeq	r0, r3, r7, lsl #2
    7c98:	330a0000 	movwcc	r0, #40960	; 0xa000
    7c9c:	00065401 	andeq	r5, r6, r1, lsl #8
    7ca0:	08461000 	stmdaeq	r6, {ip}^
    7ca4:	10640000 	rsbne	r0, r4, r0
    7ca8:	0000073d 	andeq	r0, r0, sp, lsr r7
    7cac:	0356100a 	cmpeq	r6, #10
    7cb0:	10010000 	andne	r0, r1, r0
    7cb4:	0000054c 	andeq	r0, r0, ip, asr #10
    7cb8:	14030001 	strne	r0, [r3], #-1
    7cbc:	0a000000 	beq	7cc4 <_Min_Stack_Size+0x78c4>
    7cc0:	062d0338 			; <UNDEFINED> instruction: 0x062d0338
    7cc4:	fe080000 	cdp2	0, 0, cr0, cr8, cr0, {0}
    7cc8:	0a000002 	beq	7cd8 <_Min_Stack_Size+0x78d8>
    7ccc:	008e16cd 	addeq	r1, lr, sp, asr #13
    7cd0:	c0080000 	andgt	r0, r8, r0
    7cd4:	0a000003 	beq	7ce8 <_Min_Stack_Size+0x78e8>
    7cd8:	008211ce 	addeq	r1, r2, lr, asr #3
    7cdc:	f3080000 	vhadd.u8	d0, d8, d0
    7ce0:	0a000002 	beq	7cf0 <_Min_Stack_Size+0x78f0>
    7ce4:	06541ccf 	ldrbeq	r1, [r4], -pc, asr #25
    7ce8:	a7190000 	ldrge	r0, [r9, -r0]
    7cec:	01000024 	tsteq	r0, r4, lsr #32
    7cf0:	d40d0e40 	strle	r0, [sp], #-3648	; 0xfffff1c0
    7cf4:	d008001b 	andle	r0, r8, fp, lsl r0
    7cf8:	01000003 	tsteq	r0, r3
    7cfc:	0006cc9c 	muleq	r6, ip, ip
    7d00:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    7d04:	40010000 	andmi	r0, r1, r0
    7d08:	06cc300e 	strbeq	r3, [ip], lr
    7d0c:	91020000 	mrsls	r0, (UNDEF: 2)
    7d10:	01621b4c 	cmneq	r2, ip, asr #22
    7d14:	42010000 	andmi	r0, r1, #0
    7d18:	00820c0e 	addeq	r0, r2, lr, lsl #24
    7d1c:	91020000 	mrsls	r0, (UNDEF: 2)
    7d20:	26f61b50 	usatcs	r1, #22, r0, asr #22
    7d24:	43010000 	movwmi	r0, #4096	; 0x1000
    7d28:	00820c0e 	addeq	r0, r2, lr, lsl #24
    7d2c:	91020000 	mrsls	r0, (UNDEF: 2)
    7d30:	04150054 	ldreq	r0, [r5], #-84	; 0xffffffac
    7d34:	00000621 	andeq	r0, r0, r1, lsr #12
    7d38:	0028a51c 	eoreq	sl, r8, ip, lsl r5
    7d3c:	0de80100 	stfeqe	f0, [r8]
    7d40:	00024e1a 	andeq	r4, r2, sl, lsl lr
    7d44:	00000000 	andeq	r0, r0, r0
    7d48:	00012e00 	andeq	r2, r1, r0, lsl #28
    7d4c:	1e9c0100 	fmlnee	f0, f4, f0
    7d50:	1a000007 	bne	7d74 <_Min_Stack_Size+0x7974>
    7d54:	00000eda 	ldrdeq	r0, [r0], -sl
    7d58:	3e0de801 	cdpcc	8, 0, cr14, cr13, cr1, {0}
    7d5c:	000006cc 	andeq	r0, r0, ip, asr #13
    7d60:	1b6c9102 	blne	1b2c170 <_Min_Stack_Size+0x1b2bd70>
    7d64:	000022c3 	andeq	r2, r0, r3, asr #5
    7d68:	0d0dea01 	vstreq	s28, [sp, #-4]
    7d6c:	0000046c 	andeq	r0, r0, ip, ror #8
    7d70:	1b749102 	blne	1d2c180 <_Min_Stack_Size+0x1d2bd80>
    7d74:	000023e2 	andeq	r2, r0, r2, ror #7
    7d78:	0d0deb01 	vstreq	d14, [sp, #-4]
    7d7c:	00000472 	andeq	r0, r0, r2, ror r4
    7d80:	00709102 	rsbseq	r9, r0, r2, lsl #2
    7d84:	0027d31c 	eoreq	sp, r7, ip, lsl r3
    7d88:	0dcf0100 	stfeqe	f0, [pc]	; 7d90 <_Min_Stack_Size+0x7990>
    7d8c:	00024e1a 	andeq	r4, r2, sl, lsl lr
    7d90:	00000000 	andeq	r0, r0, r0
    7d94:	00003000 	andeq	r3, r0, r0
    7d98:	4a9c0100 	bmi	fe7081a0 <__StackLimit+0xde6e81a0>
    7d9c:	1a000007 	bne	7dc0 <_Min_Stack_Size+0x79c0>
    7da0:	00000eda 	ldrdeq	r0, [r0], -sl
    7da4:	420dcf01 	andmi	ip, sp, #1, 30
    7da8:	000006cc 	andeq	r0, r0, ip, asr #13
    7dac:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7db0:	00275e1d 	eoreq	r5, r7, sp, lsl lr
    7db4:	0da70100 	stfeqs	f0, [r7]
    7db8:	00024e1a 	andeq	r4, r2, sl, lsl lr
    7dbc:	00000000 	andeq	r0, r0, r0
    7dc0:	00009e00 	andeq	r9, r0, r0, lsl #28
    7dc4:	869c0100 	ldrhi	r0, [ip], r0, lsl #2
    7dc8:	1a000007 	bne	7dec <_Min_Stack_Size+0x79ec>
    7dcc:	00000eda 	ldrdeq	r0, [r0], -sl
    7dd0:	3f0da701 	svccc	0x000da701
    7dd4:	000006cc 	andeq	r0, r0, ip, asr #13
    7dd8:	1e6c9102 	lgnnee	f1, f2
    7ddc:	00706d74 	rsbseq	r6, r0, r4, ror sp
    7de0:	0d0da901 	vstreq.16	s20, [sp, #-2]	; <UNPREDICTABLE>
    7de4:	00000472 	andeq	r0, r0, r2, ror r4
    7de8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7dec:	00281a19 	eoreq	r1, r8, r9, lsl sl
    7df0:	0d8d0100 	stfeqs	f0, [sp]
    7df4:	0000000d 	andeq	r0, r0, sp
    7df8:	00003000 	andeq	r3, r0, r0
    7dfc:	be9c0100 	fmllte	f0, f4, f0
    7e00:	1a000007 	bne	7e24 <_Min_Stack_Size+0x7a24>
    7e04:	00002118 	andeq	r2, r0, r8, lsl r1
    7e08:	3c0d8d01 	stccc	13, cr8, [sp], {1}
    7e0c:	00000466 	andeq	r0, r0, r6, ror #8
    7e10:	1b6c9102 	blne	1b2c220 <_Min_Stack_Size+0x1b2be20>
    7e14:	00000eda 	ldrdeq	r0, [r0], -sl
    7e18:	170d8f01 	strne	r8, [sp, -r1, lsl #30]
    7e1c:	000006cc 	andeq	r0, r0, ip, asr #13
    7e20:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7e24:	00284f19 	eoreq	r4, r8, r9, lsl pc
    7e28:	0d710100 	ldfeqe	f0, [r1, #-0]
    7e2c:	0000000d 	andeq	r0, r0, sp
    7e30:	00002a00 	andeq	r2, r0, r0, lsl #20
    7e34:	f69c0100 			; <UNDEFINED> instruction: 0xf69c0100
    7e38:	1a000007 	bne	7e5c <_Min_Stack_Size+0x7a5c>
    7e3c:	00002118 	andeq	r2, r0, r8, lsl r1
    7e40:	3c0d7101 	stfccs	f7, [sp], {1}
    7e44:	00000466 	andeq	r0, r0, r6, ror #8
    7e48:	1b6c9102 	blne	1b2c258 <_Min_Stack_Size+0x1b2be58>
    7e4c:	00000eda 	ldrdeq	r0, [r0], -sl
    7e50:	170d7301 	strne	r7, [sp, -r1, lsl #6]
    7e54:	000006cc 	andeq	r0, r0, ip, asr #13
    7e58:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7e5c:	0024b619 	eoreq	fp, r4, r9, lsl r6
    7e60:	0d430100 	stfeqe	f0, [r3, #-0]
    7e64:	0000000d 	andeq	r0, r0, sp
    7e68:	00006000 	andeq	r6, r0, r0
    7e6c:	2e9c0100 	fmlcse	f0, f4, f0
    7e70:	1a000008 	bne	7e98 <_Min_Stack_Size+0x7a98>
    7e74:	00002118 	andeq	r2, r0, r8, lsl r1
    7e78:	380d4301 	stmdacc	sp, {r0, r8, r9, lr}
    7e7c:	00000466 	andeq	r0, r0, r6, ror #8
    7e80:	1b6c9102 	blne	1b2c290 <_Min_Stack_Size+0x1b2be90>
    7e84:	00000eda 	ldrdeq	r0, [r0], -sl
    7e88:	170d4501 	strne	r4, [sp, -r1, lsl #10]
    7e8c:	000006cc 	andeq	r0, r0, ip, asr #13
    7e90:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7e94:	00255419 	eoreq	r5, r5, r9, lsl r4
    7e98:	0d150100 	ldfeqs	f0, [r5, #-0]
    7e9c:	0000000d 	andeq	r0, r0, sp
    7ea0:	00006000 	andeq	r6, r0, r0
    7ea4:	669c0100 	ldrvs	r0, [ip], r0, lsl #2
    7ea8:	1a000008 	bne	7ed0 <_Min_Stack_Size+0x7ad0>
    7eac:	00002118 	andeq	r2, r0, r8, lsl r1
    7eb0:	380d1501 	stmdacc	sp, {r0, r8, sl, ip}
    7eb4:	00000466 	andeq	r0, r0, r6, ror #8
    7eb8:	1b6c9102 	blne	1b2c2c8 <_Min_Stack_Size+0x1b2bec8>
    7ebc:	00000eda 	ldrdeq	r0, [r0], -sl
    7ec0:	170d1701 	strne	r1, [sp, -r1, lsl #14]
    7ec4:	000006cc 	andeq	r0, r0, ip, asr #13
    7ec8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7ecc:	00276f19 	eoreq	r6, r7, r9, lsl pc
    7ed0:	0cfd0100 	ldfeqe	f0, [sp]
    7ed4:	0000000d 	andeq	r0, r0, sp
    7ed8:	00002800 	andeq	r2, r0, r0, lsl #16
    7edc:	9e9c0100 	fmllse	f0, f4, f0
    7ee0:	1a000008 	bne	7f08 <_Min_Stack_Size+0x7b08>
    7ee4:	00002118 	andeq	r2, r0, r8, lsl r1
    7ee8:	350cfd01 	strcc	pc, [ip, #-3329]	; 0xfffff2ff
    7eec:	00000466 	andeq	r0, r0, r6, ror #8
    7ef0:	1b6c9102 	blne	1b2c300 <_Min_Stack_Size+0x1b2bf00>
    7ef4:	00000eda 	ldrdeq	r0, [r0], -sl
    7ef8:	170cff01 	strne	pc, [ip, -r1, lsl #30]
    7efc:	000006cc 	andeq	r0, r0, ip, asr #13
    7f00:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7f04:	0023511f 	eoreq	r5, r3, pc, lsl r1
    7f08:	0ce50100 	stfeqe	f0, [r5]
    7f0c:	0000000d 	andeq	r0, r0, sp
    7f10:	00005800 	andeq	r5, r0, r0, lsl #16
    7f14:	c69c0100 	ldrgt	r0, [ip], r0, lsl #2
    7f18:	1a000008 	bne	7f40 <_Min_Stack_Size+0x7b40>
    7f1c:	00000eda 	ldrdeq	r0, [r0], -sl
    7f20:	340ce501 	strcc	lr, [ip], #-1281	; 0xfffffaff
    7f24:	000006cc 	andeq	r0, r0, ip, asr #13
    7f28:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7f2c:	0023641f 	eoreq	r6, r3, pc, lsl r4
    7f30:	0cd70100 	ldfeqe	f0, [r7], {0}
    7f34:	0000000d 	andeq	r0, r0, sp
    7f38:	00002a00 	andeq	r2, r0, r0, lsl #20
    7f3c:	ee9c0100 	fmle	f0, f4, f0
    7f40:	1a000008 	bne	7f68 <_Min_Stack_Size+0x7b68>
    7f44:	00000eda 	ldrdeq	r0, [r0], -sl
    7f48:	340cd701 	strcc	sp, [ip], #-1793	; 0xfffff8ff
    7f4c:	000006cc 	andeq	r0, r0, ip, asr #13
    7f50:	00749102 	rsbseq	r9, r4, r2, lsl #2
    7f54:	00252520 	eoreq	r2, r5, r0, lsr #10
    7f58:	0ca50100 	stfeqs	f0, [r5]
    7f5c:	00024e13 	andeq	r4, r2, r3, lsl lr
    7f60:	00000000 	andeq	r0, r0, r0
    7f64:	0000c800 	andeq	ip, r0, r0, lsl #16
    7f68:	649c0100 	ldrvs	r0, [ip], #256	; 0x100
    7f6c:	1a000009 	bne	7f98 <_Min_Stack_Size+0x7b98>
    7f70:	00000eda 	ldrdeq	r0, [r0], -sl
    7f74:	3e0ca501 	cfsh32cc	mvfx10, mvfx12, #1
    7f78:	000006cc 	andeq	r0, r0, ip, asr #13
    7f7c:	1a6c9102 	bne	1b2c38c <_Min_Stack_Size+0x1b2bf8c>
    7f80:	0000242b 	andeq	r2, r0, fp, lsr #8
    7f84:	4e0ca501 	cfsh32mi	mvfx10, mvfx12, #1
    7f88:	0000046c 	andeq	r0, r0, ip, ror #8
    7f8c:	1a689102 	bne	1a2c39c <_Min_Stack_Size+0x1a2bf9c>
    7f90:	00000a91 	muleq	r0, r1, sl
    7f94:	5e0ca501 	cfsh32pl	mvfx10, mvfx12, #1
    7f98:	0000006a 	andeq	r0, r0, sl, rrx
    7f9c:	1e669102 	lgnnes	f1, f2
    7fa0:	00706d74 	rsbseq	r6, r0, r4, ror sp
    7fa4:	0d0ca701 	stceq	7, cr10, [ip, #-4]
    7fa8:	00000964 	andeq	r0, r0, r4, ror #18
    7fac:	21749102 	cmncs	r4, r2, lsl #2
    7fb0:	00000000 	andeq	r0, r0, r0
    7fb4:	00000016 	andeq	r0, r0, r6, lsl r0
    7fb8:	0001621b 	andeq	r6, r1, fp, lsl r2
    7fbc:	0cc00100 	stfeqe	f0, [r0], {0}
    7fc0:	00008e03 	andeq	r8, r0, r3, lsl #28
    7fc4:	70910200 	addsvc	r0, r1, r0, lsl #4
    7fc8:	04150000 	ldreq	r0, [r5], #-0
    7fcc:	00000082 	andeq	r0, r0, r2, lsl #1
    7fd0:	00249122 	eoreq	r9, r4, r2, lsr #2
    7fd4:	0c820100 	stfeqs	f0, [r2], {0}
    7fd8:	00024e13 	andeq	r4, r2, r3, lsl lr
    7fdc:	00000000 	andeq	r0, r0, r0
    7fe0:	00007200 	andeq	r7, r0, r0, lsl #4
    7fe4:	b69c0100 	ldrlt	r0, [ip], r0, lsl #2
    7fe8:	1a000009 	bne	8014 <_Min_Stack_Size+0x7c14>
    7fec:	00000eda 	ldrdeq	r0, [r0], -sl
    7ff0:	3d0c8201 	sfmcc	f0, 1, [ip, #-4]
    7ff4:	000006cc 	andeq	r0, r0, ip, asr #13
    7ff8:	1a749102 	bne	1d2c408 <_Min_Stack_Size+0x1d2c008>
    7ffc:	0000242b 	andeq	r2, r0, fp, lsr #8
    8000:	4d0c8201 	sfmmi	f0, 1, [ip, #-4]
    8004:	0000046c 	andeq	r0, r0, ip, ror #8
    8008:	1a709102 	bne	1c2c418 <_Min_Stack_Size+0x1c2c018>
    800c:	00000a91 	muleq	r0, r1, sl
    8010:	5d0c8201 	sfmpl	f0, 1, [ip, #-4]
    8014:	0000006a 	andeq	r0, r0, sl, rrx
    8018:	006e9102 	rsbeq	r9, lr, r2, lsl #2
    801c:	0026151c 	eoreq	r1, r6, ip, lsl r5
    8020:	0c5c0100 	ldfeqe	f0, [ip], {-0}
    8024:	00024e1a 	andeq	r4, r2, sl, lsl lr
    8028:	00000000 	andeq	r0, r0, r0
    802c:	00009400 	andeq	r9, r0, r0, lsl #8
    8030:	229c0100 	addscs	r0, ip, #0, 2
    8034:	1a00000a 	bne	8064 <_Min_Stack_Size+0x7c64>
    8038:	00000eda 	ldrdeq	r0, [r0], -sl
    803c:	4a0c5c01 	bmi	31f048 <_Min_Stack_Size+0x31ec48>
    8040:	000006cc 	andeq	r0, r0, ip, asr #13
    8044:	1a749102 	bne	1d2c454 <_Min_Stack_Size+0x1d2c054>
    8048:	000023dd 	ldrdeq	r2, [r0], -sp
    804c:	5a0c5c01 	bpl	31f058 <_Min_Stack_Size+0x31ec58>
    8050:	00000082 	andeq	r0, r0, r2, lsl #1
    8054:	1a709102 	bne	1c2c464 <_Min_Stack_Size+0x1c2c064>
    8058:	00001c44 	andeq	r1, r0, r4, asr #24
    805c:	6b0c5c01 	blvs	31f068 <_Min_Stack_Size+0x31ec68>
    8060:	00000214 	andeq	r0, r0, r4, lsl r2
    8064:	1a6f9102 	bne	1bec474 <_Min_Stack_Size+0x1bec074>
    8068:	0000240a 	andeq	r2, r0, sl, lsl #8
    806c:	7c0c5c01 	stcvc	12, cr5, [ip], {1}
    8070:	00000082 	andeq	r0, r0, r2, lsl #1
    8074:	1a689102 	bne	1a2c484 <_Min_Stack_Size+0x1a2c084>
    8078:	00002629 	andeq	r2, r0, r9, lsr #12
    807c:	900c5c01 	andls	r5, ip, r1, lsl #24
    8080:	00000082 	andeq	r0, r0, r2, lsl #1
    8084:	00009102 	andeq	r9, r0, r2, lsl #2
    8088:	00257519 	eoreq	r7, r5, r9, lsl r5
    808c:	0c330100 	ldfeqs	f0, [r3], #-0
    8090:	0000000d 	andeq	r0, r0, sp
    8094:	00009400 	andeq	r9, r0, r0, lsl #8
    8098:	6a9c0100 	bvs	fe7084a0 <__StackLimit+0xde6e84a0>
    809c:	1a00000a 	bne	80cc <_Min_Stack_Size+0x7ccc>
    80a0:	00002118 	andeq	r2, r0, r8, lsl r1
    80a4:	2e0c3301 	cdpcs	3, 0, cr3, cr12, cr1, {0}
    80a8:	00000466 	andeq	r0, r0, r6, ror #8
    80ac:	1b6c9102 	blne	1b2c4bc <_Min_Stack_Size+0x1b2c0bc>
    80b0:	0000274f 	andeq	r2, r0, pc, asr #14
    80b4:	0c0c3501 	cfstr32eq	mvfx3, [ip], {1}
    80b8:	00000082 	andeq	r0, r0, r2, lsl #1
    80bc:	1b749102 	blne	1d2c4cc <_Min_Stack_Size+0x1d2c0cc>
    80c0:	00000eda 	ldrdeq	r0, [r0], -sl
    80c4:	170c3601 	strne	r3, [ip, -r1, lsl #12]
    80c8:	000006cc 	andeq	r0, r0, ip, asr #13
    80cc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    80d0:	0025d419 	eoreq	sp, r5, r9, lsl r4
    80d4:	0c100100 	ldfeqs	f0, [r0], {-0}
    80d8:	0000000d 	andeq	r0, r0, sp
    80dc:	00003600 	andeq	r3, r0, r0, lsl #12
    80e0:	a29c0100 	addsge	r0, ip, #0, 2
    80e4:	1a00000a 	bne	8114 <_Min_Stack_Size+0x7d14>
    80e8:	00002118 	andeq	r2, r0, r8, lsl r1
    80ec:	330c1001 	movwcc	r1, #49153	; 0xc001
    80f0:	00000466 	andeq	r0, r0, r6, ror #8
    80f4:	1b6c9102 	blne	1b2c504 <_Min_Stack_Size+0x1b2c104>
    80f8:	00000eda 	ldrdeq	r0, [r0], -sl
    80fc:	170c1201 	strne	r1, [ip, -r1, lsl #4]
    8100:	000006cc 	andeq	r0, r0, ip, asr #13
    8104:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8108:	00269319 	eoreq	r9, r6, r9, lsl r3
    810c:	0bd70100 	bleq	ff5c8514 <__StackLimit+0xdf5a8514>
    8110:	0000000d 	andeq	r0, r0, sp
    8114:	00009600 	andeq	r9, r0, r0, lsl #12
    8118:	da9c0100 	ble	fe708520 <__StackLimit+0xde6e8520>
    811c:	1a00000a 	bne	814c <_Min_Stack_Size+0x7d4c>
    8120:	00002118 	andeq	r2, r0, r8, lsl r1
    8124:	340bd701 	strcc	sp, [fp], #-1793	; 0xfffff8ff
    8128:	00000466 	andeq	r0, r0, r6, ror #8
    812c:	1b6c9102 	blne	1b2c53c <_Min_Stack_Size+0x1b2c13c>
    8130:	00000eda 	ldrdeq	r0, [r0], -sl
    8134:	170bd901 	strne	sp, [fp, -r1, lsl #18]
    8138:	000006cc 	andeq	r0, r0, ip, asr #13
    813c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8140:	0025fc19 	eoreq	pc, r5, r9, lsl ip	; <UNPREDICTABLE>
    8144:	0bc40100 	bleq	ff10854c <__StackLimit+0xdf0e854c>
    8148:	0000000d 	andeq	r0, r0, sp
    814c:	00001c00 	andeq	r1, r0, r0, lsl #24
    8150:	129c0100 	addsne	r0, ip, #0, 2
    8154:	1a00000b 	bne	8188 <_Min_Stack_Size+0x7d88>
    8158:	00002118 	andeq	r2, r0, r8, lsl r1
    815c:	330bc401 	movwcc	ip, #46081	; 0xb401
    8160:	00000466 	andeq	r0, r0, r6, ror #8
    8164:	1b6c9102 	blne	1b2c574 <_Min_Stack_Size+0x1b2c174>
    8168:	00000eda 	ldrdeq	r0, [r0], -sl
    816c:	170bc601 	strne	ip, [fp, -r1, lsl #12]
    8170:	000006cc 	andeq	r0, r0, ip, asr #13
    8174:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8178:	0027a119 	eoreq	sl, r7, r9, lsl r1
    817c:	0ba10100 	bleq	fe848584 <__StackLimit+0xde828584>
    8180:	0000000d 	andeq	r0, r0, sp
    8184:	00005200 	andeq	r5, r0, r0, lsl #4
    8188:	4a9c0100 	bmi	fe708590 <__StackLimit+0xde6e8590>
    818c:	1a00000b 	bne	81c0 <_Min_Stack_Size+0x7dc0>
    8190:	00002118 	andeq	r2, r0, r8, lsl r1
    8194:	350ba101 	strcc	sl, [fp, #-257]	; 0xfffffeff
    8198:	00000466 	andeq	r0, r0, r6, ror #8
    819c:	1b6c9102 	blne	1b2c5ac <_Min_Stack_Size+0x1b2c1ac>
    81a0:	00000eda 	ldrdeq	r0, [r0], -sl
    81a4:	170ba301 	strne	sl, [fp, -r1, lsl #6]
    81a8:	000006cc 	andeq	r0, r0, ip, asr #13
    81ac:	00749102 	rsbseq	r9, r4, r2, lsl #2
    81b0:	00278422 	eoreq	r8, r7, r2, lsr #8
    81b4:	0b740100 	bleq	1d085bc <_Min_Stack_Size+0x1d081bc>
    81b8:	0000820a 	andeq	r8, r0, sl, lsl #4
    81bc:	00000000 	andeq	r0, r0, r0
    81c0:	00001600 	andeq	r1, r0, r0, lsl #12
    81c4:	769c0100 	ldrvc	r0, [ip], r0, lsl #2
    81c8:	1a00000b 	bne	81fc <_Min_Stack_Size+0x7dfc>
    81cc:	00000eda 	ldrdeq	r0, [r0], -sl
    81d0:	300b7401 	andcc	r7, fp, r1, lsl #8
    81d4:	000006cc 	andeq	r0, r0, ip, asr #13
    81d8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    81dc:	0024e822 	eoreq	lr, r4, r2, lsr #16
    81e0:	0b650100 	bleq	19485e8 <_Min_Stack_Size+0x19481e8>
    81e4:	00052817 	andeq	r2, r5, r7, lsl r8
    81e8:	00000000 	andeq	r0, r0, r0
    81ec:	00003a00 	andeq	r3, r0, r0, lsl #20
    81f0:	c29c0100 	addsgt	r0, ip, #0, 2
    81f4:	1a00000b 	bne	8228 <_Min_Stack_Size+0x7e28>
    81f8:	00000eda 	ldrdeq	r0, [r0], -sl
    81fc:	3d0b6501 	cfstr32cc	mvfx6, [fp, #-4]
    8200:	000006cc 	andeq	r0, r0, ip, asr #13
    8204:	1b6c9102 	blne	1b2c614 <_Min_Stack_Size+0x1b2c214>
    8208:	000026fb 	strdeq	r2, [r0], -fp
    820c:	0c0b6701 	stceq	7, cr6, [fp], {1}
    8210:	00000082 	andeq	r0, r0, r2, lsl #1
    8214:	1b749102 	blne	1d2c624 <_Min_Stack_Size+0x1d2c224>
    8218:	00002701 	andeq	r2, r0, r1, lsl #14
    821c:	1b0b6701 	blne	2e1e28 <_Min_Stack_Size+0x2e1a28>
    8220:	00000082 	andeq	r0, r0, r2, lsl #1
    8224:	00709102 	rsbseq	r9, r0, r2, lsl #2
    8228:	0026c722 	eoreq	ip, r6, r2, lsr #14
    822c:	0b2c0100 	bleq	b08634 <_Min_Stack_Size+0xb08234>
    8230:	00024e13 	andeq	r4, r2, r3, lsl lr
    8234:	00000000 	andeq	r0, r0, r0
    8238:	00006600 	andeq	r6, r0, r0, lsl #12
    823c:	fe9c0100 	cdp2	1, 9, cr0, cr12, cr0, {0}
    8240:	1a00000b 	bne	8274 <_Min_Stack_Size+0x7e74>
    8244:	00000eda 	ldrdeq	r0, [r0], -sl
    8248:	450b2c01 	strmi	r2, [fp, #-3073]	; 0xfffff3ff
    824c:	000006cc 	andeq	r0, r0, ip, asr #13
    8250:	1b6c9102 	blne	1b2c660 <_Min_Stack_Size+0x1b2c260>
    8254:	00000162 	andeq	r0, r0, r2, ror #2
    8258:	0c0b2e01 	stceq	14, cr2, [fp], {1}
    825c:	00000082 	andeq	r0, r0, r2, lsl #1
    8260:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8264:	0022f822 	eoreq	pc, r2, r2, lsr #16
    8268:	0b090100 	bleq	248670 <_Min_Stack_Size+0x248270>
    826c:	00024e13 	andeq	r4, r2, r3, lsl lr
    8270:	00000000 	andeq	r0, r0, r0
    8274:	00006600 	andeq	r6, r0, r0, lsl #12
    8278:	3a9c0100 	bcc	fe708680 <__StackLimit+0xde6e8680>
    827c:	1a00000c 	bne	82b4 <_Min_Stack_Size+0x7eb4>
    8280:	00000eda 	ldrdeq	r0, [r0], -sl
    8284:	480b0901 	stmdami	fp, {r0, r8, fp}
    8288:	000006cc 	andeq	r0, r0, ip, asr #13
    828c:	1b6c9102 	blne	1b2c69c <_Min_Stack_Size+0x1b2c29c>
    8290:	00000162 	andeq	r0, r0, r2, ror #2
    8294:	0c0b0b01 			; <UNDEFINED> instruction: 0x0c0b0b01
    8298:	00000082 	andeq	r0, r0, r2, lsl #1
    829c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    82a0:	0026a722 	eoreq	sl, r6, r2, lsr #14
    82a4:	0aee0100 	beq	ffb886ac <__StackLimit+0xdfb686ac>
    82a8:	00024e13 	andeq	r4, r2, r3, lsl lr
    82ac:	00000000 	andeq	r0, r0, r0
    82b0:	00005200 	andeq	r5, r0, r0, lsl #4
    82b4:	669c0100 	ldrvs	r0, [ip], r0, lsl #2
    82b8:	1a00000c 	bne	82f0 <_Min_Stack_Size+0x7ef0>
    82bc:	00000eda 	ldrdeq	r0, [r0], -sl
    82c0:	470aee01 	strmi	lr, [sl, -r1, lsl #28]
    82c4:	000006cc 	andeq	r0, r0, ip, asr #13
    82c8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    82cc:	00239022 	eoreq	r9, r3, r2, lsr #32
    82d0:	0ad30100 	beq	ff4c86d8 <__StackLimit+0xdf4a86d8>
    82d4:	00024e13 	andeq	r4, r2, r3, lsl lr
    82d8:	00000000 	andeq	r0, r0, r0
    82dc:	00005200 	andeq	r5, r0, r0, lsl #4
    82e0:	929c0100 	addsls	r0, ip, #0, 2
    82e4:	1a00000c 	bne	831c <_Min_Stack_Size+0x7f1c>
    82e8:	00000eda 	ldrdeq	r0, [r0], -sl
    82ec:	480ad301 	stmdami	sl, {r0, r8, r9, ip, lr, pc}
    82f0:	000006cc 	andeq	r0, r0, ip, asr #13
    82f4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    82f8:	0022ce22 	eoreq	ip, r2, r2, lsr #28
    82fc:	0ab80100 	beq	fee08704 <__StackLimit+0xdede8704>
    8300:	00024e13 	andeq	r4, r2, r3, lsl lr
    8304:	00000000 	andeq	r0, r0, r0
    8308:	00005200 	andeq	r5, r0, r0, lsl #4
    830c:	be9c0100 	fmllte	f0, f4, f0
    8310:	1a00000c 	bne	8348 <_Min_Stack_Size+0x7f48>
    8314:	00000eda 	ldrdeq	r0, [r0], -sl
    8318:	390ab801 	stmdbcc	sl, {r0, fp, ip, sp, pc}
    831c:	000006cc 	andeq	r0, r0, ip, asr #13
    8320:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8324:	00232023 	eoreq	r2, r3, r3, lsr #32
    8328:	0a900100 	beq	fe408730 <__StackLimit+0xde3e8730>
    832c:	0000000d 	andeq	r0, r0, sp
    8330:	00001600 	andeq	r1, r0, r0, lsl #12
    8334:	f69c0100 			; <UNDEFINED> instruction: 0xf69c0100
    8338:	1a00000c 	bne	8370 <_Min_Stack_Size+0x7f70>
    833c:	00000eda 	ldrdeq	r0, [r0], -sl
    8340:	3c0a9001 	stccc	0, cr9, [sl], {1}
    8344:	000006cc 	andeq	r0, r0, ip, asr #13
    8348:	1a749102 	bne	1d2c758 <_Min_Stack_Size+0x1d2c358>
    834c:	00000a91 	muleq	r0, r1, sl
    8350:	4c0a9001 	stcmi	0, cr9, [sl], {1}
    8354:	0000006a 	andeq	r0, r0, sl, rrx
    8358:	00729102 	rsbseq	r9, r2, r2, lsl #2
    835c:	0023bb23 	eoreq	fp, r3, r3, lsr #22
    8360:	0a7f0100 	beq	1fc8768 <_Min_Stack_Size+0x1fc8368>
    8364:	0000000d 	andeq	r0, r0, sp
    8368:	00001200 	andeq	r1, r0, r0, lsl #4
    836c:	1e9c0100 	fmlnee	f0, f4, f0
    8370:	1a00000d 	bne	83ac <_Min_Stack_Size+0x7fac>
    8374:	00000eda 	ldrdeq	r0, [r0], -sl
    8378:	430a7f01 	movwmi	r7, #44801	; 0xaf01
    837c:	000006cc 	andeq	r0, r0, ip, asr #13
    8380:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8384:	00263123 	eoreq	r3, r6, r3, lsr #2
    8388:	0a700100 	beq	1c08790 <_Min_Stack_Size+0x1c08390>
    838c:	0000000d 	andeq	r0, r0, sp
    8390:	00001200 	andeq	r1, r0, r0, lsl #4
    8394:	469c0100 	ldrmi	r0, [ip], r0, lsl #2
    8398:	1a00000d 	bne	83d4 <_Min_Stack_Size+0x7fd4>
    839c:	00000eda 	ldrdeq	r0, [r0], -sl
    83a0:	440a7001 	strmi	r7, [sl], #-1
    83a4:	000006cc 	andeq	r0, r0, ip, asr #13
    83a8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    83ac:	00273423 	eoreq	r3, r7, r3, lsr #8
    83b0:	0a610100 	beq	18487b8 <_Min_Stack_Size+0x18483b8>
    83b4:	0000000d 	andeq	r0, r0, sp
    83b8:	00001200 	andeq	r1, r0, r0, lsl #4
    83bc:	6e9c0100 	fmlvse	f0, f4, f0
    83c0:	1a00000d 	bne	83fc <_Min_Stack_Size+0x7ffc>
    83c4:	00000eda 	ldrdeq	r0, [r0], -sl
    83c8:	3c0a6101 	stfccs	f6, [sl], {1}
    83cc:	000006cc 	andeq	r0, r0, ip, asr #13
    83d0:	00749102 	rsbseq	r9, r4, r2, lsl #2
    83d4:	00280323 	eoreq	r0, r8, r3, lsr #6
    83d8:	0a530100 	beq	14c87e0 <_Min_Stack_Size+0x14c83e0>
    83dc:	0000000d 	andeq	r0, r0, sp
    83e0:	00001200 	andeq	r1, r0, r0, lsl #4
    83e4:	969c0100 	ldrls	r0, [ip], r0, lsl #2
    83e8:	1a00000d 	bne	8424 <_Min_Stack_Size+0x8024>
    83ec:	00000eda 	ldrdeq	r0, [r0], -sl
    83f0:	380a5301 	stmdacc	sl, {r0, r8, r9, ip, lr}
    83f4:	000006cc 	andeq	r0, r0, ip, asr #13
    83f8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    83fc:	0023ee23 	eoreq	lr, r3, r3, lsr #28
    8400:	0a440100 	beq	1108808 <_Min_Stack_Size+0x1108408>
    8404:	0000000d 	andeq	r0, r0, sp
    8408:	00001200 	andeq	r1, r0, r0, lsl #4
    840c:	be9c0100 	fmllte	f0, f4, f0
    8410:	1a00000d 	bne	844c <_Min_Stack_Size+0x804c>
    8414:	00000eda 	ldrdeq	r0, [r0], -sl
    8418:	3d0a4401 	cfstrscc	mvf4, [sl, #-4]
    841c:	000006cc 	andeq	r0, r0, ip, asr #13
    8420:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8424:	00270723 	eoreq	r0, r7, r3, lsr #14
    8428:	0a350100 	beq	d48830 <_Min_Stack_Size+0xd48430>
    842c:	0000000d 	andeq	r0, r0, sp
    8430:	00001200 	andeq	r1, r0, r0, lsl #4
    8434:	e69c0100 	ldr	r0, [ip], r0, lsl #2
    8438:	1a00000d 	bne	8474 <_Min_Stack_Size+0x8074>
    843c:	00000eda 	ldrdeq	r0, [r0], -sl
    8440:	390a3501 	stmdbcc	sl, {r0, r8, sl, ip, sp}
    8444:	000006cc 	andeq	r0, r0, ip, asr #13
    8448:	00749102 	rsbseq	r9, r4, r2, lsl #2
    844c:	0027e723 	eoreq	lr, r7, r3, lsr #14
    8450:	0a260100 	beq	988858 <_Min_Stack_Size+0x988458>
    8454:	0000000d 	andeq	r0, r0, sp
    8458:	00001200 	andeq	r1, r0, r0, lsl #4
    845c:	0e9c0100 	fmleqe	f0, f4, f0
    8460:	1a00000e 	bne	84a0 <_Min_Stack_Size+0x80a0>
    8464:	00000eda 	ldrdeq	r0, [r0], -sl
    8468:	3d0a2601 	stccc	6, cr2, [sl, #-4]
    846c:	000006cc 	andeq	r0, r0, ip, asr #13
    8470:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8474:	00253c23 	eoreq	r3, r5, r3, lsr #24
    8478:	0a170100 	beq	5c8880 <_Min_Stack_Size+0x5c8480>
    847c:	0000000d 	andeq	r0, r0, sp
    8480:	00001200 	andeq	r1, r0, r0, lsl #4
    8484:	369c0100 	ldrcc	r0, [ip], r0, lsl #2
    8488:	1a00000e 	bne	84c8 <_Min_Stack_Size+0x80c8>
    848c:	00000eda 	ldrdeq	r0, [r0], -sl
    8490:	390a1701 	stmdbcc	sl, {r0, r8, r9, sl, ip}
    8494:	000006cc 	andeq	r0, r0, ip, asr #13
    8498:	00749102 	rsbseq	r9, r4, r2, lsl #2
    849c:	00243124 	eoreq	r3, r4, r4, lsr #2
    84a0:	09310100 	ldmdbeq	r1!, {r8}
    84a4:	00000006 	andeq	r0, r0, r6
    84a8:	00035800 	andeq	r5, r3, r0, lsl #16
    84ac:	fc9c0100 	ldc2	1, cr0, [ip], {0}
    84b0:	1a00000e 	bne	84f0 <_Min_Stack_Size+0x80f0>
    84b4:	00000eda 	ldrdeq	r0, [r0], -sl
    84b8:	2e093101 	adfcse	f3, f1, f1
    84bc:	000006cc 	andeq	r0, r0, ip, asr #13
    84c0:	1b549102 	blne	152c8d0 <_Min_Stack_Size+0x152c4d0>
    84c4:	0000256c 	andeq	r2, r0, ip, ror #10
    84c8:	0c093301 	stceq	3, cr3, [r9], {1}
    84cc:	00000082 	andeq	r0, r0, r2, lsl #1
    84d0:	1b749102 	blne	1d2c8e0 <_Min_Stack_Size+0x1d2c4e0>
    84d4:	00002445 	andeq	r2, r0, r5, asr #8
    84d8:	0c093401 	cfstrseq	mvf3, [r9], {1}
    84dc:	00000082 	andeq	r0, r0, r2, lsl #1
    84e0:	1b709102 	blne	1c2c8f0 <_Min_Stack_Size+0x1c2c4f0>
    84e4:	00002319 	andeq	r2, r0, r9, lsl r3
    84e8:	0c093501 	cfstr32eq	mvfx3, [r9], {1}
    84ec:	00000082 	andeq	r0, r0, r2, lsl #1
    84f0:	1b6c9102 	blne	1b2c900 <_Min_Stack_Size+0x1b2c500>
    84f4:	0000250c 	andeq	r2, r0, ip, lsl #10
    84f8:	0c093601 	stceq	6, cr3, [r9], {1}
    84fc:	00000082 	andeq	r0, r0, r2, lsl #1
    8500:	1b689102 	blne	1a2c910 <_Min_Stack_Size+0x1a2c510>
    8504:	0000274f 	andeq	r2, r0, pc, asr #14
    8508:	0c093701 	stceq	7, cr3, [r9], {1}
    850c:	00000082 	andeq	r0, r0, r2, lsl #1
    8510:	25649102 	strbcs	r9, [r4, #-258]!	; 0xfffffefe
    8514:	00000000 	andeq	r0, r0, r0
    8518:	00000016 	andeq	r0, r0, r6, lsl r0
    851c:	00000ecb 	andeq	r0, r0, fp, asr #29
    8520:	0001621b 	andeq	r6, r1, fp, lsl r2
    8524:	09b40100 	ldmibeq	r4!, {r8}
    8528:	00008e05 	andeq	r8, r0, r5, lsl #28
    852c:	5c910200 	lfmpl	f0, 4, [r1], {0}
    8530:	03d82600 	bicseq	r2, r8, #0, 12
    8534:	0ee50000 	cdpeq	0, 14, cr0, cr5, cr0, {0}
    8538:	1f1b0000 	svcne	0x001b0000
    853c:	01000027 	tsteq	r0, r7, lsr #32
    8540:	6a1009bd 	bvs	40ac3c <_Min_Stack_Size+0x40a83c>
    8544:	02000000 	andeq	r0, r0, #0
    8548:	27006291 			; <UNDEFINED> instruction: 0x27006291
    854c:	000003f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8550:	0027961b 	eoreq	r9, r7, fp, lsl r6
    8554:	09e70100 	stmibeq	r7!, {r8}^
    8558:	00006a10 	andeq	r6, r0, r0, lsl sl
    855c:	60910200 	addsvs	r0, r1, r0, lsl #4
    8560:	77200000 	strvc	r0, [r0, -r0]!
    8564:	01000023 	tsteq	r0, r3, lsr #32
    8568:	4e1308e3 	cdpmi	8, 1, cr0, cr3, cr3, {7}
    856c:	00000002 	andeq	r0, r0, r2
    8570:	d4000000 	strle	r0, [r0], #-0
    8574:	01000000 	mrseq	r0, (UNDEF: 0)
    8578:	000f289c 	muleq	pc, ip, r8	; <UNPREDICTABLE>
    857c:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8580:	e3010000 	movw	r0, #4096	; 0x1000
    8584:	06cc4008 	strbeq	r4, [ip], r8
    8588:	91020000 	mrsls	r0, (UNDEF: 2)
    858c:	ce200074 	mcrgt	0, 1, r0, cr0, cr4, {3}
    8590:	01000024 	tsteq	r0, r4, lsr #32
    8594:	4e130896 	mrcmi	8, 0, r0, cr3, cr6, {4}
    8598:	00000002 	andeq	r0, r0, r2
    859c:	a0000000 	andge	r0, r0, r0
    85a0:	01000000 	mrseq	r0, (UNDEF: 0)
    85a4:	000f549c 	muleq	pc, ip, r4	; <UNPREDICTABLE>
    85a8:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    85ac:	96010000 	strls	r0, [r1], -r0
    85b0:	06cc4108 	strbeq	r4, [ip], r8, lsl #2
    85b4:	91020000 	mrsls	r0, (UNDEF: 2)
    85b8:	70200074 	eorvc	r0, r0, r4, ror r0
    85bc:	01000026 	tsteq	r0, r6, lsr #32
    85c0:	4e13080f 	cdpmi	8, 1, cr0, cr3, cr15, {0}
    85c4:	00000002 	andeq	r0, r0, r2
    85c8:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    85cc:	01000001 	tsteq	r0, r1
    85d0:	000f909c 	muleq	pc, ip, r0	; <UNPREDICTABLE>
    85d4:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    85d8:	0f010000 	svceq	0x00010000
    85dc:	06cc3908 	strbeq	r3, [ip], r8, lsl #18
    85e0:	91020000 	mrsls	r0, (UNDEF: 2)
    85e4:	23b11b6c 			; <UNDEFINED> instruction: 0x23b11b6c
    85e8:	11010000 	mrsne	r0, (UNDEF: 1)
    85ec:	00820c08 	addeq	r0, r2, r8, lsl #24
    85f0:	91020000 	mrsls	r0, (UNDEF: 2)
    85f4:	3b200074 	blcc	8087cc <_Min_Stack_Size+0x8083cc>
    85f8:	01000023 	tsteq	r0, r3, lsr #32
    85fc:	4e1307d2 	mrcmi	7, 0, r0, cr3, cr2, {6}
    8600:	00000002 	andeq	r0, r0, r2
    8604:	b6000000 	strlt	r0, [r0], -r0
    8608:	01000000 	mrseq	r0, (UNDEF: 0)
    860c:	000fbc9c 	muleq	pc, ip, ip	; <UNPREDICTABLE>
    8610:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8614:	d2010000 	andle	r0, r1, #0
    8618:	06cc3d07 	strbeq	r3, [ip], r7, lsl #26
    861c:	91020000 	mrsls	r0, (UNDEF: 2)
    8620:	14200074 	strtne	r0, [r0], #-116	; 0xffffff8c
    8624:	01000024 	tsteq	r0, r4, lsr #32
    8628:	4e13079f 	mrcmi	7, 0, r0, cr3, cr15, {4}
    862c:	00000002 	andeq	r0, r0, r2
    8630:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    8634:	01000000 	mrseq	r0, (UNDEF: 0)
    8638:	000fe89c 	muleq	pc, ip, r8	; <UNPREDICTABLE>
    863c:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8640:	9f010000 	svcls	0x00010000
    8644:	06cc3e07 	strbeq	r3, [ip], r7, lsl #28
    8648:	91020000 	mrsls	r0, (UNDEF: 2)
    864c:	7e200074 	mcrvc	0, 1, r0, cr0, cr4, {3}
    8650:	01000028 	tsteq	r0, r8, lsr #32
    8654:	4e130746 	cdpmi	7, 1, cr0, cr3, cr6, {2}
    8658:	00000002 	andeq	r0, r0, r2
    865c:	22000000 	andcs	r0, r0, #0
    8660:	01000001 	tsteq	r0, r1
    8664:	0010149c 	mulseq	r0, ip, r4
    8668:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    866c:	46010000 	strmi	r0, [r1], -r0
    8670:	06cc3607 	strbeq	r3, [ip], r7, lsl #12
    8674:	91020000 	mrsls	r0, (UNDEF: 2)
    8678:	b6200074 			; <UNDEFINED> instruction: 0xb6200074
    867c:	01000027 	tsteq	r0, r7, lsr #32
    8680:	4e13070d 	cdpmi	7, 1, cr0, cr3, cr13, {0}
    8684:	00000002 	andeq	r0, r0, r2
    8688:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    868c:	01000000 	mrseq	r0, (UNDEF: 0)
    8690:	00108a9c 	mulseq	r0, ip, sl
    8694:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8698:	0d010000 	stceq	0, cr0, [r1, #-0]
    869c:	06cc4407 	strbeq	r4, [ip], r7, lsl #8
    86a0:	91020000 	mrsls	r0, (UNDEF: 2)
    86a4:	242b1a6c 	strtcs	r1, [fp], #-2668	; 0xfffff594
    86a8:	0d010000 	stceq	0, cr0, [r1, #-0]
    86ac:	046c5407 	strbteq	r5, [ip], #-1031	; 0xfffffbf9
    86b0:	91020000 	mrsls	r0, (UNDEF: 2)
    86b4:	0a911a68 	beq	fe44f05c <__StackLimit+0xde42f05c>
    86b8:	0d010000 	stceq	0, cr0, [r1, #-0]
    86bc:	006a6407 	rsbeq	r6, sl, r7, lsl #8
    86c0:	91020000 	mrsls	r0, (UNDEF: 2)
    86c4:	21bb1b66 			; <UNDEFINED> instruction: 0x21bb1b66
    86c8:	0f010000 	svceq	0x00010000
    86cc:	024e1507 	subeq	r1, lr, #29360128	; 0x1c00000
    86d0:	91020000 	mrsls	r0, (UNDEF: 2)
    86d4:	00002177 	andeq	r2, r0, r7, ror r1
    86d8:	00160000 	andseq	r0, r6, r0
    86dc:	621b0000 	andsvs	r0, fp, #0
    86e0:	01000001 	tsteq	r0, r1
    86e4:	8e090725 	cdphi	7, 0, cr0, cr9, cr5, {1}
    86e8:	02000000 	andeq	r0, r0, #0
    86ec:	00007091 	muleq	r0, r1, r0
    86f0:	00265420 	eoreq	r5, r6, r0, lsr #8
    86f4:	06d00100 	ldrbeq	r0, [r0], r0, lsl #2
    86f8:	00024e13 	andeq	r4, r2, r3, lsl lr
    86fc:	00000000 	andeq	r0, r0, r0
    8700:	00009e00 	andeq	r9, r0, r0, lsl #28
    8704:	009c0100 	addseq	r0, ip, r0, lsl #2
    8708:	1a000011 	bne	8754 <_Min_Stack_Size+0x8354>
    870c:	00000eda 	ldrdeq	r0, [r0], -sl
    8710:	4306d001 	movwmi	sp, #24577	; 0x6001
    8714:	000006cc 	andeq	r0, r0, ip, asr #13
    8718:	1a6c9102 	bne	1b2cb28 <_Min_Stack_Size+0x1b2c728>
    871c:	0000242b 	andeq	r2, r0, fp, lsr #8
    8720:	5306d001 	movwpl	sp, #24577	; 0x6001
    8724:	0000046c 	andeq	r0, r0, ip, ror #8
    8728:	1a689102 	bne	1a2cb38 <_Min_Stack_Size+0x1a2c738>
    872c:	00000a91 	muleq	r0, r1, sl
    8730:	6306d001 	movwvs	sp, #24577	; 0x6001
    8734:	0000006a 	andeq	r0, r0, sl, rrx
    8738:	1b669102 	blne	19acb48 <_Min_Stack_Size+0x19ac748>
    873c:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    8740:	1506d201 	strne	sp, [r6, #-513]	; 0xfffffdff
    8744:	0000024e 	andeq	r0, r0, lr, asr #4
    8748:	21779102 	cmncs	r7, r2, lsl #2
    874c:	00000000 	andeq	r0, r0, r0
    8750:	00000016 	andeq	r0, r0, r6, lsl r0
    8754:	0001621b 	andeq	r6, r1, fp, lsl r2
    8758:	06e80100 	strbteq	r0, [r8], r0, lsl #2
    875c:	00008e09 	andeq	r8, r0, r9, lsl #28
    8760:	70910200 	addsvc	r0, r1, r0, lsl #4
    8764:	36200000 	strtcc	r0, [r0], -r0
    8768:	01000028 	tsteq	r0, r8, lsr #32
    876c:	4e130652 	mrcmi	6, 0, r0, cr3, cr2, {2}
    8770:	00000002 	andeq	r0, r0, r2
    8774:	ba000000 	blt	877c <_Min_Stack_Size+0x837c>
    8778:	01000001 	tsteq	r0, r1
    877c:	0011b69c 	mulseq	r1, ip, r6
    8780:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8784:	52010000 	andpl	r0, r1, #0
    8788:	06cc4006 	strbeq	r4, [ip], r6
    878c:	91020000 	mrsls	r0, (UNDEF: 2)
    8790:	242b1a64 	strtcs	r1, [fp], #-2660	; 0xfffff59c
    8794:	52010000 	andpl	r0, r1, #0
    8798:	046c5006 	strbteq	r5, [ip], #-6
    879c:	91020000 	mrsls	r0, (UNDEF: 2)
    87a0:	0a911a60 	beq	fe44f128 <__StackLimit+0xde42f128>
    87a4:	52010000 	andpl	r0, r1, #0
    87a8:	006a6006 	rsbeq	r6, sl, r6
    87ac:	91020000 	mrsls	r0, (UNDEF: 2)
    87b0:	260f1a5e 			; <UNDEFINED> instruction: 0x260f1a5e
    87b4:	52010000 	andpl	r0, r1, #0
    87b8:	04727006 	ldrbteq	r7, [r2], #-6
    87bc:	91020000 	mrsls	r0, (UNDEF: 2)
    87c0:	26291a58 			; <UNDEFINED> instruction: 0x26291a58
    87c4:	52010000 	andpl	r0, r1, #0
    87c8:	00828006 	addeq	r8, r2, r6
    87cc:	91020000 	mrsls	r0, (UNDEF: 2)
    87d0:	22c31b00 	sbccs	r1, r3, #0, 22
    87d4:	54010000 	strpl	r0, [r1], #-0
    87d8:	046c0d06 	strbteq	r0, [ip], #-3334	; 0xfffff2fa
    87dc:	91020000 	mrsls	r0, (UNDEF: 2)
    87e0:	23e21b74 	mvncs	r1, #116, 22	; 0x1d000
    87e4:	55010000 	strpl	r0, [r1, #-0]
    87e8:	04720d06 	ldrbteq	r0, [r2], #-3334	; 0xfffff2fa
    87ec:	91020000 	mrsls	r0, (UNDEF: 2)
    87f0:	15fc1b70 	ldrbne	r1, [ip, #2928]!	; 0xb70
    87f4:	56010000 	strpl	r0, [r1], -r0
    87f8:	00820c06 	addeq	r0, r2, r6, lsl #24
    87fc:	91020000 	mrsls	r0, (UNDEF: 2)
    8800:	0000216c 	andeq	r2, r0, ip, ror #2
    8804:	00160000 	andseq	r0, r6, r0
    8808:	621b0000 	andsvs	r0, fp, #0
    880c:	01000001 	tsteq	r0, r1
    8810:	8e090684 	cfmadd32hi	mvax4, mvfx0, mvfx9, mvfx4
    8814:	02000000 	andeq	r0, r0, #0
    8818:	00006891 	muleq	r0, r1, r8
    881c:	00268220 	eoreq	r8, r6, r0, lsr #4
    8820:	061b0100 	ldreq	r0, [fp], -r0, lsl #2
    8824:	00024e13 	andeq	r4, r2, r3, lsl lr
    8828:	00000000 	andeq	r0, r0, r0
    882c:	0000b600 	andeq	fp, r0, r0, lsl #12
    8830:	f29c0100 	vaddw.s16	q0, q6, d0
    8834:	1a000011 	bne	8880 <_Min_Stack_Size+0x8480>
    8838:	00000eda 	ldrdeq	r0, [r0], -sl
    883c:	38061b01 	stmdacc	r6, {r0, r8, r9, fp, ip}
    8840:	000006cc 	andeq	r0, r0, ip, asr #13
    8844:	1b6c9102 	blne	1b2cc54 <_Min_Stack_Size+0x1b2c854>
    8848:	0000274f 	andeq	r2, r0, pc, asr #14
    884c:	0c061d01 	stceq	13, cr1, [r6], {1}
    8850:	00000082 	andeq	r0, r0, r2, lsl #1
    8854:	00749102 	rsbseq	r9, r4, r2, lsl #2
    8858:	00286b22 	eoreq	r6, r8, r2, lsr #22
    885c:	05f70100 	ldrbeq	r0, [r7, #256]!	; 0x100
    8860:	00024e13 	andeq	r4, r2, r3, lsl lr
    8864:	00000000 	andeq	r0, r0, r0
    8868:	0000a000 	andeq	sl, r0, r0
    886c:	389c0100 	ldmcc	ip, {r8}
    8870:	1a000012 	bne	88c0 <_Min_Stack_Size+0x84c0>
    8874:	00000eda 	ldrdeq	r0, [r0], -sl
    8878:	3a05f701 	bcc	186484 <_Min_Stack_Size+0x186084>
    887c:	000006cc 	andeq	r0, r0, ip, asr #13
    8880:	216c9102 	cmncs	ip, r2, lsl #2
    8884:	00000000 	andeq	r0, r0, r0
    8888:	00000016 	andeq	r0, r0, r6, lsl r0
    888c:	0001621b 	andeq	r6, r1, fp, lsl r2
    8890:	06050100 	streq	r0, [r5], -r0, lsl #2
    8894:	00008e05 	andeq	r8, r0, r5, lsl #28
    8898:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    889c:	b1220000 			; <UNDEFINED> instruction: 0xb1220000
    88a0:	01000022 	tsteq	r0, r2, lsr #32
    88a4:	4e1305d2 	mrcmi	5, 0, r0, cr3, cr2, {6}
    88a8:	00000002 	andeq	r0, r0, r2
    88ac:	c6000000 	strgt	r0, [r0], -r0
    88b0:	01000000 	mrseq	r0, (UNDEF: 0)
    88b4:	0012749c 	mulseq	r2, ip, r4
    88b8:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    88bc:	d2010000 	andle	r0, r1, #0
    88c0:	06cc3905 	strbeq	r3, [ip], r5, lsl #18
    88c4:	91020000 	mrsls	r0, (UNDEF: 2)
    88c8:	274f1b6c 	strbcs	r1, [pc, -ip, ror #22]
    88cc:	d4010000 	strle	r0, [r1], #-0
    88d0:	00820c05 	addeq	r0, r2, r5, lsl #24
    88d4:	91020000 	mrsls	r0, (UNDEF: 2)
    88d8:	e7200074 			; <UNDEFINED> instruction: 0xe7200074
    88dc:	01000025 	tsteq	r0, r5, lsr #32
    88e0:	4e1305b4 	cfcmp64mi	r0, mvdx3, mvdx4
    88e4:	00000002 	andeq	r0, r0, r2
    88e8:	60000000 	andvs	r0, r0, r0
    88ec:	01000000 	mrseq	r0, (UNDEF: 0)
    88f0:	0012c09c 	mulseq	r2, ip, r0
    88f4:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    88f8:	b4010000 	strlt	r0, [r1], #-0
    88fc:	06cc3c05 	strbeq	r3, [ip], r5, lsl #24
    8900:	91020000 	mrsls	r0, (UNDEF: 2)
    8904:	242b1a74 	strtcs	r1, [fp], #-2676	; 0xfffff58c
    8908:	b4010000 	strlt	r0, [r1], #-0
    890c:	046c4c05 	strbteq	r4, [ip], #-3077	; 0xfffff3fb
    8910:	91020000 	mrsls	r0, (UNDEF: 2)
    8914:	0a911a70 	beq	fe44f2dc <__StackLimit+0xde42f2dc>
    8918:	b4010000 	strlt	r0, [r1], #-0
    891c:	006a5c05 	rsbeq	r5, sl, r5, lsl #24
    8920:	91020000 	mrsls	r0, (UNDEF: 2)
    8924:	5c20006e 	stcpl	0, cr0, [r0], #-440	; 0xfffffe48
    8928:	01000024 	tsteq	r0, r4, lsr #32
    892c:	4e130570 	mrcmi	5, 0, r0, cr3, cr0, {3}
    8930:	00000002 	andeq	r0, r0, r2
    8934:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    8938:	01000000 	mrseq	r0, (UNDEF: 0)
    893c:	00131c9c 	mulseq	r3, ip, ip
    8940:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8944:	70010000 	andvc	r0, r1, r0
    8948:	06cc3d05 	strbeq	r3, [ip], r5, lsl #26
    894c:	91020000 	mrsls	r0, (UNDEF: 2)
    8950:	242b1a6c 	strtcs	r1, [fp], #-2668	; 0xfffff594
    8954:	70010000 	andvc	r0, r1, r0
    8958:	046c4d05 	strbteq	r4, [ip], #-3333	; 0xfffff2fb
    895c:	91020000 	mrsls	r0, (UNDEF: 2)
    8960:	0a911a68 	beq	fe44f308 <__StackLimit+0xde42f308>
    8964:	70010000 	andvc	r0, r1, r0
    8968:	006a5d05 	rsbeq	r5, sl, r5, lsl #26
    896c:	91020000 	mrsls	r0, (UNDEF: 2)
    8970:	6d741e66 	ldclvs	14, cr1, [r4, #-408]!	; 0xfffffe68
    8974:	72010070 	andvc	r0, r1, #112	; 0x70
    8978:	09640d05 	stmdbeq	r4!, {r0, r2, r8, sl, fp}^
    897c:	91020000 	mrsls	r0, (UNDEF: 2)
    8980:	a1200074 			; <UNDEFINED> instruction: 0xa1200074
    8984:	01000028 	tsteq	r0, r8, lsr #32
    8988:	4e13054d 	cfmac32mi	mvfx0, mvfx3, mvfx13
    898c:	00000002 	andeq	r0, r0, r2
    8990:	60000000 	andvs	r0, r0, r0
    8994:	01000000 	mrseq	r0, (UNDEF: 0)
    8998:	0013689c 	mulseq	r3, ip, r8
    899c:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    89a0:	4d010000 	stcmi	0, cr0, [r1, #-0]
    89a4:	06cc3b05 	strbeq	r3, [ip], r5, lsl #22
    89a8:	91020000 	mrsls	r0, (UNDEF: 2)
    89ac:	242b1a74 	strtcs	r1, [fp], #-2676	; 0xfffff58c
    89b0:	4d010000 	stcmi	0, cr0, [r1, #-0]
    89b4:	046c4b05 	strbteq	r4, [ip], #-2821	; 0xfffff4fb
    89b8:	91020000 	mrsls	r0, (UNDEF: 2)
    89bc:	0a911a70 	beq	fe44f384 <__StackLimit+0xde42f384>
    89c0:	4d010000 	stcmi	0, cr0, [r1, #-0]
    89c4:	006a5b05 	rsbeq	r5, sl, r5, lsl #22
    89c8:	91020000 	mrsls	r0, (UNDEF: 2)
    89cc:	5a22006e 	bpl	888b8c <_Min_Stack_Size+0x88878c>
    89d0:	01000027 	tsteq	r0, r7, lsr #32
    89d4:	4e130520 	cfmul64mi	mvdx0, mvdx3, mvdx0
    89d8:	00000002 	andeq	r0, r0, r2
    89dc:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    89e0:	01000000 	mrseq	r0, (UNDEF: 0)
    89e4:	0013b49c 	mulseq	r3, ip, r4
    89e8:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    89ec:	20010000 	andcs	r0, r1, r0
    89f0:	06cc3c05 	strbeq	r3, [ip], r5, lsl #24
    89f4:	91020000 	mrsls	r0, (UNDEF: 2)
    89f8:	242b1a74 	strtcs	r1, [fp], #-2676	; 0xfffff58c
    89fc:	20010000 	andcs	r0, r1, r0
    8a00:	046c4c05 	strbteq	r4, [ip], #-3077	; 0xfffff3fb
    8a04:	91020000 	mrsls	r0, (UNDEF: 2)
    8a08:	0a911a70 	beq	fe44f3d0 <__StackLimit+0xde42f3d0>
    8a0c:	20010000 	andcs	r0, r1, r0
    8a10:	006a5c05 	rsbeq	r5, sl, r5, lsl #24
    8a14:	91020000 	mrsls	r0, (UNDEF: 2)
    8a18:	e520006e 	str	r0, [r0, #-110]!	; 0xffffff92
    8a1c:	01000026 	tsteq	r0, r6, lsr #32
    8a20:	4e1304c5 	cdpmi	4, 1, cr0, cr3, cr5, {6}
    8a24:	00000002 	andeq	r0, r0, r2
    8a28:	44000000 	strmi	r0, [r0], #-0
    8a2c:	01000001 	tsteq	r0, r1
    8a30:	0014409c 	mulseq	r4, ip, r0
    8a34:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8a38:	c5010000 	strgt	r0, [r1, #-0]
    8a3c:	06cc3804 	strbeq	r3, [ip], r4, lsl #16
    8a40:	91020000 	mrsls	r0, (UNDEF: 2)
    8a44:	242b1a64 	strtcs	r1, [fp], #-2660	; 0xfffff59c
    8a48:	c5010000 	strgt	r0, [r1, #-0]
    8a4c:	046c4804 	strbteq	r4, [ip], #-2052	; 0xfffff7fc
    8a50:	91020000 	mrsls	r0, (UNDEF: 2)
    8a54:	0a911a60 	beq	fe44f3dc <__StackLimit+0xde42f3dc>
    8a58:	c5010000 	strgt	r0, [r1, #-0]
    8a5c:	006a5804 	rsbeq	r5, sl, r4, lsl #16
    8a60:	91020000 	mrsls	r0, (UNDEF: 2)
    8a64:	26291a5e 			; <UNDEFINED> instruction: 0x26291a5e
    8a68:	c5010000 	strgt	r0, [r1, #-0]
    8a6c:	00826704 	addeq	r6, r2, r4, lsl #14
    8a70:	91020000 	mrsls	r0, (UNDEF: 2)
    8a74:	22c31b58 	sbccs	r1, r3, #88, 22	; 0x16000
    8a78:	c7010000 	strgt	r0, [r1, -r0]
    8a7c:	046c0d04 	strbteq	r0, [ip], #-3332	; 0xfffff2fc
    8a80:	91020000 	mrsls	r0, (UNDEF: 2)
    8a84:	23e21b74 	mvncs	r1, #116, 22	; 0x1d000
    8a88:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    8a8c:	04720d04 	ldrbteq	r0, [r2], #-3332	; 0xfffff2fc
    8a90:	91020000 	mrsls	r0, (UNDEF: 2)
    8a94:	15fc1b70 	ldrbne	r1, [ip, #2928]!	; 0xb70
    8a98:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    8a9c:	00820c04 	addeq	r0, r2, r4, lsl #24
    8aa0:	91020000 	mrsls	r0, (UNDEF: 2)
    8aa4:	fa20006c 	blx	808c5c <_Min_Stack_Size+0x80885c>
    8aa8:	01000024 	tsteq	r0, r4, lsr #32
    8aac:	4e13046d 	cdpmi	4, 1, cr0, cr3, cr13, {3}
    8ab0:	00000002 	andeq	r0, r0, r2
    8ab4:	24000000 	strcs	r0, [r0], #-0
    8ab8:	01000001 	tsteq	r0, r1
    8abc:	0014cc9c 	mulseq	r4, ip, ip
    8ac0:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8ac4:	6d010000 	stcvs	0, cr0, [r1, #-0]
    8ac8:	06cc3904 	strbeq	r3, [ip], r4, lsl #18
    8acc:	91020000 	mrsls	r0, (UNDEF: 2)
    8ad0:	242b1a64 	strtcs	r1, [fp], #-2660	; 0xfffff59c
    8ad4:	6d010000 	stcvs	0, cr0, [r1, #-0]
    8ad8:	046c4904 	strbteq	r4, [ip], #-2308	; 0xfffff6fc
    8adc:	91020000 	mrsls	r0, (UNDEF: 2)
    8ae0:	0a911a60 	beq	fe44f468 <__StackLimit+0xde42f468>
    8ae4:	6d010000 	stcvs	0, cr0, [r1, #-0]
    8ae8:	006a5904 	rsbeq	r5, sl, r4, lsl #18
    8aec:	91020000 	mrsls	r0, (UNDEF: 2)
    8af0:	26291a5e 			; <UNDEFINED> instruction: 0x26291a5e
    8af4:	6d010000 	stcvs	0, cr0, [r1, #-0]
    8af8:	00826804 	addeq	r6, r2, r4, lsl #16
    8afc:	91020000 	mrsls	r0, (UNDEF: 2)
    8b00:	22c31b58 	sbccs	r1, r3, #88, 22	; 0x16000
    8b04:	6f010000 	svcvs	0x00010000
    8b08:	046c0d04 	strbteq	r0, [ip], #-3332	; 0xfffff2fc
    8b0c:	91020000 	mrsls	r0, (UNDEF: 2)
    8b10:	23e21b74 	mvncs	r1, #116, 22	; 0x1d000
    8b14:	70010000 	andvc	r0, r1, r0
    8b18:	04720d04 	ldrbteq	r0, [r2], #-3332	; 0xfffff2fc
    8b1c:	91020000 	mrsls	r0, (UNDEF: 2)
    8b20:	15fc1b70 	ldrbne	r1, [ip, #2928]!	; 0xb70
    8b24:	71010000 	mrsvc	r0, (UNDEF: 1)
    8b28:	00820c04 	addeq	r0, r2, r4, lsl #24
    8b2c:	91020000 	mrsls	r0, (UNDEF: 2)
    8b30:	ce23006c 	cdpgt	0, 2, cr0, cr3, cr12, {3}
    8b34:	01000012 	tsteq	r0, r2, lsl r0
    8b38:	000d02d3 	ldrdeq	r0, [sp], -r3
    8b3c:	12000000 	andne	r0, r0, #0
    8b40:	01000000 	mrseq	r0, (UNDEF: 0)
    8b44:	0014f49c 	mulseq	r4, ip, r4
    8b48:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8b4c:	d3010000 	movwle	r0, #4096	; 0x1000
    8b50:	06cc3402 	strbeq	r3, [ip], r2, lsl #8
    8b54:	91020000 	mrsls	r0, (UNDEF: 2)
    8b58:	69230074 	stmdbvs	r3!, {r2, r4, r5, r6}
    8b5c:	01000010 	tsteq	r0, r0, lsl r0
    8b60:	000d02c4 	andeq	r0, sp, r4, asr #5
    8b64:	12000000 	andne	r0, r0, #0
    8b68:	01000000 	mrseq	r0, (UNDEF: 0)
    8b6c:	00151c9c 	mulseq	r5, ip, ip
    8b70:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8b74:	c4010000 	strgt	r0, [r1], #-0
    8b78:	06cc3202 	strbeq	r3, [ip], r2, lsl #4
    8b7c:	91020000 	mrsls	r0, (UNDEF: 2)
    8b80:	4c200074 	stcmi	0, cr0, [r0], #-464	; 0xfffffe30
    8b84:	01000024 	tsteq	r0, r4, lsr #32
    8b88:	4e130297 	mrcmi	2, 0, r0, cr3, cr7, {4}
    8b8c:	00000002 	andeq	r0, r0, r2
    8b90:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
    8b94:	01000000 	mrseq	r0, (UNDEF: 0)
    8b98:	0015489c 	mulseq	r5, ip, r8
    8b9c:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8ba0:	97010000 	strls	r0, [r1, -r0]
    8ba4:	06cc3702 	strbeq	r3, [ip], r2, lsl #14
    8ba8:	91020000 	mrsls	r0, (UNDEF: 2)
    8bac:	e0200074 	eor	r0, r0, r4, ror r0
    8bb0:	01000022 	tsteq	r0, r2, lsr #32
    8bb4:	4e13024a 	cdpmi	2, 1, cr0, cr3, cr10, {2}
    8bb8:	00000002 	andeq	r0, r0, r2
    8bbc:	e0000000 	and	r0, r0, r0
    8bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    8bc4:	0015949c 	mulseq	r5, ip, r4
    8bc8:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8bcc:	4a010000 	bmi	48bd4 <_Min_Stack_Size+0x487d4>
    8bd0:	06cc3f02 	strbeq	r3, [ip], r2, lsl #30
    8bd4:	91020000 	mrsls	r0, (UNDEF: 2)
    8bd8:	1e101a74 			; <UNDEFINED> instruction: 0x1e101a74
    8bdc:	4a010000 	bmi	48be4 <_Min_Stack_Size+0x487e4>
    8be0:	00524e02 	subseq	r4, r2, r2, lsl #28
    8be4:	91020000 	mrsls	r0, (UNDEF: 2)
    8be8:	24721a73 	ldrbtcs	r1, [r2], #-2675	; 0xfffff58d
    8bec:	4a010000 	bmi	48bf4 <_Min_Stack_Size+0x487f4>
    8bf0:	00826002 	addeq	r6, r2, r2
    8bf4:	91020000 	mrsls	r0, (UNDEF: 2)
    8bf8:	b520006c 	strlt	r0, [r0, #-108]!	; 0xffffff94
    8bfc:	01000028 	tsteq	r0, r8, lsr #32
    8c00:	4e1301f9 	mrcmi	1, 0, r0, cr3, cr9, {7}
    8c04:	00000002 	andeq	r0, r0, r2
    8c08:	cc000000 	stcgt	0, cr0, [r0], {-0}
    8c0c:	01000000 	mrseq	r0, (UNDEF: 0)
    8c10:	0015d09c 	mulseq	r5, ip, r0
    8c14:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8c18:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    8c1c:	06cc3401 	strbeq	r3, [ip], r1, lsl #8
    8c20:	91020000 	mrsls	r0, (UNDEF: 2)
    8c24:	247f1a74 	ldrbtcs	r1, [pc], #-2676	; 8c2c <_Min_Stack_Size+0x882c>
    8c28:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    8c2c:	00824401 	addeq	r4, r2, r1, lsl #8
    8c30:	91020000 	mrsls	r0, (UNDEF: 2)
    8c34:	8d200070 	stchi	0, cr0, [r0, #-448]!	; 0xfffffe40
    8c38:	01000028 	tsteq	r0, r8, lsr #32
    8c3c:	4e1301b0 	mrcmi	1, 0, r0, cr3, cr0, {5}
    8c40:	00000002 	andeq	r0, r0, r2
    8c44:	aa000000 	bge	8c4c <_Min_Stack_Size+0x884c>
    8c48:	01000000 	mrseq	r0, (UNDEF: 0)
    8c4c:	0015fc9c 	mulseq	r5, ip, ip
    8c50:	0eda1a00 	vfnmseq.f32	s3, s20, s0
    8c54:	b0010000 	andlt	r0, r1, r0
    8c58:	06cc3b01 	strbeq	r3, [ip], r1, lsl #22
    8c5c:	91020000 	mrsls	r0, (UNDEF: 2)
    8c60:	17280074 			; <UNDEFINED> instruction: 0x17280074
    8c64:	01000025 	tsteq	r0, r5, lsr #32
    8c68:	4e130163 	mufmisz	f0, f3, f3
    8c6c:	38000002 	stmdacc	r0, {r1}
    8c70:	9a08001b 	bls	208ce4 <_Min_Stack_Size+0x2088e4>
    8c74:	01000000 	mrseq	r0, (UNDEF: 0)
    8c78:	0eda1a9c 			; <UNDEFINED> instruction: 0x0eda1a9c
    8c7c:	63010000 	movwvs	r0, #4096	; 0x1000
    8c80:	06cc3501 	strbeq	r3, [ip], r1, lsl #10
    8c84:	91020000 	mrsls	r0, (UNDEF: 2)
    8c88:	39000074 	stmdbcc	r0, {r2, r4, r5, r6}
    8c8c:	0400000b 	streq	r0, [r0], #-11
    8c90:	00197c00 	andseq	r7, r9, r0, lsl #24
    8c94:	47010400 	strmi	r0, [r1, -r0, lsl #8]
    8c98:	0c000004 	stceq	0, cr0, [r0], {4}
    8c9c:	00002957 	andeq	r2, r0, r7, asr r9
    8ca0:	000001be 			; <UNDEFINED> instruction: 0x000001be
    8ca4:	000005f8 	strdeq	r0, [r0], -r8
    8ca8:	00000000 	andeq	r0, r0, r0
    8cac:	000046df 	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
    8cb0:	a9060102 	stmdbge	r6, {r1, r8}
    8cb4:	02000007 	andeq	r0, r0, #7
    8cb8:	00000502 	andeq	r0, r0, r2, lsl #10
    8cbc:	04020000 	streq	r0, [r2], #-0
    8cc0:	0001b505 	andeq	fp, r1, r5, lsl #10
    8cc4:	00330300 	eorseq	r0, r3, r0, lsl #6
    8cc8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    8ccc:	0001b005 	andeq	fp, r1, r5
    8cd0:	08010200 	stmdaeq	r1, {r9}
    8cd4:	000007a7 	andeq	r0, r0, r7, lsr #15
    8cd8:	77070202 	strvc	r0, [r7, -r2, lsl #4]
    8cdc:	02000003 	andeq	r0, r0, #3
    8ce0:	00a50704 	adceq	r0, r5, r4, lsl #14
    8ce4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    8ce8:	0000a007 	andeq	sl, r0, r7
    8cec:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    8cf0:	00746e69 	rsbseq	r6, r4, r9, ror #28
    8cf4:	00006203 	andeq	r6, r0, r3, lsl #4
    8cf8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8cfc:	000000aa 	andeq	r0, r0, sl, lsr #1
    8d00:	00006e03 	andeq	r6, r0, r3, lsl #28
    8d04:	29070500 	stmdbcs	r7, {r8, sl}
    8d08:	56020000 	strpl	r0, [r2], -r0
    8d0c:	00006e1a 	andeq	r6, r0, sl, lsl lr
    8d10:	2a200500 	bcs	80a118 <_Min_Stack_Size+0x809d18>
    8d14:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    8d18:	0000921b 	andeq	r9, r0, fp, lsl r2
    8d1c:	293a0600 	ldmdbcs	sl!, {r9, sl}
    8d20:	05040000 	streq	r0, [r4, #-0]
    8d24:	0000a900 	andeq	sl, r0, r0, lsl #18
    8d28:	29d80700 	ldmibcs	r8, {r8, r9, sl}^
    8d2c:	00a90000 	adceq	r0, r9, r0
    8d30:	00000000 	andeq	r0, r0, r0
    8d34:	3c050408 	cfstrscc	mvf0, [r5], {8}
    8d38:	03000029 	movweq	r0, #41	; 0x29
    8d3c:	00861863 	addeq	r1, r6, r3, ror #16
    8d40:	e0050000 	and	r0, r5, r0
    8d44:	04000028 	streq	r0, [r0], #-40	; 0xffffffd8
    8d48:	006e17d8 	ldrdeq	r1, [lr], #-120	; 0xffffff88	; <UNPREDICTABLE>
    8d4c:	b7030000 	strlt	r0, [r3, -r0]
    8d50:	02000000 	andeq	r0, r0, #0
    8d54:	07190408 	ldreq	r0, [r9, -r8, lsl #8]
    8d58:	97050000 	strls	r0, [r5, -r0]
    8d5c:	01000029 	tsteq	r0, r9, lsr #32
    8d60:	00db107a 	sbcseq	r1, fp, sl, ror r0
    8d64:	04090000 	streq	r0, [r9], #-0
    8d68:	000000e1 	andeq	r0, r0, r1, ror #1
    8d6c:	0000fb0a 	andeq	pc, r0, sl, lsl #22
    8d70:	00fb0b00 	rscseq	r0, fp, r0, lsl #22
    8d74:	a90b0000 	stmdbge	fp, {}	; <UNPREDICTABLE>
    8d78:	0b000000 	bleq	8d80 <_Min_Stack_Size+0x8980>
    8d7c:	000000b7 	strheq	r0, [r0], -r7
    8d80:	0000b70b 	andeq	fp, r0, fp, lsl #14
    8d84:	01020000 	mrseq	r0, (UNDEF: 2)
    8d88:	0007b008 	andeq	fp, r7, r8
    8d8c:	00fb0300 	rscseq	r0, fp, r0, lsl #6
    8d90:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    8d94:	2b097e01 	blcs	2685a0 <_Min_Stack_Size+0x2681a0>
    8d98:	0d000001 	stceq	0, cr0, [r0, #-4]
    8d9c:	00746366 	rsbseq	r6, r4, r6, ror #6
    8da0:	3b0b7f01 	blcc	2e89ac <_Min_Stack_Size+0x2e85ac>
    8da4:	00000001 	andeq	r0, r0, r1
    8da8:	6772610d 	ldrbvs	r6, [r2, -sp, lsl #2]!
    8dac:	09800100 	stmibeq	r0, {r8}
    8db0:	000000a9 	andeq	r0, r0, r9, lsr #1
    8db4:	3b0a0004 	blcc	288dcc <_Min_Stack_Size+0x2889cc>
    8db8:	0b000001 	bleq	8dc4 <_Min_Stack_Size+0x89c4>
    8dbc:	000000fb 	strdeq	r0, [r0], -fp
    8dc0:	0000a90b 	andeq	sl, r0, fp, lsl #18
    8dc4:	04090000 	streq	r0, [r9], #-0
    8dc8:	0000012b 	andeq	r0, r0, fp, lsr #2
    8dcc:	002a0905 	eoreq	r0, sl, r5, lsl #18
    8dd0:	03810100 	orreq	r0, r1, #0, 2
    8dd4:	00000107 	andeq	r0, r0, r7, lsl #2
    8dd8:	00014103 	andeq	r4, r1, r3, lsl #2
    8ddc:	29210e00 	stmdbcs	r1!, {r9, sl, fp}
    8de0:	8a010000 	bhi	48de8 <_Min_Stack_Size+0x489e8>
    8de4:	00620503 	rsbeq	r0, r2, r3, lsl #10
    8de8:	00000000 	andeq	r0, r0, r0
    8dec:	00440000 	subeq	r0, r4, r0
    8df0:	9c010000 	stcls	0, cr0, [r1], {-0}
    8df4:	000001ce 	andeq	r0, r0, lr, asr #3
    8df8:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    8dfc:	038a0100 	orreq	r0, sl, #0, 2
    8e00:	00013b16 	andeq	r3, r1, r6, lsl fp
    8e04:	5c910200 	lfmpl	f0, 4, [r1], {0}
    8e08:	6772610f 	ldrbvs	r6, [r2, -pc, lsl #2]!
    8e0c:	038a0100 	orreq	r0, sl, #0, 2
    8e10:	0000a93d 	andeq	sl, r0, sp, lsr r9
    8e14:	58910200 	ldmpl	r1, {r9}
    8e18:	00294a10 	eoreq	r4, r9, r0, lsl sl
    8e1c:	038a0100 	orreq	r0, sl, #0, 2
    8e20:	0001ce4e 	andeq	ip, r1, lr, asr #28
    8e24:	78910200 	ldmvc	r1, {r9}
    8e28:	61761211 	cmnvs	r6, r1, lsl r2
    8e2c:	038c0100 	orreq	r0, ip, #0, 2
    8e30:	0000ab0b 	andeq	sl, r0, fp, lsl #22
    8e34:	68910200 	ldmvs	r1, {r9}
    8e38:	0028c213 	eoreq	ip, r8, r3, lsl r2
    8e3c:	038e0100 	orreq	r0, lr, #0, 2
    8e40:	00014d1b 	andeq	r4, r1, fp, lsl sp
    8e44:	60910200 	addsvs	r0, r1, r0, lsl #4
    8e48:	74657212 	strbtvc	r7, [r5], #-530	; 0xfffffdee
    8e4c:	038f0100 	orreq	r0, pc, #0, 2
    8e50:	0000690d 	andeq	r6, r0, sp, lsl #18
    8e54:	6c910200 	lfmvs	f0, 4, [r1], {0}
    8e58:	02040900 	andeq	r0, r4, #0, 18
    8e5c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    8e60:	000029af 	andeq	r2, r0, pc, lsr #19
    8e64:	05038401 	streq	r8, [r3, #-1025]	; 0xfffffbff
    8e68:	00000062 	andeq	r0, r0, r2, rrx
    8e6c:	00000000 	andeq	r0, r0, r0
    8e70:	0000002c 	andeq	r0, r0, ip, lsr #32
    8e74:	022f9c01 	eoreq	r9, pc, #256	; 0x100
    8e78:	50100000 	andspl	r0, r0, r0
    8e7c:	01000031 	tsteq	r0, r1, lsr r0
    8e80:	2f160384 	svccs	0x00160384
    8e84:	02000002 	andeq	r0, r0, #2
    8e88:	e5107491 	ldr	r7, [r0, #-1169]	; 0xfffffb6f
    8e8c:	01000006 	tsteq	r0, r6
    8e90:	b7250384 	strlt	r0, [r5, -r4, lsl #7]!
    8e94:	02000000 	andeq	r0, r0, #0
    8e98:	4a107091 	bmi	4250e4 <_Min_Stack_Size+0x424ce4>
    8e9c:	01000029 	tsteq	r0, r9, lsr #32
    8ea0:	ce380384 	cdpgt	3, 3, cr0, cr8, cr4, {4}
    8ea4:	02000001 	andeq	r0, r0, #1
    8ea8:	760f6c91 			; <UNDEFINED> instruction: 0x760f6c91
    8eac:	84010061 	strhi	r0, [r1], #-97	; 0xffffff9f
    8eb0:	00ab4803 	adceq	r4, fp, r3, lsl #16
    8eb4:	91020000 	mrsls	r0, (UNDEF: 2)
    8eb8:	04090068 	streq	r0, [r9], #-104	; 0xffffff98
    8ebc:	000000fb 	strdeq	r0, [r0], -fp
    8ec0:	002a390e 	eoreq	r3, sl, lr, lsl #18
    8ec4:	037d0100 	cmneq	sp, #0, 2
    8ec8:	00006205 	andeq	r6, r0, r5, lsl #4
    8ecc:	00000000 	andeq	r0, r0, r0
    8ed0:	00002c00 	andeq	r2, r0, r0, lsl #24
    8ed4:	809c0100 	addshi	r0, ip, r0, lsl #2
    8ed8:	10000002 	andne	r0, r0, r2
    8edc:	0000294a 	andeq	r2, r0, sl, asr #18
    8ee0:	1a037d01 	bne	e82ec <_Min_Stack_Size+0xe7eec>
    8ee4:	000001ce 	andeq	r0, r0, lr, asr #3
    8ee8:	0f6c9102 	svceq	0x006c9102
    8eec:	01006176 	tsteq	r0, r6, ror r1
    8ef0:	ab2a037d 	blge	a89cec <_Min_Stack_Size+0xa898ec>
    8ef4:	02000000 	andeq	r0, r0, #0
    8ef8:	50136891 	mulspl	r3, r1, r8
    8efc:	01000031 	tsteq	r0, r1, lsr r0
    8f00:	8008037f 	andhi	r0, r8, pc, ror r3
    8f04:	02000002 	andeq	r0, r0, #2
    8f08:	14007491 	strne	r7, [r0], #-1169	; 0xfffffb6f
    8f0c:	000000fb 	strdeq	r0, [r0], -fp
    8f10:	00000290 	muleq	r0, r0, r2
    8f14:	00006e15 	andeq	r6, r0, r5, lsl lr
    8f18:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    8f1c:	000029b0 			; <UNDEFINED> instruction: 0x000029b0
    8f20:	05037301 	streq	r7, [r3, #-769]	; 0xfffffcff
    8f24:	00000062 	andeq	r0, r0, r2, rrx
    8f28:	00000000 	andeq	r0, r0, r0
    8f2c:	00000038 	andeq	r0, r0, r8, lsr r0
    8f30:	02fc9c01 	rscseq	r9, ip, #256	; 0x100
    8f34:	50100000 	andspl	r0, r0, r0
    8f38:	01000031 	tsteq	r0, r1, lsr r0
    8f3c:	2f150373 	svccs	0x00150373
    8f40:	02000002 	andeq	r0, r0, #2
    8f44:	e5106491 	ldr	r6, [r0, #-1169]	; 0xfffffb6f
    8f48:	01000006 	tsteq	r0, r6
    8f4c:	b7240373 			; <UNDEFINED> instruction: 0xb7240373
    8f50:	02000000 	andeq	r0, r0, #0
    8f54:	4a106091 	bmi	4211a0 <_Min_Stack_Size+0x420da0>
    8f58:	01000029 	tsteq	r0, r9, lsr #32
    8f5c:	ce370373 	mrcgt	3, 1, r0, cr7, cr3, {3}
    8f60:	02000001 	andeq	r0, r0, #1
    8f64:	12117891 	andsne	r7, r1, #9502720	; 0x910000
    8f68:	01006176 	tsteq	r0, r6, ror r1
    8f6c:	ab0b0375 	blge	2c9d48 <_Min_Stack_Size+0x2c9948>
    8f70:	02000000 	andeq	r0, r0, #0
    8f74:	72126891 	andsvc	r6, r2, #9502720	; 0x910000
    8f78:	01007465 	tsteq	r0, r5, ror #8
    8f7c:	690d0377 	stmdbvs	sp, {r0, r1, r2, r4, r5, r6, r8, r9}
    8f80:	02000000 	andeq	r0, r0, #0
    8f84:	0e006c91 	mcreq	12, 0, r6, cr0, cr1, {4}
    8f88:	000029e3 	andeq	r2, r0, r3, ror #19
    8f8c:	05036901 	streq	r6, [r3, #-2305]	; 0xfffff6ff
    8f90:	00000062 	andeq	r0, r0, r2, rrx
    8f94:	00000000 	andeq	r0, r0, r0
    8f98:	00000038 	andeq	r0, r0, r8, lsr r0
    8f9c:	03589c01 	cmpeq	r8, #256	; 0x100
    8fa0:	50100000 	andspl	r0, r0, r0
    8fa4:	01000031 	tsteq	r0, r1, lsr r0
    8fa8:	2f140369 	svccs	0x00140369
    8fac:	02000002 	andeq	r0, r0, #2
    8fb0:	4a105c91 	bmi	4201fc <_Min_Stack_Size+0x41fdfc>
    8fb4:	01000029 	tsteq	r0, r9, lsr #32
    8fb8:	ce280369 	cdpgt	3, 2, cr0, cr8, cr9, {3}
    8fbc:	02000001 	andeq	r0, r0, #1
    8fc0:	12117491 	andsne	r7, r1, #-1862270976	; 0x91000000
    8fc4:	01006176 	tsteq	r0, r6, ror r1
    8fc8:	ab0b036b 	blge	2c9d7c <_Min_Stack_Size+0x2c997c>
    8fcc:	02000000 	andeq	r0, r0, #0
    8fd0:	72126091 	andsvc	r6, r2, #145	; 0x91
    8fd4:	01007465 	tsteq	r0, r5, ror #8
    8fd8:	690d036d 	stmdbvs	sp, {r0, r2, r3, r5, r6, r8, r9}
    8fdc:	02000000 	andeq	r0, r0, #0
    8fe0:	0e006491 	mcreq	4, 0, r6, cr0, cr1, {4}
    8fe4:	000029b2 			; <UNDEFINED> instruction: 0x000029b2
    8fe8:	05035e01 	streq	r5, [r3, #-3585]	; 0xfffff1ff
    8fec:	00000062 	andeq	r0, r0, r2, rrx
    8ff0:	0800307c 	stmdaeq	r0, {r2, r3, r4, r5, r6, ip, sp}
    8ff4:	00000038 	andeq	r0, r0, r8, lsr r0
    8ff8:	03b49c01 			; <UNDEFINED> instruction: 0x03b49c01
    8ffc:	4a100000 	bmi	409004 <_Min_Stack_Size+0x408c04>
    9000:	01000029 	tsteq	r0, r9, lsr #32
    9004:	ce19035e 	mrcgt	3, 0, r0, cr9, cr14, {2}
    9008:	02000001 	andeq	r0, r0, #1
    900c:	12117091 	andsne	r7, r1, #145	; 0x91
    9010:	01006176 	tsteq	r0, r6, ror r1
    9014:	ab0b0360 	blge	2c9d9c <_Min_Stack_Size+0x2c999c>
    9018:	02000000 	andeq	r0, r0, #0
    901c:	50136091 	mulspl	r3, r1, r0
    9020:	01000031 	tsteq	r0, r1, lsr r0
    9024:	80080362 	andhi	r0, r8, r2, ror #6
    9028:	02000002 	andeq	r0, r0, #2
    902c:	72125c91 	andsvc	r5, r2, #37120	; 0x9100
    9030:	01007465 	tsteq	r0, r5, ror #8
    9034:	690d0363 	stmdbvs	sp, {r0, r1, r5, r6, r8, r9}
    9038:	02000000 	andeq	r0, r0, #0
    903c:	16006491 			; <UNDEFINED> instruction: 0x16006491
    9040:	00002982 	andeq	r2, r0, r2, lsl #19
    9044:	0c024101 	stfeqs	f4, [r2], {1}
    9048:	00000062 	andeq	r0, r0, r2, rrx
    904c:	0800286c 	stmdaeq	r0, {r2, r3, r5, r6, fp, sp}
    9050:	0000080e 	andeq	r0, r0, lr, lsl #16
    9054:	05639c01 	strbeq	r9, [r3, #-3073]!	; 0xfffff3ff
    9058:	6f0f0000 	svcvs	0x000f0000
    905c:	01007475 	tsteq	r0, r5, ror r4
    9060:	cf240241 	svcgt	0x00240241
    9064:	03000000 	movweq	r0, #0
    9068:	107fb491 			; <UNDEFINED> instruction: 0x107fb491
    906c:	00003150 	andeq	r3, r0, r0, asr r1
    9070:	2f024101 	svccs	0x00024101
    9074:	0000022f 	andeq	r0, r0, pc, lsr #4
    9078:	7fb09103 	svcvc	0x00b09103
    907c:	0029ba10 	eoreq	fp, r9, r0, lsl sl
    9080:	02410100 	subeq	r0, r1, #0, 2
    9084:	0000c344 	andeq	ip, r0, r4, asr #6
    9088:	ac910300 	ldcge	3, cr0, [r1], {0}
    908c:	294a107f 	stmdbcs	sl, {r0, r1, r2, r3, r4, r5, r6, ip}^
    9090:	41010000 	mrsmi	r0, (UNDEF: 1)
    9094:	01ce5802 	biceq	r5, lr, r2, lsl #16
    9098:	91030000 	mrsls	r0, (UNDEF: 3)
    909c:	760f7fa8 	strvc	r7, [pc], -r8, lsr #31
    90a0:	41010061 	tstmi	r1, r1, rrx
    90a4:	00ab6802 	adceq	r6, fp, r2, lsl #16
    90a8:	91020000 	mrsls	r0, (UNDEF: 2)
    90ac:	018c1300 	orreq	r1, ip, r0, lsl #6
    90b0:	43010000 	movwmi	r0, #4096	; 0x1000
    90b4:	006e1002 	rsbeq	r1, lr, r2
    90b8:	91020000 	mrsls	r0, (UNDEF: 2)
    90bc:	291b136c 	ldmdbcs	fp, {r2, r3, r5, r6, r8, r9, ip}
    90c0:	43010000 	movwmi	r0, #4096	; 0x1000
    90c4:	006e1702 	rsbeq	r1, lr, r2, lsl #14
    90c8:	91020000 	mrsls	r0, (UNDEF: 2)
    90cc:	2a2f1368 	bcs	bcde74 <_Min_Stack_Size+0xbcda74>
    90d0:	43010000 	movwmi	r0, #4096	; 0x1000
    90d4:	006e1e02 	rsbeq	r1, lr, r2, lsl #28
    90d8:	91020000 	mrsls	r0, (UNDEF: 2)
    90dc:	006e1264 	rsbeq	r1, lr, r4, ror #4
    90e0:	29024301 	stmdbcs	r2, {r0, r8, r9, lr}
    90e4:	0000006e 	andeq	r0, r0, lr, rrx
    90e8:	12609102 	rsbne	r9, r0, #-2147483648	; 0x80000000
    90ec:	00786469 	rsbseq	r6, r8, r9, ror #8
    90f0:	0a024401 	beq	9a0fc <_Min_Stack_Size+0x99cfc>
    90f4:	000000b7 	strheq	r0, [r0], -r7
    90f8:	175c9102 	ldrbne	r9, [ip, -r2, lsl #2]
    90fc:	080029a4 	stmdaeq	r0, {r2, r5, r7, r8, fp, sp}
    9100:	0000002a 	andeq	r0, r0, sl, lsr #32
    9104:	0000048c 	andeq	r0, r0, ip, lsl #9
    9108:	01007712 	tsteq	r0, r2, lsl r7
    910c:	6911026c 	ldmdbvs	r1, {r2, r3, r5, r6, r9}
    9110:	02000000 	andeq	r0, r0, #0
    9114:	17004891 			; <UNDEFINED> instruction: 0x17004891
    9118:	08002a0c 	stmdaeq	r0, {r2, r3, r9, fp, sp}
    911c:	00000018 	andeq	r0, r0, r8, lsl r0
    9120:	000004aa 	andeq	r0, r0, sl, lsr #9
    9124:	002a1b13 	eoreq	r1, sl, r3, lsl fp
    9128:	02800100 	addeq	r0, r0, #0, 2
    912c:	00006913 	andeq	r6, r0, r3, lsl r9
    9130:	44910200 	ldrmi	r0, [r1], #512	; 0x200
    9134:	2c6c1700 	stclcs	7, cr1, [ip], #-0
    9138:	01ec0800 	mvneq	r0, r0, lsl #16
    913c:	05200000 	streq	r0, [r0, #-0]!
    9140:	34130000 	ldrcc	r0, [r3], #-0
    9144:	01000001 	tsteq	r0, r1
    9148:	6e1602b4 	mrcvs	2, 0, r0, cr6, cr4, {5}
    914c:	02000000 	andeq	r0, r0, #0
    9150:	0a175891 	beq	5df39c <_Min_Stack_Size+0x5def9c>
    9154:	3c08002d 	stccc	0, cr0, [r8], {45}	; 0x2d
    9158:	e6000000 	str	r0, [r0], -r0
    915c:	13000004 	movwne	r0, #4
    9160:	0000080f 	andeq	r0, r0, pc, lsl #16
    9164:	1802db01 	stmdane	r2, {r0, r8, r9, fp, ip, lr, pc}
    9168:	0000003a 	andeq	r0, r0, sl, lsr r0
    916c:	7fbc9103 	svcvc	0x00bc9103
    9170:	2d481700 	stclcs	7, cr1, [r8, #-0]
    9174:	00680800 	rsbeq	r0, r8, r0, lsl #16
    9178:	05050000 	streq	r0, [r5, #-0]
    917c:	0f130000 	svceq	0x00130000
    9180:	01000008 	tsteq	r0, r8
    9184:	691702df 	ldmdbvs	r7, {r0, r1, r2, r3, r4, r6, r7, r9}
    9188:	03000000 	movweq	r0, #0
    918c:	007fb891 			; <UNDEFINED> instruction: 0x007fb891
    9190:	002df418 	eoreq	pc, sp, r8, lsl r4	; <UNPREDICTABLE>
    9194:	00005c08 	andeq	r5, r0, r8, lsl #24
    9198:	080f1300 	stmdaeq	pc, {r8, r9, ip}	; <UNPREDICTABLE>
    919c:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
    91a0:	00752002 	rsbseq	r2, r5, r2
    91a4:	91020000 	mrsls	r0, (UNDEF: 2)
    91a8:	17000040 	strne	r0, [r0, -r0, asr #32]
    91ac:	08002ea0 	stmdaeq	r0, {r5, r7, r9, sl, fp, sp}
    91b0:	00000074 	andeq	r0, r0, r4, ror r0
    91b4:	0000053c 	andeq	r0, r0, ip, lsr r5
    91b8:	01006c12 	tsteq	r0, r2, lsl ip
    91bc:	6e160309 	cdpvs	3, 1, cr0, cr6, cr9, {0}
    91c0:	02000000 	andeq	r0, r0, #0
    91c4:	18005491 	stmdane	r0, {r0, r4, r7, sl, ip, lr}
    91c8:	08002f14 	stmdaeq	r0, {r2, r4, r8, r9, sl, fp, sp}
    91cc:	000000c4 	andeq	r0, r0, r4, asr #1
    91d0:	01007012 	tsteq	r0, r2, lsl r0
    91d4:	ce15031d 	mrcgt	3, 0, r0, cr5, cr13, {0}
    91d8:	02000001 	andeq	r0, r0, #1
    91dc:	6c125091 	ldcvs	0, cr5, [r2], {145}	; 0x91
    91e0:	031e0100 	tsteq	lr, #0, 2
    91e4:	00006e16 	andeq	r6, r0, r6, lsl lr
    91e8:	4c910200 	lfmmi	f0, 4, [r1], {0}
    91ec:	51160000 	tstpl	r6, r0
    91f0:	01000029 	tsteq	r0, r9, lsr #32
    91f4:	b70f0153 	smlsdlt	pc, r3, r1, r0	; <UNPREDICTABLE>
    91f8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    91fc:	b4080023 	strlt	r0, [r8], #-35	; 0xffffffdd
    9200:	01000004 	tsteq	r0, r4
    9204:	0006a19c 	muleq	r6, ip, r1
    9208:	756f0f00 	strbvc	r0, [pc, #-3840]!	; 8310 <_Min_Stack_Size+0x7f10>
    920c:	53010074 	movwpl	r0, #4212	; 0x1074
    9210:	00cf2201 	sbceq	r2, pc, r1, lsl #4
    9214:	91030000 	mrsls	r0, (UNDEF: 3)
    9218:	50107fa4 	andspl	r7, r0, r4, lsr #31
    921c:	01000031 	tsteq	r0, r1, lsr r0
    9220:	2f2d0153 	svccs	0x002d0153
    9224:	03000002 	movweq	r0, #2
    9228:	0f7fa091 	svceq	0x007fa091
    922c:	00786469 	rsbseq	r6, r8, r9, ror #8
    9230:	3c015301 	stccc	3, cr5, [r1], {1}
    9234:	000000b7 	strheq	r0, [r0], -r7
    9238:	7f9c9103 	svcvc	0x009c9103
    923c:	0029ba10 	eoreq	fp, r9, r0, lsl sl
    9240:	01530100 	cmpeq	r3, r0, lsl #2
    9244:	0000b748 	andeq	fp, r0, r8, asr #14
    9248:	98910300 	ldmls	r1, {r8, r9}
    924c:	080f107f 	stmdaeq	pc, {r0, r1, r2, r3, r4, r5, r6, ip}	; <UNPREDICTABLE>
    9250:	53010000 	movwpl	r0, #4096	; 0x1000
    9254:	06a15701 	strteq	r5, [r1], r1, lsl #14
    9258:	91020000 	mrsls	r0, (UNDEF: 2)
    925c:	2a1b1000 	bcs	6cd264 <_Min_Stack_Size+0x6cce64>
    9260:	53010000 	movwpl	r0, #4096	; 0x1000
    9264:	006e6b01 	rsbeq	r6, lr, r1, lsl #22
    9268:	91020000 	mrsls	r0, (UNDEF: 2)
    926c:	291b1008 	ldmdbcs	fp, {r3, ip}
    9270:	53010000 	movwpl	r0, #4096	; 0x1000
    9274:	006e7e01 	rsbeq	r7, lr, r1, lsl #28
    9278:	91020000 	mrsls	r0, (UNDEF: 2)
    927c:	018c100c 	orreq	r1, ip, ip
    9280:	53010000 	movwpl	r0, #4096	; 0x1000
    9284:	006e9201 	rsbeq	r9, lr, r1, lsl #4
    9288:	91020000 	mrsls	r0, (UNDEF: 2)
    928c:	75621210 	strbvc	r1, [r2, #-528]!	; 0xfffffdf0
    9290:	55010066 	strpl	r0, [r1, #-102]	; 0xffffff9a
    9294:	06ad0801 	strteq	r0, [sp], r1, lsl #16
    9298:	91030000 	mrsls	r0, (UNDEF: 3)
    929c:	6c127fa8 	ldcvs	15, cr7, [r2], {168}	; 0xa8
    92a0:	01006e65 	tsteq	r0, r5, ror #28
    92a4:	b70a0156 	smlsdlt	sl, r6, r1, r0
    92a8:	02000000 	andeq	r0, r0, #0
    92ac:	cf136c91 	svcgt	0x00136c91
    92b0:	01000028 	tsteq	r0, r8, lsr #32
    92b4:	a10a0157 	tstge	sl, r7, asr r1
    92b8:	02000006 	andeq	r0, r0, #6
    92bc:	34135091 	ldrcc	r5, [r3], #-145	; 0xffffff6f
    92c0:	01000029 	tsteq	r0, r9, lsr #32
    92c4:	cd17015a 	ldfgts	f0, [r7, #-360]	; 0xfffffe98
    92c8:	05000006 	streq	r0, [r0, #-6]
    92cc:	003f2803 	eorseq	r2, pc, r3, lsl #16
    92d0:	292b1308 	stmdbcs	fp!, {r3, r8, r9, ip}
    92d4:	6f010000 	svcvs	0x00010000
    92d8:	06d20801 	ldrbeq	r0, [r2], r1, lsl #16
    92dc:	91020000 	mrsls	r0, (UNDEF: 2)
    92e0:	29d2136b 	ldmibcs	r2, {r0, r1, r3, r5, r6, r8, r9, ip}^
    92e4:	7f010000 	svcvc	0x00010000
    92e8:	00620701 	rsbeq	r0, r2, r1, lsl #14
    92ec:	91020000 	mrsls	r0, (UNDEF: 2)
    92f0:	6d741264 	lfmvs	f1, 2, [r4, #-400]!	; 0xfffffe70
    92f4:	80010070 	andhi	r0, r1, r0, ror r0
    92f8:	06a10a01 	strteq	r0, [r1], r1, lsl #20
    92fc:	91020000 	mrsls	r0, (UNDEF: 2)
    9300:	28f91348 	ldmcs	r9!, {r3, r6, r8, r9, ip}^
    9304:	81010000 	mrshi	r0, (UNDEF: 1)
    9308:	00541101 	subseq	r1, r4, r1, lsl #2
    930c:	91020000 	mrsls	r0, (UNDEF: 2)
    9310:	267c1860 	ldrbtcs	r1, [ip], -r0, ror #16
    9314:	00c00800 	sbceq	r0, r0, r0, lsl #16
    9318:	e5130000 	ldr	r0, [r3, #-0]
    931c:	01000006 	tsteq	r0, r6
    9320:	6e12019c 	mrcvs	1, 0, r0, cr2, cr12, {4}
    9324:	02000000 	andeq	r0, r0, #0
    9328:	00005c91 	muleq	r0, r1, ip
    932c:	1e040802 	cdpne	8, 0, cr0, cr4, cr2, {0}
    9330:	03000007 	movweq	r0, #7
    9334:	000006a1 	andeq	r0, r0, r1, lsr #13
    9338:	0000fb14 	andeq	pc, r0, r4, lsl fp	; <UNPREDICTABLE>
    933c:	0006bd00 	andeq	fp, r6, r0, lsl #26
    9340:	006e1500 	rsbeq	r1, lr, r0, lsl #10
    9344:	001f0000 	andseq	r0, pc, r0
    9348:	0006a814 	andeq	sl, r6, r4, lsl r8
    934c:	0006cd00 	andeq	ip, r6, r0, lsl #26
    9350:	006e1500 	rsbeq	r1, lr, r0, lsl #10
    9354:	00090000 	andeq	r0, r9, r0
    9358:	0006bd03 	andeq	fp, r6, r3, lsl #26
    935c:	02010200 	andeq	r0, r1, #0, 4
    9360:	000029dd 	ldrdeq	r2, [r0], -sp
    9364:	0029a416 	eoreq	sl, r9, r6, lsl r4
    9368:	01190100 	tsteq	r9, r0, lsl #2
    936c:	0000b70f 	andeq	fp, r0, pc, lsl #14
    9370:	0022e800 	eoreq	lr, r2, r0, lsl #16
    9374:	0000ce08 	andeq	ip, r0, r8, lsl #28
    9378:	cf9c0100 	svcgt	0x009c0100
    937c:	0f000007 	svceq	0x00000007
    9380:	0074756f 	rsbseq	r7, r4, pc, ror #10
    9384:	27011901 	strcs	r1, [r1, -r1, lsl #18]
    9388:	000000cf 	andeq	r0, r0, pc, asr #1
    938c:	104c9102 	subne	r9, ip, r2, lsl #2
    9390:	00003150 	andeq	r3, r0, r0, asr r1
    9394:	32011901 	andcc	r1, r1, #16384	; 0x4000
    9398:	0000022f 	andeq	r0, r0, pc, lsr #4
    939c:	0f489102 	svceq	0x00489102
    93a0:	00786469 	rsbseq	r6, r8, r9, ror #8
    93a4:	41011901 	tstmi	r1, r1, lsl #18
    93a8:	000000b7 	strheq	r0, [r0], -r7
    93ac:	10449102 	subne	r9, r4, r2, lsl #2
    93b0:	000029ba 			; <UNDEFINED> instruction: 0x000029ba
    93b4:	4d011901 	vstrmi.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    93b8:	000000b7 	strheq	r0, [r0], -r7
    93bc:	10409102 	subne	r9, r0, r2, lsl #2
    93c0:	0000080f 	andeq	r0, r0, pc, lsl #16
    93c4:	63011901 	movwvs	r1, #6401	; 0x1901
    93c8:	00000054 	andeq	r0, r0, r4, asr r0
    93cc:	10009102 	andne	r9, r0, r2, lsl #2
    93d0:	0000292b 	andeq	r2, r0, fp, lsr #18
    93d4:	6f011901 	svcvs	0x00011901
    93d8:	000006d2 	ldrdeq	r0, [r0], -r2
    93dc:	10049102 	andne	r9, r4, r2, lsl #2
    93e0:	00000134 	andeq	r0, r0, r4, lsr r1
    93e4:	87011901 	strhi	r1, [r1, -r1, lsl #18]
    93e8:	00000054 	andeq	r0, r0, r4, asr r0
    93ec:	10089102 	andne	r9, r8, r2, lsl #2
    93f0:	00002a1b 	andeq	r2, r0, fp, lsl sl
    93f4:	9a011901 	bls	4f800 <_Min_Stack_Size+0x4f400>
    93f8:	0000006e 	andeq	r0, r0, lr, rrx
    93fc:	100c9102 	andne	r9, ip, r2, lsl #2
    9400:	0000291b 	andeq	r2, r0, fp, lsl r9
    9404:	ad011901 	vstrge.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    9408:	0000006e 	andeq	r0, r0, lr, rrx
    940c:	10109102 	andsne	r9, r0, r2, lsl #2
    9410:	0000018c 	andeq	r0, r0, ip, lsl #3
    9414:	c1011901 	tstgt	r1, r1, lsl #18
    9418:	0000006e 	andeq	r0, r0, lr, rrx
    941c:	12149102 	andsne	r9, r4, #-2147483648	; 0x80000000
    9420:	00667562 	rsbeq	r7, r6, r2, ror #10
    9424:	08011b01 	stmdaeq	r1, {r0, r8, r9, fp, ip}
    9428:	000006ad 	andeq	r0, r0, sp, lsr #13
    942c:	12509102 	subsne	r9, r0, #-2147483648	; 0x80000000
    9430:	006e656c 	rsbeq	r6, lr, ip, ror #10
    9434:	0a011c01 	beq	50440 <_Min_Stack_Size+0x50040>
    9438:	000000b7 	strheq	r0, [r0], -r7
    943c:	18749102 	ldmdane	r4!, {r1, r8, ip, pc}^
    9440:	08002318 	stmdaeq	r0, {r3, r4, r8, r9, sp}
    9444:	0000005c 	andeq	r0, r0, ip, asr r0
    9448:	0029f013 	eoreq	pc, r9, r3, lsl r0	; <UNPREDICTABLE>
    944c:	01260100 			; <UNDEFINED> instruction: 0x01260100
    9450:	00010212 	andeq	r0, r1, r2, lsl r2
    9454:	73910200 	orrsvc	r0, r1, #0, 4
    9458:	44190000 	ldrmi	r0, [r9], #-0
    945c:	01000029 	tsteq	r0, r9, lsr #32
    9460:	00b70fe3 	adcseq	r0, r7, r3, ror #31
    9464:	21300000 	teqcs	r0, r0
    9468:	01b80800 			; <UNDEFINED> instruction: 0x01b80800
    946c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9470:	0000088f 	andeq	r0, r0, pc, lsl #17
    9474:	74756f1a 	ldrbtvc	r6, [r5], #-3866	; 0xfffff0e6
    9478:	29e30100 	stmibcs	r3!, {r8}^
    947c:	000000cf 	andeq	r0, r0, pc, asr #1
    9480:	1b749102 	blne	1d2d890 <_Min_Stack_Size+0x1d2d490>
    9484:	00003150 	andeq	r3, r0, r0, asr r1
    9488:	2f34e301 	svccs	0x0034e301
    948c:	02000002 	andeq	r0, r0, #2
    9490:	691a7091 	ldmdbvs	sl, {r0, r4, r7, ip, sp, lr}
    9494:	01007864 	tsteq	r0, r4, ror #16
    9498:	00b743e3 	adcseq	r4, r7, r3, ror #7
    949c:	91020000 	mrsls	r0, (UNDEF: 2)
    94a0:	29ba1b6c 	ldmibcs	sl!, {r2, r3, r5, r6, r8, r9, fp, ip}
    94a4:	e3010000 	movw	r0, #4096	; 0x1000
    94a8:	0000b74f 	andeq	fp, r0, pc, asr #14
    94ac:	68910200 	ldmvs	r1, {r9}
    94b0:	6675621a 			; <UNDEFINED> instruction: 0x6675621a
    94b4:	5de30100 	stfple	f0, [r3]
    94b8:	0000022f 	andeq	r0, r0, pc, lsr #4
    94bc:	1a009102 	bne	2d8cc <_Min_Stack_Size+0x2d4cc>
    94c0:	006e656c 	rsbeq	r6, lr, ip, ror #10
    94c4:	b769e301 	strblt	lr, [r9, -r1, lsl #6]!
    94c8:	02000000 	andeq	r0, r0, #0
    94cc:	2b1b0491 	blcs	6ca718 <_Min_Stack_Size+0x6ca318>
    94d0:	01000029 	tsteq	r0, r9, lsr #32
    94d4:	06d273e3 	ldrbeq	r7, [r2], r3, ror #7
    94d8:	91020000 	mrsls	r0, (UNDEF: 2)
    94dc:	01341b08 	teqeq	r4, r8, lsl #22
    94e0:	e3010000 	movw	r0, #4096	; 0x1000
    94e4:	00006e8a 	andeq	r6, r0, sl, lsl #29
    94e8:	0c910200 	lfmeq	f0, 4, [r1], {0}
    94ec:	002a1b1b 	eoreq	r1, sl, fp, lsl fp
    94f0:	9de30100 	stflse	f0, [r3]
    94f4:	0000006e 	andeq	r0, r0, lr, rrx
    94f8:	1b109102 	blne	42d908 <_Min_Stack_Size+0x42d508>
    94fc:	0000291b 	andeq	r2, r0, fp, lsl r9
    9500:	6eb0e301 	cdpvs	3, 11, cr14, cr0, cr1, {0}
    9504:	02000000 	andeq	r0, r0, #0
    9508:	8c1b1491 	cfldrshi	mvf1, [fp], {145}	; 0x91
    950c:	01000001 	tsteq	r0, r1
    9510:	006ec4e3 	rsbeq	ip, lr, r3, ror #9
    9514:	91020000 	mrsls	r0, (UNDEF: 2)
    9518:	00190018 	andseq	r0, r9, r8, lsl r0
    951c:	0100002a 	tsteq	r0, sl, lsr #32
    9520:	00b70fc7 	adcseq	r0, r7, r7, asr #31
    9524:	20900000 	addscs	r0, r0, r0
    9528:	00a00800 	adceq	r0, r0, r0, lsl #16
    952c:	9c010000 	stcls	0, cr0, [r1], {-0}
    9530:	00000948 	andeq	r0, r0, r8, asr #18
    9534:	74756f1a 	ldrbtvc	r6, [r5], #-3866	; 0xfffff0e6
    9538:	25c70100 	strbcs	r0, [r7, #256]	; 0x100
    953c:	000000cf 	andeq	r0, r0, pc, asr #1
    9540:	1b649102 	blne	192d950 <_Min_Stack_Size+0x192d550>
    9544:	00003150 	andeq	r3, r0, r0, asr r1
    9548:	2f30c701 	svccs	0x0030c701
    954c:	02000002 	andeq	r0, r0, #2
    9550:	691a6091 	ldmdbvs	sl, {r0, r4, r7, sp, lr}
    9554:	01007864 	tsteq	r0, r4, ror #16
    9558:	00b73fc7 	adcseq	r3, r7, r7, asr #31
    955c:	91020000 	mrsls	r0, (UNDEF: 2)
    9560:	29ba1b5c 	ldmibcs	sl!, {r2, r3, r4, r6, r8, r9, fp, ip}
    9564:	c7010000 	strgt	r0, [r1, -r0]
    9568:	0000b74b 	andeq	fp, r0, fp, asr #14
    956c:	58910200 	ldmpl	r1, {r9}
    9570:	6675621a 			; <UNDEFINED> instruction: 0x6675621a
    9574:	5fc70100 	svcpl	0x00c70100
    9578:	000001ce 	andeq	r0, r0, lr, asr #3
    957c:	1a009102 	bne	2d98c <_Min_Stack_Size+0x2d58c>
    9580:	006e656c 	rsbeq	r6, lr, ip, ror #10
    9584:	b76bc701 	strblt	ip, [fp, -r1, lsl #14]!
    9588:	02000000 	andeq	r0, r0, #0
    958c:	1b1b0491 	blne	6ca7d8 <_Min_Stack_Size+0x6ca3d8>
    9590:	01000029 	tsteq	r0, r9, lsr #32
    9594:	006e7dc7 	rsbeq	r7, lr, r7, asr #27
    9598:	91020000 	mrsls	r0, (UNDEF: 2)
    959c:	018c1b08 	orreq	r1, ip, r8, lsl #22
    95a0:	c7010000 	strgt	r0, [r1, -r0]
    95a4:	00006e91 	muleq	r0, r1, lr
    95a8:	0c910200 	lfmeq	f0, 4, [r1], {0}
    95ac:	0029111c 	eoreq	r1, r9, ip, lsl r1
    95b0:	10c90100 	sbcne	r0, r9, r0, lsl #2
    95b4:	000000c3 	andeq	r0, r0, r3, asr #1
    95b8:	18689102 	stmdane	r8!, {r1, r8, ip, pc}^
    95bc:	080020b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, sp}
    95c0:	00000024 	andeq	r0, r0, r4, lsr #32
    95c4:	0100691d 	tsteq	r0, sp, lsl r9
    95c8:	00b711cd 	adcseq	r1, r7, sp, asr #3
    95cc:	91020000 	mrsls	r0, (UNDEF: 2)
    95d0:	1900006c 	stmdbne	r0, {r2, r3, r5, r6}
    95d4:	000029c1 	andeq	r2, r0, r1, asr #19
    95d8:	6e15bc01 	cdpvs	12, 1, cr11, cr5, cr1, {0}
    95dc:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    95e0:	48080020 	stmdami	r8, {r5}
    95e4:	01000000 	mrseq	r0, (UNDEF: 0)
    95e8:	00097f9c 	muleq	r9, ip, pc	; <UNPREDICTABLE>
    95ec:	74731a00 	ldrbtvc	r1, [r3], #-2560	; 0xfffff600
    95f0:	bc010072 	stclt	0, cr0, [r1], {114}	; 0x72
    95f4:	00097f28 	andeq	r7, r9, r8, lsr #30
    95f8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    95fc:	0100691d 	tsteq	r0, sp, lsl r9
    9600:	006e10be 	strhteq	r1, [lr], #-14
    9604:	91020000 	mrsls	r0, (UNDEF: 2)
    9608:	04090074 	streq	r0, [r9], #-116	; 0xffffff8c
    960c:	000001ce 	andeq	r0, r0, lr, asr #3
    9610:	0029ec1e 	eoreq	lr, r9, lr, lsl ip
    9614:	14b50100 	ldrtne	r0, [r5], #256	; 0x100
    9618:	000006d2 	ldrdeq	r0, [r0], -r2
    961c:	0800201c 	stmdaeq	r0, {r2, r3, r4, sp}
    9620:	0000002c 	andeq	r0, r0, ip, lsr #32
    9624:	09ae9c01 	stmibeq	lr!, {r0, sl, fp, ip, pc}
    9628:	631a0000 	tstvs	sl, #0
    962c:	b5010068 	strlt	r0, [r1, #-104]	; 0xffffff98
    9630:	0000fb23 	andeq	pc, r0, r3, lsr #22
    9634:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    9638:	29c71e00 	stmibcs	r7, {r9, sl, fp, ip}^
    963c:	ab010000 	blge	49644 <_Min_Stack_Size+0x49244>
    9640:	00006e1c 	andeq	r6, r0, ip, lsl lr
    9644:	001fe400 	andseq	lr, pc, r0, lsl #8
    9648:	00003808 	andeq	r3, r0, r8, lsl #16
    964c:	f49c0100 			; <UNDEFINED> instruction: 0xf49c0100
    9650:	1a000009 	bne	967c <_Min_Stack_Size+0x927c>
    9654:	00727473 	rsbseq	r7, r2, r3, ror r4
    9658:	ce33ab01 	vaddgt.f64	d10, d3, d1
    965c:	02000001 	andeq	r0, r0, #1
    9660:	f11b6c91 			; <UNDEFINED> instruction: 0xf11b6c91
    9664:	01000028 	tsteq	r0, r8, lsr #32
    9668:	00b73fab 	adcseq	r3, r7, fp, lsr #31
    966c:	91020000 	mrsls	r0, (UNDEF: 2)
    9670:	00731d68 	rsbseq	r1, r3, r8, ror #26
    9674:	ce0fad01 	cdpgt	13, 0, cr10, cr15, cr1, {0}
    9678:	02000001 	andeq	r0, r0, #1
    967c:	1f007491 	svcne	0x00007491
    9680:	000028fe 	strdeq	r2, [r0], -lr
    9684:	00149f01 	andseq	r9, r4, r1, lsl #30
    9688:	2c000000 	stccs	0, cr0, [r0], {-0}
    968c:	01000000 	mrseq	r0, (UNDEF: 0)
    9690:	000a479c 	muleq	sl, ip, r7
    9694:	29f61b00 	ldmibcs	r6!, {r8, r9, fp, ip}^
    9698:	9f010000 	svcls	0x00010000
    969c:	0000fb22 	andeq	pc, r0, r2, lsr #22
    96a0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    96a4:	0031501b 	eorseq	r5, r1, fp, lsl r0
    96a8:	339f0100 	orrscc	r0, pc, #0, 2
    96ac:	000000a9 	andeq	r0, r0, r9, lsr #1
    96b0:	1a709102 	bne	1c2dac0 <_Min_Stack_Size+0x1c2d6c0>
    96b4:	00786469 	rsbseq	r6, r8, r9, ror #8
    96b8:	b7429f01 	strblt	r9, [r2, -r1, lsl #30]
    96bc:	02000000 	andeq	r0, r0, #0
    96c0:	ba1b6c91 	blt	6e490c <_Min_Stack_Size+0x6e450c>
    96c4:	01000029 	tsteq	r0, r9, lsr #32
    96c8:	00b74e9f 	umlalseq	r4, r7, pc, lr	; <UNPREDICTABLE>
    96cc:	91020000 	mrsls	r0, (UNDEF: 2)
    96d0:	e71f0068 	ldr	r0, [pc, -r8, rrx]
    96d4:	01000028 	tsteq	r0, r8, lsr #32
    96d8:	1fbe1495 	svcne	0x00be1495
    96dc:	00260800 	eoreq	r0, r6, r0, lsl #16
    96e0:	9c010000 	stcls	0, cr0, [r1], {-0}
    96e4:	00000a9a 	muleq	r0, sl, sl
    96e8:	0029f61b 	eoreq	pc, r9, fp, lsl r6	; <UNPREDICTABLE>
    96ec:	23950100 	orrscs	r0, r5, #0, 2
    96f0:	000000fb 	strdeq	r0, [r0], -fp
    96f4:	1b779102 	blne	1dedb04 <_Min_Stack_Size+0x1ded704>
    96f8:	00003150 	andeq	r3, r0, r0, asr r1
    96fc:	a9349501 	ldmdbge	r4!, {r0, r8, sl, ip, pc}
    9700:	02000000 	andeq	r0, r0, #0
    9704:	691a7091 	ldmdbvs	sl, {r0, r4, r7, ip, sp, lr}
    9708:	01007864 	tsteq	r0, r4, ror #16
    970c:	00b74395 	umlalseq	r4, r7, r5, r3
    9710:	91020000 	mrsls	r0, (UNDEF: 2)
    9714:	29ba1b6c 	ldmibcs	sl!, {r2, r3, r5, r6, r8, r9, fp, ip}
    9718:	95010000 	strls	r0, [r1, #-0]
    971c:	0000b74f 	andeq	fp, r0, pc, asr #14
    9720:	68910200 	ldmvs	r1, {r9}
    9724:	298d2000 	stmibcs	sp, {sp}
    9728:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    972c:	001fa414 	andseq	sl, pc, r4, lsl r4	; <UNPREDICTABLE>
    9730:	00001a08 	andeq	r1, r0, r8, lsl #20
    9734:	ed9c0100 	ldfs	f0, [ip]
    9738:	1b00000a 	blne	9768 <_Min_Stack_Size+0x9368>
    973c:	000029f6 	strdeq	r2, [r0], -r6
    9740:	fb238e01 	blx	8ecf4e <_Min_Stack_Size+0x8ecb4e>
    9744:	02000000 	andeq	r0, r0, #0
    9748:	501b7791 	mulspl	fp, r1, r7
    974c:	01000031 	tsteq	r0, r1, lsr r0
    9750:	00a9348e 	adceq	r3, r9, lr, lsl #9
    9754:	91020000 	mrsls	r0, (UNDEF: 2)
    9758:	64691a70 	strbtvs	r1, [r9], #-2672	; 0xfffff590
    975c:	8e010078 	mcrhi	0, 0, r0, cr1, cr8, {3}
    9760:	0000b743 	andeq	fp, r0, r3, asr #14
    9764:	6c910200 	lfmvs	f0, 4, [r1], {0}
    9768:	0029ba1b 	eoreq	fp, r9, fp, lsl sl
    976c:	4f8e0100 	svcmi	0x008e0100
    9770:	000000b7 	strheq	r0, [r0], -r7
    9774:	00689102 	rsbeq	r9, r8, r2, lsl #2
    9778:	0028d421 	eoreq	sp, r8, r1, lsr #8
    977c:	14850100 	strne	r0, [r5], #256	; 0x100
    9780:	00000000 	andeq	r0, r0, r0
    9784:	0000002c 	andeq	r0, r0, ip, lsr #32
    9788:	f61b9c01 			; <UNDEFINED> instruction: 0xf61b9c01
    978c:	01000029 	tsteq	r0, r9, lsr #32
    9790:	00fb2585 	rscseq	r2, fp, r5, lsl #11
    9794:	91020000 	mrsls	r0, (UNDEF: 2)
    9798:	31501b77 	cmpcc	r0, r7, ror fp
    979c:	85010000 	strhi	r0, [r1, #-0]
    97a0:	0000a936 	andeq	sl, r0, r6, lsr r9
    97a4:	70910200 	addsvc	r0, r1, r0, lsl #4
    97a8:	7864691a 	stmdavc	r4!, {r1, r3, r4, r8, fp, sp, lr}^
    97ac:	45850100 	strmi	r0, [r5, #256]	; 0x100
    97b0:	000000b7 	strheq	r0, [r0], -r7
    97b4:	1b6c9102 	blne	1b2dbc4 <_Min_Stack_Size+0x1b2d7c4>
    97b8:	000029ba 			; <UNDEFINED> instruction: 0x000029ba
    97bc:	b7518501 	ldrblt	r8, [r1, -r1, lsl #10]
    97c0:	02000000 	andeq	r0, r0, #0
    97c4:	00006891 	muleq	r0, r1, r8
    97c8:	00000277 	andeq	r0, r0, r7, ror r2
    97cc:	1b890004 	blne	fe2497e4 <__StackLimit+0xde2297e4>
    97d0:	01040000 	mrseq	r0, (UNDEF: 4)
    97d4:	00000447 	andeq	r0, r0, r7, asr #8
    97d8:	002a4f0c 	eoreq	r4, sl, ip, lsl #30
    97dc:	0001be00 	andeq	fp, r1, r0, lsl #28
    97e0:	00069000 	andeq	r9, r6, r0
    97e4:	00000000 	andeq	r0, r0, r0
    97e8:	0050ab00 	subseq	sl, r0, r0, lsl #22
    97ec:	2a200200 	bcs	809ff4 <_Min_Stack_Size+0x809bf4>
    97f0:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    97f4:	0000311b 	andeq	r3, r0, fp, lsl r1
    97f8:	293a0300 	ldmdbcs	sl!, {r8, r9}
    97fc:	04040000 	streq	r0, [r4], #-0
    9800:	00004800 	andeq	r4, r0, r0, lsl #16
    9804:	29d80400 	ldmibcs	r8, {sl}^
    9808:	00480000 	subeq	r0, r8, r0
    980c:	00000000 	andeq	r0, r0, r0
    9810:	3c020405 	cfstrscc	mvf0, [r2], {5}
    9814:	02000029 	andeq	r0, r0, #41	; 0x29
    9818:	00251863 	eoreq	r1, r5, r3, ror #16
    981c:	01060000 	mrseq	r0, (UNDEF: 6)
    9820:	0007a906 	andeq	sl, r7, r6, lsl #18
    9824:	05020600 	streq	r0, [r2, #-1536]	; 0xfffffa00
    9828:	00000000 	andeq	r0, r0, r0
    982c:	b5050406 	strlt	r0, [r5, #-1030]	; 0xfffffbfa
    9830:	06000001 	streq	r0, [r0], -r1
    9834:	01b00508 	lslseq	r0, r8, #10
    9838:	01060000 	mrseq	r0, (UNDEF: 6)
    983c:	0007a708 	andeq	sl, r7, r8, lsl #14
    9840:	07020600 	streq	r0, [r2, -r0, lsl #12]
    9844:	00000377 	andeq	r0, r0, r7, ror r3
    9848:	002b6e02 	eoreq	r6, fp, r2, lsl #28
    984c:	19340300 	ldmdbne	r4!, {r8, r9}
    9850:	0000008c 	andeq	r0, r0, ip, lsl #1
    9854:	a5070406 	strge	r0, [r7, #-1030]	; 0xfffffbfa
    9858:	06000000 	streq	r0, [r0], -r0
    985c:	00a00708 	adceq	r0, r0, r8, lsl #14
    9860:	04070000 	streq	r0, [r7], #-0
    9864:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    9868:	07040600 	streq	r0, [r4, -r0, lsl #12]
    986c:	000000aa 	andeq	r0, r0, sl, lsr #1
    9870:	19040806 	stmdbne	r4, {r1, r2, fp}
    9874:	08000007 	stmdaeq	r0, {r0, r1, r2}
    9878:	00002a8c 	andeq	r2, r0, ip, lsl #21
    987c:	9a053601 	bls	157088 <_Min_Stack_Size+0x156c88>
    9880:	00000000 	andeq	r0, r0, r0
    9884:	54000000 	strpl	r0, [r0], #-0
    9888:	01000002 	tsteq	r0, r2
    988c:	00013f9c 	muleq	r1, ip, pc	; <UNPREDICTABLE>
    9890:	74730900 	ldrbtvc	r0, [r3], #-2304	; 0xfffff700
    9894:	36010072 			; <UNDEFINED> instruction: 0x36010072
    9898:	00013f1d 	andeq	r3, r1, sp, lsl pc
    989c:	70910200 	addsvc	r0, r1, r0, lsl #4
    98a0:	70610b0a 	rsbvc	r0, r1, sl, lsl #22
    98a4:	0d380100 	ldfeqs	f0, [r8, #-0]
    98a8:	0000004a 	andeq	r0, r0, sl, asr #32
    98ac:	0b449102 	bleq	112dcbc <_Min_Stack_Size+0x112d8bc>
    98b0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    98b4:	9a093901 	bls	257cc0 <_Min_Stack_Size+0x2578c0>
    98b8:	02000000 	andeq	r0, r0, #0
    98bc:	a50c4c91 	strge	r4, [ip, #-3217]	; 0xfffff36f
    98c0:	0100002a 	tsteq	r0, sl, lsr #32
    98c4:	009a0e39 	addseq	r0, sl, r9, lsr lr
    98c8:	91020000 	mrsls	r0, (UNDEF: 2)
    98cc:	06e50c5c 	usateq	r0, #5, ip, asr #24
    98d0:	3a010000 	bcc	498d8 <_Min_Stack_Size+0x494d8>
    98d4:	0001450a 	andeq	r4, r1, sl, lsl #10
    98d8:	5b910200 	blpl	fe44a0e0 <__StackLimit+0xde42a0e0>
    98dc:	0068630b 	rsbeq	r6, r8, fp, lsl #6
    98e0:	45113a01 	ldrmi	r3, [r1, #-2561]	; 0xfffff5ff
    98e4:	02000001 	andeq	r0, r0, #1
    98e8:	730b4b91 	movwvc	r4, #48017	; 0xbb91
    98ec:	0b3b0100 	bleq	ec9cf4 <_Min_Stack_Size+0xec98f4>
    98f0:	00000151 	andeq	r0, r0, r1, asr r1
    98f4:	0b509102 	bleq	142dd04 <_Min_Stack_Size+0x142d904>
    98f8:	00736572 	rsbseq	r6, r3, r2, ror r5
    98fc:	9a093c01 	bls	258908 <_Min_Stack_Size+0x258508>
    9900:	02000000 	andeq	r0, r0, #0
    9904:	0d005491 	cfstrseq	mvf5, [r0, #-580]	; 0xfffffdbc
    9908:	00014c04 	andeq	r4, r1, r4, lsl #24
    990c:	08010600 	stmdaeq	r1, {r9, sl}
    9910:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    9914:	0001450e 	andeq	r4, r1, lr, lsl #10
    9918:	45040d00 	strmi	r0, [r4, #-3328]	; 0xfffff300
    991c:	0f000001 	svceq	0x00000001
    9920:	00002aab 	andeq	r2, r0, fp, lsr #21
    9924:	8c162c01 	ldchi	12, cr2, [r6], {1}
    9928:	00000000 	andeq	r0, r0, r0
    992c:	30000000 	andcc	r0, r0, r0
    9930:	01000000 	mrseq	r0, (UNDEF: 0)
    9934:	00019b9c 	muleq	r1, ip, fp
    9938:	00780900 	rsbseq	r0, r8, r0, lsl #18
    993c:	9a1f2c01 	bls	7d4948 <_Min_Stack_Size+0x7d4548>
    9940:	02000000 	andeq	r0, r0, #0
    9944:	79096c91 	stmdbvc	r9, {r0, r4, r7, sl, fp, sp, lr}
    9948:	262c0100 	strtcs	r0, [ip], -r0, lsl #2
    994c:	0000009a 	muleq	r0, sl, r0
    9950:	0b689102 	bleq	1a2dd60 <_Min_Stack_Size+0x1a2d960>
    9954:	006d7573 	rsbeq	r7, sp, r3, ror r5
    9958:	8c132e01 	ldchi	14, cr2, [r3], {1}
    995c:	02000000 	andeq	r0, r0, #0
    9960:	10007491 	mulne	r0, r1, r4
    9964:	00002ab0 			; <UNDEFINED> instruction: 0x00002ab0
    9968:	800a2501 	andhi	r2, sl, r1, lsl #10
    996c:	00000000 	andeq	r0, r0, r0
    9970:	2c000000 	stccs	0, cr0, [r0], {-0}
    9974:	01000000 	mrseq	r0, (UNDEF: 0)
    9978:	0001d19c 	muleq	r1, ip, r1
    997c:	735f0900 	cmpvc	pc, #0, 18
    9980:	1f250100 	svcne	0x00250100
    9984:	0000013f 	andeq	r0, r0, pc, lsr r1
    9988:	0b6c9102 	bleq	1b2dd98 <_Min_Stack_Size+0x1b2d998>
    998c:	27010069 	strcs	r0, [r1, -r9, rrx]
    9990:	0000800e 	andeq	r8, r0, lr
    9994:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    9998:	2a841100 	bcs	fe10dda0 <__StackLimit+0xde0edda0>
    999c:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
    99a0:	00000006 	andeq	r0, r0, r6
    99a4:	00002800 	andeq	r2, r0, r0, lsl #16
    99a8:	f79c0100 			; <UNDEFINED> instruction: 0xf79c0100
    99ac:	09000001 	stmdbeq	r0, {r0}
    99b0:	00727473 	rsbseq	r7, r2, r3, ror r4
    99b4:	3f1a1e01 	svccc	0x001a1e01
    99b8:	02000001 	andeq	r0, r0, #1
    99bc:	11007491 			; <UNDEFINED> instruction: 0x11007491
    99c0:	00002a42 	andeq	r2, r0, r2, asr #20
    99c4:	00061901 	andeq	r1, r6, r1, lsl #18
    99c8:	1a000000 	bne	99d0 <_Min_Stack_Size+0x95d0>
    99cc:	01000000 	mrseq	r0, (UNDEF: 0)
    99d0:	00021d9c 	muleq	r2, ip, sp
    99d4:	29f61200 	ldmibcs	r6!, {r9, ip}^
    99d8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    99dc:	00014518 	andeq	r4, r1, r8, lsl r5
    99e0:	77910200 	ldrvc	r0, [r1, r0, lsl #4]
    99e4:	2a981100 	bcs	fe60ddec <__StackLimit+0xde5eddec>
    99e8:	13010000 	movwne	r0, #4096	; 0x1000
    99ec:	00000006 	andeq	r0, r0, r6
    99f0:	00002400 	andeq	r2, r0, r0, lsl #8
    99f4:	439c0100 	orrsmi	r0, ip, #0, 2
    99f8:	09000002 	stmdbeq	r0, {r1}
    99fc:	00726863 	rsbseq	r6, r2, r3, ror #16
    9a00:	51191301 	tstpl	r9, r1, lsl #6
    9a04:	02000001 	andeq	r0, r0, #1
    9a08:	13007491 	movwne	r7, #1169	; 0x491
    9a0c:	00002a9c 	muleq	r0, ip, sl
    9a10:	45060e01 	strmi	r0, [r6, #-3585]	; 0xfffff1ff
    9a14:	00000001 	andeq	r0, r0, r1
    9a18:	10000000 	andne	r0, r0, r0
    9a1c:	01000000 	mrseq	r0, (UNDEF: 0)
    9a20:	2a46149c 	bcs	118ec98 <_Min_Stack_Size+0x118e898>
    9a24:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    9a28:	0030b406 	eorseq	fp, r0, r6, lsl #8
    9a2c:	00001a08 	andeq	r1, r0, r8, lsl #20
    9a30:	099c0100 	ldmibeq	ip, {r8}
    9a34:	01006863 	tsteq	r0, r3, ror #16
    9a38:	014c1a09 	cmpeq	ip, r9, lsl #20
    9a3c:	91020000 	mrsls	r0, (UNDEF: 2)
    9a40:	83000077 	movwhi	r0, #119	; 0x77
    9a44:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    9a48:	001ce800 	andseq	lr, ip, r0, lsl #16
    9a4c:	47010400 	strmi	r0, [r1, -r0, lsl #8]
    9a50:	0c000004 	stceq	0, cr0, [r0], {4}
    9a54:	00002b8f 	andeq	r2, r0, pc, lsl #23
    9a58:	000001be 			; <UNDEFINED> instruction: 0x000001be
    9a5c:	000006d8 	ldrdeq	r0, [r0], -r8
    9a60:	00000000 	andeq	r0, r0, r0
    9a64:	00005332 	andeq	r5, r0, r2, lsr r3
    9a68:	a9060102 	stmdbge	r6, {r1, r8}
    9a6c:	03000007 	movweq	r0, #7
    9a70:	00002ac8 	andeq	r2, r0, r8, asr #21
    9a74:	38182b04 	ldmdacc	r8, {r2, r8, r9, fp, sp}
    9a78:	02000000 	andeq	r0, r0, #0
    9a7c:	07a70801 	streq	r0, [r7, r1, lsl #16]!
    9a80:	02020000 	andeq	r0, r2, #0
    9a84:	00000005 	andeq	r0, r0, r5
    9a88:	07020200 	streq	r0, [r2, -r0, lsl #4]
    9a8c:	00000377 	andeq	r0, r0, r7, ror r3
    9a90:	002c1003 	eoreq	r1, ip, r3
    9a94:	184d0400 	stmdane	sp, {sl}^
    9a98:	00000059 	andeq	r0, r0, r9, asr r0
    9a9c:	b5050402 	strlt	r0, [r5, #-1026]	; 0xfffffbfe
    9aa0:	03000001 	movweq	r0, #1
    9aa4:	00002b6c 	andeq	r2, r0, ip, ror #22
    9aa8:	6c194f04 	ldcvs	15, cr4, [r9], {4}
    9aac:	02000000 	andeq	r0, r0, #0
    9ab0:	00a50704 	adceq	r0, r5, r4, lsl #14
    9ab4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    9ab8:	0001b005 	andeq	fp, r1, r5
    9abc:	07080200 	streq	r0, [r8, -r0, lsl #4]
    9ac0:	000000a0 	andeq	r0, r0, r0, lsr #1
    9ac4:	69050404 	stmdbvs	r5, {r2, sl}
    9ac8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    9acc:	00aa0704 	adceq	r0, sl, r4, lsl #14
    9ad0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    9ad4:	00071904 	andeq	r1, r7, r4, lsl #18
    9ad8:	06040500 	streq	r0, [r4], -r0, lsl #10
    9adc:	000003e0 	andeq	r0, r0, r0, ror #7
    9ae0:	17016505 	strne	r6, [r1, -r5, lsl #10]
    9ae4:	00000088 	andeq	r0, r0, r8, lsl #1
    9ae8:	00056203 	andeq	r6, r5, r3, lsl #4
    9aec:	0e2e0600 	cfmadda32eq	mvax0, mvax0, mvfx14, mvfx0
    9af0:	00000059 	andeq	r0, r0, r9, asr r0
    9af4:	0006fb03 	andeq	pc, r6, r3, lsl #22
    9af8:	0e740600 	cdpeq	6, 7, cr0, cr4, cr0, {0}
    9afc:	00000059 	andeq	r0, r0, r9, asr r0
    9b00:	a5060407 	strge	r0, [r6, #-1031]	; 0xfffffbf9
    9b04:	0000df03 	andeq	sp, r0, r3, lsl #30
    9b08:	03da0800 	bicseq	r0, sl, #0, 16
    9b0c:	a7060000 	strge	r0, [r6, -r0]
    9b10:	0000980c 	andeq	r9, r0, ip, lsl #16
    9b14:	02ec0800 	rsceq	r0, ip, #0, 16
    9b18:	a8060000 	stmdage	r6, {}	; <UNPREDICTABLE>
    9b1c:	0000df13 	andeq	sp, r0, r3, lsl pc
    9b20:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    9b24:	ef000000 	svc	0x00000000
    9b28:	0a000000 	beq	9b30 <_Min_Stack_Size+0x9730>
    9b2c:	00000088 	andeq	r0, r0, r8, lsl #1
    9b30:	080b0003 	stmdaeq	fp, {r0, r1}
    9b34:	1309a206 	movwne	sl, #37382	; 0x9206
    9b38:	0c000001 	stceq	0, cr0, [r0], {1}
    9b3c:	000006e3 	andeq	r0, r0, r3, ror #13
    9b40:	8107a406 	tsthi	r7, r6, lsl #8
    9b44:	00000000 	andeq	r0, r0, r0
    9b48:	00080d0c 	andeq	r0, r8, ip, lsl #26
    9b4c:	05a90600 	streq	r0, [r9, #1536]!	; 0x600
    9b50:	000000bd 	strheq	r0, [r0], -sp
    9b54:	6d030004 	stcvs	0, cr0, [r3, #-16]
    9b58:	06000006 	streq	r0, [r0], -r6
    9b5c:	00ef03aa 	rsceq	r0, pc, sl, lsr #7
    9b60:	c3030000 	movwgt	r0, #12288	; 0x3000
    9b64:	07000007 	streq	r0, [r0, -r7]
    9b68:	006c1916 	rsbeq	r1, ip, r6, lsl r9
    9b6c:	cb030000 	blgt	c9b74 <_Min_Stack_Size+0xc9774>
    9b70:	08000005 	stmdaeq	r0, {r0, r2}
    9b74:	00810d0c 	addeq	r0, r1, ip, lsl #26
    9b78:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    9b7c:	07000008 	streq	r0, [r0, -r8]
    9b80:	012b1b23 			; <UNDEFINED> instruction: 0x012b1b23
    9b84:	9b0d0000 	blls	349b8c <_Min_Stack_Size+0x34978c>
    9b88:	18000002 	stmdane	r0, {r1}
    9b8c:	9d083407 	cfstrsls	mvf3, [r8, #-28]	; 0xffffffe4
    9b90:	0c000001 	stceq	0, cr0, [r0], {1}
    9b94:	0000067d 	andeq	r0, r0, sp, ror r6
    9b98:	9d133607 	ldcls	6, cr3, [r3, #-28]	; 0xffffffe4
    9b9c:	00000001 	andeq	r0, r0, r1
    9ba0:	006b5f0e 	rsbeq	r5, fp, lr, lsl #30
    9ba4:	81073707 	tsthi	r7, r7, lsl #14
    9ba8:	04000000 	streq	r0, [r0], #-0
    9bac:	0006c40c 	andeq	ip, r6, ip, lsl #8
    9bb0:	0b370700 	bleq	dcb7b8 <_Min_Stack_Size+0xdcb3b8>
    9bb4:	00000081 	andeq	r0, r0, r1, lsl #1
    9bb8:	028d0c08 	addeq	r0, sp, #8, 24	; 0x800
    9bbc:	37070000 	strcc	r0, [r7, -r0]
    9bc0:	00008114 	andeq	r8, r0, r4, lsl r1
    9bc4:	9a0c0c00 	bls	30cbcc <_Min_Stack_Size+0x30c7cc>
    9bc8:	07000001 	streq	r0, [r0, -r1]
    9bcc:	00811b37 	addeq	r1, r1, r7, lsr fp
    9bd0:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    9bd4:	0700785f 	smlsdeq	r0, pc, r8, r7	; <UNPREDICTABLE>
    9bd8:	01a30b38 			; <UNDEFINED> instruction: 0x01a30b38
    9bdc:	00140000 	andseq	r0, r4, r0
    9be0:	0143040f 	cmpeq	r3, pc, lsl #8
    9be4:	1f090000 	svcne	0x00090000
    9be8:	b3000001 	movwlt	r0, #1
    9bec:	0a000001 	beq	9bf8 <_Min_Stack_Size+0x97f8>
    9bf0:	00000088 	andeq	r0, r0, r8, lsl #1
    9bf4:	d50d0000 	strle	r0, [sp, #-0]
    9bf8:	24000002 	strcs	r0, [r0], #-2
    9bfc:	36083c07 	strcc	r3, [r8], -r7, lsl #24
    9c00:	0c000002 	stceq	0, cr0, [r0], {2}
    9c04:	00000108 	andeq	r0, r0, r8, lsl #2
    9c08:	81093e07 	tsthi	r9, r7, lsl #28
    9c0c:	00000000 	andeq	r0, r0, r0
    9c10:	0007b50c 	andeq	fp, r7, ip, lsl #10
    9c14:	093f0700 	ldmdbeq	pc!, {r8, r9, sl}	; <UNPREDICTABLE>
    9c18:	00000081 	andeq	r0, r0, r1, lsl #1
    9c1c:	01390c04 	teqeq	r9, r4, lsl #24
    9c20:	40070000 	andmi	r0, r7, r0
    9c24:	00008109 	andeq	r8, r0, r9, lsl #2
    9c28:	ca0c0800 	bgt	30bc30 <_Min_Stack_Size+0x30b830>
    9c2c:	07000008 	streq	r0, [r0, -r8]
    9c30:	00810941 	addeq	r0, r1, r1, asr #18
    9c34:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    9c38:	00000538 	andeq	r0, r0, r8, lsr r5
    9c3c:	81094207 	tsthi	r9, r7, lsl #4
    9c40:	10000000 	andne	r0, r0, r0
    9c44:	0004210c 	andeq	r2, r4, ip, lsl #2
    9c48:	09430700 	stmdbeq	r3, {r8, r9, sl}^
    9c4c:	00000081 	andeq	r0, r0, r1, lsl #1
    9c50:	07f60c14 			; <UNDEFINED> instruction: 0x07f60c14
    9c54:	44070000 	strmi	r0, [r7], #-0
    9c58:	00008109 	andeq	r8, r0, r9, lsl #2
    9c5c:	400c1800 	andmi	r1, ip, r0, lsl #16
    9c60:	07000006 	streq	r0, [r0, -r6]
    9c64:	00810945 	addeq	r0, r1, r5, asr #18
    9c68:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    9c6c:	0000088c 	andeq	r0, r0, ip, lsl #17
    9c70:	81094607 	tsthi	r9, r7, lsl #12
    9c74:	20000000 	andcs	r0, r0, r0
    9c78:	01481000 	mrseq	r1, (UNDEF: 72)
    9c7c:	01080000 	mrseq	r0, (UNDEF: 8)
    9c80:	7b084f07 	blvc	21d8a4 <_Min_Stack_Size+0x21d4a4>
    9c84:	0c000002 	stceq	0, cr0, [r0], {2}
    9c88:	0000026d 	andeq	r0, r0, sp, ror #4
    9c8c:	7b0a5007 	blvc	29dcb0 <_Min_Stack_Size+0x29d8b0>
    9c90:	00000002 	andeq	r0, r0, r2
    9c94:	0005fe0c 	andeq	pc, r5, ip, lsl #28
    9c98:	09510700 	ldmdbeq	r1, {r8, r9, sl}^
    9c9c:	0000027b 	andeq	r0, r0, fp, ror r2
    9ca0:	07961180 	ldreq	r1, [r6, r0, lsl #3]
    9ca4:	53070000 	movwpl	r0, #28672	; 0x7000
    9ca8:	00011f0a 	andeq	r1, r1, sl, lsl #30
    9cac:	11010000 	mrsne	r0, (UNDEF: 1)
    9cb0:	00000192 	muleq	r0, r2, r1
    9cb4:	1f0a5607 	svcne	0x000a5607
    9cb8:	04000001 	streq	r0, [r0], #-1
    9cbc:	96090001 	strls	r0, [r9], -r1
    9cc0:	8b000000 	blhi	9cc8 <_Min_Stack_Size+0x98c8>
    9cc4:	0a000002 	beq	9cd4 <_Min_Stack_Size+0x98d4>
    9cc8:	00000088 	andeq	r0, r0, r8, lsl #1
    9ccc:	7610001f 			; <UNDEFINED> instruction: 0x7610001f
    9cd0:	9000004a 	andls	r0, r0, sl, asr #32
    9cd4:	08620701 	stmdaeq	r2!, {r0, r8, r9, sl}^
    9cd8:	000002ce 	andeq	r0, r0, lr, asr #5
    9cdc:	00067d0c 	andeq	r7, r6, ip, lsl #26
    9ce0:	12630700 	rsbne	r0, r3, #0, 14
    9ce4:	000002ce 	andeq	r0, r0, lr, asr #5
    9ce8:	068e0c00 	streq	r0, [lr], r0, lsl #24
    9cec:	64070000 	strvs	r0, [r7], #-0
    9cf0:	00008106 	andeq	r8, r0, r6, lsl #2
    9cf4:	880c0400 	stmdahi	ip, {sl}
    9cf8:	07000002 	streq	r0, [r0, -r2]
    9cfc:	02d40966 	sbcseq	r0, r4, #1671168	; 0x198000
    9d00:	0c080000 	stceq	0, cr0, [r8], {-0}
    9d04:	00000148 	andeq	r0, r0, r8, asr #2
    9d08:	361e6707 	ldrcc	r6, [lr], -r7, lsl #14
    9d0c:	88000002 	stmdahi	r0, {r1}
    9d10:	8b040f00 	blhi	10d918 <_Min_Stack_Size+0x10d518>
    9d14:	09000002 	stmdbeq	r0, {r1}
    9d18:	000002e4 	andeq	r0, r0, r4, ror #5
    9d1c:	000002e4 	andeq	r0, r0, r4, ror #5
    9d20:	0000880a 	andeq	r8, r0, sl, lsl #16
    9d24:	0f001f00 	svceq	0x00001f00
    9d28:	0002ea04 	andeq	lr, r2, r4, lsl #20
    9d2c:	4a0d1200 	bmi	34e534 <_Min_Stack_Size+0x34e134>
    9d30:	08000006 	stmdaeq	r0, {r1, r2}
    9d34:	13087a07 	movwne	r7, #35335	; 0x8a07
    9d38:	0c000003 	stceq	0, cr0, [r0], {3}
    9d3c:	00000133 	andeq	r0, r0, r3, lsr r1
    9d40:	13117b07 	tstne	r1, #7168	; 0x1c00
    9d44:	00000003 	andeq	r0, r0, r3
    9d48:	00072e0c 	andeq	r2, r7, ip, lsl #28
    9d4c:	067c0700 	ldrbteq	r0, [ip], -r0, lsl #14
    9d50:	00000081 	andeq	r0, r0, r1, lsl #1
    9d54:	040f0004 	streq	r0, [pc], #-4	; 9d5c <_Min_Stack_Size+0x995c>
    9d58:	00000038 	andeq	r0, r0, r8, lsr r0
    9d5c:	0000280d 	andeq	r2, r0, sp, lsl #16
    9d60:	ba076800 	blt	1e3d68 <_Min_Stack_Size+0x1e3968>
    9d64:	00045c08 	andeq	r5, r4, r8, lsl #24
    9d68:	705f0e00 	subsvc	r0, pc, r0, lsl #28
    9d6c:	12bb0700 	adcsne	r0, fp, #0, 14
    9d70:	00000313 	andeq	r0, r0, r3, lsl r3
    9d74:	725f0e00 	subsvc	r0, pc, #0, 28
    9d78:	07bc0700 	ldreq	r0, [ip, r0, lsl #14]!
    9d7c:	00000081 	andeq	r0, r0, r1, lsl #1
    9d80:	775f0e04 	ldrbvc	r0, [pc, -r4, lsl #28]
    9d84:	07bd0700 	ldreq	r0, [sp, r0, lsl #14]!
    9d88:	00000081 	andeq	r0, r0, r1, lsl #1
    9d8c:	018b0c08 	orreq	r0, fp, r8, lsl #24
    9d90:	be070000 	cdplt	0, 0, cr0, cr7, cr0, {0}
    9d94:	00003f09 	andeq	r3, r0, r9, lsl #30
    9d98:	0d0c0c00 	stceq	12, cr0, [ip, #-0]
    9d9c:	07000003 	streq	r0, [r0, -r3]
    9da0:	003f09bf 	ldrhteq	r0, [pc], -pc
    9da4:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    9da8:	0066625f 	rsbeq	r6, r6, pc, asr r2
    9dac:	eb11c007 	bl	479dd0 <_Min_Stack_Size+0x4799d0>
    9db0:	10000002 	andne	r0, r0, r2
    9db4:	0000b70c 	andeq	fp, r0, ip, lsl #14
    9db8:	07c10700 	strbeq	r0, [r1, r0, lsl #14]
    9dbc:	00000081 	andeq	r0, r0, r1, lsl #1
    9dc0:	01690c18 	cmneq	r9, r8, lsl ip
    9dc4:	c8070000 	stmdagt	r7, {}	; <UNPREDICTABLE>
    9dc8:	0000960a 	andeq	r9, r0, sl, lsl #12
    9dcc:	bd0c1c00 	stclt	12, cr1, [ip, #-0]
    9dd0:	07000033 	smladxeq	r0, r3, r0, r0
    9dd4:	05e01dca 	strbeq	r1, [r0, #3530]!	; 0xdca
    9dd8:	0c200000 	stceq	0, cr0, [r0], #-0
    9ddc:	00003336 	andeq	r3, r0, r6, lsr r3
    9de0:	0a1dcc07 	beq	77ce04 <_Min_Stack_Size+0x77ca04>
    9de4:	24000006 	strcs	r0, [r0], #-6
    9de8:	0006eb0c 	andeq	lr, r6, ip, lsl #22
    9dec:	0dcf0700 	stcleq	7, cr0, [pc]	; 9df4 <_Min_Stack_Size+0x99f4>
    9df0:	0000062e 	andeq	r0, r0, lr, lsr #12
    9df4:	08a60c28 	stmiaeq	r6!, {r3, r5, sl, fp}
    9df8:	d0070000 	andle	r0, r7, r0
    9dfc:	00064809 	andeq	r4, r6, r9, lsl #16
    9e00:	5f0e2c00 	svcpl	0x000e2c00
    9e04:	07006275 	smlsdxeq	r0, r5, r2, r6
    9e08:	02eb11d3 	rsceq	r1, fp, #-1073741772	; 0xc0000034
    9e0c:	0e300000 	cdpeq	0, 3, cr0, cr0, cr0, {0}
    9e10:	0070755f 	rsbseq	r7, r0, pc, asr r5
    9e14:	1312d407 	tstne	r2, #117440512	; 0x7000000
    9e18:	38000003 	stmdacc	r0, {r0, r1}
    9e1c:	72755f0e 	rsbsvc	r5, r5, #14, 30	; 0x38
    9e20:	07d50700 	ldrbeq	r0, [r5, r0, lsl #14]
    9e24:	00000081 	andeq	r0, r0, r1, lsl #1
    9e28:	012d0c3c 			; <UNDEFINED> instruction: 0x012d0c3c
    9e2c:	d8070000 	stmdale	r7, {}	; <UNPREDICTABLE>
    9e30:	00064e11 	andeq	r4, r6, r1, lsl lr
    9e34:	760c4000 	strvc	r4, [ip], -r0
    9e38:	07000008 	streq	r0, [r0, -r8]
    9e3c:	065e11d9 			; <UNDEFINED> instruction: 0x065e11d9
    9e40:	0e430000 	cdpeq	0, 4, cr0, cr3, cr0, {0}
    9e44:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    9e48:	eb11dc07 	bl	480e6c <_Min_Stack_Size+0x480a6c>
    9e4c:	44000002 	strmi	r0, [r0], #-2
    9e50:	0007250c 	andeq	r2, r7, ip, lsl #10
    9e54:	07df0700 	ldrbeq	r0, [pc, r0, lsl #14]
    9e58:	00000081 	andeq	r0, r0, r1, lsl #1
    9e5c:	04380c4c 	ldrteq	r0, [r8], #-3148	; 0xfffff3b4
    9e60:	e0070000 	and	r0, r7, r0
    9e64:	0000a50a 	andeq	sl, r0, sl, lsl #10
    9e68:	aa0c5000 	bge	31de70 <_Min_Stack_Size+0x31da70>
    9e6c:	0700004b 	streq	r0, [r0, -fp, asr #32]
    9e70:	047a12e3 	ldrbteq	r1, [sl], #-739	; 0xfffffd1d
    9e74:	0c540000 	mraeq	r0, r4, acc0
    9e78:	000003f1 	strdeq	r0, [r0], -r1
    9e7c:	370ce707 	strcc	lr, [ip, -r7, lsl #14]
    9e80:	58000001 	stmdapl	r0, {r0}
    9e84:	0002e30c 	andeq	lr, r2, ip, lsl #6
    9e88:	0ee90700 	cdpeq	7, 14, cr0, cr9, cr0, {0}
    9e8c:	00000113 	andeq	r0, r0, r3, lsl r1
    9e90:	06510c5c 			; <UNDEFINED> instruction: 0x06510c5c
    9e94:	ea070000 	b	1c9e9c <_Min_Stack_Size+0x1c9a9c>
    9e98:	00008109 	andeq	r8, r0, r9, lsl #2
    9e9c:	13006400 	movwne	r6, #1024	; 0x400
    9ea0:	00000081 	andeq	r0, r0, r1, lsl #1
    9ea4:	0000047a 	andeq	r0, r0, sl, ror r4
    9ea8:	00047a14 	andeq	r7, r4, r4, lsl sl
    9eac:	00961400 	addseq	r1, r6, r0, lsl #8
    9eb0:	ce140000 	cdpgt	0, 1, cr0, cr4, cr0, {0}
    9eb4:	14000005 	strne	r0, [r0], #-5
    9eb8:	00000081 	andeq	r0, r0, r1, lsl #1
    9ebc:	85040f00 	strhi	r0, [r4, #-3840]	; 0xfffff100
    9ec0:	15000004 	strne	r0, [r0, #-4]
    9ec4:	0000047a 	andeq	r0, r0, sl, ror r4
    9ec8:	0006cc16 	andeq	ip, r6, r6, lsl ip
    9ecc:	07042800 	streq	r2, [r4, -r0, lsl #16]
    9ed0:	ce080265 	cdpgt	2, 0, cr0, cr8, cr5, {3}
    9ed4:	17000005 	strne	r0, [r0, -r5]
    9ed8:	0000062c 	andeq	r0, r0, ip, lsr #12
    9edc:	07026707 	streq	r6, [r2, -r7, lsl #14]
    9ee0:	00000081 	andeq	r0, r0, r1, lsl #1
    9ee4:	08061700 	stmdaeq	r6, {r8, r9, sl, ip}
    9ee8:	6c070000 	stcvs	0, cr0, [r7], {-0}
    9eec:	06ba0b02 	ldrteq	r0, [sl], r2, lsl #22
    9ef0:	17040000 	strne	r0, [r4, -r0]
    9ef4:	000007ee 	andeq	r0, r0, lr, ror #15
    9ef8:	14026c07 	strne	r6, [r2], #-3079	; 0xfffff3f9
    9efc:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    9f00:	02931708 	addseq	r1, r3, #8, 14	; 0x200000
    9f04:	6c070000 	stcvs	0, cr0, [r7], {-0}
    9f08:	06ba1e02 	ldrteq	r1, [sl], r2, lsl #28
    9f0c:	170c0000 	strne	r0, [ip, -r0]
    9f10:	00000689 	andeq	r0, r0, r9, lsl #13
    9f14:	08026e07 	stmdaeq	r2, {r0, r1, r2, r9, sl, fp, sp, lr}
    9f18:	00000081 	andeq	r0, r0, r1, lsl #1
    9f1c:	00421710 	subeq	r1, r2, r0, lsl r7
    9f20:	6f070000 	svcvs	0x00070000
    9f24:	08ba0802 	ldmeq	sl!, {r1, fp}
    9f28:	17140000 	ldrne	r0, [r4, -r0]
    9f2c:	000006ab 	andeq	r0, r0, fp, lsr #13
    9f30:	07027207 	streq	r7, [r2, -r7, lsl #4]
    9f34:	00000081 	andeq	r0, r0, r1, lsl #1
    9f38:	069b1730 			; <UNDEFINED> instruction: 0x069b1730
    9f3c:	73070000 	movwvc	r0, #28672	; 0x7000
    9f40:	08cf1602 	stmiaeq	pc, {r1, r9, sl, ip}^	; <UNPREDICTABLE>
    9f44:	17340000 	ldrne	r0, [r4, -r0]!
    9f48:	00000541 	andeq	r0, r0, r1, asr #10
    9f4c:	07027507 	streq	r7, [r2, -r7, lsl #10]
    9f50:	00000081 	andeq	r0, r0, r1, lsl #1
    9f54:	07e41738 			; <UNDEFINED> instruction: 0x07e41738
    9f58:	77070000 	strvc	r0, [r7, -r0]
    9f5c:	08e00a02 	stmiaeq	r0!, {r1, r9, fp}^
    9f60:	173c0000 	ldrne	r0, [ip, -r0]!
    9f64:	000003fd 	strdeq	r0, [r0], -sp
    9f68:	13027a07 	movwne	r7, #10759	; 0x2a07
    9f6c:	0000019d 	muleq	r0, sp, r1
    9f70:	01a61740 			; <UNDEFINED> instruction: 0x01a61740
    9f74:	7b070000 	blvc	1c9f7c <_Min_Stack_Size+0x1c9b7c>
    9f78:	00810702 	addeq	r0, r1, r2, lsl #14
    9f7c:	17440000 	strbne	r0, [r4, -r0]
    9f80:	000008c0 	andeq	r0, r0, r0, asr #17
    9f84:	13027c07 	movwne	r7, #11271	; 0x2c07
    9f88:	0000019d 	muleq	r0, sp, r1
    9f8c:	05a31748 	streq	r1, [r3, #1864]!	; 0x748
    9f90:	7d070000 	stcvc	0, cr0, [r7, #-0]
    9f94:	08e61402 	stmiaeq	r6!, {r1, sl, ip}^
    9f98:	174c0000 	strbne	r0, [ip, -r0]
    9f9c:	00000305 	andeq	r0, r0, r5, lsl #6
    9fa0:	07028007 	streq	r8, [r2, -r7]
    9fa4:	00000081 	andeq	r0, r0, r1, lsl #1
    9fa8:	05f61750 	ldrbeq	r1, [r6, #1872]!	; 0x750
    9fac:	81070000 	mrshi	r0, (UNDEF: 7)
    9fb0:	05ce0902 	strbeq	r0, [lr, #2306]	; 0x902
    9fb4:	17540000 	ldrbne	r0, [r4, -r0]
    9fb8:	0000061c 	andeq	r0, r0, ip, lsl r6
    9fbc:	0702a407 	streq	sl, [r2, -r7, lsl #8]
    9fc0:	00000895 	muleq	r0, r5, r8
    9fc4:	4a761858 	bmi	1d9012c <_Min_Stack_Size+0x1d8fd2c>
    9fc8:	a8070000 	stmdage	r7, {}	; <UNPREDICTABLE>
    9fcc:	02ce1302 	sbceq	r1, lr, #134217728	; 0x8000000
    9fd0:	01480000 	mrseq	r0, (UNDEF: 72)
    9fd4:	00038a18 	andeq	r8, r3, r8, lsl sl
    9fd8:	02a90700 	adceq	r0, r9, #0, 14
    9fdc:	00028b12 	andeq	r8, r2, r2, lsl fp
    9fe0:	18014c00 	stmdane	r1, {sl, fp, lr}
    9fe4:	00000832 	andeq	r0, r0, r2, lsr r8
    9fe8:	0c02ad07 	stceq	13, cr10, [r2], {7}
    9fec:	000008f7 	strdeq	r0, [r0], -r7
    9ff0:	711802dc 			; <UNDEFINED> instruction: 0x711802dc
    9ff4:	07000001 	streq	r0, [r0, -r1]
    9ff8:	7b1002b2 	blvc	40aac8 <_Min_Stack_Size+0x40a6c8>
    9ffc:	e0000006 	and	r0, r0, r6
    a000:	01431802 	cmpeq	r3, r2, lsl #16
    a004:	b4070000 	strlt	r0, [r7], #-0
    a008:	09030a02 	stmdbeq	r3, {r1, r9, fp}
    a00c:	02ec0000 	rsceq	r0, ip, #0
    a010:	d4040f00 	strle	r0, [r4], #-3840	; 0xfffff100
    a014:	02000005 	andeq	r0, r0, #5
    a018:	07b00801 	ldreq	r0, [r0, r1, lsl #16]!
    a01c:	d4150000 	ldrle	r0, [r5], #-0
    a020:	0f000005 	svceq	0x00000005
    a024:	00045c04 	andeq	r5, r4, r4, lsl #24
    a028:	00811300 	addeq	r1, r1, r0, lsl #6
    a02c:	06040000 	streq	r0, [r4], -r0
    a030:	7a140000 	bvc	50a038 <_Min_Stack_Size+0x509c38>
    a034:	14000004 	strne	r0, [r0], #-4
    a038:	00000096 	muleq	r0, r6, r0
    a03c:	00060414 	andeq	r0, r6, r4, lsl r4
    a040:	00811400 	addeq	r1, r1, r0, lsl #8
    a044:	0f000000 	svceq	0x00000000
    a048:	0005db04 	andeq	sp, r5, r4, lsl #22
    a04c:	e6040f00 	str	r0, [r4], -r0, lsl #30
    a050:	13000005 	movwne	r0, #5
    a054:	000000b1 	strheq	r0, [r0], -r1
    a058:	0000062e 	andeq	r0, r0, lr, lsr #12
    a05c:	00047a14 	andeq	r7, r4, r4, lsl sl
    a060:	00961400 	addseq	r1, r6, r0, lsl #8
    a064:	b1140000 	tstlt	r4, r0
    a068:	14000000 	strne	r0, [r0], #-0
    a06c:	00000081 	andeq	r0, r0, r1, lsl #1
    a070:	10040f00 	andne	r0, r4, r0, lsl #30
    a074:	13000006 	movwne	r0, #6
    a078:	00000081 	andeq	r0, r0, r1, lsl #1
    a07c:	00000648 	andeq	r0, r0, r8, asr #12
    a080:	00047a14 	andeq	r7, r4, r4, lsl sl
    a084:	00961400 	addseq	r1, r6, r0, lsl #8
    a088:	0f000000 	svceq	0x00000000
    a08c:	00063404 	andeq	r3, r6, r4, lsl #8
    a090:	00380900 	eorseq	r0, r8, r0, lsl #18
    a094:	065e0000 	ldrbeq	r0, [lr], -r0
    a098:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    a09c:	02000000 	andeq	r0, r0, #0
    a0a0:	00380900 	eorseq	r0, r8, r0, lsl #18
    a0a4:	066e0000 	strbteq	r0, [lr], -r0
    a0a8:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    a0ac:	00000000 	andeq	r0, r0, r0
    a0b0:	019f0600 	orrseq	r0, pc, r0, lsl #12
    a0b4:	24070000 	strcs	r0, [r7], #-0
    a0b8:	03191a01 	tsteq	r9, #4096	; 0x1000
    a0bc:	00190000 	andseq	r0, r9, r0
    a0c0:	0c000008 	stceq	0, cr0, [r0], {8}
    a0c4:	08012807 	stmdaeq	r1, {r0, r1, r2, fp, sp}
    a0c8:	000006b4 			; <UNDEFINED> instruction: 0x000006b4
    a0cc:	00067d17 	andeq	r7, r6, r7, lsl sp
    a0d0:	012a0700 			; <UNDEFINED> instruction: 0x012a0700
    a0d4:	0006b411 	andeq	fp, r6, r1, lsl r4
    a0d8:	70170000 	andsvc	r0, r7, r0
    a0dc:	07000003 	streq	r0, [r0, -r3]
    a0e0:	8107012b 	tsthi	r7, fp, lsr #2
    a0e4:	04000000 	streq	r0, [r0], #-0
    a0e8:	00068317 	andeq	r8, r6, r7, lsl r3
    a0ec:	012c0700 			; <UNDEFINED> instruction: 0x012c0700
    a0f0:	0006ba0b 	andeq	fp, r6, fp, lsl #20
    a0f4:	0f000800 	svceq	0x00000800
    a0f8:	00067b04 	andeq	r7, r6, r4, lsl #22
    a0fc:	6e040f00 	cdpvs	15, 0, cr0, cr4, cr0, {0}
    a100:	19000006 	stmdbne	r0, {r1, r2}
    a104:	00000030 	andeq	r0, r0, r0, lsr r0
    a108:	0144070e 	cmpeq	r4, lr, lsl #14
    a10c:	0006f908 	andeq	pc, r6, r8, lsl #18
    a110:	06d31700 	ldrbeq	r1, [r3], r0, lsl #14
    a114:	45070000 	strmi	r0, [r7, #-0]
    a118:	06f91201 	ldrbteq	r1, [r9], r1, lsl #4
    a11c:	17000000 	strne	r0, [r0, -r0]
    a120:	000003f7 	strdeq	r0, [r0], -r7
    a124:	12014607 	andne	r4, r1, #7340032	; 0x700000
    a128:	000006f9 	strdeq	r0, [r0], -r9
    a12c:	07be1706 	ldreq	r1, [lr, r6, lsl #14]!
    a130:	47070000 	strmi	r0, [r7, -r0]
    a134:	00461201 	subeq	r1, r6, r1, lsl #4
    a138:	000c0000 	andeq	r0, ip, r0
    a13c:	00004609 	andeq	r4, r0, r9, lsl #12
    a140:	00070900 	andeq	r0, r7, r0, lsl #18
    a144:	00880a00 	addeq	r0, r8, r0, lsl #20
    a148:	00020000 	andeq	r0, r2, r0
    a14c:	8507d01a 	strhi	sp, [r7, #-26]	; 0xffffffe6
    a150:	081e0702 	ldmdaeq	lr, {r1, r8, r9, sl}
    a154:	2b170000 	blcs	5ca15c <_Min_Stack_Size+0x5c9d5c>
    a158:	07000004 	streq	r0, [r0, -r4]
    a15c:	88180287 	ldmdahi	r8, {r0, r1, r2, r7, r9}
    a160:	00000000 	andeq	r0, r0, r0
    a164:	00078117 	andeq	r8, r7, r7, lsl r1
    a168:	02880700 	addeq	r0, r8, #0, 14
    a16c:	0005ce12 	andeq	ip, r5, r2, lsl lr
    a170:	aa170400 	bge	5cb178 <_Min_Stack_Size+0x5cad78>
    a174:	07000003 	streq	r0, [r0, -r3]
    a178:	1e100289 	cdpne	2, 1, cr0, cr0, cr9, {4}
    a17c:	08000008 	stmdaeq	r0, {r3}
    a180:	00089717 	andeq	r9, r8, r7, lsl r7
    a184:	028a0700 	addeq	r0, sl, #0, 14
    a188:	0001b317 	andeq	fp, r1, r7, lsl r3
    a18c:	a3172400 	tstge	r7, #0, 8
    a190:	07000002 	streq	r0, [r0, -r2]
    a194:	810f028b 	smlabbhi	pc, fp, r2, r0	; <UNPREDICTABLE>
    a198:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    a19c:	00067817 	andeq	r7, r6, r7, lsl r8
    a1a0:	028c0700 	addeq	r0, ip, #0, 14
    a1a4:	00007a2c 	andeq	r7, r0, ip, lsr #20
    a1a8:	ad175000 	ldcge	0, cr5, [r7, #-0]
    a1ac:	07000008 	streq	r0, [r0, -r8]
    a1b0:	c01a028d 	andsgt	r0, sl, sp, lsl #5
    a1b4:	58000006 	stmdapl	r0, {r1, r2}
    a1b8:	00063317 	andeq	r3, r6, r7, lsl r3
    a1bc:	028e0700 	addeq	r0, lr, #0, 14
    a1c0:	00011316 	andeq	r1, r1, r6, lsl r3
    a1c4:	b2176800 	andslt	r6, r7, #0, 16
    a1c8:	07000008 	streq	r0, [r0, -r8]
    a1cc:	1316028f 	tstne	r6, #-268435448	; 0xf0000008
    a1d0:	70000001 	andvc	r0, r0, r1
    a1d4:	0000fa17 	andeq	pc, r0, r7, lsl sl	; <UNPREDICTABLE>
    a1d8:	02900700 	addseq	r0, r0, #0, 14
    a1dc:	00011316 	andeq	r1, r1, r6, lsl r3
    a1e0:	15177800 	ldrne	r7, [r7, #-2048]	; 0xfffff800
    a1e4:	07000008 	streq	r0, [r0, -r8]
    a1e8:	2e100291 	mrccs	2, 0, r0, cr0, cr1, {4}
    a1ec:	80000008 	andhi	r0, r0, r8
    a1f0:	00039e17 	andeq	r9, r3, r7, lsl lr
    a1f4:	02920700 	addseq	r0, r2, #0, 14
    a1f8:	00083e10 	andeq	r3, r8, r0, lsl lr
    a1fc:	65178800 	ldrvs	r8, [r7, #-2048]	; 0xfffff800
    a200:	07000000 	streq	r0, [r0, -r0]
    a204:	810f0293 			; <UNDEFINED> instruction: 0x810f0293
    a208:	a0000000 	andge	r0, r0, r0
    a20c:	00025f17 	andeq	r5, r2, r7, lsl pc
    a210:	02940700 	addseq	r0, r4, #0, 14
    a214:	00011316 	andeq	r1, r1, r6, lsl r3
    a218:	e117a400 	tst	r7, r0, lsl #8
    a21c:	07000000 	streq	r0, [r0, -r0]
    a220:	13160295 	tstne	r6, #1342177289	; 0x50000009
    a224:	ac000001 	stcge	0, cr0, [r0], {1}
    a228:	00023417 	andeq	r3, r2, r7, lsl r4
    a22c:	02960700 	addseq	r0, r6, #0, 14
    a230:	00011316 	andeq	r1, r1, r6, lsl r3
    a234:	7c17b400 	cfldrsvc	mvf11, [r7], {-0}
    a238:	07000000 	streq	r0, [r0, -r0]
    a23c:	13160297 	tstne	r6, #1879048201	; 0x70000009
    a240:	bc000001 	stclt	0, cr0, [r0], {1}
    a244:	00058217 	andeq	r8, r5, r7, lsl r2
    a248:	02980700 	addseq	r0, r8, #0, 14
    a24c:	00011316 	andeq	r1, r1, r6, lsl r3
    a250:	2a17c400 	bcs	5fb258 <_Min_Stack_Size+0x5fae58>
    a254:	07000006 	streq	r0, [r0, -r6]
    a258:	81080299 			; <UNDEFINED> instruction: 0x81080299
    a25c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    a260:	05d40900 	ldrbeq	r0, [r4, #2304]	; 0x900
    a264:	082e0000 	stmdaeq	lr!, {}	; <UNPREDICTABLE>
    a268:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    a26c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    a270:	05d40900 	ldrbeq	r0, [r4, #2304]	; 0x900
    a274:	083e0000 	ldmdaeq	lr!, {}	; <UNPREDICTABLE>
    a278:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    a27c:	07000000 	streq	r0, [r0, -r0]
    a280:	05d40900 	ldrbeq	r0, [r4, #2304]	; 0x900
    a284:	084e0000 	stmdaeq	lr, {}^	; <UNPREDICTABLE>
    a288:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    a28c:	17000000 	strne	r0, [r0, -r0]
    a290:	07f01a00 	ldrbeq	r1, [r0, r0, lsl #20]!
    a294:	7507029e 	strvc	r0, [r7, #-670]	; 0xfffffd62
    a298:	17000008 	strne	r0, [r0, -r8]
    a29c:	00000440 	andeq	r0, r0, r0, asr #8
    a2a0:	1b02a107 	blne	b26c4 <_Min_Stack_Size+0xb22c4>
    a2a4:	00000875 	andeq	r0, r0, r5, ror r8
    a2a8:	02c01700 	sbceq	r1, r0, #0, 14
    a2ac:	a2070000 	andge	r0, r7, #0
    a2b0:	08851802 	stmeq	r5, {r1, fp, ip}
    a2b4:	00780000 	rsbseq	r0, r8, r0
    a2b8:	00031309 	andeq	r1, r3, r9, lsl #6
    a2bc:	00088500 	andeq	r8, r8, r0, lsl #10
    a2c0:	00880a00 	addeq	r0, r8, r0, lsl #20
    a2c4:	001d0000 	andseq	r0, sp, r0
    a2c8:	00008809 	andeq	r8, r0, r9, lsl #16
    a2cc:	00089500 	andeq	r9, r8, r0, lsl #10
    a2d0:	00880a00 	addeq	r0, r8, r0, lsl #20
    a2d4:	001d0000 	andseq	r0, sp, r0
    a2d8:	8307f01b 	movwhi	pc, #28699	; 0x701b	; <UNPREDICTABLE>
    a2dc:	08ba0302 	ldmeq	sl!, {r1, r8, r9}
    a2e0:	cc1c0000 	ldcgt	0, cr0, [ip], {-0}
    a2e4:	07000006 	streq	r0, [r0, -r6]
    a2e8:	090b029a 	stmdbeq	fp, {r1, r3, r4, r7, r9}
    a2ec:	1c000007 	stcne	0, cr0, [r0], {7}
    a2f0:	0000087c 	andeq	r0, r0, ip, ror r8
    a2f4:	0b02a307 	bleq	b2f18 <_Min_Stack_Size+0xb2b18>
    a2f8:	0000084e 	andeq	r0, r0, lr, asr #16
    a2fc:	05d40900 	ldrbeq	r0, [r4, #2304]	; 0x900
    a300:	08ca0000 	stmiaeq	sl, {}^	; <UNPREDICTABLE>
    a304:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    a308:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a30c:	00c01d00 	sbceq	r1, r0, r0, lsl #26
    a310:	040f0000 	streq	r0, [pc], #-0	; a318 <_Min_Stack_Size+0x9f18>
    a314:	000008ca 	andeq	r0, r0, sl, asr #17
    a318:	0008e01e 	andeq	lr, r8, lr, lsl r0
    a31c:	047a1400 	ldrbteq	r1, [sl], #-1024	; 0xfffffc00
    a320:	0f000000 	svceq	0x00000000
    a324:	0008d504 	andeq	sp, r8, r4, lsl #10
    a328:	9d040f00 	stcls	15, cr0, [r4, #-0]
    a32c:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
    a330:	000008f7 	strdeq	r0, [r0], -r7
    a334:	00008114 	andeq	r8, r0, r4, lsl r1
    a338:	040f0000 	streq	r0, [pc], #-0	; a340 <_Min_Stack_Size+0x9f40>
    a33c:	000008fd 	strdeq	r0, [r0], -sp
    a340:	08ec040f 	stmiaeq	ip!, {r0, r1, r2, r3, sl}^
    a344:	6e090000 	cdpvs	0, 0, cr0, cr9, cr0, {0}
    a348:	13000006 	movwne	r0, #6
    a34c:	0a000009 	beq	a378 <_Min_Stack_Size+0x9f78>
    a350:	00000088 	andeq	r0, r0, r8, lsl #1
    a354:	d21f0002 	andsle	r0, pc, #2
    a358:	07000007 	streq	r0, [r0, -r7]
    a35c:	7a170333 	bvc	5cb030 <_Min_Stack_Size+0x5cac30>
    a360:	1f000004 	svcne	0x00000004
    a364:	000007cb 	andeq	r0, r0, fp, asr #15
    a368:	1d033407 	cfstrsne	mvf3, [r3, #-28]	; 0xffffffe4
    a36c:	00000480 	andeq	r0, r0, r0, lsl #9
    a370:	002aca03 	eoreq	ip, sl, r3, lsl #20
    a374:	13180900 	tstne	r8, #0, 18
    a378:	0000002c 	andeq	r0, r0, ip, lsr #32
    a37c:	00092d20 	andeq	r2, r9, r0, lsr #26
    a380:	092d1500 	pusheq	{r8, sl, ip}
    a384:	12030000 	andne	r0, r3, #0
    a388:	0900002c 	stmdbeq	r0, {r2, r3, r5}
    a38c:	004d132c 	subeq	r1, sp, ip, lsr #6
    a390:	43200000 	nopmi	{0}	; <UNPREDICTABLE>
    a394:	03000009 	movweq	r0, #9
    a398:	00002b6e 	andeq	r2, r0, lr, ror #22
    a39c:	60143009 	andsvs	r3, r4, r9
    a3a0:	20000000 	andcs	r0, r0, r0
    a3a4:	00000954 	andeq	r0, r0, r4, asr r9
    a3a8:	00096015 	andeq	r6, r9, r5, lsl r0
    a3ac:	01052100 	mrseq	r2, (UNDEF: 21)
    a3b0:	00000025 	andeq	r0, r0, r5, lsr #32
    a3b4:	7d01430a 	stcvc	3, cr4, [r1, #-40]	; 0xffffffd8
    a3b8:	2200000b 	andcs	r0, r0, #11
    a3bc:	00001112 	andeq	r1, r0, r2, lsl r1
    a3c0:	0e4d2272 	mcreq	2, 2, r2, cr13, cr2, {3}
    a3c4:	22740000 	rsbscs	r0, r4, #0
    a3c8:	00001038 	andeq	r1, r0, r8, lsr r0
    a3cc:	12042275 	andne	r2, r4, #1342177287	; 0x50000007
    a3d0:	22760000 	rsbscs	r0, r6, #0
    a3d4:	00001232 	andeq	r1, r0, r2, lsr r2
    a3d8:	11f2227b 	mvnsne	r2, fp, ror r2
    a3dc:	227c0000 	rsbscs	r0, ip, #0
    a3e0:	00000e1c 	andeq	r0, r0, ip, lsl lr
    a3e4:	11ca227e 	bicne	r2, sl, lr, ror r2
    a3e8:	237f0000 	cmncs	pc, #0
    a3ec:	00001003 	andeq	r1, r0, r3
    a3f0:	107a2300 	rsbsne	r2, sl, r0, lsl #6
    a3f4:	23010000 	movwcs	r0, #4096	; 0x1000
    a3f8:	00000e63 	andeq	r0, r0, r3, ror #28
    a3fc:	0f382302 	svceq	0x00382302
    a400:	23030000 	movwcs	r0, #12288	; 0x3000
    a404:	00000dc3 	andeq	r0, r0, r3, asr #27
    a408:	0e442304 	cdpeq	3, 4, cr2, cr4, cr4, {0}
    a40c:	23050000 	movwcs	r0, #20480	; 0x5000
    a410:	00000dce 	andeq	r0, r0, lr, asr #27
    a414:	118b2306 	orrne	r2, fp, r6, lsl #6
    a418:	23070000 	movwcs	r0, #28672	; 0x7000
    a41c:	00000f5a 	andeq	r0, r0, sl, asr pc
    a420:	102d2308 	eorne	r2, sp, r8, lsl #6
    a424:	23090000 	movwcs	r0, #36864	; 0x9000
    a428:	0000105e 	andeq	r1, r0, lr, asr r0
    a42c:	0db1230a 	ldceq	3, cr2, [r1, #40]!	; 0x28
    a430:	230b0000 	movwcs	r0, #45056	; 0xb000
    a434:	000010a3 	andeq	r1, r0, r3, lsr #1
    a438:	0ec8230c 	cdpeq	3, 12, cr2, cr8, cr12, {0}
    a43c:	230d0000 	movwcs	r0, #53248	; 0xd000
    a440:	0000127c 	andeq	r1, r0, ip, ror r2
    a444:	0f9a230e 	svceq	0x009a230e
    a448:	230f0000 	movwcs	r0, #61440	; 0xf000
    a44c:	00000d95 	muleq	r0, r5, sp
    a450:	11592310 	cmpne	r9, r0, lsl r3
    a454:	23110000 	tstcs	r1, #0
    a458:	00001088 	andeq	r1, r0, r8, lsl #1
    a45c:	11742312 	cmnne	r4, r2, lsl r3
    a460:	23130000 	tstcs	r3, #0
    a464:	000010b5 	strheq	r1, [r0], -r5
    a468:	0eee2314 	mcreq	3, 7, r2, cr14, cr4, {0}
    a46c:	23150000 	tstcs	r5, #0
    a470:	00000d58 	andeq	r0, r0, r8, asr sp
    a474:	12252316 	eorne	r2, r5, #1476395008	; 0x58000000
    a478:	23170000 	tstcs	r7, #0
    a47c:	00000e9b 	muleq	r0, fp, lr
    a480:	12bb2318 	adcsne	r2, fp, #24, 6	; 0x60000000
    a484:	23190000 	tstcs	r9, #0
    a488:	00001046 	andeq	r1, r0, r6, asr #32
    a48c:	1138231a 	teqne	r8, sl, lsl r3
    a490:	231b0000 	tstcs	fp, #0
    a494:	000011d7 	ldrdeq	r1, [r0], -r7
    a498:	0f8a231c 	svceq	0x008a231c
    a49c:	231d0000 	tstcs	sp, #0
    a4a0:	00000da7 	andeq	r0, r0, r7, lsr #27
    a4a4:	0dd9231e 	ldcleq	3, cr2, [r9, #120]	; 0x78
    a4a8:	231f0000 	tstcs	pc, #0
    a4ac:	000011b1 			; <UNDEFINED> instruction: 0x000011b1
    a4b0:	0f652320 	svceq	0x00652320
    a4b4:	23210000 			; <UNDEFINED> instruction: 0x23210000
    a4b8:	00000d66 	andeq	r0, r0, r6, ror #26
    a4bc:	0e912322 	cdpeq	3, 9, cr2, cr1, cr2, {1}
    a4c0:	23230000 			; <UNDEFINED> instruction: 0x23230000
    a4c4:	00001268 	andeq	r1, r0, r8, ror #4
    a4c8:	10fb2324 	rscsne	r2, fp, r4, lsr #6
    a4cc:	23250000 			; <UNDEFINED> instruction: 0x23250000
    a4d0:	00000f19 	andeq	r0, r0, r9, lsl pc
    a4d4:	12af2326 	adcne	r2, pc, #-1744830464	; 0x98000000
    a4d8:	23270000 			; <UNDEFINED> instruction: 0x23270000
    a4dc:	00000df9 	strdeq	r0, [r0], -r9
    a4e0:	10c32328 	sbcne	r2, r3, r8, lsr #6
    a4e4:	23290000 			; <UNDEFINED> instruction: 0x23290000
    a4e8:	00000e28 	andeq	r0, r0, r8, lsr #28
    a4ec:	0e08232a 	cdpeq	3, 0, cr2, cr8, cr10, {1}
    a4f0:	232b0000 			; <UNDEFINED> instruction: 0x232b0000
    a4f4:	00000ff0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a4f8:	123e232c 	eorsne	r2, lr, #44, 6	; 0xb0000000
    a4fc:	232d0000 			; <UNDEFINED> instruction: 0x232d0000
    a500:	0000114c 	andeq	r1, r0, ip, asr #2
    a504:	0eb6232e 	cdpeq	3, 11, cr2, cr6, cr14, {1}
    a508:	232f0000 			; <UNDEFINED> instruction: 0x232f0000
    a50c:	00001181 	andeq	r1, r0, r1, lsl #3
    a510:	0d4e2330 	stcleq	3, cr2, [lr, #-192]	; 0xffffff40
    a514:	23310000 	teqcs	r1, #0
    a518:	00001091 	muleq	r0, r1, r0
    a51c:	0f722332 	svceq	0x00722332
    a520:	23330000 	teqcs	r3, #0
    a524:	00000e39 	andeq	r0, r0, r9, lsr lr
    a528:	11072334 	tstne	r7, r4, lsr r3
    a52c:	23350000 	teqcs	r5, #0
    a530:	00001196 	muleq	r0, r6, r1
    a534:	12722336 	rsbsne	r2, r2, #-671088640	; 0xd8000000
    a538:	23370000 	teqcs	r7, #0
    a53c:	00000d73 	andeq	r0, r0, r3, ror sp
    a540:	11262338 			; <UNDEFINED> instruction: 0x11262338
    a544:	23390000 	teqcs	r9, #0
    a548:	00000e7f 	andeq	r0, r0, pc, ror lr
    a54c:	1256233a 	subsne	r2, r6, #-402653184	; 0xe8000000
    a550:	233b0000 	teqcs	fp, #0
    a554:	0000101b 	andeq	r1, r0, fp, lsl r0
    a558:	128e233c 	addne	r2, lr, #60, 6	; 0xf0000000
    a55c:	233f0000 	teqcs	pc, #0
    a560:	00000f7c 	andeq	r0, r0, ip, ror pc
    a564:	100d2340 	andne	r2, sp, r0, asr #6
    a568:	23410000 	movtcs	r0, #4096	; 0x1000
    a56c:	00000ee0 	andeq	r0, r0, r0, ror #29
    a570:	0e732342 	cdpeq	3, 7, cr2, cr3, cr2, {2}
    a574:	23430000 	movtcs	r0, #12288	; 0x3000
    a578:	00000d3c 	andeq	r0, r0, ip, lsr sp
    a57c:	10dc2344 	sbcsne	r2, ip, r4, asr #6
    a580:	23450000 	movtcs	r0, #20480	; 0x5000
    a584:	00000f02 	andeq	r0, r0, r2, lsl #30
    a588:	11be2346 			; <UNDEFINED> instruction: 0x11be2346
    a58c:	23470000 	movtcs	r0, #28672	; 0x7000
    a590:	000010ee 	andeq	r1, r0, lr, ror #1
    a594:	0f252348 	svceq	0x00252348
    a598:	23490000 	movtcs	r0, #36864	; 0x9000
    a59c:	0000129b 	muleq	r0, fp, r2
    a5a0:	0de6234a 	stcleq	3, cr2, [r6, #296]!	; 0x128
    a5a4:	234b0000 	movtcs	r0, #45056	; 0xb000
    a5a8:	000011e1 	andeq	r1, r0, r1, ror #3
    a5ac:	0f46234c 	svceq	0x0046234c
    a5b0:	234d0000 	movtcs	r0, #53248	; 0xd000
    a5b4:	0000116b 	andeq	r1, r0, fp, ror #2
    a5b8:	12e12350 	rscne	r2, r1, #80, 6	; 0x40000001
    a5bc:	00510000 	subseq	r0, r1, r0
    a5c0:	001b3103 	andseq	r3, fp, r3, lsl #2
    a5c4:	039c0a00 	orrseq	r0, ip, #0, 20
    a5c8:	0000096a 	andeq	r0, r0, sl, ror #18
    a5cc:	010e0424 	tsteq	lr, r4, lsr #8
    a5d0:	53090196 	movwpl	r0, #37270	; 0x9196
    a5d4:	1700000c 	strne	r0, [r0, -ip]
    a5d8:	00001ac9 	andeq	r1, r0, r9, asr #21
    a5dc:	12019801 	andne	r9, r1, #65536	; 0x10000
    a5e0:	00000c63 	andeq	r0, r0, r3, ror #24
    a5e4:	05ad1700 	streq	r1, [sp, #1792]!	; 0x700
    a5e8:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    a5ec:	0c681201 	sfmeq	f1, 2, [r8], #-4
    a5f0:	17200000 	strne	r0, [r0, -r0]!
    a5f4:	00001a62 	andeq	r1, r0, r2, ror #20
    a5f8:	12019a01 	andne	r9, r1, #4096	; 0x1000
    a5fc:	00000c63 	andeq	r0, r0, r3, ror #24
    a600:	1c111780 	ldcne	7, cr1, [r1], {128}	; 0x80
    a604:	9b010000 	blls	4a60c <_Min_Stack_Size+0x4a20c>
    a608:	0c681201 	sfmeq	f1, 2, [r8], #-4
    a60c:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
    a610:	000017d9 	ldrdeq	r1, [r0], -r9
    a614:	12019c01 	andne	r9, r1, #256	; 0x100
    a618:	00000c63 	andeq	r0, r0, r3, ror #24
    a61c:	c1180100 	tstgt	r8, r0, lsl #2
    a620:	01000005 	tsteq	r0, r5
    a624:	6812019d 	ldmdavs	r2, {r0, r2, r3, r4, r7, r8}
    a628:	2000000c 	andcs	r0, r0, ip
    a62c:	17891801 	strne	r1, [r9, r1, lsl #16]
    a630:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    a634:	0c631201 	sfmeq	f1, 2, [r3], #-4
    a638:	01800000 	orreq	r0, r0, r0
    a63c:	00003818 	andeq	r3, r0, r8, lsl r8
    a640:	019f0100 	orrseq	r0, pc, r0, lsl #2
    a644:	000c6812 	andeq	r6, ip, r2, lsl r8
    a648:	1801a000 	stmdane	r1, {sp, pc}
    a64c:	000019e1 	andeq	r1, r0, r1, ror #19
    a650:	1201a001 	andne	sl, r1, #1
    a654:	00000c63 	andeq	r0, r0, r3, ror #24
    a658:	dd180200 	lfmle	f0, 4, [r8, #-0]
    a65c:	01000005 	tsteq	r0, r5
    a660:	781201a1 	ldmdavc	r2, {r0, r5, r7, r8}
    a664:	2000000c 	andcs	r0, r0, ip
    a668:	50492502 	subpl	r2, r9, r2, lsl #10
    a66c:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    a670:	000c9812 	andeq	r9, ip, r2, lsl r8
    a674:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    a678:	000006d9 	ldrdeq	r0, [r0], -r9
    a67c:	1201a301 	andne	sl, r1, #67108864	; 0x4000000
    a680:	00000c9d 	muleq	r0, sp, ip
    a684:	1a1803f0 	bne	60b64c <_Min_Stack_Size+0x60b24c>
    a688:	0100001c 	tsteq	r0, ip, lsl r0
    a68c:	601201a4 	andsvs	r0, r2, r4, lsr #3
    a690:	00000009 	andeq	r0, r0, r9
    a694:	6009000e 	andvs	r0, r9, lr
    a698:	63000009 	movwvs	r0, #9
    a69c:	0a00000c 	beq	a6d4 <_Min_Stack_Size+0xa2d4>
    a6a0:	00000088 	andeq	r0, r0, r8, lsl #1
    a6a4:	53200007 			; <UNDEFINED> instruction: 0x53200007
    a6a8:	0900000c 	stmdbeq	r0, {r2, r3}
    a6ac:	00000954 	andeq	r0, r0, r4, asr r9
    a6b0:	00000c78 	andeq	r0, r0, r8, ror ip
    a6b4:	0000880a 	andeq	r8, r0, sl, lsl #16
    a6b8:	09001700 	stmdbeq	r0, {r8, r9, sl, ip}
    a6bc:	00000954 	andeq	r0, r0, r4, asr r9
    a6c0:	00000c88 	andeq	r0, r0, r8, lsl #25
    a6c4:	0000880a 	andeq	r8, r0, sl, lsl #16
    a6c8:	09003700 	stmdbeq	r0, {r8, r9, sl, ip, sp}
    a6cc:	00000939 	andeq	r0, r0, r9, lsr r9
    a6d0:	00000c98 	muleq	r0, r8, ip
    a6d4:	0000880a 	andeq	r8, r0, sl, lsl #16
    a6d8:	2000ef00 	andcs	lr, r0, r0, lsl #30
    a6dc:	00000c88 	andeq	r0, r0, r8, lsl #25
    a6e0:	00095409 	andeq	r5, r9, r9, lsl #8
    a6e4:	000cae00 	andeq	sl, ip, r0, lsl #28
    a6e8:	00882600 	addeq	r2, r8, r0, lsl #12
    a6ec:	02830000 	addeq	r0, r3, #0
    a6f0:	1ace0600 	bne	ff38bef8 <__StackLimit+0xdf36bef8>
    a6f4:	a5010000 	strge	r0, [r1, #-0]
    a6f8:	0b890401 	bleq	fe24b704 <__StackLimit+0xde22b704>
    a6fc:	8c1a0000 	ldchi	0, cr0, [sl], {-0}
    a700:	0901b801 	stmdbeq	r1, {r0, fp, ip, sp, pc}
    a704:	00000dec 	andeq	r0, r0, ip, ror #27
    a708:	00135417 	andseq	r5, r3, r7, lsl r4
    a70c:	01ba0100 			; <UNDEFINED> instruction: 0x01ba0100
    a710:	00096512 	andeq	r6, r9, r2, lsl r5
    a714:	4f170000 	svcmi	0x00170000
    a718:	01000013 	tsteq	r0, r3, lsl r0
    a71c:	601201bb 			; <UNDEFINED> instruction: 0x601201bb
    a720:	04000009 	streq	r0, [r0], #-9
    a724:	0013fe17 	andseq	pc, r3, r7, lsl lr	; <UNPREDICTABLE>
    a728:	01bc0100 			; <UNDEFINED> instruction: 0x01bc0100
    a72c:	00096012 	andeq	r6, r9, r2, lsl r0
    a730:	c6170800 	ldrgt	r0, [r7], -r0, lsl #16
    a734:	01000013 	tsteq	r0, r3, lsl r0
    a738:	601201bd 			; <UNDEFINED> instruction: 0x601201bd
    a73c:	0c000009 	stceq	0, cr0, [r0], {9}
    a740:	52435327 	subpl	r5, r3, #-1677721600	; 0x9c000000
    a744:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    a748:	00096012 	andeq	r6, r9, r2, lsl r0
    a74c:	43271000 			; <UNDEFINED> instruction: 0x43271000
    a750:	01005243 	tsteq	r0, r3, asr #4
    a754:	601201bf 			; <UNDEFINED> instruction: 0x601201bf
    a758:	14000009 	strne	r0, [r0], #-9
    a75c:	50485327 	subpl	r5, r8, r7, lsr #6
    a760:	01c00100 	biceq	r0, r0, r0, lsl #2
    a764:	000dfc12 	andeq	pc, sp, r2, lsl ip	; <UNPREDICTABLE>
    a768:	d5171800 	ldrle	r1, [r7, #-2048]	; 0xfffff800
    a76c:	01000013 	tsteq	r0, r3, lsl r0
    a770:	601201c1 	andsvs	r0, r2, r1, asr #3
    a774:	24000009 	strcs	r0, [r0], #-9
    a778:	0013ad17 	andseq	sl, r3, r7, lsl sp
    a77c:	01c20100 	biceq	r0, r2, r0, lsl #2
    a780:	00096012 	andeq	r6, r9, r2, lsl r0
    a784:	0d172800 	ldceq	8, cr2, [r7, #-0]
    a788:	01000014 	tsteq	r0, r4, lsl r0
    a78c:	601201c3 	andsvs	r0, r2, r3, asr #3
    a790:	2c000009 	stccs	0, cr0, [r0], {9}
    a794:	00140817 	andseq	r0, r4, r7, lsl r8
    a798:	01c40100 	biceq	r0, r4, r0, lsl #2
    a79c:	00096012 	andeq	r6, r9, r2, lsl r0
    a7a0:	f1173000 			; <UNDEFINED> instruction: 0xf1173000
    a7a4:	01000013 	tsteq	r0, r3, lsl r0
    a7a8:	601201c5 	andsvs	r0, r2, r5, asr #3
    a7ac:	34000009 	strcc	r0, [r0], #-9
    a7b0:	0013a817 	andseq	sl, r3, r7, lsl r8
    a7b4:	01c60100 	biceq	r0, r6, r0, lsl #2
    a7b8:	00096012 	andeq	r6, r9, r2, lsl r0
    a7bc:	17173800 	ldrne	r3, [r7, -r0, lsl #16]
    a7c0:	01000014 	tsteq	r0, r4, lsl r0
    a7c4:	601201c7 	andsvs	r0, r2, r7, asr #3
    a7c8:	3c000009 	stccc	0, cr0, [r0], {9}
    a7cc:	52465027 	subpl	r5, r6, #39	; 0x27
    a7d0:	01c80100 	biceq	r0, r8, r0, lsl #2
    a7d4:	000e1612 	andeq	r1, lr, r2, lsl r6
    a7d8:	44274000 	strtmi	r4, [r7], #-0
    a7dc:	01005246 	tsteq	r0, r6, asr #4
    a7e0:	651201c9 	ldrvs	r0, [r2, #-457]	; 0xfffffe37
    a7e4:	48000009 	stmdami	r0, {r0, r3}
    a7e8:	52444127 	subpl	r4, r4, #-1073741815	; 0xc0000009
    a7ec:	01ca0100 	biceq	r0, sl, r0, lsl #2
    a7f0:	00096512 	andeq	r6, r9, r2, lsl r5
    a7f4:	12174c00 	andsne	r4, r7, #0, 24
    a7f8:	01000014 	tsteq	r0, r4, lsl r0
    a7fc:	301201cb 	andscc	r0, r2, fp, asr #3
    a800:	5000000e 	andpl	r0, r0, lr
    a804:	00140317 	andseq	r0, r4, r7, lsl r3
    a808:	01cc0100 	biceq	r0, ip, r0, lsl #2
    a80c:	000e4a12 	andeq	r4, lr, r2, lsl sl
    a810:	ad176000 	ldcge	0, cr6, [r7, #-0]
    a814:	01000005 	tsteq	r0, r5
    a818:	4f1201cd 	svcmi	0x001201cd
    a81c:	7400000e 	strvc	r0, [r0], #-14
    a820:	00141c17 	andseq	r1, r4, r7, lsl ip
    a824:	01ce0100 	biceq	r0, lr, r0, lsl #2
    a828:	00096012 	andeq	r6, r9, r2, lsl r0
    a82c:	09008800 	stmdbeq	r0, {fp, pc}
    a830:	00000939 	andeq	r0, r0, r9, lsr r9
    a834:	00000dfc 	strdeq	r0, [r0], -ip
    a838:	0000880a 	andeq	r8, r0, sl, lsl #16
    a83c:	20000b00 	andcs	r0, r0, r0, lsl #22
    a840:	00000dec 	andeq	r0, r0, ip, ror #27
    a844:	00096509 	andeq	r6, r9, r9, lsl #10
    a848:	000e1100 	andeq	r1, lr, r0, lsl #2
    a84c:	00880a00 	addeq	r0, r8, r0, lsl #20
    a850:	00010000 	andeq	r0, r1, r0
    a854:	000e0115 	andeq	r0, lr, r5, lsl r1
    a858:	0e112000 	cdpeq	0, 1, cr2, cr1, cr0, {0}
    a85c:	65090000 	strvs	r0, [r9, #-0]
    a860:	2b000009 	blcs	a88c <_Min_Stack_Size+0xa48c>
    a864:	0a00000e 	beq	a8a4 <_Min_Stack_Size+0xa4a4>
    a868:	00000088 	andeq	r0, r0, r8, lsl #1
    a86c:	1b150003 	blne	54a880 <_Min_Stack_Size+0x54a480>
    a870:	2000000e 	andcs	r0, r0, lr
    a874:	00000e2b 	andeq	r0, r0, fp, lsr #28
    a878:	00096509 	andeq	r6, r9, r9, lsl #10
    a87c:	000e4500 	andeq	r4, lr, r0, lsl #10
    a880:	00880a00 	addeq	r0, r8, r0, lsl #20
    a884:	00040000 	andeq	r0, r4, r0
    a888:	000e3515 	andeq	r3, lr, r5, lsl r5
    a88c:	0e452000 	cdpeq	0, 4, cr2, cr5, cr0, {0}
    a890:	54090000 	strpl	r0, [r9], #-0
    a894:	5f000009 	svcpl	0x00000009
    a898:	0a00000e 	beq	a8d8 <_Min_Stack_Size+0xa4d8>
    a89c:	00000088 	andeq	r0, r0, r8, lsl #1
    a8a0:	cc060004 	stcgt	0, cr0, [r6], {4}
    a8a4:	01000013 	tsteq	r0, r3, lsl r0
    a8a8:	bb0301cf 	bllt	cafec <_Min_Stack_Size+0xcabec>
    a8ac:	1f00000c 	svcne	0x0000000c
    a8b0:	000000d4 	ldrdeq	r0, [r0], -r4
    a8b4:	19080401 	stmdbne	r8, {r0, sl}
    a8b8:	0000094f 	andeq	r0, r0, pc, asr #18
    a8bc:	00059328 	andeq	r9, r5, r8, lsr #6
    a8c0:	114a0b00 	cmpne	sl, r0, lsl #22
    a8c4:	00000954 	andeq	r0, r0, r4, asr r9
    a8c8:	00093e09 	andeq	r3, r9, r9, lsl #28
    a8cc:	000e9500 	andeq	r9, lr, r0, lsl #10
    a8d0:	00880a00 	addeq	r0, r8, r0, lsl #20
    a8d4:	000f0000 	andeq	r0, pc, r0
    a8d8:	000e8515 	andeq	r8, lr, r5, lsl r5
    a8dc:	07602800 	strbeq	r2, [r0, -r0, lsl #16]!
    a8e0:	4c0b0000 	stcmi	0, cr0, [fp], {-0}
    a8e4:	000e9517 	andeq	r9, lr, r7, lsl r5
    a8e8:	093e0900 	ldmdbeq	lr!, {r8, fp}
    a8ec:	0eb60000 	cdpeq	0, 11, cr0, cr6, cr0, {0}
    a8f0:	880a0000 	stmdahi	sl, {}	; <UNPREDICTABLE>
    a8f4:	07000000 	streq	r0, [r0, -r0]
    a8f8:	0ea61500 	cdpeq	5, 10, cr1, cr6, cr0, {0}
    a8fc:	b2280000 	eorlt	r0, r8, #0
    a900:	0b000002 	bleq	a910 <_Min_Stack_Size+0xa510>
    a904:	0eb6174d 	cdpeq	7, 11, cr1, cr6, cr13, {2}
    a908:	07210000 	streq	r0, [r1, -r0]!
    a90c:	00003801 	andeq	r3, r0, r1, lsl #16
    a910:	01330c00 	teqeq	r3, r0, lsl #24
    a914:	00000eee 	andeq	r0, r0, lr, ror #29
    a918:	00084623 	andeq	r4, r8, r3, lsr #12
    a91c:	3d236400 	cfstrscc	mvf6, [r3, #-0]
    a920:	0a000007 	beq	a944 <_Min_Stack_Size+0xa544>
    a924:	00035623 	andeq	r5, r3, r3, lsr #12
    a928:	4c230100 	stfmis	f0, [r3], #-0
    a92c:	01000005 	tsteq	r0, r5
    a930:	00140300 	andseq	r0, r4, r0, lsl #6
    a934:	380c0000 	stmdacc	ip, {}	; <UNPREDICTABLE>
    a938:	000ec703 	andeq	ip, lr, r3, lsl #14
    a93c:	02fe2800 	rscseq	r2, lr, #0, 16
    a940:	cd0c0000 	stcgt	0, cr0, [ip, #-0]
    a944:	00096016 	andeq	r6, r9, r6, lsl r0
    a948:	03c02800 	biceq	r2, r0, #0, 16
    a94c:	ce0c0000 	cdpgt	0, 0, cr0, cr12, cr0, {0}
    a950:	00095411 	andeq	r5, r9, r1, lsl r4
    a954:	02f32800 	rscseq	r2, r3, #0, 16
    a958:	cf0c0000 	svcgt	0x000c0000
    a95c:	000eee1c 	andeq	lr, lr, ip, lsl lr
    a960:	2b810d00 	blcs	fe04dd68 <__StackLimit+0xde02dd68>
    a964:	0d080000 	stceq	0, cr0, [r8, #-0]
    a968:	0f461004 	svceq	0x00461004
    a96c:	200c0000 	andcs	r0, ip, r0
    a970:	0d00002b 	stceq	0, cr0, [r0, #-172]	; 0xffffff54
    a974:	0f461405 	svceq	0x00461405
    a978:	0c000000 	stceq	0, cr0, [r0], {-0}
    a97c:	00002b77 	andeq	r2, r0, r7, ror fp
    a980:	4614060d 	ldrmi	r0, [r4], -sp, lsl #12
    a984:	0400000f 	streq	r0, [r0], #-15
    a988:	1e040f00 	cdpne	15, 0, cr0, cr4, cr0, {0}
    a98c:	0300000f 	movweq	r0, #15
    a990:	00002b88 	andeq	r2, r0, r8, lsl #23
    a994:	1e03070d 	cdpne	7, 0, cr0, cr3, cr13, {0}
    a998:	0300000f 	movweq	r0, #15
    a99c:	00002bf4 	strdeq	r2, [r0], -r4
    a9a0:	54120a0e 	ldrpl	r0, [r2], #-2574	; 0xfffff5f2
    a9a4:	0b000009 	bleq	a9d0 <_Min_Stack_Size+0xa5d0>
    a9a8:	090f0e24 	stmdbeq	pc, {r2, r5, r9, sl, fp}	; <UNPREDICTABLE>
    a9ac:	00000fc9 	andeq	r0, r0, r9, asr #31
    a9b0:	0031790c 	eorseq	r7, r1, ip, lsl #18
    a9b4:	13100e00 	tstne	r0, #0, 28
    a9b8:	00000fc9 	andeq	r0, r0, r9, asr #31
    a9bc:	2b2a0c00 	blcs	a8d9c4 <_Min_Stack_Size+0xa8d5c4>
    a9c0:	110e0000 	mrsne	r0, (UNDEF: 14)
    a9c4:	0009540e 	andeq	r5, r9, lr, lsl #8
    a9c8:	ee0c0400 	cfcpys	mvf0, mvf12
    a9cc:	0e00002c 	cdpeq	0, 0, cr0, cr0, cr12, {1}
    a9d0:	09540e12 	ldmdbeq	r4, {r1, r4, r9, sl, fp}^
    a9d4:	0c080000 	stceq	0, cr0, [r8], {-0}
    a9d8:	00002b36 	andeq	r2, r0, r6, lsr fp
    a9dc:	4c0c130e 	stcmi	3, cr1, [ip], {14}
    a9e0:	0c00000f 	stceq	0, cr0, [r0], {15}
    a9e4:	002abe0c 	eoreq	fp, sl, ip, lsl #28
    a9e8:	0c140e00 	ldceq	14, cr0, [r4], {-0}
    a9ec:	00000f4c 	andeq	r0, r0, ip, asr #30
    a9f0:	01020c14 	tsteq	r2, r4, lsl ip
    a9f4:	150e0000 	strne	r0, [lr, #-0]
    a9f8:	0009540e 	andeq	r5, r9, lr, lsl #8
    a9fc:	b80c1c00 	stmdalt	ip, {sl, fp, ip}
    aa00:	0e00002a 	cdpeq	0, 0, cr0, cr0, cr10, {1}
    aa04:	09540e17 	ldmdbeq	r4, {r0, r1, r2, r4, r9, sl, fp}^
    aa08:	00200000 	eoreq	r0, r0, r0
    aa0c:	0f58040f 	svceq	0x0058040f
    aa10:	65030000 	strvs	r0, [r3, #-0]
    aa14:	0e00002b 	cdpeq	0, 0, cr0, cr0, cr11, {1}
    aa18:	0f640318 	svceq	0x00640318
    aa1c:	cf280000 	svcgt	0x00280000
    aa20:	0e00002b 	cdpeq	0, 0, cr0, cr0, cr11, {1}
    aa24:	0fe7101a 	svceq	0x00e7101a
    aa28:	040f0000 	streq	r0, [pc], #-0	; aa30 <_Min_Stack_Size+0xa630>
    aa2c:	00000fcf 	andeq	r0, r0, pc, asr #31
    aa30:	002bdc28 	eoreq	sp, fp, r8, lsr #24
    aa34:	101b0e00 	andsne	r0, fp, r0, lsl #28
    aa38:	00000fe7 	andeq	r0, r0, r7, ror #31
    aa3c:	002aef29 	eoreq	lr, sl, r9, lsr #30
    aa40:	09060200 	stmdbeq	r6, {r9}
    aa44:	0000092d 	andeq	r0, r0, sp, lsr #18
    aa48:	06500305 	ldrbeq	r0, [r0], -r5, lsl #6
    aa4c:	002a2000 	eoreq	r2, sl, r0
    aa50:	0200002b 	andeq	r0, r0, #43	; 0x2b
    aa54:	3194061a 	orrscc	r0, r4, sl, lsl r6
    aa58:	001c0800 	andseq	r0, ip, r0, lsl #16
    aa5c:	9c010000 	stcls	0, cr0, [r1], {-0}
    aa60:	002c012b 	eoreq	r0, ip, fp, lsr #2
    aa64:	06140200 	ldreq	r0, [r4], -r0, lsl #4
    aa68:	08003160 	stmdaeq	r0, {r5, r6, r8, ip, sp}
    aa6c:	00000034 	andeq	r0, r0, r4, lsr r0
    aa70:	104d9c01 	subne	r9, sp, r1, lsl #24
    aa74:	612c0000 			; <UNDEFINED> instruction: 0x612c0000
    aa78:	6a000011 	bvs	aac4 <_Min_Stack_Size+0xa6c4>
    aa7c:	06080031 			; <UNDEFINED> instruction: 0x06080031
    aa80:	02000000 	andeq	r0, r0, #0
    aa84:	6f2d0516 	svcvs	0x002d0516
    aa88:	02000011 	andeq	r0, r0, #17
    aa8c:	00007491 	muleq	r0, r1, r4
    aa90:	002adc2e 	eoreq	sp, sl, lr, lsr #24
    aa94:	060f0200 	streq	r0, [pc], -r0, lsl #4
    aa98:	08003142 	stmdaeq	r0, {r1, r6, r8, ip, sp}
    aa9c:	0000001c 	andeq	r0, r0, ip, lsl r0
    aaa0:	108c9c01 	addne	r9, ip, r1, lsl #24
    aaa4:	bb2f0000 	bllt	bcaaac <_Min_Stack_Size+0xbca6ac>
    aaa8:	02000021 	andeq	r0, r0, #33	; 0x21
    aaac:	0954230f 	ldmdbeq	r4, {r0, r1, r2, r3, r8, r9, sp}^
    aab0:	91020000 	mrsls	r0, (UNDEF: 2)
    aab4:	11252c6c 			; <UNDEFINED> instruction: 0x11252c6c
    aab8:	314e0000 	mrscc	r0, (UNDEF: 78)
    aabc:	00060800 	andeq	r0, r6, r0, lsl #16
    aac0:	11020000 	mrsne	r0, (UNDEF: 2)
    aac4:	11332d05 	teqne	r3, r5, lsl #26
    aac8:	91020000 	mrsls	r0, (UNDEF: 2)
    aacc:	30000074 	andcc	r0, r0, r4, ror r0
    aad0:	00002b0c 	andeq	r2, r0, ip, lsl #22
    aad4:	540a0802 	strpl	r0, [sl], #-2050	; 0xfffff7fe
    aad8:	24000009 	strcs	r0, [r0], #-9
    aadc:	1e080031 	mcrne	0, 0, r0, cr8, cr1, {1}
    aae0:	01000000 	mrseq	r0, (UNDEF: 0)
    aae4:	0010ed9c 	mulseq	r0, ip, sp
    aae8:	2bb83100 	blcs	fee16ef0 <__StackLimit+0xdedf6ef0>
    aaec:	0a020000 	beq	8aaf4 <_Min_Stack_Size+0x8a6f4>
    aaf0:	0009540e 	andeq	r5, r9, lr, lsl #8
    aaf4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    aaf8:	00114132 	andseq	r4, r1, r2, lsr r1
    aafc:	00312a00 	eorseq	r2, r1, r0, lsl #20
    ab00:	00000808 	andeq	r0, r0, r8, lsl #16
    ab04:	180a0200 	stmdane	sl, {r9}
    ab08:	000010dc 	ldrdeq	r1, [r0], -ip
    ab0c:	00312a33 	eorseq	r2, r1, r3, lsr sl
    ab10:	00000808 	andeq	r0, r0, r8, lsl #16
    ab14:	11533400 	cmpne	r3, r0, lsl #8
    ab18:	91020000 	mrsls	r0, (UNDEF: 2)
    ab1c:	35000070 	strcc	r0, [r0, #-112]	; 0xffffff90
    ab20:	0000117d 	andeq	r1, r0, sp, ror r1
    ab24:	08003134 	stmdaeq	r0, {r2, r4, r5, r8, ip, sp}
    ab28:	00000002 	andeq	r0, r0, r2
    ab2c:	00050b02 	andeq	r0, r5, r2, lsl #22
    ab30:	0017ae36 	andseq	sl, r7, r6, lsr lr
    ab34:	07180100 	ldreq	r0, [r8, -r0, lsl #2]
    ab38:	0030d016 	eorseq	sp, r0, r6, lsl r0
    ab3c:	00005408 	andeq	r5, r0, r8, lsl #8
    ab40:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
    ab44:	37000011 	smladcc	r0, r1, r0, r0
    ab48:	000012c9 	andeq	r1, r0, r9, asr #5
    ab4c:	33071801 	movwcc	r1, #30721	; 0x7801
    ab50:	00000b7d 	andeq	r0, r0, sp, ror fp
    ab54:	37779102 	ldrbcc	r9, [r7, -r2, lsl #2]!
    ab58:	00002cee 	andeq	r2, r0, lr, ror #25
    ab5c:	42071801 	andmi	r1, r7, #65536	; 0x10000
    ab60:	00000954 	andeq	r0, r0, r4, asr r9
    ab64:	00709102 	rsbseq	r9, r0, r2, lsl #2
    ab68:	002b4138 	eoreq	r4, fp, r8, lsr r1
    ab6c:	019c0300 	orrseq	r0, ip, r0, lsl #6
    ab70:	1141031b 	cmpne	r1, fp, lsl r3
    ab74:	4f390000 	svcmi	0x00390000
    ab78:	0300002b 	movweq	r0, #43	; 0x2b
    ab7c:	5432019c 	ldrtpl	r0, [r2], #-412	; 0xfffffe64
    ab80:	00000009 	andeq	r0, r0, r9
    ab84:	002be63a 	eoreq	lr, fp, sl, lsr r6
    ab88:	017e0300 	cmneq	lr, r0, lsl #6
    ab8c:	0009541f 	andeq	r5, r9, pc, lsl r4
    ab90:	11610300 	cmnne	r1, r0, lsl #6
    ab94:	fe3b0000 	cdp2	0, 3, cr0, cr11, cr0, {0}
    ab98:	03000003 	movweq	r0, #3
    ab9c:	540c0180 	strpl	r0, [ip], #-384	; 0xfffffe80
    aba0:	00000009 	andeq	r0, r0, r9
    aba4:	002ad238 	eoreq	sp, sl, r8, lsr r2
    aba8:	01150300 	tsteq	r5, r0, lsl #6
    abac:	117d031b 	cmnne	sp, fp, lsl r3
    abb0:	c0390000 	eorsgt	r0, r9, r0
    abb4:	0300002b 	movweq	r0, #43	; 0x2b
    abb8:	542e0115 	strtpl	r0, [lr], #-277	; 0xfffffeeb
    abbc:	00000009 	andeq	r0, r0, r9
    abc0:	002b573c 	eoreq	r5, fp, ip, lsr r7
    abc4:	1b8c0300 	blne	fe30b7cc <__StackLimit+0xde2eb7cc>
    abc8:	16bb0003 	ldrtne	r0, [fp], r3
    abcc:	00040000 	andeq	r0, r4, r0
    abd0:	0000207a 	andeq	r2, r0, sl, ror r0
    abd4:	04470104 	strbeq	r0, [r7], #-260	; 0xfffffefc
    abd8:	9c0c0000 	stcls	0, cr0, [ip], {-0}
    abdc:	be00002d 	cdplt	0, 0, cr0, cr0, cr13, {1}
    abe0:	08000001 	stmdaeq	r0, {r0}
    abe4:	00000007 	andeq	r0, r0, r7
    abe8:	fb000000 	blx	abf2 <_Min_Stack_Size+0xa7f2>
    abec:	02000055 	andeq	r0, r0, #85	; 0x55
    abf0:	07a90601 	streq	r0, [r9, r1, lsl #12]!
    abf4:	02020000 	andeq	r0, r2, #0
    abf8:	00000005 	andeq	r0, r0, r5
    abfc:	2c120300 	ldccs	3, cr0, [r2], {-0}
    ac00:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    ac04:	00004418 	andeq	r4, r0, r8, lsl r4
    ac08:	00330400 	eorseq	r0, r3, r0, lsl #8
    ac0c:	04020000 	streq	r0, [r2], #-0
    ac10:	0001b505 	andeq	fp, r1, r5, lsl #10
    ac14:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    ac18:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    ac1c:	002aca03 	eoreq	ip, sl, r3, lsl #20
    ac20:	182e0300 	stmdane	lr!, {r8, r9}
    ac24:	00000068 	andeq	r0, r0, r8, rrx
    ac28:	00005204 	andeq	r5, r0, r4, lsl #4
    ac2c:	00520500 	subseq	r0, r2, r0, lsl #10
    ac30:	01020000 	mrseq	r0, (UNDEF: 2)
    ac34:	0007a708 	andeq	sl, r7, r8, lsl #14
    ac38:	07020200 	streq	r0, [r2, -r0, lsl #4]
    ac3c:	00000377 	andeq	r0, r0, r7, ror r3
    ac40:	002b6e03 	eoreq	r6, fp, r3, lsl #28
    ac44:	19340300 	ldmdbne	r4!, {r8, r9}
    ac48:	0000008c 	andeq	r0, r0, ip, lsl #1
    ac4c:	00007604 	andeq	r7, r0, r4, lsl #12
    ac50:	00820500 	addeq	r0, r2, r0, lsl #10
    ac54:	04020000 	streq	r0, [r2], #-0
    ac58:	0000a507 	andeq	sl, r0, r7, lsl #10
    ac5c:	07080200 	streq	r0, [r8, -r0, lsl #4]
    ac60:	000000a0 	andeq	r0, r0, r0, lsr #1
    ac64:	69050406 	stmdbvs	r5, {r1, r2, sl}
    ac68:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    ac6c:	00aa0704 	adceq	r0, sl, r4, lsl #14
    ac70:	05070000 	streq	r0, [r7, #-0]
    ac74:	00002501 	andeq	r2, r0, r1, lsl #10
    ac78:	01430400 	cmpeq	r3, r0, lsl #8
    ac7c:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    ac80:	00111208 	andseq	r1, r1, r8, lsl #4
    ac84:	4d087200 	sfmmi	f7, 4, [r8, #-0]
    ac88:	7400000e 	strvc	r0, [r0], #-14
    ac8c:	00103808 	andseq	r3, r0, r8, lsl #16
    ac90:	04087500 	streq	r7, [r8], #-1280	; 0xfffffb00
    ac94:	76000012 			; <UNDEFINED> instruction: 0x76000012
    ac98:	00123208 	andseq	r3, r2, r8, lsl #4
    ac9c:	f2087b00 	vqdmulh.s<illegal width 8>	d7, d8, d0
    aca0:	7c000011 	stcvc	0, cr0, [r0], {17}
    aca4:	000e1c08 	andeq	r1, lr, r8, lsl #24
    aca8:	ca087e00 	bgt	22a4b0 <_Min_Stack_Size+0x22a0b0>
    acac:	7f000011 	svcvc	0x00000011
    acb0:	00100309 	andseq	r0, r0, r9, lsl #6
    acb4:	7a090000 	bvc	24acbc <_Min_Stack_Size+0x24a8bc>
    acb8:	01000010 	tsteq	r0, r0, lsl r0
    acbc:	000e6309 	andeq	r6, lr, r9, lsl #6
    acc0:	38090200 	stmdacc	r9, {r9}
    acc4:	0300000f 	movweq	r0, #15
    acc8:	000dc309 	andeq	ip, sp, r9, lsl #6
    accc:	44090400 	strmi	r0, [r9], #-1024	; 0xfffffc00
    acd0:	0500000e 	streq	r0, [r0, #-14]
    acd4:	000dce09 	andeq	ip, sp, r9, lsl #28
    acd8:	8b090600 	blhi	24c4e0 <_Min_Stack_Size+0x24c0e0>
    acdc:	07000011 	smladeq	r0, r1, r0, r0
    ace0:	000f5a09 	andeq	r5, pc, r9, lsl #20
    ace4:	2d090800 	stccs	8, cr0, [r9, #-0]
    ace8:	09000010 	stmdbeq	r0, {r4}
    acec:	00105e09 	andseq	r5, r0, r9, lsl #28
    acf0:	b1090a00 	tstlt	r9, r0, lsl #20
    acf4:	0b00000d 	bleq	ad30 <_Min_Stack_Size+0xa930>
    acf8:	0010a309 	andseq	sl, r0, r9, lsl #6
    acfc:	c8090c00 	stmdagt	r9, {sl, fp}
    ad00:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    ad04:	00127c09 	andseq	r7, r2, r9, lsl #24
    ad08:	9a090e00 	bls	24e510 <_Min_Stack_Size+0x24e110>
    ad0c:	0f00000f 	svceq	0x0000000f
    ad10:	000d9509 	andeq	r9, sp, r9, lsl #10
    ad14:	59091000 	stmdbpl	r9, {ip}
    ad18:	11000011 	tstne	r0, r1, lsl r0
    ad1c:	00108809 	andseq	r8, r0, r9, lsl #16
    ad20:	74091200 	strvc	r1, [r9], #-512	; 0xfffffe00
    ad24:	13000011 	movwne	r0, #17
    ad28:	0010b509 	andseq	fp, r0, r9, lsl #10
    ad2c:	ee091400 	cfcpys	mvf1, mvf9
    ad30:	1500000e 	strne	r0, [r0, #-14]
    ad34:	000d5809 	andeq	r5, sp, r9, lsl #16
    ad38:	25091600 	strcs	r1, [r9, #-1536]	; 0xfffffa00
    ad3c:	17000012 	smladne	r0, r2, r0, r0
    ad40:	000e9b09 	andeq	r9, lr, r9, lsl #22
    ad44:	bb091800 	bllt	250d4c <_Min_Stack_Size+0x25094c>
    ad48:	19000012 	stmdbne	r0, {r1, r4}
    ad4c:	00104609 	andseq	r4, r0, r9, lsl #12
    ad50:	38091a00 	stmdacc	r9, {r9, fp, ip}
    ad54:	1b000011 	blne	ada0 <_Min_Stack_Size+0xa9a0>
    ad58:	0011d709 	andseq	sp, r1, r9, lsl #14
    ad5c:	8a091c00 	bhi	251d64 <_Min_Stack_Size+0x251964>
    ad60:	1d00000f 	stcne	0, cr0, [r0, #-60]	; 0xffffffc4
    ad64:	000da709 	andeq	sl, sp, r9, lsl #14
    ad68:	d9091e00 	stmdble	r9, {r9, sl, fp, ip}
    ad6c:	1f00000d 	svcne	0x0000000d
    ad70:	0011b109 	andseq	fp, r1, r9, lsl #2
    ad74:	65092000 	strvs	r2, [r9, #-0]
    ad78:	2100000f 	tstcs	r0, pc
    ad7c:	000d6609 	andeq	r6, sp, r9, lsl #12
    ad80:	91092200 	mrsls	r2, R9_fiq
    ad84:	2300000e 	movwcs	r0, #14
    ad88:	00126809 	andseq	r6, r2, r9, lsl #16
    ad8c:	fb092400 	blx	253d96 <_Min_Stack_Size+0x253996>
    ad90:	25000010 	strcs	r0, [r0, #-16]
    ad94:	000f1909 	andeq	r1, pc, r9, lsl #18
    ad98:	af092600 	svcge	0x00092600
    ad9c:	27000012 	smladcs	r0, r2, r0, r0
    ada0:	000df909 	andeq	pc, sp, r9, lsl #18
    ada4:	c3092800 	movwgt	r2, #38912	; 0x9800
    ada8:	29000010 	stmdbcs	r0, {r4}
    adac:	000e2809 	andeq	r2, lr, r9, lsl #16
    adb0:	08092a00 	stmdaeq	r9, {r9, fp, sp}
    adb4:	2b00000e 	blcs	adf4 <_Min_Stack_Size+0xa9f4>
    adb8:	000ff009 	andeq	pc, pc, r9
    adbc:	3e092c00 	cdpcc	12, 0, cr2, cr9, cr0, {0}
    adc0:	2d000012 	stccs	0, cr0, [r0, #-72]	; 0xffffffb8
    adc4:	00114c09 	andseq	r4, r1, r9, lsl #24
    adc8:	b6092e00 	strlt	r2, [r9], -r0, lsl #28
    adcc:	2f00000e 	svccs	0x0000000e
    add0:	00118109 	andseq	r8, r1, r9, lsl #2
    add4:	4e093000 	cdpmi	0, 0, cr3, cr9, cr0, {0}
    add8:	3100000d 	tstcc	r0, sp
    addc:	00109109 	andseq	r9, r0, r9, lsl #2
    ade0:	72093200 	andvc	r3, r9, #0, 4
    ade4:	3300000f 	movwcc	r0, #15
    ade8:	000e3909 	andeq	r3, lr, r9, lsl #18
    adec:	07093400 	streq	r3, [r9, -r0, lsl #8]
    adf0:	35000011 	strcc	r0, [r0, #-17]	; 0xffffffef
    adf4:	00119609 	andseq	r9, r1, r9, lsl #12
    adf8:	72093600 	andvc	r3, r9, #0, 12
    adfc:	37000012 	smladcc	r0, r2, r0, r0
    ae00:	000d7309 	andeq	r7, sp, r9, lsl #6
    ae04:	26093800 	strcs	r3, [r9], -r0, lsl #16
    ae08:	39000011 	stmdbcc	r0, {r0, r4}
    ae0c:	000e7f09 	andeq	r7, lr, r9, lsl #30
    ae10:	56093a00 	strpl	r3, [r9], -r0, lsl #20
    ae14:	3b000012 	blcc	ae64 <_Min_Stack_Size+0xaa64>
    ae18:	00101b09 	andseq	r1, r0, r9, lsl #22
    ae1c:	8e093c00 	cdphi	12, 0, cr3, cr9, cr0, {0}
    ae20:	3f000012 	svccc	0x00000012
    ae24:	000f7c09 	andeq	r7, pc, r9, lsl #24
    ae28:	0d094000 	stceq	0, cr4, [r9, #-0]
    ae2c:	41000010 	tstmi	r0, r0, lsl r0
    ae30:	000ee009 	andeq	lr, lr, r9
    ae34:	73094200 	movwvc	r4, #37376	; 0x9200
    ae38:	4300000e 	movwmi	r0, #14
    ae3c:	000d3c09 	andeq	r3, sp, r9, lsl #24
    ae40:	dc094400 	cfstrsle	mvf4, [r9], {-0}
    ae44:	45000010 	strmi	r0, [r0, #-16]
    ae48:	000f0209 	andeq	r0, pc, r9, lsl #4
    ae4c:	be094600 	cfmadd32lt	mvax0, mvfx4, mvfx9, mvfx0
    ae50:	47000011 	smladmi	r0, r1, r0, r0
    ae54:	0010ee09 	andseq	lr, r0, r9, lsl #28
    ae58:	25094800 	strcs	r4, [r9, #-2048]	; 0xfffff800
    ae5c:	4900000f 	stmdbmi	r0, {r0, r1, r2, r3}
    ae60:	00129b09 	andseq	r9, r2, r9, lsl #22
    ae64:	e6094a00 	str	r4, [r9], -r0, lsl #20
    ae68:	4b00000d 	blmi	aea4 <_Min_Stack_Size+0xaaa4>
    ae6c:	0011e109 	andseq	lr, r1, r9, lsl #2
    ae70:	46094c00 	strmi	r4, [r9], -r0, lsl #24
    ae74:	4d00000f 	stcmi	0, cr0, [r0, #-60]	; 0xffffffc4
    ae78:	00116b09 	andseq	r6, r1, r9, lsl #22
    ae7c:	e1095000 	mrs	r5, (UNDEF: 9)
    ae80:	51000012 	tstpl	r0, r2, lsl r0
    ae84:	1b310300 	blne	c4ba8c <_Min_Stack_Size+0xc4b68c>
    ae88:	9c040000 	stcls	0, cr0, [r4], {-0}
    ae8c:	0000a803 	andeq	sl, r0, r3, lsl #16
    ae90:	0e040a00 	vmlaeq.f32	s0, s8, s0
    ae94:	09019601 	stmdbeq	r1, {r0, r9, sl, ip, pc}
    ae98:	00000391 	muleq	r0, r1, r3
    ae9c:	001ac90b 	andseq	ip, sl, fp, lsl #18
    aea0:	01980100 	orrseq	r0, r8, r0, lsl #2
    aea4:	0003a112 	andeq	sl, r3, r2, lsl r1
    aea8:	ad0b0000 	stcge	0, cr0, [fp, #-0]
    aeac:	01000005 	tsteq	r0, r5
    aeb0:	a6120199 			; <UNDEFINED> instruction: 0xa6120199
    aeb4:	20000003 	andcs	r0, r0, r3
    aeb8:	001a620b 	andseq	r6, sl, fp, lsl #4
    aebc:	019a0100 	orrseq	r0, sl, r0, lsl #2
    aec0:	0003a112 	andeq	sl, r3, r2, lsl r1
    aec4:	110b8000 	mrsne	r8, (UNDEF: 11)
    aec8:	0100001c 	tsteq	r0, ip, lsl r0
    aecc:	a612019b 			; <UNDEFINED> instruction: 0xa612019b
    aed0:	a0000003 	andge	r0, r0, r3
    aed4:	0017d90c 	andseq	sp, r7, ip, lsl #18
    aed8:	019c0100 	orrseq	r0, ip, r0, lsl #2
    aedc:	0003a112 	andeq	sl, r3, r2, lsl r1
    aee0:	0c010000 	stceq	0, cr0, [r1], {-0}
    aee4:	000005c1 	andeq	r0, r0, r1, asr #11
    aee8:	12019d01 	andne	r9, r1, #1, 26	; 0x40
    aeec:	000003a6 	andeq	r0, r0, r6, lsr #7
    aef0:	890c0120 	stmdbhi	ip, {r5, r8}
    aef4:	01000017 	tsteq	r0, r7, lsl r0
    aef8:	a112019e 			; <UNDEFINED> instruction: 0xa112019e
    aefc:	80000003 	andhi	r0, r0, r3
    af00:	00380c01 	eorseq	r0, r8, r1, lsl #24
    af04:	9f010000 	svcls	0x00010000
    af08:	03a61201 			; <UNDEFINED> instruction: 0x03a61201
    af0c:	01a00000 	moveq	r0, r0
    af10:	0019e10c 	andseq	lr, r9, ip, lsl #2
    af14:	01a00100 	lsleq	r0, r0, #2
    af18:	0003a112 	andeq	sl, r3, r2, lsl r1
    af1c:	0c020000 	stceq	0, cr0, [r2], {-0}
    af20:	000005dd 	ldrdeq	r0, [r0], -sp
    af24:	1201a101 	andne	sl, r1, #1073741824	; 0x40000000
    af28:	000003b6 			; <UNDEFINED> instruction: 0x000003b6
    af2c:	490d0220 	stmdbmi	sp, {r5, r9}
    af30:	a2010050 	andge	r0, r1, #80	; 0x50
    af34:	03d61201 	bicseq	r1, r6, #268435456	; 0x10000000
    af38:	03000000 	movweq	r0, #0
    af3c:	0006d90c 	andeq	sp, r6, ip, lsl #18
    af40:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
    af44:	0003db12 	andeq	sp, r3, r2, lsl fp
    af48:	0c03f000 	stceq	0, cr15, [r3], {-0}
    af4c:	00001c1a 	andeq	r1, r0, sl, lsl ip
    af50:	1201a401 	andne	sl, r1, #16777216	; 0x1000000
    af54:	00000082 	andeq	r0, r0, r2, lsl #1
    af58:	0e000e00 	cdpeq	14, 0, cr0, cr0, cr0, {0}
    af5c:	00000082 	andeq	r0, r0, r2, lsl #1
    af60:	000003a1 	andeq	r0, r0, r1, lsr #7
    af64:	0000a10f 	andeq	sl, r0, pc, lsl #2
    af68:	04000700 	streq	r0, [r0], #-1792	; 0xfffff900
    af6c:	00000391 	muleq	r0, r1, r3
    af70:	0000760e 	andeq	r7, r0, lr, lsl #12
    af74:	0003b600 	andeq	fp, r3, r0, lsl #12
    af78:	00a10f00 	adceq	r0, r1, r0, lsl #30
    af7c:	00170000 	andseq	r0, r7, r0
    af80:	0000760e 	andeq	r7, r0, lr, lsl #12
    af84:	0003c600 	andeq	ip, r3, r0, lsl #12
    af88:	00a10f00 	adceq	r0, r1, r0, lsl #30
    af8c:	00370000 	eorseq	r0, r7, r0
    af90:	00005e0e 	andeq	r5, r0, lr, lsl #28
    af94:	0003d600 	andeq	sp, r3, r0, lsl #12
    af98:	00a10f00 	adceq	r0, r1, r0, lsl #30
    af9c:	00ef0000 	rsceq	r0, pc, r0
    afa0:	0003c604 	andeq	ip, r3, r4, lsl #12
    afa4:	00760e00 	rsbseq	r0, r6, r0, lsl #28
    afa8:	03ec0000 	mvneq	r0, #0
    afac:	a1100000 	tstge	r0, r0
    afb0:	83000000 	movwhi	r0, #0
    afb4:	ce110002 	cdpgt	0, 1, cr0, cr1, cr2, {0}
    afb8:	0100001a 	tsteq	r0, sl, lsl r0
    afbc:	c70401a5 	strgt	r0, [r4, -r5, lsr #3]
    afc0:	12000002 	andne	r0, r0, #2
    afc4:	01b8018c 			; <UNDEFINED> instruction: 0x01b8018c
    afc8:	00052a09 	andeq	r2, r5, r9, lsl #20
    afcc:	13540b00 	cmpne	r4, #0, 22
    afd0:	ba010000 	blt	4afd8 <_Min_Stack_Size+0x4abd8>
    afd4:	00871201 	addeq	r1, r7, r1, lsl #4
    afd8:	0b000000 	bleq	afe0 <_Min_Stack_Size+0xabe0>
    afdc:	0000134f 	andeq	r1, r0, pc, asr #6
    afe0:	1201bb01 	andne	fp, r1, #1024	; 0x400
    afe4:	00000082 	andeq	r0, r0, r2, lsl #1
    afe8:	13fe0b04 	mvnsne	r0, #4, 22	; 0x1000
    afec:	bc010000 	stclt	0, cr0, [r1], {-0}
    aff0:	00821201 	addeq	r1, r2, r1, lsl #4
    aff4:	0b080000 	bleq	20affc <_Min_Stack_Size+0x20abfc>
    aff8:	000013c6 	andeq	r1, r0, r6, asr #7
    affc:	1201bd01 	andne	fp, r1, #1, 26	; 0x40
    b000:	00000082 	andeq	r0, r0, r2, lsl #1
    b004:	4353130c 	cmpmi	r3, #12, 6	; 0x30000000
    b008:	be010052 	mcrlt	0, 0, r0, cr1, cr2, {2}
    b00c:	00821201 	addeq	r1, r2, r1, lsl #4
    b010:	13100000 	tstne	r0, #0
    b014:	00524343 	subseq	r4, r2, r3, asr #6
    b018:	1201bf01 	andne	fp, r1, #1, 30
    b01c:	00000082 	andeq	r0, r0, r2, lsl #1
    b020:	48531314 	ldmdami	r3, {r2, r4, r8, r9, ip}^
    b024:	c0010050 	andgt	r0, r1, r0, asr r0
    b028:	053a1201 	ldreq	r1, [sl, #-513]!	; 0xfffffdff
    b02c:	0b180000 	bleq	60b034 <_Min_Stack_Size+0x60ac34>
    b030:	000013d5 	ldrdeq	r1, [r0], -r5
    b034:	1201c101 	andne	ip, r1, #1073741824	; 0x40000000
    b038:	00000082 	andeq	r0, r0, r2, lsl #1
    b03c:	13ad0b24 			; <UNDEFINED> instruction: 0x13ad0b24
    b040:	c2010000 	andgt	r0, r1, #0
    b044:	00821201 	addeq	r1, r2, r1, lsl #4
    b048:	0b280000 	bleq	a0b050 <_Min_Stack_Size+0xa0ac50>
    b04c:	0000140d 	andeq	r1, r0, sp, lsl #8
    b050:	1201c301 	andne	ip, r1, #67108864	; 0x4000000
    b054:	00000082 	andeq	r0, r0, r2, lsl #1
    b058:	14080b2c 	strne	r0, [r8], #-2860	; 0xfffff4d4
    b05c:	c4010000 	strgt	r0, [r1], #-0
    b060:	00821201 	addeq	r1, r2, r1, lsl #4
    b064:	0b300000 	bleq	c0b06c <_Min_Stack_Size+0xc0ac6c>
    b068:	000013f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    b06c:	1201c501 	andne	ip, r1, #4194304	; 0x400000
    b070:	00000082 	andeq	r0, r0, r2, lsl #1
    b074:	13a80b34 			; <UNDEFINED> instruction: 0x13a80b34
    b078:	c6010000 	strgt	r0, [r1], -r0
    b07c:	00821201 	addeq	r1, r2, r1, lsl #4
    b080:	0b380000 	bleq	e0b088 <_Min_Stack_Size+0xe0ac88>
    b084:	00001417 	andeq	r1, r0, r7, lsl r4
    b088:	1201c701 	andne	ip, r1, #262144	; 0x40000
    b08c:	00000082 	andeq	r0, r0, r2, lsl #1
    b090:	4650133c 			; <UNDEFINED> instruction: 0x4650133c
    b094:	c8010052 	stmdagt	r1, {r1, r4, r6}
    b098:	05541201 	ldrbeq	r1, [r4, #-513]	; 0xfffffdff
    b09c:	13400000 	movtne	r0, #0
    b0a0:	00524644 	subseq	r4, r2, r4, asr #12
    b0a4:	1201c901 	andne	ip, r1, #16384	; 0x4000
    b0a8:	00000087 	andeq	r0, r0, r7, lsl #1
    b0ac:	44411348 	strbmi	r1, [r1], #-840	; 0xfffffcb8
    b0b0:	ca010052 	bgt	4b200 <_Min_Stack_Size+0x4ae00>
    b0b4:	00871201 	addeq	r1, r7, r1, lsl #4
    b0b8:	0b4c0000 	bleq	130b0c0 <_Min_Stack_Size+0x130acc0>
    b0bc:	00001412 	andeq	r1, r0, r2, lsl r4
    b0c0:	1201cb01 	andne	ip, r1, #1024	; 0x400
    b0c4:	0000056e 	andeq	r0, r0, lr, ror #10
    b0c8:	14030b50 	strne	r0, [r3], #-2896	; 0xfffff4b0
    b0cc:	cc010000 	stcgt	0, cr0, [r1], {-0}
    b0d0:	05881201 	streq	r1, [r8, #513]	; 0x201
    b0d4:	0b600000 	bleq	180b0dc <_Min_Stack_Size+0x180acdc>
    b0d8:	000005ad 	andeq	r0, r0, sp, lsr #11
    b0dc:	1201cd01 	andne	ip, r1, #1, 26	; 0x40
    b0e0:	0000058d 	andeq	r0, r0, sp, lsl #11
    b0e4:	141c0b74 	ldrne	r0, [ip], #-2932	; 0xfffff48c
    b0e8:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
    b0ec:	00821201 	addeq	r1, r2, r1, lsl #4
    b0f0:	00880000 	addeq	r0, r8, r0
    b0f4:	00005e0e 	andeq	r5, r0, lr, lsl #28
    b0f8:	00053a00 	andeq	r3, r5, r0, lsl #20
    b0fc:	00a10f00 	adceq	r0, r1, r0, lsl #30
    b100:	000b0000 	andeq	r0, fp, r0
    b104:	00052a04 	andeq	r2, r5, r4, lsl #20
    b108:	00870e00 	addeq	r0, r7, r0, lsl #28
    b10c:	054f0000 	strbeq	r0, [pc, #-0]	; b114 <_Min_Stack_Size+0xad14>
    b110:	a10f0000 	mrsge	r0, CPSR
    b114:	01000000 	mrseq	r0, (UNDEF: 0)
    b118:	053f0500 	ldreq	r0, [pc, #-1280]!	; ac20 <_Min_Stack_Size+0xa820>
    b11c:	4f040000 	svcmi	0x00040000
    b120:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    b124:	00000087 	andeq	r0, r0, r7, lsl #1
    b128:	00000569 	andeq	r0, r0, r9, ror #10
    b12c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    b130:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
    b134:	00000559 	andeq	r0, r0, r9, asr r5
    b138:	00056904 	andeq	r6, r5, r4, lsl #18
    b13c:	00870e00 	addeq	r0, r7, r0, lsl #28
    b140:	05830000 	streq	r0, [r3]
    b144:	a10f0000 	mrsge	r0, CPSR
    b148:	04000000 	streq	r0, [r0], #-0
    b14c:	05730500 	ldrbeq	r0, [r3, #-1280]!	; 0xfffffb00
    b150:	83040000 	movwhi	r0, #16384	; 0x4000
    b154:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    b158:	00000076 	andeq	r0, r0, r6, ror r0
    b15c:	0000059d 	muleq	r0, sp, r5
    b160:	0000a10f 	andeq	sl, r0, pc, lsl #2
    b164:	11000400 	tstne	r0, r0, lsl #8
    b168:	000013cc 	andeq	r1, r0, ip, asr #7
    b16c:	0301cf01 	movweq	ip, #7937	; 0x1f01
    b170:	000003f9 	strdeq	r0, [r0], -r9
    b174:	f7011012 			; <UNDEFINED> instruction: 0xf7011012
    b178:	05ed0902 	strbeq	r0, [sp, #2306]!	; 0x902
    b17c:	ab0b0000 	blge	2cb184 <_Min_Stack_Size+0x2cad84>
    b180:	01000016 	tsteq	r0, r6, lsl r0
    b184:	821202f9 	andshi	r0, r2, #-1879048177	; 0x9000000f
    b188:	00000000 	andeq	r0, r0, r0
    b18c:	0015ae0b 	andseq	sl, r5, fp, lsl #28
    b190:	02fa0100 	rscseq	r0, sl, #0, 2
    b194:	00008212 	andeq	r8, r0, r2, lsl r2
    b198:	56130400 	ldrpl	r0, [r3], -r0, lsl #8
    b19c:	01004c41 	tsteq	r0, r1, asr #24
    b1a0:	821202fb 	andshi	r0, r2, #-1342177265	; 0xb000000f
    b1a4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b1a8:	00154c0b 	andseq	r4, r5, fp, lsl #24
    b1ac:	02fc0100 	rscseq	r0, ip, #0, 2
    b1b0:	00008712 	andeq	r8, r0, r2, lsl r7
    b1b4:	11000c00 	tstne	r0, r0, lsl #24
    b1b8:	000014b5 			; <UNDEFINED> instruction: 0x000014b5
    b1bc:	0302fd01 	movweq	pc, #11521	; 0x2d01	; <UNPREDICTABLE>
    b1c0:	000005aa 	andeq	r0, r0, sl, lsr #11
    b1c4:	0000d414 	andeq	sp, r0, r4, lsl r4
    b1c8:	08040100 	stmdaeq	r4, {r8}
    b1cc:	00003f19 	andeq	r3, r0, r9, lsl pc
    b1d0:	05931500 	ldreq	r1, [r3, #1280]	; 0x500
    b1d4:	4a050000 	bmi	14b1dc <_Min_Stack_Size+0x14addc>
    b1d8:	00007611 	andeq	r7, r0, r1, lsl r6
    b1dc:	00630e00 	rsbeq	r0, r3, r0, lsl #28
    b1e0:	06230000 	strteq	r0, [r3], -r0
    b1e4:	a10f0000 	mrsge	r0, CPSR
    b1e8:	0f000000 	svceq	0x00000000
    b1ec:	06130500 	ldreq	r0, [r3], -r0, lsl #10
    b1f0:	60150000 	andsvs	r0, r5, r0
    b1f4:	05000007 	streq	r0, [r0, #-7]
    b1f8:	0623174c 	strteq	r1, [r3], -ip, asr #14
    b1fc:	630e0000 	movwvs	r0, #57344	; 0xe000
    b200:	44000000 	strmi	r0, [r0], #-0
    b204:	0f000006 	svceq	0x00000006
    b208:	000000a1 	andeq	r0, r0, r1, lsr #1
    b20c:	34050007 	strcc	r0, [r5], #-7
    b210:	15000006 	strne	r0, [r0, #-6]
    b214:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b218:	44174d05 	ldrmi	r4, [r7], #-3333	; 0xfffff2fb
    b21c:	02000006 	andeq	r0, r0, #6
    b220:	07190408 	ldreq	r0, [r9, -r8, lsl #8]
    b224:	04160000 	ldreq	r0, [r6], #-0
    b228:	0003e011 	andeq	lr, r3, r1, lsl r0
    b22c:	01650600 	cmneq	r5, r0, lsl #12
    b230:	0000a117 	andeq	sl, r0, r7, lsl r1
    b234:	05620300 	strbeq	r0, [r2, #-768]!	; 0xfffffd00
    b238:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
    b23c:	0000440e 	andeq	r4, r0, lr, lsl #8
    b240:	06fb0300 	ldrbteq	r0, [fp], r0, lsl #6
    b244:	74070000 	strvc	r0, [r7], #-0
    b248:	0000440e 	andeq	r4, r0, lr, lsl #8
    b24c:	07041700 	streq	r1, [r4, -r0, lsl #14]
    b250:	06a503a5 	strteq	r0, [r5], r5, lsr #7
    b254:	da180000 	ble	60b25c <_Min_Stack_Size+0x60ae5c>
    b258:	07000003 	streq	r0, [r0, -r3]
    b25c:	065e0ca7 	ldrbeq	r0, [lr], -r7, lsr #25
    b260:	ec180000 	ldc	0, cr0, [r8], {-0}
    b264:	07000002 	streq	r0, [r0, -r2]
    b268:	06a513a8 	strteq	r1, [r5], r8, lsr #7
    b26c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    b270:	00000068 	andeq	r0, r0, r8, rrx
    b274:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
    b278:	0000a10f 	andeq	sl, r0, pc, lsl #2
    b27c:	19000300 	stmdbne	r0, {r8, r9}
    b280:	09a20708 	stmibeq	r2!, {r3, r8, r9, sl}
    b284:	000006d9 	ldrdeq	r0, [r0], -r9
    b288:	0006e31a 	andeq	lr, r6, sl, lsl r3
    b28c:	07a40700 	streq	r0, [r4, r0, lsl #14]!
    b290:	0000009a 	muleq	r0, sl, r0
    b294:	080d1a00 	stmdaeq	sp, {r9, fp, ip}
    b298:	a9070000 	stmdbge	r7, {}	; <UNPREDICTABLE>
    b29c:	00068305 	andeq	r8, r6, r5, lsl #6
    b2a0:	03000400 	movweq	r0, #1024	; 0x400
    b2a4:	0000066d 	andeq	r0, r0, sp, ror #12
    b2a8:	b503aa07 	strlt	sl, [r3, #-2567]	; 0xfffff5f9
    b2ac:	03000006 	movweq	r0, #6
    b2b0:	000007c3 	andeq	r0, r0, r3, asr #15
    b2b4:	8c191608 	ldchi	6, cr1, [r9], {8}
    b2b8:	03000000 	movweq	r0, #0
    b2bc:	000005cb 	andeq	r0, r0, fp, asr #11
    b2c0:	9a0d0c09 	bls	34e2ec <_Min_Stack_Size+0x34deec>
    b2c4:	03000000 	movweq	r0, #0
    b2c8:	00000859 	andeq	r0, r0, r9, asr r8
    b2cc:	f11b2308 			; <UNDEFINED> instruction: 0xf11b2308
    b2d0:	1b000006 	blne	b2f0 <_Min_Stack_Size+0xaef0>
    b2d4:	0000029b 	muleq	r0, fp, r2
    b2d8:	08340818 	ldmdaeq	r4!, {r3, r4, fp}
    b2dc:	00000763 	andeq	r0, r0, r3, ror #14
    b2e0:	00067d1a 	andeq	r7, r6, sl, lsl sp
    b2e4:	13360800 	teqne	r6, #0, 16
    b2e8:	00000763 	andeq	r0, r0, r3, ror #14
    b2ec:	6b5f1c00 	blvs	17d22f4 <_Min_Stack_Size+0x17d1ef4>
    b2f0:	07370800 	ldreq	r0, [r7, -r0, lsl #16]!
    b2f4:	0000009a 	muleq	r0, sl, r0
    b2f8:	06c41a04 	strbeq	r1, [r4], r4, lsl #20
    b2fc:	37080000 	strcc	r0, [r8, -r0]
    b300:	00009a0b 	andeq	r9, r0, fp, lsl #20
    b304:	8d1a0800 	ldchi	8, cr0, [sl, #-0]
    b308:	08000002 	stmdaeq	r0, {r1}
    b30c:	009a1437 	addseq	r1, sl, r7, lsr r4
    b310:	1a0c0000 	bne	30b318 <_Min_Stack_Size+0x30af18>
    b314:	0000019a 	muleq	r0, sl, r1
    b318:	9a1b3708 	bls	6d8f40 <_Min_Stack_Size+0x6d8b40>
    b31c:	10000000 	andne	r0, r0, r0
    b320:	00785f1c 	rsbseq	r5, r8, ip, lsl pc
    b324:	690b3808 	stmdbvs	fp, {r3, fp, ip, sp}
    b328:	14000007 	strne	r0, [r0], #-7
    b32c:	09041d00 	stmdbeq	r4, {r8, sl, fp, ip}
    b330:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    b334:	000006e5 	andeq	r0, r0, r5, ror #13
    b338:	00000779 	andeq	r0, r0, r9, ror r7
    b33c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    b340:	1b000000 	blne	b348 <_Min_Stack_Size+0xaf48>
    b344:	000002d5 	ldrdeq	r0, [r0], -r5
    b348:	083c0824 	ldmdaeq	ip!, {r2, r5, fp}
    b34c:	000007fc 	strdeq	r0, [r0], -ip
    b350:	0001081a 	andeq	r0, r1, sl, lsl r8
    b354:	093e0800 	ldmdbeq	lr!, {fp}
    b358:	0000009a 	muleq	r0, sl, r0
    b35c:	07b51a00 	ldreq	r1, [r5, r0, lsl #20]!
    b360:	3f080000 	svccc	0x00080000
    b364:	00009a09 	andeq	r9, r0, r9, lsl #20
    b368:	391a0400 	ldmdbcc	sl, {sl}
    b36c:	08000001 	stmdaeq	r0, {r0}
    b370:	009a0940 	addseq	r0, sl, r0, asr #18
    b374:	1a080000 	bne	20b37c <_Min_Stack_Size+0x20af7c>
    b378:	000008ca 	andeq	r0, r0, sl, asr #17
    b37c:	9a094108 	bls	25b7a4 <_Min_Stack_Size+0x25b3a4>
    b380:	0c000000 	stceq	0, cr0, [r0], {-0}
    b384:	0005381a 	andeq	r3, r5, sl, lsl r8
    b388:	09420800 	stmdbeq	r2, {fp}^
    b38c:	0000009a 	muleq	r0, sl, r0
    b390:	04211a10 	strteq	r1, [r1], #-2576	; 0xfffff5f0
    b394:	43080000 	movwmi	r0, #32768	; 0x8000
    b398:	00009a09 	andeq	r9, r0, r9, lsl #20
    b39c:	f61a1400 			; <UNDEFINED> instruction: 0xf61a1400
    b3a0:	08000007 	stmdaeq	r0, {r0, r1, r2}
    b3a4:	009a0944 	addseq	r0, sl, r4, asr #18
    b3a8:	1a180000 	bne	60b3b0 <_Min_Stack_Size+0x60afb0>
    b3ac:	00000640 	andeq	r0, r0, r0, asr #12
    b3b0:	9a094508 	bls	25c7d8 <_Min_Stack_Size+0x25c3d8>
    b3b4:	1c000000 	stcne	0, cr0, [r0], {-0}
    b3b8:	00088c1a 	andeq	r8, r8, sl, lsl ip
    b3bc:	09460800 	stmdbeq	r6, {fp}^
    b3c0:	0000009a 	muleq	r0, sl, r0
    b3c4:	481e0020 	ldmdami	lr, {r5}
    b3c8:	08000001 	stmdaeq	r0, {r0}
    b3cc:	084f0801 	stmdaeq	pc, {r0, fp}^	; <UNPREDICTABLE>
    b3d0:	00000841 	andeq	r0, r0, r1, asr #16
    b3d4:	00026d1a 	andeq	r6, r2, sl, lsl sp
    b3d8:	0a500800 	beq	140d3e0 <_Min_Stack_Size+0x140cfe0>
    b3dc:	00000841 	andeq	r0, r0, r1, asr #16
    b3e0:	05fe1a00 	ldrbeq	r1, [lr, #2560]!	; 0xa00
    b3e4:	51080000 	mrspl	r0, (UNDEF: 8)
    b3e8:	00084109 	andeq	r4, r8, r9, lsl #2
    b3ec:	961f8000 	ldrls	r8, [pc], -r0
    b3f0:	08000007 	stmdaeq	r0, {r0, r1, r2}
    b3f4:	06e50a53 	usateq	r0, #5, r3, asr #20
    b3f8:	01000000 	mrseq	r0, (UNDEF: 0)
    b3fc:	0001921f 	andeq	r9, r1, pc, lsl r2
    b400:	0a560800 	beq	158d408 <_Min_Stack_Size+0x158d008>
    b404:	000006e5 	andeq	r0, r0, r5, ror #13
    b408:	0e000104 	adfeqs	f0, f0, f4
    b40c:	0000065c 	andeq	r0, r0, ip, asr r6
    b410:	00000851 	andeq	r0, r0, r1, asr r8
    b414:	0000a10f 	andeq	sl, r0, pc, lsl #2
    b418:	1e001f00 	cdpne	15, 0, cr1, cr0, cr0, {0}
    b41c:	00004a76 	andeq	r4, r0, r6, ror sl
    b420:	62080190 	andvs	r0, r8, #144, 2	; 0x24
    b424:	00089408 	andeq	r9, r8, r8, lsl #8
    b428:	067d1a00 	ldrbteq	r1, [sp], -r0, lsl #20
    b42c:	63080000 	movwvs	r0, #32768	; 0x8000
    b430:	00089412 	andeq	r9, r8, r2, lsl r4
    b434:	8e1a0000 	cdphi	0, 1, cr0, cr10, cr0, {0}
    b438:	08000006 	stmdaeq	r0, {r1, r2}
    b43c:	009a0664 	addseq	r0, sl, r4, ror #12
    b440:	1a040000 	bne	10b448 <_Min_Stack_Size+0x10b048>
    b444:	00000288 	andeq	r0, r0, r8, lsl #5
    b448:	9a096608 	bls	264c70 <_Min_Stack_Size+0x264870>
    b44c:	08000008 	stmdaeq	r0, {r3}
    b450:	0001481a 	andeq	r4, r1, sl, lsl r8
    b454:	1e670800 	cdpne	8, 6, cr0, cr7, cr0, {0}
    b458:	000007fc 	strdeq	r0, [r0], -ip
    b45c:	041d0088 	ldreq	r0, [sp], #-136	; 0xffffff78
    b460:	00000851 	andeq	r0, r0, r1, asr r8
    b464:	0008aa0e 	andeq	sl, r8, lr, lsl #20
    b468:	0008aa00 	andeq	sl, r8, r0, lsl #20
    b46c:	00a10f00 	adceq	r0, r1, r0, lsl #30
    b470:	001f0000 	andseq	r0, pc, r0
    b474:	08b0041d 	ldmeq	r0!, {r0, r2, r3, r4, sl}
    b478:	1b200000 	blne	80b480 <_Min_Stack_Size+0x80b080>
    b47c:	0000064a 	andeq	r0, r0, sl, asr #12
    b480:	087a0808 	ldmdaeq	sl!, {r3, fp}^
    b484:	000008d9 	ldrdeq	r0, [r0], -r9
    b488:	0001331a 	andeq	r3, r1, sl, lsl r3
    b48c:	117b0800 	cmnne	fp, r0, lsl #16
    b490:	000008d9 	ldrdeq	r0, [r0], -r9
    b494:	072e1a00 	streq	r1, [lr, -r0, lsl #20]!
    b498:	7c080000 	stcvc	0, cr0, [r8], {-0}
    b49c:	00009a06 	andeq	r9, r0, r6, lsl #20
    b4a0:	1d000400 	cfstrsne	mvf0, [r0, #-0]
    b4a4:	00006804 	andeq	r6, r0, r4, lsl #16
    b4a8:	00281b00 	eoreq	r1, r8, r0, lsl #22
    b4ac:	08680000 	stmdaeq	r8!, {}^	; <UNPREDICTABLE>
    b4b0:	0a2208ba 	beq	88d7a0 <_Min_Stack_Size+0x88d3a0>
    b4b4:	5f1c0000 	svcpl	0x001c0000
    b4b8:	bb080070 	bllt	20b680 <_Min_Stack_Size+0x20b280>
    b4bc:	0008d912 	andeq	sp, r8, r2, lsl r9
    b4c0:	5f1c0000 	svcpl	0x001c0000
    b4c4:	bc080072 	stclt	0, cr0, [r8], {114}	; 0x72
    b4c8:	00009a07 	andeq	r9, r0, r7, lsl #20
    b4cc:	5f1c0400 	svcpl	0x001c0400
    b4d0:	bd080077 	stclt	0, cr0, [r8, #-476]	; 0xfffffe24
    b4d4:	00009a07 	andeq	r9, r0, r7, lsl #20
    b4d8:	8b1a0800 	blhi	68d4e0 <_Min_Stack_Size+0x68d0e0>
    b4dc:	08000001 	stmdaeq	r0, {r0}
    b4e0:	002c09be 	strhteq	r0, [ip], -lr
    b4e4:	1a0c0000 	bne	30b4ec <_Min_Stack_Size+0x30b0ec>
    b4e8:	0000030d 	andeq	r0, r0, sp, lsl #6
    b4ec:	2c09bf08 	stccs	15, cr11, [r9], {8}
    b4f0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    b4f4:	66625f1c 	uqadd16vs	r5, r2, ip
    b4f8:	11c00800 	bicne	r0, r0, r0, lsl #16
    b4fc:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    b500:	00b71a10 	adcseq	r1, r7, r0, lsl sl
    b504:	c1080000 	mrsgt	r0, (UNDEF: 8)
    b508:	00009a07 	andeq	r9, r0, r7, lsl #20
    b50c:	691a1800 	ldmdbvs	sl, {fp, ip}
    b510:	08000001 	stmdaeq	r0, {r0}
    b514:	065c0ac8 	ldrbeq	r0, [ip], -r8, asr #21
    b518:	1a1c0000 	bne	70b520 <_Min_Stack_Size+0x70b120>
    b51c:	000033bd 			; <UNDEFINED> instruction: 0x000033bd
    b520:	a61dca08 	ldrge	ip, [sp], -r8, lsl #20
    b524:	2000000b 	andcs	r0, r0, fp
    b528:	0033361a 	eorseq	r3, r3, sl, lsl r6
    b52c:	1dcc0800 	stclne	8, cr0, [ip]
    b530:	00000bd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    b534:	06eb1a24 	strbteq	r1, [fp], r4, lsr #20
    b538:	cf080000 	svcgt	0x00080000
    b53c:	000bf40d 	andeq	pc, fp, sp, lsl #8
    b540:	a61a2800 	ldrge	r2, [sl], -r0, lsl #16
    b544:	08000008 	stmdaeq	r0, {r3}
    b548:	0c0e09d0 			; <UNDEFINED> instruction: 0x0c0e09d0
    b54c:	1c2c0000 	stcne	0, cr0, [ip], #-0
    b550:	0062755f 	rsbeq	r7, r2, pc, asr r5
    b554:	b111d308 	tstlt	r1, r8, lsl #6
    b558:	30000008 	andcc	r0, r0, r8
    b55c:	70755f1c 	rsbsvc	r5, r5, ip, lsl pc
    b560:	12d40800 	sbcsne	r0, r4, #0, 16
    b564:	000008d9 	ldrdeq	r0, [r0], -r9
    b568:	755f1c38 	ldrbvc	r1, [pc, #-3128]	; a938 <_Min_Stack_Size+0xa538>
    b56c:	d5080072 	strle	r0, [r8, #-114]	; 0xffffff8e
    b570:	00009a07 	andeq	r9, r0, r7, lsl #20
    b574:	2d1a3c00 	ldccs	12, cr3, [sl, #-0]
    b578:	08000001 	stmdaeq	r0, {r0}
    b57c:	0c1411d8 	ldfeqs	f1, [r4], {216}	; 0xd8
    b580:	1a400000 	bne	100b588 <_Min_Stack_Size+0x100b188>
    b584:	00000876 	andeq	r0, r0, r6, ror r8
    b588:	2411d908 	ldrcs	sp, [r1], #-2312	; 0xfffff6f8
    b58c:	4300000c 	movwmi	r0, #12
    b590:	626c5f1c 	rsbvs	r5, ip, #28, 30	; 0x70
    b594:	11dc0800 	bicsne	r0, ip, r0, lsl #16
    b598:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    b59c:	07251a44 	streq	r1, [r5, -r4, asr #20]!
    b5a0:	df080000 	svcle	0x00080000
    b5a4:	00009a07 	andeq	r9, r0, r7, lsl #20
    b5a8:	381a4c00 	ldmdacc	sl, {sl, fp, lr}
    b5ac:	08000004 	stmdaeq	r0, {r2}
    b5b0:	066b0ae0 	strbteq	r0, [fp], -r0, ror #21
    b5b4:	1a500000 	bne	140b5bc <_Min_Stack_Size+0x140b1bc>
    b5b8:	00004baa 	andeq	r4, r0, sl, lsr #23
    b5bc:	4012e308 	andsmi	lr, r2, r8, lsl #6
    b5c0:	5400000a 	strpl	r0, [r0], #-10
    b5c4:	0003f11a 	andeq	pc, r3, sl, lsl r1	; <UNPREDICTABLE>
    b5c8:	0ce70800 	stcleq	8, cr0, [r7]
    b5cc:	000006fd 	strdeq	r0, [r0], -sp
    b5d0:	02e31a58 	rsceq	r1, r3, #88, 20	; 0x58000
    b5d4:	e9080000 	stmdb	r8, {}	; <UNPREDICTABLE>
    b5d8:	0006d90e 	andeq	sp, r6, lr, lsl #18
    b5dc:	511a5c00 	tstpl	sl, r0, lsl #24
    b5e0:	08000006 	stmdaeq	r0, {r1, r2}
    b5e4:	009a09ea 	addseq	r0, sl, sl, ror #19
    b5e8:	00640000 	rsbeq	r0, r4, r0
    b5ec:	00009a21 	andeq	r9, r0, r1, lsr #20
    b5f0:	000a4000 	andeq	r4, sl, r0
    b5f4:	0a402200 	beq	1013dfc <_Min_Stack_Size+0x10139fc>
    b5f8:	5c220000 	stcpl	0, cr0, [r2], #-0
    b5fc:	22000006 	andcs	r0, r0, #6
    b600:	00000b94 	muleq	r0, r4, fp
    b604:	00009a22 	andeq	r9, r0, r2, lsr #20
    b608:	041d0000 	ldreq	r0, [sp], #-0
    b60c:	00000a4b 	andeq	r0, r0, fp, asr #20
    b610:	000a4005 	andeq	r4, sl, r5
    b614:	06cc2300 	strbeq	r2, [ip], r0, lsl #6
    b618:	04280000 	strteq	r0, [r8], #-0
    b61c:	08026508 	stmdaeq	r2, {r3, r8, sl, sp, lr}
    b620:	00000b94 	muleq	r0, r4, fp
    b624:	00062c0b 	andeq	r2, r6, fp, lsl #24
    b628:	02670800 	rsbeq	r0, r7, #0, 16
    b62c:	00009a07 	andeq	r9, r0, r7, lsl #20
    b630:	060b0000 	streq	r0, [fp], -r0
    b634:	08000008 	stmdaeq	r0, {r3}
    b638:	800b026c 	andhi	r0, fp, ip, ror #4
    b63c:	0400000c 	streq	r0, [r0], #-12
    b640:	0007ee0b 	andeq	lr, r7, fp, lsl #28
    b644:	026c0800 	rsbeq	r0, ip, #0, 16
    b648:	000c8014 	andeq	r8, ip, r4, lsl r0
    b64c:	930b0800 	movwls	r0, #47104	; 0xb800
    b650:	08000002 	stmdaeq	r0, {r1}
    b654:	801e026c 	andshi	r0, lr, ip, ror #4
    b658:	0c00000c 	stceq	0, cr0, [r0], {12}
    b65c:	0006890b 	andeq	r8, r6, fp, lsl #18
    b660:	026e0800 	rsbeq	r0, lr, #0, 16
    b664:	00009a08 	andeq	r9, r0, r8, lsl #20
    b668:	420b1000 	andmi	r1, fp, #0
    b66c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    b670:	8008026f 	andhi	r0, r8, pc, ror #4
    b674:	1400000e 	strne	r0, [r0], #-14
    b678:	0006ab0b 	andeq	sl, r6, fp, lsl #22
    b67c:	02720800 	rsbseq	r0, r2, #0, 16
    b680:	00009a07 	andeq	r9, r0, r7, lsl #20
    b684:	9b0b3000 	blls	2d768c <_Min_Stack_Size+0x2d728c>
    b688:	08000006 	stmdaeq	r0, {r1, r2}
    b68c:	95160273 	ldrls	r0, [r6, #-627]	; 0xfffffd8d
    b690:	3400000e 	strcc	r0, [r0], #-14
    b694:	0005410b 	andeq	r4, r5, fp, lsl #2
    b698:	02750800 	rsbseq	r0, r5, #0, 16
    b69c:	00009a07 	andeq	r9, r0, r7, lsl #20
    b6a0:	e40b3800 	str	r3, [fp], #-2048	; 0xfffff800
    b6a4:	08000007 	stmdaeq	r0, {r0, r1, r2}
    b6a8:	a60a0277 			; <UNDEFINED> instruction: 0xa60a0277
    b6ac:	3c00000e 	stccc	0, cr0, [r0], {14}
    b6b0:	0003fd0b 	andeq	pc, r3, fp, lsl #26
    b6b4:	027a0800 	rsbseq	r0, sl, #0, 16
    b6b8:	00076313 	andeq	r6, r7, r3, lsl r3
    b6bc:	a60b4000 	strge	r4, [fp], -r0
    b6c0:	08000001 	stmdaeq	r0, {r0}
    b6c4:	9a07027b 	bls	1cc0b8 <_Min_Stack_Size+0x1cbcb8>
    b6c8:	44000000 	strmi	r0, [r0], #-0
    b6cc:	0008c00b 	andeq	ip, r8, fp
    b6d0:	027c0800 	rsbseq	r0, ip, #0, 16
    b6d4:	00076313 	andeq	r6, r7, r3, lsl r3
    b6d8:	a30b4800 	movwge	r4, #47104	; 0xb800
    b6dc:	08000005 	stmdaeq	r0, {r0, r2}
    b6e0:	ac14027d 	lfmge	f0, 4, [r4], {125}	; 0x7d
    b6e4:	4c00000e 	stcmi	0, cr0, [r0], {14}
    b6e8:	0003050b 	andeq	r0, r3, fp, lsl #10
    b6ec:	02800800 	addeq	r0, r0, #0, 16
    b6f0:	00009a07 	andeq	r9, r0, r7, lsl #20
    b6f4:	f60b5000 			; <UNDEFINED> instruction: 0xf60b5000
    b6f8:	08000005 	stmdaeq	r0, {r0, r2}
    b6fc:	94090281 	strls	r0, [r9], #-641	; 0xfffffd7f
    b700:	5400000b 	strpl	r0, [r0], #-11
    b704:	00061c0b 	andeq	r1, r6, fp, lsl #24
    b708:	02a40800 	adceq	r0, r4, #0, 16
    b70c:	000e5b07 	andeq	r5, lr, r7, lsl #22
    b710:	760c5800 	strvc	r5, [ip], -r0, lsl #16
    b714:	0800004a 	stmdaeq	r0, {r1, r3, r6}
    b718:	941302a8 	ldrls	r0, [r3], #-680	; 0xfffffd58
    b71c:	48000008 	stmdami	r0, {r3}
    b720:	038a0c01 	orreq	r0, sl, #256	; 0x100
    b724:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
    b728:	08511202 	ldmdaeq	r1, {r1, r9, ip}^
    b72c:	014c0000 	mrseq	r0, (UNDEF: 76)
    b730:	0008320c 	andeq	r3, r8, ip, lsl #4
    b734:	02ad0800 	adceq	r0, sp, #0, 16
    b738:	000ebd0c 	andeq	fp, lr, ip, lsl #26
    b73c:	0c02dc00 	stceq	12, cr13, [r2], {-0}
    b740:	00000171 	andeq	r0, r0, r1, ror r1
    b744:	1002b208 	andne	fp, r2, r8, lsl #4
    b748:	00000c41 	andeq	r0, r0, r1, asr #24
    b74c:	430c02e0 	movwmi	r0, #49888	; 0xc2e0
    b750:	08000001 	stmdaeq	r0, {r0}
    b754:	c90a02b4 	stmdbgt	sl, {r2, r4, r5, r7, r9}
    b758:	ec00000e 	stc	0, cr0, [r0], {14}
    b75c:	041d0002 	ldreq	r0, [sp], #-2
    b760:	00000b9a 	muleq	r0, sl, fp
    b764:	b0080102 	andlt	r0, r8, r2, lsl #2
    b768:	05000007 	streq	r0, [r0, #-7]
    b76c:	00000b9a 	muleq	r0, sl, fp
    b770:	0a22041d 	beq	88c7ec <_Min_Stack_Size+0x88c3ec>
    b774:	9a210000 	bls	84b77c <_Min_Stack_Size+0x84b37c>
    b778:	ca000000 	bgt	b780 <_Min_Stack_Size+0xb380>
    b77c:	2200000b 	andcs	r0, r0, #11
    b780:	00000a40 	andeq	r0, r0, r0, asr #20
    b784:	00065c22 	andeq	r5, r6, r2, lsr #24
    b788:	0bca2200 	bleq	ff293f90 <__StackLimit+0xdf273f90>
    b78c:	9a220000 	bls	88b794 <_Min_Stack_Size+0x88b394>
    b790:	00000000 	andeq	r0, r0, r0
    b794:	0ba1041d 	bleq	fe84c810 <__StackLimit+0xde82c810>
    b798:	041d0000 	ldreq	r0, [sp], #-0
    b79c:	00000bac 	andeq	r0, r0, ip, lsr #23
    b7a0:	00067721 	andeq	r7, r6, r1, lsr #14
    b7a4:	000bf400 	andeq	pc, fp, r0, lsl #8
    b7a8:	0a402200 	beq	1013fb0 <_Min_Stack_Size+0x1013bb0>
    b7ac:	5c220000 	stcpl	0, cr0, [r2], #-0
    b7b0:	22000006 	andcs	r0, r0, #6
    b7b4:	00000677 	andeq	r0, r0, r7, ror r6
    b7b8:	00009a22 	andeq	r9, r0, r2, lsr #20
    b7bc:	041d0000 	ldreq	r0, [sp], #-0
    b7c0:	00000bd6 	ldrdeq	r0, [r0], -r6
    b7c4:	00009a21 	andeq	r9, r0, r1, lsr #20
    b7c8:	000c0e00 	andeq	r0, ip, r0, lsl #28
    b7cc:	0a402200 	beq	1013fd4 <_Min_Stack_Size+0x1013bd4>
    b7d0:	5c220000 	stcpl	0, cr0, [r2], #-0
    b7d4:	00000006 	andeq	r0, r0, r6
    b7d8:	0bfa041d 	bleq	ffe8c854 <__StackLimit+0xdfe6c854>
    b7dc:	680e0000 	stmdavs	lr, {}	; <UNPREDICTABLE>
    b7e0:	24000000 	strcs	r0, [r0], #-0
    b7e4:	0f00000c 	svceq	0x0000000c
    b7e8:	000000a1 	andeq	r0, r0, r1, lsr #1
    b7ec:	680e0002 	stmdavs	lr, {r1}
    b7f0:	34000000 	strcc	r0, [r0], #-0
    b7f4:	0f00000c 	svceq	0x0000000c
    b7f8:	000000a1 	andeq	r0, r0, r1, lsr #1
    b7fc:	9f110000 	svcls	0x00110000
    b800:	08000001 	stmdaeq	r0, {r0}
    b804:	df1a0124 	svcle	0x001a0124
    b808:	24000008 	strcs	r0, [r0], #-8
    b80c:	00000800 	andeq	r0, r0, r0, lsl #16
    b810:	0128080c 			; <UNDEFINED> instruction: 0x0128080c
    b814:	000c7a08 	andeq	r7, ip, r8, lsl #20
    b818:	067d0b00 	ldrbteq	r0, [sp], -r0, lsl #22
    b81c:	2a080000 	bcs	20b824 <_Min_Stack_Size+0x20b424>
    b820:	0c7a1101 	ldfeqe	f1, [sl], #-4
    b824:	0b000000 	bleq	b82c <_Min_Stack_Size+0xb42c>
    b828:	00000370 	andeq	r0, r0, r0, ror r3
    b82c:	07012b08 	streq	r2, [r1, -r8, lsl #22]
    b830:	0000009a 	muleq	r0, sl, r0
    b834:	06830b04 	streq	r0, [r3], r4, lsl #22
    b838:	2c080000 	stccs	0, cr0, [r8], {-0}
    b83c:	0c800b01 	fstmiaxeq	r0, {d0-d-1}	;@ Deprecated
    b840:	00080000 	andeq	r0, r8, r0
    b844:	0c41041d 	cfstrdeq	mvd0, [r1], {29}
    b848:	041d0000 	ldreq	r0, [sp], #-0
    b84c:	00000c34 	andeq	r0, r0, r4, lsr ip
    b850:	00003024 	andeq	r3, r0, r4, lsr #32
    b854:	44080e00 	strmi	r0, [r8], #-3584	; 0xfffff200
    b858:	0cbf0801 	ldceq	8, cr0, [pc], #4	; b864 <_Min_Stack_Size+0xb464>
    b85c:	d30b0000 	movwle	r0, #45056	; 0xb000
    b860:	08000006 	stmdaeq	r0, {r1, r2}
    b864:	bf120145 	svclt	0x00120145
    b868:	0000000c 	andeq	r0, r0, ip
    b86c:	0003f70b 	andeq	pc, r3, fp, lsl #14
    b870:	01460800 	cmpeq	r6, r0, lsl #16
    b874:	000cbf12 	andeq	fp, ip, r2, lsl pc
    b878:	be0b0600 	cfmadd32lt	mvax0, mvfx0, mvfx11, mvfx0
    b87c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    b880:	6f120147 	svcvs	0x00120147
    b884:	0c000000 	stceq	0, cr0, [r0], {-0}
    b888:	006f0e00 	rsbeq	r0, pc, r0, lsl #28
    b88c:	0ccf0000 	stcleq	0, cr0, [pc], {0}
    b890:	a10f0000 	mrsge	r0, CPSR
    b894:	02000000 	andeq	r0, r0, #0
    b898:	08d01200 	ldmeq	r0, {r9, ip}^
    b89c:	e4070285 	str	r0, [r7], #-645	; 0xfffffd7b
    b8a0:	0b00000d 	bleq	b8dc <_Min_Stack_Size+0xb4dc>
    b8a4:	0000042b 	andeq	r0, r0, fp, lsr #8
    b8a8:	18028708 	stmdane	r2, {r3, r8, r9, sl, pc}
    b8ac:	000000a1 	andeq	r0, r0, r1, lsr #1
    b8b0:	07810b00 	streq	r0, [r1, r0, lsl #22]
    b8b4:	88080000 	stmdahi	r8, {}	; <UNPREDICTABLE>
    b8b8:	0b941202 	bleq	fe5100c8 <__StackLimit+0xde4f00c8>
    b8bc:	0b040000 	bleq	10b8c4 <_Min_Stack_Size+0x10b4c4>
    b8c0:	000003aa 	andeq	r0, r0, sl, lsr #7
    b8c4:	10028908 	andne	r8, r2, r8, lsl #18
    b8c8:	00000de4 	andeq	r0, r0, r4, ror #27
    b8cc:	08970b08 	ldmeq	r7, {r3, r8, r9, fp}
    b8d0:	8a080000 	bhi	20b8d8 <_Min_Stack_Size+0x20b4d8>
    b8d4:	07791702 	ldrbeq	r1, [r9, -r2, lsl #14]!
    b8d8:	0b240000 	bleq	90b8e0 <_Min_Stack_Size+0x90b4e0>
    b8dc:	000002a3 	andeq	r0, r0, r3, lsr #5
    b8e0:	0f028b08 	svceq	0x00028b08
    b8e4:	0000009a 	muleq	r0, sl, r0
    b8e8:	06780b48 	ldrbteq	r0, [r8], -r8, asr #22
    b8ec:	8c080000 	stchi	0, cr0, [r8], {-0}
    b8f0:	00932c02 	addseq	r2, r3, r2, lsl #24
    b8f4:	0b500000 	bleq	140b8fc <_Min_Stack_Size+0x140b4fc>
    b8f8:	000008ad 	andeq	r0, r0, sp, lsr #17
    b8fc:	1a028d08 	bne	aed24 <_Min_Stack_Size+0xae924>
    b900:	00000c86 	andeq	r0, r0, r6, lsl #25
    b904:	06330b58 			; <UNDEFINED> instruction: 0x06330b58
    b908:	8e080000 	cdphi	0, 0, cr0, cr8, cr0, {0}
    b90c:	06d91602 	ldrbeq	r1, [r9], r2, lsl #12
    b910:	0b680000 	bleq	1a0b918 <_Min_Stack_Size+0x1a0b518>
    b914:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    b918:	16028f08 	strne	r8, [r2], -r8, lsl #30
    b91c:	000006d9 	ldrdeq	r0, [r0], -r9
    b920:	00fa0b70 	rscseq	r0, sl, r0, ror fp
    b924:	90080000 	andls	r0, r8, r0
    b928:	06d91602 	ldrbeq	r1, [r9], r2, lsl #12
    b92c:	0b780000 	bleq	1e0b934 <_Min_Stack_Size+0x1e0b534>
    b930:	00000815 	andeq	r0, r0, r5, lsl r8
    b934:	10029108 	andne	r9, r2, r8, lsl #2
    b938:	00000df4 	strdeq	r0, [r0], -r4
    b93c:	039e0b80 	orrseq	r0, lr, #128, 22	; 0x20000
    b940:	92080000 	andls	r0, r8, #0
    b944:	0e041002 	cdpeq	0, 0, cr1, cr4, cr2, {0}
    b948:	0b880000 	bleq	fe20b950 <__StackLimit+0xde1eb950>
    b94c:	00000065 	andeq	r0, r0, r5, rrx
    b950:	0f029308 	svceq	0x00029308
    b954:	0000009a 	muleq	r0, sl, r0
    b958:	025f0ba0 	subseq	r0, pc, #160, 22	; 0x28000
    b95c:	94080000 	strls	r0, [r8], #-0
    b960:	06d91602 	ldrbeq	r1, [r9], r2, lsl #12
    b964:	0ba40000 	bleq	fe90b96c <__StackLimit+0xde8eb96c>
    b968:	000000e1 	andeq	r0, r0, r1, ror #1
    b96c:	16029508 	strne	r9, [r2], -r8, lsl #10
    b970:	000006d9 	ldrdeq	r0, [r0], -r9
    b974:	02340bac 	eorseq	r0, r4, #172, 22	; 0x2b000
    b978:	96080000 	strls	r0, [r8], -r0
    b97c:	06d91602 	ldrbeq	r1, [r9], r2, lsl #12
    b980:	0bb40000 	bleq	fed0b988 <__StackLimit+0xdeceb988>
    b984:	0000007c 	andeq	r0, r0, ip, ror r0
    b988:	16029708 	strne	r9, [r2], -r8, lsl #14
    b98c:	000006d9 	ldrdeq	r0, [r0], -r9
    b990:	05820bbc 	streq	r0, [r2, #3004]	; 0xbbc
    b994:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    b998:	06d91602 	ldrbeq	r1, [r9], r2, lsl #12
    b99c:	0bc40000 	bleq	ff10b9a4 <__StackLimit+0xdf0eb9a4>
    b9a0:	0000062a 	andeq	r0, r0, sl, lsr #12
    b9a4:	08029908 	stmdaeq	r2, {r3, r8, fp, ip, pc}
    b9a8:	0000009a 	muleq	r0, sl, r0
    b9ac:	9a0e00cc 	bls	38bce4 <_Min_Stack_Size+0x38b8e4>
    b9b0:	f400000b 	vst4.8	{d0-d3}, [r0], fp
    b9b4:	0f00000d 	svceq	0x0000000d
    b9b8:	000000a1 	andeq	r0, r0, r1, lsr #1
    b9bc:	9a0e0019 	bls	38ba28 <_Min_Stack_Size+0x38b628>
    b9c0:	0400000b 	streq	r0, [r0], #-11
    b9c4:	0f00000e 	svceq	0x0000000e
    b9c8:	000000a1 	andeq	r0, r0, r1, lsr #1
    b9cc:	9a0e0007 	bls	38b9f0 <_Min_Stack_Size+0x38b5f0>
    b9d0:	1400000b 	strne	r0, [r0], #-11
    b9d4:	0f00000e 	svceq	0x0000000e
    b9d8:	000000a1 	andeq	r0, r0, r1, lsr #1
    b9dc:	f0120017 			; <UNDEFINED> instruction: 0xf0120017
    b9e0:	07029e08 	streq	r9, [r2, -r8, lsl #28]
    b9e4:	00000e3b 	andeq	r0, r0, fp, lsr lr
    b9e8:	0004400b 	andeq	r4, r4, fp
    b9ec:	02a10800 	adceq	r0, r1, #0, 16
    b9f0:	000e3b1b 	andeq	r3, lr, fp, lsl fp
    b9f4:	c00b0000 	andgt	r0, fp, r0
    b9f8:	08000002 	stmdaeq	r0, {r1}
    b9fc:	4b1802a2 	blmi	60c48c <_Min_Stack_Size+0x60c08c>
    ba00:	7800000e 	stmdavc	r0, {r1, r2, r3}
    ba04:	08d90e00 	ldmeq	r9, {r9, sl, fp}^
    ba08:	0e4b0000 	cdpeq	0, 4, cr0, cr11, cr0, {0}
    ba0c:	a10f0000 	mrsge	r0, CPSR
    ba10:	1d000000 	stcne	0, cr0, [r0, #-0]
    ba14:	00a10e00 	adceq	r0, r1, r0, lsl #28
    ba18:	0e5b0000 	cdpeq	0, 5, cr0, cr11, cr0, {0}
    ba1c:	a10f0000 	mrsge	r0, CPSR
    ba20:	1d000000 	stcne	0, cr0, [r0, #-0]
    ba24:	08f02500 	ldmeq	r0!, {r8, sl, sp}^
    ba28:	80030283 	andhi	r0, r3, r3, lsl #5
    ba2c:	2600000e 	strcs	r0, [r0], -lr
    ba30:	000006cc 	andeq	r0, r0, ip, asr #13
    ba34:	0b029a08 	bleq	b225c <_Min_Stack_Size+0xb1e5c>
    ba38:	00000ccf 	andeq	r0, r0, pc, asr #25
    ba3c:	00087c26 	andeq	r7, r8, r6, lsr #24
    ba40:	02a30800 	adceq	r0, r3, #0, 16
    ba44:	000e140b 	andeq	r1, lr, fp, lsl #8
    ba48:	9a0e0000 	bls	38ba50 <_Min_Stack_Size+0x38b650>
    ba4c:	9000000b 	andls	r0, r0, fp
    ba50:	0f00000e 	svceq	0x0000000e
    ba54:	000000a1 	andeq	r0, r0, r1, lsr #1
    ba58:	c0270018 	eorgt	r0, r7, r8, lsl r0
    ba5c:	1d000000 	stcne	0, cr0, [r0, #-0]
    ba60:	000e9004 	andeq	r9, lr, r4
    ba64:	0ea62800 	cdpeq	8, 10, cr2, cr6, cr0, {0}
    ba68:	40220000 	eormi	r0, r2, r0
    ba6c:	0000000a 	andeq	r0, r0, sl
    ba70:	0e9b041d 	mrceq	4, 4, r0, cr11, cr13, {0}
    ba74:	041d0000 	ldreq	r0, [sp], #-0
    ba78:	00000763 	andeq	r0, r0, r3, ror #14
    ba7c:	000ebd28 	andeq	fp, lr, r8, lsr #26
    ba80:	009a2200 	addseq	r2, sl, r0, lsl #4
    ba84:	1d000000 	stcne	0, cr0, [r0, #-0]
    ba88:	000ec304 	andeq	ip, lr, r4, lsl #6
    ba8c:	b2041d00 	andlt	r1, r4, #0, 26
    ba90:	0e00000e 	cdpeq	0, 0, cr0, cr0, cr14, {0}
    ba94:	00000c34 	andeq	r0, r0, r4, lsr ip
    ba98:	00000ed9 	ldrdeq	r0, [r0], -r9
    ba9c:	0000a10f 	andeq	sl, r0, pc, lsl #2
    baa0:	14000200 	strne	r0, [r0], #-512	; 0xfffffe00
    baa4:	000007d2 	ldrdeq	r0, [r0], -r2
    baa8:	17033308 	strne	r3, [r3, -r8, lsl #6]
    baac:	00000a40 	andeq	r0, r0, r0, asr #20
    bab0:	0007cb14 	andeq	ip, r7, r4, lsl fp
    bab4:	03340800 	teqeq	r4, #0, 16
    bab8:	000a461d 	andeq	r4, sl, sp, lsl r6
    babc:	01070700 	tsteq	r7, r0, lsl #14
    bac0:	00000068 	andeq	r0, r0, r8, rrx
    bac4:	1a01330a 	bne	586f4 <_Min_Stack_Size+0x582f4>
    bac8:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    bacc:	00000846 	andeq	r0, r0, r6, asr #16
    bad0:	073d0964 	ldreq	r0, [sp, -r4, ror #18]!
    bad4:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    bad8:	00000356 	andeq	r0, r0, r6, asr r3
    badc:	054c0901 	strbeq	r0, [ip, #-2305]	; 0xfffff6ff
    bae0:	00010000 	andeq	r0, r1, r0
    bae4:	00001403 	andeq	r1, r0, r3, lsl #8
    bae8:	03380a00 	teqeq	r8, #0, 20
    baec:	00000ef3 	strdeq	r0, [r0], -r3
    baf0:	0002fe15 	andeq	pc, r2, r5, lsl lr	; <UNPREDICTABLE>
    baf4:	16cd0a00 	strbne	r0, [sp], r0, lsl #20
    baf8:	00000082 	andeq	r0, r0, r2, lsl #1
    bafc:	0003c015 	andeq	ip, r3, r5, lsl r0
    bb00:	11ce0a00 	bicne	r0, lr, r0, lsl #20
    bb04:	00000076 	andeq	r0, r0, r6, ror r0
    bb08:	0002f315 	andeq	pc, r2, r5, lsl r3	; <UNPREDICTABLE>
    bb0c:	1ccf0a00 	vstmiane	pc, {s1-s0}
    bb10:	00000f1a 	andeq	r0, r0, sl, lsl pc
    bb14:	060b0419 			; <UNDEFINED> instruction: 0x060b0419
    bb18:	000f6109 	andeq	r6, pc, r9, lsl #2
    bb1c:	2ca21a00 	vstmiacs	r2!, {s2-s1}
    bb20:	080b0000 	stmdaeq	fp, {}	; <UNPREDICTABLE>
    bb24:	0000760b 	andeq	r7, r0, fp, lsl #12
    bb28:	03000000 	movweq	r0, #0
    bb2c:	00002c25 	andeq	r2, r0, r5, lsr #24
    bb30:	4a03090b 	bmi	cdf64 <_Min_Stack_Size+0xcdb64>
    bb34:	1b00000f 	blne	bb78 <_Min_Stack_Size+0xb778>
    bb38:	00002b81 	andeq	r2, r0, r1, lsl #23
    bb3c:	10040c08 	andne	r0, r4, r8, lsl #24
    bb40:	00000f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
    bb44:	002b201a 	eoreq	r2, fp, sl, lsl r0
    bb48:	14050c00 	strne	r0, [r5], #-3072	; 0xfffff400
    bb4c:	00000f95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
    bb50:	2b771a00 	blcs	1dd2358 <_Min_Stack_Size+0x1dd1f58>
    bb54:	060c0000 	streq	r0, [ip], -r0
    bb58:	000f9514 	andeq	r9, pc, r4, lsl r5	; <UNPREDICTABLE>
    bb5c:	1d000400 	cfstrsne	mvf0, [r0, #-0]
    bb60:	000f6d04 	andeq	r6, pc, r4, lsl #26
    bb64:	2b880300 	blcs	fe20c76c <__StackLimit+0xde1ec76c>
    bb68:	070c0000 	streq	r0, [ip, -r0]
    bb6c:	000f6d03 	andeq	r6, pc, r3, lsl #26
    bb70:	2d631b00 	vstmdbcs	r3!, {d17-d16}
    bb74:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    bb78:	0fcf1009 	svceq	0x00cf1009
    bb7c:	e11a0000 	tst	sl, r0
    bb80:	0c00002d 	stceq	0, cr0, [r0], {45}	; 0x2d
    bb84:	0f9b0c0a 	svceq	0x009b0c0a
    bb88:	1a000000 	bne	bb90 <_Min_Stack_Size+0xb790>
    bb8c:	00002d37 	andeq	r2, r0, r7, lsr sp
    bb90:	760e0b0c 	strvc	r0, [lr], -ip, lsl #22
    bb94:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    bb98:	2d420300 	stclcs	3, cr0, [r2, #-0]
    bb9c:	0c0c0000 	stceq	0, cr0, [ip], {-0}
    bba0:	000fa703 	andeq	sl, pc, r3, lsl #14
    bba4:	2bf40300 	blcs	ffd0c7ac <__StackLimit+0xdfcec7ac>
    bba8:	0a0d0000 	beq	34bbb0 <_Min_Stack_Size+0x34b7b0>
    bbac:	00007612 	andeq	r7, r0, r2, lsl r6
    bbb0:	0d241900 			; <UNDEFINED> instruction: 0x0d241900
    bbb4:	104c090f 	subne	r0, ip, pc, lsl #18
    bbb8:	791a0000 	ldmdbvc	sl, {}	; <UNPREDICTABLE>
    bbbc:	0d000031 	stceq	0, cr0, [r0, #-196]	; 0xffffff3c
    bbc0:	104c1310 	subne	r1, ip, r0, lsl r3
    bbc4:	1a000000 	bne	bbcc <_Min_Stack_Size+0xb7cc>
    bbc8:	00002b2a 	andeq	r2, r0, sl, lsr #22
    bbcc:	760e110d 	strvc	r1, [lr], -sp, lsl #2
    bbd0:	04000000 	streq	r0, [r0], #-0
    bbd4:	002cee1a 	eoreq	lr, ip, sl, lsl lr
    bbd8:	0e120d00 	cdpeq	13, 1, cr0, cr2, cr0, {0}
    bbdc:	00000076 	andeq	r0, r0, r6, ror r0
    bbe0:	2b361a08 	blcs	d92408 <_Min_Stack_Size+0xd92008>
    bbe4:	130d0000 	movwne	r0, #53248	; 0xd000
    bbe8:	000f9b0c 	andeq	r9, pc, ip, lsl #22
    bbec:	be1a0c00 	cdplt	12, 1, cr0, cr10, cr0, {0}
    bbf0:	0d00002a 	stceq	0, cr0, [r0, #-168]	; 0xffffff58
    bbf4:	0f9b0c14 	svceq	0x009b0c14
    bbf8:	1a140000 	bne	50bc00 <_Min_Stack_Size+0x50b800>
    bbfc:	00000102 	andeq	r0, r0, r2, lsl #2
    bc00:	760e150d 	strvc	r1, [lr], -sp, lsl #10
    bc04:	1c000000 	stcne	0, cr0, [r0], {-0}
    bc08:	002ab81a 	eoreq	fp, sl, sl, lsl r8
    bc0c:	0e170d00 	cdpeq	13, 1, cr0, cr7, cr0, {0}
    bc10:	00000076 	andeq	r0, r0, r6, ror r0
    bc14:	041d0020 	ldreq	r0, [sp], #-32	; 0xffffffe0
    bc18:	00000fdb 	ldrdeq	r0, [r0], -fp
    bc1c:	002b6503 	eoreq	r6, fp, r3, lsl #10
    bc20:	03180d00 	tsteq	r8, #0, 26
    bc24:	00000fe7 	andeq	r0, r0, r7, ror #31
    bc28:	002bcf15 	eoreq	ip, fp, r5, lsl pc
    bc2c:	101a0d00 	andsne	r0, sl, r0, lsl #26
    bc30:	0000106a 	andeq	r1, r0, sl, rrx
    bc34:	1052041d 	subsne	r0, r2, sp, lsl r4
    bc38:	dc150000 	ldcle	0, cr0, [r5], {-0}
    bc3c:	0d00002b 	stceq	0, cr0, [r0, #-172]	; 0xffffff54
    bc40:	106a101b 	rsbne	r1, sl, fp, lsl r0
    bc44:	b5290000 	strlt	r0, [r9, #-0]!
    bc48:	0200002c 	andeq	r0, r0, #44	; 0x2c
    bc4c:	108e0605 	addne	r0, lr, r5, lsl #12
    bc50:	03050000 	movweq	r0, #20480	; 0x5000
    bc54:	200005fc 	strdcs	r0, [r0], -ip
    bc58:	dd020102 	stfles	f0, [r2, #-8]
    bc5c:	2a000029 	bcs	bd08 <_Min_Stack_Size+0xb908>
    bc60:	0000105e 	andeq	r1, r0, lr, asr r0
    bc64:	05090602 	streq	r0, [r9, #-1538]	; 0xfffff9fe
    bc68:	00060003 	andeq	r0, r6, r3
    bc6c:	10702a20 	rsbsne	r2, r0, r0, lsr #20
    bc70:	07020000 	streq	r0, [r2, -r0]
    bc74:	54030509 	strpl	r0, [r3], #-1289	; 0xfffffaf7
    bc78:	29200006 	stmdbcs	r0!, {r1, r2}
    bc7c:	00002d59 	andeq	r2, r0, r9, asr sp
    bc80:	6a090802 	bvs	24dc90 <_Min_Stack_Size+0x24d890>
    bc84:	05000010 	streq	r0, [r0, #-16]
    bc88:	0026d803 	eoreq	sp, r6, r3, lsl #16
    bc8c:	0fcf0e20 	svceq	0x00cf0e20
    bc90:	10d30000 	sbcsne	r0, r3, r0
    bc94:	a10f0000 	mrsge	r0, CPSR
    bc98:	1f000000 	svcne	0x00000000
    bc9c:	2e022900 	vmlacs.f16	s4, s4, s0	; <UNPREDICTABLE>
    bca0:	0a020000 	beq	8bca8 <_Min_Stack_Size+0x8b8a8>
    bca4:	0010c308 	andseq	ip, r0, r8, lsl #6
    bca8:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    bcac:	29200046 	stmdbcs	r0!, {r1, r2, r6}
    bcb0:	00002d15 	andeq	r2, r0, r5, lsl sp
    bcb4:	760a0c02 	strvc	r0, [sl], -r2, lsl #24
    bcb8:	05000000 	streq	r0, [r0, #-0]
    bcbc:	00060403 	andeq	r0, r6, r3, lsl #8
    bcc0:	2aef2920 	bcs	ffbd6148 <__StackLimit+0xdfbb6148>
    bcc4:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
    bcc8:	00005209 	andeq	r5, r0, r9, lsl #4
    bccc:	50030500 	andpl	r0, r3, r0, lsl #10
    bcd0:	29200006 	stmdbcs	r0!, {r1, r2}
    bcd4:	00002c94 	muleq	r0, r4, ip
    bcd8:	610a1002 	tstvs	sl, r2
    bcdc:	0500000f 	streq	r0, [r0, #-15]
    bce0:	0026e803 	eoreq	lr, r6, r3, lsl #16
    bce4:	2e1a2920 	vnmlscs.f16	s4, s20, s1	; <UNPREDICTABLE>
    bce8:	11020000 	mrsne	r0, (UNDEF: 2)
    bcec:	000fcf08 	andeq	ip, pc, r8, lsl #30
    bcf0:	dc030500 	cfstr32le	mvfx0, [r3], {-0}
    bcf4:	03200026 			; <UNDEFINED> instruction: 0x03200026
    bcf8:	00002e37 	andeq	r2, r0, r7, lsr lr
    bcfc:	39101302 	ldmdbcc	r0, {r1, r8, r9, ip}
    bd00:	1d000011 	stcne	0, cr0, [r0, #-68]	; 0xffffffbc
    bd04:	00113f04 	andseq	r3, r1, r4, lsl #30
    bd08:	114a2800 	cmpne	sl, r0, lsl #16
    bd0c:	5c220000 	stcpl	0, cr0, [r2], #-0
    bd10:	00000006 	andeq	r0, r0, r6
    bd14:	0006072a 	andeq	r0, r6, sl, lsr #14
    bd18:	20df0200 	sbcscs	r0, pc, r0, lsl #4
    bd1c:	04300305 	ldrteq	r0, [r0], #-773	; 0xfffffcfb
    bd20:	a9292000 	stmdbge	r9!, {sp}
    bd24:	0200002c 	andeq	r0, r0, #44	; 0x2c
    bd28:	009a05e9 	addseq	r0, sl, r9, ror #11
    bd2c:	03050000 	movweq	r0, #20480	; 0x5000
    bd30:	200026d4 	ldrdcs	r2, [r0], -r4
    bd34:	002d0a29 	eoreq	r0, sp, r9, lsr #20
    bd38:	05ea0200 	strbeq	r0, [sl, #512]!	; 0x200
    bd3c:	0000009a 	muleq	r0, sl, r0
    bd40:	16800305 	strne	r0, [r0], r5, lsl #6
    bd44:	44292000 	strtmi	r2, [r9], #-0
    bd48:	0200002e 	andeq	r0, r0, #46	; 0x2e
    bd4c:	009a05eb 	addseq	r0, sl, fp, ror #11
    bd50:	03050000 	movweq	r0, #20480	; 0x5000
    bd54:	200026d0 	ldrdcs	r2, [r0], -r0
    bd58:	002c1a2b 	eoreq	r1, ip, fp, lsr #20
    bd5c:	01110200 	tsteq	r1, r0, lsl #4
    bd60:	00009a05 	andeq	r9, r0, r5, lsl #20
    bd64:	58030500 	stmdapl	r3, {r8, sl}
    bd68:	2b200006 	blcs	80bd88 <_Min_Stack_Size+0x80b988>
    bd6c:	00002e61 	andeq	r2, r0, r1, ror #28
    bd70:	05012102 	streq	r2, [r1, #-258]	; 0xfffffefe
    bd74:	0000009a 	muleq	r0, sl, r0
    bd78:	16840305 	strne	r0, [r4], r5, lsl #6
    bd7c:	3f2b2000 	svccc	0x002b2000
    bd80:	0200002c 	andeq	r0, r0, #44	; 0x2c
    bd84:	5208013a 	andpl	r0, r8, #-2147483634	; 0x8000000e
    bd88:	05000010 	streq	r0, [r0, #-16]
    bd8c:	00168803 	andseq	r8, r6, r3, lsl #16
    bd90:	2d902b20 	vldrcs	d2, [r0, #128]	; 0x80
    bd94:	3b020000 	blcc	8bd9c <_Min_Stack_Size+0x8b99c>
    bd98:	10520801 	subsne	r0, r2, r1, lsl #16
    bd9c:	03050000 	movweq	r0, #20480	; 0x5000
    bda0:	200026ac 	andcs	r2, r0, ip, lsr #13
    bda4:	002d962b 	eoreq	r9, sp, fp, lsr #12
    bda8:	013c0200 	teqeq	ip, r0, lsl #4
    bdac:	00105208 	andseq	r5, r0, r8, lsl #4
    bdb0:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
    bdb4:	0e200048 	cdpeq	0, 2, cr0, cr0, cr8, {2}
    bdb8:	00000076 	andeq	r0, r0, r6, ror r0
    bdbc:	000011fe 	strdeq	r1, [r0], -lr
    bdc0:	0000a110 	andeq	sl, r0, r0, lsl r1
    bdc4:	0003ff00 	andeq	pc, r3, r0, lsl #30
    bdc8:	002e4e2b 	eoreq	r4, lr, fp, lsr #28
    bdcc:	013d0200 	teqeq	sp, r0, lsl #4
    bdd0:	0011ed0a 	andseq	lr, r1, sl, lsl #26
    bdd4:	80030500 	andhi	r0, r3, r0, lsl #10
    bdd8:	2b200006 	blcs	80bdf8 <_Min_Stack_Size+0x80b9f8>
    bddc:	00002deb 	andeq	r2, r0, fp, ror #27
    bde0:	0a013e02 	beq	5b5f0 <_Min_Stack_Size+0x5b1f0>
    bde4:	000011ed 	andeq	r1, r0, sp, ror #3
    bde8:	16ac0305 	strtne	r0, [ip], r5, lsl #6
    bdec:	752b2000 	strvc	r2, [fp, #-0]!
    bdf0:	0200002d 	andeq	r0, r0, #45	; 0x2d
    bdf4:	ed0a013f 	stfs	f0, [sl, #-252]	; 0xffffff04
    bdf8:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    bdfc:	0026ec03 	eoreq	lr, r6, r3, lsl #24
    be00:	2c652b20 			; <UNDEFINED> instruction: 0x2c652b20
    be04:	41020000 	mrsmi	r0, (UNDEF: 2)
    be08:	10520801 	subsne	r0, r2, r1, lsl #16
    be0c:	03050000 	movweq	r0, #20480	; 0x5000
    be10:	2000065c 	andcs	r0, r0, ip, asr r6
    be14:	002c582b 	eoreq	r5, ip, fp, lsr #16
    be18:	01420200 	mrseq	r0, (UNDEF: 98)
    be1c:	0011ed0a 	andseq	lr, r1, sl, lsl #26
    be20:	ec030500 	cfstr32	mvfx0, [r3], {-0}
    be24:	2c200036 	stccs	0, cr0, [r0], #-216	; 0xffffff28
    be28:	00002d6a 	andeq	r2, r0, sl, ror #26
    be2c:	06014502 	streq	r4, [r1], -r2, lsl #10
    be30:	080038ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip, sp}
    be34:	000000a4 	andeq	r0, r0, r4, lsr #1
    be38:	492d9c01 	pushmi	{r0, sl, fp, ip, pc}
    be3c:	0200002d 	andeq	r0, r0, #45	; 0x2d
    be40:	e0060132 	and	r0, r6, r2, lsr r1
    be44:	0a080038 	beq	20bf2c <_Min_Stack_Size+0x20bb2c>
    be48:	01000000 	mrseq	r0, (UNDEF: 0)
    be4c:	0012989c 	mulseq	r2, ip, r8
    be50:	2e912e00 	cdpcs	14, 9, cr2, cr1, cr0, {0}
    be54:	32020000 	andcc	r0, r2, #0
    be58:	065c1c01 	ldrbeq	r1, [ip], -r1, lsl #24
    be5c:	91020000 	mrsls	r0, (UNDEF: 2)
    be60:	2a2f0074 	bcs	bcc038 <_Min_Stack_Size+0xbcbc38>
    be64:	0200002e 	andeq	r0, r0, #46	; 0x2e
    be68:	84060122 	strhi	r0, [r6], #-290	; 0xfffffede
    be6c:	5c080038 	stcpl	0, cr0, [r8], {56}	; 0x38
    be70:	01000000 	mrseq	r0, (UNDEF: 0)
    be74:	0012cf9c 	mulseq	r2, ip, pc	; <UNPREDICTABLE>
    be78:	2e912e00 	cdpcs	14, 9, cr2, cr1, cr0, {0}
    be7c:	22020000 	andcs	r0, r2, #0
    be80:	065c1901 	ldrbeq	r1, [ip], -r1, lsl #18
    be84:	91020000 	mrsls	r0, (UNDEF: 2)
    be88:	133a3074 	teqne	sl, #116	; 0x74
    be8c:	12df0000 	sbcsne	r0, pc, #0
    be90:	03050000 	movweq	r0, #20480	; 0x5000
    be94:	08003f98 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, fp, ip, sp}
    be98:	0ba10e00 	bleq	fe84f6a0 <__StackLimit+0xde82f6a0>
    be9c:	12df0000 	sbcsne	r0, pc, #0
    bea0:	a10f0000 	mrsge	r0, CPSR
    bea4:	0c000000 	stceq	0, cr0, [r0], {-0}
    bea8:	12cf0500 	sbcne	r0, pc, #0, 10
    beac:	f52f0000 			; <UNDEFINED> instruction: 0xf52f0000
    beb0:	0200002d 	andeq	r0, r0, #45	; 0x2d
    beb4:	28060112 	stmdacs	r6, {r1, r4, r8}
    beb8:	5c080038 	stcpl	0, cr0, [r8], {56}	; 0x38
    bebc:	01000000 	mrseq	r0, (UNDEF: 0)
    bec0:	00131b9c 	mulseq	r3, ip, fp
    bec4:	2e912e00 	cdpcs	14, 9, cr2, cr1, cr0, {0}
    bec8:	12020000 	andne	r0, r2, #0
    becc:	065c1901 	ldrbeq	r1, [ip], -r1, lsl #18
    bed0:	91020000 	mrsls	r0, (UNDEF: 2)
    bed4:	133a3074 	teqne	sl, #116	; 0x74
    bed8:	12df0000 	sbcsne	r0, pc, #0
    bedc:	03050000 	movweq	r0, #20480	; 0x5000
    bee0:	08003f88 	stmdaeq	r0, {r3, r7, r8, r9, sl, fp, ip, sp}
    bee4:	2e0d3100 	adfcse	f3, f5, f0
    bee8:	ec020000 	stc	0, cr0, [r2], {-0}
    beec:	00374006 	eorseq	r4, r7, r6
    bef0:	0000e808 	andeq	lr, r0, r8, lsl #16
    bef4:	869c0100 	ldrhi	r0, [ip], r0, lsl #2
    bef8:	32000013 	andcc	r0, r0, #19
    befc:	00002e91 	muleq	r0, r1, lr
    bf00:	5c19ec02 	ldcpl	12, cr14, [r9], {2}
    bf04:	02000006 	andeq	r0, r0, #6
    bf08:	a2336491 	eorsge	r6, r3, #-1862270976	; 0x91000000
    bf0c:	0200002c 	andeq	r0, r0, #44	; 0x2c
    bf10:	0f610eee 	svceq	0x00610eee
    bf14:	91020000 	mrsls	r0, (UNDEF: 2)
    bf18:	0069346c 	rsbeq	r3, r9, ip, ror #8
    bf1c:	9a09ef02 	bls	287b2c <_Min_Stack_Size+0x28772c>
    bf20:	02000000 	andeq	r0, r0, #0
    bf24:	3a307491 	bcc	c29170 <_Min_Stack_Size+0xc28d70>
    bf28:	df000013 	svcle	0x00000013
    bf2c:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    bf30:	003f7803 	eorseq	r7, pc, r3, lsl #16
    bf34:	37c83508 	strbcc	r3, [r8, r8, lsl #10]
    bf38:	00460800 	subeq	r0, r6, r0, lsl #16
    bf3c:	76360000 	ldrtvc	r0, [r6], -r0
    bf40:	02007261 	andeq	r7, r0, #268435462	; 0x10000006
    bf44:	9a0d0104 	bls	34c35c <_Min_Stack_Size+0x34bf5c>
    bf48:	02000000 	andeq	r0, r0, #0
    bf4c:	00007091 	muleq	r0, r1, r0
    bf50:	002cf731 	eoreq	pc, ip, r1, lsr r7	; <UNPREDICTABLE>
    bf54:	06e00200 	strbteq	r0, [r0], r0, lsl #4
    bf58:	08003718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip, sp}
    bf5c:	00000026 	andeq	r0, r0, r6, lsr #32
    bf60:	13ba9c01 			; <UNDEFINED> instruction: 0x13ba9c01
    bf64:	6d370000 	ldcvs	0, cr0, [r7, #-0]
    bf68:	e0020073 	and	r0, r2, r3, ror r0
    bf6c:	00007622 	andeq	r7, r0, r2, lsr #12
    bf70:	6c910200 	lfmvs	f0, 4, [r1], {0}
    bf74:	002b3033 	eoreq	r3, fp, r3, lsr r0
    bf78:	0ee20200 	cdpeq	2, 14, cr0, cr2, cr0, {0}
    bf7c:	00000076 	andeq	r0, r0, r6, ror r0
    bf80:	00749102 	rsbseq	r9, r4, r2, lsl #2
    bf84:	002c6f38 	eoreq	r6, ip, r8, lsr pc
    bf88:	06d60200 	ldrbeq	r0, [r6], r0, lsl #4
    bf8c:	080036ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip, sp}
    bf90:	0000002c 	andeq	r0, r0, ip, lsr #32
    bf94:	77319c01 	ldrvc	r9, [r1, -r1, lsl #24]!
    bf98:	0200002e 	andeq	r0, r0, #46	; 0x2e
    bf9c:	36b006cd 	ldrtcc	r0, [r0], sp, asr #13
    bfa0:	003c0800 	eorseq	r0, ip, r0, lsl #16
    bfa4:	9c010000 	stcls	0, cr0, [r1], {-0}
    bfa8:	00001401 	andeq	r1, r0, r1, lsl #8
    bfac:	002e7c32 	eoreq	r7, lr, r2, lsr ip
    bfb0:	1acd0200 	bne	ff34c7b8 <__StackLimit+0xdf32c7b8>
    bfb4:	00000076 	andeq	r0, r0, r6, ror r0
    bfb8:	336c9102 	cmncc	ip, #-2147483648	; 0x80000000
    bfbc:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    bfc0:	760ecf02 	strvc	ip, [lr], -r2, lsl #30
    bfc4:	02000000 	andeq	r0, r0, #0
    bfc8:	31007491 			; <UNDEFINED> instruction: 0x31007491
    bfcc:	00002c7f 	andeq	r2, r0, pc, ror ip
    bfd0:	dc06ae02 	stcle	14, cr10, [r6], {2}
    bfd4:	d4080035 	strle	r0, [r8], #-53	; 0xffffffcb
    bfd8:	01000000 	mrseq	r0, (UNDEF: 0)
    bfdc:	0014599c 	mulseq	r4, ip, r9
    bfe0:	2de63300 	stclcs	3, cr3, [r6]
    bfe4:	b0020000 	andlt	r0, r2, r0
    bfe8:	0014590d 	andseq	r5, r4, sp, lsl #18
    bfec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    bff0:	02006939 	andeq	r6, r0, #933888	; 0xe4000
    bff4:	009a09b2 			; <UNDEFINED> instruction: 0x009a09b2
    bff8:	bb330000 	bllt	ccc000 <_Min_Stack_Size+0xccbc00>
    bffc:	02000021 	andeq	r0, r0, #33	; 0x21
    c000:	00760eb3 	ldrhteq	r0, [r6], #-227	; 0xffffff1d
    c004:	91020000 	mrsls	r0, (UNDEF: 2)
    c008:	35f03570 	ldrbcc	r3, [r0, #1392]!	; 0x570
    c00c:	00240800 	eoreq	r0, r4, r0, lsl #16
    c010:	5e330000 	cdppl	0, 3, cr0, cr3, cr0, {0}
    c014:	0200002d 	andeq	r0, r0, #45	; 0x2d
    c018:	106a11b5 	strhtne	r1, [sl], #-21	; 0xffffffeb
    c01c:	91020000 	mrsls	r0, (UNDEF: 2)
    c020:	1d00006c 	stcne	0, cr0, [r0, #-432]	; 0xfffffe50
    c024:	000f9b04 	andeq	r9, pc, r4, lsl #22
    c028:	2c2e3100 	stfcss	f3, [lr], #-0
    c02c:	a8020000 	stmdage	r2, {}	; <UNPREDICTABLE>
    c030:	0035b006 	eorseq	fp, r5, r6
    c034:	00002c08 	andeq	r2, r0, r8, lsl #24
    c038:	859c0100 	ldrhi	r0, [ip, #256]	; 0x100
    c03c:	32000014 	andcc	r0, r0, #20
    c040:	00002d5e 	andeq	r2, r0, lr, asr sp
    c044:	6a1fa802 	bvs	7f6054 <_Min_Stack_Size+0x7f5c54>
    c048:	02000010 	andeq	r0, r0, #16
    c04c:	31007491 			; <UNDEFINED> instruction: 0x31007491
    c050:	00002e82 	andeq	r2, r0, r2, lsl #29
    c054:	7c06a202 	sfmvc	f2, 1, [r6], {2}
    c058:	34080035 	strcc	r0, [r8], #-53	; 0xffffffcb
    c05c:	01000000 	mrseq	r0, (UNDEF: 0)
    c060:	0014ba9c 	mulseq	r4, ip, sl
    c064:	2d5e3200 	lfmcs	f3, 2, [lr, #-0]
    c068:	a2020000 	andge	r0, r2, #0
    c06c:	00106a1d 	andseq	r6, r0, sp, lsl sl
    c070:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c074:	002b3032 	eoreq	r3, fp, r2, lsr r0
    c078:	2ca20200 	sfmcs	f0, 4, [r2]
    c07c:	00000076 	andeq	r0, r0, r6, ror r0
    c080:	00709102 	rsbseq	r9, r0, r2, lsl #2
    c084:	002ea738 	eoreq	sl, lr, r8, lsr r7
    c088:	069e0200 	ldreq	r0, [lr], r0, lsl #4
    c08c:	08003568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip, sp}
    c090:	00000014 	andeq	r0, r0, r4, lsl r0
    c094:	6c319c01 	ldcvs	12, cr9, [r1], #-4
    c098:	0200002e 	andeq	r0, r0, #46	; 0x2e
    c09c:	3518066b 	ldrcc	r0, [r8, #-1643]	; 0xfffff995
    c0a0:	00500800 	subseq	r0, r0, r0, lsl #16
    c0a4:	9c010000 	stcls	0, cr0, [r1], {-0}
    c0a8:	00001501 	andeq	r1, r0, r1, lsl #10
    c0ac:	002e5833 	eoreq	r5, lr, r3, lsr r8
    c0b0:	0d6d0200 	sfmeq	f0, 2, [sp, #-0]
    c0b4:	0000106a 	andeq	r1, r0, sl, rrx
    c0b8:	33709102 	cmncc	r0, #-2147483648	; 0x80000000
    c0bc:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    c0c0:	760e6e02 	strvc	r6, [lr], -r2, lsl #28
    c0c4:	02000000 	andeq	r0, r0, #0
    c0c8:	31007491 			; <UNDEFINED> instruction: 0x31007491
    c0cc:	00002d22 	andeq	r2, r0, r2, lsr #26
    c0d0:	bc066102 	stflts	f6, [r6], {2}
    c0d4:	5c080034 	stcpl	0, cr0, [r8], {52}	; 0x34
    c0d8:	01000000 	mrseq	r0, (UNDEF: 0)
    c0dc:	0015279c 	mulseq	r5, ip, r7
    c0e0:	2d5e3200 	lfmcs	f3, 2, [lr, #-0]
    c0e4:	61020000 	mrsvs	r0, (UNDEF: 2)
    c0e8:	00106a23 	andseq	r6, r0, r3, lsr #20
    c0ec:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c0f0:	2d7f3100 	ldfcse	f3, [pc, #-0]	; c0f8 <_Min_Stack_Size+0xbcf8>
    c0f4:	5b020000 	blpl	8c0fc <_Min_Stack_Size+0x8bcfc>
    c0f8:	00347c06 	eorseq	r7, r4, r6, lsl #24
    c0fc:	00004008 	andeq	r4, r0, r8
    c100:	4d9c0100 	ldfmis	f0, [ip]
    c104:	32000015 	andcc	r0, r0, #21
    c108:	00002d5e 	andeq	r2, r0, lr, asr sp
    c10c:	6a1f5b02 	bvs	7e2d1c <_Min_Stack_Size+0x7e291c>
    c110:	02000010 	andeq	r0, r0, #16
    c114:	31007491 			; <UNDEFINED> instruction: 0x31007491
    c118:	00002cd4 	ldrdeq	r2, [r0], -r4
    c11c:	3c065002 	stccc	0, cr5, [r6], {2}
    c120:	40080034 	andmi	r0, r8, r4, lsr r0
    c124:	01000000 	mrseq	r0, (UNDEF: 0)
    c128:	0015739c 	mulseq	r5, ip, r3
    c12c:	21bb3300 			; <UNDEFINED> instruction: 0x21bb3300
    c130:	52020000 	andpl	r0, r2, #0
    c134:	0000760e 	andeq	r7, r0, lr, lsl #12
    c138:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c13c:	2dce3100 	stfcse	f3, [lr]
    c140:	47020000 	strmi	r0, [r2, -r0]
    c144:	00340806 	eorseq	r0, r4, r6, lsl #16
    c148:	00003408 	andeq	r3, r0, r8, lsl #8
    c14c:	999c0100 	ldmibls	ip, {r8}
    c150:	33000015 	movwcc	r0, #21
    c154:	000021bb 			; <UNDEFINED> instruction: 0x000021bb
    c158:	760e4902 	strvc	r4, [lr], -r2, lsl #18
    c15c:	02000000 	andeq	r0, r0, #0
    c160:	31007491 			; <UNDEFINED> instruction: 0x31007491
    c164:	00002e97 	muleq	r0, r7, lr
    c168:	b8063d02 	stmdalt	r6, {r1, r8, sl, fp, ip, sp}
    c16c:	50080033 	andpl	r0, r8, r3, lsr r0
    c170:	01000000 	mrseq	r0, (UNDEF: 0)
    c174:	0015bd9c 	mulseq	r5, ip, sp
    c178:	00693400 	rsbeq	r3, r9, r0, lsl #8
    c17c:	9a093f02 	bls	25bd8c <_Min_Stack_Size+0x25b98c>
    c180:	02000000 	andeq	r0, r0, #0
    c184:	3a007491 	bcc	293d0 <_Min_Stack_Size+0x28fd0>
    c188:	00002c45 	andeq	r2, r0, r5, asr #24
    c18c:	6a0a3502 	bvs	29959c <_Min_Stack_Size+0x29919c>
    c190:	7c000010 	stcvc	0, cr0, [r0], {16}
    c194:	3c080033 	stccc	0, cr0, [r8], {51}	; 0x33
    c198:	01000000 	mrseq	r0, (UNDEF: 0)
    c19c:	0015f69c 	mulseq	r5, ip, r6
    c1a0:	2ce63300 	stclcs	3, cr3, [r6]
    c1a4:	37020000 	strcc	r0, [r2, -r0]
    c1a8:	0000760e 	andeq	r7, r0, lr, lsl #12
    c1ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c1b0:	002de633 	eoreq	lr, sp, r3, lsr r6
    c1b4:	0e390200 	cdpeq	2, 3, cr0, cr9, cr0, {0}
    c1b8:	00001459 	andeq	r1, r0, r9, asr r4
    c1bc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    c1c0:	002cc831 	eoreq	ip, ip, r1, lsr r8
    c1c4:	06170200 	ldreq	r0, [r7], -r0, lsl #4
    c1c8:	08003248 	stmdaeq	r0, {r3, r6, r9, ip, sp}
    c1cc:	00000134 	andeq	r0, r0, r4, lsr r1
    c1d0:	16589c01 	ldrbne	r9, [r8], -r1, lsl #24
    c1d4:	5e320000 	cdppl	0, 3, cr0, cr2, cr0, {0}
    c1d8:	0200002d 	andeq	r0, r0, #45	; 0x2d
    c1dc:	106a1b17 	rsbne	r1, sl, r7, lsl fp
    c1e0:	91020000 	mrsls	r0, (UNDEF: 2)
    c1e4:	2dc83274 	sfmcs	f3, 2, [r8, #464]	; 0x1d0
    c1e8:	17020000 	strne	r0, [r2, -r0]
    c1ec:	00112d2e 	andseq	r2, r1, lr, lsr #26
    c1f0:	70910200 	addsvc	r0, r1, r0, lsl #4
    c1f4:	002e9132 	eoreq	r9, lr, r2, lsr r1
    c1f8:	3b170200 	blcc	5cca00 <_Min_Stack_Size+0x5cc600>
    c1fc:	0000065c 	andeq	r0, r0, ip, asr r6
    c200:	326c9102 	rsbcc	r9, ip, #-2147483648	; 0x80000000
    c204:	00002cee 	andeq	r2, r0, lr, ror #25
    c208:	764b1702 	strbvc	r1, [fp], -r2, lsl #14
    c20c:	02000000 	andeq	r0, r0, #0
    c210:	79326891 	ldmdbvc	r2!, {r0, r4, r7, fp, sp, lr}
    c214:	02000031 	andeq	r0, r0, #49	; 0x31
    c218:	16585f17 	uadd16ne	r5, r8, r7
    c21c:	91020000 	mrsls	r0, (UNDEF: 2)
    c220:	041d0000 	ldreq	r0, [sp], #-0
    c224:	00000076 	andeq	r0, r0, r6, ror r0
    c228:	001b9e3b 	andseq	r9, fp, fp, lsr lr
    c22c:	07e60100 	strbeq	r0, [r6, r0, lsl #2]!
    c230:	0000761a 	andeq	r7, r0, sl, lsl r6
    c234:	00320400 	eorseq	r0, r2, r0, lsl #8
    c238:	00004408 	andeq	r4, r0, r8, lsl #8
    c23c:	8a9c0100 	bhi	fe70c644 <__StackLimit+0xde6ec644>
    c240:	2e000016 	mcrcs	0, 0, r0, cr0, cr6, {0}
    c244:	00002b30 	andeq	r2, r0, r0, lsr fp
    c248:	3207e601 	andcc	lr, r7, #1048576	; 0x100000
    c24c:	00000076 	andeq	r0, r0, r6, ror r0
    c250:	00749102 	rsbseq	r9, r4, r2, lsl #2
    c254:	0017ae3c 	andseq	sl, r7, ip, lsr lr
    c258:	07180100 	ldreq	r0, [r8, -r0, lsl #2]
    c25c:	0031b016 	eorseq	fp, r1, r6, lsl r0
    c260:	00005408 	andeq	r5, r0, r8, lsl #8
    c264:	2e9c0100 	fmlcse	f0, f4, f0
    c268:	000012c9 	andeq	r1, r0, r9, asr #5
    c26c:	33071801 	movwcc	r1, #30721	; 0x7801
    c270:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    c274:	2e779102 	expcss	f1, f2
    c278:	00002cee 	andeq	r2, r0, lr, ror #25
    c27c:	42071801 	andmi	r1, r7, #65536	; 0x10000
    c280:	00000076 	andeq	r0, r0, r6, ror r0
    c284:	00709102 	rsbseq	r9, r0, r2, lsl #2
    c288:	0001a100 	andeq	sl, r1, r0, lsl #2
    c28c:	2f000400 	svccs	0x00000400
    c290:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    c294:	00044701 	andeq	r4, r4, r1, lsl #14
    c298:	2ed70c00 	cdpcs	12, 13, cr0, cr7, cr0, {0}
    c29c:	01be0000 			; <UNDEFINED> instruction: 0x01be0000
    c2a0:	07c00000 	strbeq	r0, [r0, r0]
    c2a4:	00000000 	andeq	r0, r0, r0
    c2a8:	5c9d0000 	ldcpl	0, cr0, [sp], {0}
    c2ac:	01020000 	mrseq	r0, (UNDEF: 2)
    c2b0:	0007a906 	andeq	sl, r7, r6, lsl #18
    c2b4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    c2b8:	00000000 	andeq	r0, r0, r0
    c2bc:	b5050402 	strlt	r0, [r5, #-1026]	; 0xfffffbfe
    c2c0:	02000001 	andeq	r0, r0, #1
    c2c4:	01b00508 	lslseq	r0, r8, #10
    c2c8:	ca030000 	bgt	cc2d0 <_Min_Stack_Size+0xcbed0>
    c2cc:	0200002a 	andeq	r0, r0, #42	; 0x2a
    c2d0:	0052182e 	subseq	r1, r2, lr, lsr #16
    c2d4:	41040000 	mrsmi	r0, (UNDEF: 4)
    c2d8:	02000000 	andeq	r0, r0, #0
    c2dc:	07a70801 	streq	r0, [r7, r1, lsl #16]!
    c2e0:	02020000 	andeq	r0, r2, #0
    c2e4:	00037707 	andeq	r7, r3, r7, lsl #14
    c2e8:	2b6e0300 	blcs	1b8cef0 <_Min_Stack_Size+0x1b8caf0>
    c2ec:	34020000 	strcc	r0, [r2], #-0
    c2f0:	00006c19 	andeq	r6, r0, r9, lsl ip
    c2f4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c2f8:	000000a5 	andeq	r0, r0, r5, lsr #1
    c2fc:	a0070802 	andge	r0, r7, r2, lsl #16
    c300:	05000000 	streq	r0, [r0, #-0]
    c304:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c308:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c30c:	0000aa07 	andeq	sl, r0, r7, lsl #20
    c310:	03040600 	movweq	r0, #17920	; 0x4600
    c314:	009f0906 	addseq	r0, pc, r6, lsl #18
    c318:	a2070000 	andge	r0, r7, #0
    c31c:	0300002c 	movweq	r0, #44	; 0x2c
    c320:	00600b08 	rsbeq	r0, r0, r8, lsl #22
    c324:	00000000 	andeq	r0, r0, r0
    c328:	002c2503 	eoreq	r2, ip, r3, lsl #10
    c32c:	03090300 	movweq	r0, #37632	; 0x9300
    c330:	00000088 	andeq	r0, r0, r8, lsl #1
    c334:	002eb708 	eoreq	fp, lr, r8, lsl #14
    c338:	0a150100 	beq	54c740 <_Min_Stack_Size+0x54c340>
    c33c:	00000060 	andeq	r0, r0, r0, rrx
    c340:	08003a04 	stmdaeq	r0, {r2, r9, fp, ip, sp}
    c344:	00000084 	andeq	r0, r0, r4, lsl #1
    c348:	00e79c01 	rsceq	r9, r7, r1, lsl #24
    c34c:	a2090000 	andge	r0, r9, #0
    c350:	0100002c 	tsteq	r0, ip, lsr #32
    c354:	00e72515 	rsceq	r2, r7, r5, lsl r5
    c358:	91020000 	mrsls	r0, (UNDEF: 2)
    c35c:	2f1d0a74 	svccs	0x001d0a74
    c360:	17010000 	strne	r0, [r1, -r0]
    c364:	0000fd17 	andeq	pc, r0, r7, lsl sp	; <UNPREDICTABLE>
    c368:	a8030500 	stmdage	r3, {r8, sl}
    c36c:	0008003f 	andeq	r0, r8, pc, lsr r0
    c370:	009f040b 	addseq	r0, pc, fp, lsl #8
    c374:	4d0c0000 	stcmi	0, cr0, [ip, #-0]
    c378:	fd000000 	stc2	0, cr0, [r0, #-0]
    c37c:	0d000000 	stceq	0, cr0, [r0, #-0]
    c380:	00000081 	andeq	r0, r0, r1, lsl #1
    c384:	ed0400ff 	stc	0, cr0, [r4, #-1020]	; 0xfffffc04
    c388:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    c38c:	00002f2e 	andeq	r2, r0, lr, lsr #30
    c390:	dc061001 	stcle	0, cr1, [r6], {1}
    c394:	28080039 	stmdacs	r8, {r0, r3, r4, r5}
    c398:	01000000 	mrseq	r0, (UNDEF: 0)
    c39c:	0001379c 	muleq	r1, ip, r7
    c3a0:	2ca20900 			; <UNDEFINED> instruction: 0x2ca20900
    c3a4:	10010000 	andne	r0, r1, r0
    c3a8:	0000e721 	andeq	lr, r0, r1, lsr #14
    c3ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c3b0:	736f700f 	cmnvc	pc, #15
    c3b4:	32100100 	andscc	r0, r0, #0, 2
    c3b8:	00000060 	andeq	r0, r0, r0, rrx
    c3bc:	00709102 	rsbseq	r9, r0, r2, lsl #2
    c3c0:	002ec80e 	eoreq	ip, lr, lr, lsl #16
    c3c4:	060c0100 	streq	r0, [ip], -r0, lsl #2
    c3c8:	080039b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, fp, ip, sp}
    c3cc:	00000026 	andeq	r0, r0, r6, lsr #32
    c3d0:	016c9c01 	cmneq	ip, r1, lsl #24
    c3d4:	a2090000 	andge	r0, r9, #0
    c3d8:	0100002c 	tsteq	r0, ip, lsr #32
    c3dc:	00e71f0c 	rsceq	r1, r7, ip, lsl #30
    c3e0:	91020000 	mrsls	r0, (UNDEF: 2)
    c3e4:	6f700f74 	svcvs	0x00700f74
    c3e8:	0c010073 	stceq	0, cr0, [r1], {115}	; 0x73
    c3ec:	00006030 	andeq	r6, r0, r0, lsr r0
    c3f0:	70910200 	addsvc	r0, r1, r0, lsl #4
    c3f4:	2f0c1000 	svccs	0x000c1000
    c3f8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    c3fc:	0000600a 	andeq	r6, r0, sl
    c400:	0039a800 	eorseq	sl, r9, r0, lsl #16
    c404:	00000e08 	andeq	r0, r0, r8, lsl #28
    c408:	119c0100 	orrsne	r0, ip, r0, lsl #2
    c40c:	00002f00 	andeq	r2, r0, r0, lsl #30
    c410:	90060301 	andls	r0, r6, r1, lsl #6
    c414:	18080039 	stmdane	r8, {r0, r3, r4, r5}
    c418:	01000000 	mrseq	r0, (UNDEF: 0)
    c41c:	2ca2099c 			; <UNDEFINED> instruction: 0x2ca2099c
    c420:	03010000 	movweq	r0, #4096	; 0x1000
    c424:	0000e71c 	andeq	lr, r0, ip, lsl r7
    c428:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c42c:	03c10000 	biceq	r0, r1, #0
    c430:	00040000 	andeq	r0, r4, r0
    c434:	0000254d 	andeq	r2, r0, sp, asr #10
    c438:	04470104 	strbeq	r0, [r7], #-260	; 0xfffffefc
    c43c:	5c0c0000 	stcpl	0, cr0, [ip], {-0}
    c440:	be00002f 	cdplt	0, 0, cr0, cr0, cr15, {1}
    c444:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
    c448:	00000007 	andeq	r0, r0, r7
    c44c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    c450:	0200005d 	andeq	r0, r0, #93	; 0x5d
    c454:	07a90601 	streq	r0, [r9, r1, lsl #12]!
    c458:	02020000 	andeq	r0, r2, #0
    c45c:	00000005 	andeq	r0, r0, r5
    c460:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    c464:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
    c468:	b0050802 	andlt	r0, r5, r2, lsl #16
    c46c:	02000001 	andeq	r0, r0, #1
    c470:	07a70801 	streq	r0, [r7, r1, lsl #16]!
    c474:	02020000 	andeq	r0, r2, #0
    c478:	00037707 	andeq	r7, r3, r7, lsl #14
    c47c:	2b6e0300 	blcs	1b8d084 <_Min_Stack_Size+0x1b8cc84>
    c480:	34030000 	strcc	r0, [r3], #-0
    c484:	00005b19 	andeq	r5, r0, r9, lsl fp
    c488:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c48c:	000000a5 	andeq	r0, r0, r5, lsr #1
    c490:	a0070802 	andge	r0, r7, r2, lsl #16
    c494:	04000000 	streq	r0, [r0], #-0
    c498:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c49c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c4a0:	0000aa07 	andeq	sl, r0, r7, lsl #20
    c4a4:	2b810500 	blcs	fe04d8ac <__StackLimit+0xde02d8ac>
    c4a8:	02080000 	andeq	r0, r8, #0
    c4ac:	009f1004 	addseq	r1, pc, r4
    c4b0:	20060000 	andcs	r0, r6, r0
    c4b4:	0200002b 	andeq	r0, r0, #43	; 0x2b
    c4b8:	009f1405 	addseq	r1, pc, r5, lsl #8
    c4bc:	06000000 	streq	r0, [r0], -r0
    c4c0:	00002b77 	andeq	r2, r0, r7, ror fp
    c4c4:	9f140602 	svcls	0x00140602
    c4c8:	04000000 	streq	r0, [r0], #-0
    c4cc:	77040700 	strvc	r0, [r4, -r0, lsl #14]
    c4d0:	03000000 	movweq	r0, #0
    c4d4:	00002b88 	andeq	r2, r0, r8, lsl #23
    c4d8:	77030702 	strvc	r0, [r3, -r2, lsl #14]
    c4dc:	05000000 	streq	r0, [r0, #-0]
    c4e0:	00002d63 	andeq	r2, r0, r3, ror #26
    c4e4:	1009020c 	andne	r0, r9, ip, lsl #4
    c4e8:	000000d9 	ldrdeq	r0, [r0], -r9
    c4ec:	002de106 	eoreq	lr, sp, r6, lsl #2
    c4f0:	0c0a0200 	sfmeq	f0, 4, [sl], {-0}
    c4f4:	000000a5 	andeq	r0, r0, r5, lsr #1
    c4f8:	2d370600 	ldccs	6, cr0, [r7, #-0]
    c4fc:	0b020000 	bleq	8c504 <_Min_Stack_Size+0x8c104>
    c500:	00004f0e 	andeq	r4, r0, lr, lsl #30
    c504:	03000800 	movweq	r0, #2048	; 0x800
    c508:	00002d42 	andeq	r2, r0, r2, asr #26
    c50c:	b1030c02 	tstlt	r3, r2, lsl #24
    c510:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    c514:	00002fed 	andeq	r2, r0, sp, ror #31
    c518:	80067a01 	andhi	r7, r6, r1, lsl #20
    c51c:	3208003b 	andcc	r0, r8, #59	; 0x3b
    c520:	01000000 	mrseq	r0, (UNDEF: 0)
    c524:	00011a9c 	muleq	r1, ip, sl
    c528:	293f0900 	ldmdbcs	pc!, {r8, fp}	; <UNPREDICTABLE>
    c52c:	7a010000 	bvc	4c534 <_Min_Stack_Size+0x4c134>
    c530:	00011a1c 	andeq	r1, r1, ip, lsl sl
    c534:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c538:	002de609 	eoreq	lr, sp, r9, lsl #12
    c53c:	2b7a0100 	blcs	1e8c944 <_Min_Stack_Size+0x1e8c544>
    c540:	00000120 	andeq	r0, r0, r0, lsr #2
    c544:	00709102 	rsbseq	r9, r0, r2, lsl #2
    c548:	00d90407 	sbcseq	r0, r9, r7, lsl #8
    c54c:	04070000 	streq	r0, [r7], #-0
    c550:	000000a5 	andeq	r0, r0, r5, lsr #1
    c554:	002fc90a 	eoreq	ip, pc, sl, lsl #18
    c558:	0a700100 	beq	1c0c960 <_Min_Stack_Size+0x1c0c560>
    c55c:	00000120 	andeq	r0, r0, r0, lsr #2
    c560:	00000000 	andeq	r0, r0, r0
    c564:	0000003e 	andeq	r0, r0, lr, lsr r0
    c568:	016e9c01 	cmneq	lr, r1, lsl #24
    c56c:	3f090000 	svccc	0x00090000
    c570:	01000029 	tsteq	r0, r9, lsr #32
    c574:	011a2670 	tsteq	sl, r0, ror r6
    c578:	91020000 	mrsls	r0, (UNDEF: 2)
    c57c:	30270974 	eorcc	r0, r7, r4, ror r9
    c580:	70010000 	andvc	r0, r1, r0
    c584:	00012035 	andeq	r2, r1, r5, lsr r0
    c588:	70910200 	addsvc	r0, r1, r0, lsl #4
    c58c:	002f4d09 	eoreq	r4, pc, r9, lsl #26
    c590:	4a700100 	bmi	1c0c998 <_Min_Stack_Size+0x1c0c598>
    c594:	00000120 	andeq	r0, r0, r0, lsr #2
    c598:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    c59c:	002fdb0a 	eoreq	sp, pc, sl, lsl #22
    c5a0:	0a620100 	beq	188c9a8 <_Min_Stack_Size+0x188c5a8>
    c5a4:	00000120 	andeq	r0, r0, r0, lsr #2
    c5a8:	08003b40 	stmdaeq	r0, {r6, r8, r9, fp, ip, sp}
    c5ac:	00000040 	andeq	r0, r0, r0, asr #32
    c5b0:	01a79c01 			; <UNDEFINED> instruction: 0x01a79c01
    c5b4:	3f090000 	svccc	0x00090000
    c5b8:	01000029 	tsteq	r0, r9, lsr #32
    c5bc:	011a2662 	tsteq	sl, r2, ror #12
    c5c0:	91020000 	mrsls	r0, (UNDEF: 2)
    c5c4:	2de60b6c 			; <UNDEFINED> instruction: 0x2de60b6c
    c5c8:	64010000 	strvs	r0, [r1], #-0
    c5cc:	0001200e 	andeq	r2, r1, lr
    c5d0:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    c5d4:	2f3f0800 	svccs	0x003f0800
    c5d8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    c5dc:	003b0606 	eorseq	r0, fp, r6, lsl #12
    c5e0:	00003a08 	andeq	r3, r0, r8, lsl #20
    c5e4:	dc9c0100 	ldfles	f0, [ip], {0}
    c5e8:	09000001 	stmdbeq	r0, {r0}
    c5ec:	0000293f 	andeq	r2, r0, pc, lsr r9
    c5f0:	1a1e5901 	bne	7a29fc <_Min_Stack_Size+0x7a25fc>
    c5f4:	02000001 	andeq	r0, r0, #1
    c5f8:	e6097491 			; <UNDEFINED> instruction: 0xe6097491
    c5fc:	0100002d 	tsteq	r0, sp, lsr #32
    c600:	01202d59 			; <UNDEFINED> instruction: 0x01202d59
    c604:	91020000 	mrsls	r0, (UNDEF: 2)
    c608:	18080070 	stmdane	r8, {r4, r5, r6}
    c60c:	01000030 	tsteq	r0, r0, lsr r0
    c610:	00000650 	andeq	r0, r0, r0, asr r6
    c614:	003e0000 	eorseq	r0, lr, r0
    c618:	9c010000 	stcls	0, cr0, [r1], {-0}
    c61c:	00000211 	andeq	r0, r0, r1, lsl r2
    c620:	00293f09 	eoreq	r3, r9, r9, lsl #30
    c624:	1f500100 	svcne	0x00500100
    c628:	0000011a 	andeq	r0, r0, sl, lsl r1
    c62c:	09749102 	ldmdbeq	r4!, {r1, r8, ip, pc}^
    c630:	00002de6 	andeq	r2, r0, r6, ror #27
    c634:	202e5001 	eorcs	r5, lr, r1
    c638:	02000001 	andeq	r0, r0, #1
    c63c:	08007091 	stmdaeq	r0, {r0, r4, r7, ip, sp, lr}
    c640:	00002fb9 			; <UNDEFINED> instruction: 0x00002fb9
    c644:	00063b01 	andeq	r3, r6, r1, lsl #22
    c648:	54000000 	strpl	r0, [r0], #-0
    c64c:	01000000 	mrseq	r0, (UNDEF: 0)
    c650:	00026e9c 	muleq	r2, ip, lr
    c654:	293f0900 	ldmdbcs	pc!, {r8, fp}	; <UNPREDICTABLE>
    c658:	3b010000 	blcc	4c660 <_Min_Stack_Size+0x4c260>
    c65c:	00011a20 	andeq	r1, r1, r0, lsr #20
    c660:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    c664:	0006e50b 	andeq	lr, r6, fp, lsl #10
    c668:	0e3d0100 	rsfeqe	f0, f5, f0
    c66c:	0000004f 	andeq	r0, r0, pc, asr #32
    c670:	0b749102 	bleq	1d30a80 <_Min_Stack_Size+0x1d30680>
    c674:	00002b77 	andeq	r2, r0, r7, ror fp
    c678:	200d3e01 	andcs	r3, sp, r1, lsl #28
    c67c:	02000001 	andeq	r0, r0, #1
    c680:	000c7091 	muleq	ip, r1, r0
    c684:	16000000 	strne	r0, [r0], -r0
    c688:	0b000000 	bleq	c690 <_Min_Stack_Size+0xc290>
    c68c:	00002f83 	andeq	r2, r0, r3, lsl #31
    c690:	20114501 	andscs	r4, r1, r1, lsl #10
    c694:	02000001 	andeq	r0, r0, #1
    c698:	00006c91 	muleq	r0, r1, ip
    c69c:	002f9a0a 	eoreq	r9, pc, sl, lsl #20
    c6a0:	0a330100 	beq	cccaa8 <_Min_Stack_Size+0xccc6a8>
    c6a4:	00000120 	andeq	r0, r0, r0, lsr #2
    c6a8:	00000000 	andeq	r0, r0, r0
    c6ac:	00000026 	andeq	r0, r0, r6, lsr #32
    c6b0:	02a79c01 	adceq	r9, r7, #256	; 0x100
    c6b4:	3f090000 	svccc	0x00090000
    c6b8:	01000029 	tsteq	r0, r9, lsr #32
    c6bc:	011a1e33 	tsteq	sl, r3, lsr lr
    c6c0:	91020000 	mrsls	r0, (UNDEF: 2)
    c6c4:	2de60974 			; <UNDEFINED> instruction: 0x2de60974
    c6c8:	33010000 	movwcc	r0, #4096	; 0x1000
    c6cc:	0001202d 	andeq	r2, r1, sp, lsr #32
    c6d0:	70910200 	addsvc	r0, r1, r0, lsl #4
    c6d4:	2f900a00 	svccs	0x00900a00
    c6d8:	2b010000 	blcs	4c6e0 <_Min_Stack_Size+0x4c2e0>
    c6dc:	0001200a 	andeq	r2, r1, sl
    c6e0:	00000000 	andeq	r0, r0, r0
    c6e4:	00002600 	andeq	r2, r0, r0, lsl #12
    c6e8:	e09c0100 	adds	r0, ip, r0, lsl #2
    c6ec:	09000002 	stmdbeq	r0, {r1}
    c6f0:	0000293f 	andeq	r2, r0, pc, lsr r9
    c6f4:	1a1e2b01 	bne	797300 <_Min_Stack_Size+0x796f00>
    c6f8:	02000001 	andeq	r0, r0, #1
    c6fc:	e6097491 			; <UNDEFINED> instruction: 0xe6097491
    c700:	0100002d 	tsteq	r0, sp, lsr #32
    c704:	01202d2b 			; <UNDEFINED> instruction: 0x01202d2b
    c708:	91020000 	mrsls	r0, (UNDEF: 2)
    c70c:	f90a0070 			; <UNDEFINED> instruction: 0xf90a0070
    c710:	0100002f 	tsteq	r0, pc, lsr #32
    c714:	004f0a20 	subeq	r0, pc, r0, lsr #20
    c718:	00000000 	andeq	r0, r0, r0
    c71c:	00260000 	eoreq	r0, r6, r0
    c720:	9c010000 	stcls	0, cr0, [r1], {-0}
    c724:	00000319 	andeq	r0, r0, r9, lsl r3
    c728:	00293f09 	eoreq	r3, r9, r9, lsl #30
    c72c:	1e200100 	sufnes	f0, f0, f0
    c730:	0000011a 	andeq	r0, r0, sl, lsl r1
    c734:	0b6c9102 	bleq	1b30b44 <_Min_Stack_Size+0x1b30744>
    c738:	00002de6 	andeq	r2, r0, r6, ror #27
    c73c:	200d2201 	andcs	r2, sp, r1, lsl #4
    c740:	02000001 	andeq	r0, r0, #1
    c744:	0a007491 	beq	29990 <_Min_Stack_Size+0x29590>
    c748:	00002fa4 	andeq	r2, r0, r4, lsr #31
    c74c:	4f0a1601 	svcmi	0x000a1601
    c750:	e0000000 	and	r0, r0, r0
    c754:	2608003a 			; <UNDEFINED> instruction: 0x2608003a
    c758:	01000000 	mrseq	r0, (UNDEF: 0)
    c75c:	0003529c 	muleq	r3, ip, r2
    c760:	293f0900 	ldmdbcs	pc!, {r8, fp}	; <UNPREDICTABLE>
    c764:	16010000 	strne	r0, [r1], -r0
    c768:	00011a1f 	andeq	r1, r1, pc, lsl sl
    c76c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    c770:	002de60b 	eoreq	lr, sp, fp, lsl #12
    c774:	0d180100 	ldfeqs	f0, [r8, #-0]
    c778:	00000120 	andeq	r0, r0, r0, lsr #2
    c77c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    c780:	00300d0a 	eorseq	r0, r0, sl, lsl #26
    c784:	0a110100 	beq	44cb8c <_Min_Stack_Size+0x44c78c>
    c788:	0000004f 	andeq	r0, r0, pc, asr #32
    c78c:	08003aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp, ip, sp}
    c790:	00000016 	andeq	r0, r0, r6, lsl r0
    c794:	037c9c01 	cmneq	ip, #256	; 0x100
    c798:	3f090000 	svccc	0x00090000
    c79c:	01000029 	tsteq	r0, r9, lsr #32
    c7a0:	011a1f11 	tsteq	sl, r1, lsl pc
    c7a4:	91020000 	mrsls	r0, (UNDEF: 2)
    c7a8:	af080074 	svcge	0x00080074
    c7ac:	0100002f 	tsteq	r0, pc, lsr #32
    c7b0:	3aa6060a 	bcc	fe98dfe0 <__StackLimit+0xde96dfe0>
    c7b4:	00240800 	eoreq	r0, r4, r0, lsl #16
    c7b8:	9c010000 	stcls	0, cr0, [r1], {-0}
    c7bc:	000003a2 	andeq	r0, r0, r2, lsr #7
    c7c0:	00293f09 	eoreq	r3, r9, r9, lsl #30
    c7c4:	1a0a0100 	bne	28cbcc <_Min_Stack_Size+0x28c7cc>
    c7c8:	0000011a 	andeq	r0, r0, sl, lsl r1
    c7cc:	00749102 	rsbseq	r9, r4, r2, lsl #2
    c7d0:	0030030d 	eorseq	r0, r0, sp, lsl #6
    c7d4:	06050100 	streq	r0, [r5], -r0, lsl #2
    c7d8:	08003a88 	stmdaeq	r0, {r3, r7, r9, fp, ip, sp}
    c7dc:	0000001e 	andeq	r0, r0, lr, lsl r0
    c7e0:	e6099c01 	str	r9, [r9], -r1, lsl #24
    c7e4:	0100002d 	tsteq	r0, sp, lsr #32
    c7e8:	01201a05 			; <UNDEFINED> instruction: 0x01201a05
    c7ec:	91020000 	mrsls	r0, (UNDEF: 2)
    c7f0:	6f000074 	svcvs	0x00000074
    c7f4:	04000012 	streq	r0, [r0], #-18	; 0xffffffee
    c7f8:	00263000 	eoreq	r3, r6, r0
    c7fc:	47010400 	strmi	r0, [r1, -r0, lsl #8]
    c800:	0c000004 	stceq	0, cr0, [r0], {4}
    c804:	000030b7 	strheq	r3, [r0], -r7
    c808:	000001be 			; <UNDEFINED> instruction: 0x000001be
    c80c:	00000860 	andeq	r0, r0, r0, ror #16
    c810:	00000000 	andeq	r0, r0, r0
    c814:	000060a4 	andeq	r6, r0, r4, lsr #1
    c818:	a9060102 	stmdbge	r6, {r1, r8}
    c81c:	02000007 	andeq	r0, r0, #7
    c820:	00000502 	andeq	r0, r0, r2, lsl #10
    c824:	12030000 	andne	r0, r3, #0
    c828:	0300002c 	movweq	r0, #44	; 0x2c
    c82c:	00441828 	subeq	r1, r4, r8, lsr #16
    c830:	33040000 	movwcc	r0, #16384	; 0x4000
    c834:	02000000 	andeq	r0, r0, #0
    c838:	01b50504 			; <UNDEFINED> instruction: 0x01b50504
    c83c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c840:	0001b005 	andeq	fp, r1, r5
    c844:	2aca0300 	bcs	ff28d44c <__StackLimit+0xdf26d44c>
    c848:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    c84c:	00006818 	andeq	r6, r0, r8, lsl r8
    c850:	00520400 	subseq	r0, r2, r0, lsl #8
    c854:	52050000 	andpl	r0, r5, #0
    c858:	02000000 	andeq	r0, r0, #0
    c85c:	07a70801 	streq	r0, [r7, r1, lsl #16]!
    c860:	02020000 	andeq	r0, r2, #0
    c864:	00037707 	andeq	r7, r3, r7, lsl #14
    c868:	2b6e0300 	blcs	1b8d470 <_Min_Stack_Size+0x1b8d070>
    c86c:	34030000 	strcc	r0, [r3], #-0
    c870:	00009119 	andeq	r9, r0, r9, lsl r1
    c874:	00760400 	rsbseq	r0, r6, r0, lsl #8
    c878:	82050000 	andhi	r0, r5, #0
    c87c:	05000000 	streq	r0, [r0, #-0]
    c880:	00000076 	andeq	r0, r0, r6, ror r0
    c884:	a5070402 	strge	r0, [r7, #-1026]	; 0xfffffbfe
    c888:	02000000 	andeq	r0, r0, #0
    c88c:	00a00708 	adceq	r0, r0, r8, lsl #14
    c890:	04060000 	streq	r0, [r6], #-0
    c894:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    c898:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c89c:	000000aa 	andeq	r0, r0, sl, lsr #1
    c8a0:	19040802 	stmdbne	r4, {r1, fp}
    c8a4:	07000007 	streq	r0, [r0, -r7]
    c8a8:	000003e0 	andeq	r0, r0, r0, ror #7
    c8ac:	17016504 	strne	r6, [r1, -r4, lsl #10]
    c8b0:	000000a6 	andeq	r0, r0, r6, lsr #1
    c8b4:	00056203 	andeq	r6, r5, r3, lsl #4
    c8b8:	0e2e0500 	cfsh64eq	mvdx0, mvdx14, #0
    c8bc:	00000044 	andeq	r0, r0, r4, asr #32
    c8c0:	0006fb03 	andeq	pc, r6, r3, lsl #22
    c8c4:	0e740500 	cdpeq	5, 7, cr0, cr4, cr0, {0}
    c8c8:	00000044 	andeq	r0, r0, r4, asr #32
    c8cc:	a5050408 	strge	r0, [r5, #-1032]	; 0xfffffbf8
    c8d0:	0000fb03 	andeq	pc, r0, r3, lsl #22
    c8d4:	03da0900 	bicseq	r0, sl, #0, 18
    c8d8:	a7050000 	strge	r0, [r5, -r0]
    c8dc:	0000b40c 	andeq	fp, r0, ip, lsl #8
    c8e0:	02ec0900 	rsceq	r0, ip, #0, 18
    c8e4:	a8050000 	stmdage	r5, {}	; <UNPREDICTABLE>
    c8e8:	0000fb13 	andeq	pc, r0, r3, lsl fp	; <UNPREDICTABLE>
    c8ec:	680a0000 	stmdavs	sl, {}	; <UNPREDICTABLE>
    c8f0:	0b000000 	bleq	c8f8 <_Min_Stack_Size+0xc4f8>
    c8f4:	0b000001 	bleq	c900 <_Min_Stack_Size+0xc500>
    c8f8:	000000a6 	andeq	r0, r0, r6, lsr #1
    c8fc:	080c0003 	stmdaeq	ip, {r0, r1}
    c900:	2f09a205 	svccs	0x0009a205
    c904:	0d000001 	stceq	0, cr0, [r0, #-4]
    c908:	000006e3 	andeq	r0, r0, r3, ror #13
    c90c:	9f07a405 	svcls	0x0007a405
    c910:	00000000 	andeq	r0, r0, r0
    c914:	00080d0d 	andeq	r0, r8, sp, lsl #26
    c918:	05a90500 	streq	r0, [r9, #1280]!	; 0x500
    c91c:	000000d9 	ldrdeq	r0, [r0], -r9
    c920:	6d030004 	stcvs	0, cr0, [r3, #-16]
    c924:	05000006 	streq	r0, [r0, #-6]
    c928:	010b03aa 	smlatbeq	fp, sl, r3, r0
    c92c:	040e0000 	streq	r0, [lr], #-0
    c930:	0007c303 	andeq	ip, r7, r3, lsl #6
    c934:	19160600 	ldmdbne	r6, {r9, sl}
    c938:	00000091 	muleq	r0, r1, r0
    c93c:	0005cb03 	andeq	ip, r5, r3, lsl #22
    c940:	0d0c0700 	stceq	7, cr0, [ip, #-0]
    c944:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c948:	00085903 	andeq	r5, r8, r3, lsl #18
    c94c:	1b230600 	blne	8ce154 <_Min_Stack_Size+0x8cdd54>
    c950:	00000149 	andeq	r0, r0, r9, asr #2
    c954:	00029b0f 	andeq	r9, r2, pc, lsl #22
    c958:	34061800 	strcc	r1, [r6], #-2048	; 0xfffff800
    c95c:	0001bb08 	andeq	fp, r1, r8, lsl #22
    c960:	067d0d00 	ldrbteq	r0, [sp], -r0, lsl #26
    c964:	36060000 	strcc	r0, [r6], -r0
    c968:	0001bb13 	andeq	fp, r1, r3, lsl fp
    c96c:	5f100000 	svcpl	0x00100000
    c970:	3706006b 	strcc	r0, [r6, -fp, rrx]
    c974:	00009f07 	andeq	r9, r0, r7, lsl #30
    c978:	c40d0400 	strgt	r0, [sp], #-1024	; 0xfffffc00
    c97c:	06000006 	streq	r0, [r0], -r6
    c980:	009f0b37 	addseq	r0, pc, r7, lsr fp	; <UNPREDICTABLE>
    c984:	0d080000 	stceq	0, cr0, [r8, #-0]
    c988:	0000028d 	andeq	r0, r0, sp, lsl #5
    c98c:	9f143706 	svcls	0x00143706
    c990:	0c000000 	stceq	0, cr0, [r0], {-0}
    c994:	00019a0d 	andeq	r9, r1, sp, lsl #20
    c998:	1b370600 	blne	dce1a0 <_Min_Stack_Size+0xdcdda0>
    c99c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c9a0:	785f1010 	ldmdavc	pc, {r4, ip}^	; <UNPREDICTABLE>
    c9a4:	0b380600 	bleq	e0e1ac <_Min_Stack_Size+0xe0ddac>
    c9a8:	000001c1 	andeq	r0, r0, r1, asr #3
    c9ac:	04110014 	ldreq	r0, [r1], #-20	; 0xffffffec
    c9b0:	00000161 	andeq	r0, r0, r1, ror #2
    c9b4:	00013d0a 	andeq	r3, r1, sl, lsl #26
    c9b8:	0001d100 	andeq	sp, r1, r0, lsl #2
    c9bc:	00a60b00 	adceq	r0, r6, r0, lsl #22
    c9c0:	00000000 	andeq	r0, r0, r0
    c9c4:	0002d50f 	andeq	sp, r2, pc, lsl #10
    c9c8:	3c062400 	cfstrscc	mvf2, [r6], {-0}
    c9cc:	00025408 	andeq	r5, r2, r8, lsl #8
    c9d0:	01080d00 	tsteq	r8, r0, lsl #26
    c9d4:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    c9d8:	00009f09 	andeq	r9, r0, r9, lsl #30
    c9dc:	b50d0000 	strlt	r0, [sp, #-0]
    c9e0:	06000007 	streq	r0, [r0], -r7
    c9e4:	009f093f 	addseq	r0, pc, pc, lsr r9	; <UNPREDICTABLE>
    c9e8:	0d040000 	stceq	0, cr0, [r4, #-0]
    c9ec:	00000139 	andeq	r0, r0, r9, lsr r1
    c9f0:	9f094006 	svcls	0x00094006
    c9f4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    c9f8:	0008ca0d 	andeq	ip, r8, sp, lsl #20
    c9fc:	09410600 	stmdbeq	r1, {r9, sl}^
    ca00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ca04:	05380d0c 	ldreq	r0, [r8, #-3340]!	; 0xfffff2f4
    ca08:	42060000 	andmi	r0, r6, #0
    ca0c:	00009f09 	andeq	r9, r0, r9, lsl #30
    ca10:	210d1000 	mrscs	r1, (UNDEF: 13)
    ca14:	06000004 	streq	r0, [r0], -r4
    ca18:	009f0943 	addseq	r0, pc, r3, asr #18
    ca1c:	0d140000 	ldceq	0, cr0, [r4, #-0]
    ca20:	000007f6 	strdeq	r0, [r0], -r6
    ca24:	9f094406 	svcls	0x00094406
    ca28:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    ca2c:	0006400d 	andeq	r4, r6, sp
    ca30:	09450600 	stmdbeq	r5, {r9, sl}^
    ca34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ca38:	088c0d1c 	stmeq	ip, {r2, r3, r4, r8, sl, fp}
    ca3c:	46060000 	strmi	r0, [r6], -r0
    ca40:	00009f09 	andeq	r9, r0, r9, lsl #30
    ca44:	12002000 	andne	r2, r0, #0
    ca48:	00000148 	andeq	r0, r0, r8, asr #2
    ca4c:	4f060108 	svcmi	0x00060108
    ca50:	00029908 	andeq	r9, r2, r8, lsl #18
    ca54:	026d0d00 	rsbeq	r0, sp, #0, 26
    ca58:	50060000 	andpl	r0, r6, r0
    ca5c:	0002990a 	andeq	r9, r2, sl, lsl #18
    ca60:	fe0d0000 	cdp2	0, 0, cr0, cr13, cr0, {0}
    ca64:	06000005 	streq	r0, [r0], -r5
    ca68:	02990951 	addseq	r0, r9, #1327104	; 0x144000
    ca6c:	13800000 	orrne	r0, r0, #0
    ca70:	00000796 	muleq	r0, r6, r7
    ca74:	3d0a5306 	stccc	3, cr5, [sl, #-24]	; 0xffffffe8
    ca78:	00000001 	andeq	r0, r0, r1
    ca7c:	01921301 	orrseq	r1, r2, r1, lsl #6
    ca80:	56060000 	strpl	r0, [r6], -r0
    ca84:	00013d0a 	andeq	r3, r1, sl, lsl #26
    ca88:	00010400 	andeq	r0, r1, r0, lsl #8
    ca8c:	00013b0a 	andeq	r3, r1, sl, lsl #22
    ca90:	0002a900 	andeq	sl, r2, r0, lsl #18
    ca94:	00a60b00 	adceq	r0, r6, r0, lsl #22
    ca98:	001f0000 	andseq	r0, pc, r0
    ca9c:	004a7612 	subeq	r7, sl, r2, lsl r6
    caa0:	06019000 	streq	r9, [r1], -r0
    caa4:	02ec0862 	rsceq	r0, ip, #6422528	; 0x620000
    caa8:	7d0d0000 	stcvc	0, cr0, [sp, #-0]
    caac:	06000006 	streq	r0, [r0], -r6
    cab0:	02ec1263 	rsceq	r1, ip, #805306374	; 0x30000006
    cab4:	0d000000 	stceq	0, cr0, [r0, #-0]
    cab8:	0000068e 	andeq	r0, r0, lr, lsl #13
    cabc:	9f066406 	svcls	0x00066406
    cac0:	04000000 	streq	r0, [r0], #-0
    cac4:	0002880d 	andeq	r8, r2, sp, lsl #16
    cac8:	09660600 	stmdbeq	r6!, {r9, sl}^
    cacc:	000002f2 	strdeq	r0, [r0], -r2
    cad0:	01480d08 	cmpeq	r8, r8, lsl #26
    cad4:	67060000 	strvs	r0, [r6, -r0]
    cad8:	0002541e 	andeq	r5, r2, lr, lsl r4
    cadc:	11008800 	tstne	r0, r0, lsl #16
    cae0:	0002a904 	andeq	sl, r2, r4, lsl #18
    cae4:	03020a00 	movweq	r0, #10752	; 0x2a00
    cae8:	03020000 	movweq	r0, #8192	; 0x2000
    caec:	a60b0000 	strge	r0, [fp], -r0
    caf0:	1f000000 	svcne	0x00000000
    caf4:	0d041100 	stfeqs	f1, [r4, #-0]
    caf8:	05000003 	streq	r0, [r0, #-3]
    cafc:	00000302 	andeq	r0, r0, r2, lsl #6
    cb00:	064a0f14 			; <UNDEFINED> instruction: 0x064a0f14
    cb04:	06080000 	streq	r0, [r8], -r0
    cb08:	0336087a 	teqeq	r6, #7995392	; 0x7a0000
    cb0c:	330d0000 	movwcc	r0, #53248	; 0xd000
    cb10:	06000001 	streq	r0, [r0], -r1
    cb14:	0336117b 	teqeq	r6, #-1073741794	; 0xc000001e
    cb18:	0d000000 	stceq	0, cr0, [r0, #-0]
    cb1c:	0000072e 	andeq	r0, r0, lr, lsr #14
    cb20:	9f067c06 	svcls	0x00067c06
    cb24:	04000000 	streq	r0, [r0], #-0
    cb28:	68041100 	stmdavs	r4, {r8, ip}
    cb2c:	0f000000 	svceq	0x00000000
    cb30:	00000028 	andeq	r0, r0, r8, lsr #32
    cb34:	08ba0668 	ldmeq	sl!, {r3, r5, r6, r9, sl}
    cb38:	0000047f 	andeq	r0, r0, pc, ror r4
    cb3c:	00705f10 	rsbseq	r5, r0, r0, lsl pc
    cb40:	3612bb06 	ldrcc	fp, [r2], -r6, lsl #22
    cb44:	00000003 	andeq	r0, r0, r3
    cb48:	00725f10 	rsbseq	r5, r2, r0, lsl pc
    cb4c:	9f07bc06 	svcls	0x0007bc06
    cb50:	04000000 	streq	r0, [r0], #-0
    cb54:	00775f10 	rsbseq	r5, r7, r0, lsl pc
    cb58:	9f07bd06 	svcls	0x0007bd06
    cb5c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    cb60:	00018b0d 	andeq	r8, r1, sp, lsl #22
    cb64:	09be0600 	ldmibeq	lr!, {r9, sl}
    cb68:	0000002c 	andeq	r0, r0, ip, lsr #32
    cb6c:	030d0d0c 	movweq	r0, #56588	; 0xdd0c
    cb70:	bf060000 	svclt	0x00060000
    cb74:	00002c09 	andeq	r2, r0, r9, lsl #24
    cb78:	5f100e00 	svcpl	0x00100e00
    cb7c:	06006662 	streq	r6, [r0], -r2, ror #12
    cb80:	030e11c0 	movweq	r1, #57792	; 0xe1c0
    cb84:	0d100000 	ldceq	0, cr0, [r0, #-0]
    cb88:	000000b7 	strheq	r0, [r0], -r7
    cb8c:	9f07c106 	svcls	0x0007c106
    cb90:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    cb94:	0001690d 	andeq	r6, r1, sp, lsl #18
    cb98:	0ac80600 	beq	ff20e3a0 <__StackLimit+0xdf1ee3a0>
    cb9c:	0000013b 	andeq	r0, r0, fp, lsr r1
    cba0:	33bd0d1c 			; <UNDEFINED> instruction: 0x33bd0d1c
    cba4:	ca060000 	bgt	18cbac <_Min_Stack_Size+0x18c7ac>
    cba8:	0006031d 	andeq	r0, r6, sp, lsl r3
    cbac:	360d2000 	strcc	r2, [sp], -r0
    cbb0:	06000033 			; <UNDEFINED> instruction: 0x06000033
    cbb4:	062d1dcc 	strteq	r1, [sp], -ip, asr #27
    cbb8:	0d240000 	stceq	0, cr0, [r4, #-0]
    cbbc:	000006eb 	andeq	r0, r0, fp, ror #13
    cbc0:	510dcf06 	tstpl	sp, r6, lsl #30
    cbc4:	28000006 	stmdacs	r0, {r1, r2}
    cbc8:	0008a60d 	andeq	sl, r8, sp, lsl #12
    cbcc:	09d00600 	ldmibeq	r0, {r9, sl}^
    cbd0:	0000066b 	andeq	r0, r0, fp, ror #12
    cbd4:	755f102c 	ldrbvc	r1, [pc, #-44]	; cbb0 <_Min_Stack_Size+0xc7b0>
    cbd8:	d3060062 	movwle	r0, #24674	; 0x6062
    cbdc:	00030e11 	andeq	r0, r3, r1, lsl lr
    cbe0:	5f103000 	svcpl	0x00103000
    cbe4:	06007075 			; <UNDEFINED> instruction: 0x06007075
    cbe8:	033612d4 	teqeq	r6, #212, 4	; 0x4000000d
    cbec:	10380000 	eorsne	r0, r8, r0
    cbf0:	0072755f 	rsbseq	r7, r2, pc, asr r5
    cbf4:	9f07d506 	svcls	0x0007d506
    cbf8:	3c000000 	stccc	0, cr0, [r0], {-0}
    cbfc:	00012d0d 	andeq	r2, r1, sp, lsl #26
    cc00:	11d80600 	bicsne	r0, r8, r0, lsl #12
    cc04:	00000671 	andeq	r0, r0, r1, ror r6
    cc08:	08760d40 	ldmdaeq	r6!, {r6, r8, sl, fp}^
    cc0c:	d9060000 	stmdble	r6, {}	; <UNPREDICTABLE>
    cc10:	00068111 	andeq	r8, r6, r1, lsl r1
    cc14:	5f104300 	svcpl	0x00104300
    cc18:	0600626c 	streq	r6, [r0], -ip, ror #4
    cc1c:	030e11dc 	movweq	r1, #57820	; 0xe1dc
    cc20:	0d440000 	stcleq	0, cr0, [r4, #-0]
    cc24:	00000725 	andeq	r0, r0, r5, lsr #14
    cc28:	9f07df06 	svcls	0x0007df06
    cc2c:	4c000000 	stcmi	0, cr0, [r0], {-0}
    cc30:	0004380d 	andeq	r3, r4, sp, lsl #16
    cc34:	0ae00600 	beq	ff80e43c <__StackLimit+0xdf7ee43c>
    cc38:	000000c1 	andeq	r0, r0, r1, asr #1
    cc3c:	4baa0d50 	blmi	fea90184 <__StackLimit+0xdea70184>
    cc40:	e3060000 	movw	r0, #24576	; 0x6000
    cc44:	00049d12 	andeq	r9, r4, r2, lsl sp
    cc48:	f10d5400 			; <UNDEFINED> instruction: 0xf10d5400
    cc4c:	06000003 	streq	r0, [r0], -r3
    cc50:	01550ce7 	cmpeq	r5, r7, ror #25
    cc54:	0d580000 	ldcleq	0, cr0, [r8, #-0]
    cc58:	000002e3 	andeq	r0, r0, r3, ror #5
    cc5c:	2f0ee906 	svccs	0x000ee906
    cc60:	5c000001 	stcpl	0, cr0, [r0], {1}
    cc64:	0006510d 	andeq	r5, r6, sp, lsl #2
    cc68:	09ea0600 	stmibeq	sl!, {r9, sl}^
    cc6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    cc70:	9f150064 	svcls	0x00150064
    cc74:	9d000000 	stcls	0, cr0, [r0, #-0]
    cc78:	16000004 	strne	r0, [r0], -r4
    cc7c:	0000049d 	muleq	r0, sp, r4
    cc80:	00013b16 	andeq	r3, r1, r6, lsl fp
    cc84:	05f11600 	ldrbeq	r1, [r1, #1536]!	; 0x600
    cc88:	9f160000 	svcls	0x00160000
    cc8c:	00000000 	andeq	r0, r0, r0
    cc90:	04a80411 	strteq	r0, [r8], #1041	; 0x411
    cc94:	9d050000 	stcls	0, cr0, [r5, #-0]
    cc98:	17000004 	strne	r0, [r0, -r4]
    cc9c:	000006cc 	andeq	r0, r0, ip, asr #13
    cca0:	65060428 	strvs	r0, [r6, #-1064]	; 0xfffffbd8
    cca4:	05f10802 	ldrbeq	r0, [r1, #2050]!	; 0x802
    cca8:	2c180000 	ldccs	0, cr0, [r8], {-0}
    ccac:	06000006 	streq	r0, [r0], -r6
    ccb0:	9f070267 	svcls	0x00070267
    ccb4:	00000000 	andeq	r0, r0, r0
    ccb8:	00080618 	andeq	r0, r8, r8, lsl r6
    ccbc:	026c0600 	rsbeq	r0, ip, #0, 12
    ccc0:	0006dd0b 	andeq	sp, r6, fp, lsl #26
    ccc4:	ee180400 	cfmuls	mvf0, mvf8, mvf0
    ccc8:	06000007 	streq	r0, [r0], -r7
    cccc:	dd14026c 	lfmle	f0, 4, [r4, #-432]	; 0xfffffe50
    ccd0:	08000006 	stmdaeq	r0, {r1, r2}
    ccd4:	00029318 	andeq	r9, r2, r8, lsl r3
    ccd8:	026c0600 	rsbeq	r0, ip, #0, 12
    ccdc:	0006dd1e 	andeq	sp, r6, lr, lsl sp
    cce0:	89180c00 	ldmdbhi	r8, {sl, fp}
    cce4:	06000006 	streq	r0, [r0], -r6
    cce8:	9f08026e 	svcls	0x0008026e
    ccec:	10000000 	andne	r0, r0, r0
    ccf0:	00004218 	andeq	r4, r0, r8, lsl r2
    ccf4:	026f0600 	rsbeq	r0, pc, #0, 12
    ccf8:	0008dd08 	andeq	sp, r8, r8, lsl #26
    ccfc:	ab181400 	blge	611d04 <_Min_Stack_Size+0x611904>
    cd00:	06000006 	streq	r0, [r0], -r6
    cd04:	9f070272 	svcls	0x00070272
    cd08:	30000000 	andcc	r0, r0, r0
    cd0c:	00069b18 	andeq	r9, r6, r8, lsl fp
    cd10:	02730600 	rsbseq	r0, r3, #0, 12
    cd14:	0008f216 	andeq	pc, r8, r6, lsl r2	; <UNPREDICTABLE>
    cd18:	41183400 	tstmi	r8, r0, lsl #8
    cd1c:	06000005 	streq	r0, [r0], -r5
    cd20:	9f070275 	svcls	0x00070275
    cd24:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    cd28:	0007e418 	andeq	lr, r7, r8, lsl r4
    cd2c:	02770600 	rsbseq	r0, r7, #0, 12
    cd30:	0009030a 	andeq	r0, r9, sl, lsl #6
    cd34:	fd183c00 	ldc2	12, cr3, [r8, #-0]
    cd38:	06000003 	streq	r0, [r0], -r3
    cd3c:	bb13027a 	bllt	4cd72c <_Min_Stack_Size+0x4cd32c>
    cd40:	40000001 	andmi	r0, r0, r1
    cd44:	0001a618 	andeq	sl, r1, r8, lsl r6
    cd48:	027b0600 	rsbseq	r0, fp, #0, 12
    cd4c:	00009f07 	andeq	r9, r0, r7, lsl #30
    cd50:	c0184400 	andsgt	r4, r8, r0, lsl #8
    cd54:	06000008 	streq	r0, [r0], -r8
    cd58:	bb13027c 	bllt	4cd750 <_Min_Stack_Size+0x4cd350>
    cd5c:	48000001 	stmdami	r0, {r0}
    cd60:	0005a318 	andeq	sl, r5, r8, lsl r3
    cd64:	027d0600 	rsbseq	r0, sp, #0, 12
    cd68:	00090914 	andeq	r0, r9, r4, lsl r9
    cd6c:	05184c00 	ldreq	r4, [r8, #-3072]	; 0xfffff400
    cd70:	06000003 	streq	r0, [r0], -r3
    cd74:	9f070280 	svcls	0x00070280
    cd78:	50000000 	andpl	r0, r0, r0
    cd7c:	0005f618 	andeq	pc, r5, r8, lsl r6	; <UNPREDICTABLE>
    cd80:	02810600 	addeq	r0, r1, #0, 12
    cd84:	0005f109 	andeq	pc, r5, r9, lsl #2
    cd88:	1c185400 	cfldrsne	mvf5, [r8], {-0}
    cd8c:	06000006 	streq	r0, [r0], -r6
    cd90:	b80702a4 	stmdalt	r7, {r2, r5, r7, r9}
    cd94:	58000008 	stmdapl	r0, {r3}
    cd98:	004a7619 	subeq	r7, sl, r9, lsl r6
    cd9c:	02a80600 	adceq	r0, r8, #0, 12
    cda0:	0002ec13 	andeq	lr, r2, r3, lsl ip
    cda4:	19014800 	stmdbne	r1, {fp, lr}
    cda8:	0000038a 	andeq	r0, r0, sl, lsl #7
    cdac:	1202a906 	andne	sl, r2, #98304	; 0x18000
    cdb0:	000002a9 	andeq	r0, r0, r9, lsr #5
    cdb4:	3219014c 	andscc	r0, r9, #76, 2
    cdb8:	06000008 	streq	r0, [r0], -r8
    cdbc:	1a0c02ad 	bne	30d878 <_Min_Stack_Size+0x30d478>
    cdc0:	dc000009 	stcle	0, cr0, [r0], {9}
    cdc4:	01711902 	cmneq	r1, r2, lsl #18
    cdc8:	b2060000 	andlt	r0, r6, #0
    cdcc:	069e1002 	ldreq	r1, [lr], r2
    cdd0:	02e00000 	rsceq	r0, r0, #0
    cdd4:	00014319 	andeq	r4, r1, r9, lsl r3
    cdd8:	02b40600 	adcseq	r0, r4, #0, 12
    cddc:	0009260a 	andeq	r2, r9, sl, lsl #12
    cde0:	0002ec00 	andeq	lr, r2, r0, lsl #24
    cde4:	05f70411 	ldrbeq	r0, [r7, #1041]!	; 0x411
    cde8:	01020000 	mrseq	r0, (UNDEF: 2)
    cdec:	0007b008 	andeq	fp, r7, r8
    cdf0:	05f70500 	ldrbeq	r0, [r7, #1280]!	; 0x500
    cdf4:	04110000 	ldreq	r0, [r1], #-0
    cdf8:	0000047f 	andeq	r0, r0, pc, ror r4
    cdfc:	00009f15 	andeq	r9, r0, r5, lsl pc
    ce00:	00062700 	andeq	r2, r6, r0, lsl #14
    ce04:	049d1600 	ldreq	r1, [sp], #1536	; 0x600
    ce08:	3b160000 	blcc	58ce10 <_Min_Stack_Size+0x58ca10>
    ce0c:	16000001 	strne	r0, [r0], -r1
    ce10:	00000627 	andeq	r0, r0, r7, lsr #12
    ce14:	00009f16 	andeq	r9, r0, r6, lsl pc
    ce18:	04110000 	ldreq	r0, [r1], #-0
    ce1c:	000005fe 	strdeq	r0, [r0], -lr
    ce20:	06090411 			; <UNDEFINED> instruction: 0x06090411
    ce24:	cd150000 	ldcgt	0, cr0, [r5, #-0]
    ce28:	51000000 	mrspl	r0, (UNDEF: 0)
    ce2c:	16000006 	strne	r0, [r0], -r6
    ce30:	0000049d 	muleq	r0, sp, r4
    ce34:	00013b16 	andeq	r3, r1, r6, lsl fp
    ce38:	00cd1600 	sbceq	r1, sp, r0, lsl #12
    ce3c:	9f160000 	svcls	0x00160000
    ce40:	00000000 	andeq	r0, r0, r0
    ce44:	06330411 			; <UNDEFINED> instruction: 0x06330411
    ce48:	9f150000 	svcls	0x00150000
    ce4c:	6b000000 	blvs	ce54 <_Min_Stack_Size+0xca54>
    ce50:	16000006 	strne	r0, [r0], -r6
    ce54:	0000049d 	muleq	r0, sp, r4
    ce58:	00013b16 	andeq	r3, r1, r6, lsl fp
    ce5c:	04110000 	ldreq	r0, [r1], #-0
    ce60:	00000657 	andeq	r0, r0, r7, asr r6
    ce64:	0000680a 	andeq	r6, r0, sl, lsl #16
    ce68:	00068100 	andeq	r8, r6, r0, lsl #2
    ce6c:	00a60b00 	adceq	r0, r6, r0, lsl #22
    ce70:	00020000 	andeq	r0, r2, r0
    ce74:	0000680a 	andeq	r6, r0, sl, lsl #16
    ce78:	00069100 	andeq	r9, r6, r0, lsl #2
    ce7c:	00a60b00 	adceq	r0, r6, r0, lsl #22
    ce80:	00000000 	andeq	r0, r0, r0
    ce84:	00019f07 	andeq	r9, r1, r7, lsl #30
    ce88:	01240600 			; <UNDEFINED> instruction: 0x01240600
    ce8c:	00033c1a 	andeq	r3, r3, sl, lsl ip
    ce90:	08001a00 	stmdaeq	r0, {r9, fp, ip}
    ce94:	060c0000 	streq	r0, [ip], -r0
    ce98:	d7080128 	strle	r0, [r8, -r8, lsr #2]
    ce9c:	18000006 	stmdane	r0, {r1, r2}
    cea0:	0000067d 	andeq	r0, r0, sp, ror r6
    cea4:	11012a06 	tstne	r1, r6, lsl #20
    cea8:	000006d7 	ldrdeq	r0, [r0], -r7
    ceac:	03701800 	cmneq	r0, #0, 16
    ceb0:	2b060000 	blcs	18ceb8 <_Min_Stack_Size+0x18cab8>
    ceb4:	009f0701 	addseq	r0, pc, r1, lsl #14
    ceb8:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    cebc:	00000683 	andeq	r0, r0, r3, lsl #13
    cec0:	0b012c06 	bleq	57ee0 <_Min_Stack_Size+0x57ae0>
    cec4:	000006dd 	ldrdeq	r0, [r0], -sp
    cec8:	04110008 	ldreq	r0, [r1], #-8
    cecc:	0000069e 	muleq	r0, lr, r6
    ced0:	06910411 			; <UNDEFINED> instruction: 0x06910411
    ced4:	301a0000 	andscc	r0, sl, r0
    ced8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    cedc:	08014406 	stmdaeq	r1, {r1, r2, sl, lr}
    cee0:	0000071c 	andeq	r0, r0, ip, lsl r7
    cee4:	0006d318 	andeq	sp, r6, r8, lsl r3
    cee8:	01450600 	cmpeq	r5, r0, lsl #12
    ceec:	00071c12 	andeq	r1, r7, r2, lsl ip
    cef0:	f7180000 			; <UNDEFINED> instruction: 0xf7180000
    cef4:	06000003 	streq	r0, [r0], -r3
    cef8:	1c120146 	ldfnes	f0, [r2], {70}	; 0x46
    cefc:	06000007 	streq	r0, [r0], -r7
    cf00:	0007be18 	andeq	fp, r7, r8, lsl lr
    cf04:	01470600 	cmpeq	r7, r0, lsl #12
    cf08:	00006f12 	andeq	r6, r0, r2, lsl pc
    cf0c:	0a000c00 	beq	ff14 <_Min_Stack_Size+0xfb14>
    cf10:	0000006f 	andeq	r0, r0, pc, rrx
    cf14:	0000072c 	andeq	r0, r0, ip, lsr #14
    cf18:	0000a60b 	andeq	sl, r0, fp, lsl #12
    cf1c:	1b000200 	blne	d724 <_Min_Stack_Size+0xd324>
    cf20:	028506d0 	addeq	r0, r5, #208, 12	; 0xd000000
    cf24:	00084107 	andeq	r4, r8, r7, lsl #2
    cf28:	042b1800 	strteq	r1, [fp], #-2048	; 0xfffff800
    cf2c:	87060000 	strhi	r0, [r6, -r0]
    cf30:	00a61802 	adceq	r1, r6, r2, lsl #16
    cf34:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    cf38:	00000781 	andeq	r0, r0, r1, lsl #15
    cf3c:	12028806 	andne	r8, r2, #393216	; 0x60000
    cf40:	000005f1 	strdeq	r0, [r0], -r1
    cf44:	03aa1804 			; <UNDEFINED> instruction: 0x03aa1804
    cf48:	89060000 	stmdbhi	r6, {}	; <UNPREDICTABLE>
    cf4c:	08411002 	stmdaeq	r1, {r1, ip}^
    cf50:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    cf54:	00000897 	muleq	r0, r7, r8
    cf58:	17028a06 	strne	r8, [r2, -r6, lsl #20]
    cf5c:	000001d1 	ldrdeq	r0, [r0], -r1
    cf60:	02a31824 	adceq	r1, r3, #36, 16	; 0x240000
    cf64:	8b060000 	blhi	18cf6c <_Min_Stack_Size+0x18cb6c>
    cf68:	009f0f02 	addseq	r0, pc, r2, lsl #30
    cf6c:	18480000 	stmdane	r8, {}^	; <UNPREDICTABLE>
    cf70:	00000678 	andeq	r0, r0, r8, ror r6
    cf74:	2c028c06 	stccs	12, cr8, [r2], {6}
    cf78:	00000098 	muleq	r0, r8, r0
    cf7c:	08ad1850 	stmiaeq	sp!, {r4, r6, fp, ip}
    cf80:	8d060000 	stchi	0, cr0, [r6, #-0]
    cf84:	06e31a02 	strbteq	r1, [r3], r2, lsl #20
    cf88:	18580000 	ldmdane	r8, {}^	; <UNPREDICTABLE>
    cf8c:	00000633 	andeq	r0, r0, r3, lsr r6
    cf90:	16028e06 	strne	r8, [r2], -r6, lsl #28
    cf94:	0000012f 	andeq	r0, r0, pc, lsr #2
    cf98:	08b21868 	ldmeq	r2!, {r3, r5, r6, fp, ip}
    cf9c:	8f060000 	svchi	0x00060000
    cfa0:	012f1602 			; <UNDEFINED> instruction: 0x012f1602
    cfa4:	18700000 	ldmdane	r0!, {}^	; <UNPREDICTABLE>
    cfa8:	000000fa 	strdeq	r0, [r0], -sl
    cfac:	16029006 	strne	r9, [r2], -r6
    cfb0:	0000012f 	andeq	r0, r0, pc, lsr #2
    cfb4:	08151878 	ldmdaeq	r5, {r3, r4, r5, r6, fp, ip}
    cfb8:	91060000 	mrsls	r0, (UNDEF: 6)
    cfbc:	08511002 	ldmdaeq	r1, {r1, ip}^
    cfc0:	18800000 	stmne	r0, {}	; <UNPREDICTABLE>
    cfc4:	0000039e 	muleq	r0, lr, r3
    cfc8:	10029206 	andne	r9, r2, r6, lsl #4
    cfcc:	00000861 	andeq	r0, r0, r1, ror #16
    cfd0:	00651888 	rsbeq	r1, r5, r8, lsl #17
    cfd4:	93060000 	movwls	r0, #24576	; 0x6000
    cfd8:	009f0f02 	addseq	r0, pc, r2, lsl #30
    cfdc:	18a00000 	stmiane	r0!, {}	; <UNPREDICTABLE>
    cfe0:	0000025f 	andeq	r0, r0, pc, asr r2
    cfe4:	16029406 	strne	r9, [r2], -r6, lsl #8
    cfe8:	0000012f 	andeq	r0, r0, pc, lsr #2
    cfec:	00e118a4 	rsceq	r1, r1, r4, lsr #17
    cff0:	95060000 	strls	r0, [r6, #-0]
    cff4:	012f1602 			; <UNDEFINED> instruction: 0x012f1602
    cff8:	18ac0000 	stmiane	ip!, {}	; <UNPREDICTABLE>
    cffc:	00000234 	andeq	r0, r0, r4, lsr r2
    d000:	16029606 	strne	r9, [r2], -r6, lsl #12
    d004:	0000012f 	andeq	r0, r0, pc, lsr #2
    d008:	007c18b4 	ldrhteq	r1, [ip], #-132	; 0xffffff7c
    d00c:	97060000 	strls	r0, [r6, -r0]
    d010:	012f1602 			; <UNDEFINED> instruction: 0x012f1602
    d014:	18bc0000 	ldmne	ip!, {}	; <UNPREDICTABLE>
    d018:	00000582 	andeq	r0, r0, r2, lsl #11
    d01c:	16029806 	strne	r9, [r2], -r6, lsl #16
    d020:	0000012f 	andeq	r0, r0, pc, lsr #2
    d024:	062a18c4 	strteq	r1, [sl], -r4, asr #17
    d028:	99060000 	stmdbls	r6, {}	; <UNPREDICTABLE>
    d02c:	009f0802 	addseq	r0, pc, r2, lsl #16
    d030:	00cc0000 	sbceq	r0, ip, r0
    d034:	0005f70a 	andeq	pc, r5, sl, lsl #14
    d038:	00085100 	andeq	r5, r8, r0, lsl #2
    d03c:	00a60b00 	adceq	r0, r6, r0, lsl #22
    d040:	00190000 	andseq	r0, r9, r0
    d044:	0005f70a 	andeq	pc, r5, sl, lsl #14
    d048:	00086100 	andeq	r6, r8, r0, lsl #2
    d04c:	00a60b00 	adceq	r0, r6, r0, lsl #22
    d050:	00070000 	andeq	r0, r7, r0
    d054:	0005f70a 	andeq	pc, r5, sl, lsl #14
    d058:	00087100 	andeq	r7, r8, r0, lsl #2
    d05c:	00a60b00 	adceq	r0, r6, r0, lsl #22
    d060:	00170000 	andseq	r0, r7, r0
    d064:	9e06f01b 	mcrls	0, 0, pc, cr6, cr11, {0}	; <UNPREDICTABLE>
    d068:	08980702 	ldmeq	r8, {r1, r8, r9, sl}
    d06c:	40180000 	andsmi	r0, r8, r0
    d070:	06000004 	streq	r0, [r0], -r4
    d074:	981b02a1 	ldmdals	fp, {r0, r5, r7, r9}
    d078:	00000008 	andeq	r0, r0, r8
    d07c:	0002c018 	andeq	ip, r2, r8, lsl r0
    d080:	02a20600 	adceq	r0, r2, #0, 12
    d084:	0008a818 	andeq	sl, r8, r8, lsl r8
    d088:	0a007800 	beq	2b090 <_Min_Stack_Size+0x2ac90>
    d08c:	00000336 	andeq	r0, r0, r6, lsr r3
    d090:	000008a8 	andeq	r0, r0, r8, lsr #17
    d094:	0000a60b 	andeq	sl, r0, fp, lsl #12
    d098:	0a001d00 	beq	144a0 <_Min_Stack_Size+0x140a0>
    d09c:	000000a6 	andeq	r0, r0, r6, lsr #1
    d0a0:	000008b8 			; <UNDEFINED> instruction: 0x000008b8
    d0a4:	0000a60b 	andeq	sl, r0, fp, lsl #12
    d0a8:	1c001d00 	stcne	13, cr1, [r0], {-0}
    d0ac:	028306f0 	addeq	r0, r3, #240, 12	; 0xf000000
    d0b0:	0008dd03 	andeq	sp, r8, r3, lsl #26
    d0b4:	06cc1d00 	strbeq	r1, [ip], r0, lsl #26
    d0b8:	9a060000 	bls	18d0c0 <_Min_Stack_Size+0x18ccc0>
    d0bc:	072c0b02 	streq	r0, [ip, -r2, lsl #22]!
    d0c0:	7c1d0000 	ldcvc	0, cr0, [sp], {-0}
    d0c4:	06000008 	streq	r0, [r0], -r8
    d0c8:	710b02a3 	smlatbvc	fp, r3, r2, r0
    d0cc:	00000008 	andeq	r0, r0, r8
    d0d0:	0005f70a 	andeq	pc, r5, sl, lsl #14
    d0d4:	0008ed00 	andeq	lr, r8, r0, lsl #26
    d0d8:	00a60b00 	adceq	r0, r6, r0, lsl #22
    d0dc:	00180000 	andseq	r0, r8, r0
    d0e0:	0000c01e 	andeq	ip, r0, lr, lsl r0
    d0e4:	ed041100 	stfs	f1, [r4, #-0]
    d0e8:	1f000008 	svcne	0x00000008
    d0ec:	00000903 	andeq	r0, r0, r3, lsl #18
    d0f0:	00049d16 	andeq	r9, r4, r6, lsl sp
    d0f4:	04110000 	ldreq	r0, [r1], #-0
    d0f8:	000008f8 	strdeq	r0, [r0], -r8
    d0fc:	01bb0411 			; <UNDEFINED> instruction: 0x01bb0411
    d100:	1a1f0000 	bne	7cd108 <_Min_Stack_Size+0x7ccd08>
    d104:	16000009 	strne	r0, [r0], -r9
    d108:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    d10c:	20041100 	andcs	r1, r4, r0, lsl #2
    d110:	11000009 	tstne	r0, r9
    d114:	00090f04 	andeq	r0, r9, r4, lsl #30
    d118:	06910a00 	ldreq	r0, [r1], r0, lsl #20
    d11c:	09360000 	ldmdbeq	r6!, {}	; <UNPREDICTABLE>
    d120:	a60b0000 	strge	r0, [fp], -r0
    d124:	02000000 	andeq	r0, r0, #0
    d128:	07d22000 	ldrbeq	r2, [r2, r0]
    d12c:	33060000 	movwcc	r0, #24576	; 0x6000
    d130:	049d1703 	ldreq	r1, [sp], #1795	; 0x703
    d134:	cb200000 	blgt	80d13c <_Min_Stack_Size+0x80cd3c>
    d138:	06000007 	streq	r0, [r0], -r7
    d13c:	a31d0334 	tstge	sp, #52, 6	; 0xd0000000
    d140:	1b000004 	blne	d158 <_Min_Stack_Size+0xcd58>
    d144:	01b8088c 			; <UNDEFINED> instruction: 0x01b8088c
    d148:	000a8109 	andeq	r8, sl, r9, lsl #2
    d14c:	13541800 	cmpne	r4, #0, 16
    d150:	ba080000 	blt	20d158 <_Min_Stack_Size+0x20cd58>
    d154:	00871201 	addeq	r1, r7, r1, lsl #4
    d158:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    d15c:	0000134f 	andeq	r1, r0, pc, asr #6
    d160:	1201bb08 	andne	fp, r1, #8, 22	; 0x2000
    d164:	00000082 	andeq	r0, r0, r2, lsl #1
    d168:	13fe1804 	mvnsne	r1, #4, 16	; 0x40000
    d16c:	bc080000 	stclt	0, cr0, [r8], {-0}
    d170:	00821201 	addeq	r1, r2, r1, lsl #4
    d174:	18080000 	stmdane	r8, {}	; <UNPREDICTABLE>
    d178:	000013c6 	andeq	r1, r0, r6, asr #7
    d17c:	1201bd08 	andne	fp, r1, #8, 26	; 0x200
    d180:	00000082 	andeq	r0, r0, r2, lsl #1
    d184:	4353210c 	cmpmi	r3, #12, 2
    d188:	be080052 	mcrlt	0, 0, r0, cr8, cr2, {2}
    d18c:	00821201 	addeq	r1, r2, r1, lsl #4
    d190:	21100000 	tstcs	r0, r0
    d194:	00524343 	subseq	r4, r2, r3, asr #6
    d198:	1201bf08 	andne	fp, r1, #8, 30
    d19c:	00000082 	andeq	r0, r0, r2, lsl #1
    d1a0:	48532114 	ldmdami	r3, {r2, r4, r8, sp}^
    d1a4:	c0080050 	andgt	r0, r8, r0, asr r0
    d1a8:	0a911201 	beq	fe4519b4 <__StackLimit+0xde4319b4>
    d1ac:	18180000 	ldmdane	r8, {}	; <UNPREDICTABLE>
    d1b0:	000013d5 	ldrdeq	r1, [r0], -r5
    d1b4:	1201c108 	andne	ip, r1, #8, 2
    d1b8:	00000082 	andeq	r0, r0, r2, lsl #1
    d1bc:	13ad1824 			; <UNDEFINED> instruction: 0x13ad1824
    d1c0:	c2080000 	andgt	r0, r8, #0
    d1c4:	00821201 	addeq	r1, r2, r1, lsl #4
    d1c8:	18280000 	stmdane	r8!, {}	; <UNPREDICTABLE>
    d1cc:	0000140d 	andeq	r1, r0, sp, lsl #8
    d1d0:	1201c308 	andne	ip, r1, #8, 6	; 0x20000000
    d1d4:	00000082 	andeq	r0, r0, r2, lsl #1
    d1d8:	1408182c 	strne	r1, [r8], #-2092	; 0xfffff7d4
    d1dc:	c4080000 	strgt	r0, [r8], #-0
    d1e0:	00821201 	addeq	r1, r2, r1, lsl #4
    d1e4:	18300000 	ldmdane	r0!, {}	; <UNPREDICTABLE>
    d1e8:	000013f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    d1ec:	1201c508 	andne	ip, r1, #8, 10	; 0x2000000
    d1f0:	00000082 	andeq	r0, r0, r2, lsl #1
    d1f4:	13a81834 			; <UNDEFINED> instruction: 0x13a81834
    d1f8:	c6080000 	strgt	r0, [r8], -r0
    d1fc:	00821201 	addeq	r1, r2, r1, lsl #4
    d200:	18380000 	ldmdane	r8!, {}	; <UNPREDICTABLE>
    d204:	00001417 	andeq	r1, r0, r7, lsl r4
    d208:	1201c708 	andne	ip, r1, #8, 14	; 0x200000
    d20c:	00000082 	andeq	r0, r0, r2, lsl #1
    d210:	4650213c 			; <UNDEFINED> instruction: 0x4650213c
    d214:	c8080052 	stmdagt	r8, {r1, r4, r6}
    d218:	0aab1201 	beq	fead1a24 <__StackLimit+0xdeab1a24>
    d21c:	21400000 	mrscs	r0, (UNDEF: 64)
    d220:	00524644 	subseq	r4, r2, r4, asr #12
    d224:	1201c908 	andne	ip, r1, #8, 18	; 0x20000
    d228:	00000087 	andeq	r0, r0, r7, lsl #1
    d22c:	44412148 	strbmi	r2, [r1], #-328	; 0xfffffeb8
    d230:	ca080052 	bgt	20d380 <_Min_Stack_Size+0x20cf80>
    d234:	00871201 	addeq	r1, r7, r1, lsl #4
    d238:	184c0000 	stmdane	ip, {}^	; <UNPREDICTABLE>
    d23c:	00001412 	andeq	r1, r0, r2, lsl r4
    d240:	1201cb08 	andne	ip, r1, #8, 22	; 0x2000
    d244:	00000ac5 	andeq	r0, r0, r5, asr #21
    d248:	14031850 	strne	r1, [r3], #-2128	; 0xfffff7b0
    d24c:	cc080000 	stcgt	0, cr0, [r8], {-0}
    d250:	0adf1201 	beq	ff7d1a5c <__StackLimit+0xdf7b1a5c>
    d254:	18600000 	stmdane	r0!, {}^	; <UNPREDICTABLE>
    d258:	000005ad 	andeq	r0, r0, sp, lsr #11
    d25c:	1201cd08 	andne	ip, r1, #8, 26	; 0x200
    d260:	00000ae4 	andeq	r0, r0, r4, ror #21
    d264:	141c1874 	ldrne	r1, [ip], #-2164	; 0xfffff78c
    d268:	ce080000 	cdpgt	0, 0, cr0, cr8, cr0, {0}
    d26c:	00821201 	addeq	r1, r2, r1, lsl #4
    d270:	00880000 	addeq	r0, r8, r0
    d274:	00005e0a 	andeq	r5, r0, sl, lsl #28
    d278:	000a9100 	andeq	r9, sl, r0, lsl #2
    d27c:	00a60b00 	adceq	r0, r6, r0, lsl #22
    d280:	000b0000 	andeq	r0, fp, r0
    d284:	000a8104 	andeq	r8, sl, r4, lsl #2
    d288:	00870a00 	addeq	r0, r7, r0, lsl #20
    d28c:	0aa60000 	beq	fe98d294 <__StackLimit+0xde96d294>
    d290:	a60b0000 	strge	r0, [fp], -r0
    d294:	01000000 	mrseq	r0, (UNDEF: 0)
    d298:	0a960500 	beq	fe58e6a0 <__StackLimit+0xde56e6a0>
    d29c:	a6040000 	strge	r0, [r4], -r0
    d2a0:	0a00000a 	beq	d2d0 <_Min_Stack_Size+0xced0>
    d2a4:	00000087 	andeq	r0, r0, r7, lsl #1
    d2a8:	00000ac0 	andeq	r0, r0, r0, asr #21
    d2ac:	0000a60b 	andeq	sl, r0, fp, lsl #12
    d2b0:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
    d2b4:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    d2b8:	000ac004 	andeq	ip, sl, r4
    d2bc:	00870a00 	addeq	r0, r7, r0, lsl #20
    d2c0:	0ada0000 	beq	ff68d2c8 <__StackLimit+0xdf66d2c8>
    d2c4:	a60b0000 	strge	r0, [fp], -r0
    d2c8:	04000000 	streq	r0, [r0], #-0
    d2cc:	0aca0500 	beq	ff28e6d4 <__StackLimit+0xdf26e6d4>
    d2d0:	da040000 	ble	10d2d8 <_Min_Stack_Size+0x10ced8>
    d2d4:	0a00000a 	beq	d304 <_Min_Stack_Size+0xcf04>
    d2d8:	00000076 	andeq	r0, r0, r6, ror r0
    d2dc:	00000af4 	strdeq	r0, [r0], -r4
    d2e0:	0000a60b 	andeq	sl, r0, fp, lsl #12
    d2e4:	07000400 	streq	r0, [r0, -r0, lsl #8]
    d2e8:	000013cc 	andeq	r1, r0, ip, asr #7
    d2ec:	0301cf08 	movweq	ip, #7944	; 0x1f08
    d2f0:	00000950 	andeq	r0, r0, r0, asr r9
    d2f4:	9108101b 	tstls	r8, fp, lsl r0
    d2f8:	0b440905 	bleq	110f714 <_Min_Stack_Size+0x110f314>
    d2fc:	92180000 	andsls	r0, r8, #0
    d300:	08000032 	stmdaeq	r0, {r1, r4, r5}
    d304:	82120593 	andshi	r0, r2, #616562688	; 0x24c00000
    d308:	00000000 	andeq	r0, r0, r0
    d30c:	0032aa18 	eorseq	sl, r2, r8, lsl sl
    d310:	05940800 	ldreq	r0, [r4, #2048]	; 0x800
    d314:	00008212 	andeq	r8, r0, r2, lsl r2
    d318:	b0180400 	andslt	r0, r8, r0, lsl #8
    d31c:	08000032 	stmdaeq	r0, {r1, r4, r5}
    d320:	82120595 	andshi	r0, r2, #624951296	; 0x25400000
    d324:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    d328:	00306018 	eorseq	r6, r0, r8, lsl r0
    d32c:	05960800 	ldreq	r0, [r6, #2048]	; 0x800
    d330:	00008212 	andeq	r8, r0, r2, lsl r2
    d334:	07000c00 	streq	r0, [r0, -r0, lsl #24]
    d338:	000031c9 	andeq	r3, r0, r9, asr #3
    d33c:	03059708 	movweq	r9, #22280	; 0x5708
    d340:	00000b01 	andeq	r0, r0, r1, lsl #22
    d344:	0000d420 	andeq	sp, r0, r0, lsr #8
    d348:	08040800 	stmdaeq	r4, {fp}
    d34c:	00003f19 	andeq	r3, r0, r9, lsl pc
    d350:	05932200 	ldreq	r2, [r3, #512]	; 0x200
    d354:	4a090000 	bmi	24d35c <_Min_Stack_Size+0x24cf5c>
    d358:	00007611 	andeq	r7, r0, r1, lsl r6
    d35c:	00630a00 	rsbeq	r0, r3, r0, lsl #20
    d360:	0b7a0000 	bleq	1e8d368 <_Min_Stack_Size+0x1e8cf68>
    d364:	a60b0000 	strge	r0, [fp], -r0
    d368:	0f000000 	svceq	0x00000000
    d36c:	0b6a0500 	bleq	1a8e774 <_Min_Stack_Size+0x1a8e374>
    d370:	60220000 	eorvs	r0, r2, r0
    d374:	09000007 	stmdbeq	r0, {r0, r1, r2}
    d378:	0b7a174c 	bleq	1e930b0 <_Min_Stack_Size+0x1e92cb0>
    d37c:	630a0000 	movwvs	r0, #40960	; 0xa000
    d380:	9b000000 	blls	d388 <_Min_Stack_Size+0xcf88>
    d384:	0b00000b 	bleq	d3b8 <_Min_Stack_Size+0xcfb8>
    d388:	000000a6 	andeq	r0, r0, r6, lsr #1
    d38c:	8b050007 	blhi	14d3b0 <_Min_Stack_Size+0x14cfb0>
    d390:	2200000b 	andcs	r0, r0, #11
    d394:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    d398:	9b174d09 	blls	5e07c4 <_Min_Stack_Size+0x5e03c4>
    d39c:	2300000b 	movwcs	r0, #11
    d3a0:	00680107 	rsbeq	r0, r8, r7, lsl #2
    d3a4:	330a0000 	movwcc	r0, #40960	; 0xa000
    d3a8:	000bd301 	andeq	sp, fp, r1, lsl #6
    d3ac:	08462400 	stmdaeq	r6, {sl, sp}^
    d3b0:	24640000 	strbtcs	r0, [r4], #-0
    d3b4:	0000073d 	andeq	r0, r0, sp, lsr r7
    d3b8:	0356240a 	cmpeq	r6, #167772160	; 0xa000000
    d3bc:	24010000 	strcs	r0, [r1], #-0
    d3c0:	0000054c 	andeq	r0, r0, ip, asr #10
    d3c4:	14030001 	strne	r0, [r3], #-1
    d3c8:	0a000000 	beq	d3d0 <_Min_Stack_Size+0xcfd0>
    d3cc:	0bac0338 	bleq	feb0e0b4 <__StackLimit+0xdeaee0b4>
    d3d0:	fe220000 	cdp2	0, 2, cr0, cr2, cr0, {0}
    d3d4:	0a000002 	beq	d3e4 <_Min_Stack_Size+0xcfe4>
    d3d8:	008216cd 	addeq	r1, r2, sp, asr #13
    d3dc:	c0220000 	eorgt	r0, r2, r0
    d3e0:	0a000003 	beq	d3f4 <_Min_Stack_Size+0xcff4>
    d3e4:	007611ce 	rsbseq	r1, r6, lr, asr #3
    d3e8:	f3220000 	vhadd.u32	d0, d2, d0
    d3ec:	0a000002 	beq	d3fc <_Min_Stack_Size+0xcffc>
    d3f0:	0bd31ccf 	bleq	ff4d4734 <__StackLimit+0xdf4b4734>
    d3f4:	a50f0000 	strge	r0, [pc, #-0]	; d3fc <_Min_Stack_Size+0xcffc>
    d3f8:	e0000030 	and	r0, r0, r0, lsr r0
    d3fc:	d2284701 	eorle	r4, r8, #262144	; 0x40000
    d400:	1000000e 	andne	r0, r0, lr
    d404:	01003072 	tsteq	r0, r2, ror r0
    d408:	00761248 	rsbseq	r1, r6, r8, asr #4
    d40c:	10000000 	andne	r0, r0, r0
    d410:	01003172 	tsteq	r0, r2, ror r1
    d414:	00761249 	rsbseq	r1, r6, r9, asr #4
    d418:	10040000 	andne	r0, r4, r0
    d41c:	01003272 	tsteq	r0, r2, ror r2
    d420:	0076124a 	rsbseq	r1, r6, sl, asr #4
    d424:	10080000 	andne	r0, r8, r0
    d428:	01003372 	tsteq	r0, r2, ror r3
    d42c:	0076124b 	rsbseq	r1, r6, fp, asr #4
    d430:	100c0000 	andne	r0, ip, r0
    d434:	00323172 	eorseq	r3, r2, r2, ror r1
    d438:	76124c01 	ldrvc	r4, [r2], -r1, lsl #24
    d43c:	10000000 	andne	r0, r0, r0
    d440:	00726c10 	rsbseq	r6, r2, r0, lsl ip
    d444:	76124d01 	ldrvc	r4, [r2], -r1, lsl #26
    d448:	14000000 	strne	r0, [r0], #-0
    d44c:	00637010 	rsbeq	r7, r3, r0, lsl r0
    d450:	76124e01 	ldrvc	r4, [r2], -r1, lsl #28
    d454:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    d458:	00322d0d 	eorseq	r2, r2, sp, lsl #26
    d45c:	124f0100 	subne	r0, pc, #0, 2
    d460:	00000076 	andeq	r0, r0, r6, ror r0
    d464:	3472101c 	ldrbtcc	r1, [r2], #-28	; 0xffffffe4
    d468:	12500100 	subsne	r0, r0, #0, 2
    d46c:	00000076 	andeq	r0, r0, r6, ror r0
    d470:	35721020 	ldrbcc	r1, [r2, #-32]!	; 0xffffffe0
    d474:	12510100 	subsne	r0, r1, #0, 2
    d478:	00000076 	andeq	r0, r0, r6, ror r0
    d47c:	36721024 	ldrbtcc	r1, [r2], -r4, lsr #32
    d480:	12520100 	subsne	r0, r2, #0, 2
    d484:	00000076 	andeq	r0, r0, r6, ror r0
    d488:	37721028 	ldrbcc	r1, [r2, -r8, lsr #32]!
    d48c:	12530100 	subsne	r0, r3, #0, 2
    d490:	00000076 	andeq	r0, r0, r6, ror r0
    d494:	3872102c 	ldmdacc	r2!, {r2, r3, r5, ip}^
    d498:	12540100 	subsne	r0, r4, #0, 2
    d49c:	00000076 	andeq	r0, r0, r6, ror r0
    d4a0:	39721030 	ldmdbcc	r2!, {r4, r5, ip}^
    d4a4:	12550100 	subsne	r0, r5, #0, 2
    d4a8:	00000076 	andeq	r0, r0, r6, ror r0
    d4ac:	31721034 	cmncc	r2, r4, lsr r0
    d4b0:	56010030 			; <UNDEFINED> instruction: 0x56010030
    d4b4:	00007612 	andeq	r7, r0, r2, lsl r6
    d4b8:	72103800 	andsvc	r3, r0, #0, 16
    d4bc:	01003131 	tsteq	r0, r1, lsr r1
    d4c0:	00761257 	rsbseq	r1, r6, r7, asr r2
    d4c4:	103c0000 	eorsne	r0, ip, r0
    d4c8:	01007073 	tsteq	r0, r3, ror r0
    d4cc:	00761258 	rsbseq	r1, r6, r8, asr r2
    d4d0:	10400000 	subne	r0, r0, r0
    d4d4:	0070736d 	rsbseq	r7, r0, sp, ror #6
    d4d8:	76125901 	ldrvc	r5, [r2], -r1, lsl #18
    d4dc:	44000000 	strmi	r0, [r0], #-0
    d4e0:	70737010 	rsbsvc	r7, r3, r0, lsl r0
    d4e4:	125a0100 	subsne	r0, sl, #0, 2
    d4e8:	00000076 	andeq	r0, r0, r6, ror r0
    d4ec:	32390d48 	eorscc	r0, r9, #72, 26	; 0x1200
    d4f0:	5b010000 	blpl	4d4f8 <_Min_Stack_Size+0x4d0f8>
    d4f4:	00007612 	andeq	r7, r0, r2, lsl r6
    d4f8:	b60d4c00 	strlt	r4, [sp], -r0, lsl #24
    d4fc:	01000032 	tsteq	r0, r2, lsr r0
    d500:	0076125c 	rsbseq	r1, r6, ip, asr r2
    d504:	0d500000 	ldcleq	0, cr0, [r0, #-0]
    d508:	00002bb8 			; <UNDEFINED> instruction: 0x00002bb8
    d50c:	76125d01 	ldrvc	r5, [r2], -r1, lsl #26
    d510:	54000000 	strpl	r0, [r0], #-0
    d514:	0031b00d 	eorseq	fp, r1, sp
    d518:	125e0100 	subsne	r0, lr, #0, 2
    d51c:	00000076 	andeq	r0, r0, r6, ror r0
    d520:	311b0d58 	tstcc	fp, r8, asr sp
    d524:	5f010000 	svcpl	0x00010000
    d528:	00007612 	andeq	r7, r0, r2, lsl r6
    d52c:	73105c00 	tstvc	r0, #0, 24
    d530:	60010030 	andvs	r0, r1, r0, lsr r0
    d534:	00007612 	andeq	r7, r0, r2, lsl r6
    d538:	73106000 	tstvc	r0, #0
    d53c:	61010031 	tstvs	r1, r1, lsr r0
    d540:	00007612 	andeq	r7, r0, r2, lsl r6
    d544:	73106400 	tstvc	r0, #0, 8
    d548:	62010032 	andvs	r0, r1, #50	; 0x32
    d54c:	00007612 	andeq	r7, r0, r2, lsl r6
    d550:	73106800 	tstvc	r0, #0, 16
    d554:	63010033 	movwvs	r0, #4147	; 0x1033
    d558:	00007612 	andeq	r7, r0, r2, lsl r6
    d55c:	73106c00 	tstvc	r0, #0, 24
    d560:	64010034 	strvs	r0, [r1], #-52	; 0xffffffcc
    d564:	00007612 	andeq	r7, r0, r2, lsl r6
    d568:	73107000 	tstvc	r0, #0
    d56c:	65010035 	strvs	r0, [r1, #-53]	; 0xffffffcb
    d570:	00007612 	andeq	r7, r0, r2, lsl r6
    d574:	73107400 	tstvc	r0, #0, 8
    d578:	66010036 			; <UNDEFINED> instruction: 0x66010036
    d57c:	00007612 	andeq	r7, r0, r2, lsl r6
    d580:	73107800 	tstvc	r0, #0, 16
    d584:	67010037 	smladxvs	r1, r7, r0, r0
    d588:	00007612 	andeq	r7, r0, r2, lsl r6
    d58c:	73107c00 	tstvc	r0, #0, 24
    d590:	68010038 	stmdavs	r1, {r3, r4, r5}
    d594:	00007612 	andeq	r7, r0, r2, lsl r6
    d598:	73108000 	tstvc	r0, #0
    d59c:	69010039 	stmdbvs	r1, {r0, r3, r4, r5}
    d5a0:	00007612 	andeq	r7, r0, r2, lsl r6
    d5a4:	73108400 	tstvc	r0, #0, 8
    d5a8:	01003031 	tsteq	r0, r1, lsr r0
    d5ac:	0076126a 	rsbseq	r1, r6, sl, ror #4
    d5b0:	10880000 	addne	r0, r8, r0
    d5b4:	00313173 	eorseq	r3, r1, r3, ror r1
    d5b8:	76126b01 	ldrvc	r6, [r2], -r1, lsl #22
    d5bc:	8c000000 	stchi	0, cr0, [r0], {-0}
    d5c0:	32317310 	eorscc	r7, r1, #16, 6	; 0x40000000
    d5c4:	126c0100 	rsbne	r0, ip, #0, 2
    d5c8:	00000076 	andeq	r0, r0, r6, ror r0
    d5cc:	31731090 			; <UNDEFINED> instruction: 0x31731090
    d5d0:	6d010033 	stcvs	0, cr0, [r1, #-204]	; 0xffffff34
    d5d4:	00007612 	andeq	r7, r0, r2, lsl r6
    d5d8:	73109400 	tstvc	r0, #0, 8
    d5dc:	01003431 	tsteq	r0, r1, lsr r4
    d5e0:	0076126e 	rsbseq	r1, r6, lr, ror #4
    d5e4:	10980000 	addsne	r0, r8, r0
    d5e8:	00353173 	eorseq	r3, r5, r3, ror r1
    d5ec:	76126f01 	ldrvc	r6, [r2], -r1, lsl #30
    d5f0:	9c000000 	stcls	0, cr0, [r0], {-0}
    d5f4:	36317310 			; <UNDEFINED> instruction: 0x36317310
    d5f8:	12700100 	rsbsne	r0, r0, #0, 2
    d5fc:	00000076 	andeq	r0, r0, r6, ror r0
    d600:	317310a0 	cmncc	r3, r0, lsr #1
    d604:	71010037 	tstvc	r1, r7, lsr r0
    d608:	00007612 	andeq	r7, r0, r2, lsl r6
    d60c:	7310a400 	tstvc	r0, #0, 8
    d610:	01003831 	tsteq	r0, r1, lsr r8
    d614:	00761272 	rsbseq	r1, r6, r2, ror r2
    d618:	10a80000 	adcne	r0, r8, r0
    d61c:	00393173 	eorseq	r3, r9, r3, ror r1
    d620:	76127301 	ldrvc	r7, [r2], -r1, lsl #6
    d624:	ac000000 	stcge	0, cr0, [r0], {-0}
    d628:	30327310 	eorscc	r7, r2, r0, lsl r3
    d62c:	12740100 	rsbsne	r0, r4, #0, 2
    d630:	00000076 	andeq	r0, r0, r6, ror r0
    d634:	327310b0 	rsbscc	r1, r3, #176	; 0xb0
    d638:	75010031 	strvc	r0, [r1, #-49]	; 0xffffffcf
    d63c:	00007612 	andeq	r7, r0, r2, lsl r6
    d640:	7310b400 	tstvc	r0, #0, 8
    d644:	01003232 	tsteq	r0, r2, lsr r2
    d648:	00761276 	rsbseq	r1, r6, r6, ror r2
    d64c:	10b80000 	adcsne	r0, r8, r0
    d650:	00333273 	eorseq	r3, r3, r3, ror r2
    d654:	76127701 	ldrvc	r7, [r2], -r1, lsl #14
    d658:	bc000000 	stclt	0, cr0, [r0], {-0}
    d65c:	34327310 	ldrtcc	r7, [r2], #-784	; 0xfffffcf0
    d660:	12780100 	rsbsne	r0, r8, #0, 2
    d664:	00000076 	andeq	r0, r0, r6, ror r0
    d668:	327310c0 	rsbscc	r1, r3, #192	; 0xc0
    d66c:	79010035 	stmdbvc	r1, {r0, r2, r4, r5}
    d670:	00007612 	andeq	r7, r0, r2, lsl r6
    d674:	7310c400 	tstvc	r0, #0, 8
    d678:	01003632 	tsteq	r0, r2, lsr r6
    d67c:	0076127a 	rsbseq	r1, r6, sl, ror r2
    d680:	10c80000 	sbcne	r0, r8, r0
    d684:	00373273 	eorseq	r3, r7, r3, ror r2
    d688:	76127b01 	ldrvc	r7, [r2], -r1, lsl #22
    d68c:	cc000000 	stcgt	0, cr0, [r0], {-0}
    d690:	38327310 	ldmdacc	r2!, {r4, r8, r9, ip, sp, lr}
    d694:	127c0100 	rsbsne	r0, ip, #0, 2
    d698:	00000076 	andeq	r0, r0, r6, ror r0
    d69c:	327310d0 	rsbscc	r1, r3, #208	; 0xd0
    d6a0:	7d010039 	stcvc	0, cr0, [r1, #-228]	; 0xffffff1c
    d6a4:	00007612 	andeq	r7, r0, r2, lsl r6
    d6a8:	7310d400 	tstvc	r0, #0, 8
    d6ac:	01003033 	tsteq	r0, r3, lsr r0
    d6b0:	0076127e 	rsbseq	r1, r6, lr, ror r2
    d6b4:	10d80000 	sbcsne	r0, r8, r0
    d6b8:	00313373 	eorseq	r3, r1, r3, ror r3
    d6bc:	76127f01 	ldrvc	r7, [r2], -r1, lsl #30
    d6c0:	dc000000 	stcle	0, cr0, [r0], {-0}
    d6c4:	30a40300 	adccc	r0, r4, r0, lsl #6
    d6c8:	80010000 	andhi	r0, r1, r0
    d6cc:	000c0303 	andeq	r0, ip, r3, lsl #6
    d6d0:	01e40c00 	mvneq	r0, r0, lsl #24
    d6d4:	0f020984 	svceq	0x00020984
    d6d8:	e80d0000 	stmda	sp, {}	; <UNPREDICTABLE>
    d6dc:	01000031 	tsteq	r0, r1, lsr r0
    d6e0:	00760e85 	rsbseq	r0, r6, r5, lsl #29
    d6e4:	0d000000 	stceq	0, cr0, [r0, #-0]
    d6e8:	00003071 	andeq	r3, r0, r1, ror r0
    d6ec:	d2188601 	andsle	r8, r8, #1048576	; 0x100000
    d6f0:	0400000e 	streq	r0, [r0], #-14
    d6f4:	31390300 	teqcc	r9, r0, lsl #6
    d6f8:	87010000 	strhi	r0, [r1, -r0]
    d6fc:	000ede03 	andeq	sp, lr, r3, lsl #28
    d700:	31212500 			; <UNDEFINED> instruction: 0x31212500
    d704:	89010000 	stmdbhi	r1, {}	; <UNPREDICTABLE>
    d708:	000f0213 	andeq	r0, pc, r3, lsl r2	; <UNPREDICTABLE>
    d70c:	3c030500 	cfstr32cc	mvfx0, [r3], {-0}
    d710:	20200004 	eorcs	r0, r0, r4
    d714:	00003131 	andeq	r3, r0, r1, lsr r1
    d718:	11011b01 	tstne	r1, r1, lsl #22
    d71c:	00000076 	andeq	r0, r0, r6, ror r0
    d720:	00323220 	eorseq	r3, r2, r0, lsr #4
    d724:	011d0100 	tsteq	sp, r0, lsl #2
    d728:	00007611 	andeq	r7, r0, r1, lsl r6
    d72c:	32002000 	andcc	r2, r0, #0
    d730:	1f010000 	svcne	0x00010000
    d734:	00761101 	rsbseq	r1, r6, r1, lsl #2
    d738:	d8200000 	stmdale	r0!, {}	; <UNPREDICTABLE>
    d73c:	01000031 	tsteq	r0, r1, lsr r0
    d740:	76110121 	ldrvc	r0, [r1], -r1, lsr #2
    d744:	20000000 	andcs	r0, r0, r0
    d748:	000031ee 	andeq	r3, r0, lr, ror #3
    d74c:	11012301 	tstne	r1, r1, lsl #6
    d750:	00000076 	andeq	r0, r0, r6, ror r0
    d754:	00317720 	eorseq	r7, r1, r0, lsr #14
    d758:	01250100 			; <UNDEFINED> instruction: 0x01250100
    d75c:	00007611 	andeq	r7, r0, r1, lsl r6
    d760:	00520a00 	subseq	r0, r2, r0, lsl #20
    d764:	0f7e0000 	svceq	0x007e0000
    d768:	a60b0000 	strge	r0, [fp], -r0
    d76c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    d770:	32192600 	andscc	r2, r9, #0, 12
    d774:	37010000 	strcc	r0, [r1, -r0]
    d778:	0f6e1001 	svceq	0x006e1001
    d77c:	05040000 	streq	r0, [r4, #-0]
    d780:	00000003 	andeq	r0, r0, r3
    d784:	31442700 	cmpcc	r4, r0, lsl #14
    d788:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    d78c:	013b0701 	teqeq	fp, r1, lsl #14
    d790:	03050000 	movweq	r0, #20480	; 0x5000
    d794:	00000000 	andeq	r0, r0, r0
    d798:	0003080a 	andeq	r0, r3, sl, lsl #16
    d79c:	000fb500 	andeq	fp, pc, r0, lsl #10
    d7a0:	00a60b00 	adceq	r0, r6, r0, lsl #22
    d7a4:	00640000 	rsbeq	r0, r4, r0
    d7a8:	000fa505 	andeq	sl, pc, r5, lsl #10
    d7ac:	30662700 	rsbcc	r2, r6, r0, lsl #14
    d7b0:	75010000 	strvc	r0, [r1, #-0]
    d7b4:	0fb53a01 	svceq	0x00b53a01
    d7b8:	03050000 	movweq	r0, #20480	; 0x5000
    d7bc:	00000000 	andeq	r0, r0, r0
    d7c0:	00303227 	eorseq	r3, r0, r7, lsr #4
    d7c4:	01990100 	orrseq	r0, r9, r0, lsl #2
    d7c8:	0000760a 	andeq	r7, r0, sl, lsl #12
    d7cc:	00030500 	andeq	r0, r3, r0, lsl #10
    d7d0:	1b000000 	blne	d7d8 <_Min_Stack_Size+0xd3d8>
    d7d4:	019a010c 	orrseq	r0, sl, ip, lsl #2
    d7d8:	00101509 	andseq	r1, r0, r9, lsl #10
    d7dc:	328d1800 	addcc	r1, sp, #0, 16
    d7e0:	9b010000 	blls	4d7e8 <_Min_Stack_Size+0x4d3e8>
    d7e4:	06270f01 	strteq	r0, [r7], -r1, lsl #30
    d7e8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    d7ec:	0000030e 	andeq	r0, r0, lr, lsl #6
    d7f0:	0f019c01 	svceq	0x00019c01
    d7f4:	00000627 	andeq	r0, r0, r7, lsr #12
    d7f8:	32541804 	subscc	r1, r4, #4, 16	; 0x40000
    d7fc:	9d010000 	stcls	0, cr0, [r1, #-0]
    d800:	00760c01 	rsbseq	r0, r6, r1, lsl #24
    d804:	00080000 	andeq	r0, r8, r0
    d808:	00315707 	eorseq	r5, r1, r7, lsl #14
    d80c:	019e0100 	orrseq	r0, lr, r0, lsl #2
    d810:	000fe003 	andeq	lr, pc, r3
    d814:	31f42700 	mvnscc	r2, r0, lsl #14
    d818:	9f010000 	svcls	0x00010000
    d81c:	10150f01 	andsne	r0, r5, r1, lsl #30
    d820:	03050000 	movweq	r0, #20480	; 0x5000
    d824:	00000000 	andeq	r0, r0, r0
    d828:	00320728 	eorseq	r0, r2, r8, lsr #14
    d82c:	01a10100 			; <UNDEFINED> instruction: 0x01a10100
    d830:	00000006 	andeq	r0, r0, r6
    d834:	00004c00 	andeq	r4, r0, r0, lsl #24
    d838:	8e9c0100 	fmlhie	f0, f4, f0
    d83c:	29000010 	stmdbcs	r0, {r4}
    d840:	0000328d 	andeq	r3, r0, sp, lsl #5
    d844:	2401a101 	strcs	sl, [r1], #-257	; 0xfffffeff
    d848:	00000627 	andeq	r0, r0, r7, lsr #12
    d84c:	29749102 	ldmdbcs	r4!, {r1, r8, ip, pc}^
    d850:	0000030e 	andeq	r0, r0, lr, lsl #6
    d854:	3601a101 	strcc	sl, [r1], -r1, lsl #2
    d858:	00000627 	andeq	r0, r0, r7, lsr #12
    d85c:	29709102 	ldmdbcs	r0!, {r1, r8, ip, pc}^
    d860:	00003254 	andeq	r3, r0, r4, asr r2
    d864:	4501a101 	strmi	sl, [r1, #-257]	; 0xfffffeff
    d868:	00000076 	andeq	r0, r0, r6, ror r0
    d86c:	2a6c9102 	bcs	1b31c7c <_Min_Stack_Size+0x1b3187c>
    d870:	00001269 	andeq	r1, r0, r9, ror #4
    d874:	00000000 	andeq	r0, r0, r0
    d878:	00000002 	andeq	r0, r0, r2
    d87c:	0301a401 	movweq	sl, #5121	; 0x1401
    d880:	30772b00 	rsbscc	r2, r7, r0, lsl #22
    d884:	93010000 	movwls	r0, #4096	; 0x1000
    d888:	00000601 	andeq	r0, r0, r1, lsl #12
    d88c:	00120000 	andseq	r0, r2, r0
    d890:	9c010000 	stcls	0, cr0, [r1], {-0}
    d894:	0031ba2c 	eorseq	fp, r1, ip, lsr #20
    d898:	018a0100 	orreq	r0, sl, r0, lsl #2
    d89c:	00000006 	andeq	r0, r0, r6
    d8a0:	00001c00 	andeq	r1, r0, r0, lsl #24
    d8a4:	2d9c0100 	ldfcss	f0, [ip]
    d8a8:	00001343 	andeq	r1, r0, r3, asr #6
    d8ac:	0d016401 	cfstrseq	mvf6, [r1, #-4]
    d8b0:	00000000 	andeq	r0, r0, r0
    d8b4:	00000070 	andeq	r0, r0, r0, ror r0
    d8b8:	862c9c01 	strthi	r9, [ip], -r1, lsl #24
    d8bc:	01000030 	tsteq	r0, r0, lsr r0
    d8c0:	0006015d 	andeq	r0, r6, sp, asr r1
    d8c4:	7a000000 	bvc	d8cc <_Min_Stack_Size+0xd4cc>
    d8c8:	01000000 	mrseq	r0, (UNDEF: 0)
    d8cc:	32412c9c 	subcc	r2, r1, #156, 24	; 0x9c00
    d8d0:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    d8d4:	3d5c0601 	ldclcc	6, cr0, [ip, #-4]
    d8d8:	00700800 	rsbseq	r0, r0, r0, lsl #16
    d8dc:	9c010000 	stcls	0, cr0, [r1], {-0}
    d8e0:	00327c2c 	eorseq	r7, r2, ip, lsr #24
    d8e4:	01550100 	cmpeq	r5, r0, lsl #2
    d8e8:	003ce406 	eorseq	lr, ip, r6, lsl #8
    d8ec:	00007008 	andeq	r7, r0, r8
    d8f0:	2c9c0100 	ldfcss	f0, [ip], {0}
    d8f4:	00003047 	andeq	r3, r0, r7, asr #32
    d8f8:	06015101 	streq	r5, [r1], -r1, lsl #2
    d8fc:	00000000 	andeq	r0, r0, r0
    d900:	00000070 	andeq	r0, r0, r0, ror r0
    d904:	982c9c01 	stmdals	ip!, {r0, sl, fp, ip, pc}
    d908:	01000032 	tsteq	r0, r2, lsr r0
    d90c:	6c06014c 	stfvss	f0, [r6], {76}	; 0x4c
    d910:	7008003c 	andvc	r0, r8, ip, lsr r0
    d914:	01000000 	mrseq	r0, (UNDEF: 0)
    d918:	32592e9c 	subscc	r2, r9, #156, 28	; 0x9c0
    d91c:	43010000 	movwmi	r0, #4096	; 0x1000
    d920:	00000d01 	andeq	r0, r0, r1, lsl #26
    d924:	000c0000 	andeq	r0, ip, r0
    d928:	9c010000 	stcls	0, cr0, [r1], {-0}
    d92c:	0031652d 	eorseq	r6, r1, sp, lsr #10
    d930:	013c0100 	teqeq	ip, r0, lsl #2
    d934:	0000000d 	andeq	r0, r0, sp
    d938:	00000800 	andeq	r0, r0, r0, lsl #16
    d93c:	2f9c0100 	svccs	0x009c0100
    d940:	000031de 	ldrdeq	r3, [r0], -lr
    d944:	27012801 	strcs	r2, [r1, -r1, lsl #16]
    d948:	00000000 	andeq	r0, r0, r0
    d94c:	00000060 	andeq	r0, r0, r0, rrx
    d950:	11ac9c01 			; <UNDEFINED> instruction: 0x11ac9c01
    d954:	00300000 	eorseq	r0, r0, r0
    d958:	22000000 	andcs	r0, r0, #0
    d95c:	91000000 	mrsls	r0, (UNDEF: 0)
    d960:	31000011 	tstcc	r0, r1, lsl r0
    d964:	00747364 	rsbseq	r7, r4, r4, ror #6
    d968:	12012b01 	andne	r2, r1, #1024	; 0x400
    d96c:	000011ac 	andeq	r1, r0, ip, lsr #3
    d970:	31749102 	cmncc	r4, r2, lsl #2
    d974:	00637273 	rsbeq	r7, r3, r3, ror r2
    d978:	22012b01 	andcs	r2, r1, #1024	; 0x400
    d97c:	000011ac 	andeq	r1, r0, ip, lsr #3
    d980:	00709102 	rsbseq	r9, r0, r2, lsl #2
    d984:	00000032 	andeq	r0, r0, r2, lsr r0
    d988:	00001800 	andeq	r1, r0, r0, lsl #16
    d98c:	73643100 	cmnvc	r4, #0, 2
    d990:	30010074 	andcc	r0, r1, r4, ror r0
    d994:	11ac1201 			; <UNDEFINED> instruction: 0x11ac1201
    d998:	91020000 	mrsls	r0, (UNDEF: 2)
    d99c:	1100006c 	tstne	r0, ip, rrx
    d9a0:	00007604 	andeq	r7, r0, r4, lsl #12
    d9a4:	30ec3300 	rsccc	r3, ip, r0, lsl #6
    d9a8:	d9010000 	stmdble	r1, {}	; <UNPREDICTABLE>
    d9ac:	003bb406 	eorseq	fp, fp, r6, lsl #8
    d9b0:	0000b808 	andeq	fp, r0, r8, lsl #16
    d9b4:	1c9c0100 	ldfnes	f0, [ip], {0}
    d9b8:	34000012 	strcc	r0, [r0], #-18	; 0xffffffee
    d9bc:	00003139 	andeq	r3, r0, r9, lsr r1
    d9c0:	1c26d901 			; <UNDEFINED> instruction: 0x1c26d901
    d9c4:	02000012 	andeq	r0, r0, #18
    d9c8:	71256491 			; <UNDEFINED> instruction: 0x71256491
    d9cc:	01000030 	tsteq	r0, r0, lsr r0
    d9d0:	122219da 	eorne	r1, r2, #3571712	; 0x368000
    d9d4:	91020000 	mrsls	r0, (UNDEF: 2)
    d9d8:	30932574 	addscc	r2, r3, r4, ror r5
    d9dc:	ea010000 	b	4d9e4 <_Min_Stack_Size+0x4d5e4>
    d9e0:	00008c12 	andeq	r8, r0, r2, lsl ip
    d9e4:	70910200 	addsvc	r0, r1, r0, lsl #4
    d9e8:	00317f25 	eorseq	r7, r1, r5, lsr #30
    d9ec:	0eeb0100 	cdpeq	1, 14, cr0, cr11, cr0, {0}
    d9f0:	0000122f 	andeq	r1, r0, pc, lsr #4
    d9f4:	256f9102 	strbcs	r9, [pc, #-258]!	; d8fa <_Min_Stack_Size+0xd4fa>
    d9f8:	00003265 	andeq	r3, r0, r5, ror #4
    d9fc:	2f0eee01 	svccs	0x000eee01
    da00:	02000012 	andeq	r0, r0, #18
    da04:	98356e91 	ldmdals	r5!, {r0, r4, r7, r9, sl, fp, sp, lr}
    da08:	01000031 	tsteq	r0, r1, lsr r0
    da0c:	11000ff6 	strdne	r0, [r0, -r6]
    da10:	000f0204 	andeq	r0, pc, r4, lsl #4
    da14:	d2041100 	andle	r1, r4, #0, 2
    da18:	0200000e 	andeq	r0, r0, #14
    da1c:	29dd0201 	ldmibcs	sp, {r0, r9}^
    da20:	28050000 	stmdacs	r5, {}	; <UNPREDICTABLE>
    da24:	33000012 	movwcc	r0, #18
    da28:	00003100 	andeq	r3, r0, r0, lsl #2
    da2c:	0006c501 	andeq	ip, r6, r1, lsl #10
    da30:	14000000 	strne	r0, [r0], #-0
    da34:	01000000 	mrseq	r0, (UNDEF: 0)
    da38:	0012699c 	mulseq	r2, ip, r9
    da3c:	31393400 	teqcc	r9, r0, lsl #8
    da40:	c5010000 	strgt	r0, [r1, #-0]
    da44:	00121c2d 	andseq	r1, r2, sp, lsr #24
    da48:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    da4c:	00322234 	eorseq	r2, r2, r4, lsr r2
    da50:	42c50100 	sbcmi	r0, r5, #0, 2
    da54:	00000076 	andeq	r0, r0, r6, ror r0
    da58:	00709102 	rsbseq	r9, r0, r2, lsl #2
    da5c:	002b5736 	eoreq	r5, fp, r6, lsr r7
    da60:	1b8c0200 	blne	fe30e268 <__StackLimit+0xde2ee268>
    da64:	0d520003 	ldcleq	0, cr0, [r2, #-12]
    da68:	00040000 	andeq	r0, r4, r0
    da6c:	00002983 	andeq	r2, r0, r3, lsl #19
    da70:	04470104 	strbeq	r0, [r7], #-260	; 0xfffffefc
    da74:	d10c0000 	mrsle	r0, (UNDEF: 12)
    da78:	be000033 	mcrlt	0, 0, r0, cr0, cr3, {1}
    da7c:	d8000001 	stmdale	r0, {r0}
    da80:	00000008 	andeq	r0, r0, r8
    da84:	3f000000 	svccc	0x00000000
    da88:	02000064 	andeq	r0, r0, #100	; 0x64
    da8c:	07a90601 	streq	r0, [r9, r1, lsl #12]!
    da90:	02020000 	andeq	r0, r2, #0
    da94:	00000005 	andeq	r0, r0, r5
    da98:	2c120300 	ldccs	3, cr0, [r2], {-0}
    da9c:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
    daa0:	00004418 	andeq	r4, r0, r8, lsl r4
    daa4:	00330400 	eorseq	r0, r3, r0, lsl #8
    daa8:	04020000 	streq	r0, [r2], #-0
    daac:	0001b505 	andeq	fp, r1, r5, lsl #10
    dab0:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    dab4:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    dab8:	002aca03 	eoreq	ip, sl, r3, lsl #20
    dabc:	182e0200 	stmdane	lr!, {r9}
    dac0:	00000068 	andeq	r0, r0, r8, rrx
    dac4:	00005204 	andeq	r5, r0, r4, lsl #4
    dac8:	00520500 	subseq	r0, r2, r0, lsl #10
    dacc:	01020000 	mrseq	r0, (UNDEF: 2)
    dad0:	0007a708 	andeq	sl, r7, r8, lsl #14
    dad4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    dad8:	00000377 	andeq	r0, r0, r7, ror r3
    dadc:	002b6e03 	eoreq	r6, fp, r3, lsl #28
    dae0:	19340200 	ldmdbne	r4!, {r9}
    dae4:	00000087 	andeq	r0, r0, r7, lsl #1
    dae8:	00007604 	andeq	r7, r0, r4, lsl #12
    daec:	07040200 	streq	r0, [r4, -r0, lsl #4]
    daf0:	000000a5 	andeq	r0, r0, r5, lsr #1
    daf4:	001c4b03 	andseq	r4, ip, r3, lsl #22
    daf8:	19370200 	ldmdbne	r7!, {r9}
    dafc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    db00:	00008e04 	andeq	r8, r0, r4, lsl #28
    db04:	07080200 	streq	r0, [r8, -r0, lsl #4]
    db08:	000000a0 	andeq	r0, r0, r0, lsr #1
    db0c:	69050406 	stmdbvs	r5, {r1, r2, sl}
    db10:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    db14:	00aa0704 	adceq	r0, sl, r4, lsl #14
    db18:	e0030000 	and	r0, r3, r0
    db1c:	03000028 	movweq	r0, #40	; 0x28
    db20:	00ad17d8 	ldrdeq	r1, [sp], r8	; <UNPREDICTABLE>
    db24:	b4050000 	strlt	r0, [r5], #-0
    db28:	02000000 	andeq	r0, r0, #0
    db2c:	07190408 	ldreq	r0, [r9, -r8, lsl #8]
    db30:	e0070000 	and	r0, r7, r0
    db34:	03000003 	movweq	r0, #3
    db38:	ad170165 	ldfges	f0, [r7, #-404]	; 0xfffffe6c
    db3c:	03000000 	movweq	r0, #0
    db40:	00000562 	andeq	r0, r0, r2, ror #10
    db44:	440e2e04 	strmi	r2, [lr], #-3588	; 0xfffff1fc
    db48:	03000000 	movweq	r0, #0
    db4c:	000006fb 	strdeq	r0, [r0], -fp
    db50:	440e7404 	strmi	r7, [lr], #-1028	; 0xfffffbfc
    db54:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    db58:	03a50404 			; <UNDEFINED> instruction: 0x03a50404
    db5c:	00000113 	andeq	r0, r0, r3, lsl r1
    db60:	0003da09 	andeq	sp, r3, r9, lsl #20
    db64:	0ca70400 	cfstrseq	mvf0, [r7]
    db68:	000000cc 	andeq	r0, r0, ip, asr #1
    db6c:	0002ec09 	andeq	lr, r2, r9, lsl #24
    db70:	13a80400 			; <UNDEFINED> instruction: 0x13a80400
    db74:	00000113 	andeq	r0, r0, r3, lsl r1
    db78:	00680a00 	rsbeq	r0, r8, r0, lsl #20
    db7c:	01230000 			; <UNDEFINED> instruction: 0x01230000
    db80:	ad0b0000 	stcge	0, cr0, [fp, #-0]
    db84:	03000000 	movweq	r0, #0
    db88:	04080c00 	streq	r0, [r8], #-3072	; 0xfffff400
    db8c:	014709a2 	smlaltbeq	r0, r7, r2, r9
    db90:	e30d0000 	movw	r0, #53248	; 0xd000
    db94:	04000006 	streq	r0, [r0], #-6
    db98:	00a607a4 	adceq	r0, r6, r4, lsr #15
    db9c:	0d000000 	stceq	0, cr0, [r0, #-0]
    dba0:	0000080d 	andeq	r0, r0, sp, lsl #16
    dba4:	f105a904 			; <UNDEFINED> instruction: 0xf105a904
    dba8:	04000000 	streq	r0, [r0], #-0
    dbac:	066d0300 	strbteq	r0, [sp], -r0, lsl #6
    dbb0:	aa040000 	bge	10dbb8 <_Min_Stack_Size+0x10d7b8>
    dbb4:	00012303 	andeq	r2, r1, r3, lsl #6
    dbb8:	03040e00 	movweq	r0, #19968	; 0x4e00
    dbbc:	000007c3 	andeq	r0, r0, r3, asr #15
    dbc0:	87191605 	ldrhi	r1, [r9, -r5, lsl #12]
    dbc4:	03000000 	movweq	r0, #0
    dbc8:	000005cb 	andeq	r0, r0, fp, asr #11
    dbcc:	a60d0c06 	strge	r0, [sp], -r6, lsl #24
    dbd0:	03000000 	movweq	r0, #0
    dbd4:	00000859 	andeq	r0, r0, r9, asr r8
    dbd8:	611b2305 	tstvs	fp, r5, lsl #6
    dbdc:	0f000001 	svceq	0x00000001
    dbe0:	0000029b 	muleq	r0, fp, r2
    dbe4:	08340518 	ldmdaeq	r4!, {r3, r4, r8, sl}
    dbe8:	000001d3 	ldrdeq	r0, [r0], -r3
    dbec:	00067d0d 	andeq	r7, r6, sp, lsl #26
    dbf0:	13360500 	teqne	r6, #0, 10
    dbf4:	000001d3 	ldrdeq	r0, [r0], -r3
    dbf8:	6b5f1000 	blvs	17d1c00 <_Min_Stack_Size+0x17d1800>
    dbfc:	07370500 	ldreq	r0, [r7, -r0, lsl #10]!
    dc00:	000000a6 	andeq	r0, r0, r6, lsr #1
    dc04:	06c40d04 	strbeq	r0, [r4], r4, lsl #26
    dc08:	37050000 	strcc	r0, [r5, -r0]
    dc0c:	0000a60b 	andeq	sl, r0, fp, lsl #12
    dc10:	8d0d0800 	stchi	8, cr0, [sp, #-0]
    dc14:	05000002 	streq	r0, [r0, #-2]
    dc18:	00a61437 	adceq	r1, r6, r7, lsr r4
    dc1c:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    dc20:	0000019a 	muleq	r0, sl, r1
    dc24:	a61b3705 	ldrge	r3, [fp], -r5, lsl #14
    dc28:	10000000 	andne	r0, r0, r0
    dc2c:	00785f10 	rsbseq	r5, r8, r0, lsl pc
    dc30:	d90b3805 	stmdble	fp, {r0, r2, fp, ip, sp}
    dc34:	14000001 	strne	r0, [r0], #-1
    dc38:	79041100 	stmdbvc	r4, {r8, ip}
    dc3c:	0a000001 	beq	dc48 <_Min_Stack_Size+0xd848>
    dc40:	00000155 	andeq	r0, r0, r5, asr r1
    dc44:	000001e9 	andeq	r0, r0, r9, ror #3
    dc48:	0000ad0b 	andeq	sl, r0, fp, lsl #26
    dc4c:	0f000000 	svceq	0x00000000
    dc50:	000002d5 	ldrdeq	r0, [r0], -r5
    dc54:	083c0524 	ldmdaeq	ip!, {r2, r5, r8, sl}
    dc58:	0000026c 	andeq	r0, r0, ip, ror #4
    dc5c:	0001080d 	andeq	r0, r1, sp, lsl #16
    dc60:	093e0500 	ldmdbeq	lr!, {r8, sl}
    dc64:	000000a6 	andeq	r0, r0, r6, lsr #1
    dc68:	07b50d00 	ldreq	r0, [r5, r0, lsl #26]!
    dc6c:	3f050000 	svccc	0x00050000
    dc70:	0000a609 	andeq	sl, r0, r9, lsl #12
    dc74:	390d0400 	stmdbcc	sp, {sl}
    dc78:	05000001 	streq	r0, [r0, #-1]
    dc7c:	00a60940 	adceq	r0, r6, r0, asr #18
    dc80:	0d080000 	stceq	0, cr0, [r8, #-0]
    dc84:	000008ca 	andeq	r0, r0, sl, asr #17
    dc88:	a6094105 	strge	r4, [r9], -r5, lsl #2
    dc8c:	0c000000 	stceq	0, cr0, [r0], {-0}
    dc90:	0005380d 	andeq	r3, r5, sp, lsl #16
    dc94:	09420500 	stmdbeq	r2, {r8, sl}^
    dc98:	000000a6 	andeq	r0, r0, r6, lsr #1
    dc9c:	04210d10 	strteq	r0, [r1], #-3344	; 0xfffff2f0
    dca0:	43050000 	movwmi	r0, #20480	; 0x5000
    dca4:	0000a609 	andeq	sl, r0, r9, lsl #12
    dca8:	f60d1400 			; <UNDEFINED> instruction: 0xf60d1400
    dcac:	05000007 	streq	r0, [r0, #-7]
    dcb0:	00a60944 	adceq	r0, r6, r4, asr #18
    dcb4:	0d180000 	ldceq	0, cr0, [r8, #-0]
    dcb8:	00000640 	andeq	r0, r0, r0, asr #12
    dcbc:	a6094505 	strge	r4, [r9], -r5, lsl #10
    dcc0:	1c000000 	stcne	0, cr0, [r0], {-0}
    dcc4:	00088c0d 	andeq	r8, r8, sp, lsl #24
    dcc8:	09460500 	stmdbeq	r6, {r8, sl}^
    dccc:	000000a6 	andeq	r0, r0, r6, lsr #1
    dcd0:	48120020 	ldmdami	r2, {r5}
    dcd4:	08000001 	stmdaeq	r0, {r0}
    dcd8:	084f0501 	stmdaeq	pc, {r0, r8, sl}^	; <UNPREDICTABLE>
    dcdc:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    dce0:	00026d0d 	andeq	r6, r2, sp, lsl #26
    dce4:	0a500500 	beq	140f0ec <_Min_Stack_Size+0x140ecec>
    dce8:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    dcec:	05fe0d00 	ldrbeq	r0, [lr, #3328]!	; 0xd00
    dcf0:	51050000 	mrspl	r0, (UNDEF: 5)
    dcf4:	0002b109 	andeq	fp, r2, r9, lsl #2
    dcf8:	96138000 	ldrls	r8, [r3], -r0
    dcfc:	05000007 	streq	r0, [r0, #-7]
    dd00:	01550a53 	cmpeq	r5, r3, asr sl
    dd04:	01000000 	mrseq	r0, (UNDEF: 0)
    dd08:	00019213 	andeq	r9, r1, r3, lsl r2
    dd0c:	0a560500 	beq	158f114 <_Min_Stack_Size+0x158ed14>
    dd10:	00000155 	andeq	r0, r0, r5, asr r1
    dd14:	0a000104 	beq	e12c <_Min_Stack_Size+0xdd2c>
    dd18:	00000153 	andeq	r0, r0, r3, asr r1
    dd1c:	000002c1 	andeq	r0, r0, r1, asr #5
    dd20:	0000ad0b 	andeq	sl, r0, fp, lsl #26
    dd24:	12001f00 	andne	r1, r0, #0, 30
    dd28:	00004a76 	andeq	r4, r0, r6, ror sl
    dd2c:	62050190 	andvs	r0, r5, #144, 2	; 0x24
    dd30:	00030408 	andeq	r0, r3, r8, lsl #8
    dd34:	067d0d00 	ldrbteq	r0, [sp], -r0, lsl #26
    dd38:	63050000 	movwvs	r0, #20480	; 0x5000
    dd3c:	00030412 	andeq	r0, r3, r2, lsl r4
    dd40:	8e0d0000 	cdphi	0, 0, cr0, cr13, cr0, {0}
    dd44:	05000006 	streq	r0, [r0, #-6]
    dd48:	00a60664 	adceq	r0, r6, r4, ror #12
    dd4c:	0d040000 	stceq	0, cr0, [r4, #-0]
    dd50:	00000288 	andeq	r0, r0, r8, lsl #5
    dd54:	0a096605 	beq	267570 <_Min_Stack_Size+0x267170>
    dd58:	08000003 	stmdaeq	r0, {r0, r1}
    dd5c:	0001480d 	andeq	r4, r1, sp, lsl #16
    dd60:	1e670500 	cdpne	5, 6, cr0, cr7, cr0, {0}
    dd64:	0000026c 	andeq	r0, r0, ip, ror #4
    dd68:	04110088 	ldreq	r0, [r1], #-136	; 0xffffff78
    dd6c:	000002c1 	andeq	r0, r0, r1, asr #5
    dd70:	00031a0a 	andeq	r1, r3, sl, lsl #20
    dd74:	00031a00 	andeq	r1, r3, r0, lsl #20
    dd78:	00ad0b00 	adceq	r0, sp, r0, lsl #22
    dd7c:	001f0000 	andseq	r0, pc, r0
    dd80:	03200411 			; <UNDEFINED> instruction: 0x03200411
    dd84:	0f140000 	svceq	0x00140000
    dd88:	0000064a 	andeq	r0, r0, sl, asr #12
    dd8c:	087a0508 	ldmdaeq	sl!, {r3, r8, sl}^
    dd90:	00000349 	andeq	r0, r0, r9, asr #6
    dd94:	0001330d 	andeq	r3, r1, sp, lsl #6
    dd98:	117b0500 	cmnne	fp, r0, lsl #10
    dd9c:	00000349 	andeq	r0, r0, r9, asr #6
    dda0:	072e0d00 	streq	r0, [lr, -r0, lsl #26]!
    dda4:	7c050000 	stcvc	0, cr0, [r5], {-0}
    dda8:	0000a606 	andeq	sl, r0, r6, lsl #12
    ddac:	11000400 	tstne	r0, r0, lsl #8
    ddb0:	00006804 	andeq	r6, r0, r4, lsl #16
    ddb4:	00280f00 	eoreq	r0, r8, r0, lsl #30
    ddb8:	05680000 	strbeq	r0, [r8, #-0]!
    ddbc:	049208ba 	ldreq	r0, [r2], #2234	; 0x8ba
    ddc0:	5f100000 	svcpl	0x00100000
    ddc4:	bb050070 	bllt	14df8c <_Min_Stack_Size+0x14db8c>
    ddc8:	00034912 	andeq	r4, r3, r2, lsl r9
    ddcc:	5f100000 	svcpl	0x00100000
    ddd0:	bc050072 	stclt	0, cr0, [r5], {114}	; 0x72
    ddd4:	0000a607 	andeq	sl, r0, r7, lsl #12
    ddd8:	5f100400 	svcpl	0x00100400
    dddc:	bd050077 	stclt	0, cr0, [r5, #-476]	; 0xfffffe24
    dde0:	0000a607 	andeq	sl, r0, r7, lsl #12
    dde4:	8b0d0800 	blhi	34fdec <_Min_Stack_Size+0x34f9ec>
    dde8:	05000001 	streq	r0, [r0, #-1]
    ddec:	002c09be 	strhteq	r0, [ip], -lr
    ddf0:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    ddf4:	0000030d 	andeq	r0, r0, sp, lsl #6
    ddf8:	2c09bf05 	stccs	15, cr11, [r9], {5}
    ddfc:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    de00:	66625f10 	uqadd16vs	r5, r2, r0
    de04:	11c00500 	bicne	r0, r0, r0, lsl #10
    de08:	00000321 	andeq	r0, r0, r1, lsr #6
    de0c:	00b70d10 	adcseq	r0, r7, r0, lsl sp
    de10:	c1050000 	mrsgt	r0, (UNDEF: 5)
    de14:	0000a607 	andeq	sl, r0, r7, lsl #12
    de18:	690d1800 	stmdbvs	sp, {fp, ip}
    de1c:	05000001 	streq	r0, [r0, #-1]
    de20:	01530ac8 	cmpeq	r3, r8, asr #21
    de24:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    de28:	000033bd 			; <UNDEFINED> instruction: 0x000033bd
    de2c:	161dca05 	ldrne	ip, [sp], -r5, lsl #20
    de30:	20000006 	andcs	r0, r0, r6
    de34:	0033360d 	eorseq	r3, r3, sp, lsl #12
    de38:	1dcc0500 	cfstr64ne	mvdx0, [ip]
    de3c:	00000640 	andeq	r0, r0, r0, asr #12
    de40:	06eb0d24 	strbteq	r0, [fp], r4, lsr #26
    de44:	cf050000 	svcgt	0x00050000
    de48:	0006640d 	andeq	r6, r6, sp, lsl #8
    de4c:	a60d2800 	strge	r2, [sp], -r0, lsl #16
    de50:	05000008 	streq	r0, [r0, #-8]
    de54:	067e09d0 			; <UNDEFINED> instruction: 0x067e09d0
    de58:	102c0000 	eorne	r0, ip, r0
    de5c:	0062755f 	rsbeq	r7, r2, pc, asr r5
    de60:	2111d305 	tstcs	r1, r5, lsl #6
    de64:	30000003 	andcc	r0, r0, r3
    de68:	70755f10 	rsbsvc	r5, r5, r0, lsl pc
    de6c:	12d40500 	sbcsne	r0, r4, #0, 10
    de70:	00000349 	andeq	r0, r0, r9, asr #6
    de74:	755f1038 	ldrbvc	r1, [pc, #-56]	; de44 <_Min_Stack_Size+0xda44>
    de78:	d5050072 	strle	r0, [r5, #-114]	; 0xffffff8e
    de7c:	0000a607 	andeq	sl, r0, r7, lsl #12
    de80:	2d0d3c00 	stccs	12, cr3, [sp, #-0]
    de84:	05000001 	streq	r0, [r0, #-1]
    de88:	068411d8 	pkhtbeq	r1, r4, r8, asr #3
    de8c:	0d400000 	stcleq	0, cr0, [r0, #-0]
    de90:	00000876 	andeq	r0, r0, r6, ror r8
    de94:	9411d905 	ldrls	sp, [r1], #-2309	; 0xfffff6fb
    de98:	43000006 	movwmi	r0, #6
    de9c:	626c5f10 	rsbvs	r5, ip, #16, 30	; 0x40
    dea0:	11dc0500 	bicsne	r0, ip, r0, lsl #10
    dea4:	00000321 	andeq	r0, r0, r1, lsr #6
    dea8:	07250d44 	streq	r0, [r5, -r4, asr #26]!
    deac:	df050000 	svcle	0x00050000
    deb0:	0000a607 	andeq	sl, r0, r7, lsl #12
    deb4:	380d4c00 	stmdacc	sp, {sl, fp, lr}
    deb8:	05000004 	streq	r0, [r0, #-4]
    debc:	00d90ae0 	sbcseq	r0, r9, r0, ror #21
    dec0:	0d500000 	ldcleq	0, cr0, [r0, #-0]
    dec4:	00004baa 	andeq	r4, r0, sl, lsr #23
    dec8:	b012e305 	andslt	lr, r2, r5, lsl #6
    decc:	54000004 	strpl	r0, [r0], #-4
    ded0:	0003f10d 	andeq	pc, r3, sp, lsl #2
    ded4:	0ce70500 	cfstr64eq	mvdx0, [r7]
    ded8:	0000016d 	andeq	r0, r0, sp, ror #2
    dedc:	02e30d58 	rsceq	r0, r3, #88, 26	; 0x1600
    dee0:	e9050000 	stmdb	r5, {}	; <UNPREDICTABLE>
    dee4:	0001470e 	andeq	r4, r1, lr, lsl #14
    dee8:	510d5c00 	tstpl	sp, r0, lsl #24
    deec:	05000006 	streq	r0, [r0, #-6]
    def0:	00a609ea 	adceq	r0, r6, sl, ror #19
    def4:	00640000 	rsbeq	r0, r4, r0
    def8:	0000a615 	andeq	sl, r0, r5, lsl r6
    defc:	0004b000 	andeq	fp, r4, r0
    df00:	04b01600 	ldrteq	r1, [r0], #1536	; 0x600
    df04:	53160000 	tstpl	r6, #0
    df08:	16000001 	strne	r0, [r0], -r1
    df0c:	00000604 	andeq	r0, r0, r4, lsl #12
    df10:	0000a616 	andeq	sl, r0, r6, lsl r6
    df14:	04110000 	ldreq	r0, [r1], #-0
    df18:	000004bb 			; <UNDEFINED> instruction: 0x000004bb
    df1c:	0004b005 	andeq	fp, r4, r5
    df20:	06cc1700 	strbeq	r1, [ip], r0, lsl #14
    df24:	04280000 	strteq	r0, [r8], #-0
    df28:	08026505 	stmdaeq	r2, {r0, r2, r8, sl, sp, lr}
    df2c:	00000604 	andeq	r0, r0, r4, lsl #12
    df30:	00062c18 	andeq	r2, r6, r8, lsl ip
    df34:	02670500 	rsbeq	r0, r7, #0, 10
    df38:	0000a607 	andeq	sl, r0, r7, lsl #12
    df3c:	06180000 	ldreq	r0, [r8], -r0
    df40:	05000008 	streq	r0, [r0, #-8]
    df44:	f00b026c 			; <UNDEFINED> instruction: 0xf00b026c
    df48:	04000006 	streq	r0, [r0], #-6
    df4c:	0007ee18 	andeq	lr, r7, r8, lsl lr
    df50:	026c0500 	rsbeq	r0, ip, #0, 10
    df54:	0006f014 	andeq	pc, r6, r4, lsl r0	; <UNPREDICTABLE>
    df58:	93180800 	tstls	r8, #0, 16
    df5c:	05000002 	streq	r0, [r0, #-2]
    df60:	f01e026c 			; <UNDEFINED> instruction: 0xf01e026c
    df64:	0c000006 	stceq	0, cr0, [r0], {6}
    df68:	00068918 	andeq	r8, r6, r8, lsl r9
    df6c:	026e0500 	rsbeq	r0, lr, #0, 10
    df70:	0000a608 	andeq	sl, r0, r8, lsl #12
    df74:	42181000 	andsmi	r1, r8, #0
    df78:	05000000 	streq	r0, [r0, #-0]
    df7c:	f008026f 			; <UNDEFINED> instruction: 0xf008026f
    df80:	14000008 	strne	r0, [r0], #-8
    df84:	0006ab18 	andeq	sl, r6, r8, lsl fp
    df88:	02720500 	rsbseq	r0, r2, #0, 10
    df8c:	0000a607 	andeq	sl, r0, r7, lsl #12
    df90:	9b183000 	blls	619f98 <_Min_Stack_Size+0x619b98>
    df94:	05000006 	streq	r0, [r0, #-6]
    df98:	05160273 	ldreq	r0, [r6, #-627]	; 0xfffffd8d
    df9c:	34000009 	strcc	r0, [r0], #-9
    dfa0:	00054118 	andeq	r4, r5, r8, lsl r1
    dfa4:	02750500 	rsbseq	r0, r5, #0, 10
    dfa8:	0000a607 	andeq	sl, r0, r7, lsl #12
    dfac:	e4183800 	ldr	r3, [r8], #-2048	; 0xfffff800
    dfb0:	05000007 	streq	r0, [r0, #-7]
    dfb4:	160a0277 			; <UNDEFINED> instruction: 0x160a0277
    dfb8:	3c000009 	stccc	0, cr0, [r0], {9}
    dfbc:	0003fd18 	andeq	pc, r3, r8, lsl sp	; <UNPREDICTABLE>
    dfc0:	027a0500 	rsbseq	r0, sl, #0, 10
    dfc4:	0001d313 	andeq	sp, r1, r3, lsl r3
    dfc8:	a6184000 	ldrge	r4, [r8], -r0
    dfcc:	05000001 	streq	r0, [r0, #-1]
    dfd0:	a607027b 			; <UNDEFINED> instruction: 0xa607027b
    dfd4:	44000000 	strmi	r0, [r0], #-0
    dfd8:	0008c018 	andeq	ip, r8, r8, lsl r0
    dfdc:	027c0500 	rsbseq	r0, ip, #0, 10
    dfe0:	0001d313 	andeq	sp, r1, r3, lsl r3
    dfe4:	a3184800 	tstge	r8, #0, 16
    dfe8:	05000005 	streq	r0, [r0, #-5]
    dfec:	1c14027d 	lfmne	f0, 4, [r4], {125}	; 0x7d
    dff0:	4c000009 	stcmi	0, cr0, [r0], {9}
    dff4:	00030518 	andeq	r0, r3, r8, lsl r5
    dff8:	02800500 	addeq	r0, r0, #0, 10
    dffc:	0000a607 	andeq	sl, r0, r7, lsl #12
    e000:	f6185000 			; <UNDEFINED> instruction: 0xf6185000
    e004:	05000005 	streq	r0, [r0, #-5]
    e008:	04090281 	streq	r0, [r9], #-641	; 0xfffffd7f
    e00c:	54000006 	strpl	r0, [r0], #-6
    e010:	00061c18 	andeq	r1, r6, r8, lsl ip
    e014:	02a40500 	adceq	r0, r4, #0, 10
    e018:	0008cb07 	andeq	ip, r8, r7, lsl #22
    e01c:	76195800 	ldrvc	r5, [r9], -r0, lsl #16
    e020:	0500004a 	streq	r0, [r0, #-74]	; 0xffffffb6
    e024:	041302a8 	ldreq	r0, [r3], #-680	; 0xfffffd58
    e028:	48000003 	stmdami	r0, {r0, r1}
    e02c:	038a1901 	orreq	r1, sl, #16384	; 0x4000
    e030:	a9050000 	stmdbge	r5, {}	; <UNPREDICTABLE>
    e034:	02c11202 	sbceq	r1, r1, #536870912	; 0x20000000
    e038:	014c0000 	mrseq	r0, (UNDEF: 76)
    e03c:	00083219 	andeq	r3, r8, r9, lsl r2
    e040:	02ad0500 	adceq	r0, sp, #0, 10
    e044:	00092d0c 	andeq	r2, r9, ip, lsl #26
    e048:	1902dc00 	stmdbne	r2, {sl, fp, ip, lr, pc}
    e04c:	00000171 	andeq	r0, r0, r1, ror r1
    e050:	1002b205 	andne	fp, r2, r5, lsl #4
    e054:	000006b1 			; <UNDEFINED> instruction: 0x000006b1
    e058:	431902e0 	tstmi	r9, #224, 4
    e05c:	05000001 	streq	r0, [r0, #-1]
    e060:	390a02b4 	stmdbcc	sl, {r2, r4, r5, r7, r9}
    e064:	ec000009 	stc	0, cr0, [r0], {9}
    e068:	04110002 	ldreq	r0, [r1], #-2
    e06c:	0000060a 	andeq	r0, r0, sl, lsl #12
    e070:	b0080102 	andlt	r0, r8, r2, lsl #2
    e074:	05000007 	streq	r0, [r0, #-7]
    e078:	0000060a 	andeq	r0, r0, sl, lsl #12
    e07c:	04920411 	ldreq	r0, [r2], #1041	; 0x411
    e080:	a6150000 	ldrge	r0, [r5], -r0
    e084:	3a000000 	bcc	e08c <_Min_Stack_Size+0xdc8c>
    e088:	16000006 	strne	r0, [r0], -r6
    e08c:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    e090:	00015316 	andeq	r5, r1, r6, lsl r3
    e094:	063a1600 	ldrteq	r1, [sl], -r0, lsl #12
    e098:	a6160000 	ldrge	r0, [r6], -r0
    e09c:	00000000 	andeq	r0, r0, r0
    e0a0:	06110411 			; <UNDEFINED> instruction: 0x06110411
    e0a4:	04110000 	ldreq	r0, [r1], #-0
    e0a8:	0000061c 	andeq	r0, r0, ip, lsl r6
    e0ac:	0000e515 	andeq	lr, r0, r5, lsl r5
    e0b0:	00066400 	andeq	r6, r6, r0, lsl #8
    e0b4:	04b01600 	ldrteq	r1, [r0], #1536	; 0x600
    e0b8:	53160000 	tstpl	r6, #0
    e0bc:	16000001 	strne	r0, [r0], -r1
    e0c0:	000000e5 	andeq	r0, r0, r5, ror #1
    e0c4:	0000a616 	andeq	sl, r0, r6, lsl r6
    e0c8:	04110000 	ldreq	r0, [r1], #-0
    e0cc:	00000646 	andeq	r0, r0, r6, asr #12
    e0d0:	0000a615 	andeq	sl, r0, r5, lsl r6
    e0d4:	00067e00 	andeq	r7, r6, r0, lsl #28
    e0d8:	04b01600 	ldrteq	r1, [r0], #1536	; 0x600
    e0dc:	53160000 	tstpl	r6, #0
    e0e0:	00000001 	andeq	r0, r0, r1
    e0e4:	066a0411 			; <UNDEFINED> instruction: 0x066a0411
    e0e8:	680a0000 	stmdavs	sl, {}	; <UNPREDICTABLE>
    e0ec:	94000000 	strls	r0, [r0], #-0
    e0f0:	0b000006 	bleq	e110 <_Min_Stack_Size+0xdd10>
    e0f4:	000000ad 	andeq	r0, r0, sp, lsr #1
    e0f8:	680a0002 	stmdavs	sl, {r1}
    e0fc:	a4000000 	strge	r0, [r0], #-0
    e100:	0b000006 	bleq	e120 <_Min_Stack_Size+0xdd20>
    e104:	000000ad 	andeq	r0, r0, sp, lsr #1
    e108:	9f070000 	svcls	0x00070000
    e10c:	05000001 	streq	r0, [r0, #-1]
    e110:	4f1a0124 	svcmi	0x001a0124
    e114:	1a000003 	bne	e128 <_Min_Stack_Size+0xdd28>
    e118:	00000800 	andeq	r0, r0, r0, lsl #16
    e11c:	0128050c 			; <UNDEFINED> instruction: 0x0128050c
    e120:	0006ea08 	andeq	lr, r6, r8, lsl #20
    e124:	067d1800 	ldrbteq	r1, [sp], -r0, lsl #16
    e128:	2a050000 	bcs	14e130 <_Min_Stack_Size+0x14dd30>
    e12c:	06ea1101 	strbteq	r1, [sl], r1, lsl #2
    e130:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    e134:	00000370 	andeq	r0, r0, r0, ror r3
    e138:	07012b05 	streq	r2, [r1, -r5, lsl #22]
    e13c:	000000a6 	andeq	r0, r0, r6, lsr #1
    e140:	06831804 	streq	r1, [r3], r4, lsl #16
    e144:	2c050000 	stccs	0, cr0, [r5], {-0}
    e148:	06f00b01 	ldrbteq	r0, [r0], r1, lsl #22
    e14c:	00080000 	andeq	r0, r8, r0
    e150:	06b10411 	ssateq	r0, #18, r1, lsl #8
    e154:	04110000 	ldreq	r0, [r1], #-0
    e158:	000006a4 	andeq	r0, r0, r4, lsr #13
    e15c:	0000301a 	andeq	r3, r0, sl, lsl r0
    e160:	44050e00 	strmi	r0, [r5], #-3584	; 0xfffff200
    e164:	072f0801 	streq	r0, [pc, -r1, lsl #16]!
    e168:	d3180000 	tstle	r8, #0
    e16c:	05000006 	streq	r0, [r0, #-6]
    e170:	2f120145 	svccs	0x00120145
    e174:	00000007 	andeq	r0, r0, r7
    e178:	0003f718 	andeq	pc, r3, r8, lsl r7	; <UNPREDICTABLE>
    e17c:	01460500 	cmpeq	r6, r0, lsl #10
    e180:	00072f12 	andeq	r2, r7, r2, lsl pc
    e184:	be180600 	cfmsub32lt	mvax0, mvfx0, mvfx8, mvfx0
    e188:	05000007 	streq	r0, [r0, #-7]
    e18c:	6f120147 	svcvs	0x00120147
    e190:	0c000000 	stceq	0, cr0, [r0], {-0}
    e194:	006f0a00 	rsbeq	r0, pc, r0, lsl #20
    e198:	073f0000 	ldreq	r0, [pc, -r0]!
    e19c:	ad0b0000 	stcge	0, cr0, [fp, #-0]
    e1a0:	02000000 	andeq	r0, r0, #0
    e1a4:	05d01b00 	ldrbeq	r1, [r0, #2816]	; 0xb00
    e1a8:	54070285 	strpl	r0, [r7], #-645	; 0xfffffd7b
    e1ac:	18000008 	stmdane	r0, {r3}
    e1b0:	0000042b 	andeq	r0, r0, fp, lsr #8
    e1b4:	18028705 	stmdane	r2, {r0, r2, r8, r9, sl, pc}
    e1b8:	000000ad 	andeq	r0, r0, sp, lsr #1
    e1bc:	07811800 	streq	r1, [r1, r0, lsl #16]
    e1c0:	88050000 	stmdahi	r5, {}	; <UNPREDICTABLE>
    e1c4:	06041202 	streq	r1, [r4], -r2, lsl #4
    e1c8:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    e1cc:	000003aa 	andeq	r0, r0, sl, lsr #7
    e1d0:	10028905 	andne	r8, r2, r5, lsl #18
    e1d4:	00000854 	andeq	r0, r0, r4, asr r8
    e1d8:	08971808 	ldmeq	r7, {r3, fp, ip}
    e1dc:	8a050000 	bhi	14e1e4 <_Min_Stack_Size+0x14dde4>
    e1e0:	01e91702 	mvneq	r1, r2, lsl #14
    e1e4:	18240000 	stmdane	r4!, {}	; <UNPREDICTABLE>
    e1e8:	000002a3 	andeq	r0, r0, r3, lsr #5
    e1ec:	0f028b05 	svceq	0x00028b05
    e1f0:	000000a6 	andeq	r0, r0, r6, lsr #1
    e1f4:	06781848 	ldrbteq	r1, [r8], -r8, asr #16
    e1f8:	8c050000 	stchi	0, cr0, [r5], {-0}
    e1fc:	009f2c02 	addseq	r2, pc, r2, lsl #24
    e200:	18500000 	ldmdane	r0, {}^	; <UNPREDICTABLE>
    e204:	000008ad 	andeq	r0, r0, sp, lsr #17
    e208:	1a028d05 	bne	b1624 <_Min_Stack_Size+0xb1224>
    e20c:	000006f6 	strdeq	r0, [r0], -r6
    e210:	06331858 			; <UNDEFINED> instruction: 0x06331858
    e214:	8e050000 	cdphi	0, 0, cr0, cr5, cr0, {0}
    e218:	01471602 	cmpeq	r7, r2, lsl #12
    e21c:	18680000 	stmdane	r8!, {}^	; <UNPREDICTABLE>
    e220:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    e224:	16028f05 	strne	r8, [r2], -r5, lsl #30
    e228:	00000147 	andeq	r0, r0, r7, asr #2
    e22c:	00fa1870 	rscseq	r1, sl, r0, ror r8
    e230:	90050000 	andls	r0, r5, r0
    e234:	01471602 	cmpeq	r7, r2, lsl #12
    e238:	18780000 	ldmdane	r8!, {}^	; <UNPREDICTABLE>
    e23c:	00000815 	andeq	r0, r0, r5, lsl r8
    e240:	10029105 	andne	r9, r2, r5, lsl #2
    e244:	00000864 	andeq	r0, r0, r4, ror #16
    e248:	039e1880 	orrseq	r1, lr, #128, 16	; 0x800000
    e24c:	92050000 	andls	r0, r5, #0
    e250:	08741002 	ldmdaeq	r4!, {r1, ip}^
    e254:	18880000 	stmne	r8, {}	; <UNPREDICTABLE>
    e258:	00000065 	andeq	r0, r0, r5, rrx
    e25c:	0f029305 	svceq	0x00029305
    e260:	000000a6 	andeq	r0, r0, r6, lsr #1
    e264:	025f18a0 	subseq	r1, pc, #160, 16	; 0xa00000
    e268:	94050000 	strls	r0, [r5], #-0
    e26c:	01471602 	cmpeq	r7, r2, lsl #12
    e270:	18a40000 	stmiane	r4!, {}	; <UNPREDICTABLE>
    e274:	000000e1 	andeq	r0, r0, r1, ror #1
    e278:	16029505 	strne	r9, [r2], -r5, lsl #10
    e27c:	00000147 	andeq	r0, r0, r7, asr #2
    e280:	023418ac 	eorseq	r1, r4, #172, 16	; 0xac0000
    e284:	96050000 	strls	r0, [r5], -r0
    e288:	01471602 	cmpeq	r7, r2, lsl #12
    e28c:	18b40000 	ldmne	r4!, {}	; <UNPREDICTABLE>
    e290:	0000007c 	andeq	r0, r0, ip, ror r0
    e294:	16029705 	strne	r9, [r2], -r5, lsl #14
    e298:	00000147 	andeq	r0, r0, r7, asr #2
    e29c:	058218bc 	streq	r1, [r2, #2236]	; 0x8bc
    e2a0:	98050000 	stmdals	r5, {}	; <UNPREDICTABLE>
    e2a4:	01471602 	cmpeq	r7, r2, lsl #12
    e2a8:	18c40000 	stmiane	r4, {}^	; <UNPREDICTABLE>
    e2ac:	0000062a 	andeq	r0, r0, sl, lsr #12
    e2b0:	08029905 	stmdaeq	r2, {r0, r2, r8, fp, ip, pc}
    e2b4:	000000a6 	andeq	r0, r0, r6, lsr #1
    e2b8:	0a0a00cc 	beq	28e5f0 <_Min_Stack_Size+0x28e1f0>
    e2bc:	64000006 	strvs	r0, [r0], #-6
    e2c0:	0b000008 	bleq	e2e8 <_Min_Stack_Size+0xdee8>
    e2c4:	000000ad 	andeq	r0, r0, sp, lsr #1
    e2c8:	0a0a0019 	beq	28e334 <_Min_Stack_Size+0x28df34>
    e2cc:	74000006 	strvc	r0, [r0], #-6
    e2d0:	0b000008 	bleq	e2f8 <_Min_Stack_Size+0xdef8>
    e2d4:	000000ad 	andeq	r0, r0, sp, lsr #1
    e2d8:	0a0a0007 	beq	28e2fc <_Min_Stack_Size+0x28defc>
    e2dc:	84000006 	strhi	r0, [r0], #-6
    e2e0:	0b000008 	bleq	e308 <_Min_Stack_Size+0xdf08>
    e2e4:	000000ad 	andeq	r0, r0, sp, lsr #1
    e2e8:	f01b0017 			; <UNDEFINED> instruction: 0xf01b0017
    e2ec:	07029e05 	streq	r9, [r2, -r5, lsl #28]
    e2f0:	000008ab 	andeq	r0, r0, fp, lsr #17
    e2f4:	00044018 	andeq	r4, r4, r8, lsl r0
    e2f8:	02a10500 	adceq	r0, r1, #0, 10
    e2fc:	0008ab1b 	andeq	sl, r8, fp, lsl fp
    e300:	c0180000 	andsgt	r0, r8, r0
    e304:	05000002 	streq	r0, [r0, #-2]
    e308:	bb1802a2 	bllt	60ed98 <_Min_Stack_Size+0x60e998>
    e30c:	78000008 	stmdavc	r0, {r3}
    e310:	03490a00 	movteq	r0, #39424	; 0x9a00
    e314:	08bb0000 	ldmeq	fp!, {}	; <UNPREDICTABLE>
    e318:	ad0b0000 	stcge	0, cr0, [fp, #-0]
    e31c:	1d000000 	stcne	0, cr0, [r0, #-0]
    e320:	00ad0a00 	adceq	r0, sp, r0, lsl #20
    e324:	08cb0000 	stmiaeq	fp, {}^	; <UNPREDICTABLE>
    e328:	ad0b0000 	stcge	0, cr0, [fp, #-0]
    e32c:	1d000000 	stcne	0, cr0, [r0, #-0]
    e330:	05f01c00 	ldrbeq	r1, [r0, #3072]!	; 0xc00
    e334:	f0030283 			; <UNDEFINED> instruction: 0xf0030283
    e338:	1d000008 	stcne	0, cr0, [r0, #-32]	; 0xffffffe0
    e33c:	000006cc 	andeq	r0, r0, ip, asr #13
    e340:	0b029a05 	bleq	b4b5c <_Min_Stack_Size+0xb475c>
    e344:	0000073f 	andeq	r0, r0, pc, lsr r7
    e348:	00087c1d 	andeq	r7, r8, sp, lsl ip
    e34c:	02a30500 	adceq	r0, r3, #0, 10
    e350:	0008840b 	andeq	r8, r8, fp, lsl #8
    e354:	0a0a0000 	beq	28e35c <_Min_Stack_Size+0x28df5c>
    e358:	00000006 	andeq	r0, r0, r6
    e35c:	0b000009 	bleq	e388 <_Min_Stack_Size+0xdf88>
    e360:	000000ad 	andeq	r0, r0, sp, lsr #1
    e364:	c01e0018 	andsgt	r0, lr, r8, lsl r0
    e368:	11000000 	mrsne	r0, (UNDEF: 0)
    e36c:	00090004 	andeq	r0, r9, r4
    e370:	09161f00 	ldmdbeq	r6, {r8, r9, sl, fp, ip}
    e374:	b0160000 	andslt	r0, r6, r0
    e378:	00000004 	andeq	r0, r0, r4
    e37c:	090b0411 	stmdbeq	fp, {r0, r4, sl}
    e380:	04110000 	ldreq	r0, [r1], #-0
    e384:	000001d3 	ldrdeq	r0, [r0], -r3
    e388:	00092d1f 	andeq	r2, r9, pc, lsl sp
    e38c:	00a61600 	adceq	r1, r6, r0, lsl #12
    e390:	11000000 	mrsne	r0, (UNDEF: 0)
    e394:	00093304 	andeq	r3, r9, r4, lsl #6
    e398:	22041100 	andcs	r1, r4, #0, 2
    e39c:	0a000009 	beq	e3c8 <_Min_Stack_Size+0xdfc8>
    e3a0:	000006a4 	andeq	r0, r0, r4, lsr #13
    e3a4:	00000949 	andeq	r0, r0, r9, asr #18
    e3a8:	0000ad0b 	andeq	sl, r0, fp, lsl #26
    e3ac:	20000200 	andcs	r0, r0, r0, lsl #4
    e3b0:	000007d2 	ldrdeq	r0, [r0], -r2
    e3b4:	17033305 	strne	r3, [r3, -r5, lsl #6]
    e3b8:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    e3bc:	0007cb20 	andeq	ip, r7, r0, lsr #22
    e3c0:	03340500 	teqeq	r4, #0, 10
    e3c4:	0004b61d 	andeq	fp, r4, sp, lsl r6
    e3c8:	0e042100 	adfeqs	f2, f4, f0
    e3cc:	09019607 	stmdbeq	r1, {r0, r1, r2, r9, sl, ip, pc}
    e3d0:	00000a2d 	andeq	r0, r0, sp, lsr #20
    e3d4:	001ac918 	andseq	ip, sl, r8, lsl r9
    e3d8:	01980700 	orrseq	r0, r8, r0, lsl #14
    e3dc:	000a3d12 	andeq	r3, sl, r2, lsl sp
    e3e0:	ad180000 	ldcge	0, cr0, [r8, #-0]
    e3e4:	07000005 	streq	r0, [r0, -r5]
    e3e8:	42120199 	andsmi	r0, r2, #1073741862	; 0x40000026
    e3ec:	2000000a 	andcs	r0, r0, sl
    e3f0:	001a6218 	andseq	r6, sl, r8, lsl r2
    e3f4:	019a0700 	orrseq	r0, sl, r0, lsl #14
    e3f8:	000a3d12 	andeq	r3, sl, r2, lsl sp
    e3fc:	11188000 	tstne	r8, r0
    e400:	0700001c 	smladeq	r0, ip, r0, r0
    e404:	4212019b 	andsmi	r0, r2, #-1073741786	; 0xc0000026
    e408:	a000000a 	andge	r0, r0, sl
    e40c:	0017d919 	andseq	sp, r7, r9, lsl r9
    e410:	019c0700 	orrseq	r0, ip, r0, lsl #14
    e414:	000a3d12 	andeq	r3, sl, r2, lsl sp
    e418:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    e41c:	000005c1 	andeq	r0, r0, r1, asr #11
    e420:	12019d07 	andne	r9, r1, #448	; 0x1c0
    e424:	00000a42 	andeq	r0, r0, r2, asr #20
    e428:	89190120 	ldmdbhi	r9, {r5, r8}
    e42c:	07000017 	smladeq	r0, r7, r0, r0
    e430:	3d12019e 	ldfccs	f0, [r2, #-632]	; 0xfffffd88
    e434:	8000000a 	andhi	r0, r0, sl
    e438:	00381901 	eorseq	r1, r8, r1, lsl #18
    e43c:	9f070000 	svcls	0x00070000
    e440:	0a421201 	beq	1092c4c <_Min_Stack_Size+0x109284c>
    e444:	01a00000 	moveq	r0, r0
    e448:	0019e119 	andseq	lr, r9, r9, lsl r1
    e44c:	01a00700 	lsleq	r0, r0, #14
    e450:	000a3d12 	andeq	r3, sl, r2, lsl sp
    e454:	19020000 	stmdbne	r2, {}	; <UNPREDICTABLE>
    e458:	000005dd 	ldrdeq	r0, [r0], -sp
    e45c:	1201a107 	andne	sl, r1, #-1073741823	; 0xc0000001
    e460:	00000a52 	andeq	r0, r0, r2, asr sl
    e464:	49220220 	stmdbmi	r2!, {r5, r9}
    e468:	a2070050 	andge	r0, r7, #80	; 0x50
    e46c:	0a721201 	beq	1c92c78 <_Min_Stack_Size+0x1c92878>
    e470:	03000000 	movweq	r0, #0
    e474:	0006d919 	andeq	sp, r6, r9, lsl r9
    e478:	01a30700 			; <UNDEFINED> instruction: 0x01a30700
    e47c:	000a7712 	andeq	r7, sl, r2, lsl r7
    e480:	1903f000 	stmdbne	r3, {ip, sp, lr, pc}
    e484:	00001c1a 	andeq	r1, r0, sl, lsl ip
    e488:	1201a407 	andne	sl, r1, #117440512	; 0x7000000
    e48c:	00000082 	andeq	r0, r0, r2, lsl #1
    e490:	0a000e00 	beq	11c98 <_Min_Stack_Size+0x11898>
    e494:	00000082 	andeq	r0, r0, r2, lsl #1
    e498:	00000a3d 	andeq	r0, r0, sp, lsr sl
    e49c:	0000ad0b 	andeq	sl, r0, fp, lsl #26
    e4a0:	04000700 	streq	r0, [r0], #-1792	; 0xfffff900
    e4a4:	00000a2d 	andeq	r0, r0, sp, lsr #20
    e4a8:	0000760a 	andeq	r7, r0, sl, lsl #12
    e4ac:	000a5200 	andeq	r5, sl, r0, lsl #4
    e4b0:	00ad0b00 	adceq	r0, sp, r0, lsl #22
    e4b4:	00170000 	andseq	r0, r7, r0
    e4b8:	0000760a 	andeq	r7, r0, sl, lsl #12
    e4bc:	000a6200 	andeq	r6, sl, r0, lsl #4
    e4c0:	00ad0b00 	adceq	r0, sp, r0, lsl #22
    e4c4:	00370000 	eorseq	r0, r7, r0
    e4c8:	00005e0a 	andeq	r5, r0, sl, lsl #28
    e4cc:	000a7200 	andeq	r7, sl, r0, lsl #4
    e4d0:	00ad0b00 	adceq	r0, sp, r0, lsl #22
    e4d4:	00ef0000 	rsceq	r0, pc, r0
    e4d8:	000a6204 	andeq	r6, sl, r4, lsl #4
    e4dc:	00760a00 	rsbseq	r0, r6, r0, lsl #20
    e4e0:	0a880000 	beq	fe20e4e8 <__StackLimit+0xde1ee4e8>
    e4e4:	ad230000 	stcge	0, cr0, [r3, #-0]
    e4e8:	83000000 	movwhi	r0, #0
    e4ec:	ce070002 	cdpgt	0, 0, cr0, cr7, cr2, {0}
    e4f0:	0700001a 	smladeq	r0, sl, r0, r0
    e4f4:	630401a5 	movwvs	r0, #16805	; 0x41a5
    e4f8:	20000009 	andcs	r0, r0, r9
    e4fc:	000000d4 	ldrdeq	r0, [r0], -r4
    e500:	19080407 	stmdbne	r8, {r0, r1, r2, sl}
    e504:	0000003f 	andeq	r0, r0, pc, lsr r0
    e508:	00059324 	andeq	r9, r5, r4, lsr #6
    e50c:	114a0800 	cmpne	sl, r0, lsl #16
    e510:	00000076 	andeq	r0, r0, r6, ror r0
    e514:	0000630a 	andeq	r6, r0, sl, lsl #6
    e518:	000abe00 	andeq	fp, sl, r0, lsl #28
    e51c:	00ad0b00 	adceq	r0, sp, r0, lsl #22
    e520:	000f0000 	andeq	r0, pc, r0
    e524:	000aae05 	andeq	sl, sl, r5, lsl #28
    e528:	07602400 	strbeq	r2, [r0, -r0, lsl #8]!
    e52c:	4c080000 	stcmi	0, cr0, [r8], {-0}
    e530:	000abe17 	andeq	fp, sl, r7, lsl lr
    e534:	00630a00 	rsbeq	r0, r3, r0, lsl #20
    e538:	0adf0000 	beq	ff7ce540 <__StackLimit+0xdf7ae540>
    e53c:	ad0b0000 	stcge	0, cr0, [fp, #-0]
    e540:	07000000 	streq	r0, [r0, -r0]
    e544:	0acf0500 	beq	ff3cf94c <__StackLimit+0xdf3af94c>
    e548:	b2240000 	eorlt	r0, r4, #0
    e54c:	08000002 	stmdaeq	r0, {r1}
    e550:	0adf174d 	beq	ff7d428c <__StackLimit+0xdf7b428c>
    e554:	07250000 	streq	r0, [r5, -r0]!
    e558:	00006801 	andeq	r6, r0, r1, lsl #16
    e55c:	01330900 	teqeq	r3, r0, lsl #18
    e560:	00000b17 	andeq	r0, r0, r7, lsl fp
    e564:	00084626 	andeq	r4, r8, r6, lsr #12
    e568:	3d266400 	cfstrscc	mvf6, [r6, #-0]
    e56c:	0a000007 	beq	e590 <_Min_Stack_Size+0xe190>
    e570:	00035626 	andeq	r5, r3, r6, lsr #12
    e574:	4c260100 	stfmis	f0, [r6], #-0
    e578:	01000005 	tsteq	r0, r5
    e57c:	00140300 	andseq	r0, r4, r0, lsl #6
    e580:	38090000 	stmdacc	r9, {}	; <UNPREDICTABLE>
    e584:	000af003 	andeq	pc, sl, r3
    e588:	02fe2400 	rscseq	r2, lr, #0, 8
    e58c:	cd090000 	stcgt	0, cr0, [r9, #-0]
    e590:	00008216 	andeq	r8, r0, r6, lsl r2
    e594:	03c02400 	biceq	r2, r0, #0, 8
    e598:	ce090000 	cdpgt	0, 0, cr0, cr9, cr0, {0}
    e59c:	00007611 	andeq	r7, r0, r1, lsl r6
    e5a0:	02f32400 	rscseq	r2, r3, #0, 8
    e5a4:	cf090000 	svcgt	0x00090000
    e5a8:	000b171c 	andeq	r1, fp, ip, lsl r7
    e5ac:	34332700 	ldrtcc	r2, [r3], #-1792	; 0xfffff900
    e5b0:	6b010000 	blvs	4e5b8 <_Min_Stack_Size+0x4e1b8>
    e5b4:	0000a605 	andeq	sl, r0, r5, lsl #12
    e5b8:	00030500 	andeq	r0, r3, r0, lsl #10
    e5bc:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    e5c0:	00003198 	muleq	r0, r8, r1
    e5c4:	d4069501 	strle	r9, [r6], #-1281	; 0xfffffaff
    e5c8:	0608003d 			; <UNDEFINED> instruction: 0x0608003d
    e5cc:	01000000 	mrseq	r0, (UNDEF: 0)
    e5d0:	33c3299c 	biccc	r2, r3, #156, 18	; 0x270000
    e5d4:	76010000 	strvc	r0, [r1], -r0
    e5d8:	00000006 	andeq	r0, r0, r6
    e5dc:	00006e00 	andeq	r6, r0, r0, lsl #28
    e5e0:	919c0100 	orrsls	r0, ip, r0, lsl #2
    e5e4:	2a00000b 	bcs	e618 <_Min_Stack_Size+0xe218>
    e5e8:	0000343d 	andeq	r3, r0, sp, lsr r4
    e5ec:	a6187601 	ldrge	r7, [r8], -r1, lsl #12
    e5f0:	02000000 	andeq	r0, r0, #0
    e5f4:	28007491 	stmdacs	r0, {r0, r4, r7, sl, ip, sp, lr}
    e5f8:	00003426 	andeq	r3, r0, r6, lsr #8
    e5fc:	00065c01 	andeq	r5, r6, r1, lsl #24
    e600:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    e604:	01000000 	mrseq	r0, (UNDEF: 0)
    e608:	32cf299c 	sbccc	r2, pc, #156, 18	; 0x270000
    e60c:	55010000 	strpl	r0, [r1, #-0]
    e610:	00000006 	andeq	r0, r0, r6
    e614:	00001800 	andeq	r1, r0, r0, lsl #16
    e618:	c99c0100 	ldmibgt	ip, {r8}
    e61c:	2b00000b 	blcs	e650 <_Min_Stack_Size+0xe250>
    e620:	0000337a 	andeq	r3, r0, sl, ror r3
    e624:	1a0c5701 	bne	324230 <_Min_Stack_Size+0x323e30>
    e628:	02000003 	andeq	r0, r0, #3
    e62c:	28007491 	stmdacs	r0, {r0, r4, r7, sl, ip, sp, lr}
    e630:	000032c6 	andeq	r3, r0, r6, asr #5
    e634:	00065101 	andeq	r5, r6, r1, lsl #2
    e638:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    e63c:	01000000 	mrseq	r0, (UNDEF: 0)
    e640:	341b289c 	ldrcc	r2, [fp], #-2204	; 0xfffff764
    e644:	4b010000 	blmi	4e64c <_Min_Stack_Size+0x4e24c>
    e648:	00000006 	andeq	r0, r0, r6
    e64c:	00000600 	andeq	r0, r0, r0, lsl #12
    e650:	289c0100 	ldmcs	ip, {r8}
    e654:	0000338c 	andeq	r3, r0, ip, lsl #7
    e658:	00064001 	andeq	r4, r6, r1
    e65c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    e660:	01000000 	mrseq	r0, (UNDEF: 0)
    e664:	33222c9c 			; <UNDEFINED> instruction: 0x33222c9c
    e668:	3b010000 	blcc	4e670 <_Min_Stack_Size+0x4e270>
    e66c:	00000006 	andeq	r0, r0, r6
    e670:	00003000 	andeq	r3, r0, r0
    e674:	259c0100 	ldrcs	r0, [ip, #256]	; 0x100
    e678:	2d00000c 	stccs	0, cr0, [r0, #-48]	; 0xffffffd0
    e67c:	00667562 	rsbeq	r7, r6, r2, ror #10
    e680:	25163c01 	ldrcs	r3, [r6, #-3073]	; 0xfffff3ff
    e684:	0200000c 	andeq	r0, r0, #12
    e688:	11007491 			; <UNDEFINED> instruction: 0x11007491
    e68c:	00009a04 	andeq	r9, r0, r4, lsl #20
    e690:	33a82800 			; <UNDEFINED> instruction: 0x33a82800
    e694:	34010000 	strcc	r0, [r1], #-0
    e698:	00000006 	andeq	r0, r0, r6
    e69c:	00000c00 	andeq	r0, r0, r0, lsl #24
    e6a0:	2e9c0100 	fmlcse	f0, f4, f0
    e6a4:	0000335c 	andeq	r3, r0, ip, asr r3
    e6a8:	a6052f01 	strge	r2, [r5], -r1, lsl #30
    e6ac:	00000000 	andeq	r0, r0, r0
    e6b0:	1a000000 	bne	e6b8 <_Min_Stack_Size+0xe2b8>
    e6b4:	01000000 	mrseq	r0, (UNDEF: 0)
    e6b8:	000c679c 	muleq	ip, ip, r7
    e6bc:	334c2b00 	movtcc	r2, #51968	; 0xcb00
    e6c0:	30010000 	andcc	r0, r1, r0
    e6c4:	000c6c09 	andeq	r6, ip, r9, lsl #24
    e6c8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    e6cc:	00a62f00 	adceq	r2, r6, r0, lsl #30
    e6d0:	04110000 	ldreq	r0, [r1], #-0
    e6d4:	00000c67 	andeq	r0, r0, r7, ror #24
    e6d8:	0032f430 	eorseq	pc, r2, r0, lsr r4	; <UNPREDICTABLE>
    e6dc:	0a2a0100 	beq	a8eae4 <_Min_Stack_Size+0xa8e6e4>
    e6e0:	00000076 	andeq	r0, r0, r6, ror r0
    e6e4:	00000000 	andeq	r0, r0, r0
    e6e8:	00000014 	andeq	r0, r0, r4, lsl r0
    e6ec:	0a319c01 	beq	c756f8 <_Min_Stack_Size+0xc752f8>
    e6f0:	01000033 	tsteq	r0, r3, lsr r0
    e6f4:	00a60525 	adceq	r0, r6, r5, lsr #10
    e6f8:	00000000 	andeq	r0, r0, r0
    e6fc:	001c0000 	andseq	r0, ip, r0
    e700:	9c010000 	stcls	0, cr0, [r1], {-0}
    e704:	00000cb2 			; <UNDEFINED> instruction: 0x00000cb2
    e708:	0032e92b 	eorseq	lr, r2, fp, lsr #18
    e70c:	16260100 	strtne	r0, [r6], -r0, lsl #2
    e710:	00000cb2 			; <UNDEFINED> instruction: 0x00000cb2
    e714:	00749102 	rsbseq	r9, r4, r2, lsl #2
    e718:	00820411 	addeq	r0, r2, r1, lsl r4
    e71c:	d9290000 	stmdble	r9!, {}	; <UNPREDICTABLE>
    e720:	01000032 	tsteq	r0, r2, lsr r0
    e724:	00000619 	andeq	r0, r0, r9, lsl r6
    e728:	00980000 	addseq	r0, r8, r0
    e72c:	9c010000 	stcls	0, cr0, [r1], {-0}
    e730:	00000d20 	andeq	r0, r0, r0, lsr #26
    e734:	00323224 	eorseq	r3, r2, r4, lsr #4
    e738:	131a0100 	tstne	sl, #0, 2
    e73c:	00000d20 	andeq	r0, r0, r0, lsr #26
    e740:	00333d2b 	eorseq	r3, r3, fp, lsr #26
    e744:	0b1b0100 	bleq	6ceb4c <_Min_Stack_Size+0x6ce74c>
    e748:	00000052 	andeq	r0, r0, r2, asr r0
    e74c:	2b5f9102 	blcs	17f2b5c <_Min_Stack_Size+0x17f275c>
    e750:	00003404 	andeq	r3, r0, r4, lsl #8
    e754:	c0101c01 	andsgt	r1, r0, r1, lsl #24
    e758:	02000000 	andeq	r0, r0, #0
    e75c:	be2b6891 	mcrlt	8, 1, r6, cr11, cr1, {4}
    e760:	01000032 	tsteq	r0, r2, lsr r0
    e764:	0d3e141d 	cfldrseq	mvf1, [lr, #-116]!	; 0xffffff8c
    e768:	91030000 	mrsls	r0, (UNDEF: 3)
    e76c:	00320660 	eorseq	r0, r2, r0, ror #12
    e770:	24000000 	strcs	r0, [r0], #-0
    e774:	2d000000 	stccs	0, cr0, [r0, #-0]
    e778:	1e010069 	cdpne	0, 0, cr0, cr1, cr9, {3}
    e77c:	0000b40f 	andeq	fp, r0, pc, lsl #8
    e780:	6c910200 	lfmvs	f0, 4, [r1], {0}
    e784:	760a0000 	strvc	r0, [sl], -r0
    e788:	2b000000 	blcs	e790 <_Min_Stack_Size+0xe390>
    e78c:	3300000d 	movwcc	r0, #13
    e790:	005e0a00 	subseq	r0, lr, r0, lsl #20
    e794:	0d3e0000 	ldceq	0, cr0, [lr, #-0]
    e798:	ad340000 	ldcge	0, cr0, [r4, #-0]
    e79c:	03000000 	movweq	r0, #0
    e7a0:	00066491 	muleq	r6, r1, r4
    e7a4:	000d2b04 	andeq	r2, sp, r4, lsl #22
    e7a8:	34462800 	strbcc	r2, [r6], #-2048	; 0xfffff800
    e7ac:	03010000 	movweq	r0, #4096	; 0x1000
    e7b0:	00000006 	andeq	r0, r0, r6
    e7b4:	00003000 	andeq	r3, r0, r0
    e7b8:	009c0100 	addseq	r0, ip, r0, lsl #2
    e7bc:	0000001e 	andeq	r0, r0, lr, lsl r0
    e7c0:	2c940002 	ldccs	0, cr0, [r4], {2}
    e7c4:	01040000 	mrseq	r0, (UNDEF: 4)
    e7c8:	0000676e 	andeq	r6, r0, lr, ror #14
    e7cc:	00000950 	andeq	r0, r0, r0, asr r9
    e7d0:	00003452 	andeq	r3, r0, r2, asr r4
    e7d4:	000001be 			; <UNDEFINED> instruction: 0x000001be
    e7d8:	00003498 	muleq	r0, r8, r4
    e7dc:	00228001 	eoreq	r8, r2, r1
    e7e0:	00020000 	andeq	r0, r2, r0
    e7e4:	00002ca6 	andeq	r2, r0, r6, lsr #25
    e7e8:	681e0104 	ldmdavs	lr, {r2, r8}
    e7ec:	02100000 	andseq	r0, r0, #0
    e7f0:	05860800 	streq	r0, [r6, #2048]	; 0x800
    e7f4:	34a60800 	strtcc	r0, [r6], #2048	; 0x800
    e7f8:	34d70000 	ldrbcc	r0, [r7], #0
    e7fc:	353f0000 	ldrcc	r0, [pc, #-0]!	; e804 <_Min_Stack_Size+0xe404>
    e800:	80010000 	andhi	r0, r1, r0
    e804:	00000022 	andeq	r0, r0, r2, lsr #32
    e808:	2cba0002 	ldccs	0, cr0, [sl], #8
    e80c:	01040000 	mrseq	r0, (UNDEF: 4)
    e810:	000069a3 	andeq	r6, r0, r3, lsr #19
    e814:	08000588 	stmdaeq	r0, {r3, r7, r8, sl}
    e818:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    e81c:	000034a6 	andeq	r3, r0, r6, lsr #9
    e820:	000034d7 	ldrdeq	r3, [r0], -r7
    e824:	0000353f 	andeq	r3, r0, pc, lsr r5
    e828:	00228001 	eoreq	r8, r2, r1
    e82c:	00020000 	andeq	r0, r2, r0
    e830:	00002cce 	andeq	r2, r0, lr, asr #25
    e834:	6b410104 	blvs	104ec4c <_Min_Stack_Size+0x104e84c>
    e838:	09ac0000 	stmibeq	ip!, {}	; <UNPREDICTABLE>
    e83c:	0aba0800 	beq	fee90844 <__StackLimit+0xdee70844>
    e840:	34a60800 	strtcc	r0, [r6], #2048	; 0x800
    e844:	34d70000 	ldrbcc	r0, [r7], #0
    e848:	353f0000 	ldrcc	r0, [pc, #-0]!	; e850 <_Min_Stack_Size+0xe450>
    e84c:	80010000 	andhi	r0, r1, r0
    e850:	00000022 	andeq	r0, r0, r2, lsr #32
    e854:	2ce20002 	stclcs	0, cr0, [r2], #8
    e858:	01040000 	mrseq	r0, (UNDEF: 4)
    e85c:	00006bfe 	strdeq	r6, [r0], -lr
    e860:	08000abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp}
    e864:	08000b0a 	stmdaeq	r0, {r1, r3, r8, r9, fp}
    e868:	000034a6 	andeq	r3, r0, r6, lsr #9
    e86c:	000034d7 	ldrdeq	r3, [r0], -r7
    e870:	0000353f 	andeq	r3, r0, pc, lsr r5
    e874:	00228001 	eoreq	r8, r2, r1
    e878:	00020000 	andeq	r0, r2, r0
    e87c:	00002cf6 	strdeq	r2, [r0], -r6
    e880:	6c770104 	ldfvse	f0, [r7], #-16
    e884:	0b0c0000 	bleq	30e88c <_Min_Stack_Size+0x30e48c>
    e888:	0b4c0800 	bleq	1310890 <_Min_Stack_Size+0x1310490>
    e88c:	34a60800 	strtcc	r0, [r6], #2048	; 0x800
    e890:	34d70000 	ldrbcc	r0, [r7], #0
    e894:	353f0000 	ldrcc	r0, [pc, #-0]!	; e89c <_Min_Stack_Size+0xe49c>
    e898:	80010000 	andhi	r0, r1, r0
    e89c:	00000022 	andeq	r0, r0, r2, lsr #32
    e8a0:	2d0a0002 	stccs	0, cr0, [sl, #-8]
    e8a4:	01040000 	mrseq	r0, (UNDEF: 4)
    e8a8:	00006cec 	andeq	r6, r0, ip, ror #25
    e8ac:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
    e8b0:	08000b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp}
    e8b4:	0000354b 	andeq	r3, r0, fp, asr #10
    e8b8:	000034d7 	ldrdeq	r3, [r0], -r7
    e8bc:	0000353f 	andeq	r3, r0, pc, lsr r5
    e8c0:	0e4f8001 	cdpeq	0, 4, cr8, cr15, cr1, {0}
    e8c4:	00040000 	andeq	r0, r4, r0
    e8c8:	00002d1e 	andeq	r2, r0, lr, lsl sp
    e8cc:	42560104 	subsmi	r0, r6, #4, 2
    e8d0:	560c0000 	strpl	r0, [ip], -r0
    e8d4:	d7000038 	smladxle	r0, r8, r0, r0
    e8d8:	7c000034 	stcvc	0, cr0, [r0], {52}	; 0x34
    e8dc:	d008000b 	andle	r0, r8, fp
    e8e0:	4c000002 	stcmi	0, cr0, [r0], {2}
    e8e4:	0200006d 	andeq	r0, r0, #109	; 0x6d
    e8e8:	00a00708 	adceq	r0, r0, r8, lsl #14
    e8ec:	04030000 	streq	r0, [r3], #-0
    e8f0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    e8f4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    e8f8:	000000aa 	andeq	r0, r0, sl, lsr #1
    e8fc:	b0050802 	andlt	r0, r5, r2, lsl #16
    e900:	02000001 	andeq	r0, r0, #1
    e904:	07190408 	ldreq	r0, [r9, -r8, lsl #8]
    e908:	c3040000 	movwgt	r0, #16384	; 0x4000
    e90c:	02000038 	andeq	r0, r0, #56	; 0x38
    e910:	0033162a 	eorseq	r1, r3, sl, lsr #12
    e914:	4f040000 	svcmi	0x00040000
    e918:	0200003d 	andeq	r0, r0, #61	; 0x3d
    e91c:	0060152f 	rsbeq	r1, r0, pc, lsr #10
    e920:	04050000 	streq	r0, [r5], #-0
    e924:	00000066 	andeq	r0, r0, r6, rrx
    e928:	00004806 	andeq	r4, r0, r6, lsl #16
    e92c:	00007500 	andeq	r7, r0, r0, lsl #10
    e930:	00750700 	rsbseq	r0, r5, r0, lsl #14
    e934:	05000000 	streq	r0, [r0, #-0]
    e938:	00007b04 	andeq	r7, r0, r4, lsl #22
    e93c:	a4040800 	strge	r0, [r4], #-2048	; 0xfffff800
    e940:	02000046 	andeq	r0, r0, #70	; 0x46
    e944:	00880f36 	addeq	r0, r8, r6, lsr pc
    e948:	04050000 	streq	r0, [r5], #-0
    e94c:	0000008e 	andeq	r0, r0, lr, lsl #1
    e950:	00002c06 	andeq	r2, r0, r6, lsl #24
    e954:	0000a200 	andeq	sl, r0, r0, lsl #4
    e958:	00750700 	rsbseq	r0, r5, r0, lsl #14
    e95c:	75070000 	strvc	r0, [r7, #-0]
    e960:	00000000 	andeq	r0, r0, r0
    e964:	a7080102 	strge	r0, [r8, -r2, lsl #2]
    e968:	09000007 	stmdbeq	r0, {r0, r1, r2}
    e96c:	00003f94 	muleq	r0, r4, pc	; <UNPREDICTABLE>
    e970:	5412bb02 	ldrpl	fp, [r2], #-2818	; 0xfffff4fe
    e974:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    e978:	000046d2 	ldrdeq	r4, [r0], -r2
    e97c:	7c10be02 	ldcvc	14, cr11, [r0], {2}
    e980:	02000000 	andeq	r0, r0, #0
    e984:	07a90601 	streq	r0, [r9, r1, lsl #12]!
    e988:	420a0000 	andmi	r0, sl, #0
    e98c:	0700003c 	smladxeq	r0, ip, r0, r0
    e990:	0000a201 	andeq	sl, r0, r1, lsl #4
    e994:	06170300 	ldreq	r0, [r7], -r0, lsl #6
    e998:	000001f5 	strdeq	r0, [r0], -r5
    e99c:	0037310b 	eorseq	r3, r7, fp, lsl #2
    e9a0:	0e0b0000 	cdpeq	0, 0, cr0, cr11, cr0, {0}
    e9a4:	0100003b 	tsteq	r0, fp, lsr r0
    e9a8:	0040960b 	subeq	r9, r0, fp, lsl #12
    e9ac:	ff0b0200 			; <UNDEFINED> instruction: 0xff0b0200
    e9b0:	03000045 	movweq	r0, #69	; 0x45
    e9b4:	0040220b 	subeq	r2, r0, fp, lsl #4
    e9b8:	c60b0400 	strgt	r0, [fp], -r0, lsl #8
    e9bc:	05000044 	streq	r0, [r0, #-68]	; 0xffffffbc
    e9c0:	0043d80b 	subeq	sp, r3, fp, lsl #16
    e9c4:	520b0600 	andpl	r0, fp, #0, 12
    e9c8:	07000037 	smladxeq	r0, r7, r0, r0
    e9cc:	0044ef0b 	subeq	lr, r4, fp, lsl #30
    e9d0:	fd0b0800 	stc2	8, cr0, [fp, #-0]
    e9d4:	09000044 	stmdbeq	r0, {r2, r6}
    e9d8:	0045da0b 	subeq	sp, r5, fp, lsl #20
    e9dc:	5a0b0a00 	bpl	2d11e4 <_Min_Stack_Size+0x2d0de4>
    e9e0:	0b00003f 	bleq	eae4 <_Min_Stack_Size+0xe6e4>
    e9e4:	0039040b 	eorseq	r0, r9, fp, lsl #8
    e9e8:	cb0b0c00 	blgt	2d19f0 <_Min_Stack_Size+0x2d15f0>
    e9ec:	0d00003c 	stceq	0, cr0, [r0, #-240]	; 0xffffff10
    e9f0:	0045460b 	subeq	r4, r5, fp, lsl #12
    e9f4:	860b0e00 	strhi	r0, [fp], -r0, lsl #28
    e9f8:	0f00003c 	svceq	0x0000003c
    e9fc:	003c9c0b 	eorseq	r9, ip, fp, lsl #24
    ea00:	450b1000 	strmi	r1, [fp, #-0]
    ea04:	1100003b 	tstne	r0, fp, lsr r0
    ea08:	0040060b 	subeq	r0, r0, fp, lsl #12
    ea0c:	fe0b1200 	cdp2	2, 0, cr1, cr11, cr0, {0}
    ea10:	1300003b 	movwne	r0, #59	; 0x3b
    ea14:	0048cf0b 	subeq	ip, r8, fp, lsl #30
    ea18:	c20b1400 	andgt	r1, fp, #0, 8
    ea1c:	15000040 	strne	r0, [r0, #-64]	; 0xffffffc0
    ea20:	003e3f0b 	eorseq	r3, lr, fp, lsl #30
    ea24:	a00b1600 	andge	r1, fp, r0, lsl #12
    ea28:	17000037 	smladxne	r0, r7, r0, r0
    ea2c:	0046220b 	subeq	r2, r6, fp, lsl #4
    ea30:	500b1800 	andpl	r1, fp, r0, lsl #16
    ea34:	19000047 	stmdbne	r0, {r0, r1, r2, r6}
    ea38:	0046300b 	subeq	r3, r6, fp
    ea3c:	4e0b1a00 	vmlami.f32	s2, s22, s0
    ea40:	1b00003c 	blne	eb38 <_Min_Stack_Size+0xe738>
    ea44:	003b7c0b 	eorseq	r7, fp, fp, lsl #24
    ea48:	fb0b1c00 	blx	2d5a52 <_Min_Stack_Size+0x2d5652>
    ea4c:	1d000035 	stcne	0, cr0, [r0, #-212]	; 0xffffff2c
    ea50:	00463e0b 	subeq	r3, r6, fp, lsl #28
    ea54:	4c0b1e00 	stcmi	14, cr1, [fp], {-0}
    ea58:	1f000046 	svcne	0x00000046
    ea5c:	0035940b 	eorseq	r9, r5, fp, lsl #8
    ea60:	e20b2000 	and	r2, fp, #0
    ea64:	21000041 	tstcs	r0, r1, asr #32
    ea68:	003fce0b 	eorseq	ip, pc, fp, lsl #28
    ea6c:	150b2200 	strne	r2, [fp, #-512]	; 0xfffffe00
    ea70:	23000046 	movwcs	r0, #70	; 0x46
    ea74:	003ebc0b 	eorseq	fp, lr, fp, lsl #24
    ea78:	c90b2400 	stmdbgt	fp, {sl, sp}
    ea7c:	25000043 	strcs	r0, [r0, #-67]	; 0xffffffbd
    ea80:	003db20b 	eorseq	fp, sp, fp, lsl #4
    ea84:	4e0b2600 	cfmadd32mi	mvax0, mvfx2, mvfx11, mvfx0
    ea88:	2700003a 	smladxcs	r0, sl, r0, r0
    ea8c:	003dd00b 	eorseq	sp, sp, fp
    ea90:	ea0b2800 	b	2d8a98 <_Min_Stack_Size+0x2d8698>
    ea94:	2900003a 	stmdbcs	r0, {r1, r3, r4, r5}
    ea98:	003de00b 	eorseq	lr, sp, fp
    ea9c:	400b2a00 	andmi	r2, fp, r0, lsl #20
    eaa0:	2b00003f 	blcs	eba4 <_Min_Stack_Size+0xe7a4>
    eaa4:	003d590b 	eorseq	r5, sp, fp, lsl #18
    eaa8:	010b2c00 	tsteq	fp, r0, lsl #24
    eaac:	2d000042 	stccs	0, cr0, [r0, #-264]	; 0xfffffef8
    eab0:	003a8f0b 	eorseq	r8, sl, fp, lsl #30
    eab4:	0a002e00 	beq	1a2bc <_Min_Stack_Size+0x19ebc>
    eab8:	00003cec 	andeq	r3, r0, ip, ror #25
    eabc:	00a20107 	adceq	r0, r2, r7, lsl #2
    eac0:	17040000 	strne	r0, [r4, -r0]
    eac4:	0004ae06 	andeq	sl, r4, r6, lsl #28
    eac8:	39180b00 	ldmdbcc	r8, {r8, r9, fp}
    eacc:	0b000000 	bleq	ead4 <_Min_Stack_Size+0xe6d4>
    ead0:	000047f8 	strdeq	r4, [r0], -r8
    ead4:	39280b01 	stmdbcc	r8!, {r0, r8, r9, fp}
    ead8:	0b020000 	bleq	8eae0 <_Min_Stack_Size+0x8e6e0>
    eadc:	0000394b 	andeq	r3, r0, fp, asr #18
    eae0:	46e20b03 	strbtmi	r0, [r2], r3, lsl #22
    eae4:	0b040000 	bleq	10eaec <_Min_Stack_Size+0x10e6ec>
    eae8:	00004343 	andeq	r4, r0, r3, asr #6
    eaec:	39be0b05 	ldmibcc	lr!, {r0, r2, r8, r9, fp}
    eaf0:	0b060000 	bleq	18eaf8 <_Min_Stack_Size+0x18e6f8>
    eaf4:	00003b33 	andeq	r3, r0, r3, lsr fp
    eaf8:	395b0b07 	ldmdbcc	fp, {r0, r1, r2, r8, r9, fp}^
    eafc:	0b080000 	bleq	20eb04 <_Min_Stack_Size+0x20e704>
    eb00:	000048be 			; <UNDEFINED> instruction: 0x000048be
    eb04:	36870b09 	strcc	r0, [r7], r9, lsl #22
    eb08:	0b0a0000 	bleq	28eb10 <_Min_Stack_Size+0x28e710>
    eb0c:	000047e7 	andeq	r4, r0, r7, ror #15
    eb10:	3ecb0b0b 	vdivcc.f64	d16, d11, d11
    eb14:	0b0c0000 	bleq	30eb1c <_Min_Stack_Size+0x30e71c>
    eb18:	00004767 	andeq	r4, r0, r7, ror #14
    eb1c:	41ef0b0d 	mvnmi	r0, sp, lsl #22
    eb20:	0b0e0000 	bleq	38eb28 <_Min_Stack_Size+0x38e728>
    eb24:	0000458c 	andeq	r4, r0, ip, lsl #11
    eb28:	3a1f0b0f 	bcc	7d176c <_Min_Stack_Size+0x7d136c>
    eb2c:	0b100000 	bleq	40eb34 <_Min_Stack_Size+0x40e734>
    eb30:	00003938 	andeq	r3, r0, r8, lsr r9
    eb34:	41a70b11 			; <UNDEFINED> instruction: 0x41a70b11
    eb38:	0b120000 	bleq	48eb40 <_Min_Stack_Size+0x48e740>
    eb3c:	00003a0a 	andeq	r3, r0, sl, lsl #20
    eb40:	47d60b13 	bfimi	r0, r3, #22, #1
    eb44:	0b140000 	bleq	50eb4c <_Min_Stack_Size+0x50e74c>
    eb48:	000036b1 			; <UNDEFINED> instruction: 0x000036b1
    eb4c:	3e1a0b15 	vmovcc.32	r0, d10[0]
    eb50:	0b160000 	bleq	58eb58 <_Min_Stack_Size+0x58e758>
    eb54:	0000396b 	andeq	r3, r0, fp, ror #18
    eb58:	364e0b17 			; <UNDEFINED> instruction: 0x364e0b17
    eb5c:	0b180000 	bleq	60eb64 <_Min_Stack_Size+0x60e764>
    eb60:	00004864 	andeq	r4, r0, r4, ror #16
    eb64:	45e70b19 	strbmi	r0, [r7, #2841]!	; 0xb19
    eb68:	0b1a0000 	bleq	68eb70 <_Min_Stack_Size+0x68e770>
    eb6c:	000043f6 	strdeq	r4, [r0], -r6
    eb70:	45730b1b 	ldrbmi	r0, [r3, #-2843]!	; 0xfffff4e5
    eb74:	0b1c0000 	bleq	70eb7c <_Min_Stack_Size+0x70e77c>
    eb78:	000046ac 	andeq	r4, r0, ip, lsr #13
    eb7c:	398b0b1d 	stmibcc	fp, {r0, r2, r3, r4, r8, r9, fp}
    eb80:	0b1e0000 	bleq	78eb88 <_Min_Stack_Size+0x78e788>
    eb84:	000044d4 	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    eb88:	440f0b1f 	strmi	r0, [pc], #-2847	; eb90 <_Min_Stack_Size+0xe790>
    eb8c:	0b200000 	bleq	80eb94 <_Min_Stack_Size+0x80e794>
    eb90:	00003a6b 	andeq	r3, r0, fp, ror #20
    eb94:	43550b21 	cmpmi	r5, #33792	; 0x8400
    eb98:	0b220000 	bleq	88eba0 <_Min_Stack_Size+0x88e7a0>
    eb9c:	00003e9c 	muleq	r0, ip, lr
    eba0:	397b0b23 	ldmdbcc	fp!, {r0, r1, r5, r8, r9, fp}^
    eba4:	0b240000 	bleq	90ebac <_Min_Stack_Size+0x90e7ac>
    eba8:	0000452b 	andeq	r4, r0, fp, lsr #10
    ebac:	388e0b25 	stmcc	lr, {r0, r2, r5, r8, r9, fp}
    ebb0:	0b260000 	bleq	98ebb8 <_Min_Stack_Size+0x98e7b8>
    ebb4:	00004691 	muleq	r0, r1, r6
    ebb8:	48ab0b27 	stmiami	fp!, {r0, r1, r2, r5, r8, r9, fp}
    ebbc:	0b280000 	bleq	a0ebc4 <_Min_Stack_Size+0xa0e7c4>
    ebc0:	00004171 	andeq	r4, r0, r1, ror r1
    ebc4:	3c300b29 			; <UNDEFINED> instruction: 0x3c300b29
    ebc8:	0b2a0000 	bleq	a8ebd0 <_Min_Stack_Size+0xa8e7d0>
    ebcc:	00004439 	andeq	r4, r0, r9, lsr r4
    ebd0:	3efa0b2b 			; <UNDEFINED> instruction: 0x3efa0b2b
    ebd4:	0b2c0000 	bleq	b0ebdc <_Min_Stack_Size+0xb0e7dc>
    ebd8:	00003770 	andeq	r3, r0, r0, ror r7
    ebdc:	3cd80b2d 	fldmiaxcc	r8, {d16-d37}	;@ Deprecated
    ebe0:	0b2e0000 	bleq	b8ebe8 <_Min_Stack_Size+0xb8e7e8>
    ebe4:	00004725 	andeq	r4, r0, r5, lsr #14
    ebe8:	3e880b2f 	vdivcc.f64	d0, d8, d31
    ebec:	0b300000 	bleq	c0ebf4 <_Min_Stack_Size+0xc0e7f4>
    ebf0:	000039e4 	andeq	r3, r0, r4, ror #19
    ebf4:	3e670b31 	vmovcc.8	d7[5], r0
    ebf8:	0b320000 	bleq	c8ec00 <_Min_Stack_Size+0xc8e800>
    ebfc:	000040f6 	strdeq	r4, [r0], -r6
    ec00:	36e70b33 			; <UNDEFINED> instruction: 0x36e70b33
    ec04:	0b340000 	bleq	d0ec0c <_Min_Stack_Size+0xd0e80c>
    ec08:	00004899 	muleq	r0, r9, r8
    ec0c:	3f2d0b35 	svccc	0x002d0b35
    ec10:	0b360000 	bleq	d8ec18 <_Min_Stack_Size+0xd8e818>
    ec14:	00003bc9 	andeq	r3, r0, r9, asr #23
    ec18:	3f6a0b37 	svccc	0x006a0b37
    ec1c:	0b380000 	bleq	e0ec24 <_Min_Stack_Size+0xe0e824>
    ec20:	0000478d 	andeq	r4, r0, sp, lsl #15
    ec24:	38200b39 	stmdacc	r0!, {r0, r3, r4, r5, r8, r9, fp}
    ec28:	0b3a0000 	bleq	e8ec30 <_Min_Stack_Size+0xe8e830>
    ec2c:	00003bdc 	ldrdeq	r3, [r0], -ip
    ec30:	3b8a0b3b 	blcc	fe291924 <__StackLimit+0xde271924>
    ec34:	0b3c0000 	bleq	f0ec3c <_Min_Stack_Size+0xf0e83c>
    ec38:	000035a3 	andeq	r3, r0, r3, lsr #11
    ec3c:	3edd0b3d 	vmovcc.u8	r0, d13[1]
    ec40:	0b3e0000 	bleq	f8ec48 <_Min_Stack_Size+0xf8e848>
    ec44:	00003ca8 	andeq	r3, r0, r8, lsr #25
    ec48:	373b0b3f 			; <UNDEFINED> instruction: 0x373b0b3f
    ec4c:	0b400000 	bleq	100ec54 <_Min_Stack_Size+0x100e854>
    ec50:	00004739 	andeq	r4, r0, r9, lsr r7
    ec54:	3e2d0b41 	vnmulcc.f64	d0, d13, d1
    ec58:	0b420000 	bleq	108ec60 <_Min_Stack_Size+0x108e860>
    ec5c:	00003b66 	andeq	r3, r0, r6, ror #22
    ec60:	35e40b43 	strbcc	r0, [r4, #2883]!	; 0xb43
    ec64:	0b440000 	bleq	110ec6c <_Min_Stack_Size+0x110e86c>
    ec68:	00003d8a 	andeq	r3, r0, sl, lsl #27
    ec6c:	3d760b45 	fldmdbxcc	r6!, {d16-d49}	;@ Deprecated
    ec70:	0b460000 	bleq	118ec78 <_Min_Stack_Size+0x118e878>
    ec74:	000043aa 	andeq	r4, r0, sl, lsr #7
    ec78:	44810b47 	strmi	r0, [r1], #2887	; 0xb47
    ec7c:	0b480000 	bleq	120ec84 <_Min_Stack_Size+0x120e884>
    ec80:	00004704 	andeq	r4, r0, r4, lsl #14
    ec84:	3a9c0b49 	bcc	fe7119b0 <__StackLimit+0xde6f19b0>
    ec88:	0b4a0000 	bleq	128ec90 <_Min_Stack_Size+0x128e890>
    ec8c:	000036fe 	strdeq	r3, [r0], -lr
    ec90:	444e0b4b 	strbmi	r0, [lr], #-2891	; 0xfffff4b5
    ec94:	0b4c0000 	bleq	130ec9c <_Min_Stack_Size+0x130e89c>
    ec98:	00004210 	andeq	r4, r0, r0, lsl r2
    ec9c:	42240b4d 	eormi	r0, r4, #78848	; 0x13400
    eca0:	0b4e0000 	bleq	138eca8 <_Min_Stack_Size+0x138e8a8>
    eca4:	00004238 	andeq	r4, r0, r8, lsr r2
    eca8:	38ae0b4f 	stmiacc	lr!, {r0, r1, r2, r3, r6, r8, r9, fp}
    ecac:	0b500000 	bleq	140ecb4 <_Min_Stack_Size+0x140e8b4>
    ecb0:	0000380b 	andeq	r3, r0, fp, lsl #16
    ecb4:	38330b51 	ldmdacc	r3!, {r0, r4, r6, r8, r9, fp}
    ecb8:	0b520000 	bleq	148ecc0 <_Min_Stack_Size+0x148e8c0>
    ecbc:	000047c2 	andeq	r4, r0, r2, asr #15
    ecc0:	38790b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp}^
    ecc4:	0b540000 	bleq	150eccc <_Min_Stack_Size+0x150e8cc>
    ecc8:	0000459e 	muleq	r0, lr, r5
    eccc:	45b20b55 	ldrmi	r0, [r2, #2901]!	; 0xb55
    ecd0:	0b560000 	bleq	158ecd8 <_Min_Stack_Size+0x158e8d8>
    ecd4:	000045c6 	andeq	r4, r0, r6, asr #11
    ecd8:	39f60b57 	ldmibcc	r6!, {r0, r1, r2, r4, r6, r8, r9, fp}^
    ecdc:	0b580000 	bleq	160ece4 <_Min_Stack_Size+0x160e8e4>
    ece0:	000039d0 	ldrdeq	r3, [r0], -r0
    ece4:	3d9e0b59 	vldrcc	d0, [lr, #356]	; 0x164
    ece8:	0b5a0000 	bleq	168ecf0 <_Min_Stack_Size+0x168e8f0>
    ecec:	00003f7d 	andeq	r3, r0, sp, ror pc
    ecf0:	3d240b5b 	fstmdbxcc	r4!, {d0-d44}	;@ Deprecated
    ecf4:	0b5c0000 	bleq	170ecfc <_Min_Stack_Size+0x170e8fc>
    ecf8:	00003577 	andeq	r3, r0, r7, ror r5
    ecfc:	3b1e0b5d 	blcc	791a78 <_Min_Stack_Size+0x791678>
    ed00:	0b5e0000 	bleq	178ed08 <_Min_Stack_Size+0x178e908>
    ed04:	00003fa6 	andeq	r3, r0, r6, lsr #31
    ed08:	3df00b5f 			; <UNDEFINED> instruction: 0x3df00b5f
    ed0c:	0b600000 	bleq	180ed14 <_Min_Stack_Size+0x180e914>
    ed10:	00004368 	andeq	r4, r0, r8, ror #6
    ed14:	48160b61 	ldmdami	r6, {r0, r5, r6, r8, r9, fp}
    ed18:	0b620000 	bleq	188ed20 <_Min_Stack_Size+0x188e920>
    ed1c:	000040a3 	andeq	r4, r0, r3, lsr #1
    ed20:	3ac10b63 	bcc	ff051ab4 <__StackLimit+0xdf031ab4>
    ed24:	0b640000 	bleq	190ed2c <_Min_Stack_Size+0x190e92c>
    ed28:	00003660 	andeq	r3, r0, r0, ror #12
    ed2c:	36110b65 	ldrcc	r0, [r1], -r5, ror #22
    ed30:	0b660000 	bleq	198ed38 <_Min_Stack_Size+0x198e938>
    ed34:	00003fde 	ldrdeq	r3, [r0], -lr
    ed38:	41170b67 	tstmi	r7, r7, ror #22
    ed3c:	0b680000 	bleq	1a0ed44 <_Min_Stack_Size+0x1a0e944>
    ed40:	0000438c 	andeq	r4, r0, ip, lsl #7
    ed44:	3e050b69 	vmlscc.f64	d0, d5, d25
    ed48:	0b6a0000 	bleq	1a8ed50 <_Min_Stack_Size+0x1a8e950>
    ed4c:	0000484f 	andeq	r4, r0, pc, asr #16
    ed50:	3ba00b6b 	blcc	fe811b04 <__StackLimit+0xde7f1b04>
    ed54:	0b6c0000 	bleq	1b0ed5c <_Min_Stack_Size+0x1b0e95c>
    ed58:	000035c8 	andeq	r3, r0, r8, asr #11
    ed5c:	37140b6d 	ldrcc	r0, [r4, -sp, ror #22]
    ed60:	0b6e0000 	bleq	1b8ed68 <_Min_Stack_Size+0x1b8e968>
    ed64:	00003ad5 	ldrdeq	r3, [r0], -r5
    ed68:	399c0b6f 	ldmibcc	ip, {r0, r1, r2, r3, r5, r6, r8, r9, fp}
    ed6c:	00700000 	rsbseq	r0, r0, r0
    ed70:	77070202 	strvc	r0, [r7, -r2, lsl #4]
    ed74:	0c000003 	stceq	0, cr0, [r0], {3}
    ed78:	000004cb 	andeq	r0, r0, fp, asr #9
    ed7c:	000004c0 	andeq	r0, r0, r0, asr #9
    ed80:	b50e000d 	strlt	r0, [lr, #-13]
    ed84:	05000004 	streq	r0, [r0, #-4]
    ed88:	0004d704 	andeq	sp, r4, r4, lsl #14
    ed8c:	04c50e00 	strbeq	r0, [r5], #3584	; 0xe00
    ed90:	01020000 	mrseq	r0, (UNDEF: 2)
    ed94:	0007b008 	andeq	fp, r7, r8
    ed98:	04d00e00 	ldrbeq	r0, [r0], #3584	; 0xe00
    ed9c:	e70f0000 	str	r0, [pc, -r0]
    eda0:	05000043 	streq	r0, [r0, #-67]	; 0xffffffbd
    eda4:	c01a0144 	andsgt	r0, sl, r4, asr #2
    eda8:	0f000004 	svceq	0x00000004
    edac:	00003b56 	andeq	r3, r0, r6, asr fp
    edb0:	1a017905 	bne	6d1cc <_Min_Stack_Size+0x6cdcc>
    edb4:	000004c0 	andeq	r0, r0, r0, asr #9
    edb8:	0004d00c 	andeq	sp, r4, ip
    edbc:	00050100 	andeq	r0, r5, r0, lsl #2
    edc0:	09000d00 	stmdbeq	r0, {r8, sl, fp}
    edc4:	00003dc2 	andeq	r3, r0, r2, asr #27
    edc8:	f60d2d06 			; <UNDEFINED> instruction: 0xf60d2d06
    edcc:	09000004 	stmdbeq	r0, {r2}
    edd0:	00004676 	andeq	r4, r0, r6, ror r6
    edd4:	f51c3506 			; <UNDEFINED> instruction: 0xf51c3506
    edd8:	0a000001 	beq	ede4 <_Min_Stack_Size+0xe9e4>
    eddc:	00003a32 	andeq	r3, r0, r2, lsr sl
    ede0:	00a20107 	adceq	r0, r2, r7, lsl #2
    ede4:	37060000 	strcc	r0, [r6, -r0]
    ede8:	00058c0e 	andeq	r8, r5, lr, lsl #24
    edec:	35dd0b00 	ldrbcc	r0, [sp, #2816]	; 0xb00
    edf0:	0b000000 	bleq	edf8 <_Min_Stack_Size+0xe9f8>
    edf4:	00003c95 	muleq	r0, r5, ip
    edf8:	479f0b01 	ldrmi	r0, [pc, r1, lsl #22]
    edfc:	0b020000 	bleq	8ee04 <_Min_Stack_Size+0x8ea04>
    ee00:	0000477a 	andeq	r4, r0, sl, ror r7
    ee04:	40510b03 	subsmi	r0, r1, r3, lsl #22
    ee08:	0b040000 	bleq	10ee10 <_Min_Stack_Size+0x10ea10>
    ee0c:	000044e8 	andeq	r4, r0, r8, ror #9
    ee10:	37dc0b05 	ldrbcc	r0, [ip, r5, lsl #22]
    ee14:	0b060000 	bleq	18ee1c <_Min_Stack_Size+0x18ea1c>
    ee18:	000037b6 			; <UNDEFINED> instruction: 0x000037b6
    ee1c:	39110b07 	ldmdbcc	r1, {r0, r1, r2, r8, r9, fp}
    ee20:	0b080000 	bleq	20ee28 <_Min_Stack_Size+0x20ea28>
    ee24:	00003ef3 	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
    ee28:	37e30b09 	strbcc	r0, [r3, r9, lsl #22]!
    ee2c:	0b0a0000 	bleq	28ee34 <_Min_Stack_Size+0x28ea34>
    ee30:	0000384f 	andeq	r3, r0, pc, asr #16
    ee34:	38480b0b 	stmdacc	r8, {r0, r1, r3, r8, r9, fp}^
    ee38:	0b0c0000 	bleq	30ee40 <_Min_Stack_Size+0x30ea40>
    ee3c:	000037cd 	andeq	r3, r0, sp, asr #15
    ee40:	453f0b0d 	ldrmi	r0, [pc, #-2829]!	; e33b <_Min_Stack_Size+0xdf3b>
    ee44:	0b0e0000 	bleq	38ee4c <_Min_Stack_Size+0x38ea4c>
    ee48:	00004135 	andeq	r4, r0, r5, lsr r1
    ee4c:	c204000f 	andgt	r0, r4, #15
    ee50:	06000043 	streq	r0, [r0], -r3, asr #32
    ee54:	0519013c 	ldreq	r0, [r9, #-316]	; 0xfffffec4
    ee58:	a7090000 	strge	r0, [r9, -r0]
    ee5c:	06000044 	streq	r0, [r0], -r4, asr #32
    ee60:	058c0f3e 	streq	r0, [ip, #3902]	; 0xf3e
    ee64:	62090000 	andvs	r0, r9, #0
    ee68:	06000045 	streq	r0, [r0], -r5, asr #32
    ee6c:	002c0c47 	eoreq	r0, ip, r7, asr #24
    ee70:	90090000 	andls	r0, r9, r0
    ee74:	06000037 			; <UNDEFINED> instruction: 0x06000037
    ee78:	002c0c48 	eoreq	r0, ip, r8, asr #24
    ee7c:	5a100000 	bpl	40ee84 <_Min_Stack_Size+0x40ea84>
    ee80:	09000046 	stmdbeq	r0, {r1, r2, r6}
    ee84:	000044b6 			; <UNDEFINED> instruction: 0x000044b6
    ee88:	cd144906 	vldrgt.16	s8, [r4, #-12]	; <UNPREDICTABLE>
    ee8c:	05000005 	streq	r0, [r0, #-5]
    ee90:	0005bc04 	andeq	fp, r5, r4, lsl #24
    ee94:	5f091100 	svcpl	0x00091100
    ee98:	0600003c 			; <UNDEFINED> instruction: 0x0600003c
    ee9c:	05e00f4b 	strbeq	r0, [r0, #3915]!	; 0xf4b
    eea0:	04050000 	streq	r0, [r5], #-0
    eea4:	000005d3 	ldrdeq	r0, [r0], -r3
    eea8:	00442412 	subeq	r2, r4, r2, lsl r4
    eeac:	403e0900 	eorsmi	r0, lr, r0, lsl #18
    eeb0:	4f060000 	svcmi	0x00060000
    eeb4:	0005f70d 	andeq	pc, r5, sp, lsl #14
    eeb8:	e6040500 	str	r0, [r4], -r0, lsl #10
    eebc:	13000005 	movwne	r0, #5
    eec0:	000038f7 	strdeq	r3, [r0], -r7
    eec4:	01580634 	cmpeq	r8, r4, lsr r6
    eec8:	00062815 	andeq	r2, r6, r5, lsl r8
    eecc:	3dcb1400 	cfstrdcc	mvd1, [fp]
    eed0:	5a060000 	bpl	18eed8 <_Min_Stack_Size+0x18ead8>
    eed4:	04c50f01 	strbeq	r0, [r5], #3841	; 0xf01
    eed8:	14000000 	strne	r0, [r0], #-0
    eedc:	000038db 	ldrdeq	r3, [r0], -fp
    eee0:	14015b06 	strne	r5, [r1], #-2822	; 0xfffff4fa
    eee4:	0000062d 	andeq	r0, r0, sp, lsr #12
    eee8:	fd0e0004 	stc2	0, cr0, [lr, #-16]
    eeec:	0c000005 	stceq	0, cr0, [r0], {5}
    eef0:	000000c8 	andeq	r0, r0, r8, asr #1
    eef4:	0000063d 	andeq	r0, r0, sp, lsr r6
    eef8:	00003315 	andeq	r3, r0, r5, lsl r3
    eefc:	0c002d00 	stceq	13, cr2, [r0], {-0}
    ef00:	00000628 	andeq	r0, r0, r8, lsr #12
    ef04:	00000648 	andeq	r0, r0, r8, asr #12
    ef08:	3d0e000d 	stccc	0, cr0, [lr, #-52]	; 0xffffffcc
    ef0c:	0f000006 	svceq	0x00000006
    ef10:	00003cfb 	strdeq	r3, [r0], -fp
    ef14:	03015c06 	movweq	r5, #7174	; 0x1c06
    ef18:	00000648 	andeq	r0, r0, r8, asr #12
    ef1c:	003f4d0f 	eorseq	r4, pc, pc, lsl #26
    ef20:	015f0600 	cmpeq	pc, r0, lsl #12
    ef24:	00002c0c 	andeq	r2, r0, ip, lsl #24
    ef28:	44621600 	strbtmi	r1, [r2], #-1536	; 0xfffffa00
    ef2c:	01070000 	mrseq	r0, (UNDEF: 7)
    ef30:	000000a2 	andeq	r0, r0, r2, lsr #1
    ef34:	06017206 	streq	r7, [r1], -r6, lsl #4
    ef38:	0000071d 	andeq	r0, r0, sp, lsl r7
    ef3c:	0040320b 	subeq	r3, r0, fp, lsl #4
    ef40:	990b0000 	stmdbls	fp, {}	; <UNPREDICTABLE>
    ef44:	02000036 	andeq	r0, r0, #54	; 0x36
    ef48:	0036a50b 	eorseq	sl, r6, fp, lsl #10
    ef4c:	5e0b0300 	cdppl	3, 0, cr0, cr11, cr0, {0}
    ef50:	0300003a 	movweq	r0, #58	; 0x3a
    ef54:	00406e0b 	subeq	r6, r0, fp, lsl #28
    ef58:	f10b0400 			; <UNDEFINED> instruction: 0xf10b0400
    ef5c:	0400003b 	streq	r0, [r0], #-59	; 0xffffffc5
    ef60:	0036c30b 	eorseq	ip, r6, fp, lsl #6
    ef64:	be0b0500 	cfsh32lt	mvfx0, mvfx11, #0
    ef68:	0500003c 	streq	r0, [r0, #-60]	; 0xffffffc4
    ef6c:	003d0c0b 	eorseq	r0, sp, fp, lsl #24
    ef70:	220b0500 	andcs	r0, fp, #0, 10
    ef74:	0500003c 	streq	r0, [r0, #-60]	; 0xffffffc4
    ef78:	0037810b 	eorseq	r8, r7, fp, lsl #2
    ef7c:	cf0b0500 	svcgt	0x000b0500
    ef80:	06000036 			; <UNDEFINED> instruction: 0x06000036
    ef84:	003e7b0b 	eorseq	r7, lr, fp, lsl #22
    ef88:	cd0b0600 	stcgt	6, cr0, [fp, #-0]
    ef8c:	06000038 			; <UNDEFINED> instruction: 0x06000038
    ef90:	0041640b 	subeq	r6, r1, fp, lsl #8
    ef94:	0b0b0600 	bleq	2d079c <_Min_Stack_Size+0x2d039c>
    ef98:	06000045 	streq	r0, [r0], -r5, asr #32
    ef9c:	003eaf0b 	eorseq	sl, lr, fp, lsl #30
    efa0:	0e0b0600 	cfmadd32eq	mvax0, mvfx0, mvfx11, mvfx0
    efa4:	0600003f 			; <UNDEFINED> instruction: 0x0600003f
    efa8:	0036db0b 	eorseq	sp, r6, fp, lsl #22
    efac:	150b0700 	strne	r0, [fp, #-1792]	; 0xfffff900
    efb0:	07000040 	streq	r0, [r0, -r0, asr #32]
    efb4:	00407a0b 	subeq	r7, r0, fp, lsl #20
    efb8:	550b0700 	strpl	r0, [fp, #-1792]	; 0xfffff900
    efbc:	07000045 	streq	r0, [r0, -r5, asr #32]
    efc0:	0038a00b 	eorseq	sl, r8, fp
    efc4:	e90b0700 	stmdb	fp, {r8, r9, sl}
    efc8:	08000040 	stmdaeq	r0, {r6}
    efcc:	00363c0b 	eorseq	r3, r6, fp, lsl #24
    efd0:	190b0800 	stmdbne	fp, {fp}
    efd4:	08000045 	stmdaeq	r0, {r0, r2, r6}
    efd8:	00410a0b 	subeq	r0, r1, fp, lsl #20
    efdc:	0f000800 	svceq	0x00000800
    efe0:	000047b4 			; <UNDEFINED> instruction: 0x000047b4
    efe4:	1f019206 	svcne	0x00019206
    efe8:	00000667 	andeq	r0, r0, r7, ror #12
    efec:	003bbe0f 	eorseq	fp, fp, pc, lsl #28
    eff0:	01950600 	orrseq	r0, r5, r0, lsl #12
    eff4:	00002c0c 	andeq	r2, r0, ip, lsl #24
    eff8:	413c0f00 	teqmi	ip, r0, lsl #30
    effc:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    f000:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f004:	190f0000 	stmdbne	pc, {}	; <UNPREDICTABLE>
    f008:	0600003d 			; <UNDEFINED> instruction: 0x0600003d
    f00c:	2c0c019b 	stfcss	f0, [ip], {155}	; 0x9b
    f010:	0f000000 	svceq	0x00000000
    f014:	00004146 	andeq	r4, r0, r6, asr #2
    f018:	0c019e06 	stceq	14, cr9, [r1], {6}
    f01c:	0000002c 	andeq	r0, r0, ip, lsr #32
    f020:	003e5c0f 	eorseq	r5, lr, pc, lsl #24
    f024:	01a10600 			; <UNDEFINED> instruction: 0x01a10600
    f028:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f02c:	41840f00 	orrmi	r0, r4, r0, lsl #30
    f030:	a4060000 	strge	r0, [r6], #-0
    f034:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f038:	580f0000 	stmdapl	pc, {}	; <UNPREDICTABLE>
    f03c:	06000040 	streq	r0, [r0], -r0, asr #32
    f040:	2c0c01a7 	stfcss	f0, [ip], {167}	; 0xa7
    f044:	0f000000 	svceq	0x00000000
    f048:	00004063 	andeq	r4, r0, r3, rrx
    f04c:	0c01aa06 			; <UNDEFINED> instruction: 0x0c01aa06
    f050:	0000002c 	andeq	r0, r0, ip, lsr #32
    f054:	0041500f 	subeq	r5, r1, pc
    f058:	01ad0600 			; <UNDEFINED> instruction: 0x01ad0600
    f05c:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f060:	3e4e0f00 	cdpcc	15, 4, cr0, cr14, cr0, {0}
    f064:	b0060000 	andlt	r0, r6, r0
    f068:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f06c:	0a0f0000 	beq	3cf074 <_Min_Stack_Size+0x3cec74>
    f070:	06000048 	streq	r0, [r0], -r8, asr #32
    f074:	2c0c01b3 	stfcss	f0, [ip], {179}	; 0xb3
    f078:	0f000000 	svceq	0x00000000
    f07c:	0000415a 	andeq	r4, r0, sl, asr r1
    f080:	0c01b606 	stceq	6, cr11, [r1], {6}
    f084:	0000002c 	andeq	r0, r0, ip, lsr #32
    f088:	0048e70f 	subeq	lr, r8, pc, lsl #14
    f08c:	01b90600 			; <UNDEFINED> instruction: 0x01b90600
    f090:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f094:	47810f00 	strmi	r0, [r1, r0, lsl #30]
    f098:	bc060000 	stclt	0, cr0, [r6], {-0}
    f09c:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f0a0:	a60f0000 	strge	r0, [pc], -r0
    f0a4:	06000047 	streq	r0, [r0], -r7, asr #32
    f0a8:	2c0c01c0 	stfcss	f0, [ip], {192}	; 0xc0
    f0ac:	0f000000 	svceq	0x00000000
    f0b0:	000048da 	ldrdeq	r4, [r0], -sl
    f0b4:	0c01c306 	stceq	3, cr12, [r1], {6}
    f0b8:	0000002c 	andeq	r0, r0, ip, lsr #32
    f0bc:	0037ea0f 	eorseq	lr, r7, pc, lsl #20
    f0c0:	01c60600 	biceq	r0, r6, r0, lsl #12
    f0c4:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f0c8:	35b80f00 	ldrcc	r0, [r8, #3840]!	; 0xf00
    f0cc:	c9060000 	stmdbgt	r6, {}	; <UNPREDICTABLE>
    f0d0:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f0d4:	7e0f0000 	cdpvc	0, 0, cr0, cr15, cr0, {0}
    f0d8:	0600003a 			; <UNDEFINED> instruction: 0x0600003a
    f0dc:	2c0c01cc 	stfcss	f0, [ip], {204}	; 0xcc
    f0e0:	0f000000 	svceq	0x00000000
    f0e4:	000037bd 			; <UNDEFINED> instruction: 0x000037bd
    f0e8:	0c01cf06 	stceq	15, cr12, [r1], {6}
    f0ec:	0000002c 	andeq	r0, r0, ip, lsr #32
    f0f0:	00418e0f 	subeq	r8, r1, pc, lsl #28
    f0f4:	01d20600 	bicseq	r0, r2, r0, lsl #12
    f0f8:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f0fc:	3d410f00 	stclcc	15, cr0, [r1, #-0]
    f100:	d5060000 	strle	r0, [r6, #-0]
    f104:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f108:	bb0f0000 	bllt	3cf110 <_Min_Stack_Size+0x3ced10>
    f10c:	0600003f 			; <UNDEFINED> instruction: 0x0600003f
    f110:	2c0c01d8 	stfcss	f0, [ip], {216}	; 0xd8
    f114:	0f000000 	svceq	0x00000000
    f118:	0000467f 	andeq	r4, r0, pc, ror r6
    f11c:	0c01df06 	stceq	15, cr13, [r1], {6}
    f120:	0000002c 	andeq	r0, r0, ip, lsr #32
    f124:	0048790f 	subeq	r7, r8, pc, lsl #18
    f128:	01e20600 	mvneq	r0, r0, lsl #12
    f12c:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f130:	48890f00 	stmmi	r9, {r8, r9, sl, fp}
    f134:	e5060000 	str	r0, [r6, #-0]
    f138:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f13c:	e40f0000 	str	r0, [pc], #-0	; f144 <_Min_Stack_Size+0xed44>
    f140:	06000038 			; <UNDEFINED> instruction: 0x06000038
    f144:	2c0c01e8 	stfcss	f0, [ip], {232}	; 0xe8
    f148:	0f000000 	svceq	0x00000000
    f14c:	000046bd 			; <UNDEFINED> instruction: 0x000046bd
    f150:	0c01eb06 			; <UNDEFINED> instruction: 0x0c01eb06
    f154:	0000002c 	andeq	r0, r0, ip, lsr #32
    f158:	0040d10f 	subeq	sp, r0, pc, lsl #2
    f15c:	01ee0600 	mvneq	r0, r0, lsl #12
    f160:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f164:	3af70f00 	bcc	ffdd2d6c <__StackLimit+0xdfdb2d6c>
    f168:	f2060000 	vhadd.s8	d0, d6, d0
    f16c:	002c0c01 	eoreq	r0, ip, r1, lsl #24
    f170:	740f0000 	strvc	r0, [pc], #-0	; f178 <_Min_Stack_Size+0xed78>
    f174:	06000044 	streq	r0, [r0], -r4, asr #32
    f178:	2c0c01fa 	stfcss	f0, [ip], {250}	; 0xfa
    f17c:	0f000000 	svceq	0x00000000
    f180:	000039b0 			; <UNDEFINED> instruction: 0x000039b0
    f184:	0c01fd06 	stceq	13, cr15, [r1], {6}
    f188:	0000002c 	andeq	r0, r0, ip, lsr #32
    f18c:	00002c0c 	andeq	r2, r0, ip, lsl #24
    f190:	0008d500 	andeq	sp, r8, r0, lsl #10
    f194:	0f000d00 	svceq	0x00000d00
    f198:	00003c0d 	andeq	r3, r0, sp, lsl #24
    f19c:	0c03eb06 			; <UNDEFINED> instruction: 0x0c03eb06
    f1a0:	000008ca 	andeq	r0, r0, sl, asr #17
    f1a4:	0005cd0c 	andeq	ip, r5, ip, lsl #26
    f1a8:	0008f200 	andeq	pc, r8, r0, lsl #4
    f1ac:	00331500 	eorseq	r1, r3, r0, lsl #10
    f1b0:	000d0000 	andeq	r0, sp, r0
    f1b4:	0041cd0f 	subeq	ip, r1, pc, lsl #26
    f1b8:	05740600 	ldrbeq	r0, [r4, #-1536]!	; 0xfffffa00
    f1bc:	0008e214 	andeq	lr, r8, r4, lsl r2
    f1c0:	3d041600 	stccc	6, cr1, [r4, #-0]
    f1c4:	01070000 	mrseq	r0, (UNDEF: 7)
    f1c8:	000000a2 	andeq	r0, r0, r2, lsr #1
    f1cc:	06057b06 	streq	r7, [r5], -r6, lsl #22
    f1d0:	0000093d 	andeq	r0, r0, sp, lsr r9
    f1d4:	003a400b 	eorseq	r4, sl, fp
    f1d8:	1b0b0000 	blne	2cf1e0 <_Min_Stack_Size+0x2cede0>
    f1dc:	0100003f 	tsteq	r0, pc, lsr r0
    f1e0:	0036720b 	eorseq	r7, r6, fp, lsl #4
    f1e4:	3b0b0200 	blcc	2cf9ec <_Min_Stack_Size+0x2cf5ec>
    f1e8:	03000048 	movweq	r0, #72	; 0x48
    f1ec:	0043350b 	subeq	r3, r3, fp, lsl #10
    f1f0:	280b0400 	stmdacs	fp, {sl}
    f1f4:	05000043 	streq	r0, [r0, #-67]	; 0xffffffbd
    f1f8:	0037600b 	eorseq	r6, r7, fp
    f1fc:	0f000600 	svceq	0x00000600
    f200:	0000482b 	andeq	r4, r0, fp, lsr #16
    f204:	15058806 	strne	r8, [r5, #-2054]	; 0xfffff7fa
    f208:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    f20c:	0046f30f 	subeq	pc, r6, pc, lsl #6
    f210:	07890600 	streq	r0, [r9, r0, lsl #12]
    f214:	00003311 	andeq	r3, r0, r1, lsl r3
    f218:	41ba0f00 			; <UNDEFINED> instruction: 0x41ba0f00
    f21c:	9e060000 	cdpls	0, 0, cr0, cr6, cr0, {0}
    f220:	002c0c07 	eoreq	r0, ip, r7, lsl #24
    f224:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
    f228:	07000046 	streq	r0, [r0, -r6, asr #32]
    f22c:	00a2167b 	adceq	r1, r2, fp, ror r6
    f230:	640e0000 	strvs	r0, [lr], #-0
    f234:	02000009 	andeq	r0, r0, #9
    f238:	00000502 	andeq	r0, r0, r2, lsl #10
    f23c:	2a040000 	bcs	10f244 <_Min_Stack_Size+0x10ee44>
    f240:	07000037 	smladxeq	r0, r7, r0, r0
    f244:	002c0f80 	eoreq	r0, ip, r0, lsl #31
    f248:	29040000 	stmdbcs	r4, {}	; <UNPREDICTABLE>
    f24c:	07000037 	smladxeq	r0, r7, r0, r0
    f250:	00331681 	eorseq	r1, r3, r1, lsl #13
    f254:	0a040000 	beq	10f25c <_Min_Stack_Size+0x10ee5c>
    f258:	07000036 	smladxeq	r0, r6, r0, r0
    f25c:	003a0f84 	eorseq	r0, sl, r4, lsl #31
    f260:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    f264:	07000036 	smladxeq	r0, r6, r0, r0
    f268:	00251685 	eoreq	r1, r5, r5, lsl #13
    f26c:	04020000 	streq	r0, [r2], #-0
    f270:	00380504 	eorseq	r0, r8, r4, lsl #10
    f274:	03080200 	movweq	r0, #33280	; 0x8200
    f278:	000037fd 	strdeq	r3, [r0], -sp
    f27c:	1e040802 	cdpne	8, 0, cr0, cr4, cr2, {0}
    f280:	02000007 	andeq	r0, r0, #7
    f284:	437d0310 	cmnmi	sp, #16, 6	; 0x40000000
    f288:	9e130000 	cdpls	0, 1, cr0, cr3, cr0, {0}
    f28c:	08000041 	stmdaeq	r0, {r0, r6}
    f290:	0a01ed07 	beq	8a6b4 <_Min_Stack_Size+0x8a2b4>
    f294:	000009f3 	strdeq	r0, [r0], -r3
    f298:	776f6c17 			; <UNDEFINED> instruction: 0x776f6c17
    f29c:	01ed0700 	mvneq	r0, r0, lsl #14
    f2a0:	00097c1a 	andeq	r7, r9, sl, lsl ip
    f2a4:	f9140000 			; <UNDEFINED> instruction: 0xf9140000
    f2a8:	07000036 	smladxeq	r0, r6, r0, r0
    f2ac:	7c1f01ed 	ldfvcs	f0, [pc], {237}	; 0xed
    f2b0:	04000009 	streq	r0, [r0], #-9
    f2b4:	07081800 	streq	r1, [r8, -r0, lsl #16]
    f2b8:	150901f4 	strne	r0, [r9, #-500]	; 0xfffffe0c
    f2bc:	1900000a 	stmdbne	r0, {r1, r3}
    f2c0:	f6070073 			; <UNDEFINED> instruction: 0xf6070073
    f2c4:	09c81301 	stmibeq	r8, {r0, r8, r9, ip}^
    f2c8:	6c190000 	ldcvs	0, cr0, [r9], {-0}
    f2cc:	f707006c 			; <UNDEFINED> instruction: 0xf707006c
    f2d0:	09940a01 	ldmibeq	r4, {r0, r9, fp}
    f2d4:	1a000000 	bne	f2dc <_Min_Stack_Size+0xeedc>
    f2d8:	000037d4 	ldrdeq	r3, [r0], -r4
    f2dc:	0301f807 	movweq	pc, #6151	; 0x1807	; <UNPREDICTABLE>
    f2e0:	000009f3 	strdeq	r0, [r0], -r3
    f2e4:	000a150e 	andeq	r1, sl, lr, lsl #10
    f2e8:	09700c00 	ldmdbeq	r0!, {sl, fp}^
    f2ec:	0a370000 	beq	dcf2f4 <_Min_Stack_Size+0xdceef4>
    f2f0:	33150000 	tstcc	r5, #0
    f2f4:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    f2f8:	0a270e00 	beq	9d2b00 <_Min_Stack_Size+0x9d2700>
    f2fc:	870f0000 	strhi	r0, [pc, -r0]
    f300:	07000040 	streq	r0, [r0, -r0, asr #32]
    f304:	371601fc 			; <UNDEFINED> instruction: 0x371601fc
    f308:	0f00000a 	svceq	0x0000000a
    f30c:	000037ac 	andeq	r3, r0, ip, lsr #15
    f310:	16020207 	strne	r0, [r2], -r7, lsl #4
    f314:	00000a37 	andeq	r0, r0, r7, lsr sl
    f318:	00362f1b 	eorseq	r2, r6, fp, lsl pc
    f31c:	03f70100 	mvnseq	r0, #0, 2
    f320:	0009a001 	andeq	sl, r9, r1
    f324:	000b7c00 	andeq	r7, fp, r0, lsl #24
    f328:	0002d008 	andeq	sp, r2, r8
    f32c:	4c9c0100 	ldfmis	f0, [ip], {0}
    f330:	1c00000e 	stcne	0, cr0, [r0], {14}
    f334:	f701006e 			; <UNDEFINED> instruction: 0xf701006e
    f338:	09a01703 	stmibeq	r0!, {r0, r1, r8, r9, sl, ip}
    f33c:	00200000 	eoreq	r0, r0, r0
    f340:	00000000 	andeq	r0, r0, r0
    f344:	641c0000 	ldrvs	r0, [ip], #-0
    f348:	03f70100 	mvnseq	r0, #0, 2
    f34c:	0009a022 	andeq	sl, r9, r2, lsr #32
    f350:	00013c00 	andeq	r3, r1, r0, lsl #24
    f354:	00012800 	andeq	r2, r1, r0, lsl #16
    f358:	70721c00 	rsbsvc	r1, r2, r0, lsl #24
    f35c:	03f70100 	mvnseq	r0, #0, 2
    f360:	000e4c2e 	andeq	r4, lr, lr, lsr #24
    f364:	0001e800 	andeq	lr, r1, r0, lsl #16
    f368:	0001e400 	andeq	lr, r1, r0, lsl #8
    f36c:	6e6e1d00 	cdpvs	13, 6, cr1, cr14, cr0, {0}
    f370:	03f90100 	mvnseq	r0, #0, 2
    f374:	000a2211 	andeq	r2, sl, r1, lsl r2
    f378:	64641d00 	strbtvs	r1, [r4], #-3328	; 0xfffff300
    f37c:	03fa0100 	mvnseq	r0, #0, 2
    f380:	000a2211 	andeq	r2, sl, r1, lsl r2
    f384:	72721d00 	rsbsvc	r1, r2, #0, 26
    f388:	03fb0100 	mvnseq	r0, #0, 2
    f38c:	000a150b 	andeq	r1, sl, fp, lsl #10
    f390:	30641e00 	rsbcc	r1, r4, r0, lsl #28
    f394:	03fc0100 	mvnseq	r0, #0, 2
    f398:	0009880a 	andeq	r8, r9, sl, lsl #16
    f39c:	00022200 	andeq	r2, r2, r0, lsl #4
    f3a0:	00020800 	andeq	r0, r2, r0, lsl #16
    f3a4:	31641e00 	cmncc	r4, r0, lsl #28
    f3a8:	03fc0100 	mvnseq	r0, #0, 2
    f3ac:	0009880e 	andeq	r8, r9, lr, lsl #16
    f3b0:	0002d100 	andeq	sp, r2, r0, lsl #2
    f3b4:	0002b900 	andeq	fp, r2, r0, lsl #18
    f3b8:	306e1e00 	rsbcc	r1, lr, r0, lsl #28
    f3bc:	03fc0100 	mvnseq	r0, #0, 2
    f3c0:	00098812 	andeq	r8, r9, r2, lsl r8
    f3c4:	00039100 	andeq	r9, r3, r0, lsl #2
    f3c8:	00035d00 	andeq	r5, r3, r0, lsl #26
    f3cc:	316e1e00 	cmncc	lr, r0, lsl #28
    f3d0:	03fc0100 	mvnseq	r0, #0, 2
    f3d4:	00098816 	andeq	r8, r9, r6, lsl r8
    f3d8:	0004dd00 	andeq	sp, r4, r0, lsl #26
    f3dc:	0004b700 	andeq	fp, r4, r0, lsl #14
    f3e0:	326e1e00 	rsbcc	r1, lr, #0, 28
    f3e4:	03fc0100 	mvnseq	r0, #0, 2
    f3e8:	0009881a 	andeq	r8, r9, sl, lsl r8
    f3ec:	0005b800 	andeq	fp, r5, r0, lsl #16
    f3f0:	0005b600 	andeq	fp, r5, r0, lsl #12
    f3f4:	30711e00 	rsbscc	r1, r1, r0, lsl #28
    f3f8:	03fd0100 	mvnseq	r0, #0, 2
    f3fc:	0009880a 	andeq	r8, r9, sl, lsl #16
    f400:	0005db00 	andeq	sp, r5, r0, lsl #22
    f404:	0005cb00 	andeq	ip, r5, r0, lsl #22
    f408:	31711e00 	cmncc	r1, r0, lsl #28
    f40c:	03fd0100 	mvnseq	r0, #0, 2
    f410:	0009880e 	andeq	r8, r9, lr, lsl #16
    f414:	00064e00 	andeq	r4, r6, r0, lsl #28
    f418:	00063e00 	andeq	r3, r6, r0, lsl #28
    f41c:	00621e00 	rsbeq	r1, r2, r0, lsl #28
    f420:	0a03fe01 	beq	10ec2c <_Min_Stack_Size+0x10e82c>
    f424:	00000988 	andeq	r0, r0, r8, lsl #19
    f428:	000006c7 	andeq	r0, r0, r7, asr #13
    f42c:	000006bb 			; <UNDEFINED> instruction: 0x000006bb
    f430:	006d621e 	rsbeq	r6, sp, lr, lsl r2
    f434:	0d03fe01 	stceq	14, cr15, [r3, #-4]
    f438:	00000988 	andeq	r0, r0, r8, lsl #19
    f43c:	0000072e 	andeq	r0, r0, lr, lsr #14
    f440:	00000716 	andeq	r0, r0, r6, lsl r7
    f444:	0077771d 	rsbseq	r7, r7, sp, lsl r7
    f448:	1104c701 	tstne	r4, r1, lsl #14
    f44c:	00000a22 	andeq	r0, r0, r2, lsr #20
    f450:	0009781f 	andeq	r7, r9, pc, lsl r8
    f454:	000c2b00 	andeq	r2, ip, r0, lsl #22
    f458:	42512000 	subsmi	r2, r1, #0
    f45c:	3a010000 	bcc	4f464 <_Min_Stack_Size+0x4f064>
    f460:	09880404 	stmibeq	r8, {r2, sl}
    f464:	07be0000 	ldreq	r0, [lr, r0]!
    f468:	07ba0000 	ldreq	r0, [sl, r0]!
    f46c:	4c200000 	stcmi	0, cr0, [r0], #-0
    f470:	01000042 	tsteq	r0, r2, asr #32
    f474:	8804043a 	stmdahi	r4, {r1, r3, r4, r5, sl}
    f478:	e4000009 	str	r0, [r0], #-9
    f47c:	dc000007 	stcle	0, cr0, [r0], {7}
    f480:	20000007 	andcs	r0, r0, r7
    f484:	00004001 	andeq	r4, r0, r1
    f488:	04043a01 	streq	r3, [r4], #-2561	; 0xfffff5ff
    f48c:	00000988 	andeq	r0, r0, r8, lsl #19
    f490:	0000082e 	andeq	r0, r0, lr, lsr #16
    f494:	00000824 	andeq	r0, r0, r4, lsr #16
    f498:	003ffc20 	eorseq	pc, pc, r0, lsr #24
    f49c:	043a0100 	ldrteq	r0, [sl], #-256	; 0xffffff00
    f4a0:	00098804 	andeq	r8, r9, r4, lsl #16
    f4a4:	00087500 	andeq	r7, r8, r0, lsl #10
    f4a8:	00086d00 	andeq	r6, r8, r0, lsl #26
    f4ac:	40bd2000 	adcsmi	r2, sp, r0
    f4b0:	3a010000 	bcc	4f4b8 <_Min_Stack_Size+0x4f0b8>
    f4b4:	09880404 	stmibeq	r8, {r2, sl}
    f4b8:	08b30000 	ldmeq	r3!, {}	; <UNPREDICTABLE>
    f4bc:	08a90000 	stmiaeq	r9!, {}	; <UNPREDICTABLE>
    f4c0:	b8200000 	stmdalt	r0!, {}	; <UNPREDICTABLE>
    f4c4:	01000040 	tsteq	r0, r0, asr #32
    f4c8:	8804043a 	stmdahi	r4, {r1, r3, r4, r5, sl}
    f4cc:	08000009 	stmdaeq	r0, {r0, r3}
    f4d0:	00000009 	andeq	r0, r0, r9
    f4d4:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    f4d8:	006d5f5f 	rsbeq	r5, sp, pc, asr pc
    f4dc:	04043a01 	streq	r3, [r4], #-2561	; 0xfffff5ff
    f4e0:	00000988 	andeq	r0, r0, r8, lsl #19
    f4e4:	00000949 	andeq	r0, r0, r9, asr #18
    f4e8:	00000941 	andeq	r0, r0, r1, asr #18
    f4ec:	0a201f00 	beq	8170f4 <_Min_Stack_Size+0x816cf4>
    f4f0:	0cc80000 	stcleq	0, cr0, [r8], {0}
    f4f4:	51200000 			; <UNDEFINED> instruction: 0x51200000
    f4f8:	01000042 	tsteq	r0, r2, asr #32
    f4fc:	8808045f 	stmdahi	r8, {r0, r1, r2, r3, r4, r6, sl}
    f500:	83000009 	movwhi	r0, #9
    f504:	7d000009 	stcvc	0, cr0, [r0, #-36]	; 0xffffffdc
    f508:	20000009 	andcs	r0, r0, r9
    f50c:	0000424c 	andeq	r4, r0, ip, asr #4
    f510:	08045f01 	stmdaeq	r4, {r0, r8, r9, sl, fp, ip, lr}
    f514:	00000988 	andeq	r0, r0, r8, lsl #19
    f518:	000009b2 			; <UNDEFINED> instruction: 0x000009b2
    f51c:	000009ac 	andeq	r0, r0, ip, lsr #19
    f520:	00400120 	subeq	r0, r0, r0, lsr #2
    f524:	045f0100 	ldrbeq	r0, [pc], #-256	; f52c <_Min_Stack_Size+0xf12c>
    f528:	00098808 	andeq	r8, r9, r8, lsl #16
    f52c:	0009e500 	andeq	lr, r9, r0, lsl #10
    f530:	0009db00 	andeq	sp, r9, r0, lsl #22
    f534:	3ffc2000 	svccc	0x00fc2000
    f538:	5f010000 	svcpl	0x00010000
    f53c:	09880804 	stmibeq	r8, {r2, fp}
    f540:	0a2c0000 	beq	b0f548 <_Min_Stack_Size+0xb0f148>
    f544:	0a240000 	beq	90f54c <_Min_Stack_Size+0x90f14c>
    f548:	bd200000 	stclt	0, cr0, [r0, #-0]
    f54c:	01000040 	tsteq	r0, r0, asr #32
    f550:	8808045f 	stmdahi	r8, {r0, r1, r2, r3, r4, r6, sl}
    f554:	68000009 	stmdavs	r0, {r0, r3}
    f558:	6000000a 	andvs	r0, r0, sl
    f55c:	2000000a 	andcs	r0, r0, sl
    f560:	000040b8 	strheq	r4, [r0], -r8
    f564:	08045f01 	stmdaeq	r4, {r0, r8, r9, sl, fp, ip, lr}
    f568:	00000988 	andeq	r0, r0, r8, lsl #19
    f56c:	00000aa4 	andeq	r0, r0, r4, lsr #21
    f570:	00000a9c 	muleq	r0, ip, sl
    f574:	6d5f5f1e 	ldclvs	15, cr5, [pc, #-120]	; f504 <_Min_Stack_Size+0xf104>
    f578:	045f0100 	ldrbeq	r0, [pc], #-256	; f580 <_Min_Stack_Size+0xf180>
    f57c:	00098808 	andeq	r8, r9, r8, lsl #16
    f580:	000ae500 	andeq	lr, sl, r0, lsl #10
    f584:	000add00 	andeq	sp, sl, r0, lsl #26
    f588:	901f0000 	andsls	r0, pc, r0
    f58c:	65000009 	strvs	r0, [r0, #-9]
    f590:	2000000d 	andcs	r0, r0, sp
    f594:	00004251 	andeq	r4, r0, r1, asr r2
    f598:	04046401 	streq	r6, [r4], #-1025	; 0xfffffbff
    f59c:	00000988 	andeq	r0, r0, r8, lsl #19
    f5a0:	00000b1d 	andeq	r0, r0, sp, lsl fp
    f5a4:	00000b19 	andeq	r0, r0, r9, lsl fp
    f5a8:	00424c20 	subeq	r4, r2, r0, lsr #24
    f5ac:	04640100 	strbteq	r0, [r4], #-256	; 0xffffff00
    f5b0:	00098804 	andeq	r8, r9, r4, lsl #16
    f5b4:	000b4700 	andeq	r4, fp, r0, lsl #14
    f5b8:	000b4300 	andeq	r4, fp, r0, lsl #6
    f5bc:	40012000 	andmi	r2, r1, r0
    f5c0:	64010000 	strvs	r0, [r1], #-0
    f5c4:	09880404 	stmibeq	r8, {r2, sl}
    f5c8:	0b7b0000 	bleq	1ecf5d0 <_Min_Stack_Size+0x1ecf1d0>
    f5cc:	0b710000 	bleq	1c4f5d4 <_Min_Stack_Size+0x1c4f1d4>
    f5d0:	fc200000 	stc2	0, cr0, [r0], #-0
    f5d4:	0100003f 	tsteq	r0, pc, lsr r0
    f5d8:	88040464 	stmdahi	r4, {r2, r5, r6, sl}
    f5dc:	c4000009 	strgt	r0, [r0], #-9
    f5e0:	ba00000b 	blt	f614 <_Min_Stack_Size+0xf214>
    f5e4:	2000000b 	andcs	r0, r0, fp
    f5e8:	000040bd 	strheq	r4, [r0], -sp
    f5ec:	04046401 	streq	r6, [r4], #-1025	; 0xfffffbff
    f5f0:	00000988 	andeq	r0, r0, r8, lsl #19
    f5f4:	00000c0f 	andeq	r0, r0, pc, lsl #24
    f5f8:	00000c03 	andeq	r0, r0, r3, lsl #24
    f5fc:	0040b820 	subeq	fp, r0, r0, lsr #16
    f600:	04640100 	strbteq	r0, [r4], #-256	; 0xffffff00
    f604:	00098804 	andeq	r8, r9, r4, lsl #16
    f608:	000c6800 	andeq	r6, ip, r0, lsl #16
    f60c:	000c5e00 	andeq	r5, ip, r0, lsl #28
    f610:	5f5f1e00 	svcpl	0x005f1e00
    f614:	6401006d 	strvs	r0, [r1], #-109	; 0xffffff93
    f618:	09880404 	stmibeq	r8, {r2, sl}
    f61c:	0cc10000 	stcleq	0, cr0, [r1], {0}
    f620:	0cb90000 	ldceq	0, cr0, [r9]
    f624:	21000000 	mrscs	r0, (UNDEF: 0)
    f628:	000009a8 	andeq	r0, r0, r8, lsr #19
    f62c:	00316d1e 	eorseq	r6, r1, lr, lsl sp
    f630:	0f04a501 	svceq	0x0004a501
    f634:	00000988 	andeq	r0, r0, r8, lsl #19
    f638:	00000cfd 	strdeq	r0, [r0], -sp
    f63c:	00000cf5 	strdeq	r0, [r0], -r5
    f640:	00306d1e 	eorseq	r6, r0, lr, lsl sp
    f644:	1304a501 	movwne	sl, #17665	; 0x4501
    f648:	00000988 	andeq	r0, r0, r8, lsl #19
    f64c:	00000d3b 	andeq	r0, r0, fp, lsr sp
    f650:	00000d31 	andeq	r0, r0, r1, lsr sp
    f654:	0009d81f 	andeq	sp, r9, pc, lsl r8
    f658:	000e2f00 	andeq	r2, lr, r0, lsl #30
    f65c:	42512000 	subsmi	r2, r1, #0
    f660:	b0010000 	andlt	r0, r1, r0
    f664:	09880804 	stmibeq	r8, {r2, fp}
    f668:	0d860000 	stceq	0, cr0, [r6]
    f66c:	0d7a0000 	ldcleq	0, cr0, [sl, #-0]
    f670:	4c200000 	stcmi	0, cr0, [r0], #-0
    f674:	01000042 	tsteq	r0, r2, asr #32
    f678:	880804b0 	stmdahi	r8, {r4, r5, r7, sl}
    f67c:	e8000009 	stmda	r0, {r0, r3}
    f680:	dc00000d 	stcle	0, cr0, [r0], {13}
    f684:	2000000d 	andcs	r0, r0, sp
    f688:	00004001 	andeq	r4, r0, r1
    f68c:	0804b001 	stmdaeq	r4, {r0, ip, sp, pc}
    f690:	00000988 	andeq	r0, r0, r8, lsl #19
    f694:	00000e5e 	andeq	r0, r0, lr, asr lr
    f698:	00000e4a 	andeq	r0, r0, sl, asr #28
    f69c:	003ffc20 	eorseq	pc, pc, r0, lsr #24
    f6a0:	04b00100 	ldrteq	r0, [r0], #256	; 0x100
    f6a4:	00098808 	andeq	r8, r9, r8, lsl #16
    f6a8:	000edc00 	andeq	sp, lr, r0, lsl #24
    f6ac:	000ed400 	andeq	sp, lr, r0, lsl #8
    f6b0:	40bd2000 	adcsmi	r2, sp, r0
    f6b4:	b0010000 	andlt	r0, r1, r0
    f6b8:	09880804 	stmibeq	r8, {r2, fp}
    f6bc:	0f160000 	svceq	0x00160000
    f6c0:	0f100000 	svceq	0x00100000
    f6c4:	b8200000 	stmdalt	r0!, {}	; <UNPREDICTABLE>
    f6c8:	01000040 	tsteq	r0, r0, asr #32
    f6cc:	880804b0 	stmdahi	r8, {r4, r5, r7, sl}
    f6d0:	4b000009 	blmi	f6fc <_Min_Stack_Size+0xf2fc>
    f6d4:	3f00000f 	svccc	0x0000000f
    f6d8:	1e00000f 	cdpne	0, 0, cr0, cr0, cr15, {0}
    f6dc:	006d5f5f 	rsbeq	r5, sp, pc, asr pc
    f6e0:	0804b001 	stmdaeq	r4, {r0, ip, sp, pc}
    f6e4:	00000988 	andeq	r0, r0, r8, lsl #19
    f6e8:	00000fa2 	andeq	r0, r0, r2, lsr #31
    f6ec:	00000f9a 	muleq	r0, sl, pc	; <UNPREDICTABLE>
    f6f0:	0a082100 	beq	217af8 <_Min_Stack_Size+0x2176f8>
    f6f4:	a2200000 	eorge	r0, r0, #0
    f6f8:	01000044 	tsteq	r0, r4, asr #32
    f6fc:	a00804b1 			; <UNDEFINED> instruction: 0xa00804b1
    f700:	dc000009 	stcle	0, cr0, [r0], {9}
    f704:	d600000f 	strle	r0, [r0], -pc
    f708:	0000000f 	andeq	r0, r0, pc
    f70c:	04050000 	streq	r0, [r5], #-0
    f710:	000009a0 	andeq	r0, r0, r0, lsr #19
    f714:	00002200 	andeq	r2, r0, r0, lsl #4
    f718:	e0000200 	and	r0, r0, r0, lsl #4
    f71c:	0400002e 	streq	r0, [r0], #-46	; 0xffffffd2
    f720:	00730b01 	rsbseq	r0, r3, r1, lsl #22
    f724:	000e4c00 	andeq	r4, lr, r0, lsl #24
    f728:	000e4e08 	andeq	r4, lr, r8, lsl #28
    f72c:	0048f308 	subeq	pc, r8, r8, lsl #6
    f730:	0034d700 	eorseq	sp, r4, r0, lsl #14
    f734:	00353f00 	eorseq	r3, r5, r0, lsl #30
    f738:	91800100 	orrls	r0, r0, r0, lsl #2
    f73c:	04000009 	streq	r0, [r0], #-9
    f740:	002ef400 	eoreq	pc, lr, r0, lsl #8
    f744:	91010400 	tstls	r1, r0, lsl #8
    f748:	0c000049 	stceq	0, cr0, [r0], {73}	; 0x49
    f74c:	00004a32 	andeq	r4, r0, r2, lsr sl
    f750:	00004937 	andeq	r4, r0, r7, lsr r9
    f754:	08000e50 	stmdaeq	r0, {r4, r6, r9, sl, fp}
    f758:	0000000c 	andeq	r0, r0, ip
    f75c:	0000736b 	andeq	r7, r0, fp, ror #6
    f760:	aa070402 	bge	1d0770 <_Min_Stack_Size+0x1d0370>
    f764:	03000000 	movweq	r0, #0
    f768:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    f76c:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    f770:	0001b005 	andeq	fp, r1, r5
    f774:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    f778:	00000719 	andeq	r0, r0, r9, lsl r7
    f77c:	0003e004 	andeq	lr, r3, r4
    f780:	01650200 	cmneq	r5, r0, lsl #4
    f784:	00002517 	andeq	r2, r0, r7, lsl r5
    f788:	06010200 	streq	r0, [r1], -r0, lsl #4
    f78c:	000007a9 	andeq	r0, r0, r9, lsr #15
    f790:	a7080102 	strge	r0, [r8, -r2, lsl #2]
    f794:	02000007 	andeq	r0, r0, #7
    f798:	00000502 	andeq	r0, r0, r2, lsl #10
    f79c:	02020000 	andeq	r0, r2, #0
    f7a0:	00037707 	andeq	r7, r3, r7, lsl #14
    f7a4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    f7a8:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
    f7ac:	a5070402 	strge	r0, [r7, #-1026]	; 0xfffffbfe
    f7b0:	02000000 	andeq	r0, r0, #0
    f7b4:	00a00708 	adceq	r0, r0, r8, lsl #14
    f7b8:	62050000 	andvs	r0, r5, #0
    f7bc:	03000005 	movweq	r0, #5
    f7c0:	006a0e2e 	rsbeq	r0, sl, lr, lsr #28
    f7c4:	fb050000 	blx	14f7ce <_Min_Stack_Size+0x14f3ce>
    f7c8:	03000006 	movweq	r0, #6
    f7cc:	006a0e74 	rsbeq	r0, sl, r4, ror lr
    f7d0:	04060000 	streq	r0, [r6], #-0
    f7d4:	b903a503 	stmdblt	r3, {r0, r1, r8, sl, sp, pc}
    f7d8:	07000000 	streq	r0, [r0, -r0]
    f7dc:	000003da 	ldrdeq	r0, [r0], -sl
    f7e0:	410ca703 	tstmi	ip, r3, lsl #14
    f7e4:	07000000 	streq	r0, [r0, -r0]
    f7e8:	000002ec 	andeq	r0, r0, ip, ror #5
    f7ec:	b913a803 	ldmdblt	r3, {r0, r1, fp, sp, pc}
    f7f0:	00000000 	andeq	r0, r0, r0
    f7f4:	00005508 	andeq	r5, r0, r8, lsl #10
    f7f8:	0000c900 	andeq	ip, r0, r0, lsl #18
    f7fc:	00250900 	eoreq	r0, r5, r0, lsl #18
    f800:	00030000 	andeq	r0, r3, r0
    f804:	a203080a 	andge	r0, r3, #655360	; 0xa0000
    f808:	0000ed09 	andeq	lr, r0, r9, lsl #26
    f80c:	06e30b00 	strbteq	r0, [r3], r0, lsl #22
    f810:	a4030000 	strge	r0, [r3], #-0
    f814:	00002c07 	andeq	r2, r0, r7, lsl #24
    f818:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    f81c:	03000008 	movweq	r0, #8
    f820:	009705a9 	addseq	r0, r7, r9, lsr #11
    f824:	00040000 	andeq	r0, r4, r0
    f828:	00066d05 	andeq	r6, r6, r5, lsl #26
    f82c:	03aa0300 			; <UNDEFINED> instruction: 0x03aa0300
    f830:	000000c9 	andeq	r0, r0, r9, asr #1
    f834:	c305040c 	movwgt	r0, #21516	; 0x540c
    f838:	04000007 	streq	r0, [r0], #-7
    f83c:	00711916 	rsbseq	r1, r1, r6, lsl r9
    f840:	cb050000 	blgt	14f848 <_Min_Stack_Size+0x14f448>
    f844:	05000005 	streq	r0, [r0, #-5]
    f848:	002c0d0c 	eoreq	r0, ip, ip, lsl #26
    f84c:	59050000 	stmdbpl	r5, {}	; <UNPREDICTABLE>
    f850:	04000008 	streq	r0, [r0], #-8
    f854:	01071b23 	tsteq	r7, r3, lsr #22
    f858:	9b0d0000 	blls	34f860 <_Min_Stack_Size+0x34f460>
    f85c:	18000002 	stmdane	r0, {r1}
    f860:	79083404 	stmdbvc	r8, {r2, sl, ip, sp}
    f864:	0b000001 	bleq	f870 <_Min_Stack_Size+0xf470>
    f868:	0000067d 	andeq	r0, r0, sp, ror r6
    f86c:	79133604 	ldmdbvc	r3, {r2, r9, sl, ip, sp}
    f870:	00000001 	andeq	r0, r0, r1
    f874:	006b5f0e 	rsbeq	r5, fp, lr, lsl #30
    f878:	2c073704 	stccs	7, cr3, [r7], {4}
    f87c:	04000000 	streq	r0, [r0], #-0
    f880:	0006c40b 	andeq	ip, r6, fp, lsl #8
    f884:	0b370400 	bleq	dd088c <_Min_Stack_Size+0xdd048c>
    f888:	0000002c 	andeq	r0, r0, ip, lsr #32
    f88c:	028d0b08 	addeq	r0, sp, #8, 22	; 0x2000
    f890:	37040000 	strcc	r0, [r4, -r0]
    f894:	00002c14 	andeq	r2, r0, r4, lsl ip
    f898:	9a0b0c00 	bls	2d28a0 <_Min_Stack_Size+0x2d24a0>
    f89c:	04000001 	streq	r0, [r0], #-1
    f8a0:	002c1b37 	eoreq	r1, ip, r7, lsr fp
    f8a4:	0e100000 	cdpeq	0, 1, cr0, cr0, cr0, {0}
    f8a8:	0400785f 	streq	r7, [r0], #-2143	; 0xfffff7a1
    f8ac:	017f0b38 	cmneq	pc, r8, lsr fp	; <UNPREDICTABLE>
    f8b0:	00140000 	andseq	r0, r4, r0
    f8b4:	011f040f 	tsteq	pc, pc, lsl #8
    f8b8:	fb080000 	blx	20f8c2 <_Min_Stack_Size+0x20f4c2>
    f8bc:	8f000000 	svchi	0x00000000
    f8c0:	09000001 	stmdbeq	r0, {r0}
    f8c4:	00000025 	andeq	r0, r0, r5, lsr #32
    f8c8:	d50d0000 	strle	r0, [sp, #-0]
    f8cc:	24000002 	strcs	r0, [r0], #-2
    f8d0:	12083c04 	andne	r3, r8, #4, 24	; 0x400
    f8d4:	0b000002 	bleq	f8e4 <_Min_Stack_Size+0xf4e4>
    f8d8:	00000108 	andeq	r0, r0, r8, lsl #2
    f8dc:	2c093e04 	stccs	14, cr3, [r9], {4}
    f8e0:	00000000 	andeq	r0, r0, r0
    f8e4:	0007b50b 	andeq	fp, r7, fp, lsl #10
    f8e8:	093f0400 	ldmdbeq	pc!, {sl}	; <UNPREDICTABLE>
    f8ec:	0000002c 	andeq	r0, r0, ip, lsr #32
    f8f0:	01390b04 	teqeq	r9, r4, lsl #22
    f8f4:	40040000 	andmi	r0, r4, r0
    f8f8:	00002c09 	andeq	r2, r0, r9, lsl #24
    f8fc:	ca0b0800 	bgt	2d1904 <_Min_Stack_Size+0x2d1504>
    f900:	04000008 	streq	r0, [r0], #-8
    f904:	002c0941 	eoreq	r0, ip, r1, asr #18
    f908:	0b0c0000 	bleq	30f910 <_Min_Stack_Size+0x30f510>
    f90c:	00000538 	andeq	r0, r0, r8, lsr r5
    f910:	2c094204 	sfmcs	f4, 4, [r9], {4}
    f914:	10000000 	andne	r0, r0, r0
    f918:	0004210b 	andeq	r2, r4, fp, lsl #2
    f91c:	09430400 	stmdbeq	r3, {sl}^
    f920:	0000002c 	andeq	r0, r0, ip, lsr #32
    f924:	07f60b14 			; <UNDEFINED> instruction: 0x07f60b14
    f928:	44040000 	strmi	r0, [r4], #-0
    f92c:	00002c09 	andeq	r2, r0, r9, lsl #24
    f930:	400b1800 	andmi	r1, fp, r0, lsl #16
    f934:	04000006 	streq	r0, [r0], #-6
    f938:	002c0945 	eoreq	r0, ip, r5, asr #18
    f93c:	0b1c0000 	bleq	70f944 <_Min_Stack_Size+0x70f544>
    f940:	0000088c 	andeq	r0, r0, ip, lsl #17
    f944:	2c094604 	stccs	6, cr4, [r9], {4}
    f948:	20000000 	andcs	r0, r0, r0
    f94c:	01481000 	mrseq	r1, (UNDEF: 72)
    f950:	01080000 	mrseq	r0, (UNDEF: 8)
    f954:	57084f04 	strpl	r4, [r8, -r4, lsl #30]
    f958:	0b000002 	bleq	f968 <_Min_Stack_Size+0xf568>
    f95c:	0000026d 	andeq	r0, r0, sp, ror #4
    f960:	570a5004 	strpl	r5, [sl, -r4]
    f964:	00000002 	andeq	r0, r0, r2
    f968:	0005fe0b 	andeq	pc, r5, fp, lsl #28
    f96c:	09510400 	ldmdbeq	r1, {sl}^
    f970:	00000257 	andeq	r0, r0, r7, asr r2
    f974:	07961180 	ldreq	r1, [r6, r0, lsl #3]
    f978:	53040000 	movwpl	r0, #16384	; 0x4000
    f97c:	0000fb0a 	andeq	pc, r0, sl, lsl #22
    f980:	11010000 	mrsne	r0, (UNDEF: 1)
    f984:	00000192 	muleq	r0, r2, r1
    f988:	fb0a5604 	blx	2a51a2 <_Min_Stack_Size+0x2a4da2>
    f98c:	04000000 	streq	r0, [r0], #-0
    f990:	f9080001 			; <UNDEFINED> instruction: 0xf9080001
    f994:	67000000 	strvs	r0, [r0, -r0]
    f998:	09000002 	stmdbeq	r0, {r1}
    f99c:	00000025 	andeq	r0, r0, r5, lsr #32
    f9a0:	7610001f 			; <UNDEFINED> instruction: 0x7610001f
    f9a4:	9000004a 	andls	r0, r0, sl, asr #32
    f9a8:	08620401 	stmdaeq	r2!, {r0, sl}^
    f9ac:	000002aa 	andeq	r0, r0, sl, lsr #5
    f9b0:	00067d0b 	andeq	r7, r6, fp, lsl #26
    f9b4:	12630400 	rsbne	r0, r3, #0, 8
    f9b8:	000002aa 	andeq	r0, r0, sl, lsr #5
    f9bc:	068e0b00 	streq	r0, [lr], r0, lsl #22
    f9c0:	64040000 	strvs	r0, [r4], #-0
    f9c4:	00002c06 	andeq	r2, r0, r6, lsl #24
    f9c8:	880b0400 	stmdahi	fp, {sl}
    f9cc:	04000002 	streq	r0, [r0], #-2
    f9d0:	02b00966 	adcseq	r0, r0, #1671168	; 0x198000
    f9d4:	0b080000 	bleq	20f9dc <_Min_Stack_Size+0x20f5dc>
    f9d8:	00000148 	andeq	r0, r0, r8, asr #2
    f9dc:	121e6704 	andsne	r6, lr, #4, 14	; 0x100000
    f9e0:	88000002 	stmdahi	r0, {r1}
    f9e4:	67040f00 	strvs	r0, [r4, -r0, lsl #30]
    f9e8:	08000002 	stmdaeq	r0, {r1}
    f9ec:	000002c0 	andeq	r0, r0, r0, asr #5
    f9f0:	000002c0 	andeq	r0, r0, r0, asr #5
    f9f4:	00002509 	andeq	r2, r0, r9, lsl #10
    f9f8:	0f001f00 	svceq	0x00001f00
    f9fc:	0002c604 	andeq	ip, r2, r4, lsl #12
    fa00:	4a0d1200 	bmi	354208 <_Min_Stack_Size+0x353e08>
    fa04:	08000006 	stmdaeq	r0, {r1, r2}
    fa08:	ef087a04 	svc	0x00087a04
    fa0c:	0b000002 	bleq	fa1c <_Min_Stack_Size+0xf61c>
    fa10:	00000133 	andeq	r0, r0, r3, lsr r1
    fa14:	ef117b04 	svc	0x00117b04
    fa18:	00000002 	andeq	r0, r0, r2
    fa1c:	00072e0b 	andeq	r2, r7, fp, lsl #28
    fa20:	067c0400 	ldrbteq	r0, [ip], -r0, lsl #8
    fa24:	0000002c 	andeq	r0, r0, ip, lsr #32
    fa28:	040f0004 	streq	r0, [pc], #-4	; fa30 <_Min_Stack_Size+0xf630>
    fa2c:	00000055 	andeq	r0, r0, r5, asr r0
    fa30:	0000280d 	andeq	r2, r0, sp, lsl #16
    fa34:	ba046800 	blt	129a3c <_Min_Stack_Size+0x12963c>
    fa38:	00043808 	andeq	r3, r4, r8, lsl #16
    fa3c:	705f0e00 	subsvc	r0, pc, r0, lsl #28
    fa40:	12bb0400 	adcsne	r0, fp, #0, 8
    fa44:	000002ef 	andeq	r0, r0, pc, ror #5
    fa48:	725f0e00 	subsvc	r0, pc, #0, 28
    fa4c:	07bc0400 	ldreq	r0, [ip, r0, lsl #8]!
    fa50:	0000002c 	andeq	r0, r0, ip, lsr #32
    fa54:	775f0e04 	ldrbvc	r0, [pc, -r4, lsl #28]
    fa58:	07bd0400 	ldreq	r0, [sp, r0, lsl #8]!
    fa5c:	0000002c 	andeq	r0, r0, ip, lsr #32
    fa60:	018b0b08 	orreq	r0, fp, r8, lsl #22
    fa64:	be040000 	cdplt	0, 0, cr0, cr4, cr0, {0}
    fa68:	00005c09 	andeq	r5, r0, r9, lsl #24
    fa6c:	0d0b0c00 	stceq	12, cr0, [fp, #-0]
    fa70:	04000003 	streq	r0, [r0], #-3
    fa74:	005c09bf 	ldrheq	r0, [ip], #-159	; 0xffffff61
    fa78:	0e0e0000 	cdpeq	0, 0, cr0, cr14, cr0, {0}
    fa7c:	0066625f 	rsbeq	r6, r6, pc, asr r2
    fa80:	c711c004 	ldrgt	ip, [r1, -r4]
    fa84:	10000002 	andne	r0, r0, r2
    fa88:	0000b70b 	andeq	fp, r0, fp, lsl #14
    fa8c:	07c10400 	strbeq	r0, [r1, r0, lsl #8]
    fa90:	0000002c 	andeq	r0, r0, ip, lsr #32
    fa94:	01690b18 	cmneq	r9, r8, lsl fp
    fa98:	c8040000 	stmdagt	r4, {}	; <UNPREDICTABLE>
    fa9c:	0000f90a 	andeq	pc, r0, sl, lsl #18
    faa0:	bd0b1c00 	stclt	12, cr1, [fp, #-0]
    faa4:	04000033 	streq	r0, [r0], #-51	; 0xffffffcd
    faa8:	05bc1dca 	ldreq	r1, [ip, #3530]!	; 0xdca
    faac:	0b200000 	bleq	80fab4 <_Min_Stack_Size+0x80f6b4>
    fab0:	00003336 	andeq	r3, r0, r6, lsr r3
    fab4:	e61dcc04 	ldr	ip, [sp], -r4, lsl #24
    fab8:	24000005 	strcs	r0, [r0], #-5
    fabc:	0006eb0b 	andeq	lr, r6, fp, lsl #22
    fac0:	0dcf0400 	cfstrdeq	mvd0, [pc]	; fac8 <_Min_Stack_Size+0xf6c8>
    fac4:	0000060a 	andeq	r0, r0, sl, lsl #12
    fac8:	08a60b28 	stmiaeq	r6!, {r3, r5, r8, r9, fp}
    facc:	d0040000 	andle	r0, r4, r0
    fad0:	00062409 	andeq	r2, r6, r9, lsl #8
    fad4:	5f0e2c00 	svcpl	0x000e2c00
    fad8:	04006275 	streq	r6, [r0], #-629	; 0xfffffd8b
    fadc:	02c711d3 	sbceq	r1, r7, #-1073741772	; 0xc0000034
    fae0:	0e300000 	cdpeq	0, 3, cr0, cr0, cr0, {0}
    fae4:	0070755f 	rsbseq	r7, r0, pc, asr r5
    fae8:	ef12d404 	svc	0x0012d404
    faec:	38000002 	stmdacc	r0, {r1}
    faf0:	72755f0e 	rsbsvc	r5, r5, #14, 30	; 0x38
    faf4:	07d50400 	ldrbeq	r0, [r5, r0, lsl #8]
    faf8:	0000002c 	andeq	r0, r0, ip, lsr #32
    fafc:	012d0b3c 			; <UNDEFINED> instruction: 0x012d0b3c
    fb00:	d8040000 	stmdale	r4, {}	; <UNPREDICTABLE>
    fb04:	00062a11 	andeq	r2, r6, r1, lsl sl
    fb08:	760b4000 	strvc	r4, [fp], -r0
    fb0c:	04000008 	streq	r0, [r0], #-8
    fb10:	063a11d9 			; <UNDEFINED> instruction: 0x063a11d9
    fb14:	0e430000 	cdpeq	0, 4, cr0, cr3, cr0, {0}
    fb18:	00626c5f 	rsbeq	r6, r2, pc, asr ip
    fb1c:	c711dc04 	ldrgt	sp, [r1, -r4, lsl #24]
    fb20:	44000002 	strmi	r0, [r0], #-2
    fb24:	0007250b 	andeq	r2, r7, fp, lsl #10
    fb28:	07df0400 	ldrbeq	r0, [pc, r0, lsl #8]
    fb2c:	0000002c 	andeq	r0, r0, ip, lsr #32
    fb30:	04380b4c 	ldrteq	r0, [r8], #-2892	; 0xfffff4b4
    fb34:	e0040000 	and	r0, r4, r0
    fb38:	00007f0a 	andeq	r7, r0, sl, lsl #30
    fb3c:	aa0b5000 	bge	2e3b44 <_Min_Stack_Size+0x2e3744>
    fb40:	0400004b 	streq	r0, [r0], #-75	; 0xffffffb5
    fb44:	045612e3 	ldrbeq	r1, [r6], #-739	; 0xfffffd1d
    fb48:	0b540000 	bleq	150fb50 <_Min_Stack_Size+0x150f750>
    fb4c:	000003f1 	strdeq	r0, [r0], -r1
    fb50:	130ce704 	movwne	lr, #50948	; 0xc704
    fb54:	58000001 	stmdapl	r0, {r0}
    fb58:	0002e30b 	andeq	lr, r2, fp, lsl #6
    fb5c:	0ee90400 	cdpeq	4, 14, cr0, cr9, cr0, {0}
    fb60:	000000ed 	andeq	r0, r0, sp, ror #1
    fb64:	06510b5c 			; <UNDEFINED> instruction: 0x06510b5c
    fb68:	ea040000 	b	10fb70 <_Min_Stack_Size+0x10f770>
    fb6c:	00002c09 	andeq	r2, r0, r9, lsl #24
    fb70:	13006400 	movwne	r6, #1024	; 0x400
    fb74:	0000002c 	andeq	r0, r0, ip, lsr #32
    fb78:	00000456 	andeq	r0, r0, r6, asr r4
    fb7c:	00045614 	andeq	r5, r4, r4, lsl r6
    fb80:	00f91400 	rscseq	r1, r9, r0, lsl #8
    fb84:	aa140000 	bge	50fb8c <_Min_Stack_Size+0x50f78c>
    fb88:	14000005 	strne	r0, [r0], #-5
    fb8c:	0000002c 	andeq	r0, r0, ip, lsr #32
    fb90:	61040f00 	tstvs	r4, r0, lsl #30
    fb94:	15000004 	strne	r0, [r0, #-4]
    fb98:	00000456 	andeq	r0, r0, r6, asr r4
    fb9c:	0006cc16 	andeq	ip, r6, r6, lsl ip
    fba0:	04042800 	streq	r2, [r4], #-2048	; 0xfffff800
    fba4:	aa080265 	bge	210540 <_Min_Stack_Size+0x210140>
    fba8:	17000005 	strne	r0, [r0, -r5]
    fbac:	0000062c 	andeq	r0, r0, ip, lsr #12
    fbb0:	07026704 	streq	r6, [r2, -r4, lsl #14]
    fbb4:	0000002c 	andeq	r0, r0, ip, lsr #32
    fbb8:	08061700 	stmdaeq	r6, {r8, r9, sl, ip}
    fbbc:	6c040000 	stcvs	0, cr0, [r4], {-0}
    fbc0:	06960b02 	ldreq	r0, [r6], r2, lsl #22
    fbc4:	17040000 	strne	r0, [r4, -r0]
    fbc8:	000007ee 	andeq	r0, r0, lr, ror #15
    fbcc:	14026c04 	strne	r6, [r2], #-3076	; 0xfffff3fc
    fbd0:	00000696 	muleq	r0, r6, r6
    fbd4:	02931708 	addseq	r1, r3, #8, 14	; 0x200000
    fbd8:	6c040000 	stcvs	0, cr0, [r4], {-0}
    fbdc:	06961e02 	ldreq	r1, [r6], r2, lsl #28
    fbe0:	170c0000 	strne	r0, [ip, -r0]
    fbe4:	00000689 	andeq	r0, r0, r9, lsl #13
    fbe8:	08026e04 	stmdaeq	r2, {r2, r9, sl, fp, sp, lr}
    fbec:	0000002c 	andeq	r0, r0, ip, lsr #32
    fbf0:	00421710 	subeq	r1, r2, r0, lsl r7
    fbf4:	6f040000 	svcvs	0x00040000
    fbf8:	08960802 	ldmeq	r6, {r1, fp}
    fbfc:	17140000 	ldrne	r0, [r4, -r0]
    fc00:	000006ab 	andeq	r0, r0, fp, lsr #13
    fc04:	07027204 	streq	r7, [r2, -r4, lsl #4]
    fc08:	0000002c 	andeq	r0, r0, ip, lsr #32
    fc0c:	069b1730 			; <UNDEFINED> instruction: 0x069b1730
    fc10:	73040000 	movwvc	r0, #16384	; 0x4000
    fc14:	08ab1602 	stmiaeq	fp!, {r1, r9, sl, ip}
    fc18:	17340000 	ldrne	r0, [r4, -r0]!
    fc1c:	00000541 	andeq	r0, r0, r1, asr #10
    fc20:	07027504 	streq	r7, [r2, -r4, lsl #10]
    fc24:	0000002c 	andeq	r0, r0, ip, lsr #32
    fc28:	07e41738 			; <UNDEFINED> instruction: 0x07e41738
    fc2c:	77040000 	strvc	r0, [r4, -r0]
    fc30:	08bc0a02 	ldmeq	ip!, {r1, r9, fp}
    fc34:	173c0000 	ldrne	r0, [ip, -r0]!
    fc38:	000003fd 	strdeq	r0, [r0], -sp
    fc3c:	13027a04 	movwne	r7, #10756	; 0x2a04
    fc40:	00000179 	andeq	r0, r0, r9, ror r1
    fc44:	01a61740 			; <UNDEFINED> instruction: 0x01a61740
    fc48:	7b040000 	blvc	10fc50 <_Min_Stack_Size+0x10f850>
    fc4c:	002c0702 	eoreq	r0, ip, r2, lsl #14
    fc50:	17440000 	strbne	r0, [r4, -r0]
    fc54:	000008c0 	andeq	r0, r0, r0, asr #17
    fc58:	13027c04 	movwne	r7, #11268	; 0x2c04
    fc5c:	00000179 	andeq	r0, r0, r9, ror r1
    fc60:	05a31748 	streq	r1, [r3, #1864]!	; 0x748
    fc64:	7d040000 	stcvc	0, cr0, [r4, #-0]
    fc68:	08c21402 	stmiaeq	r2, {r1, sl, ip}^
    fc6c:	174c0000 	strbne	r0, [ip, -r0]
    fc70:	00000305 	andeq	r0, r0, r5, lsl #6
    fc74:	07028004 	streq	r8, [r2, -r4]
    fc78:	0000002c 	andeq	r0, r0, ip, lsr #32
    fc7c:	05f61750 	ldrbeq	r1, [r6, #1872]!	; 0x750
    fc80:	81040000 	mrshi	r0, (UNDEF: 4)
    fc84:	05aa0902 	streq	r0, [sl, #2306]!	; 0x902
    fc88:	17540000 	ldrbne	r0, [r4, -r0]
    fc8c:	0000061c 	andeq	r0, r0, ip, lsl r6
    fc90:	0702a404 	streq	sl, [r2, -r4, lsl #8]
    fc94:	00000871 	andeq	r0, r0, r1, ror r8
    fc98:	4a761858 	bmi	1d95e00 <_Min_Stack_Size+0x1d95a00>
    fc9c:	a8040000 	stmdage	r4, {}	; <UNPREDICTABLE>
    fca0:	02aa1302 	adceq	r1, sl, #134217728	; 0x8000000
    fca4:	01480000 	mrseq	r0, (UNDEF: 72)
    fca8:	00038a18 	andeq	r8, r3, r8, lsl sl
    fcac:	02a90400 	adceq	r0, r9, #0, 8
    fcb0:	00026712 	andeq	r6, r2, r2, lsl r7
    fcb4:	18014c00 	stmdane	r1, {sl, fp, lr}
    fcb8:	00000832 	andeq	r0, r0, r2, lsr r8
    fcbc:	0c02ad04 	stceq	13, cr10, [r2], {4}
    fcc0:	000008d3 	ldrdeq	r0, [r0], -r3
    fcc4:	711802dc 			; <UNDEFINED> instruction: 0x711802dc
    fcc8:	04000001 	streq	r0, [r0], #-1
    fccc:	571002b2 			; <UNDEFINED> instruction: 0x571002b2
    fcd0:	e0000006 	and	r0, r0, r6
    fcd4:	01431802 	cmpeq	r3, r2, lsl #16
    fcd8:	b4040000 	strlt	r0, [r4], #-0
    fcdc:	08df0a02 	ldmeq	pc, {r1, r9, fp}^	; <UNPREDICTABLE>
    fce0:	02ec0000 	rsceq	r0, ip, #0
    fce4:	b0040f00 	andlt	r0, r4, r0, lsl #30
    fce8:	02000005 	andeq	r0, r0, #5
    fcec:	07b00801 	ldreq	r0, [r0, r1, lsl #16]!
    fcf0:	b0150000 	andslt	r0, r5, r0
    fcf4:	0f000005 	svceq	0x00000005
    fcf8:	00043804 	andeq	r3, r4, r4, lsl #16
    fcfc:	002c1300 	eoreq	r1, ip, r0, lsl #6
    fd00:	05e00000 	strbeq	r0, [r0, #0]!
    fd04:	56140000 	ldrpl	r0, [r4], -r0
    fd08:	14000004 	strne	r0, [r0], #-4
    fd0c:	000000f9 	strdeq	r0, [r0], -r9
    fd10:	0005e014 	andeq	lr, r5, r4, lsl r0
    fd14:	002c1400 	eoreq	r1, ip, r0, lsl #8
    fd18:	0f000000 	svceq	0x00000000
    fd1c:	0005b704 	andeq	fp, r5, r4, lsl #14
    fd20:	c2040f00 	andgt	r0, r4, #0, 30
    fd24:	13000005 	movwne	r0, #5
    fd28:	0000008b 	andeq	r0, r0, fp, lsl #1
    fd2c:	0000060a 	andeq	r0, r0, sl, lsl #12
    fd30:	00045614 	andeq	r5, r4, r4, lsl r6
    fd34:	00f91400 	rscseq	r1, r9, r0, lsl #8
    fd38:	8b140000 	blhi	50fd40 <_Min_Stack_Size+0x50f940>
    fd3c:	14000000 	strne	r0, [r0], #-0
    fd40:	0000002c 	andeq	r0, r0, ip, lsr #32
    fd44:	ec040f00 	stc	15, cr0, [r4], {-0}
    fd48:	13000005 	movwne	r0, #5
    fd4c:	0000002c 	andeq	r0, r0, ip, lsr #32
    fd50:	00000624 	andeq	r0, r0, r4, lsr #12
    fd54:	00045614 	andeq	r5, r4, r4, lsl r6
    fd58:	00f91400 	rscseq	r1, r9, r0, lsl #8
    fd5c:	0f000000 	svceq	0x00000000
    fd60:	00061004 	andeq	r1, r6, r4
    fd64:	00550800 	subseq	r0, r5, r0, lsl #16
    fd68:	063a0000 	ldrteq	r0, [sl], -r0
    fd6c:	25090000 	strcs	r0, [r9, #-0]
    fd70:	02000000 	andeq	r0, r0, #0
    fd74:	00550800 	subseq	r0, r5, r0, lsl #16
    fd78:	064a0000 	strbeq	r0, [sl], -r0
    fd7c:	25090000 	strcs	r0, [r9, #-0]
    fd80:	00000000 	andeq	r0, r0, r0
    fd84:	019f0400 	orrseq	r0, pc, r0, lsl #8
    fd88:	24040000 	strcs	r0, [r4], #-0
    fd8c:	02f51a01 	rscseq	r1, r5, #4096	; 0x1000
    fd90:	00190000 	andseq	r0, r9, r0
    fd94:	0c000008 	stceq	0, cr0, [r0], {8}
    fd98:	08012804 	stmdaeq	r1, {r2, fp, sp}
    fd9c:	00000690 	muleq	r0, r0, r6
    fda0:	00067d17 	andeq	r7, r6, r7, lsl sp
    fda4:	012a0400 			; <UNDEFINED> instruction: 0x012a0400
    fda8:	00069011 	andeq	r9, r6, r1, lsl r0
    fdac:	70170000 	andsvc	r0, r7, r0
    fdb0:	04000003 	streq	r0, [r0], #-3
    fdb4:	2c07012b 	stfcss	f0, [r7], {43}	; 0x2b
    fdb8:	04000000 	streq	r0, [r0], #-0
    fdbc:	00068317 	andeq	r8, r6, r7, lsl r3
    fdc0:	012c0400 			; <UNDEFINED> instruction: 0x012c0400
    fdc4:	0006960b 	andeq	r9, r6, fp, lsl #12
    fdc8:	0f000800 	svceq	0x00000800
    fdcc:	00065704 	andeq	r5, r6, r4, lsl #14
    fdd0:	4a040f00 	bmi	1139d8 <_Min_Stack_Size+0x1135d8>
    fdd4:	19000006 	stmdbne	r0, {r1, r2}
    fdd8:	00000030 	andeq	r0, r0, r0, lsr r0
    fddc:	0144040e 	cmpeq	r4, lr, lsl #8
    fde0:	0006d508 	andeq	sp, r6, r8, lsl #10
    fde4:	06d31700 	ldrbeq	r1, [r3], r0, lsl #14
    fde8:	45040000 	strmi	r0, [r4, #-0]
    fdec:	06d51201 	ldrbeq	r1, [r5], r1, lsl #4
    fdf0:	17000000 	strne	r0, [r0, -r0]
    fdf4:	000003f7 	strdeq	r0, [r0], -r7
    fdf8:	12014604 	andne	r4, r1, #4, 12	; 0x400000
    fdfc:	000006d5 	ldrdeq	r0, [r0], -r5
    fe00:	07be1706 	ldreq	r1, [lr, r6, lsl #14]!
    fe04:	47040000 	strmi	r0, [r4, -r0]
    fe08:	00631201 	rsbeq	r1, r3, r1, lsl #4
    fe0c:	000c0000 	andeq	r0, ip, r0
    fe10:	00006308 	andeq	r6, r0, r8, lsl #6
    fe14:	0006e500 	andeq	lr, r6, r0, lsl #10
    fe18:	00250900 	eoreq	r0, r5, r0, lsl #18
    fe1c:	00020000 	andeq	r0, r2, r0
    fe20:	8504d01a 	strhi	sp, [r4, #-26]	; 0xffffffe6
    fe24:	07fa0702 	ldrbeq	r0, [sl, r2, lsl #14]!
    fe28:	2b170000 	blcs	5cfe30 <_Min_Stack_Size+0x5cfa30>
    fe2c:	04000004 	streq	r0, [r0], #-4
    fe30:	25180287 	ldrcs	r0, [r8, #-647]	; 0xfffffd79
    fe34:	00000000 	andeq	r0, r0, r0
    fe38:	00078117 	andeq	r8, r7, r7, lsl r1
    fe3c:	02880400 	addeq	r0, r8, #0, 8
    fe40:	0005aa12 	andeq	sl, r5, r2, lsl sl
    fe44:	aa170400 	bge	5d0e4c <_Min_Stack_Size+0x5d0a4c>
    fe48:	04000003 	streq	r0, [r0], #-3
    fe4c:	fa100289 	blx	410878 <_Min_Stack_Size+0x410478>
    fe50:	08000007 	stmdaeq	r0, {r0, r1, r2}
    fe54:	00089717 	andeq	r9, r8, r7, lsl r7
    fe58:	028a0400 	addeq	r0, sl, #0, 8
    fe5c:	00018f17 	andeq	r8, r1, r7, lsl pc
    fe60:	a3172400 	tstge	r7, #0, 8
    fe64:	04000002 	streq	r0, [r0], #-2
    fe68:	2c0f028b 	sfmcs	f0, 4, [pc], {139}	; 0x8b
    fe6c:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    fe70:	00067817 	andeq	r7, r6, r7, lsl r8
    fe74:	028c0400 	addeq	r0, ip, #0, 8
    fe78:	0000782c 	andeq	r7, r0, ip, lsr #16
    fe7c:	ad175000 	ldcge	0, cr5, [r7, #-0]
    fe80:	04000008 	streq	r0, [r0], #-8
    fe84:	9c1a028d 	lfmls	f0, 4, [sl], {141}	; 0x8d
    fe88:	58000006 	stmdapl	r0, {r1, r2}
    fe8c:	00063317 	andeq	r3, r6, r7, lsl r3
    fe90:	028e0400 	addeq	r0, lr, #0, 8
    fe94:	0000ed16 	andeq	lr, r0, r6, lsl sp
    fe98:	b2176800 	andslt	r6, r7, #0, 16
    fe9c:	04000008 	streq	r0, [r0], #-8
    fea0:	ed16028f 	lfm	f0, 4, [r6, #-572]	; 0xfffffdc4
    fea4:	70000000 	andvc	r0, r0, r0
    fea8:	0000fa17 	andeq	pc, r0, r7, lsl sl	; <UNPREDICTABLE>
    feac:	02900400 	addseq	r0, r0, #0, 8
    feb0:	0000ed16 	andeq	lr, r0, r6, lsl sp
    feb4:	15177800 	ldrne	r7, [r7, #-2048]	; 0xfffff800
    feb8:	04000008 	streq	r0, [r0], #-8
    febc:	0a100291 	beq	410908 <_Min_Stack_Size+0x410508>
    fec0:	80000008 	andhi	r0, r0, r8
    fec4:	00039e17 	andeq	r9, r3, r7, lsl lr
    fec8:	02920400 	addseq	r0, r2, #0, 8
    fecc:	00081a10 	andeq	r1, r8, r0, lsl sl
    fed0:	65178800 	ldrvs	r8, [r7, #-2048]	; 0xfffff800
    fed4:	04000000 	streq	r0, [r0], #-0
    fed8:	2c0f0293 	sfmcs	f0, 4, [pc], {147}	; 0x93
    fedc:	a0000000 	andge	r0, r0, r0
    fee0:	00025f17 	andeq	r5, r2, r7, lsl pc
    fee4:	02940400 	addseq	r0, r4, #0, 8
    fee8:	0000ed16 	andeq	lr, r0, r6, lsl sp
    feec:	e117a400 	tst	r7, r0, lsl #8
    fef0:	04000000 	streq	r0, [r0], #-0
    fef4:	ed160295 	lfm	f0, 4, [r6, #-596]	; 0xfffffdac
    fef8:	ac000000 	stcge	0, cr0, [r0], {-0}
    fefc:	00023417 	andeq	r3, r2, r7, lsl r4
    ff00:	02960400 	addseq	r0, r6, #0, 8
    ff04:	0000ed16 	andeq	lr, r0, r6, lsl sp
    ff08:	7c17b400 	cfldrsvc	mvf11, [r7], {-0}
    ff0c:	04000000 	streq	r0, [r0], #-0
    ff10:	ed160297 	lfm	f0, 4, [r6, #-604]	; 0xfffffda4
    ff14:	bc000000 	stclt	0, cr0, [r0], {-0}
    ff18:	00058217 	andeq	r8, r5, r7, lsl r2
    ff1c:	02980400 	addseq	r0, r8, #0, 8
    ff20:	0000ed16 	andeq	lr, r0, r6, lsl sp
    ff24:	2a17c400 	bcs	600f2c <_Min_Stack_Size+0x600b2c>
    ff28:	04000006 	streq	r0, [r0], #-6
    ff2c:	2c080299 	sfmcs	f0, 4, [r8], {153}	; 0x99
    ff30:	cc000000 	stcgt	0, cr0, [r0], {-0}
    ff34:	05b00800 	ldreq	r0, [r0, #2048]!	; 0x800
    ff38:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    ff3c:	25090000 	strcs	r0, [r9, #-0]
    ff40:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ff44:	05b00800 	ldreq	r0, [r0, #2048]!	; 0x800
    ff48:	081a0000 	ldmdaeq	sl, {}	; <UNPREDICTABLE>
    ff4c:	25090000 	strcs	r0, [r9, #-0]
    ff50:	07000000 	streq	r0, [r0, -r0]
    ff54:	05b00800 	ldreq	r0, [r0, #2048]!	; 0x800
    ff58:	082a0000 	stmdaeq	sl!, {}	; <UNPREDICTABLE>
    ff5c:	25090000 	strcs	r0, [r9, #-0]
    ff60:	17000000 	strne	r0, [r0, -r0]
    ff64:	04f01a00 	ldrbteq	r1, [r0], #2560	; 0xa00
    ff68:	5107029e 			; <UNDEFINED> instruction: 0x5107029e
    ff6c:	17000008 	strne	r0, [r0, -r8]
    ff70:	00000440 	andeq	r0, r0, r0, asr #8
    ff74:	1b02a104 	blne	b838c <_Min_Stack_Size+0xb7f8c>
    ff78:	00000851 	andeq	r0, r0, r1, asr r8
    ff7c:	02c01700 	sbceq	r1, r0, #0, 14
    ff80:	a2040000 	andge	r0, r4, #0
    ff84:	08611802 	stmdaeq	r1!, {r1, fp, ip}^
    ff88:	00780000 	rsbseq	r0, r8, r0
    ff8c:	0002ef08 	andeq	lr, r2, r8, lsl #30
    ff90:	00086100 	andeq	r6, r8, r0, lsl #2
    ff94:	00250900 	eoreq	r0, r5, r0, lsl #18
    ff98:	001d0000 	andseq	r0, sp, r0
    ff9c:	00002508 	andeq	r2, r0, r8, lsl #10
    ffa0:	00087100 	andeq	r7, r8, r0, lsl #2
    ffa4:	00250900 	eoreq	r0, r5, r0, lsl #18
    ffa8:	001d0000 	andseq	r0, sp, r0
    ffac:	8304f01b 	movwhi	pc, #16411	; 0x401b	; <UNPREDICTABLE>
    ffb0:	08960302 	ldmeq	r6, {r1, r8, r9}
    ffb4:	cc1c0000 	ldcgt	0, cr0, [ip], {-0}
    ffb8:	04000006 	streq	r0, [r0], #-6
    ffbc:	e50b029a 	str	r0, [fp, #-666]	; 0xfffffd66
    ffc0:	1c000006 	stcne	0, cr0, [r0], {6}
    ffc4:	0000087c 	andeq	r0, r0, ip, ror r8
    ffc8:	0b02a304 	bleq	b8be0 <_Min_Stack_Size+0xb87e0>
    ffcc:	0000082a 	andeq	r0, r0, sl, lsr #16
    ffd0:	05b00800 	ldreq	r0, [r0, #2048]!	; 0x800
    ffd4:	08a60000 	stmiaeq	r6!, {}	; <UNPREDICTABLE>
    ffd8:	25090000 	strcs	r0, [r9, #-0]
    ffdc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    ffe0:	00c01d00 	sbceq	r1, r0, r0, lsl #26
    ffe4:	040f0000 	streq	r0, [pc], #-0	; ffec <_Min_Stack_Size+0xfbec>
    ffe8:	000008a6 	andeq	r0, r0, r6, lsr #17
    ffec:	0008bc1e 	andeq	fp, r8, lr, lsl ip
    fff0:	04561400 	ldrbeq	r1, [r6], #-1024	; 0xfffffc00
    fff4:	0f000000 	svceq	0x00000000
    fff8:	0008b104 	andeq	fp, r8, r4, lsl #2
    fffc:	79040f00 	stmdbvc	r4, {r8, r9, sl, fp}
   10000:	1e000001 	cdpne	0, 0, cr0, cr0, cr1, {0}
   10004:	000008d3 	ldrdeq	r0, [r0], -r3
   10008:	00002c14 	andeq	r2, r0, r4, lsl ip
   1000c:	040f0000 	streq	r0, [pc], #-0	; 10014 <_Min_Stack_Size+0xfc14>
   10010:	000008d9 	ldrdeq	r0, [r0], -r9
   10014:	08c8040f 	stmiaeq	r8, {r0, r1, r2, r3, sl}^
   10018:	4a080000 	bmi	210020 <_Min_Stack_Size+0x20fc20>
   1001c:	ef000006 	svc	0x00000006
   10020:	09000008 	stmdbeq	r0, {r3}
   10024:	00000025 	andeq	r0, r0, r5, lsr #32
   10028:	d21f0002 	andsle	r0, pc, #2
   1002c:	04000007 	streq	r0, [r0], #-7
   10030:	56170333 			; <UNDEFINED> instruction: 0x56170333
   10034:	1f000004 	svcne	0x00000004
   10038:	000007cb 	andeq	r0, r0, fp, asr #15
   1003c:	1d033404 	cfstrsne	mvf3, [r3, #-16]
   10040:	0000045c 	andeq	r0, r0, ip, asr r4
   10044:	004a1f20 	subeq	r1, sl, r0, lsr #30
   10048:	0e670600 	cdpeq	6, 6, cr0, cr7, cr0, {0}
   1004c:	000005aa 	andeq	r0, r0, sl, lsr #11
   10050:	004a7e21 	subeq	r7, sl, r1, lsr #28
   10054:	55010700 	strpl	r0, [r1, #-1792]	; 0xfffff900
   10058:	07000000 	streq	r0, [r0, -r0]
   1005c:	093a0605 	ldmdbeq	sl!, {r0, r2, r9, sl}
   10060:	72220000 	eorvc	r0, r2, #0
   10064:	0000004a 	andeq	r0, r0, sl, asr #32
   10068:	004a6622 	subeq	r6, sl, r2, lsr #12
   1006c:	29220100 	stmdbcs	r2!, {r8}
   10070:	0200004a 	andeq	r0, r0, #74	; 0x4a
   10074:	4a772300 	bmi	1dd8c7c <_Min_Stack_Size+0x1dd887c>
   10078:	4c060000 	stcmi	0, cr0, [r6], {-0}
   1007c:	00002c05 	andeq	r2, r0, r5, lsl #24
   10080:	000e5000 	andeq	r5, lr, r0
   10084:	00000c08 	andeq	r0, r0, r8, lsl #24
   10088:	889c0100 	ldmhi	ip, {r8}
   1008c:	24000009 	strcs	r0, [r0], #-9
   10090:	01006e66 	tsteq	r0, r6, ror #28
   10094:	02c01038 	sbceq	r1, r0, #56	; 0x38
   10098:	101a0000 	andsne	r0, sl, r0
   1009c:	10140000 	andsne	r0, r4, r0
   100a0:	5c250000 	stcpl	0, cr0, [r5], #-0
   100a4:	8808000e 	stmdahi	r8, {r1, r2, r3}
   100a8:	26000009 	strcs	r0, [r0], -r9
   100ac:	30015001 	andcc	r5, r1, r1
   100b0:	03510126 	cmpeq	r1, #-2147483639	; 0x80000009
   100b4:	265001f3 			; <UNDEFINED> instruction: 0x265001f3
   100b8:	30015201 	andcc	r5, r1, r1, lsl #4
   100bc:	01530126 	cmpeq	r3, r6, lsr #2
   100c0:	27000030 	smladxcs	r0, r0, r0, r0
   100c4:	00004923 	andeq	r4, r0, r3, lsr #18
   100c8:	00004923 	andeq	r4, r0, r3, lsr #18
   100cc:	00050d07 	andeq	r0, r5, r7, lsl #26
   100d0:	000000fe 	strdeq	r0, [r0], -lr
   100d4:	31260004 			; <UNDEFINED> instruction: 0x31260004
   100d8:	01040000 	mrseq	r0, (UNDEF: 4)
   100dc:	00004991 	muleq	r0, r1, r9
   100e0:	004aa00c 	subeq	sl, sl, ip
   100e4:	004af300 	subeq	pc, sl, r0, lsl #6
   100e8:	000e5c00 	andeq	r5, lr, r0, lsl #24
   100ec:	00003408 	andeq	r3, r0, r8, lsl #8
   100f0:	0074b500 	rsbseq	fp, r4, r0, lsl #10
   100f4:	06010200 	streq	r0, [r1], -r0, lsl #4
   100f8:	000007a9 	andeq	r0, r0, r9, lsr #15
   100fc:	a7080102 	strge	r0, [r8, -r2, lsl #2]
   10100:	02000007 	andeq	r0, r0, #7
   10104:	00000502 	andeq	r0, r0, r2, lsl #10
   10108:	02020000 	andeq	r0, r2, #0
   1010c:	00037707 	andeq	r7, r3, r7, lsl #14
   10110:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
   10114:	000001b5 			; <UNDEFINED> instruction: 0x000001b5
   10118:	a5070402 	strge	r0, [r7, #-1026]	; 0xfffffbfe
   1011c:	02000000 	andeq	r0, r0, #0
   10120:	01b00508 	lslseq	r0, r8, #10
   10124:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   10128:	0000a007 	andeq	sl, r0, r7
   1012c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
   10130:	00746e69 	rsbseq	r6, r4, r9, ror #28
   10134:	aa070402 	bge	1d1144 <_Min_Stack_Size+0x1d0d44>
   10138:	04000000 	streq	r0, [r0], #-0
   1013c:	000028e0 	andeq	r2, r0, r0, ror #17
   10140:	6417d802 	ldrvs	sp, [r7], #-2050	; 0xfffff7fe
   10144:	02000000 	andeq	r0, r0, #0
   10148:	07190408 	ldreq	r0, [r9, -r8, lsl #8]
   1014c:	01020000 	mrseq	r0, (UNDEF: 2)
   10150:	0007b008 	andeq	fp, r7, r8
   10154:	00900500 	addseq	r0, r0, r0, lsl #10
   10158:	00900000 	addseq	r0, r0, r0
   1015c:	00060000 	andeq	r0, r6, r0
   10160:	00960407 	addseq	r0, r6, r7, lsl #8
   10164:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
   10168:	00004a8d 	andeq	r4, r0, sp, lsl #21
   1016c:	850f1101 	strhi	r1, [pc, #-257]	; 10073 <_Min_Stack_Size+0xfc73>
   10170:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   10174:	00004ad0 	ldrdeq	r4, [r0], -r0
   10178:	850f1201 	strhi	r1, [pc, #-513]	; ff7f <_Min_Stack_Size+0xfb7f>
   1017c:	0a000000 	beq	10184 <_Min_Stack_Size+0xfd84>
   10180:	00004ae1 	andeq	r4, r0, r1, ror #21
   10184:	5c011a01 			; <UNDEFINED> instruction: 0x5c011a01
   10188:	3408000e 	strcc	r0, [r8], #-14
   1018c:	01000000 	mrseq	r0, (UNDEF: 0)
   10190:	0000f59c 	muleq	r0, ip, r5
   10194:	06e50b00 	strbteq	r0, [r5], r0, lsl #22
   10198:	1c010000 	stcne	0, cr0, [r1], {-0}
   1019c:	00006b0a 	andeq	r6, r0, sl, lsl #22
   101a0:	00104a00 	andseq	r4, r0, r0, lsl #20
   101a4:	00104600 	andseq	r4, r0, r0, lsl #12
   101a8:	00690c00 	rsbeq	r0, r9, r0, lsl #24
   101ac:	6b0a1d01 	blvs	2975b8 <_Min_Stack_Size+0x2971b8>
   101b0:	74000000 	strvc	r0, [r0], #-0
   101b4:	6c000010 	stcvs	0, cr0, [r0], {16}
   101b8:	0d000010 	stceq	0, cr0, [r0, #-64]	; 0xffffffc0
   101bc:	08000e86 	stmdaeq	r0, {r1, r2, r7, r9, sl, fp}
   101c0:	000000f5 	strdeq	r0, [r0], -r5
   101c4:	4c380e00 	ldcmi	14, cr0, [r8], #-0
   101c8:	4c380000 	ldcmi	0, cr0, [r8], #-0
   101cc:	15010000 	strne	r0, [r1, #-0]
   101d0:	0926000d 	stmdbeq	r6!, {r0, r2, r3}
   101d4:	00040000 	andeq	r0, r4, r0
   101d8:	000031f5 	strdeq	r3, [r0], -r5
   101dc:	49910104 	ldmibmi	r1, {r2, r8}
   101e0:	b00c0000 	andlt	r0, ip, r0
   101e4:	4b00004b 	blmi	10318 <_Min_Stack_Size+0xff18>
   101e8:	8c00004b 	stchi	0, cr0, [r0], {75}	; 0x4b
   101ec:	02000075 	andeq	r0, r0, #117	; 0x75
   101f0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
   101f4:	04030074 	streq	r0, [r3], #-116	; 0xffffff8c
   101f8:	0000aa07 	andeq	sl, r0, r7, lsl #20
   101fc:	05080300 	streq	r0, [r8, #-768]	; 0xfffffd00
   10200:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
   10204:	19040803 	stmdbne	r4, {r0, r1, fp}
   10208:	04000007 	streq	r0, [r0], #-7
   1020c:	000003e0 	andeq	r0, r0, r0, ror #7
   10210:	17016501 	strne	r6, [r1, -r1, lsl #10]
   10214:	00000024 	andeq	r0, r0, r4, lsr #32
   10218:	a9060103 	stmdbge	r6, {r0, r1, r8}
   1021c:	03000007 	movweq	r0, #7
   10220:	07a70801 	streq	r0, [r7, r1, lsl #16]!
   10224:	02030000 	andeq	r0, r3, #0
   10228:	00000005 	andeq	r0, r0, r5
   1022c:	07020300 	streq	r0, [r2, -r0, lsl #6]
   10230:	00000377 	andeq	r0, r0, r7, ror r3
   10234:	b5050403 	strlt	r0, [r5, #-1027]	; 0xfffffbfd
   10238:	03000001 	movweq	r0, #1
   1023c:	00a50704 	adceq	r0, r5, r4, lsl #14
   10240:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
   10244:	0000a007 	andeq	sl, r0, r7
   10248:	05620500 	strbeq	r0, [r2, #-1280]!	; 0xfffffb00
   1024c:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
   10250:	0000620e 	andeq	r6, r0, lr, lsl #4
   10254:	06fb0500 	ldrbteq	r0, [fp], r0, lsl #10
   10258:	74020000 	strvc	r0, [r2], #-0
   1025c:	0000620e 	andeq	r6, r0, lr, lsl #4
   10260:	02040600 	andeq	r0, r4, #0, 12
   10264:	00b103a5 	adcseq	r0, r1, r5, lsr #7
   10268:	da070000 	ble	1d0270 <_Min_Stack_Size+0x1cfe70>
   1026c:	02000003 	andeq	r0, r0, #3
   10270:	00390ca7 	eorseq	r0, r9, r7, lsr #25
   10274:	ec070000 	stc	0, cr0, [r7], {-0}
   10278:	02000002 	andeq	r0, r0, #2
   1027c:	00b113a8 	adcseq	r1, r1, r8, lsr #7
   10280:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   10284:	0000004d 	andeq	r0, r0, sp, asr #32
   10288:	000000c1 	andeq	r0, r0, r1, asr #1
   1028c:	00002409 	andeq	r2, r0, r9, lsl #8
   10290:	0a000300 	beq	10e98 <_Min_Stack_Size+0x10a98>
   10294:	09a20208 	stmibeq	r2!, {r3, r9}
   10298:	000000e5 	andeq	r0, r0, r5, ror #1
   1029c:	0006e30b 	andeq	lr, r6, fp, lsl #6
   102a0:	07a40200 	streq	r0, [r4, r0, lsl #4]!
   102a4:	0000001d 	andeq	r0, r0, sp, lsl r0
   102a8:	080d0b00 	stmdaeq	sp, {r8, r9, fp}
   102ac:	a9020000 	stmdbge	r2, {}	; <UNPREDICTABLE>
   102b0:	00008f05 	andeq	r8, r0, r5, lsl #30
   102b4:	05000400 	streq	r0, [r0, #-1024]	; 0xfffffc00
   102b8:	0000066d 	andeq	r0, r0, sp, ror #12
   102bc:	c103aa02 	tstgt	r3, r2, lsl #20
   102c0:	0c000000 	stceq	0, cr0, [r0], {-0}
   102c4:	07c30504 	strbeq	r0, [r3, r4, lsl #10]
   102c8:	16030000 	strne	r0, [r3], -r0
   102cc:	00006919 	andeq	r6, r0, r9, lsl r9
   102d0:	05cb0500 	strbeq	r0, [fp, #1280]	; 0x500
   102d4:	0c040000 	stceq	0, cr0, [r4], {-0}
   102d8:	00001d0d 	andeq	r1, r0, sp, lsl #26
   102dc:	08590500 	ldmdaeq	r9, {r8, sl}^
   102e0:	23030000 	movwcs	r0, #12288	; 0x3000
   102e4:	0000ff1b 	andeq	pc, r0, fp, lsl pc	; <UNPREDICTABLE>
   102e8:	029b0d00 	addseq	r0, fp, #0, 26
   102ec:	03180000 	tsteq	r8, #0
   102f0:	01710834 	cmneq	r1, r4, lsr r8
   102f4:	7d0b0000 	stcvc	0, cr0, [fp, #-0]
   102f8:	03000006 	movweq	r0, #6
   102fc:	01711336 	cmneq	r1, r6, lsr r3
   10300:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   10304:	03006b5f 	movweq	r6, #2911	; 0xb5f
   10308:	001d0737 	andseq	r0, sp, r7, lsr r7
   1030c:	0b040000 	bleq	110314 <_Min_Stack_Size+0x10ff14>
   10310:	000006c4 	andeq	r0, r0, r4, asr #13
   10314:	1d0b3703 	stcne	7, cr3, [fp, #-12]
   10318:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   1031c:	00028d0b 	andeq	r8, r2, fp, lsl #26
   10320:	14370300 	ldrtne	r0, [r7], #-768	; 0xfffffd00
   10324:	0000001d 	andeq	r0, r0, sp, lsl r0
   10328:	019a0b0c 	orrseq	r0, sl, ip, lsl #22
   1032c:	37030000 	strcc	r0, [r3, -r0]
   10330:	00001d1b 	andeq	r1, r0, fp, lsl sp
   10334:	5f0e1000 	svcpl	0x000e1000
   10338:	38030078 	stmdacc	r3, {r3, r4, r5, r6}
   1033c:	0001770b 	andeq	r7, r1, fp, lsl #14
   10340:	0f001400 	svceq	0x00001400
   10344:	00011704 	andeq	r1, r1, r4, lsl #14
   10348:	00f30800 	rscseq	r0, r3, r0, lsl #16
   1034c:	01870000 	orreq	r0, r7, r0
   10350:	24090000 	strcs	r0, [r9], #-0
   10354:	00000000 	andeq	r0, r0, r0
   10358:	02d50d00 	sbcseq	r0, r5, #0, 26
   1035c:	03240000 			; <UNDEFINED> instruction: 0x03240000
   10360:	020a083c 	andeq	r0, sl, #60, 16	; 0x3c0000
   10364:	080b0000 	stmdaeq	fp, {}	; <UNPREDICTABLE>
   10368:	03000001 	movweq	r0, #1
   1036c:	001d093e 	andseq	r0, sp, lr, lsr r9
   10370:	0b000000 	bleq	10378 <_Min_Stack_Size+0xff78>
   10374:	000007b5 			; <UNDEFINED> instruction: 0x000007b5
   10378:	1d093f03 	stcne	15, cr3, [r9, #-12]
   1037c:	04000000 	streq	r0, [r0], #-0
   10380:	0001390b 	andeq	r3, r1, fp, lsl #18
   10384:	09400300 	stmdbeq	r0, {r8, r9}^
   10388:	0000001d 	andeq	r0, r0, sp, lsl r0
   1038c:	08ca0b08 	stmiaeq	sl, {r3, r8, r9, fp}^
   10390:	41030000 	mrsmi	r0, (UNDEF: 3)
   10394:	00001d09 	andeq	r1, r0, r9, lsl #26
   10398:	380b0c00 	stmdacc	fp, {sl, fp}
   1039c:	03000005 	movweq	r0, #5
   103a0:	001d0942 	andseq	r0, sp, r2, asr #18
   103a4:	0b100000 	bleq	4103ac <_Min_Stack_Size+0x40ffac>
   103a8:	00000421 	andeq	r0, r0, r1, lsr #8
   103ac:	1d094303 	stcne	3, cr4, [r9, #-12]
   103b0:	14000000 	strne	r0, [r0], #-0
   103b4:	0007f60b 	andeq	pc, r7, fp, lsl #12
   103b8:	09440300 	stmdbeq	r4, {r8, r9}^
   103bc:	0000001d 	andeq	r0, r0, sp, lsl r0
   103c0:	06400b18 			; <UNDEFINED> instruction: 0x06400b18
   103c4:	45030000 	strmi	r0, [r3, #-0]
   103c8:	00001d09 	andeq	r1, r0, r9, lsl #26
   103cc:	8c0b1c00 	stchi	12, cr1, [fp], {-0}
   103d0:	03000008 	movweq	r0, #8
   103d4:	001d0946 	andseq	r0, sp, r6, asr #18
   103d8:	00200000 	eoreq	r0, r0, r0
   103dc:	00014810 	andeq	r4, r1, r0, lsl r8
   103e0:	03010800 	movweq	r0, #6144	; 0x1800
   103e4:	024f084f 	subeq	r0, pc, #5177344	; 0x4f0000
   103e8:	6d0b0000 	stcvs	0, cr0, [fp, #-0]
   103ec:	03000002 	movweq	r0, #2
   103f0:	024f0a50 	subeq	r0, pc, #80, 20	; 0x50000
   103f4:	0b000000 	bleq	103fc <_Min_Stack_Size+0xfffc>
   103f8:	000005fe 	strdeq	r0, [r0], -lr
   103fc:	4f095103 	svcmi	0x00095103
   10400:	80000002 	andhi	r0, r0, r2
   10404:	00079611 	andeq	r9, r7, r1, lsl r6
   10408:	0a530300 	beq	14d1010 <_Min_Stack_Size+0x14d0c10>
   1040c:	000000f3 	strdeq	r0, [r0], -r3
   10410:	92110100 	andsls	r0, r1, #0, 2
   10414:	03000001 	movweq	r0, #1
   10418:	00f30a56 	rscseq	r0, r3, r6, asr sl
   1041c:	01040000 	mrseq	r0, (UNDEF: 4)
   10420:	00f10800 	rscseq	r0, r1, r0, lsl #16
   10424:	025f0000 	subseq	r0, pc, #0
   10428:	24090000 	strcs	r0, [r9], #-0
   1042c:	1f000000 	svcne	0x00000000
   10430:	4a761000 	bmi	1d94438 <_Min_Stack_Size+0x1d94038>
   10434:	01900000 	orrseq	r0, r0, r0
   10438:	a2086203 	andge	r6, r8, #805306368	; 0x30000000
   1043c:	0b000002 	bleq	1044c <_Min_Stack_Size+0x1004c>
   10440:	0000067d 	andeq	r0, r0, sp, ror r6
   10444:	a2126303 	andsge	r6, r2, #201326592	; 0xc000000
   10448:	00000002 	andeq	r0, r0, r2
   1044c:	00068e0b 	andeq	r8, r6, fp, lsl #28
   10450:	06640300 	strbteq	r0, [r4], -r0, lsl #6
   10454:	0000001d 	andeq	r0, r0, sp, lsl r0
   10458:	02880b04 	addeq	r0, r8, #4, 22	; 0x1000
   1045c:	66030000 	strvs	r0, [r3], -r0
   10460:	0002a809 	andeq	sl, r2, r9, lsl #16
   10464:	480b0800 	stmdami	fp, {fp}
   10468:	03000001 	movweq	r0, #1
   1046c:	020a1e67 	andeq	r1, sl, #1648	; 0x670
   10470:	00880000 	addeq	r0, r8, r0
   10474:	025f040f 	subseq	r0, pc, #251658240	; 0xf000000
   10478:	b8080000 	stmdalt	r8, {}	; <UNPREDICTABLE>
   1047c:	b8000002 	stmdalt	r0, {r1}
   10480:	09000002 	stmdbeq	r0, {r1}
   10484:	00000024 	andeq	r0, r0, r4, lsr #32
   10488:	040f001f 	streq	r0, [pc], #-31	; 10490 <_Min_Stack_Size+0x10090>
   1048c:	000002be 			; <UNDEFINED> instruction: 0x000002be
   10490:	064a0d12 			; <UNDEFINED> instruction: 0x064a0d12
   10494:	03080000 	movweq	r0, #32768	; 0x8000
   10498:	02e7087a 	rsceq	r0, r7, #7995392	; 0x7a0000
   1049c:	330b0000 	movwcc	r0, #45056	; 0xb000
   104a0:	03000001 	movweq	r0, #1
   104a4:	02e7117b 	rsceq	r1, r7, #-1073741794	; 0xc000001e
   104a8:	0b000000 	bleq	104b0 <_Min_Stack_Size+0x100b0>
   104ac:	0000072e 	andeq	r0, r0, lr, lsr #14
   104b0:	1d067c03 	stcne	12, cr7, [r6, #-12]
   104b4:	04000000 	streq	r0, [r0], #-0
   104b8:	4d040f00 	stcmi	15, cr0, [r4, #-0]
   104bc:	0d000000 	stceq	0, cr0, [r0, #-0]
   104c0:	00000028 	andeq	r0, r0, r8, lsr #32
   104c4:	08ba0368 	ldmeq	sl!, {r3, r5, r6, r8, r9}
   104c8:	00000430 	andeq	r0, r0, r0, lsr r4
   104cc:	00705f0e 	rsbseq	r5, r0, lr, lsl #30
   104d0:	e712bb03 	ldr	fp, [r2, -r3, lsl #22]
   104d4:	00000002 	andeq	r0, r0, r2
   104d8:	00725f0e 	rsbseq	r5, r2, lr, lsl #30
   104dc:	1d07bc03 	stcne	12, cr11, [r7, #-12]
   104e0:	04000000 	streq	r0, [r0], #-0
   104e4:	00775f0e 	rsbseq	r5, r7, lr, lsl #30
   104e8:	1d07bd03 	stcne	13, cr11, [r7, #-12]
   104ec:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   104f0:	00018b0b 	andeq	r8, r1, fp, lsl #22
   104f4:	09be0300 	ldmibeq	lr!, {r8, r9}
   104f8:	00000054 	andeq	r0, r0, r4, asr r0
   104fc:	030d0b0c 	movweq	r0, #56076	; 0xdb0c
   10500:	bf030000 	svclt	0x00030000
   10504:	00005409 	andeq	r5, r0, r9, lsl #8
   10508:	5f0e0e00 	svcpl	0x000e0e00
   1050c:	03006662 	movweq	r6, #1634	; 0x662
   10510:	02bf11c0 	adcseq	r1, pc, #192, 2	; 0x30
   10514:	0b100000 	bleq	41051c <_Min_Stack_Size+0x41011c>
   10518:	000000b7 	strheq	r0, [r0], -r7
   1051c:	1d07c103 	stfned	f4, [r7, #-12]
   10520:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   10524:	0001690b 	andeq	r6, r1, fp, lsl #18
   10528:	0ac80300 	beq	ff211130 <__StackLimit+0xdf1f1130>
   1052c:	000000f1 	strdeq	r0, [r0], -r1
   10530:	33bd0b1c 			; <UNDEFINED> instruction: 0x33bd0b1c
   10534:	ca030000 	bgt	d053c <_Min_Stack_Size+0xd013c>
   10538:	0005b41d 	andeq	fp, r5, sp, lsl r4
   1053c:	360b2000 	strcc	r2, [fp], -r0
   10540:	03000033 	movweq	r0, #51	; 0x33
   10544:	05de1dcc 	ldrbeq	r1, [lr, #3532]	; 0xdcc
   10548:	0b240000 	bleq	910550 <_Min_Stack_Size+0x910150>
   1054c:	000006eb 	andeq	r0, r0, fp, ror #13
   10550:	020dcf03 	andeq	ip, sp, #3, 30
   10554:	28000006 	stmdacs	r0, {r1, r2}
   10558:	0008a60b 	andeq	sl, r8, fp, lsl #12
   1055c:	09d00300 	ldmibeq	r0, {r8, r9}^
   10560:	0000061c 	andeq	r0, r0, ip, lsl r6
   10564:	755f0e2c 	ldrbvc	r0, [pc, #-3628]	; f740 <_Min_Stack_Size+0xf340>
   10568:	d3030062 	movwle	r0, #12386	; 0x3062
   1056c:	0002bf11 	andeq	fp, r2, r1, lsl pc
   10570:	5f0e3000 	svcpl	0x000e3000
   10574:	03007075 	movweq	r7, #117	; 0x75
   10578:	02e712d4 	rsceq	r1, r7, #212, 4	; 0x4000000d
   1057c:	0e380000 	cdpeq	0, 3, cr0, cr8, cr0, {0}
   10580:	0072755f 	rsbseq	r7, r2, pc, asr r5
   10584:	1d07d503 	cfstr32ne	mvfx13, [r7, #-12]
   10588:	3c000000 	stccc	0, cr0, [r0], {-0}
   1058c:	00012d0b 	andeq	r2, r1, fp, lsl #26
   10590:	11d80300 	bicsne	r0, r8, r0, lsl #6
   10594:	00000622 	andeq	r0, r0, r2, lsr #12
   10598:	08760b40 	ldmdaeq	r6!, {r6, r8, r9, fp}^
   1059c:	d9030000 	stmdble	r3, {}	; <UNPREDICTABLE>
   105a0:	00063211 	andeq	r3, r6, r1, lsl r2
   105a4:	5f0e4300 	svcpl	0x000e4300
   105a8:	0300626c 	movweq	r6, #620	; 0x26c
   105ac:	02bf11dc 	adcseq	r1, pc, #220, 2	; 0x37
   105b0:	0b440000 	bleq	11105b8 <_Min_Stack_Size+0x11101b8>
   105b4:	00000725 	andeq	r0, r0, r5, lsr #14
   105b8:	1d07df03 	stcne	15, cr13, [r7, #-12]
   105bc:	4c000000 	stcmi	0, cr0, [r0], {-0}
   105c0:	0004380b 	andeq	r3, r4, fp, lsl #16
   105c4:	0ae00300 	beq	ff8111cc <__StackLimit+0xdf7f11cc>
   105c8:	00000077 	andeq	r0, r0, r7, ror r0
   105cc:	4baa0b50 	blmi	fea93314 <__StackLimit+0xdea73314>
   105d0:	e3030000 	movw	r0, #12288	; 0x3000
   105d4:	00044e12 	andeq	r4, r4, r2, lsl lr
   105d8:	f10b5400 			; <UNDEFINED> instruction: 0xf10b5400
   105dc:	03000003 	movweq	r0, #3
   105e0:	010b0ce7 	smlatteq	fp, r7, ip, r0
   105e4:	0b580000 	bleq	16105ec <_Min_Stack_Size+0x16101ec>
   105e8:	000002e3 	andeq	r0, r0, r3, ror #5
   105ec:	e50ee903 	str	lr, [lr, #-2307]	; 0xfffff6fd
   105f0:	5c000000 	stcpl	0, cr0, [r0], {-0}
   105f4:	0006510b 	andeq	r5, r6, fp, lsl #2
   105f8:	09ea0300 	stmibeq	sl!, {r8, r9}^
   105fc:	0000001d 	andeq	r0, r0, sp, lsl r0
   10600:	1d130064 	ldcne	0, cr0, [r3, #-400]	; 0xfffffe70
   10604:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
   10608:	14000004 	strne	r0, [r0], #-4
   1060c:	0000044e 	andeq	r0, r0, lr, asr #8
   10610:	0000f114 	andeq	pc, r0, r4, lsl r1	; <UNPREDICTABLE>
   10614:	05a21400 	streq	r1, [r2, #1024]!	; 0x400
   10618:	1d140000 	ldcne	0, cr0, [r4, #-0]
   1061c:	00000000 	andeq	r0, r0, r0
   10620:	0459040f 	ldrbeq	r0, [r9], #-1039	; 0xfffffbf1
   10624:	4e150000 	cdpmi	0, 1, cr0, cr5, cr0, {0}
   10628:	16000004 	strne	r0, [r0], -r4
   1062c:	000006cc 	andeq	r0, r0, ip, asr #13
   10630:	65030428 	strvs	r0, [r3, #-1064]	; 0xfffffbd8
   10634:	05a20802 	streq	r0, [r2, #2050]!	; 0x802
   10638:	2c170000 	ldccs	0, cr0, [r7], {-0}
   1063c:	03000006 	movweq	r0, #6
   10640:	1d070267 	sfmne	f0, 4, [r7, #-412]	; 0xfffffe64
   10644:	00000000 	andeq	r0, r0, r0
   10648:	00080617 	andeq	r0, r8, r7, lsl r6
   1064c:	026c0300 	rsbeq	r0, ip, #0, 6
   10650:	00068e0b 	andeq	r8, r6, fp, lsl #28
   10654:	ee170400 	cfmuls	mvf0, mvf7, mvf0
   10658:	03000007 	movweq	r0, #7
   1065c:	8e14026c 	cdphi	2, 1, cr0, cr4, cr12, {3}
   10660:	08000006 	stmdaeq	r0, {r1, r2}
   10664:	00029317 	andeq	r9, r2, r7, lsl r3
   10668:	026c0300 	rsbeq	r0, ip, #0, 6
   1066c:	00068e1e 	andeq	r8, r6, lr, lsl lr
   10670:	89170c00 	ldmdbhi	r7, {sl, fp}
   10674:	03000006 	movweq	r0, #6
   10678:	1d08026e 	sfmne	f0, 4, [r8, #-440]	; 0xfffffe48
   1067c:	10000000 	andne	r0, r0, r0
   10680:	00004217 	andeq	r4, r0, r7, lsl r2
   10684:	026f0300 	rsbeq	r0, pc, #0, 6
   10688:	00088e08 	andeq	r8, r8, r8, lsl #28
   1068c:	ab171400 	blge	5d5694 <_Min_Stack_Size+0x5d5294>
   10690:	03000006 	movweq	r0, #6
   10694:	1d070272 	sfmne	f0, 4, [r7, #-456]	; 0xfffffe38
   10698:	30000000 	andcc	r0, r0, r0
   1069c:	00069b17 	andeq	r9, r6, r7, lsl fp
   106a0:	02730300 	rsbseq	r0, r3, #0, 6
   106a4:	0008a316 	andeq	sl, r8, r6, lsl r3
   106a8:	41173400 	tstmi	r7, r0, lsl #8
   106ac:	03000005 	movweq	r0, #5
   106b0:	1d070275 	sfmne	f0, 4, [r7, #-468]	; 0xfffffe2c
   106b4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
   106b8:	0007e417 	andeq	lr, r7, r7, lsl r4
   106bc:	02770300 	rsbseq	r0, r7, #0, 6
   106c0:	0008b40a 	andeq	fp, r8, sl, lsl #8
   106c4:	fd173c00 	ldc2	12, cr3, [r7, #-0]
   106c8:	03000003 	movweq	r0, #3
   106cc:	7113027a 	tstvc	r3, sl, ror r2
   106d0:	40000001 	andmi	r0, r0, r1
   106d4:	0001a617 	andeq	sl, r1, r7, lsl r6
   106d8:	027b0300 	rsbseq	r0, fp, #0, 6
   106dc:	00001d07 	andeq	r1, r0, r7, lsl #26
   106e0:	c0174400 	andsgt	r4, r7, r0, lsl #8
   106e4:	03000008 	movweq	r0, #8
   106e8:	7113027c 	tstvc	r3, ip, ror r2
   106ec:	48000001 	stmdami	r0, {r0}
   106f0:	0005a317 	andeq	sl, r5, r7, lsl r3
   106f4:	027d0300 	rsbseq	r0, sp, #0, 6
   106f8:	0008ba14 	andeq	fp, r8, r4, lsl sl
   106fc:	05174c00 	ldreq	r4, [r7, #-3072]	; 0xfffff400
   10700:	03000003 	movweq	r0, #3
   10704:	1d070280 	sfmne	f0, 4, [r7, #-512]	; 0xfffffe00
   10708:	50000000 	andpl	r0, r0, r0
   1070c:	0005f617 	andeq	pc, r5, r7, lsl r6	; <UNPREDICTABLE>
   10710:	02810300 	addeq	r0, r1, #0, 6
   10714:	0005a209 	andeq	sl, r5, r9, lsl #4
   10718:	1c175400 	cfldrsne	mvf5, [r7], {-0}
   1071c:	03000006 	movweq	r0, #6
   10720:	690702a4 	stmdbvs	r7, {r2, r5, r7, r9}
   10724:	58000008 	stmdapl	r0, {r3}
   10728:	004a7618 	subeq	r7, sl, r8, lsl r6
   1072c:	02a80300 	adceq	r0, r8, #0, 6
   10730:	0002a213 	andeq	sl, r2, r3, lsl r2
   10734:	18014800 	stmdane	r1, {fp, lr}
   10738:	0000038a 	andeq	r0, r0, sl, lsl #7
   1073c:	1202a903 	andne	sl, r2, #49152	; 0xc000
   10740:	0000025f 	andeq	r0, r0, pc, asr r2
   10744:	3218014c 	andscc	r0, r8, #76, 2
   10748:	03000008 	movweq	r0, #8
   1074c:	cb0c02ad 	blgt	311208 <_Min_Stack_Size+0x310e08>
   10750:	dc000008 	stcle	0, cr0, [r0], {8}
   10754:	01711802 	cmneq	r1, r2, lsl #16
   10758:	b2030000 	andlt	r0, r3, #0
   1075c:	064f1002 	strbeq	r1, [pc], -r2
   10760:	02e00000 	rsceq	r0, r0, #0
   10764:	00014318 	andeq	r4, r1, r8, lsl r3
   10768:	02b40300 	adcseq	r0, r4, #0, 6
   1076c:	0008d70a 	andeq	sp, r8, sl, lsl #14
   10770:	0002ec00 	andeq	lr, r2, r0, lsl #24
   10774:	05a8040f 	streq	r0, [r8, #1039]!	; 0x40f
   10778:	01030000 	mrseq	r0, (UNDEF: 3)
   1077c:	0007b008 	andeq	fp, r7, r8
   10780:	05a81500 	streq	r1, [r8, #1280]!	; 0x500
   10784:	040f0000 	streq	r0, [pc], #-0	; 1078c <_Min_Stack_Size+0x1038c>
   10788:	00000430 	andeq	r0, r0, r0, lsr r4
   1078c:	00001d13 	andeq	r1, r0, r3, lsl sp
   10790:	0005d800 	andeq	sp, r5, r0, lsl #16
   10794:	044e1400 	strbeq	r1, [lr], #-1024	; 0xfffffc00
   10798:	f1140000 			; <UNDEFINED> instruction: 0xf1140000
   1079c:	14000000 	strne	r0, [r0], #-0
   107a0:	000005d8 	ldrdeq	r0, [r0], -r8
   107a4:	00001d14 	andeq	r1, r0, r4, lsl sp
   107a8:	040f0000 	streq	r0, [pc], #-0	; 107b0 <_Min_Stack_Size+0x103b0>
   107ac:	000005af 	andeq	r0, r0, pc, lsr #11
   107b0:	05ba040f 	ldreq	r0, [sl, #1039]!	; 0x40f
   107b4:	83130000 	tsthi	r3, #0
   107b8:	02000000 	andeq	r0, r0, #0
   107bc:	14000006 	strne	r0, [r0], #-6
   107c0:	0000044e 	andeq	r0, r0, lr, asr #8
   107c4:	0000f114 	andeq	pc, r0, r4, lsl r1	; <UNPREDICTABLE>
   107c8:	00831400 	addeq	r1, r3, r0, lsl #8
   107cc:	1d140000 	ldcne	0, cr0, [r4, #-0]
   107d0:	00000000 	andeq	r0, r0, r0
   107d4:	05e4040f 	strbeq	r0, [r4, #1039]!	; 0x40f
   107d8:	1d130000 	ldcne	0, cr0, [r3, #-0]
   107dc:	1c000000 	stcne	0, cr0, [r0], {-0}
   107e0:	14000006 	strne	r0, [r0], #-6
   107e4:	0000044e 	andeq	r0, r0, lr, asr #8
   107e8:	0000f114 	andeq	pc, r0, r4, lsl r1	; <UNPREDICTABLE>
   107ec:	040f0000 	streq	r0, [pc], #-0	; 107f4 <_Min_Stack_Size+0x103f4>
   107f0:	00000608 	andeq	r0, r0, r8, lsl #12
   107f4:	00004d08 	andeq	r4, r0, r8, lsl #26
   107f8:	00063200 	andeq	r3, r6, r0, lsl #4
   107fc:	00240900 	eoreq	r0, r4, r0, lsl #18
   10800:	00020000 	andeq	r0, r2, r0
   10804:	00004d08 	andeq	r4, r0, r8, lsl #26
   10808:	00064200 	andeq	r4, r6, r0, lsl #4
   1080c:	00240900 	eoreq	r0, r4, r0, lsl #18
   10810:	00000000 	andeq	r0, r0, r0
   10814:	00019f04 	andeq	r9, r1, r4, lsl #30
   10818:	01240300 			; <UNDEFINED> instruction: 0x01240300
   1081c:	0002ed1a 	andeq	lr, r2, sl, lsl sp
   10820:	08001900 	stmdaeq	r0, {r8, fp, ip}
   10824:	030c0000 	movweq	r0, #49152	; 0xc000
   10828:	88080128 	stmdahi	r8, {r3, r5, r8}
   1082c:	17000006 	strne	r0, [r0, -r6]
   10830:	0000067d 	andeq	r0, r0, sp, ror r6
   10834:	11012a03 	tstne	r1, r3, lsl #20
   10838:	00000688 	andeq	r0, r0, r8, lsl #13
   1083c:	03701700 	cmneq	r0, #0, 14
   10840:	2b030000 	blcs	d0848 <_Min_Stack_Size+0xd0448>
   10844:	001d0701 	andseq	r0, sp, r1, lsl #14
   10848:	17040000 	strne	r0, [r4, -r0]
   1084c:	00000683 	andeq	r0, r0, r3, lsl #13
   10850:	0b012c03 	bleq	5b864 <_Min_Stack_Size+0x5b464>
   10854:	0000068e 	andeq	r0, r0, lr, lsl #13
   10858:	040f0008 	streq	r0, [pc], #-8	; 10860 <_Min_Stack_Size+0x10460>
   1085c:	0000064f 	andeq	r0, r0, pc, asr #12
   10860:	0642040f 	strbeq	r0, [r2], -pc, lsl #8
   10864:	30190000 	andscc	r0, r9, r0
   10868:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   1086c:	08014403 	stmdaeq	r1, {r0, r1, sl, lr}
   10870:	000006cd 	andeq	r0, r0, sp, asr #13
   10874:	0006d317 	andeq	sp, r6, r7, lsl r3
   10878:	01450300 	mrseq	r0, (UNDEF: 117)
   1087c:	0006cd12 	andeq	ip, r6, r2, lsl sp
   10880:	f7170000 			; <UNDEFINED> instruction: 0xf7170000
   10884:	03000003 	movweq	r0, #3
   10888:	cd120146 	ldfgts	f0, [r2, #-280]	; 0xfffffee8
   1088c:	06000006 	streq	r0, [r0], -r6
   10890:	0007be17 	andeq	fp, r7, r7, lsl lr
   10894:	01470300 	mrseq	r0, (UNDEF: 119)
   10898:	00005b12 	andeq	r5, r0, r2, lsl fp
   1089c:	08000c00 	stmdaeq	r0, {sl, fp}
   108a0:	0000005b 	andeq	r0, r0, fp, asr r0
   108a4:	000006dd 	ldrdeq	r0, [r0], -sp
   108a8:	00002409 	andeq	r2, r0, r9, lsl #8
   108ac:	1a000200 	bne	110b4 <_Min_Stack_Size+0x10cb4>
   108b0:	028503d0 	addeq	r0, r5, #208, 6	; 0x40000003
   108b4:	0007f207 	andeq	pc, r7, r7, lsl #4
   108b8:	042b1700 	strteq	r1, [fp], #-1792	; 0xfffff900
   108bc:	87030000 	strhi	r0, [r3, -r0]
   108c0:	00241802 	eoreq	r1, r4, r2, lsl #16
   108c4:	17000000 	strne	r0, [r0, -r0]
   108c8:	00000781 	andeq	r0, r0, r1, lsl #15
   108cc:	12028803 	andne	r8, r2, #196608	; 0x30000
   108d0:	000005a2 	andeq	r0, r0, r2, lsr #11
   108d4:	03aa1704 			; <UNDEFINED> instruction: 0x03aa1704
   108d8:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
   108dc:	07f21002 	ldrbeq	r1, [r2, r2]!
   108e0:	17080000 	strne	r0, [r8, -r0]
   108e4:	00000897 	muleq	r0, r7, r8
   108e8:	17028a03 	strne	r8, [r2, -r3, lsl #20]
   108ec:	00000187 	andeq	r0, r0, r7, lsl #3
   108f0:	02a31724 	adceq	r1, r3, #36, 14	; 0x900000
   108f4:	8b030000 	blhi	d08fc <_Min_Stack_Size+0xd04fc>
   108f8:	001d0f02 	andseq	r0, sp, r2, lsl #30
   108fc:	17480000 	strbne	r0, [r8, -r0]
   10900:	00000678 	andeq	r0, r0, r8, ror r6
   10904:	2c028c03 	stccs	12, cr8, [r2], {3}
   10908:	00000070 	andeq	r0, r0, r0, ror r0
   1090c:	08ad1750 	stmiaeq	sp!, {r4, r6, r8, r9, sl, ip}
   10910:	8d030000 	stchi	0, cr0, [r3, #-0]
   10914:	06941a02 	ldreq	r1, [r4], r2, lsl #20
   10918:	17580000 	ldrbne	r0, [r8, -r0]
   1091c:	00000633 	andeq	r0, r0, r3, lsr r6
   10920:	16028e03 	strne	r8, [r2], -r3, lsl #28
   10924:	000000e5 	andeq	r0, r0, r5, ror #1
   10928:	08b21768 	ldmeq	r2!, {r3, r5, r6, r8, r9, sl, ip}
   1092c:	8f030000 	svchi	0x00030000
   10930:	00e51602 	rsceq	r1, r5, r2, lsl #12
   10934:	17700000 	ldrbne	r0, [r0, -r0]!
   10938:	000000fa 	strdeq	r0, [r0], -sl
   1093c:	16029003 	strne	r9, [r2], -r3
   10940:	000000e5 	andeq	r0, r0, r5, ror #1
   10944:	08151778 	ldmdaeq	r5, {r3, r4, r5, r6, r8, r9, sl, ip}
   10948:	91030000 	mrsls	r0, (UNDEF: 3)
   1094c:	08021002 	stmdaeq	r2, {r1, ip}
   10950:	17800000 	strne	r0, [r0, r0]
   10954:	0000039e 	muleq	r0, lr, r3
   10958:	10029203 	andne	r9, r2, r3, lsl #4
   1095c:	00000812 	andeq	r0, r0, r2, lsl r8
   10960:	00651788 	rsbeq	r1, r5, r8, lsl #15
   10964:	93030000 	movwls	r0, #12288	; 0x3000
   10968:	001d0f02 	andseq	r0, sp, r2, lsl #30
   1096c:	17a00000 	strne	r0, [r0, r0]!
   10970:	0000025f 	andeq	r0, r0, pc, asr r2
   10974:	16029403 	strne	r9, [r2], -r3, lsl #8
   10978:	000000e5 	andeq	r0, r0, r5, ror #1
   1097c:	00e117a4 	rsceq	r1, r1, r4, lsr #15
   10980:	95030000 	strls	r0, [r3, #-0]
   10984:	00e51602 	rsceq	r1, r5, r2, lsl #12
   10988:	17ac0000 	strne	r0, [ip, r0]!
   1098c:	00000234 	andeq	r0, r0, r4, lsr r2
   10990:	16029603 	strne	r9, [r2], -r3, lsl #12
   10994:	000000e5 	andeq	r0, r0, r5, ror #1
   10998:	007c17b4 	ldrhteq	r1, [ip], #-116	; 0xffffff8c
   1099c:	97030000 	strls	r0, [r3, -r0]
   109a0:	00e51602 	rsceq	r1, r5, r2, lsl #12
   109a4:	17bc0000 	ldrne	r0, [ip, r0]!
   109a8:	00000582 	andeq	r0, r0, r2, lsl #11
   109ac:	16029803 	strne	r9, [r2], -r3, lsl #16
   109b0:	000000e5 	andeq	r0, r0, r5, ror #1
   109b4:	062a17c4 	strteq	r1, [sl], -r4, asr #15
   109b8:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
   109bc:	001d0802 	andseq	r0, sp, r2, lsl #16
   109c0:	00cc0000 	sbceq	r0, ip, r0
   109c4:	0005a808 	andeq	sl, r5, r8, lsl #16
   109c8:	00080200 	andeq	r0, r8, r0, lsl #4
   109cc:	00240900 	eoreq	r0, r4, r0, lsl #18
   109d0:	00190000 	andseq	r0, r9, r0
   109d4:	0005a808 	andeq	sl, r5, r8, lsl #16
   109d8:	00081200 	andeq	r1, r8, r0, lsl #4
   109dc:	00240900 	eoreq	r0, r4, r0, lsl #18
   109e0:	00070000 	andeq	r0, r7, r0
   109e4:	0005a808 	andeq	sl, r5, r8, lsl #16
   109e8:	00082200 	andeq	r2, r8, r0, lsl #4
   109ec:	00240900 	eoreq	r0, r4, r0, lsl #18
   109f0:	00170000 	andseq	r0, r7, r0
   109f4:	9e03f01a 	mcrls	0, 0, pc, cr3, cr10, {0}	; <UNPREDICTABLE>
   109f8:	08490702 	stmdaeq	r9, {r1, r8, r9, sl}^
   109fc:	40170000 	andsmi	r0, r7, r0
   10a00:	03000004 	movweq	r0, #4
   10a04:	491b02a1 	ldmdbmi	fp, {r0, r5, r7, r9}
   10a08:	00000008 	andeq	r0, r0, r8
   10a0c:	0002c017 	andeq	ip, r2, r7, lsl r0
   10a10:	02a20300 	adceq	r0, r2, #0, 6
   10a14:	00085918 	andeq	r5, r8, r8, lsl r9
   10a18:	08007800 	stmdaeq	r0, {fp, ip, sp, lr}
   10a1c:	000002e7 	andeq	r0, r0, r7, ror #5
   10a20:	00000859 	andeq	r0, r0, r9, asr r8
   10a24:	00002409 	andeq	r2, r0, r9, lsl #8
   10a28:	08001d00 	stmdaeq	r0, {r8, sl, fp, ip}
   10a2c:	00000024 	andeq	r0, r0, r4, lsr #32
   10a30:	00000869 	andeq	r0, r0, r9, ror #16
   10a34:	00002409 	andeq	r2, r0, r9, lsl #8
   10a38:	1b001d00 	blne	17e40 <_Min_Stack_Size+0x17a40>
   10a3c:	028303f0 	addeq	r0, r3, #240, 6	; 0xc0000003
   10a40:	00088e03 	andeq	r8, r8, r3, lsl #28
   10a44:	06cc1c00 	strbeq	r1, [ip], r0, lsl #24
   10a48:	9a030000 	bls	d0a50 <_Min_Stack_Size+0xd0650>
   10a4c:	06dd0b02 	ldrbeq	r0, [sp], r2, lsl #22
   10a50:	7c1c0000 	ldcvc	0, cr0, [ip], {-0}
   10a54:	03000008 	movweq	r0, #8
   10a58:	220b02a3 	andcs	r0, fp, #805306378	; 0x3000000a
   10a5c:	00000008 	andeq	r0, r0, r8
   10a60:	0005a808 	andeq	sl, r5, r8, lsl #16
   10a64:	00089e00 	andeq	r9, r8, r0, lsl #28
   10a68:	00240900 	eoreq	r0, r4, r0, lsl #18
   10a6c:	00180000 	andseq	r0, r8, r0
   10a70:	0000c01d 	andeq	ip, r0, sp, lsl r0
   10a74:	9e040f00 	cdpls	15, 0, cr0, cr4, cr0, {0}
   10a78:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
   10a7c:	000008b4 			; <UNDEFINED> instruction: 0x000008b4
   10a80:	00044e14 	andeq	r4, r4, r4, lsl lr
   10a84:	040f0000 	streq	r0, [pc], #-0	; 10a8c <_Min_Stack_Size+0x1068c>
   10a88:	000008a9 	andeq	r0, r0, r9, lsr #17
   10a8c:	0171040f 	cmneq	r1, pc, lsl #8
   10a90:	cb1e0000 	blgt	790a98 <_Min_Stack_Size+0x790698>
   10a94:	14000008 	strne	r0, [r0], #-8
   10a98:	0000001d 	andeq	r0, r0, sp, lsl r0
   10a9c:	d1040f00 	tstle	r4, r0, lsl #30
   10aa0:	0f000008 	svceq	0x00000008
   10aa4:	0008c004 	andeq	ip, r8, r4
   10aa8:	06420800 	strbeq	r0, [r2], -r0, lsl #16
   10aac:	08e70000 	stmiaeq	r7!, {}^	; <UNPREDICTABLE>
   10ab0:	24090000 	strcs	r0, [r9], #-0
   10ab4:	02000000 	andeq	r0, r0, #0
   10ab8:	07d21f00 	ldrbeq	r1, [r2, r0, lsl #30]
   10abc:	33030000 	movwcc	r0, #12288	; 0x3000
   10ac0:	044e1703 	strbeq	r1, [lr], #-1795	; 0xfffff8fd
   10ac4:	cb1f0000 	blgt	7d0acc <_Min_Stack_Size+0x7d06cc>
   10ac8:	03000007 	movweq	r0, #7
   10acc:	541d0334 	ldrpl	r0, [sp], #-820	; 0xfffffccc
   10ad0:	20000004 	andcs	r0, r0, r4
   10ad4:	00004ba4 	andeq	r4, r0, r4, lsr #23
   10ad8:	59301705 	ldmdbpl	r0!, {r0, r2, r8, r9, sl, ip}
   10adc:	05000004 	streq	r0, [r0, #-4]
   10ae0:	00000803 	andeq	r0, r0, r3, lsl #16
   10ae4:	08e72120 	stmiaeq	r7!, {r5, r8, sp}^
   10ae8:	03050000 	movweq	r0, #20480	; 0x5000
   10aec:	20000000 	andcs	r0, r0, r0
   10af0:	0008f421 	andeq	pc, r8, r1, lsr #8
   10af4:	04030500 	streq	r0, [r3], #-1280	; 0xfffffb00
   10af8:	0008003f 	andeq	r0, r8, pc, lsr r0
   10afc:	000009d1 	ldrdeq	r0, [r0], -r1
   10b00:	33ad0004 			; <UNDEFINED> instruction: 0x33ad0004
   10b04:	01040000 	mrseq	r0, (UNDEF: 4)
   10b08:	00004991 	muleq	r0, r1, r9
   10b0c:	004be30c 	subeq	lr, fp, ip, lsl #6
   10b10:	00493700 	subeq	r3, r9, r0, lsl #14
   10b14:	000e9000 	andeq	r9, lr, r0
   10b18:	00006808 	andeq	r6, r0, r8, lsl #16
   10b1c:	00766f00 	rsbseq	r6, r6, r0, lsl #30
   10b20:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
   10b24:	00746e69 	rsbseq	r6, r4, r9, ror #28
   10b28:	aa070403 	bge	1d1b3c <_Min_Stack_Size+0x1d173c>
   10b2c:	03000000 	movweq	r0, #0
   10b30:	01b00508 	lslseq	r0, r8, #10
   10b34:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
   10b38:	00071904 	andeq	r1, r7, r4, lsl #18
   10b3c:	03e00400 	mvneq	r0, #0, 8
   10b40:	65020000 	strvs	r0, [r2, #-0]
   10b44:	002c1701 	eoreq	r1, ip, r1, lsl #14
   10b48:	01030000 	mrseq	r0, (UNDEF: 3)
   10b4c:	0007a906 	andeq	sl, r7, r6, lsl #18
   10b50:	08010300 	stmdaeq	r1, {r8, r9}
   10b54:	000007a7 	andeq	r0, r0, r7, lsr #15
   10b58:	00050203 	andeq	r0, r5, r3, lsl #4
   10b5c:	03000000 	movweq	r0, #0
   10b60:	03770702 	cmneq	r7, #524288	; 0x80000
   10b64:	04030000 	streq	r0, [r3], #-0
   10b68:	0001b505 	andeq	fp, r1, r5, lsl #10
   10b6c:	07040300 	streq	r0, [r4, -r0, lsl #6]
   10b70:	000000a5 	andeq	r0, r0, r5, lsr #1
   10b74:	a0070803 	andge	r0, r7, r3, lsl #16
   10b78:	05000000 	streq	r0, [r0, #-0]
   10b7c:	00000562 	andeq	r0, r0, r2, ror #10
   10b80:	6a0e2e03 	bvs	39c394 <_Min_Stack_Size+0x39bf94>
   10b84:	05000000 	streq	r0, [r0, #-0]
   10b88:	000006fb 	strdeq	r0, [r0], -fp
   10b8c:	6a0e7403 	bvs	3adba0 <_Min_Stack_Size+0x3ad7a0>
   10b90:	06000000 	streq	r0, [r0], -r0
   10b94:	03a50304 			; <UNDEFINED> instruction: 0x03a50304
   10b98:	000000b9 	strheq	r0, [r0], -r9
   10b9c:	0003da07 	andeq	sp, r3, r7, lsl #20
   10ba0:	0ca70300 	stceq	3, cr0, [r7]
   10ba4:	00000041 	andeq	r0, r0, r1, asr #32
   10ba8:	0002ec07 	andeq	lr, r2, r7, lsl #24
   10bac:	13a80300 			; <UNDEFINED> instruction: 0x13a80300
   10bb0:	000000b9 	strheq	r0, [r0], -r9
   10bb4:	00550800 	subseq	r0, r5, r0, lsl #16
   10bb8:	00c90000 	sbceq	r0, r9, r0
   10bbc:	2c090000 	stccs	0, cr0, [r9], {-0}
   10bc0:	03000000 	movweq	r0, #0
   10bc4:	03080a00 	movweq	r0, #35328	; 0x8a00
   10bc8:	00ed09a2 	rsceq	r0, sp, r2, lsr #19
   10bcc:	e30b0000 	movw	r0, #45056	; 0xb000
   10bd0:	03000006 	movweq	r0, #6
   10bd4:	002507a4 	eoreq	r0, r5, r4, lsr #15
   10bd8:	0b000000 	bleq	10be0 <_Min_Stack_Size+0x107e0>
   10bdc:	0000080d 	andeq	r0, r0, sp, lsl #16
   10be0:	9705a903 	strls	sl, [r5, -r3, lsl #18]
   10be4:	04000000 	streq	r0, [r0], #-0
   10be8:	066d0500 	strbteq	r0, [sp], -r0, lsl #10
   10bec:	aa030000 	bge	d0bf4 <_Min_Stack_Size+0xd07f4>
   10bf0:	0000c903 	andeq	ip, r0, r3, lsl #18
   10bf4:	05040c00 	streq	r0, [r4, #-3072]	; 0xfffff400
   10bf8:	000007c3 	andeq	r0, r0, r3, asr #15
   10bfc:	71191604 	tstvc	r9, r4, lsl #12
   10c00:	05000000 	streq	r0, [r0, #-0]
   10c04:	000005cb 	andeq	r0, r0, fp, asr #11
   10c08:	250d0c05 	strcs	r0, [sp, #-3077]	; 0xfffff3fb
   10c0c:	05000000 	streq	r0, [r0, #-0]
   10c10:	00000859 	andeq	r0, r0, r9, asr r8
   10c14:	071b2304 	ldreq	r2, [fp, -r4, lsl #6]
   10c18:	0d000001 	stceq	0, cr0, [r0, #-4]
   10c1c:	0000029b 	muleq	r0, fp, r2
   10c20:	08340418 	ldmdaeq	r4!, {r3, r4, sl}
   10c24:	00000179 	andeq	r0, r0, r9, ror r1
   10c28:	00067d0b 	andeq	r7, r6, fp, lsl #26
   10c2c:	13360400 	teqne	r6, #0, 8
   10c30:	00000179 	andeq	r0, r0, r9, ror r1
   10c34:	6b5f0e00 	blvs	17d443c <_Min_Stack_Size+0x17d403c>
   10c38:	07370400 	ldreq	r0, [r7, -r0, lsl #8]!
   10c3c:	00000025 	andeq	r0, r0, r5, lsr #32
   10c40:	06c40b04 	strbeq	r0, [r4], r4, lsl #22
   10c44:	37040000 	strcc	r0, [r4, -r0]
   10c48:	0000250b 	andeq	r2, r0, fp, lsl #10
   10c4c:	8d0b0800 	stchi	8, cr0, [fp, #-0]
   10c50:	04000002 	streq	r0, [r0], #-2
   10c54:	00251437 	eoreq	r1, r5, r7, lsr r4
   10c58:	0b0c0000 	bleq	310c60 <_Min_Stack_Size+0x310860>
   10c5c:	0000019a 	muleq	r0, sl, r1
   10c60:	251b3704 	ldrcs	r3, [fp, #-1796]	; 0xfffff8fc
   10c64:	10000000 	andne	r0, r0, r0
   10c68:	00785f0e 	rsbseq	r5, r8, lr, lsl #30
   10c6c:	7f0b3804 	svcvc	0x000b3804
   10c70:	14000001 	strne	r0, [r0], #-1
   10c74:	1f040f00 	svcne	0x00040f00
   10c78:	08000001 	stmdaeq	r0, {r0}
   10c7c:	000000fb 	strdeq	r0, [r0], -fp
   10c80:	0000018f 	andeq	r0, r0, pc, lsl #3
   10c84:	00002c09 	andeq	r2, r0, r9, lsl #24
   10c88:	0d000000 	stceq	0, cr0, [r0, #-0]
   10c8c:	000002d5 	ldrdeq	r0, [r0], -r5
   10c90:	083c0424 	ldmdaeq	ip!, {r2, r5, sl}
   10c94:	00000212 	andeq	r0, r0, r2, lsl r2
   10c98:	0001080b 	andeq	r0, r1, fp, lsl #16
   10c9c:	093e0400 	ldmdbeq	lr!, {sl}
   10ca0:	00000025 	andeq	r0, r0, r5, lsr #32
   10ca4:	07b50b00 	ldreq	r0, [r5, r0, lsl #22]!
   10ca8:	3f040000 	svccc	0x00040000
   10cac:	00002509 	andeq	r2, r0, r9, lsl #10
   10cb0:	390b0400 	stmdbcc	fp, {sl}
   10cb4:	04000001 	streq	r0, [r0], #-1
   10cb8:	00250940 	eoreq	r0, r5, r0, asr #18
   10cbc:	0b080000 	bleq	210cc4 <_Min_Stack_Size+0x2108c4>
   10cc0:	000008ca 	andeq	r0, r0, sl, asr #17
   10cc4:	25094104 	strcs	r4, [r9, #-260]	; 0xfffffefc
   10cc8:	0c000000 	stceq	0, cr0, [r0], {-0}
   10ccc:	0005380b 	andeq	r3, r5, fp, lsl #16
   10cd0:	09420400 	stmdbeq	r2, {sl}^
   10cd4:	00000025 	andeq	r0, r0, r5, lsr #32
   10cd8:	04210b10 	strteq	r0, [r1], #-2832	; 0xfffff4f0
   10cdc:	43040000 	movwmi	r0, #16384	; 0x4000
   10ce0:	00002509 	andeq	r2, r0, r9, lsl #10
   10ce4:	f60b1400 			; <UNDEFINED> instruction: 0xf60b1400
   10ce8:	04000007 	streq	r0, [r0], #-7
   10cec:	00250944 	eoreq	r0, r5, r4, asr #18
   10cf0:	0b180000 	bleq	610cf8 <_Min_Stack_Size+0x6108f8>
   10cf4:	00000640 	andeq	r0, r0, r0, asr #12
   10cf8:	25094504 	strcs	r4, [r9, #-1284]	; 0xfffffafc
   10cfc:	1c000000 	stcne	0, cr0, [r0], {-0}
   10d00:	00088c0b 	andeq	r8, r8, fp, lsl #24
   10d04:	09460400 	stmdbeq	r6, {sl}^
   10d08:	00000025 	andeq	r0, r0, r5, lsr #32
   10d0c:	48100020 	ldmdami	r0, {r5}
   10d10:	08000001 	stmdaeq	r0, {r0}
   10d14:	084f0401 	stmdaeq	pc, {r0, sl}^	; <UNPREDICTABLE>
   10d18:	00000257 	andeq	r0, r0, r7, asr r2
   10d1c:	00026d0b 	andeq	r6, r2, fp, lsl #26
   10d20:	0a500400 	beq	1411d28 <_Min_Stack_Size+0x1411928>
   10d24:	00000257 	andeq	r0, r0, r7, asr r2
   10d28:	05fe0b00 	ldrbeq	r0, [lr, #2816]!	; 0xb00
   10d2c:	51040000 	mrspl	r0, (UNDEF: 4)
   10d30:	00025709 	andeq	r5, r2, r9, lsl #14
   10d34:	96118000 	ldrls	r8, [r1], -r0
   10d38:	04000007 	streq	r0, [r0], #-7
   10d3c:	00fb0a53 	rscseq	r0, fp, r3, asr sl
   10d40:	01000000 	mrseq	r0, (UNDEF: 0)
   10d44:	00019211 	andeq	r9, r1, r1, lsl r2
   10d48:	0a560400 	beq	1591d50 <_Min_Stack_Size+0x1591950>
   10d4c:	000000fb 	strdeq	r0, [r0], -fp
   10d50:	08000104 	stmdaeq	r0, {r2, r8}
   10d54:	000000f9 	strdeq	r0, [r0], -r9
   10d58:	00000267 	andeq	r0, r0, r7, ror #4
   10d5c:	00002c09 	andeq	r2, r0, r9, lsl #24
   10d60:	10001f00 	andne	r1, r0, r0, lsl #30
   10d64:	00004a76 	andeq	r4, r0, r6, ror sl
   10d68:	62040190 	andvs	r0, r4, #144, 2	; 0x24
   10d6c:	0002aa08 	andeq	sl, r2, r8, lsl #20
   10d70:	067d0b00 	ldrbteq	r0, [sp], -r0, lsl #22
   10d74:	63040000 	movwvs	r0, #16384	; 0x4000
   10d78:	0002aa12 	andeq	sl, r2, r2, lsl sl
   10d7c:	8e0b0000 	cdphi	0, 0, cr0, cr11, cr0, {0}
   10d80:	04000006 	streq	r0, [r0], #-6
   10d84:	00250664 	eoreq	r0, r5, r4, ror #12
   10d88:	0b040000 	bleq	110d90 <_Min_Stack_Size+0x110990>
   10d8c:	00000288 	andeq	r0, r0, r8, lsl #5
   10d90:	b0096604 	andlt	r6, r9, r4, lsl #12
   10d94:	08000002 	stmdaeq	r0, {r1}
   10d98:	0001480b 	andeq	r4, r1, fp, lsl #16
   10d9c:	1e670400 	cdpne	4, 6, cr0, cr7, cr0, {0}
   10da0:	00000212 	andeq	r0, r0, r2, lsl r2
   10da4:	040f0088 	streq	r0, [pc], #-136	; 10dac <_Min_Stack_Size+0x109ac>
   10da8:	00000267 	andeq	r0, r0, r7, ror #4
   10dac:	0002c008 	andeq	ip, r2, r8
   10db0:	0002c000 	andeq	ip, r2, r0
   10db4:	002c0900 	eoreq	r0, ip, r0, lsl #18
   10db8:	001f0000 	andseq	r0, pc, r0
   10dbc:	02c6040f 	sbceq	r0, r6, #251658240	; 0xf000000
   10dc0:	0d120000 	ldceq	0, cr0, [r2, #-0]
   10dc4:	0000064a 	andeq	r0, r0, sl, asr #12
   10dc8:	087a0408 	ldmdaeq	sl!, {r3, sl}^
   10dcc:	000002ef 	andeq	r0, r0, pc, ror #5
   10dd0:	0001330b 	andeq	r3, r1, fp, lsl #6
   10dd4:	117b0400 	cmnne	fp, r0, lsl #8
   10dd8:	000002ef 	andeq	r0, r0, pc, ror #5
   10ddc:	072e0b00 	streq	r0, [lr, -r0, lsl #22]!
   10de0:	7c040000 	stcvc	0, cr0, [r4], {-0}
   10de4:	00002506 	andeq	r2, r0, r6, lsl #10
   10de8:	0f000400 	svceq	0x00000400
   10dec:	00005504 	andeq	r5, r0, r4, lsl #10
   10df0:	00280d00 	eoreq	r0, r8, r0, lsl #26
   10df4:	04680000 	strbteq	r0, [r8], #-0
   10df8:	043808ba 	ldrteq	r0, [r8], #-2234	; 0xfffff746
   10dfc:	5f0e0000 	svcpl	0x000e0000
   10e00:	bb040070 	bllt	110fc8 <_Min_Stack_Size+0x110bc8>
   10e04:	0002ef12 	andeq	lr, r2, r2, lsl pc
   10e08:	5f0e0000 	svcpl	0x000e0000
   10e0c:	bc040072 	stclt	0, cr0, [r4], {114}	; 0x72
   10e10:	00002507 	andeq	r2, r0, r7, lsl #10
   10e14:	5f0e0400 	svcpl	0x000e0400
   10e18:	bd040077 	stclt	0, cr0, [r4, #-476]	; 0xfffffe24
   10e1c:	00002507 	andeq	r2, r0, r7, lsl #10
   10e20:	8b0b0800 	blhi	2d2e28 <_Min_Stack_Size+0x2d2a28>
   10e24:	04000001 	streq	r0, [r0], #-1
   10e28:	005c09be 	ldrheq	r0, [ip], #-158	; 0xffffff62
   10e2c:	0b0c0000 	bleq	310e34 <_Min_Stack_Size+0x310a34>
   10e30:	0000030d 	andeq	r0, r0, sp, lsl #6
   10e34:	5c09bf04 	stcpl	15, cr11, [r9], {4}
   10e38:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   10e3c:	66625f0e 	strbtvs	r5, [r2], -lr, lsl #30
   10e40:	11c00400 	bicne	r0, r0, r0, lsl #8
   10e44:	000002c7 	andeq	r0, r0, r7, asr #5
   10e48:	00b70b10 	adcseq	r0, r7, r0, lsl fp
   10e4c:	c1040000 	mrsgt	r0, (UNDEF: 4)
   10e50:	00002507 	andeq	r2, r0, r7, lsl #10
   10e54:	690b1800 	stmdbvs	fp, {fp, ip}
   10e58:	04000001 	streq	r0, [r0], #-1
   10e5c:	00f90ac8 	rscseq	r0, r9, r8, asr #21
   10e60:	0b1c0000 	bleq	710e68 <_Min_Stack_Size+0x710a68>
   10e64:	000033bd 			; <UNDEFINED> instruction: 0x000033bd
   10e68:	bc1dca04 			; <UNDEFINED> instruction: 0xbc1dca04
   10e6c:	20000005 	andcs	r0, r0, r5
   10e70:	0033360b 	eorseq	r3, r3, fp, lsl #12
   10e74:	1dcc0400 	cfstrdne	mvd0, [ip]
   10e78:	000005e6 	andeq	r0, r0, r6, ror #11
   10e7c:	06eb0b24 	strbteq	r0, [fp], r4, lsr #22
   10e80:	cf040000 	svcgt	0x00040000
   10e84:	00060a0d 	andeq	r0, r6, sp, lsl #20
   10e88:	a60b2800 	strge	r2, [fp], -r0, lsl #16
   10e8c:	04000008 	streq	r0, [r0], #-8
   10e90:	062409d0 			; <UNDEFINED> instruction: 0x062409d0
   10e94:	0e2c0000 	cdpeq	0, 2, cr0, cr12, cr0, {0}
   10e98:	0062755f 	rsbeq	r7, r2, pc, asr r5
   10e9c:	c711d304 	ldrgt	sp, [r1, -r4, lsl #6]
   10ea0:	30000002 	andcc	r0, r0, r2
   10ea4:	70755f0e 	rsbsvc	r5, r5, lr, lsl #30
   10ea8:	12d40400 	sbcsne	r0, r4, #0, 8
   10eac:	000002ef 	andeq	r0, r0, pc, ror #5
   10eb0:	755f0e38 	ldrbvc	r0, [pc, #-3640]	; 10080 <_Min_Stack_Size+0xfc80>
   10eb4:	d5040072 	strle	r0, [r4, #-114]	; 0xffffff8e
   10eb8:	00002507 	andeq	r2, r0, r7, lsl #10
   10ebc:	2d0b3c00 	stccs	12, cr3, [fp, #-0]
   10ec0:	04000001 	streq	r0, [r0], #-1
   10ec4:	062a11d8 			; <UNDEFINED> instruction: 0x062a11d8
   10ec8:	0b400000 	bleq	1010ed0 <_Min_Stack_Size+0x1010ad0>
   10ecc:	00000876 	andeq	r0, r0, r6, ror r8
   10ed0:	3a11d904 	bcc	4872e8 <_Min_Stack_Size+0x486ee8>
   10ed4:	43000006 	movwmi	r0, #6
   10ed8:	626c5f0e 	rsbvs	r5, ip, #14, 30	; 0x38
   10edc:	11dc0400 	bicsne	r0, ip, r0, lsl #8
   10ee0:	000002c7 	andeq	r0, r0, r7, asr #5
   10ee4:	07250b44 	streq	r0, [r5, -r4, asr #22]!
   10ee8:	df040000 	svcle	0x00040000
   10eec:	00002507 	andeq	r2, r0, r7, lsl #10
   10ef0:	380b4c00 	stmdacc	fp, {sl, fp, lr}
   10ef4:	04000004 	streq	r0, [r0], #-4
   10ef8:	007f0ae0 	rsbseq	r0, pc, r0, ror #21
   10efc:	0b500000 	bleq	1410f04 <_Min_Stack_Size+0x1410b04>
   10f00:	00004baa 	andeq	r4, r0, sl, lsr #23
   10f04:	5612e304 	ldrpl	lr, [r2], -r4, lsl #6
   10f08:	54000004 	strpl	r0, [r0], #-4
   10f0c:	0003f10b 	andeq	pc, r3, fp, lsl #2
   10f10:	0ce70400 	cfstrdeq	mvd0, [r7]
   10f14:	00000113 	andeq	r0, r0, r3, lsl r1
   10f18:	02e30b58 	rsceq	r0, r3, #88, 22	; 0x16000
   10f1c:	e9040000 	stmdb	r4, {}	; <UNPREDICTABLE>
   10f20:	0000ed0e 	andeq	lr, r0, lr, lsl #26
   10f24:	510b5c00 	tstpl	fp, r0, lsl #24
   10f28:	04000006 	streq	r0, [r0], #-6
   10f2c:	002509ea 	eoreq	r0, r5, sl, ror #19
   10f30:	00640000 	rsbeq	r0, r4, r0
   10f34:	00002513 	andeq	r2, r0, r3, lsl r5
   10f38:	00045600 	andeq	r5, r4, r0, lsl #12
   10f3c:	04561400 	ldrbeq	r1, [r6], #-1024	; 0xfffffc00
   10f40:	f9140000 			; <UNDEFINED> instruction: 0xf9140000
   10f44:	14000000 	strne	r0, [r0], #-0
   10f48:	000005aa 	andeq	r0, r0, sl, lsr #11
   10f4c:	00002514 	andeq	r2, r0, r4, lsl r5
   10f50:	040f0000 	streq	r0, [pc], #-0	; 10f58 <_Min_Stack_Size+0x10b58>
   10f54:	00000461 	andeq	r0, r0, r1, ror #8
   10f58:	00045615 	andeq	r5, r4, r5, lsl r6
   10f5c:	06cc1600 	strbeq	r1, [ip], r0, lsl #12
   10f60:	04280000 	strteq	r0, [r8], #-0
   10f64:	08026504 	stmdaeq	r2, {r2, r8, sl, sp, lr}
   10f68:	000005aa 	andeq	r0, r0, sl, lsr #11
   10f6c:	00062c17 	andeq	r2, r6, r7, lsl ip
   10f70:	02670400 	rsbeq	r0, r7, #0, 8
   10f74:	00002507 	andeq	r2, r0, r7, lsl #10
   10f78:	06170000 	ldreq	r0, [r7], -r0
   10f7c:	04000008 	streq	r0, [r0], #-8
   10f80:	960b026c 	strls	r0, [fp], -ip, ror #4
   10f84:	04000006 	streq	r0, [r0], #-6
   10f88:	0007ee17 	andeq	lr, r7, r7, lsl lr
   10f8c:	026c0400 	rsbeq	r0, ip, #0, 8
   10f90:	00069614 	andeq	r9, r6, r4, lsl r6
   10f94:	93170800 	tstls	r7, #0, 16
   10f98:	04000002 	streq	r0, [r0], #-2
   10f9c:	961e026c 	ldrls	r0, [lr], -ip, ror #4
   10fa0:	0c000006 	stceq	0, cr0, [r0], {6}
   10fa4:	00068917 	andeq	r8, r6, r7, lsl r9
   10fa8:	026e0400 	rsbeq	r0, lr, #0, 8
   10fac:	00002508 	andeq	r2, r0, r8, lsl #10
   10fb0:	42171000 	andsmi	r1, r7, #0
   10fb4:	04000000 	streq	r0, [r0], #-0
   10fb8:	9608026f 	strls	r0, [r8], -pc, ror #4
   10fbc:	14000008 	strne	r0, [r0], #-8
   10fc0:	0006ab17 	andeq	sl, r6, r7, lsl fp
   10fc4:	02720400 	rsbseq	r0, r2, #0, 8
   10fc8:	00002507 	andeq	r2, r0, r7, lsl #10
   10fcc:	9b173000 	blls	5dcfd4 <_Min_Stack_Size+0x5dcbd4>
   10fd0:	04000006 	streq	r0, [r0], #-6
   10fd4:	ab160273 	blge	5919a8 <_Min_Stack_Size+0x5915a8>
   10fd8:	34000008 	strcc	r0, [r0], #-8
   10fdc:	00054117 	andeq	r4, r5, r7, lsl r1
   10fe0:	02750400 	rsbseq	r0, r5, #0, 8
   10fe4:	00002507 	andeq	r2, r0, r7, lsl #10
   10fe8:	e4173800 	ldr	r3, [r7], #-2048	; 0xfffff800
   10fec:	04000007 	streq	r0, [r0], #-7
   10ff0:	bc0a0277 	sfmlt	f0, 4, [sl], {119}	; 0x77
   10ff4:	3c000008 	stccc	0, cr0, [r0], {8}
   10ff8:	0003fd17 	andeq	pc, r3, r7, lsl sp	; <UNPREDICTABLE>
   10ffc:	027a0400 	rsbseq	r0, sl, #0, 8
   11000:	00017913 	andeq	r7, r1, r3, lsl r9
   11004:	a6174000 	ldrge	r4, [r7], -r0
   11008:	04000001 	streq	r0, [r0], #-1
   1100c:	2507027b 	strcs	r0, [r7, #-635]	; 0xfffffd85
   11010:	44000000 	strmi	r0, [r0], #-0
   11014:	0008c017 	andeq	ip, r8, r7, lsl r0
   11018:	027c0400 	rsbseq	r0, ip, #0, 8
   1101c:	00017913 	andeq	r7, r1, r3, lsl r9
   11020:	a3174800 	tstge	r7, #0, 16
   11024:	04000005 	streq	r0, [r0], #-5
   11028:	c214027d 	andsgt	r0, r4, #-805306361	; 0xd0000007
   1102c:	4c000008 	stcmi	0, cr0, [r0], {8}
   11030:	00030517 	andeq	r0, r3, r7, lsl r5
   11034:	02800400 	addeq	r0, r0, #0, 8
   11038:	00002507 	andeq	r2, r0, r7, lsl #10
   1103c:	f6175000 			; <UNDEFINED> instruction: 0xf6175000
   11040:	04000005 	streq	r0, [r0], #-5
   11044:	aa090281 	bge	251a50 <_Min_Stack_Size+0x251650>
   11048:	54000005 	strpl	r0, [r0], #-5
   1104c:	00061c17 	andeq	r1, r6, r7, lsl ip
   11050:	02a40400 	adceq	r0, r4, #0, 8
   11054:	00087107 	andeq	r7, r8, r7, lsl #2
   11058:	76185800 	ldrvc	r5, [r8], -r0, lsl #16
   1105c:	0400004a 	streq	r0, [r0], #-74	; 0xffffffb6
   11060:	aa1302a8 	bge	4d1b08 <_Min_Stack_Size+0x4d1708>
   11064:	48000002 	stmdami	r0, {r1}
   11068:	038a1801 	orreq	r1, sl, #65536	; 0x10000
   1106c:	a9040000 	stmdbge	r4, {}	; <UNPREDICTABLE>
   11070:	02671202 	rsbeq	r1, r7, #536870912	; 0x20000000
   11074:	014c0000 	mrseq	r0, (UNDEF: 76)
   11078:	00083218 	andeq	r3, r8, r8, lsl r2
   1107c:	02ad0400 	adceq	r0, sp, #0, 8
   11080:	0008d30c 	andeq	sp, r8, ip, lsl #6
   11084:	1802dc00 	stmdane	r2, {sl, fp, ip, lr, pc}
   11088:	00000171 	andeq	r0, r0, r1, ror r1
   1108c:	1002b204 	andne	fp, r2, r4, lsl #4
   11090:	00000657 	andeq	r0, r0, r7, asr r6
   11094:	431802e0 	tstmi	r8, #224, 4
   11098:	04000001 	streq	r0, [r0], #-1
   1109c:	df0a02b4 	svcle	0x000a02b4
   110a0:	ec000008 	stc	0, cr0, [r0], {8}
   110a4:	040f0002 	streq	r0, [pc], #-2	; 110ac <_Min_Stack_Size+0x10cac>
   110a8:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
   110ac:	b0080103 	andlt	r0, r8, r3, lsl #2
   110b0:	15000007 	strne	r0, [r0, #-7]
   110b4:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
   110b8:	0438040f 	ldrteq	r0, [r8], #-1039	; 0xfffffbf1
   110bc:	25130000 	ldrcs	r0, [r3, #-0]
   110c0:	e0000000 	and	r0, r0, r0
   110c4:	14000005 	strne	r0, [r0], #-5
   110c8:	00000456 	andeq	r0, r0, r6, asr r4
   110cc:	0000f914 	andeq	pc, r0, r4, lsl r9	; <UNPREDICTABLE>
   110d0:	05e01400 	strbeq	r1, [r0, #1024]!	; 0x400
   110d4:	25140000 	ldrcs	r0, [r4, #-0]
   110d8:	00000000 	andeq	r0, r0, r0
   110dc:	05b7040f 	ldreq	r0, [r7, #1039]!	; 0x40f
   110e0:	040f0000 	streq	r0, [pc], #-0	; 110e8 <_Min_Stack_Size+0x10ce8>
   110e4:	000005c2 	andeq	r0, r0, r2, asr #11
   110e8:	00008b13 	andeq	r8, r0, r3, lsl fp
   110ec:	00060a00 	andeq	r0, r6, r0, lsl #20
   110f0:	04561400 	ldrbeq	r1, [r6], #-1024	; 0xfffffc00
   110f4:	f9140000 			; <UNDEFINED> instruction: 0xf9140000
   110f8:	14000000 	strne	r0, [r0], #-0
   110fc:	0000008b 	andeq	r0, r0, fp, lsl #1
   11100:	00002514 	andeq	r2, r0, r4, lsl r5
   11104:	040f0000 	streq	r0, [pc], #-0	; 1110c <_Min_Stack_Size+0x10d0c>
   11108:	000005ec 	andeq	r0, r0, ip, ror #11
   1110c:	00002513 	andeq	r2, r0, r3, lsl r5
   11110:	00062400 	andeq	r2, r6, r0, lsl #8
   11114:	04561400 	ldrbeq	r1, [r6], #-1024	; 0xfffffc00
   11118:	f9140000 			; <UNDEFINED> instruction: 0xf9140000
   1111c:	00000000 	andeq	r0, r0, r0
   11120:	0610040f 	ldreq	r0, [r0], -pc, lsl #8
   11124:	55080000 	strpl	r0, [r8, #-0]
   11128:	3a000000 	bcc	11130 <_Min_Stack_Size+0x10d30>
   1112c:	09000006 	stmdbeq	r0, {r1, r2}
   11130:	0000002c 	andeq	r0, r0, ip, lsr #32
   11134:	55080002 	strpl	r0, [r8, #-2]
   11138:	4a000000 	bmi	11140 <_Min_Stack_Size+0x10d40>
   1113c:	09000006 	stmdbeq	r0, {r1, r2}
   11140:	0000002c 	andeq	r0, r0, ip, lsr #32
   11144:	9f040000 	svcls	0x00040000
   11148:	04000001 	streq	r0, [r0], #-1
   1114c:	f51a0124 			; <UNDEFINED> instruction: 0xf51a0124
   11150:	19000002 	stmdbne	r0, {r1}
   11154:	00000800 	andeq	r0, r0, r0, lsl #16
   11158:	0128040c 			; <UNDEFINED> instruction: 0x0128040c
   1115c:	00069008 	andeq	r9, r6, r8
   11160:	067d1700 	ldrbteq	r1, [sp], -r0, lsl #14
   11164:	2a040000 	bcs	11116c <_Min_Stack_Size+0x110d6c>
   11168:	06901101 	ldreq	r1, [r0], r1, lsl #2
   1116c:	17000000 	strne	r0, [r0, -r0]
   11170:	00000370 	andeq	r0, r0, r0, ror r3
   11174:	07012b04 	streq	r2, [r1, -r4, lsl #22]
   11178:	00000025 	andeq	r0, r0, r5, lsr #32
   1117c:	06831704 	streq	r1, [r3], r4, lsl #14
   11180:	2c040000 	stccs	0, cr0, [r4], {-0}
   11184:	06960b01 	ldreq	r0, [r6], r1, lsl #22
   11188:	00080000 	andeq	r0, r8, r0
   1118c:	0657040f 	ldrbeq	r0, [r7], -pc, lsl #8
   11190:	040f0000 	streq	r0, [pc], #-0	; 11198 <_Min_Stack_Size+0x10d98>
   11194:	0000064a 	andeq	r0, r0, sl, asr #12
   11198:	00003019 	andeq	r3, r0, r9, lsl r0
   1119c:	44040e00 	strmi	r0, [r4], #-3584	; 0xfffff200
   111a0:	06d50801 	ldrbeq	r0, [r5], r1, lsl #16
   111a4:	d3170000 	tstle	r7, #0
   111a8:	04000006 	streq	r0, [r0], #-6
   111ac:	d5120145 	ldrle	r0, [r2, #-325]	; 0xfffffebb
   111b0:	00000006 	andeq	r0, r0, r6
   111b4:	0003f717 	andeq	pc, r3, r7, lsl r7	; <UNPREDICTABLE>
   111b8:	01460400 	cmpeq	r6, r0, lsl #8
   111bc:	0006d512 	andeq	sp, r6, r2, lsl r5
   111c0:	be170600 	cfmsub32lt	mvax0, mvfx0, mvfx7, mvfx0
   111c4:	04000007 	streq	r0, [r0], #-7
   111c8:	63120147 	tstvs	r2, #-1073741807	; 0xc0000011
   111cc:	0c000000 	stceq	0, cr0, [r0], {-0}
   111d0:	00630800 	rsbeq	r0, r3, r0, lsl #16
   111d4:	06e50000 	strbteq	r0, [r5], r0
   111d8:	2c090000 	stccs	0, cr0, [r9], {-0}
   111dc:	02000000 	andeq	r0, r0, #0
   111e0:	04d01a00 	ldrbeq	r1, [r0], #2560	; 0xa00
   111e4:	fa070285 	blx	1d1c00 <_Min_Stack_Size+0x1d1800>
   111e8:	17000007 	strne	r0, [r0, -r7]
   111ec:	0000042b 	andeq	r0, r0, fp, lsr #8
   111f0:	18028704 	stmdane	r2, {r2, r8, r9, sl, pc}
   111f4:	0000002c 	andeq	r0, r0, ip, lsr #32
   111f8:	07811700 	streq	r1, [r1, r0, lsl #14]
   111fc:	88040000 	stmdahi	r4, {}	; <UNPREDICTABLE>
   11200:	05aa1202 	streq	r1, [sl, #514]!	; 0x202
   11204:	17040000 	strne	r0, [r4, -r0]
   11208:	000003aa 	andeq	r0, r0, sl, lsr #7
   1120c:	10028904 	andne	r8, r2, r4, lsl #18
   11210:	000007fa 	strdeq	r0, [r0], -sl
   11214:	08971708 	ldmeq	r7, {r3, r8, r9, sl, ip}
   11218:	8a040000 	bhi	111220 <_Min_Stack_Size+0x110e20>
   1121c:	018f1702 	orreq	r1, pc, r2, lsl #14
   11220:	17240000 	strne	r0, [r4, -r0]!
   11224:	000002a3 	andeq	r0, r0, r3, lsr #5
   11228:	0f028b04 	svceq	0x00028b04
   1122c:	00000025 	andeq	r0, r0, r5, lsr #32
   11230:	06781748 	ldrbteq	r1, [r8], -r8, asr #14
   11234:	8c040000 	stchi	0, cr0, [r4], {-0}
   11238:	00782c02 	rsbseq	r2, r8, r2, lsl #24
   1123c:	17500000 	ldrbne	r0, [r0, -r0]
   11240:	000008ad 	andeq	r0, r0, sp, lsr #17
   11244:	1a028d04 	bne	b465c <_Min_Stack_Size+0xb425c>
   11248:	0000069c 	muleq	r0, ip, r6
   1124c:	06331758 			; <UNDEFINED> instruction: 0x06331758
   11250:	8e040000 	cdphi	0, 0, cr0, cr4, cr0, {0}
   11254:	00ed1602 	rsceq	r1, sp, r2, lsl #12
   11258:	17680000 	strbne	r0, [r8, -r0]!
   1125c:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
   11260:	16028f04 	strne	r8, [r2], -r4, lsl #30
   11264:	000000ed 	andeq	r0, r0, sp, ror #1
   11268:	00fa1770 	rscseq	r1, sl, r0, ror r7
   1126c:	90040000 	andls	r0, r4, r0
   11270:	00ed1602 	rsceq	r1, sp, r2, lsl #12
   11274:	17780000 	ldrbne	r0, [r8, -r0]!
   11278:	00000815 	andeq	r0, r0, r5, lsl r8
   1127c:	10029104 	andne	r9, r2, r4, lsl #2
   11280:	0000080a 	andeq	r0, r0, sl, lsl #16
   11284:	039e1780 	orrseq	r1, lr, #128, 14	; 0x2000000
   11288:	92040000 	andls	r0, r4, #0
   1128c:	081a1002 	ldmdaeq	sl, {r1, ip}
   11290:	17880000 	strne	r0, [r8, r0]
   11294:	00000065 	andeq	r0, r0, r5, rrx
   11298:	0f029304 	svceq	0x00029304
   1129c:	00000025 	andeq	r0, r0, r5, lsr #32
   112a0:	025f17a0 	subseq	r1, pc, #160, 14	; 0x2800000
   112a4:	94040000 	strls	r0, [r4], #-0
   112a8:	00ed1602 	rsceq	r1, sp, r2, lsl #12
   112ac:	17a40000 	strne	r0, [r4, r0]!
   112b0:	000000e1 	andeq	r0, r0, r1, ror #1
   112b4:	16029504 	strne	r9, [r2], -r4, lsl #10
   112b8:	000000ed 	andeq	r0, r0, sp, ror #1
   112bc:	023417ac 	eorseq	r1, r4, #172, 14	; 0x2b00000
   112c0:	96040000 	strls	r0, [r4], -r0
   112c4:	00ed1602 	rsceq	r1, sp, r2, lsl #12
   112c8:	17b40000 	ldrne	r0, [r4, r0]!
   112cc:	0000007c 	andeq	r0, r0, ip, ror r0
   112d0:	16029704 	strne	r9, [r2], -r4, lsl #14
   112d4:	000000ed 	andeq	r0, r0, sp, ror #1
   112d8:	058217bc 	streq	r1, [r2, #1980]	; 0x7bc
   112dc:	98040000 	stmdals	r4, {}	; <UNPREDICTABLE>
   112e0:	00ed1602 	rsceq	r1, sp, r2, lsl #12
   112e4:	17c40000 	strbne	r0, [r4, r0]
   112e8:	0000062a 	andeq	r0, r0, sl, lsr #12
   112ec:	08029904 	stmdaeq	r2, {r2, r8, fp, ip, pc}
   112f0:	00000025 	andeq	r0, r0, r5, lsr #32
   112f4:	b00800cc 	andlt	r0, r8, ip, asr #1
   112f8:	0a000005 	beq	11314 <_Min_Stack_Size+0x10f14>
   112fc:	09000008 	stmdbeq	r0, {r3}
   11300:	0000002c 	andeq	r0, r0, ip, lsr #32
   11304:	b0080019 	andlt	r0, r8, r9, lsl r0
   11308:	1a000005 	bne	11324 <_Min_Stack_Size+0x10f24>
   1130c:	09000008 	stmdbeq	r0, {r3}
   11310:	0000002c 	andeq	r0, r0, ip, lsr #32
   11314:	b0080007 	andlt	r0, r8, r7
   11318:	2a000005 	bcs	11334 <_Min_Stack_Size+0x10f34>
   1131c:	09000008 	stmdbeq	r0, {r3}
   11320:	0000002c 	andeq	r0, r0, ip, lsr #32
   11324:	f01a0017 			; <UNDEFINED> instruction: 0xf01a0017
   11328:	07029e04 	streq	r9, [r2, -r4, lsl #28]
   1132c:	00000851 	andeq	r0, r0, r1, asr r8
   11330:	00044017 	andeq	r4, r4, r7, lsl r0
   11334:	02a10400 	adceq	r0, r1, #0, 8
   11338:	0008511b 	andeq	r5, r8, fp, lsl r1
   1133c:	c0170000 	andsgt	r0, r7, r0
   11340:	04000002 	streq	r0, [r0], #-2
   11344:	611802a2 	tstvs	r8, r2, lsr #5
   11348:	78000008 	stmdavc	r0, {r3}
   1134c:	02ef0800 	rsceq	r0, pc, #0, 16
   11350:	08610000 	stmdaeq	r1!, {}^	; <UNPREDICTABLE>
   11354:	2c090000 	stccs	0, cr0, [r9], {-0}
   11358:	1d000000 	stcne	0, cr0, [r0, #-0]
   1135c:	002c0800 	eoreq	r0, ip, r0, lsl #16
   11360:	08710000 	ldmdaeq	r1!, {}^	; <UNPREDICTABLE>
   11364:	2c090000 	stccs	0, cr0, [r9], {-0}
   11368:	1d000000 	stcne	0, cr0, [r0, #-0]
   1136c:	04f01b00 	ldrbteq	r1, [r0], #2816	; 0xb00
   11370:	96030283 	strls	r0, [r3], -r3, lsl #5
   11374:	1c000008 	stcne	0, cr0, [r0], {8}
   11378:	000006cc 	andeq	r0, r0, ip, asr #13
   1137c:	0b029a04 	bleq	b7b94 <_Min_Stack_Size+0xb7794>
   11380:	000006e5 	andeq	r0, r0, r5, ror #13
   11384:	00087c1c 	andeq	r7, r8, ip, lsl ip
   11388:	02a30400 	adceq	r0, r3, #0, 8
   1138c:	00082a0b 	andeq	r2, r8, fp, lsl #20
   11390:	b0080000 	andlt	r0, r8, r0
   11394:	a6000005 	strge	r0, [r0], -r5
   11398:	09000008 	stmdbeq	r0, {r3}
   1139c:	0000002c 	andeq	r0, r0, ip, lsr #32
   113a0:	c01d0018 	andsgt	r0, sp, r8, lsl r0
   113a4:	0f000000 	svceq	0x00000000
   113a8:	0008a604 	andeq	sl, r8, r4, lsl #12
   113ac:	08bc1e00 	ldmeq	ip!, {r9, sl, fp, ip}
   113b0:	56140000 	ldrpl	r0, [r4], -r0
   113b4:	00000004 	andeq	r0, r0, r4
   113b8:	08b1040f 	ldmeq	r1!, {r0, r1, r2, r3, sl}
   113bc:	040f0000 	streq	r0, [pc], #-0	; 113c4 <_Min_Stack_Size+0x10fc4>
   113c0:	00000179 	andeq	r0, r0, r9, ror r1
   113c4:	0008d31e 	andeq	sp, r8, lr, lsl r3
   113c8:	00251400 	eoreq	r1, r5, r0, lsl #8
   113cc:	0f000000 	svceq	0x00000000
   113d0:	0008d904 	andeq	sp, r8, r4, lsl #18
   113d4:	c8040f00 	stmdagt	r4, {r8, r9, sl, fp}
   113d8:	08000008 	stmdaeq	r0, {r3}
   113dc:	0000064a 	andeq	r0, r0, sl, asr #12
   113e0:	000008ef 	andeq	r0, r0, pc, ror #17
   113e4:	00002c09 	andeq	r2, r0, r9, lsl #24
   113e8:	1f000200 	svcne	0x00000200
   113ec:	000007d2 	ldrdeq	r0, [r0], -r2
   113f0:	17033304 	strne	r3, [r3, -r4, lsl #6]
   113f4:	00000456 	andeq	r0, r0, r6, asr r4
   113f8:	0007cb1f 	andeq	ip, r7, pc, lsl fp
   113fc:	03340400 	teqeq	r4, #0, 8
   11400:	00045c1d 	andeq	r5, r4, sp, lsl ip
   11404:	4a1f2000 	bmi	7d940c <_Min_Stack_Size+0x7d900c>
   11408:	67060000 	strvs	r0, [r6, -r0]
   1140c:	0005aa0e 	andeq	sl, r5, lr, lsl #20
   11410:	4a7e2100 	bmi	1f99818 <_Min_Stack_Size+0x1f99418>
   11414:	01070000 	mrseq	r0, (UNDEF: 7)
   11418:	00000055 	andeq	r0, r0, r5, asr r0
   1141c:	3a060507 	bcc	192840 <_Min_Stack_Size+0x192440>
   11420:	22000009 	andcs	r0, r0, #9
   11424:	00004a72 	andeq	r4, r0, r2, ror sl
   11428:	4a662200 	bmi	1999c30 <_Min_Stack_Size+0x1999830>
   1142c:	22010000 	andcs	r0, r1, #0
   11430:	00004a29 	andeq	r4, r0, r9, lsr #20
   11434:	19200002 	stmdbne	r0!, {r1}
   11438:	0100004c 	tsteq	r0, ip, asr #32
   1143c:	01071a35 	tsteq	r7, r5, lsr sl
   11440:	23230000 			; <UNDEFINED> instruction: 0x23230000
   11444:	01000049 	tsteq	r0, r9, asr #32
   11448:	00250144 	eoreq	r0, r5, r4, asr #2
   1144c:	0e900000 	cdpeq	0, 9, cr0, cr0, cr0, {0}
   11450:	00680800 	rsbeq	r0, r8, r0, lsl #16
   11454:	9c010000 	stcls	0, cr0, [r1], {-0}
   11458:	000009ce 	andeq	r0, r0, lr, asr #19
   1145c:	00360c24 	eorseq	r0, r6, r4, lsr #24
   11460:	1a440100 	bne	1111868 <_Min_Stack_Size+0x1111468>
   11464:	00000025 	andeq	r0, r0, r5, lsr #32
   11468:	000010b6 	strheq	r1, [r0], -r6
   1146c:	000010ae 	andeq	r1, r0, lr, lsr #1
   11470:	006e6625 	rsbeq	r6, lr, r5, lsr #12
   11474:	c0094501 	andgt	r4, r9, r1, lsl #10
   11478:	01000002 	tsteq	r0, r2
   1147c:	72612651 	rsbvc	r2, r1, #84934656	; 0x5100000
   11480:	46010067 	strmi	r0, [r1], -r7, rrx
   11484:	0000f908 	andeq	pc, r0, r8, lsl #18
   11488:	0010fc00 	andseq	pc, r0, r0, lsl #24
   1148c:	0010f000 	andseq	pc, r0, r0
   11490:	00642600 	rsbeq	r2, r4, r0, lsl #12
   11494:	f9084701 			; <UNDEFINED> instruction: 0xf9084701
   11498:	5a000000 	bpl	114a0 <_Min_Stack_Size+0x110a0>
   1149c:	4e000011 	mcrmi	0, 0, r0, cr0, cr1, {0}
   114a0:	27000011 	smladcs	r0, r1, r0, r0
   114a4:	00000151 	andeq	r0, r0, r1, asr r1
   114a8:	ce1a4901 	vnmlsgt.f16	s8, s20, s2	; <UNPREDICTABLE>
   114ac:	ae000009 	cdpge	0, 0, cr0, cr0, cr9, {0}
   114b0:	ac000011 	stcge	0, cr0, [r0], {17}
   114b4:	28000011 	stmdacs	r0, {r0, r4}
   114b8:	4a010070 	bmi	51680 <_Min_Stack_Size+0x51280>
   114bc:	0002aa1c 	andeq	sl, r2, ip, lsl sl
   114c0:	0011c800 	andseq	ip, r1, r0, lsl #16
   114c4:	0011c400 	andseq	ip, r1, r0, lsl #8
   114c8:	040f0000 	streq	r0, [pc], #-0	; 114d0 <_Min_Stack_Size+0x110d0>
   114cc:	00000212 	andeq	r0, r0, r2, lsl r2
   114d0:	000a5200 	andeq	r5, sl, r0, lsl #4
   114d4:	ff000400 			; <UNDEFINED> instruction: 0xff000400
   114d8:	04000035 	streq	r0, [r0], #-53	; 0xffffffcb
   114dc:	00499101 	subeq	r9, r9, r1, lsl #2
   114e0:	4c6b0c00 	stclmi	12, cr0, [fp], #-0
   114e4:	49370000 	ldmdbmi	r7!, {}	; <UNPREDICTABLE>
   114e8:	0a700000 	beq	1c114f0 <_Min_Stack_Size+0x1c110f0>
   114ec:	00000000 	andeq	r0, r0, r0
   114f0:	78500000 	ldmdavc	r0, {}^	; <UNPREDICTABLE>
   114f4:	04020000 	streq	r0, [r2], #-0
   114f8:	0000aa07 	andeq	sl, r0, r7, lsl #20
   114fc:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
   11500:	00746e69 	rsbseq	r6, r4, r9, ror #28
   11504:	b0050802 	andlt	r0, r5, r2, lsl #16
   11508:	02000001 	andeq	r0, r0, #1
   1150c:	07190408 	ldreq	r0, [r9, -r8, lsl #8]
   11510:	e0040000 	and	r0, r4, r0
   11514:	02000003 	andeq	r0, r0, #3
   11518:	25170165 	ldrcs	r0, [r7, #-357]	; 0xfffffe9b
   1151c:	02000000 	andeq	r0, r0, #0
   11520:	07a90601 	streq	r0, [r9, r1, lsl #12]!
   11524:	01020000 	mrseq	r0, (UNDEF: 2)
   11528:	0007a708 	andeq	sl, r7, r8, lsl #14
   1152c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
   11530:	00000000 	andeq	r0, r0, r0
   11534:	77070202 	strvc	r0, [r7, -r2, lsl #4]
   11538:	02000003 	andeq	r0, r0, #3
   1153c:	01b50504 			; <UNDEFINED> instruction: 0x01b50504
   11540:	04020000 	streq	r0, [r2], #-0
   11544:	0000a507 	andeq	sl, r0, r7, lsl #10
   11548:	07080200 	streq	r0, [r8, -r0, lsl #4]
   1154c:	000000a0 	andeq	r0, r0, r0, lsr #1
   11550:	00056205 	andeq	r6, r5, r5, lsl #4
   11554:	0e2e0300 	cdpeq	3, 2, cr0, cr14, cr0, {0}
   11558:	0000006a 	andeq	r0, r0, sl, rrx
   1155c:	0006fb05 	andeq	pc, r6, r5, lsl #22
   11560:	0e740300 	cdpeq	3, 7, cr0, cr4, cr0, {0}
   11564:	0000006a 	andeq	r0, r0, sl, rrx
   11568:	a5030406 	strge	r0, [r3, #-1030]	; 0xfffffbfa
   1156c:	0000b903 	andeq	fp, r0, r3, lsl #18
   11570:	03da0700 	bicseq	r0, sl, #0, 14
   11574:	a7030000 	strge	r0, [r3, -r0]
   11578:	0000410c 	andeq	r4, r0, ip, lsl #2
   1157c:	02ec0700 	rsceq	r0, ip, #0, 14
   11580:	a8030000 	stmdage	r3, {}	; <UNPREDICTABLE>
   11584:	0000b913 	andeq	fp, r0, r3, lsl r9
   11588:	55080000 	strpl	r0, [r8, #-0]
   1158c:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
   11590:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   11594:	00000025 	andeq	r0, r0, r5, lsr #32
   11598:	080a0003 	stmdaeq	sl, {r0, r1}
   1159c:	ed09a203 	sfm	f2, 1, [r9, #-12]
   115a0:	0b000000 	bleq	115a8 <_Min_Stack_Size+0x111a8>
   115a4:	000006e3 	andeq	r0, r0, r3, ror #13
   115a8:	2c07a403 	cfstrscs	mvf10, [r7], {3}
   115ac:	00000000 	andeq	r0, r0, r0
   115b0:	00080d0b 	andeq	r0, r8, fp, lsl #26
   115b4:	05a90300 	streq	r0, [r9, #768]!	; 0x300
   115b8:	00000097 	muleq	r0, r7, r0
   115bc:	6d050004 	stcvs	0, cr0, [r5, #-16]
   115c0:	03000006 	movweq	r0, #6
   115c4:	00c903aa 	sbceq	r0, r9, sl, lsr #7
   115c8:	040c0000 	streq	r0, [ip], #-0
   115cc:	0007c305 	andeq	ip, r7, r5, lsl #6
   115d0:	19160400 	ldmdbne	r6, {sl}
   115d4:	00000071 	andeq	r0, r0, r1, ror r0
   115d8:	0005cb05 	andeq	ip, r5, r5, lsl #22
   115dc:	0d0c0500 	cfstr32eq	mvfx0, [ip, #-0]
   115e0:	0000002c 	andeq	r0, r0, ip, lsr #32
   115e4:	00085905 	andeq	r5, r8, r5, lsl #18
   115e8:	1b230400 	blne	8d25f0 <_Min_Stack_Size+0x8d21f0>
   115ec:	00000107 	andeq	r0, r0, r7, lsl #2
   115f0:	00029b0d 	andeq	r9, r2, sp, lsl #22
   115f4:	34041800 	strcc	r1, [r4], #-2048	; 0xfffff800
   115f8:	00017908 	andeq	r7, r1, r8, lsl #18
   115fc:	067d0b00 	ldrbteq	r0, [sp], -r0, lsl #22
   11600:	36040000 	strcc	r0, [r4], -r0
   11604:	00017913 	andeq	r7, r1, r3, lsl r9
   11608:	5f0e0000 	svcpl	0x000e0000
   1160c:	3704006b 	strcc	r0, [r4, -fp, rrx]
   11610:	00002c07 	andeq	r2, r0, r7, lsl #24
   11614:	c40b0400 	strgt	r0, [fp], #-1024	; 0xfffffc00
   11618:	04000006 	streq	r0, [r0], #-6
   1161c:	002c0b37 	eoreq	r0, ip, r7, lsr fp
   11620:	0b080000 	bleq	211628 <_Min_Stack_Size+0x211228>
   11624:	0000028d 	andeq	r0, r0, sp, lsl #5
   11628:	2c143704 	ldccs	7, cr3, [r4], {4}
   1162c:	0c000000 	stceq	0, cr0, [r0], {-0}
   11630:	00019a0b 	andeq	r9, r1, fp, lsl #20
   11634:	1b370400 	blne	dd263c <_Min_Stack_Size+0xdd223c>
   11638:	0000002c 	andeq	r0, r0, ip, lsr #32
   1163c:	785f0e10 	ldmdavc	pc, {r4, r9, sl, fp}^	; <UNPREDICTABLE>
   11640:	0b380400 	bleq	e12648 <_Min_Stack_Size+0xe12248>
   11644:	0000017f 	andeq	r0, r0, pc, ror r1
   11648:	040f0014 	streq	r0, [pc], #-20	; 11650 <_Min_Stack_Size+0x11250>
   1164c:	0000011f 	andeq	r0, r0, pc, lsl r1
   11650:	0000fb08 	andeq	pc, r0, r8, lsl #22
   11654:	00018f00 	andeq	r8, r1, r0, lsl #30
   11658:	00250900 	eoreq	r0, r5, r0, lsl #18
   1165c:	00000000 	andeq	r0, r0, r0
   11660:	0002d50d 	andeq	sp, r2, sp, lsl #10
   11664:	3c042400 	cfstrscc	mvf2, [r4], {-0}
   11668:	00021208 	andeq	r1, r2, r8, lsl #4
   1166c:	01080b00 	tsteq	r8, r0, lsl #22
   11670:	3e040000 	cdpcc	0, 0, cr0, cr4, cr0, {0}
   11674:	00002c09 	andeq	r2, r0, r9, lsl #24
   11678:	b50b0000 	strlt	r0, [fp, #-0]
   1167c:	04000007 	streq	r0, [r0], #-7
   11680:	002c093f 	eoreq	r0, ip, pc, lsr r9
   11684:	0b040000 	bleq	11168c <_Min_Stack_Size+0x11128c>
   11688:	00000139 	andeq	r0, r0, r9, lsr r1
   1168c:	2c094004 	stccs	0, cr4, [r9], {4}
   11690:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   11694:	0008ca0b 	andeq	ip, r8, fp, lsl #20
   11698:	09410400 	stmdbeq	r1, {sl}^
   1169c:	0000002c 	andeq	r0, r0, ip, lsr #32
   116a0:	05380b0c 	ldreq	r0, [r8, #-2828]!	; 0xfffff4f4
   116a4:	42040000 	andmi	r0, r4, #0
   116a8:	00002c09 	andeq	r2, r0, r9, lsl #24
   116ac:	210b1000 	mrscs	r1, (UNDEF: 11)
   116b0:	04000004 	streq	r0, [r0], #-4
   116b4:	002c0943 	eoreq	r0, ip, r3, asr #18
   116b8:	0b140000 	bleq	5116c0 <_Min_Stack_Size+0x5112c0>
   116bc:	000007f6 	strdeq	r0, [r0], -r6
   116c0:	2c094404 	cfstrscs	mvf4, [r9], {4}
   116c4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   116c8:	0006400b 	andeq	r4, r6, fp
   116cc:	09450400 	stmdbeq	r5, {sl}^
   116d0:	0000002c 	andeq	r0, r0, ip, lsr #32
   116d4:	088c0b1c 	stmeq	ip, {r2, r3, r4, r8, r9, fp}
   116d8:	46040000 	strmi	r0, [r4], -r0
   116dc:	00002c09 	andeq	r2, r0, r9, lsl #24
   116e0:	10002000 	andne	r2, r0, r0
   116e4:	00000148 	andeq	r0, r0, r8, asr #2
   116e8:	4f040108 	svcmi	0x00040108
   116ec:	00025708 	andeq	r5, r2, r8, lsl #14
   116f0:	026d0b00 	rsbeq	r0, sp, #0, 22
   116f4:	50040000 	andpl	r0, r4, r0
   116f8:	0002570a 	andeq	r5, r2, sl, lsl #14
   116fc:	fe0b0000 	cdp2	0, 0, cr0, cr11, cr0, {0}
   11700:	04000005 	streq	r0, [r0], #-5
   11704:	02570951 	subseq	r0, r7, #1327104	; 0x144000
   11708:	11800000 	orrne	r0, r0, r0
   1170c:	00000796 	muleq	r0, r6, r7
   11710:	fb0a5304 	blx	2a632a <_Min_Stack_Size+0x2a5f2a>
   11714:	00000000 	andeq	r0, r0, r0
   11718:	01921101 	orrseq	r1, r2, r1, lsl #2
   1171c:	56040000 	strpl	r0, [r4], -r0
   11720:	0000fb0a 	andeq	pc, r0, sl, lsl #22
   11724:	00010400 	andeq	r0, r1, r0, lsl #8
   11728:	0000f908 	andeq	pc, r0, r8, lsl #18
   1172c:	00026700 	andeq	r6, r2, r0, lsl #14
   11730:	00250900 	eoreq	r0, r5, r0, lsl #18
   11734:	001f0000 	andseq	r0, pc, r0
   11738:	004a7610 	subeq	r7, sl, r0, lsl r6
   1173c:	04019000 	streq	r9, [r1], #-0
   11740:	02aa0862 	adceq	r0, sl, #6422528	; 0x620000
   11744:	7d0b0000 	stcvc	0, cr0, [fp, #-0]
   11748:	04000006 	streq	r0, [r0], #-6
   1174c:	02aa1263 	adceq	r1, sl, #805306374	; 0x30000006
   11750:	0b000000 	bleq	11758 <_Min_Stack_Size+0x11358>
   11754:	0000068e 	andeq	r0, r0, lr, lsl #13
   11758:	2c066404 	cfstrscs	mvf6, [r6], {4}
   1175c:	04000000 	streq	r0, [r0], #-0
   11760:	0002880b 	andeq	r8, r2, fp, lsl #16
   11764:	09660400 	stmdbeq	r6!, {sl}^
   11768:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
   1176c:	01480b08 	cmpeq	r8, r8, lsl #22
   11770:	67040000 	strvs	r0, [r4, -r0]
   11774:	0002121e 	andeq	r1, r2, lr, lsl r2
   11778:	0f008800 	svceq	0x00008800
   1177c:	00026704 	andeq	r6, r2, r4, lsl #14
   11780:	02c00800 	sbceq	r0, r0, #0, 16
   11784:	02c00000 	sbceq	r0, r0, #0
   11788:	25090000 	strcs	r0, [r9, #-0]
   1178c:	1f000000 	svcne	0x00000000
   11790:	c6040f00 	strgt	r0, [r4], -r0, lsl #30
   11794:	12000002 	andne	r0, r0, #2
   11798:	00064a0d 	andeq	r4, r6, sp, lsl #20
   1179c:	7a040800 	bvc	1137a4 <_Min_Stack_Size+0x1133a4>
   117a0:	0002ef08 	andeq	lr, r2, r8, lsl #30
   117a4:	01330b00 	teqeq	r3, r0, lsl #22
   117a8:	7b040000 	blvc	1117b0 <_Min_Stack_Size+0x1113b0>
   117ac:	0002ef11 	andeq	lr, r2, r1, lsl pc
   117b0:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
   117b4:	04000007 	streq	r0, [r0], #-7
   117b8:	002c067c 	eoreq	r0, ip, ip, ror r6
   117bc:	00040000 	andeq	r0, r4, r0
   117c0:	0055040f 	subseq	r0, r5, pc, lsl #8
   117c4:	280d0000 	stmdacs	sp, {}	; <UNPREDICTABLE>
   117c8:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
   117cc:	3808ba04 	stmdacc	r8, {r2, r9, fp, ip, sp, pc}
   117d0:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
   117d4:	0400705f 	streq	r7, [r0], #-95	; 0xffffffa1
   117d8:	02ef12bb 	rsceq	r1, pc, #-1342177269	; 0xb000000b
   117dc:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   117e0:	0400725f 	streq	r7, [r0], #-607	; 0xfffffda1
   117e4:	002c07bc 	strhteq	r0, [ip], -ip
   117e8:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
   117ec:	0400775f 	streq	r7, [r0], #-1887	; 0xfffff8a1
   117f0:	002c07bd 	strhteq	r0, [ip], -sp
   117f4:	0b080000 	bleq	2117fc <_Min_Stack_Size+0x2113fc>
   117f8:	0000018b 	andeq	r0, r0, fp, lsl #3
   117fc:	5c09be04 	stcpl	14, cr11, [r9], {4}
   11800:	0c000000 	stceq	0, cr0, [r0], {-0}
   11804:	00030d0b 	andeq	r0, r3, fp, lsl #26
   11808:	09bf0400 	ldmibeq	pc!, {sl}	; <UNPREDICTABLE>
   1180c:	0000005c 	andeq	r0, r0, ip, asr r0
   11810:	625f0e0e 	subsvs	r0, pc, #14, 28	; 0xe0
   11814:	c0040066 	andgt	r0, r4, r6, rrx
   11818:	0002c711 	andeq	ip, r2, r1, lsl r7
   1181c:	b70b1000 	strlt	r1, [fp, -r0]
   11820:	04000000 	streq	r0, [r0], #-0
   11824:	002c07c1 	eoreq	r0, ip, r1, asr #15
   11828:	0b180000 	bleq	611830 <_Min_Stack_Size+0x611430>
   1182c:	00000169 	andeq	r0, r0, r9, ror #2
   11830:	f90ac804 			; <UNDEFINED> instruction: 0xf90ac804
   11834:	1c000000 	stcne	0, cr0, [r0], {-0}
   11838:	0033bd0b 	eorseq	fp, r3, fp, lsl #26
   1183c:	1dca0400 	cfstrdne	mvd0, [sl]
   11840:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
   11844:	33360b20 	teqcc	r6, #32, 22	; 0x8000
   11848:	cc040000 	stcgt	0, cr0, [r4], {-0}
   1184c:	0005e61d 	andeq	lr, r5, sp, lsl r6
   11850:	eb0b2400 	bl	2da858 <_Min_Stack_Size+0x2da458>
   11854:	04000006 	streq	r0, [r0], #-6
   11858:	060a0dcf 	streq	r0, [sl], -pc, asr #27
   1185c:	0b280000 	bleq	a11864 <_Min_Stack_Size+0xa11464>
   11860:	000008a6 	andeq	r0, r0, r6, lsr #17
   11864:	2409d004 	strcs	sp, [r9], #-4
   11868:	2c000006 	stccs	0, cr0, [r0], {6}
   1186c:	62755f0e 	rsbsvs	r5, r5, #14, 30	; 0x38
   11870:	11d30400 	bicsne	r0, r3, r0, lsl #8
   11874:	000002c7 	andeq	r0, r0, r7, asr #5
   11878:	755f0e30 	ldrbvc	r0, [pc, #-3632]	; 10a50 <_Min_Stack_Size+0x10650>
   1187c:	d4040070 	strle	r0, [r4], #-112	; 0xffffff90
   11880:	0002ef12 	andeq	lr, r2, r2, lsl pc
   11884:	5f0e3800 	svcpl	0x000e3800
   11888:	04007275 	streq	r7, [r0], #-629	; 0xfffffd8b
   1188c:	002c07d5 	ldrdeq	r0, [ip], -r5	; <UNPREDICTABLE>
   11890:	0b3c0000 	bleq	f11898 <_Min_Stack_Size+0xf11498>
   11894:	0000012d 	andeq	r0, r0, sp, lsr #2
   11898:	2a11d804 	bcs	4878b0 <_Min_Stack_Size+0x4874b0>
   1189c:	40000006 	andmi	r0, r0, r6
   118a0:	0008760b 	andeq	r7, r8, fp, lsl #12
   118a4:	11d90400 	bicsne	r0, r9, r0, lsl #8
   118a8:	0000063a 	andeq	r0, r0, sl, lsr r6
   118ac:	6c5f0e43 	mrrcvs	14, 4, r0, pc, cr3	; <UNPREDICTABLE>
   118b0:	dc040062 	stcle	0, cr0, [r4], {98}	; 0x62
   118b4:	0002c711 	andeq	ip, r2, r1, lsl r7
   118b8:	250b4400 	strcs	r4, [fp, #-1024]	; 0xfffffc00
   118bc:	04000007 	streq	r0, [r0], #-7
   118c0:	002c07df 	ldrdeq	r0, [ip], -pc	; <UNPREDICTABLE>
   118c4:	0b4c0000 	bleq	13118cc <_Min_Stack_Size+0x13114cc>
   118c8:	00000438 	andeq	r0, r0, r8, lsr r4
   118cc:	7f0ae004 	svcvc	0x000ae004
   118d0:	50000000 	andpl	r0, r0, r0
   118d4:	004baa0b 	subeq	sl, fp, fp, lsl #20
   118d8:	12e30400 	rscne	r0, r3, #0, 8
   118dc:	00000456 	andeq	r0, r0, r6, asr r4
   118e0:	03f10b54 	mvnseq	r0, #84, 22	; 0x15000
   118e4:	e7040000 	str	r0, [r4, -r0]
   118e8:	0001130c 	andeq	r1, r1, ip, lsl #6
   118ec:	e30b5800 	movw	r5, #47104	; 0xb800
   118f0:	04000002 	streq	r0, [r0], #-2
   118f4:	00ed0ee9 	rsceq	r0, sp, r9, ror #29
   118f8:	0b5c0000 	bleq	1711900 <_Min_Stack_Size+0x1711500>
   118fc:	00000651 	andeq	r0, r0, r1, asr r6
   11900:	2c09ea04 			; <UNDEFINED> instruction: 0x2c09ea04
   11904:	64000000 	strvs	r0, [r0], #-0
   11908:	002c1300 	eoreq	r1, ip, r0, lsl #6
   1190c:	04560000 	ldrbeq	r0, [r6], #-0
   11910:	56140000 	ldrpl	r0, [r4], -r0
   11914:	14000004 	strne	r0, [r0], #-4
   11918:	000000f9 	strdeq	r0, [r0], -r9
   1191c:	0005aa14 	andeq	sl, r5, r4, lsl sl
   11920:	002c1400 	eoreq	r1, ip, r0, lsl #8
   11924:	0f000000 	svceq	0x00000000
   11928:	00046104 	andeq	r6, r4, r4, lsl #2
   1192c:	04561500 	ldrbeq	r1, [r6], #-1280	; 0xfffffb00
   11930:	cc160000 	ldcgt	0, cr0, [r6], {-0}
   11934:	28000006 	stmdacs	r0, {r1, r2}
   11938:	02650404 	rsbeq	r0, r5, #4, 8	; 0x4000000
   1193c:	0005aa08 	andeq	sl, r5, r8, lsl #20
   11940:	062c1700 	strteq	r1, [ip], -r0, lsl #14
   11944:	67040000 	strvs	r0, [r4, -r0]
   11948:	002c0702 	eoreq	r0, ip, r2, lsl #14
   1194c:	17000000 	strne	r0, [r0, -r0]
   11950:	00000806 	andeq	r0, r0, r6, lsl #16
   11954:	0b026c04 	bleq	ac96c <_Min_Stack_Size+0xac56c>
   11958:	00000696 	muleq	r0, r6, r6
   1195c:	07ee1704 	strbeq	r1, [lr, r4, lsl #14]!
   11960:	6c040000 	stcvs	0, cr0, [r4], {-0}
   11964:	06961402 	ldreq	r1, [r6], r2, lsl #8
   11968:	17080000 	strne	r0, [r8, -r0]
   1196c:	00000293 	muleq	r0, r3, r2
   11970:	1e026c04 	cdpne	12, 0, cr6, cr2, cr4, {0}
   11974:	00000696 	muleq	r0, r6, r6
   11978:	0689170c 	streq	r1, [r9], ip, lsl #14
   1197c:	6e040000 	cdpvs	0, 0, cr0, cr4, cr0, {0}
   11980:	002c0802 	eoreq	r0, ip, r2, lsl #16
   11984:	17100000 	ldrne	r0, [r0, -r0]
   11988:	00000042 	andeq	r0, r0, r2, asr #32
   1198c:	08026f04 	stmdaeq	r2, {r2, r8, r9, sl, fp, sp, lr}
   11990:	00000896 	muleq	r0, r6, r8
   11994:	06ab1714 	ssateq	r1, #12, r4, lsl #14
   11998:	72040000 	andvc	r0, r4, #0
   1199c:	002c0702 	eoreq	r0, ip, r2, lsl #14
   119a0:	17300000 	ldrne	r0, [r0, -r0]!
   119a4:	0000069b 	muleq	r0, fp, r6
   119a8:	16027304 	strne	r7, [r2], -r4, lsl #6
   119ac:	000008ab 	andeq	r0, r0, fp, lsr #17
   119b0:	05411734 	strbeq	r1, [r1, #-1844]	; 0xfffff8cc
   119b4:	75040000 	strvc	r0, [r4, #-0]
   119b8:	002c0702 	eoreq	r0, ip, r2, lsl #14
   119bc:	17380000 	ldrne	r0, [r8, -r0]!
   119c0:	000007e4 	andeq	r0, r0, r4, ror #15
   119c4:	0a027704 	beq	af5dc <_Min_Stack_Size+0xaf1dc>
   119c8:	000008bc 			; <UNDEFINED> instruction: 0x000008bc
   119cc:	03fd173c 	mvnseq	r1, #60, 14	; 0xf00000
   119d0:	7a040000 	bvc	1119d8 <_Min_Stack_Size+0x1115d8>
   119d4:	01791302 	cmneq	r9, r2, lsl #6
   119d8:	17400000 	strbne	r0, [r0, -r0]
   119dc:	000001a6 	andeq	r0, r0, r6, lsr #3
   119e0:	07027b04 	streq	r7, [r2, -r4, lsl #22]
   119e4:	0000002c 	andeq	r0, r0, ip, lsr #32
   119e8:	08c01744 	stmiaeq	r0, {r2, r6, r8, r9, sl, ip}^
   119ec:	7c040000 	stcvc	0, cr0, [r4], {-0}
   119f0:	01791302 	cmneq	r9, r2, lsl #6
   119f4:	17480000 	strbne	r0, [r8, -r0]
   119f8:	000005a3 	andeq	r0, r0, r3, lsr #11
   119fc:	14027d04 	strne	r7, [r2], #-3332	; 0xfffff2fc
   11a00:	000008c2 	andeq	r0, r0, r2, asr #17
   11a04:	0305174c 	movweq	r1, #22348	; 0x574c
   11a08:	80040000 	andhi	r0, r4, r0
   11a0c:	002c0702 	eoreq	r0, ip, r2, lsl #14
   11a10:	17500000 	ldrbne	r0, [r0, -r0]
   11a14:	000005f6 	strdeq	r0, [r0], -r6
   11a18:	09028104 	stmdbeq	r2, {r2, r8, pc}
   11a1c:	000005aa 	andeq	r0, r0, sl, lsr #11
   11a20:	061c1754 			; <UNDEFINED> instruction: 0x061c1754
   11a24:	a4040000 	strge	r0, [r4], #-0
   11a28:	08710702 	ldmdaeq	r1!, {r1, r8, r9, sl}^
   11a2c:	18580000 	ldmdane	r8, {}^	; <UNPREDICTABLE>
   11a30:	00004a76 	andeq	r4, r0, r6, ror sl
   11a34:	1302a804 	movwne	sl, #10244	; 0x2804
   11a38:	000002aa 	andeq	r0, r0, sl, lsr #5
   11a3c:	8a180148 	bhi	611f64 <_Min_Stack_Size+0x611b64>
   11a40:	04000003 	streq	r0, [r0], #-3
   11a44:	671202a9 	ldrvs	r0, [r2, -r9, lsr #5]
   11a48:	4c000002 	stcmi	0, cr0, [r0], {2}
   11a4c:	08321801 	ldmdaeq	r2!, {r0, fp, ip}
   11a50:	ad040000 	stcge	0, cr0, [r4, #-0]
   11a54:	08d30c02 	ldmeq	r3, {r1, sl, fp}^
   11a58:	02dc0000 	sbcseq	r0, ip, #0
   11a5c:	00017118 	andeq	r7, r1, r8, lsl r1
   11a60:	02b20400 	adcseq	r0, r2, #0, 8
   11a64:	00065710 	andeq	r5, r6, r0, lsl r7
   11a68:	1802e000 	stmdane	r2, {sp, lr, pc}
   11a6c:	00000143 	andeq	r0, r0, r3, asr #2
   11a70:	0a02b404 	beq	bea88 <_Min_Stack_Size+0xbe688>
   11a74:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11a78:	0f0002ec 	svceq	0x000002ec
   11a7c:	0005b004 	andeq	fp, r5, r4
   11a80:	08010200 	stmdaeq	r1, {r9}
   11a84:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
   11a88:	0005b015 	andeq	fp, r5, r5, lsl r0
   11a8c:	38040f00 	stmdacc	r4, {r8, r9, sl, fp}
   11a90:	13000004 	movwne	r0, #4
   11a94:	0000002c 	andeq	r0, r0, ip, lsr #32
   11a98:	000005e0 	andeq	r0, r0, r0, ror #11
   11a9c:	00045614 	andeq	r5, r4, r4, lsl r6
   11aa0:	00f91400 	rscseq	r1, r9, r0, lsl #8
   11aa4:	e0140000 	ands	r0, r4, r0
   11aa8:	14000005 	strne	r0, [r0], #-5
   11aac:	0000002c 	andeq	r0, r0, ip, lsr #32
   11ab0:	b7040f00 	strlt	r0, [r4, -r0, lsl #30]
   11ab4:	0f000005 	svceq	0x00000005
   11ab8:	0005c204 	andeq	ip, r5, r4, lsl #4
   11abc:	008b1300 	addeq	r1, fp, r0, lsl #6
   11ac0:	060a0000 	streq	r0, [sl], -r0
   11ac4:	56140000 	ldrpl	r0, [r4], -r0
   11ac8:	14000004 	strne	r0, [r0], #-4
   11acc:	000000f9 	strdeq	r0, [r0], -r9
   11ad0:	00008b14 	andeq	r8, r0, r4, lsl fp
   11ad4:	002c1400 	eoreq	r1, ip, r0, lsl #8
   11ad8:	0f000000 	svceq	0x00000000
   11adc:	0005ec04 	andeq	lr, r5, r4, lsl #24
   11ae0:	002c1300 	eoreq	r1, ip, r0, lsl #6
   11ae4:	06240000 	strteq	r0, [r4], -r0
   11ae8:	56140000 	ldrpl	r0, [r4], -r0
   11aec:	14000004 	strne	r0, [r0], #-4
   11af0:	000000f9 	strdeq	r0, [r0], -r9
   11af4:	10040f00 	andne	r0, r4, r0, lsl #30
   11af8:	08000006 	stmdaeq	r0, {r1, r2}
   11afc:	00000055 	andeq	r0, r0, r5, asr r0
   11b00:	0000063a 	andeq	r0, r0, sl, lsr r6
   11b04:	00002509 	andeq	r2, r0, r9, lsl #10
   11b08:	08000200 	stmdaeq	r0, {r9}
   11b0c:	00000055 	andeq	r0, r0, r5, asr r0
   11b10:	0000064a 	andeq	r0, r0, sl, asr #12
   11b14:	00002509 	andeq	r2, r0, r9, lsl #10
   11b18:	04000000 	streq	r0, [r0], #-0
   11b1c:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
   11b20:	1a012404 	bne	5ab38 <_Min_Stack_Size+0x5a738>
   11b24:	000002f5 	strdeq	r0, [r0], -r5
   11b28:	00080019 	andeq	r0, r8, r9, lsl r0
   11b2c:	28040c00 	stmdacs	r4, {sl, fp}
   11b30:	06900801 	ldreq	r0, [r0], r1, lsl #16
   11b34:	7d170000 	ldcvc	0, cr0, [r7, #-0]
   11b38:	04000006 	streq	r0, [r0], #-6
   11b3c:	9011012a 	andsls	r0, r1, sl, lsr #2
   11b40:	00000006 	andeq	r0, r0, r6
   11b44:	00037017 	andeq	r7, r3, r7, lsl r0
   11b48:	012b0400 			; <UNDEFINED> instruction: 0x012b0400
   11b4c:	00002c07 	andeq	r2, r0, r7, lsl #24
   11b50:	83170400 	tsthi	r7, #0, 8
   11b54:	04000006 	streq	r0, [r0], #-6
   11b58:	960b012c 	strls	r0, [fp], -ip, lsr #2
   11b5c:	08000006 	stmdaeq	r0, {r1, r2}
   11b60:	57040f00 	strpl	r0, [r4, -r0, lsl #30]
   11b64:	0f000006 	svceq	0x00000006
   11b68:	00064a04 	andeq	r4, r6, r4, lsl #20
   11b6c:	00301900 	eorseq	r1, r0, r0, lsl #18
   11b70:	040e0000 	streq	r0, [lr], #-0
   11b74:	d5080144 	strle	r0, [r8, #-324]	; 0xfffffebc
   11b78:	17000006 	strne	r0, [r0, -r6]
   11b7c:	000006d3 	ldrdeq	r0, [r0], -r3
   11b80:	12014504 	andne	r4, r1, #4, 10	; 0x1000000
   11b84:	000006d5 	ldrdeq	r0, [r0], -r5
   11b88:	03f71700 	mvnseq	r1, #0, 14
   11b8c:	46040000 	strmi	r0, [r4], -r0
   11b90:	06d51201 	ldrbeq	r1, [r5], r1, lsl #4
   11b94:	17060000 	strne	r0, [r6, -r0]
   11b98:	000007be 			; <UNDEFINED> instruction: 0x000007be
   11b9c:	12014704 	andne	r4, r1, #4, 14	; 0x100000
   11ba0:	00000063 	andeq	r0, r0, r3, rrx
   11ba4:	6308000c 	movwvs	r0, #32780	; 0x800c
   11ba8:	e5000000 	str	r0, [r0, #-0]
   11bac:	09000006 	stmdbeq	r0, {r1, r2}
   11bb0:	00000025 	andeq	r0, r0, r5, lsr #32
   11bb4:	d01a0002 	andsle	r0, sl, r2
   11bb8:	07028504 	streq	r8, [r2, -r4, lsl #10]
   11bbc:	000007fa 	strdeq	r0, [r0], -sl
   11bc0:	00042b17 	andeq	r2, r4, r7, lsl fp
   11bc4:	02870400 	addeq	r0, r7, #0, 8
   11bc8:	00002518 	andeq	r2, r0, r8, lsl r5
   11bcc:	81170000 	tsthi	r7, r0
   11bd0:	04000007 	streq	r0, [r0], #-7
   11bd4:	aa120288 	bge	4925fc <_Min_Stack_Size+0x4921fc>
   11bd8:	04000005 	streq	r0, [r0], #-5
   11bdc:	0003aa17 	andeq	sl, r3, r7, lsl sl
   11be0:	02890400 	addeq	r0, r9, #0, 8
   11be4:	0007fa10 	andeq	pc, r7, r0, lsl sl	; <UNPREDICTABLE>
   11be8:	97170800 	ldrls	r0, [r7, -r0, lsl #16]
   11bec:	04000008 	streq	r0, [r0], #-8
   11bf0:	8f17028a 	svchi	0x0017028a
   11bf4:	24000001 	strcs	r0, [r0], #-1
   11bf8:	0002a317 	andeq	sl, r2, r7, lsl r3
   11bfc:	028b0400 	addeq	r0, fp, #0, 8
   11c00:	00002c0f 	andeq	r2, r0, pc, lsl #24
   11c04:	78174800 	ldmdavc	r7, {fp, lr}
   11c08:	04000006 	streq	r0, [r0], #-6
   11c0c:	782c028c 	stmdavc	ip!, {r2, r3, r7, r9}
   11c10:	50000000 	andpl	r0, r0, r0
   11c14:	0008ad17 	andeq	sl, r8, r7, lsl sp
   11c18:	028d0400 	addeq	r0, sp, #0, 8
   11c1c:	00069c1a 	andeq	r9, r6, sl, lsl ip
   11c20:	33175800 	tstcc	r7, #0, 16
   11c24:	04000006 	streq	r0, [r0], #-6
   11c28:	ed16028e 	lfm	f0, 4, [r6, #-568]	; 0xfffffdc8
   11c2c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
   11c30:	0008b217 	andeq	fp, r8, r7, lsl r2
   11c34:	028f0400 	addeq	r0, pc, #0, 8
   11c38:	0000ed16 	andeq	lr, r0, r6, lsl sp
   11c3c:	fa177000 	blx	5edc44 <_Min_Stack_Size+0x5ed844>
   11c40:	04000000 	streq	r0, [r0], #-0
   11c44:	ed160290 	lfm	f0, 4, [r6, #-576]	; 0xfffffdc0
   11c48:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
   11c4c:	00081517 	andeq	r1, r8, r7, lsl r5
   11c50:	02910400 	addseq	r0, r1, #0, 8
   11c54:	00080a10 	andeq	r0, r8, r0, lsl sl
   11c58:	9e178000 	cdpls	0, 1, cr8, cr7, cr0, {0}
   11c5c:	04000003 	streq	r0, [r0], #-3
   11c60:	1a100292 	bne	4126b0 <_Min_Stack_Size+0x4122b0>
   11c64:	88000008 	stmdahi	r0, {r3}
   11c68:	00006517 	andeq	r6, r0, r7, lsl r5
   11c6c:	02930400 	addseq	r0, r3, #0, 8
   11c70:	00002c0f 	andeq	r2, r0, pc, lsl #24
   11c74:	5f17a000 	svcpl	0x0017a000
   11c78:	04000002 	streq	r0, [r0], #-2
   11c7c:	ed160294 	lfm	f0, 4, [r6, #-592]	; 0xfffffdb0
   11c80:	a4000000 	strge	r0, [r0], #-0
   11c84:	0000e117 	andeq	lr, r0, r7, lsl r1
   11c88:	02950400 	addseq	r0, r5, #0, 8
   11c8c:	0000ed16 	andeq	lr, r0, r6, lsl sp
   11c90:	3417ac00 	ldrcc	sl, [r7], #-3072	; 0xfffff400
   11c94:	04000002 	streq	r0, [r0], #-2
   11c98:	ed160296 	lfm	f0, 4, [r6, #-600]	; 0xfffffda8
   11c9c:	b4000000 	strlt	r0, [r0], #-0
   11ca0:	00007c17 	andeq	r7, r0, r7, lsl ip
   11ca4:	02970400 	addseq	r0, r7, #0, 8
   11ca8:	0000ed16 	andeq	lr, r0, r6, lsl sp
   11cac:	8217bc00 	andshi	fp, r7, #0, 24
   11cb0:	04000005 	streq	r0, [r0], #-5
   11cb4:	ed160298 	lfm	f0, 4, [r6, #-608]	; 0xfffffda0
   11cb8:	c4000000 	strgt	r0, [r0], #-0
   11cbc:	00062a17 	andeq	r2, r6, r7, lsl sl
   11cc0:	02990400 	addseq	r0, r9, #0, 8
   11cc4:	00002c08 	andeq	r2, r0, r8, lsl #24
   11cc8:	0800cc00 	stmdaeq	r0, {sl, fp, lr, pc}
   11ccc:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
   11cd0:	0000080a 	andeq	r0, r0, sl, lsl #16
   11cd4:	00002509 	andeq	r2, r0, r9, lsl #10
   11cd8:	08001900 	stmdaeq	r0, {r8, fp, ip}
   11cdc:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
   11ce0:	0000081a 	andeq	r0, r0, sl, lsl r8
   11ce4:	00002509 	andeq	r2, r0, r9, lsl #10
   11ce8:	08000700 	stmdaeq	r0, {r8, r9, sl}
   11cec:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
   11cf0:	0000082a 	andeq	r0, r0, sl, lsr #16
   11cf4:	00002509 	andeq	r2, r0, r9, lsl #10
   11cf8:	1a001700 	bne	17900 <_Min_Stack_Size+0x17500>
   11cfc:	029e04f0 	addseq	r0, lr, #240, 8	; 0xf0000000
   11d00:	00085107 	andeq	r5, r8, r7, lsl #2
   11d04:	04401700 	strbeq	r1, [r0], #-1792	; 0xfffff900
   11d08:	a1040000 	mrsge	r0, (UNDEF: 4)
   11d0c:	08511b02 	ldmdaeq	r1, {r1, r8, r9, fp, ip}^
   11d10:	17000000 	strne	r0, [r0, -r0]
   11d14:	000002c0 	andeq	r0, r0, r0, asr #5
   11d18:	1802a204 	stmdane	r2, {r2, r9, sp, pc}
   11d1c:	00000861 	andeq	r0, r0, r1, ror #16
   11d20:	ef080078 	svc	0x00080078
   11d24:	61000002 	tstvs	r0, r2
   11d28:	09000008 	stmdbeq	r0, {r3}
   11d2c:	00000025 	andeq	r0, r0, r5, lsr #32
   11d30:	2508001d 	strcs	r0, [r8, #-29]	; 0xffffffe3
   11d34:	71000000 	mrsvc	r0, (UNDEF: 0)
   11d38:	09000008 	stmdbeq	r0, {r3}
   11d3c:	00000025 	andeq	r0, r0, r5, lsr #32
   11d40:	f01b001d 			; <UNDEFINED> instruction: 0xf01b001d
   11d44:	03028304 	movweq	r8, #8964	; 0x2304
   11d48:	00000896 	muleq	r0, r6, r8
   11d4c:	0006cc1c 	andeq	ip, r6, ip, lsl ip
   11d50:	029a0400 	addseq	r0, sl, #0, 8
   11d54:	0006e50b 	andeq	lr, r6, fp, lsl #10
   11d58:	087c1c00 	ldmdaeq	ip!, {sl, fp, ip}^
   11d5c:	a3040000 	movwge	r0, #16384	; 0x4000
   11d60:	082a0b02 	stmdaeq	sl!, {r1, r8, r9, fp}
   11d64:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   11d68:	000005b0 			; <UNDEFINED> instruction: 0x000005b0
   11d6c:	000008a6 	andeq	r0, r0, r6, lsr #17
   11d70:	00002509 	andeq	r2, r0, r9, lsl #10
   11d74:	1d001800 	stcne	8, cr1, [r0, #-0]
   11d78:	000000c0 	andeq	r0, r0, r0, asr #1
   11d7c:	08a6040f 	stmiaeq	r6!, {r0, r1, r2, r3, sl}
   11d80:	bc1e0000 	ldclt	0, cr0, [lr], {-0}
   11d84:	14000008 	strne	r0, [r0], #-8
   11d88:	00000456 	andeq	r0, r0, r6, asr r4
   11d8c:	b1040f00 	tstlt	r4, r0, lsl #30
   11d90:	0f000008 	svceq	0x00000008
   11d94:	00017904 	andeq	r7, r1, r4, lsl #18
   11d98:	08d31e00 	ldmeq	r3, {r9, sl, fp, ip}^
   11d9c:	2c140000 	ldccs	0, cr0, [r4], {-0}
   11da0:	00000000 	andeq	r0, r0, r0
   11da4:	08d9040f 	ldmeq	r9, {r0, r1, r2, r3, sl}^
   11da8:	040f0000 	streq	r0, [pc], #-0	; 11db0 <_Min_Stack_Size+0x119b0>
   11dac:	000008c8 	andeq	r0, r0, r8, asr #17
   11db0:	00064a08 	andeq	r4, r6, r8, lsl #20
   11db4:	0008ef00 	andeq	lr, r8, r0, lsl #30
   11db8:	00250900 	eoreq	r0, r5, r0, lsl #18
   11dbc:	00020000 	andeq	r0, r2, r0
   11dc0:	0007d21f 	andeq	sp, r7, pc, lsl r2
   11dc4:	03330400 	teqeq	r3, #0, 8
   11dc8:	00045617 	andeq	r5, r4, r7, lsl r6
   11dcc:	07cb1f00 	strbeq	r1, [fp, r0, lsl #30]
   11dd0:	34040000 	strcc	r0, [r4], #-0
   11dd4:	045c1d03 	ldrbeq	r1, [ip], #-3331	; 0xfffff2fd
   11dd8:	1f200000 	svcne	0x00200000
   11ddc:	0600004a 	streq	r0, [r0], -sl, asr #32
   11de0:	05aa0e67 	streq	r0, [sl, #3687]!	; 0xe67
   11de4:	19210000 	stmdbne	r1!, {}	; <UNPREDICTABLE>
   11de8:	0100004c 	tsteq	r0, ip, asr #32
   11dec:	002c0111 	eoreq	r0, ip, r1, lsl r1
   11df0:	20000000 	andcs	r0, r0, r0
   11df4:	00004c32 	andeq	r4, r0, r2, lsr ip
   11df8:	b00d2801 	andlt	r2, sp, r1, lsl #16
   11dfc:	22000005 	andcs	r0, r0, #5
   11e00:	00004c4c 	andeq	r4, r0, ip, asr #24
   11e04:	00014601 	andeq	r4, r1, r1, lsl #12
   11e08:	9c000000 	stcls	0, cr0, [r0], {-0}
   11e0c:	01000000 	mrseq	r0, (UNDEF: 0)
   11e10:	000a0b9c 	muleq	sl, ip, fp
   11e14:	3a3b2300 	bcc	edaa1c <_Min_Stack_Size+0xeda61c>
   11e18:	46010000 	strmi	r0, [r1], -r0
   11e1c:	00002c17 	andeq	r2, r0, r7, lsl ip
   11e20:	0011ea00 	andseq	lr, r1, r0, lsl #20
   11e24:	0011e600 	andseq	lr, r1, r0, lsl #12
   11e28:	00642400 	rsbeq	r2, r4, r0, lsl #8
   11e2c:	f9234601 			; <UNDEFINED> instruction: 0xf9234601
   11e30:	0d000000 	stceq	0, cr0, [r0, #-0]
   11e34:	09000012 	stmdbeq	r0, {r1, r4}
   11e38:	25000012 	strcs	r0, [r0, #-18]	; 0xffffffee
   11e3c:	48010070 	stmdami	r1, {r4, r5, r6}
   11e40:	0002aa1c 	andeq	sl, r2, ip, lsl sl
   11e44:	00122d00 	andseq	r2, r2, r0, lsl #26
   11e48:	00122b00 	andseq	r2, r2, r0, lsl #22
   11e4c:	4c3e2600 	ldcmi	6, cr2, [lr], #-0
   11e50:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
   11e54:	000a0b14 	andeq	r0, sl, r4, lsl fp
   11e58:	00124200 	andseq	r4, r2, r0, lsl #4
   11e5c:	00124000 	andseq	r4, r2, r0
   11e60:	01512600 	cmpeq	r1, r0, lsl #12
   11e64:	4a010000 	bmi	51e6c <_Min_Stack_Size+0x51a6c>
   11e68:	000a1123 	andeq	r1, sl, r3, lsr #2
   11e6c:	00125c00 	andseq	r5, r2, r0, lsl #24
   11e70:	00125800 	andseq	r5, r2, r0, lsl #16
   11e74:	006e2500 	rsbeq	r2, lr, r0, lsl #10
   11e78:	2c104b01 			; <UNDEFINED> instruction: 0x2c104b01
   11e7c:	86000000 	strhi	r0, [r0], -r0
   11e80:	80000012 	andhi	r0, r0, r2, lsl r0
   11e84:	25000012 	strcs	r0, [r0, #-18]	; 0xffffffee
   11e88:	4c010069 	stcmi	0, cr0, [r1], {105}	; 0x69
   11e8c:	00002c07 	andeq	r2, r0, r7, lsl #24
   11e90:	0012b700 	andseq	fp, r2, r0, lsl #14
   11e94:	0012b100 	andseq	fp, r2, r0, lsl #2
   11e98:	6e662500 	cdpvs	5, 6, cr2, cr6, cr0, {0}
   11e9c:	0a4d0100 	beq	13522a4 <_Min_Stack_Size+0x1351ea4>
   11ea0:	000002c0 	andeq	r0, r0, r0, asr #5
   11ea4:	000012f2 	strdeq	r1, [r0], -r2
   11ea8:	000012ec 	andeq	r1, r0, ip, ror #5
   11eac:	004c4427 	subeq	r4, ip, r7, lsr #8
   11eb0:	02540100 	subseq	r0, r4, #0, 2
   11eb4:	000a5028 	andeq	r5, sl, r8, lsr #32
   11eb8:	6e692500 	cdpvs	5, 6, cr2, cr9, cr0, {0}
   11ebc:	61010064 	tstvs	r1, r4, rrx
   11ec0:	00002c08 	andeq	r2, r0, r8, lsl #24
   11ec4:	00131d00 	andseq	r1, r3, r0, lsl #26
   11ec8:	00131b00 	andseq	r1, r3, r0, lsl #22
   11ecc:	00002900 	andeq	r2, r0, r0, lsl #18
   11ed0:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
   11ed4:	54910350 	ldrpl	r0, [r1], #848	; 0x350
   11ed8:	00000006 	andeq	r0, r0, r6
   11edc:	02aa040f 	adceq	r0, sl, #251658240	; 0xf000000
   11ee0:	040f0000 	streq	r0, [pc], #-0	; 11ee8 <_Min_Stack_Size+0x11ae8>
   11ee4:	00000212 	andeq	r0, r0, r2, lsl r2
   11ee8:	004c5d2b 	subeq	r5, ip, fp, lsr #26
   11eec:	01310100 	teqeq	r1, r0, lsl #2
   11ef0:	08003e24 	stmdaeq	r0, {r2, r5, r9, sl, fp, ip, sp}
   11ef4:	00000014 	andeq	r0, r0, r4, lsl r0
   11ef8:	0a499c01 	beq	1278f04 <_Min_Stack_Size+0x1278b04>
   11efc:	282c0000 	stmdacs	ip!, {}	; <UNPREDICTABLE>
   11f00:	0608003e 			; <UNDEFINED> instruction: 0x0608003e
   11f04:	2d000000 	stccs	0, cr0, [r0, #-0]
   11f08:	00004ae1 	andeq	r4, r0, r1, ror #21
   11f0c:	2e113501 	cfmul32cs	mvfx3, mvfx1, mvfx1
   11f10:	08003e2e 	stmdaeq	r0, {r1, r2, r3, r5, r9, sl, fp, ip, sp}
   11f14:	00000a49 	andeq	r0, r0, r9, asr #20
   11f18:	772f0000 	strvc	r0, [pc, -r0]!
   11f1c:	7700004a 	strvc	r0, [r0, -sl, asr #32]
   11f20:	0600004a 	streq	r0, [r0], -sl, asr #32
   11f24:	Address 0x0000000000011f24 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
{
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
}
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
  return ch;
       c:	10011117 	andne	r1, r1, r7, lsl r1
      10:	02000017 	andeq	r0, r0, #23
      14:	0b0b0024 	bleq	2c00ac <_Min_Stack_Size+0x2bfcac>
      18:	0e030b3e 	vmoveq.16	d3[0], r0
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
      1c:	16030000 	strne	r0, [r3], -r0
      20:	3a0e0300 	bcc	380c28 <_Min_Stack_Size+0x380828>
      24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	0013490b 	andseq	r4, r3, fp, lsl #18
      2c:	00350400 	eorseq	r0, r5, r0, lsl #8
  return ret;
      30:	00001349 	andeq	r1, r0, r9, asr #6
}
      34:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
      38:	06000013 			; <UNDEFINED> instruction: 0x06000013
      3c:	0b0b0024 	bleq	2c00d4 <_Min_Stack_Size+0x2bfcd4>
      40:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    list->node_count = 0;
      44:	16070000 	strne	r0, [r7], -r0
      48:	3a0e0300 	bcc	380c50 <_Min_Stack_Size+0x380850>
}
      4c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      50:	0013490b 	andseq	r4, r3, fp, lsl #18
      54:	01170800 	tsteq	r7, r0, lsl #16
      58:	0b3a0b0b 	bleq	e82c8c <_Min_Stack_Size+0xe8288c>
      5c:	0b390b3b 	bleq	e42d50 <_Min_Stack_Size+0xe42950>
  HARDFAULT_HANDLING_ASM();
      60:	00001301 	andeq	r1, r0, r1, lsl #6
      64:	03000d09 	movweq	r0, #3337	; 0xd09
      68:	3b0b3a0e 	blcc	2ce8a8 <_Min_Stack_Size+0x2ce4a8>
      6c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      70:	0a000013 	beq	c4 <_Min_Heap_Size-0x13c>
}
      74:	13490101 	movtne	r0, #37121	; 0x9101
      78:	00001301 	andeq	r1, r0, r1, lsl #6
      7c:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
      80:	000b2f13 	andeq	r2, fp, r3, lsl pc
      84:	01130c00 	tsteq	r3, r0, lsl #24
  trigger_irq();
      88:	0b3a0b0b 	bleq	e82cbc <_Min_Stack_Size+0xe828bc>
}
      8c:	0b390b3b 	bleq	e42d80 <_Min_Stack_Size+0xe42980>
      90:	00001301 	andeq	r1, r0, r1, lsl #6
      94:	03000d0d 	movweq	r0, #3341	; 0xd0d
      98:	3b0b3a0e 	blcc	2ce8d8 <_Min_Stack_Size+0x2ce4d8>
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
      9c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    Error_Handler();
      a0:	000b3813 	andeq	r3, fp, r3, lsl r8
}
      a4:	000f0e00 	andeq	r0, pc, r0, lsl #28
      a8:	00000b0b 	andeq	r0, r0, fp, lsl #22
      ac:	0301130f 	movweq	r1, #4879	; 0x130f
      b0:	3a0b0b0e 	bcc	2c2cf0 <_Min_Stack_Size+0x2c28f0>
      SystemCoreClock = HSI_VALUE;
      b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      break;
      b8:	0013010b 	andseq	r0, r3, fp, lsl #2
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
      bc:	000d1000 	andeq	r1, sp, r0
      c0:	0b3a0803 	bleq	e820d4 <_Min_Stack_Size+0xe81cd4>
      c4:	0b390b3b 	bleq	e42db8 <_Min_Stack_Size+0xe429b8>
      c8:	0b381349 	bleq	e04df4 <_Min_Stack_Size+0xe049f4>
  SystemCoreClock >>= tmp;
      cc:	0f110000 	svceq	0x00110000
      d0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
      d4:	12000013 	andne	r0, r0, #19
}
      d8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
      dc:	0b3a050b 	bleq	e81510 <_Min_Stack_Size+0xe81110>
      e0:	0b390b3b 	bleq	e42dd4 <_Min_Stack_Size+0xe429d4>
      e4:	00001301 	andeq	r1, r0, r1, lsl #6
      e8:	03000d13 	movweq	r0, #3347	; 0xd13
      ec:	3b0b3a0e 	blcc	2ce92c <_Min_Stack_Size+0x2ce52c>
      f0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      f4:	00053813 	andeq	r3, r5, r3, lsl r8
        EXTI->FTSR &= ~((uint32_t)iocurrent);
      f8:	00151400 	andseq	r1, r5, r0, lsl #8
      fc:	00001927 	andeq	r1, r0, r7, lsr #18
     100:	27011515 	smladcs	r1, r5, r5, r1
        tmp = 0x0FU << (4U * (position & 0x03U));
     104:	01134919 	tsteq	r3, r9, lsl r9
     108:	16000013 			; <UNDEFINED> instruction: 0x16000013
     10c:	13490005 	movtne	r0, #36869	; 0x9005
     110:	13170000 	tstne	r7, #0
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     114:	0b0e0301 	bleq	380d20 <_Min_Stack_Size+0x380920>
     118:	3b0b3a05 	blcc	2ce934 <_Min_Stack_Size+0x2ce534>
     11c:	010b3905 	tsteq	fp, r5, lsl #18
     120:	18000013 	stmdane	r0, {r0, r1, r4}
     124:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     128:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     12c:	13490b39 	movtne	r0, #39737	; 0x9b39
     130:	00000b38 	andeq	r0, r0, r8, lsr fp
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
     134:	03000d19 	movweq	r0, #3353	; 0xd19
     138:	3b0b3a0e 	blcc	2ce978 <_Min_Stack_Size+0x2ce578>
     13c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     140:	00053813 	andeq	r3, r5, r3, lsl r8
     144:	01131a00 	tsteq	r3, r0, lsl #20
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
     148:	0b0b0e03 	bleq	2c395c <_Min_Stack_Size+0x2c355c>
     14c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     150:	13010b39 	movwne	r0, #6969	; 0x1b39
     154:	131b0000 	tstne	fp, #0
     158:	3a0b0b01 	bcc	2c2d64 <_Min_Stack_Size+0x2c2964>
     15c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     160:	0013010b 	andseq	r0, r3, fp, lsl #2
     164:	01171c00 	tsteq	r7, r0, lsl #24
     168:	0b3a0b0b 	bleq	e82d9c <_Min_Stack_Size+0xe8299c>
     16c:	0b39053b 	bleq	e41660 <_Min_Stack_Size+0xe41260>
     170:	00001301 	andeq	r1, r0, r1, lsl #6
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
     174:	03000d1d 	movweq	r0, #3357	; 0xd1d
     178:	3b0b3a0e 	blcc	2ce9b8 <_Min_Stack_Size+0x2ce5b8>
     17c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     180:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     184:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
     188:	0000193c 	andeq	r1, r0, ip, lsr r9
     18c:	2701151f 	smladcs	r1, pc, r5, r1	; <UNPREDICTABLE>
     190:	00130119 	andseq	r0, r3, r9, lsl r1
     194:	00342000 	eorseq	r2, r4, r0
     198:	0b3a0e03 	bleq	e839ac <_Min_Stack_Size+0xe835ac>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
     19c:	0b39053b 	bleq	e41690 <_Min_Stack_Size+0xe41290>
     1a0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     1a4:	0000193c 	andeq	r1, r0, ip, lsr r9
     1a8:	03003421 	movweq	r3, #1057	; 0x421
     1ac:	3b0b3a0e 	blcc	2ce9ec <_Min_Stack_Size+0x2ce5ec>
     1b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  for(position = 0U; position < GPIO_NUMBER; position++)
     1b4:	3c193f13 	ldccc	15, cr3, [r9], {19}
     1b8:	22000019 	andcs	r0, r0, #25
     1bc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
}
     1c0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1c4:	13490b39 	movtne	r0, #39737	; 0x9b39
     1c8:	00000b38 	andeq	r0, r0, r8, lsr fp
     1cc:	3e010423 	cdpcc	4, 0, cr0, cr1, cr3, {1}
     1d0:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     1d4:	3b0b3a13 	blcc	2cea28 <_Min_Stack_Size+0x2ce628>
     1d8:	010b390b 	tsteq	fp, fp, lsl #18
     1dc:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     1e0:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     1e4:	00000b1c 	andeq	r0, r0, ip, lsl fp
     1e8:	03003425 	movweq	r3, #1061	; 0x425
     1ec:	3b0b3a0e 	blcc	2cea2c <_Min_Stack_Size+0x2ce62c>
     1f0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
                res += 1;
     1f4:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
     1f8:	26000018 			; <UNDEFINED> instruction: 0x26000018
            break;
     1fc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
            _putchar('\n');
     200:	0b3a0e03 	bleq	e83a14 <_Min_Stack_Size+0xe83614>
            res += 1;
     204:	0b390b3b 	bleq	e42ef8 <_Min_Stack_Size+0xe42af8>
     208:	01111927 	tsteq	r1, r7, lsr #18
            _putchar('\r');
     20c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     210:	00194297 	mulseq	r9, r7, r2
            res += 1;
     214:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
            break;
     218:	0b3a0e03 	bleq	e83a2c <_Min_Stack_Size+0xe8362c>
            _putchar(*str);
     21c:	0b390b3b 	bleq	e42f10 <_Min_Stack_Size+0xe42b10>
     220:	01111927 	tsteq	r1, r7, lsr #18
            res += 1;
     224:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     228:	01194296 			; <UNDEFINED> instruction: 0x01194296
            break;
     22c:	28000013 	stmdacs	r0, {r0, r1, r4}
        str++;
     230:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
     234:	0b3b0b3a 	bleq	ec2f24 <_Min_Stack_Size+0xec2b24>
     238:	13490b39 	movtne	r0, #39737	; 0x9b39
     23c:	00001802 	andeq	r1, r0, r2, lsl #16
}
     240:	11010b29 	tstne	r1, r9, lsr #22
     244:	01061201 	tsteq	r6, r1, lsl #4
     248:	2a000013 	bcs	29c <_Min_Heap_Size+0x9c>
     24c:	0111010b 	tsteq	r1, fp, lsl #2
     250:	00000612 	andeq	r0, r0, r2, lsl r6
            hdma->XferCpltCallback(hdma);
     254:	3f002e2b 	svccc	0x00002e2b
     258:	3a0e0319 	bcc	380ec4 <_Min_Stack_Size+0x380ac4>
     25c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
     260:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     264:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     268:	96184006 	ldrls	r4, [r8], -r6
     26c:	00001942 	andeq	r1, r0, r2, asr #18
          hdma->Instance->CR  &= ~(DMA_IT_TC);
     270:	01110100 	tsteq	r1, r0, lsl #2
     274:	0b130e25 	bleq	4c3b10 <_Min_Stack_Size+0x4c3710>
     278:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     27c:	01111755 	tsteq	r1, r5, asr r7
          __HAL_UNLOCK(hdma);
     280:	00001710 	andeq	r1, r0, r0, lsl r7
     284:	0b002402 	bleq	9294 <_Min_Stack_Size+0x8e94>
          hdma->State = HAL_DMA_STATE_READY;
     288:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     28c:	0300000e 	movweq	r0, #14
        if(hdma->XferCpltCallback != NULL)
     290:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     294:	0b3b0b3a 	bleq	ec2f84 <_Min_Stack_Size+0xec2b84>
          hdma->XferCpltCallback(hdma);
     298:	13490b39 	movtne	r0, #39737	; 0x9b39
     29c:	35040000 	strcc	r0, [r4, #-0]
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
     2a0:	00134900 	andseq	r4, r3, r0, lsl #18
     2a4:	00260500 	eoreq	r0, r6, r0, lsl #10
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
     2a8:	00001349 	andeq	r1, r0, r9, asr #6
     2ac:	0b002406 	bleq	92cc <_Min_Stack_Size+0x8ecc>
     2b0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      hdma->State = HAL_DMA_STATE_ABORT;
     2b4:	07000008 	streq	r0, [r0, -r8]
     2b8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      __HAL_DMA_DISABLE(hdma);
     2bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     2c0:	13490b39 	movtne	r0, #39737	; 0x9b39
     2c4:	17080000 	strne	r0, [r8, -r0]
     2c8:	3a0b0b01 	bcc	2c2ed4 <_Min_Stack_Size+0x2c2ad4>
        if (++count > timeout)
     2cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2d0:	0013010b 	andseq	r0, r3, fp, lsl #2
     2d4:	000d0900 	andeq	r0, sp, r0, lsl #18
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
     2d8:	0b3a0e03 	bleq	e83aec <_Min_Stack_Size+0xe836ec>
     2dc:	0b390b3b 	bleq	e42fd0 <_Min_Stack_Size+0xe42bd0>
     2e0:	00001349 	andeq	r1, r0, r9, asr #6
     2e4:	4901010a 	stmdbmi	r1, {r1, r3, r8}
      __HAL_UNLOCK(hdma);
     2e8:	00130113 	andseq	r0, r3, r3, lsl r1
     2ec:	00210b00 	eoreq	r0, r1, r0, lsl #22
      hdma->State = HAL_DMA_STATE_READY;
     2f0:	0b2f1349 	bleq	bc501c <_Min_Stack_Size+0xbc4c1c>
     2f4:	130c0000 	movwne	r0, #49152	; 0xc000
    if(hdma->XferErrorCallback != NULL)
     2f8:	3a0b0b01 	bcc	2c2f04 <_Min_Stack_Size+0x2c2b04>
     2fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      hdma->XferErrorCallback(hdma);
     300:	0013010b 	andseq	r0, r3, fp, lsl #2
     304:	000d0d00 	andeq	r0, sp, r0, lsl #26
     308:	0b3a0e03 	bleq	e83b1c <_Min_Stack_Size+0xe8371c>
}
     30c:	0b390b3b 	bleq	e43000 <_Min_Stack_Size+0xe42c00>
     310:	0b381349 	bleq	e0503c <_Min_Stack_Size+0xe04c3c>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
     314:	0f0e0000 	svceq	0x000e0000
     318:	000b0b00 	andeq	r0, fp, r0, lsl #22
     31c:	01130f00 	tsteq	r3, r0, lsl #30
    UART_Transmit_IT(huart);
     320:	0b0b0e03 	bleq	2c3b34 <_Min_Stack_Size+0x2c3734>
    return;
     324:	0b3b0b3a 	bleq	ec3014 <_Min_Stack_Size+0xec2c14>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
     328:	13010b39 	movwne	r0, #6969	; 0x1b39
     32c:	0d100000 	ldceq	0, cr0, [r0, #-0]
     330:	3a080300 	bcc	200f38 <_Min_Stack_Size+0x200b38>
     334:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     338:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    UART_EndTransmit_IT(huart);
     33c:	1100000b 	tstne	r0, fp
    return;
     340:	0b0b000f 	bleq	2c0384 <_Min_Stack_Size+0x2bff84>
    return;
     344:	00001349 	andeq	r1, r0, r9, asr #6
      return;
     348:	03011312 	movweq	r1, #4882	; 0x1312
      return;
     34c:	3a050b0e 	bcc	142f8c <_Min_Stack_Size+0x142b8c>
}
     350:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     354:	0013010b 	andseq	r0, r3, fp, lsl #2
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     358:	000d1300 	andeq	r1, sp, r0, lsl #6
     35c:	0b3a0e03 	bleq	e83b70 <_Min_Stack_Size+0xe83770>
      tickstart = HAL_GetTick();
     360:	0b390b3b 	bleq	e43054 <_Min_Stack_Size+0xe42c54>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     364:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     368:	15140000 	ldrne	r0, [r4, #-0]
     36c:	00192700 	andseq	r2, r9, r0, lsl #14
     370:	01151500 	tsteq	r5, r0, lsl #10
     374:	13491927 	movtne	r1, #39207	; 0x9927
          return HAL_TIMEOUT;
     378:	00001301 	andeq	r1, r0, r1, lsl #6
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     37c:	49000516 	stmdbmi	r0, {r1, r2, r4, r8, sl}
     380:	17000013 	smladne	r0, r3, r0, r0
     384:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    if(pwrclkchanged == SET)
     388:	0b3a050b 	bleq	e817bc <_Min_Stack_Size+0xe813bc>
     38c:	0b39053b 	bleq	e41880 <_Min_Stack_Size+0xe41480>
      __HAL_RCC_PWR_CLK_DISABLE();
     390:	00001301 	andeq	r1, r0, r1, lsl #6
     394:	03000d18 	movweq	r0, #3352	; 0xd18
     398:	3b0b3a0e 	blcc	2cebd8 <_Min_Stack_Size+0x2ce7d8>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     39c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3a0:	000b3813 	andeq	r3, fp, r3, lsl r8
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     3a4:	000d1900 	andeq	r1, sp, r0, lsl #18
     3a8:	0b3a0e03 	bleq	e83bbc <_Min_Stack_Size+0xe837bc>
     3ac:	0b39053b 	bleq	e418a0 <_Min_Stack_Size+0xe414a0>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     3b0:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     3b4:	131a0000 	tstne	sl, #0
        __HAL_RCC_PLL_DISABLE();
     3b8:	0b0e0301 	bleq	380fc4 <_Min_Stack_Size+0x380bc4>
     3bc:	3b0b3a0b 	blcc	2cebf0 <_Min_Stack_Size+0x2ce7f0>
        tickstart = HAL_GetTick();
     3c0:	010b3905 	tsteq	fp, r5, lsl #18
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3c4:	1b000013 	blne	418 <_Min_Stack_Size+0x18>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3c8:	0b0b0113 	bleq	2c081c <_Min_Stack_Size+0x2c041c>
     3cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3d0:	13010b39 	movwne	r0, #6969	; 0x1b39
            return HAL_TIMEOUT;
     3d4:	171c0000 	ldrne	r0, [ip, -r0]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3d8:	3a0b0b01 	bcc	2c2fe4 <_Min_Stack_Size+0x2c2be4>
     3dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     3e0:	0013010b 	andseq	r0, r3, fp, lsl #2
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     3e4:	000d1d00 	andeq	r1, sp, r0, lsl #26
     3e8:	0b3a0e03 	bleq	e83bfc <_Min_Stack_Size+0xe837fc>
     3ec:	0b39053b 	bleq	e418e0 <_Min_Stack_Size+0xe414e0>
     3f0:	00001349 	andeq	r1, r0, r9, asr #6
     3f4:	0300131e 	movweq	r1, #798	; 0x31e
     3f8:	00193c0e 	andseq	r3, r9, lr, lsl #24
     3fc:	01151f00 	tsteq	r5, r0, lsl #30
     400:	13011927 	movwne	r1, #6439	; 0x1927
     404:	34200000 	strtcc	r0, [r0], #-0
     408:	3a0e0300 	bcc	381010 <_Min_Stack_Size+0x380c10>
     40c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
        __HAL_RCC_PLL_ENABLE();
     410:	3f13490b 	svccc	0x0013490b
        tickstart = HAL_GetTick();
     414:	00193c19 	andseq	r3, r9, r9, lsl ip
     418:	00342100 	eorseq	r2, r4, r0, lsl #2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     41c:	0b3a0e03 	bleq	e83c30 <_Min_Stack_Size+0xe83830>
     420:	0b390b3b 	bleq	e43114 <_Min_Stack_Size+0xe42d14>
     424:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     428:	0000193c 	andeq	r1, r0, ip, lsr r9
            return HAL_TIMEOUT;
     42c:	03000d22 	movweq	r0, #3362	; 0xd22
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     430:	3b0b3a08 	blcc	2cec58 <_Min_Stack_Size+0x2ce858>
     434:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     438:	000b3813 	andeq	r3, fp, r3, lsl r8
        __HAL_RCC_PLL_DISABLE();
     43c:	01042300 	mrseq	r2, LR_abt
     440:	0b0b0b3e 	bleq	2c3140 <_Min_Stack_Size+0x2c2d40>
        tickstart = HAL_GetTick();
     444:	0b3a1349 	bleq	e85170 <_Min_Stack_Size+0xe84d70>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     448:	0b390b3b 	bleq	e4313c <_Min_Stack_Size+0xe42d3c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     44c:	00001301 	andeq	r1, r0, r1, lsl #6
     450:	03002824 	movweq	r2, #2084	; 0x824
     454:	000b1c0e 	andeq	r1, fp, lr, lsl #24
            return HAL_TIMEOUT;
     458:	00342500 	eorseq	r2, r4, r0, lsl #10
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0b3a0e03 	bleq	e83c70 <_Min_Stack_Size+0xe83870>
     460:	0b390b3b 	bleq	e43154 <_Min_Stack_Size+0xe42d54>
     464:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     468:	00001802 	andeq	r1, r0, r2, lsl #16
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     46c:	3f012e26 	svccc	0x00012e26
     470:	3a0e0319 	bcc	3810dc <_Min_Stack_Size+0x380cdc>
        return HAL_ERROR;
     474:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
        pll_config = RCC->PLLCFGR;
     478:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     47c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     480:	97184006 	ldrls	r4, [r8, -r6]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     484:	13011942 	movwne	r1, #6466	; 0x1942
     488:	34270000 	strtcc	r0, [r7], #-0
     48c:	3a080300 	bcc	201094 <_Min_Stack_Size+0x200c94>
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     490:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     494:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     498:	28000018 	stmdacs	r0, {r3, r4}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     49c:	08030005 	stmdaeq	r3, {r0, r2}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4a0:	0b3b0b3a 	bleq	ec3190 <_Min_Stack_Size+0xec2d90>
     4a4:	13490b39 	movtne	r0, #39737	; 0x9b39
     4a8:	00001802 	andeq	r1, r0, r2, lsl #16
     4ac:	3f002e29 	svccc	0x00002e29
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     4b0:	3a0e0319 	bcc	38111c <_Min_Stack_Size+0x380d1c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     4b8:	1119270b 	tstne	r9, fp, lsl #14
     4bc:	40061201 	andmi	r1, r6, r1, lsl #4
     4c0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4c4:	01000000 	mrseq	r0, (UNDEF: 0)
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4c8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     4cc:	0e030b13 	vmoveq.32	d3[0], r0
     4d0:	17550e1b 	smmlane	r5, fp, lr, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4d4:	17100111 			; <UNDEFINED> instruction: 0x17100111
          return HAL_ERROR;
     4d8:	24020000 	strcs	r0, [r2], #-0
}
     4dc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     4e0:	000e030b 	andeq	r0, lr, fp, lsl #6
     4e4:	00160300 	andseq	r0, r6, r0, lsl #6
     4e8:	0b3a0e03 	bleq	e83cfc <_Min_Stack_Size+0xe838fc>
     4ec:	0b390b3b 	bleq	e431e0 <_Min_Stack_Size+0xe42de0>
     4f0:	00001349 	andeq	r1, r0, r9, asr #6
     4f4:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
     4f8:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     4fc:	13490026 	movtne	r0, #36902	; 0x9026
     500:	24060000 	strcs	r0, [r6], #-0
     504:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     508:	0008030b 	andeq	r0, r8, fp, lsl #6
     50c:	00160700 	andseq	r0, r6, r0, lsl #14
     510:	0b3a0e03 	bleq	e83d24 <_Min_Stack_Size+0xe83924>
     514:	0b39053b 	bleq	e41a08 <_Min_Stack_Size+0xe41608>
     518:	00001349 	andeq	r1, r0, r9, asr #6
     51c:	0b011708 	bleq	46144 <_Min_Stack_Size+0x45d44>
     520:	3b0b3a0b 	blcc	2ced54 <_Min_Stack_Size+0x2ce954>
     524:	010b390b 	tsteq	fp, fp, lsl #18
     528:	09000013 	stmdbeq	r0, {r0, r1, r4}
     52c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     530:	0b3b0b3a 	bleq	ec3220 <_Min_Stack_Size+0xec2e20>
     534:	13490b39 	movtne	r0, #39737	; 0x9b39
     538:	010a0000 	mrseq	r0, (UNDEF: 10)
     53c:	01134901 	tsteq	r3, r1, lsl #18
     540:	0b000013 	bleq	594 <_Min_Stack_Size+0x194>
     544:	13490021 	movtne	r0, #36897	; 0x9021
     548:	00000b2f 	andeq	r0, r0, pc, lsr #22
     54c:	0b01130c 	bleq	45184 <_Min_Stack_Size+0x44d84>
     550:	3b0b3a0b 	blcc	2ced84 <_Min_Stack_Size+0x2ce984>
     554:	010b390b 	tsteq	fp, fp, lsl #18
     558:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     55c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     560:	0b3b0b3a 	bleq	ec3250 <_Min_Stack_Size+0xec2e50>
     564:	13490b39 	movtne	r0, #39737	; 0x9b39
     568:	00000b38 	andeq	r0, r0, r8, lsr fp
     56c:	0b000f0e 	bleq	41ac <_Min_Stack_Size+0x3dac>
     570:	0f00000b 	svceq	0x0000000b
     574:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     578:	0b3a0b0b 	bleq	e831ac <_Min_Stack_Size+0xe82dac>
     57c:	0b390b3b 	bleq	e43270 <_Min_Stack_Size+0xe42e70>
     580:	00001301 	andeq	r1, r0, r1, lsl #6
     584:	03000d10 	movweq	r0, #3344	; 0xd10
     588:	3b0b3a08 	blcc	2cedb0 <_Min_Stack_Size+0x2ce9b0>
     58c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     590:	000b3813 	andeq	r3, fp, r3, lsl r8
     594:	000f1100 	andeq	r1, pc, r0, lsl #2
     598:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     59c:	13120000 	tstne	r2, #0
     5a0:	0b0e0301 	bleq	3811ac <_Min_Stack_Size+0x380dac>
     5a4:	3b0b3a05 	blcc	2cedc0 <_Min_Stack_Size+0x2ce9c0>
     5a8:	010b390b 	tsteq	fp, fp, lsl #18
     5ac:	13000013 	movwne	r0, #19
     5b0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     5b4:	0b3b0b3a 	bleq	ec32a4 <_Min_Stack_Size+0xec2ea4>
     5b8:	13490b39 	movtne	r0, #39737	; 0x9b39
     5bc:	00000538 	andeq	r0, r0, r8, lsr r5
     5c0:	27001514 	smladcs	r0, r4, r5, r1
     5c4:	15000019 	strne	r0, [r0, #-25]	; 0xffffffe7
     5c8:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
     5cc:	13011349 	movwne	r1, #4937	; 0x1349
     5d0:	05160000 	ldreq	r0, [r6, #-0]
     5d4:	00134900 	andseq	r4, r3, r0, lsl #18
     5d8:	01131700 	tsteq	r3, r0, lsl #14
     5dc:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
     5e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     5e4:	13010b39 	movwne	r0, #6969	; 0x1b39
     5e8:	0d180000 	ldceq	0, cr0, [r8, #-0]
     5ec:	3a0e0300 	bcc	3811f4 <_Min_Stack_Size+0x380df4>
     5f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     5f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     5f8:	1900000b 	stmdbne	r0, {r0, r1, r3}
     5fc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     600:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     604:	13490b39 	movtne	r0, #39737	; 0x9b39
     608:	00000538 	andeq	r0, r0, r8, lsr r5
     60c:	0301131a 	movweq	r1, #4890	; 0x131a
     610:	3a0b0b0e 	bcc	2c3250 <_Min_Stack_Size+0x2c2e50>
     614:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     618:	0013010b 	andseq	r0, r3, fp, lsl #2
     61c:	01131b00 	tsteq	r3, r0, lsl #22
     620:	0b3a0b0b 	bleq	e83254 <_Min_Stack_Size+0xe82e54>
     624:	0b39053b 	bleq	e41b18 <_Min_Stack_Size+0xe41718>
     628:	00001301 	andeq	r1, r0, r1, lsl #6
     62c:	0b01171c 	bleq	462a4 <_Min_Stack_Size+0x45ea4>
     630:	3b0b3a0b 	blcc	2cee64 <_Min_Stack_Size+0x2cea64>
     634:	010b3905 	tsteq	fp, r5, lsl #18
     638:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     63c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     640:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     644:	13490b39 	movtne	r0, #39737	; 0x9b39
     648:	131e0000 	tstne	lr, #0
     64c:	3c0e0300 	stccc	3, cr0, [lr], {-0}
     650:	1f000019 	svcne	0x00000019
     654:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
     658:	00001301 	andeq	r1, r0, r1, lsl #6
     65c:	03003420 	movweq	r3, #1056	; 0x420
     660:	3b0b3a0e 	blcc	2ceea0 <_Min_Stack_Size+0x2ceaa0>
     664:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     668:	3c193f13 	ldccc	15, cr3, [r9], {19}
     66c:	21000019 	tstcs	r0, r9, lsl r0
     670:	0b3e0104 	bleq	f80a88 <_Min_Stack_Size+0xf80688>
     674:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     678:	0b3b0b3a 	bleq	ec3368 <_Min_Stack_Size+0xec2f68>
     67c:	13010b39 	movwne	r0, #6969	; 0x1b39
     680:	28220000 	stmdacs	r2!, {}	; <UNPREDICTABLE>
     684:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     688:	2300000d 	movwcs	r0, #13
     68c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     690:	00000b1c 	andeq	r0, r0, ip, lsl fp
     694:	03003424 	movweq	r3, #1060	; 0x424
     698:	3b0b3a0e 	blcc	2ceed8 <_Min_Stack_Size+0x2cead8>
     69c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6a0:	3c193f13 	ldccc	15, cr3, [r9], {19}
     6a4:	25000019 	strcs	r0, [r0, #-25]	; 0xffffffe7
     6a8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     6ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     6b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     6b4:	00000b38 	andeq	r0, r0, r8, lsr fp
     6b8:	3f012e26 	svccc	0x00012e26
     6bc:	3a0e0319 	bcc	381328 <_Min_Stack_Size+0x380f28>
     6c0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6c4:	1119270b 	tstne	r9, fp, lsl #14
     6c8:	40061201 	andmi	r1, r6, r1, lsl #4
     6cc:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     6d0:	00001301 	andeq	r1, r0, r1, lsl #6
     6d4:	03000527 	movweq	r0, #1319	; 0x527
     6d8:	3b0b3a0e 	blcc	2cef18 <_Min_Stack_Size+0x2ceb18>
     6dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     6e0:	00180213 	andseq	r0, r8, r3, lsl r2
     6e4:	00342800 	eorseq	r2, r4, r0, lsl #16
     6e8:	0b3a0e03 	bleq	e83efc <_Min_Stack_Size+0xe83afc>
     6ec:	0b390b3b 	bleq	e433e0 <_Min_Stack_Size+0xe42fe0>
     6f0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     6f4:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
     6f8:	03193f01 	tsteq	r9, #1, 30
     6fc:	3b0b3a0e 	blcc	2cef3c <_Min_Stack_Size+0x2ceb3c>
     700:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     704:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     708:	96184006 	ldrls	r4, [r8], -r6
     70c:	00001942 	andeq	r1, r0, r2, asr #18
     710:	11010b2a 	tstne	r1, sl, lsr #22
     714:	01061201 	tsteq	r6, r1, lsl #4
     718:	2b000013 	blcs	76c <_Min_Stack_Size+0x36c>
     71c:	0111010b 	tsteq	r1, fp, lsl #2
     720:	00000612 	andeq	r0, r0, r2, lsl r6
     724:	01110100 	tsteq	r1, r0, lsl #2
     728:	0b130e25 	bleq	4c3fc4 <_Min_Stack_Size+0x4c3bc4>
     72c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     730:	01111755 	tsteq	r1, r5, asr r7
     734:	00001710 	andeq	r1, r0, r0, lsl r7
     738:	0b002402 	bleq	9748 <_Min_Stack_Size+0x9348>
     73c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     740:	0300000e 	movweq	r0, #14
     744:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     748:	0b3b0b3a 	bleq	ec3438 <_Min_Stack_Size+0xec3038>
     74c:	13490b39 	movtne	r0, #39737	; 0x9b39
     750:	35040000 	strcc	r0, [r4, #-0]
     754:	00134900 	andseq	r4, r3, r0, lsl #18
     758:	00260500 	eoreq	r0, r6, r0, lsl #10
     75c:	00001349 	andeq	r1, r0, r9, asr #6
     760:	0b002406 	bleq	9780 <_Min_Stack_Size+0x9380>
     764:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     768:	07000008 	streq	r0, [r0, -r8]
     76c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     770:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     774:	13490b39 	movtne	r0, #39737	; 0x9b39
     778:	17080000 	strne	r0, [r8, -r0]
     77c:	3a0b0b01 	bcc	2c3388 <_Min_Stack_Size+0x2c2f88>
     780:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     784:	0013010b 	andseq	r0, r3, fp, lsl #2
     788:	000d0900 	andeq	r0, sp, r0, lsl #18
     78c:	0b3a0e03 	bleq	e83fa0 <_Min_Stack_Size+0xe83ba0>
     790:	0b390b3b 	bleq	e43484 <_Min_Stack_Size+0xe43084>
     794:	00001349 	andeq	r1, r0, r9, asr #6
     798:	4901010a 	stmdbmi	r1, {r1, r3, r8}
     79c:	00130113 	andseq	r0, r3, r3, lsl r1
     7a0:	00210b00 	eoreq	r0, r1, r0, lsl #22
     7a4:	0b2f1349 	bleq	bc54d0 <_Min_Stack_Size+0xbc50d0>
     7a8:	130c0000 	movwne	r0, #49152	; 0xc000
     7ac:	3a0b0b01 	bcc	2c33b8 <_Min_Stack_Size+0x2c2fb8>
     7b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7b4:	0013010b 	andseq	r0, r3, fp, lsl #2
     7b8:	000d0d00 	andeq	r0, sp, r0, lsl #26
     7bc:	0b3a0e03 	bleq	e83fd0 <_Min_Stack_Size+0xe83bd0>
     7c0:	0b390b3b 	bleq	e434b4 <_Min_Stack_Size+0xe430b4>
     7c4:	0b381349 	bleq	e054f0 <_Min_Stack_Size+0xe050f0>
     7c8:	0f0e0000 	svceq	0x000e0000
     7cc:	000b0b00 	andeq	r0, fp, r0, lsl #22
     7d0:	01130f00 	tsteq	r3, r0, lsl #30
     7d4:	0b0b0e03 	bleq	2c3fe8 <_Min_Stack_Size+0x2c3be8>
     7d8:	0b3b0b3a 	bleq	ec34c8 <_Min_Stack_Size+0xec30c8>
     7dc:	13010b39 	movwne	r0, #6969	; 0x1b39
     7e0:	0d100000 	ldceq	0, cr0, [r0, #-0]
     7e4:	3a080300 	bcc	2013ec <_Min_Stack_Size+0x200fec>
     7e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7ec:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     7f0:	1100000b 	tstne	r0, fp
     7f4:	0b0b000f 	bleq	2c0838 <_Min_Stack_Size+0x2c0438>
     7f8:	00001349 	andeq	r1, r0, r9, asr #6
     7fc:	03011312 	movweq	r1, #4882	; 0x1312
     800:	3a050b0e 	bcc	143440 <_Min_Stack_Size+0x143040>
     804:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     808:	0013010b 	andseq	r0, r3, fp, lsl #2
     80c:	000d1300 	andeq	r1, sp, r0, lsl #6
     810:	0b3a0e03 	bleq	e84024 <_Min_Stack_Size+0xe83c24>
     814:	0b390b3b 	bleq	e43508 <_Min_Stack_Size+0xe43108>
     818:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     81c:	15140000 	ldrne	r0, [r4, #-0]
     820:	00192700 	andseq	r2, r9, r0, lsl #14
     824:	01151500 	tsteq	r5, r0, lsl #10
     828:	13491927 	movtne	r1, #39207	; 0x9927
     82c:	00001301 	andeq	r1, r0, r1, lsl #6
     830:	49000516 	stmdbmi	r0, {r1, r2, r4, r8, sl}
     834:	17000013 	smladne	r0, r3, r0, r0
     838:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     83c:	0b3a050b 	bleq	e81c70 <_Min_Stack_Size+0xe81870>
     840:	0b39053b 	bleq	e41d34 <_Min_Stack_Size+0xe41934>
     844:	00001301 	andeq	r1, r0, r1, lsl #6
     848:	03000d18 	movweq	r0, #3352	; 0xd18
     84c:	3b0b3a0e 	blcc	2cf08c <_Min_Stack_Size+0x2cec8c>
     850:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     854:	000b3813 	andeq	r3, fp, r3, lsl r8
     858:	000d1900 	andeq	r1, sp, r0, lsl #18
     85c:	0b3a0e03 	bleq	e84070 <_Min_Stack_Size+0xe83c70>
     860:	0b39053b 	bleq	e41d54 <_Min_Stack_Size+0xe41954>
     864:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     868:	131a0000 	tstne	sl, #0
     86c:	0b0e0301 	bleq	381478 <_Min_Stack_Size+0x381078>
     870:	3b0b3a0b 	blcc	2cf0a4 <_Min_Stack_Size+0x2ceca4>
     874:	010b3905 	tsteq	fp, r5, lsl #18
     878:	1b000013 	blne	8cc <_Min_Stack_Size+0x4cc>
     87c:	0b0b0113 	bleq	2c0cd0 <_Min_Stack_Size+0x2c08d0>
     880:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     884:	13010b39 	movwne	r0, #6969	; 0x1b39
     888:	171c0000 	ldrne	r0, [ip, -r0]
     88c:	3a0b0b01 	bcc	2c3498 <_Min_Stack_Size+0x2c3098>
     890:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     894:	0013010b 	andseq	r0, r3, fp, lsl #2
     898:	000d1d00 	andeq	r1, sp, r0, lsl #26
     89c:	0b3a0e03 	bleq	e840b0 <_Min_Stack_Size+0xe83cb0>
     8a0:	0b39053b 	bleq	e41d94 <_Min_Stack_Size+0xe41994>
     8a4:	00001349 	andeq	r1, r0, r9, asr #6
     8a8:	0300131e 	movweq	r1, #798	; 0x31e
     8ac:	00193c0e 	andseq	r3, r9, lr, lsl #24
     8b0:	01151f00 	tsteq	r5, r0, lsl #30
     8b4:	13011927 	movwne	r1, #6439	; 0x1927
     8b8:	34200000 	strtcc	r0, [r0], #-0
     8bc:	3a0e0300 	bcc	3814c4 <_Min_Stack_Size+0x3810c4>
     8c0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8c4:	3f13490b 	svccc	0x0013490b
     8c8:	00193c19 	andseq	r3, r9, r9, lsl ip
     8cc:	00342100 	eorseq	r2, r4, r0, lsl #2
     8d0:	0b3a0e03 	bleq	e840e4 <_Min_Stack_Size+0xe83ce4>
     8d4:	0b390b3b 	bleq	e435c8 <_Min_Stack_Size+0xe431c8>
     8d8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     8dc:	0000193c 	andeq	r1, r0, ip, lsr r9
     8e0:	3e010422 	cdpcc	4, 0, cr0, cr1, cr2, {1}
     8e4:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     8e8:	3b0b3a13 	blcc	2cf13c <_Min_Stack_Size+0x2ced3c>
     8ec:	010b390b 	tsteq	fp, fp, lsl #18
     8f0:	23000013 	movwcs	r0, #19
     8f4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     8f8:	00000b1c 	andeq	r0, r0, ip, lsl fp
     8fc:	3f002e24 	svccc	0x00002e24
     900:	3a0e0319 	bcc	38156c <_Min_Stack_Size+0x38116c>
     904:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     908:	1119270b 	tstne	r9, fp, lsl #14
     90c:	40061201 	andmi	r1, r6, r1, lsl #4
     910:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     914:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
     918:	03193f01 	tsteq	r9, #1, 30
     91c:	3b0b3a0e 	blcc	2cf15c <_Min_Stack_Size+0x2ced5c>
     920:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     924:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     928:	96184006 	ldrls	r4, [r8], -r6
     92c:	13011942 	movwne	r1, #6466	; 0x1942
     930:	34260000 	strtcc	r0, [r6], #-0
     934:	490e0300 	stmdbmi	lr, {r8, r9}
     938:	02193413 	andseq	r3, r9, #318767104	; 0x13000000
     93c:	00000018 	andeq	r0, r0, r8, lsl r0
     940:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     944:	030b130e 	movweq	r1, #45838	; 0xb30e
     948:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     94c:	10011117 	andne	r1, r1, r7, lsl r1
     950:	02000017 	andeq	r0, r0, #23
     954:	0b0b0024 	bleq	2c09ec <_Min_Stack_Size+0x2c05ec>
     958:	0e030b3e 	vmoveq.16	d3[0], r0
     95c:	16030000 	strne	r0, [r3], -r0
     960:	3a0e0300 	bcc	381568 <_Min_Stack_Size+0x381168>
     964:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     968:	0013490b 	andseq	r4, r3, fp, lsl #18
     96c:	00350400 	eorseq	r0, r5, r0, lsl #8
     970:	00001349 	andeq	r1, r0, r9, asr #6
     974:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     978:	06000013 			; <UNDEFINED> instruction: 0x06000013
     97c:	0b0b0024 	bleq	2c0a14 <_Min_Stack_Size+0x2c0614>
     980:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     984:	13070000 	movwne	r0, #28672	; 0x7000
     988:	3a0b0b01 	bcc	2c3594 <_Min_Stack_Size+0x2c3194>
     98c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     990:	0013010b 	andseq	r0, r3, fp, lsl #2
     994:	000d0800 	andeq	r0, sp, r0, lsl #16
     998:	0b3a0e03 	bleq	e841ac <_Min_Stack_Size+0xe83dac>
     99c:	0b39053b 	bleq	e41e90 <_Min_Stack_Size+0xe41a90>
     9a0:	0b381349 	bleq	e056cc <_Min_Stack_Size+0xe052cc>
     9a4:	0d090000 	stceq	0, cr0, [r9, #-0]
     9a8:	3a080300 	bcc	2015b0 <_Min_Stack_Size+0x2011b0>
     9ac:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9b0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     9b4:	0a00000b 	beq	9e8 <_Min_Stack_Size+0x5e8>
     9b8:	13490101 	movtne	r0, #37121	; 0x9101
     9bc:	00001301 	andeq	r1, r0, r1, lsl #6
     9c0:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
     9c4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     9c8:	00160c00 	andseq	r0, r6, r0, lsl #24
     9cc:	0b3a0e03 	bleq	e841e0 <_Min_Stack_Size+0xe83de0>
     9d0:	0b39053b 	bleq	e41ec4 <_Min_Stack_Size+0xe41ac4>
     9d4:	00001349 	andeq	r1, r0, r9, asr #6
     9d8:	0300340d 	movweq	r3, #1037	; 0x40d
     9dc:	3b0b3a0e 	blcc	2cf21c <_Min_Stack_Size+0x2cee1c>
     9e0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     9e4:	3c193f13 	ldccc	15, cr3, [r9], {19}
     9e8:	0e000019 	mcreq	0, 0, r0, cr0, cr9, {0}
     9ec:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     9f0:	0b3b0b3a 	bleq	ec36e0 <_Min_Stack_Size+0xec32e0>
     9f4:	13490b39 	movtne	r0, #39737	; 0x9b39
     9f8:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     9fc:	340f0000 	strcc	r0, [pc], #-0	; a04 <_Min_Stack_Size+0x604>
     a00:	3a134700 	bcc	4d2608 <_Min_Stack_Size+0x4d2208>
     a04:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a08:	0018020b 	andseq	r0, r8, fp, lsl #4
     a0c:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
     a10:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     a14:	0b3b0b3a 	bleq	ec3704 <_Min_Stack_Size+0xec3304>
     a18:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     a1c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     a20:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     a24:	00130119 	andseq	r0, r3, r9, lsl r1
     a28:	00341100 	eorseq	r1, r4, r0, lsl #2
     a2c:	0b3a0803 	bleq	e82a40 <_Min_Stack_Size+0xe82640>
     a30:	0b390b3b 	bleq	e43724 <_Min_Stack_Size+0xe43324>
     a34:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     a38:	34120000 	ldrcc	r0, [r2], #-0
     a3c:	3a0e0300 	bcc	381644 <_Min_Stack_Size+0x381244>
     a40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a44:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a48:	13000018 	movwne	r0, #24
     a4c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     a50:	0b3a0e03 	bleq	e84264 <_Min_Stack_Size+0xe83e64>
     a54:	0b390b3b 	bleq	e43748 <_Min_Stack_Size+0xe43348>
     a58:	01111927 	tsteq	r1, r7, lsr #18
     a5c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     a60:	00194297 	mulseq	r9, r7, r2
     a64:	11010000 	mrsne	r0, (UNDEF: 1)
     a68:	130e2501 	movwne	r2, #58625	; 0xe501
     a6c:	1b0e030b 	blne	3816a0 <_Min_Stack_Size+0x3812a0>
     a70:	1117550e 	tstne	r7, lr, lsl #10
     a74:	00171001 	andseq	r1, r7, r1
     a78:	01040200 	mrseq	r0, R12_usr
     a7c:	0b0b0b3e 	bleq	2c377c <_Min_Stack_Size+0x2c337c>
     a80:	0b3a1349 	bleq	e857ac <_Min_Stack_Size+0xe853ac>
     a84:	0b390b3b 	bleq	e43778 <_Min_Stack_Size+0xe43378>
     a88:	00001301 	andeq	r1, r0, r1, lsl #6
     a8c:	03002803 	movweq	r2, #2051	; 0x803
     a90:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     a94:	00280400 	eoreq	r0, r8, r0, lsl #8
     a98:	0b1c0e03 	bleq	7042ac <_Min_Stack_Size+0x703eac>
     a9c:	24050000 	strcs	r0, [r5], #-0
     aa0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     aa4:	000e030b 	andeq	r0, lr, fp, lsl #6
     aa8:	00160600 	andseq	r0, r6, r0, lsl #12
     aac:	0b3a0e03 	bleq	e842c0 <_Min_Stack_Size+0xe83ec0>
     ab0:	0b390b3b 	bleq	e437a4 <_Min_Stack_Size+0xe433a4>
     ab4:	00001349 	andeq	r1, r0, r9, asr #6
     ab8:	49003507 	stmdbmi	r0, {r0, r1, r2, r8, sl, ip, sp}
     abc:	08000013 	stmdaeq	r0, {r0, r1, r4}
     ac0:	13490026 	movtne	r0, #36902	; 0x9026
     ac4:	24090000 	strcs	r0, [r9], #-0
     ac8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     acc:	0008030b 	andeq	r0, r8, fp, lsl #6
     ad0:	01130a00 	tsteq	r3, r0, lsl #20
     ad4:	0b3a0b0b 	bleq	e83708 <_Min_Stack_Size+0xe83308>
     ad8:	0b39053b 	bleq	e41fcc <_Min_Stack_Size+0xe41bcc>
     adc:	00001301 	andeq	r1, r0, r1, lsl #6
     ae0:	03000d0b 	movweq	r0, #3339	; 0xd0b
     ae4:	3b0b3a0e 	blcc	2cf324 <_Min_Stack_Size+0x2cef24>
     ae8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     aec:	000b3813 	andeq	r3, fp, r3, lsl r8
     af0:	000d0c00 	andeq	r0, sp, r0, lsl #24
     af4:	0b3a0803 	bleq	e82b08 <_Min_Stack_Size+0xe82708>
     af8:	0b39053b 	bleq	e41fec <_Min_Stack_Size+0xe41bec>
     afc:	0b381349 	bleq	e05828 <_Min_Stack_Size+0xe05428>
     b00:	160d0000 	strne	r0, [sp], -r0
     b04:	3a0e0300 	bcc	38170c <_Min_Stack_Size+0x38130c>
     b08:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b0c:	0013490b 	andseq	r4, r3, fp, lsl #18
     b10:	01010e00 	tsteq	r1, r0, lsl #28
     b14:	13011349 	movwne	r1, #4937	; 0x1349
     b18:	210f0000 	mrscs	r0, CPSR
     b1c:	2f134900 	svccs	0x00134900
     b20:	1000000b 	andne	r0, r0, fp
     b24:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     b28:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b2c:	13490b39 	movtne	r0, #39737	; 0x9b39
     b30:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     b34:	34110000 	ldrcc	r0, [r1], #-0
     b38:	3a0e0300 	bcc	381740 <_Min_Stack_Size+0x381340>
     b3c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b40:	3f13490b 	svccc	0x0013490b
     b44:	00193c19 	andseq	r3, r9, r9, lsl ip
     b48:	00341200 	eorseq	r1, r4, r0, lsl #4
     b4c:	0b3a1347 	bleq	e85870 <_Min_Stack_Size+0xe85470>
     b50:	0b390b3b 	bleq	e43844 <_Min_Stack_Size+0xe43444>
     b54:	00001802 	andeq	r1, r0, r2, lsl #16
     b58:	3f002e13 	svccc	0x00002e13
     b5c:	3a0e0319 	bcc	3817c8 <_Min_Stack_Size+0x3813c8>
     b60:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b64:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     b68:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     b6c:	97184006 	ldrls	r4, [r8, -r6]
     b70:	00001942 	andeq	r1, r0, r2, asr #18
     b74:	3f002e14 	svccc	0x00002e14
     b78:	3a0e0319 	bcc	3817e4 <_Min_Stack_Size+0x3813e4>
     b7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b80:	1119270b 	tstne	r9, fp, lsl #14
     b84:	40061201 	andmi	r1, r6, r1, lsl #4
     b88:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     b8c:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     b90:	03193f01 	tsteq	r9, #1, 30
     b94:	3b0b3a0e 	blcc	2cf3d4 <_Min_Stack_Size+0x2cefd4>
     b98:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     b9c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     ba0:	96184006 	ldrls	r4, [r8], -r6
     ba4:	13011942 	movwne	r1, #6466	; 0x1942
     ba8:	05160000 	ldreq	r0, [r6, #-0]
     bac:	3a0e0300 	bcc	3817b4 <_Min_Stack_Size+0x3813b4>
     bb0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     bb4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     bb8:	17000018 	smladne	r0, r8, r0, r0
     bbc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     bc0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     bc4:	13490b39 	movtne	r0, #39737	; 0x9b39
     bc8:	00001802 	andeq	r1, r0, r2, lsl #16
     bcc:	3f012e18 	svccc	0x00012e18
     bd0:	3a0e0319 	bcc	38183c <_Min_Stack_Size+0x38143c>
     bd4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     bd8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     bdc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     be0:	96184006 	ldrls	r4, [r8], -r6
     be4:	13011942 	movwne	r1, #6466	; 0x1942
     be8:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     bec:	03193f01 	tsteq	r9, #1, 30
     bf0:	3b0b3a0e 	blcc	2cf430 <_Min_Stack_Size+0x2cf030>
     bf4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     bf8:	11134919 	tstne	r3, r9, lsl r9
     bfc:	40061201 	andmi	r1, r6, r1, lsl #4
     c00:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
     c04:	00001301 	andeq	r1, r0, r1, lsl #6
     c08:	0300051a 	movweq	r0, #1306	; 0x51a
     c0c:	3b0b3a0e 	blcc	2cf44c <_Min_Stack_Size+0x2cf04c>
     c10:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c14:	00180213 	andseq	r0, r8, r3, lsl r2
     c18:	002e1b00 	eoreq	r1, lr, r0, lsl #22
     c1c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     c20:	0b3b0b3a 	bleq	ec3910 <_Min_Stack_Size+0xec3510>
     c24:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     c28:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c2c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     c30:	1c000019 	stcne	0, cr0, [r0], {25}
     c34:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     c38:	0b3a0e03 	bleq	e8444c <_Min_Stack_Size+0xe8404c>
     c3c:	0b390b3b 	bleq	e43930 <_Min_Stack_Size+0xe43530>
     c40:	13491927 	movtne	r1, #39207	; 0x9927
     c44:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c48:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     c4c:	00000019 	andeq	r0, r0, r9, lsl r0
     c50:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     c54:	030b130e 	movweq	r1, #45838	; 0xb30e
     c58:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     c5c:	10011117 	andne	r1, r1, r7, lsl r1
     c60:	02000017 	andeq	r0, r0, #23
     c64:	0b0b0024 	bleq	2c0cfc <_Min_Stack_Size+0x2c08fc>
     c68:	0e030b3e 	vmoveq.16	d3[0], r0
     c6c:	16030000 	strne	r0, [r3], -r0
     c70:	3a0e0300 	bcc	381878 <_Min_Stack_Size+0x381478>
     c74:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     c78:	0013490b 	andseq	r4, r3, fp, lsl #18
     c7c:	00350400 	eorseq	r0, r5, r0, lsl #8
     c80:	00001349 	andeq	r1, r0, r9, asr #6
     c84:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     c88:	06000013 			; <UNDEFINED> instruction: 0x06000013
     c8c:	0b0b0024 	bleq	2c0d24 <_Min_Stack_Size+0x2c0924>
     c90:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     c94:	34070000 	strcc	r0, [r7], #-0
     c98:	3a0e0300 	bcc	3818a0 <_Min_Stack_Size+0x3814a0>
     c9c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ca0:	3f13490b 	svccc	0x0013490b
     ca4:	00193c19 	andseq	r3, r9, r9, lsl ip
     ca8:	00340800 	eorseq	r0, r4, r0, lsl #16
     cac:	0b3a0e03 	bleq	e844c0 <_Min_Stack_Size+0xe840c0>
     cb0:	0b390b3b 	bleq	e439a4 <_Min_Stack_Size+0xe435a4>
     cb4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     cb8:	0000193c 	andeq	r1, r0, ip, lsr r9
     cbc:	49010109 	stmdbmi	r1, {r0, r3, r8}
     cc0:	00130113 	andseq	r0, r3, r3, lsl r1
     cc4:	00210a00 	eoreq	r0, r1, r0, lsl #20
     cc8:	0b2f1349 	bleq	bc59f4 <_Min_Stack_Size+0xbc55f4>
     ccc:	040b0000 	streq	r0, [fp], #-0
     cd0:	0b0b3e01 	bleq	2d04dc <_Min_Stack_Size+0x2d00dc>
     cd4:	3a13490b 	bcc	4d3108 <_Min_Stack_Size+0x4d2d08>
     cd8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     cdc:	0013010b 	andseq	r0, r3, fp, lsl #2
     ce0:	00280c00 	eoreq	r0, r8, r0, lsl #24
     ce4:	0b1c0e03 	bleq	7044f8 <_Min_Stack_Size+0x7040f8>
     ce8:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
     cec:	03193f00 	tsteq	r9, #0, 30
     cf0:	3b0b3a0e 	blcc	2cf530 <_Min_Stack_Size+0x2cf130>
     cf4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     cf8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     cfc:	97184006 	ldrls	r4, [r8, -r6]
     d00:	00001942 	andeq	r1, r0, r2, asr #18
     d04:	01110100 	tsteq	r1, r0, lsl #2
     d08:	0b130e25 	bleq	4c45a4 <_Min_Stack_Size+0x4c41a4>
     d0c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     d10:	01111755 	tsteq	r1, r5, asr r7
     d14:	00001710 	andeq	r1, r0, r0, lsl r7
     d18:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
     d1c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     d20:	3b0b3a13 	blcc	2cf574 <_Min_Stack_Size+0x2cf174>
     d24:	010b390b 	tsteq	fp, fp, lsl #18
     d28:	03000013 	movweq	r0, #19
     d2c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     d30:	00000d1c 	andeq	r0, r0, ip, lsl sp
     d34:	03002804 	movweq	r2, #2052	; 0x804
     d38:	000b1c0e 	andeq	r1, fp, lr, lsl #24
     d3c:	00240500 	eoreq	r0, r4, r0, lsl #10
     d40:	0b3e0b0b 	bleq	f83974 <_Min_Stack_Size+0xf83574>
     d44:	00000e03 	andeq	r0, r0, r3, lsl #28
     d48:	03001606 	movweq	r1, #1542	; 0x606
     d4c:	3b0b3a0e 	blcc	2cf58c <_Min_Stack_Size+0x2cf18c>
     d50:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     d54:	07000013 	smladeq	r0, r3, r0, r0
     d58:	13490035 	movtne	r0, #36917	; 0x9035
     d5c:	26080000 	strcs	r0, [r8], -r0
     d60:	00134900 	andseq	r4, r3, r0, lsl #18
     d64:	00240900 	eoreq	r0, r4, r0, lsl #18
     d68:	0b3e0b0b 	bleq	f8399c <_Min_Stack_Size+0xf8359c>
     d6c:	00000803 	andeq	r0, r0, r3, lsl #16
     d70:	0b01130a 	bleq	459a0 <_Min_Stack_Size+0x455a0>
     d74:	3b0b3a05 	blcc	2cf590 <_Min_Stack_Size+0x2cf190>
     d78:	010b3905 	tsteq	fp, r5, lsl #18
     d7c:	0b000013 	bleq	dd0 <_Min_Stack_Size+0x9d0>
     d80:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     d84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d88:	13490b39 	movtne	r0, #39737	; 0x9b39
     d8c:	00000b38 	andeq	r0, r0, r8, lsr fp
     d90:	03000d0c 	movweq	r0, #3340	; 0xd0c
     d94:	3b0b3a0e 	blcc	2cf5d4 <_Min_Stack_Size+0x2cf1d4>
     d98:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d9c:	00053813 	andeq	r3, r5, r3, lsl r8
     da0:	000d0d00 	andeq	r0, sp, r0, lsl #26
     da4:	0b3a0803 	bleq	e82db8 <_Min_Stack_Size+0xe829b8>
     da8:	0b39053b 	bleq	e4229c <_Min_Stack_Size+0xe41e9c>
     dac:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     db0:	010e0000 	mrseq	r0, (UNDEF: 14)
     db4:	01134901 	tsteq	r3, r1, lsl #18
     db8:	0f000013 	svceq	0x00000013
     dbc:	13490021 	movtne	r0, #36897	; 0x9021
     dc0:	00000b2f 	andeq	r0, r0, pc, lsr #22
     dc4:	49002110 	stmdbmi	r0, {r4, r8, sp}
     dc8:	00052f13 	andeq	r2, r5, r3, lsl pc
     dcc:	00161100 	andseq	r1, r6, r0, lsl #2
     dd0:	0b3a0e03 	bleq	e845e4 <_Min_Stack_Size+0xe841e4>
     dd4:	0b39053b 	bleq	e422c8 <_Min_Stack_Size+0xe41ec8>
     dd8:	00001349 	andeq	r1, r0, r9, asr #6
     ddc:	0b011312 	bleq	45a2c <_Min_Stack_Size+0x4562c>
     de0:	3b0b3a0b 	blcc	2cf614 <_Min_Stack_Size+0x2cf214>
     de4:	010b3905 	tsteq	fp, r5, lsl #18
     de8:	13000013 	movwne	r0, #19
     dec:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     df0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     df4:	13490b39 	movtne	r0, #39737	; 0x9b39
     df8:	00000b38 	andeq	r0, r0, r8, lsr fp
     dfc:	03003414 	movweq	r3, #1044	; 0x414
     e00:	3b0b3a0e 	blcc	2cf640 <_Min_Stack_Size+0x2cf240>
     e04:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e08:	3c193f13 	ldccc	15, cr3, [r9], {19}
     e0c:	15000019 	strne	r0, [r0, #-25]	; 0xffffffe7
     e10:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e14:	0b3b0b3a 	bleq	ec3b04 <_Min_Stack_Size+0xec3704>
     e18:	13490b39 	movtne	r0, #39737	; 0x9b39
     e1c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     e20:	28160000 	ldmdacs	r6, {}	; <UNPREDICTABLE>
     e24:	1c080300 	stcne	3, cr0, [r8], {-0}
     e28:	1700000b 	strne	r0, [r0, -fp]
     e2c:	0b0b0113 	bleq	2c1280 <_Min_Stack_Size+0x2c0e80>
     e30:	0b3b0b3a 	bleq	ec3b20 <_Min_Stack_Size+0xec3720>
     e34:	13010b39 	movwne	r0, #6969	; 0x1b39
     e38:	0d180000 	ldceq	0, cr0, [r8, #-0]
     e3c:	3a0e0300 	bcc	381a44 <_Min_Stack_Size+0x381644>
     e40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e44:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e48:	1900000b 	stmdbne	r0, {r0, r1, r3}
     e4c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     e50:	0b3a0e03 	bleq	e84664 <_Min_Stack_Size+0xe84264>
     e54:	0b39053b 	bleq	e42348 <_Min_Stack_Size+0xe41f48>
     e58:	01111927 	tsteq	r1, r7, lsr #18
     e5c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     e60:	00194297 	mulseq	r9, r7, r2
     e64:	002e1a00 	eoreq	r1, lr, r0, lsl #20
     e68:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     e6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e70:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     e74:	06120111 			; <UNDEFINED> instruction: 0x06120111
     e78:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     e7c:	1b000019 	blne	ee8 <_Min_Stack_Size+0xae8>
     e80:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     e84:	0b3a0e03 	bleq	e84698 <_Min_Stack_Size+0xe84298>
     e88:	0b39053b 	bleq	e4237c <_Min_Stack_Size+0xe41f7c>
     e8c:	01111927 	tsteq	r1, r7, lsr #18
     e90:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     e94:	01194297 			; <UNDEFINED> instruction: 0x01194297
     e98:	1c000013 	stcne	0, cr0, [r0], {19}
     e9c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     ea0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ea4:	13490b39 	movtne	r0, #39737	; 0x9b39
     ea8:	00001802 	andeq	r1, r0, r2, lsl #16
     eac:	3f012e1d 	svccc	0x00012e1d
     eb0:	3a0e0319 	bcc	381b1c <_Min_Stack_Size+0x38171c>
     eb4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     eb8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     ebc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     ec0:	96184006 	ldrls	r4, [r8], -r6
     ec4:	13011942 	movwne	r1, #6466	; 0x1942
     ec8:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
     ecc:	03193f01 	tsteq	r9, #1, 30
     ed0:	3b0b3a0e 	blcc	2cf710 <_Min_Stack_Size+0x2cf310>
     ed4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     ed8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     edc:	96184006 	ldrls	r4, [r8], -r6
     ee0:	13011942 	movwne	r1, #6466	; 0x1942
     ee4:	0f1f0000 	svceq	0x001f0000
     ee8:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     eec:	20000013 	andcs	r0, r0, r3, lsl r0
     ef0:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     ef4:	0b3a0e03 	bleq	e84708 <_Min_Stack_Size+0xe84308>
     ef8:	0b39053b 	bleq	e423ec <_Min_Stack_Size+0xe41fec>
     efc:	13491927 	movtne	r1, #39207	; 0x9927
     f00:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f04:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     f08:	21000019 	tstcs	r0, r9, lsl r0
     f0c:	1331001d 	teqne	r1, #29
     f10:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f14:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     f18:	00000b57 	andeq	r0, r0, r7, asr fp
     f1c:	3f012e22 	svccc	0x00012e22
     f20:	3a0e0319 	bcc	381b8c <_Min_Stack_Size+0x38178c>
     f24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f28:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     f2c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     f30:	96184006 	ldrls	r4, [r8], -r6
     f34:	13011942 	movwne	r1, #6466	; 0x1942
     f38:	05230000 	streq	r0, [r3, #-0]!
     f3c:	3a0e0300 	bcc	381b44 <_Min_Stack_Size+0x381744>
     f40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     f44:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     f48:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
     f4c:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     f50:	0b3a0e03 	bleq	e84764 <_Min_Stack_Size+0xe84364>
     f54:	0b390b3b 	bleq	e43c48 <_Min_Stack_Size+0xe43848>
     f58:	01111927 	tsteq	r1, r7, lsr #18
     f5c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     f60:	00194296 	mulseq	r9, r6, r2
     f64:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
     f68:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
     f6c:	0b3b0b3a 	bleq	ec3c5c <_Min_Stack_Size+0xec385c>
     f70:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     f74:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f78:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     f7c:	00130119 	andseq	r0, r3, r9, lsl r1
     f80:	00342600 	eorseq	r2, r4, r0, lsl #12
     f84:	0b3a0e03 	bleq	e84798 <_Min_Stack_Size+0xe84398>
     f88:	0b390b3b 	bleq	e43c7c <_Min_Stack_Size+0xe4387c>
     f8c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     f90:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
     f94:	3a0e0301 	bcc	381ba0 <_Min_Stack_Size+0x3817a0>
     f98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f9c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     fa0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     fa4:	96184006 	ldrls	r4, [r8], -r6
     fa8:	13011942 	movwne	r1, #6466	; 0x1942
     fac:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
     fb0:	3a0e0301 	bcc	381bbc <_Min_Stack_Size+0x3817bc>
     fb4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     fb8:	8719270b 	ldrhi	r2, [r9, -fp, lsl #14]
     fbc:	01111901 	tsteq	r1, r1, lsl #18
     fc0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     fc4:	01194297 			; <UNDEFINED> instruction: 0x01194297
     fc8:	29000013 	stmdbcs	r0, {r0, r1, r4}
     fcc:	0e03012e 	adfeqsp	f0, f3, #0.5
     fd0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fd4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
     fd8:	06120111 			; <UNDEFINED> instruction: 0x06120111
     fdc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     fe0:	00130119 	andseq	r0, r3, r9, lsl r1
     fe4:	00342a00 	eorseq	r2, r4, r0, lsl #20
     fe8:	0b3a0e03 	bleq	e847fc <_Min_Stack_Size+0xe843fc>
     fec:	0b39053b 	bleq	e424e0 <_Min_Stack_Size+0xe420e0>
     ff0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     ff4:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
     ff8:	3a0e0301 	bcc	381c04 <_Min_Stack_Size+0x381804>
     ffc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1000:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1004:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1008:	97184006 	ldrls	r4, [r8, -r6]
    100c:	13011942 	movwne	r1, #6466	; 0x1942
    1010:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
    1014:	3a0e0300 	bcc	381c1c <_Min_Stack_Size+0x38181c>
    1018:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    101c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1020:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1024:	97184006 	ldrls	r4, [r8, -r6]
    1028:	00001942 	andeq	r1, r0, r2, asr #18
    102c:	03002e2d 	movweq	r2, #3629	; 0xe2d
    1030:	3b0b3a0e 	blcc	2cf870 <_Min_Stack_Size+0x2cf470>
    1034:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1038:	000b2019 	andeq	r2, fp, r9, lsl r0
    103c:	11010000 	mrsne	r0, (UNDEF: 1)
    1040:	130e2501 	movwne	r2, #58625	; 0xe501
    1044:	1b0e030b 	blne	381c78 <_Min_Stack_Size+0x381878>
    1048:	1117550e 	tstne	r7, lr, lsl #10
    104c:	00171001 	andseq	r1, r7, r1
    1050:	00240200 	eoreq	r0, r4, r0, lsl #4
    1054:	0b3e0b0b 	bleq	f83c88 <_Min_Stack_Size+0xf83888>
    1058:	00000e03 	andeq	r0, r0, r3, lsl #28
    105c:	03001603 	movweq	r1, #1539	; 0x603
    1060:	3b0b3a0e 	blcc	2cf8a0 <_Min_Stack_Size+0x2cf4a0>
    1064:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1068:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    106c:	13490035 	movtne	r0, #36917	; 0x9035
    1070:	26050000 	strcs	r0, [r5], -r0
    1074:	00134900 	andseq	r4, r3, r0, lsl #18
    1078:	00240600 	eoreq	r0, r4, r0, lsl #12
    107c:	0b3e0b0b 	bleq	f83cb0 <_Min_Stack_Size+0xf838b0>
    1080:	00000803 	andeq	r0, r0, r3, lsl #16
    1084:	49010107 	stmdbmi	r1, {r0, r1, r2, r8}
    1088:	00130113 	andseq	r0, r3, r3, lsl r1
    108c:	00210800 	eoreq	r0, r1, r0, lsl #16
    1090:	0b2f1349 	bleq	bc5dbc <_Min_Stack_Size+0xbc59bc>
    1094:	34090000 	strcc	r0, [r9], #-0
    1098:	3a0e0300 	bcc	381ca0 <_Min_Stack_Size+0x3818a0>
    109c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10a0:	3f13490b 	svccc	0x0013490b
    10a4:	00193c19 	andseq	r3, r9, r9, lsl ip
    10a8:	00340a00 	eorseq	r0, r4, r0, lsl #20
    10ac:	0b3a0e03 	bleq	e848c0 <_Min_Stack_Size+0xe844c0>
    10b0:	0b390b3b 	bleq	e43da4 <_Min_Stack_Size+0xe439a4>
    10b4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    10b8:	0000193c 	andeq	r1, r0, ip, lsr r9
    10bc:	0b01130b 	bleq	45cf0 <_Min_Stack_Size+0x458f0>
    10c0:	3b0b3a0b 	blcc	2cf8f4 <_Min_Stack_Size+0x2cf4f4>
    10c4:	010b3905 	tsteq	fp, r5, lsl #18
    10c8:	0c000013 	stceq	0, cr0, [r0], {19}
    10cc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    10d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    10d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    10d8:	00000b38 	andeq	r0, r0, r8, lsr fp
    10dc:	03000d0d 	movweq	r0, #3341	; 0xd0d
    10e0:	3b0b3a0e 	blcc	2cf920 <_Min_Stack_Size+0x2cf520>
    10e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10e8:	000b3813 	andeq	r3, fp, r3, lsl r8
    10ec:	00160e00 	andseq	r0, r6, r0, lsl #28
    10f0:	0b3a0e03 	bleq	e84904 <_Min_Stack_Size+0xe84504>
    10f4:	0b39053b 	bleq	e425e8 <_Min_Stack_Size+0xe421e8>
    10f8:	00001349 	andeq	r1, r0, r9, asr #6
    10fc:	3e01040f 	cdpcc	4, 0, cr0, cr1, cr15, {0}
    1100:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1104:	3b0b3a13 	blcc	2cf958 <_Min_Stack_Size+0x2cf558>
    1108:	010b390b 	tsteq	fp, fp, lsl #18
    110c:	10000013 	andne	r0, r0, r3, lsl r0
    1110:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1114:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1118:	03002811 	movweq	r2, #2065	; 0x811
    111c:	000b1c08 	andeq	r1, fp, r8, lsl #24
    1120:	01131200 	tsteq	r3, r0, lsl #4
    1124:	0b3a0b0b 	bleq	e83d58 <_Min_Stack_Size+0xe83958>
    1128:	0b390b3b 	bleq	e43e1c <_Min_Stack_Size+0xe43a1c>
    112c:	00001301 	andeq	r1, r0, r1, lsl #6
    1130:	03000d13 	movweq	r0, #3347	; 0xd13
    1134:	3b0b3a0e 	blcc	2cf974 <_Min_Stack_Size+0x2cf574>
    1138:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    113c:	000b3813 	andeq	r3, fp, r3, lsl r8
    1140:	000d1400 	andeq	r1, sp, r0, lsl #8
    1144:	0b3a0803 	bleq	e83158 <_Min_Stack_Size+0xe82d58>
    1148:	0b390b3b 	bleq	e43e3c <_Min_Stack_Size+0xe43a3c>
    114c:	0b381349 	bleq	e05e78 <_Min_Stack_Size+0xe05a78>
    1150:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    1154:	03193f00 	tsteq	r9, #0, 30
    1158:	3b0b3a0e 	blcc	2cf998 <_Min_Stack_Size+0x2cf598>
    115c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1160:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1164:	97184006 	ldrls	r4, [r8, -r6]
    1168:	00001942 	andeq	r1, r0, r2, asr #18
    116c:	3f002e16 	svccc	0x00002e16
    1170:	3a0e0319 	bcc	381ddc <_Min_Stack_Size+0x3819dc>
    1174:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1178:	1119270b 	tstne	r9, fp, lsl #14
    117c:	40061201 	andmi	r1, r6, r1, lsl #4
    1180:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1184:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    1188:	03193f01 	tsteq	r9, #1, 30
    118c:	3b0b3a0e 	blcc	2cf9cc <_Min_Stack_Size+0x2cf5cc>
    1190:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1194:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1198:	97184006 	ldrls	r4, [r8, -r6]
    119c:	13011942 	movwne	r1, #6466	; 0x1942
    11a0:	05180000 	ldreq	r0, [r8, #-0]
    11a4:	3a0e0300 	bcc	381dac <_Min_Stack_Size+0x3819ac>
    11a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11b0:	19000018 	stmdbne	r0, {r3, r4}
    11b4:	0b0b000f 	bleq	2c11f8 <_Min_Stack_Size+0x2c0df8>
    11b8:	00001349 	andeq	r1, r0, r9, asr #6
    11bc:	3f002e1a 	svccc	0x00002e1a
    11c0:	3a0e0319 	bcc	381e2c <_Min_Stack_Size+0x381a2c>
    11c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11c8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    11cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    11d0:	96184006 	ldrls	r4, [r8], -r6
    11d4:	00001942 	andeq	r1, r0, r2, asr #18
    11d8:	3f002e1b 	svccc	0x00002e1b
    11dc:	3a0e0319 	bcc	381e48 <_Min_Stack_Size+0x381a48>
    11e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11e4:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    11e8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    11ec:	97184006 	ldrls	r4, [r8, -r6]
    11f0:	00001942 	andeq	r1, r0, r2, asr #18
    11f4:	3f012e1c 	svccc	0x00012e1c
    11f8:	3a0e0319 	bcc	381e64 <_Min_Stack_Size+0x381a64>
    11fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1200:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1204:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1208:	96184006 	ldrls	r4, [r8], -r6
    120c:	13011942 	movwne	r1, #6466	; 0x1942
    1210:	341d0000 	ldrcc	r0, [sp], #-0
    1214:	3a0e0300 	bcc	381e1c <_Min_Stack_Size+0x381a1c>
    1218:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    121c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1220:	1e000018 	mcrne	0, 0, r0, cr0, cr8, {0}
    1224:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1228:	0b3a0e03 	bleq	e84a3c <_Min_Stack_Size+0xe8463c>
    122c:	0b39053b 	bleq	e42720 <_Min_Stack_Size+0xe42320>
    1230:	01111927 	tsteq	r1, r7, lsr #18
    1234:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1238:	01194296 			; <UNDEFINED> instruction: 0x01194296
    123c:	1f000013 	svcne	0x00000013
    1240:	0111010b 	tsteq	r1, fp, lsl #2
    1244:	13010612 	movwne	r0, #5650	; 0x1612
    1248:	0b200000 	bleq	801250 <_Min_Stack_Size+0x800e50>
    124c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    1250:	21000006 	tstcs	r0, r6
    1254:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1258:	0b3a0e03 	bleq	e84a6c <_Min_Stack_Size+0xe8466c>
    125c:	0b390b3b 	bleq	e43f50 <_Min_Stack_Size+0xe43b50>
    1260:	13491927 	movtne	r1, #39207	; 0x9927
    1264:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1268:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    126c:	00130119 	andseq	r0, r3, r9, lsl r1
    1270:	00052200 	andeq	r2, r5, r0, lsl #4
    1274:	0b3a0e03 	bleq	e84a88 <_Min_Stack_Size+0xe84688>
    1278:	0b390b3b 	bleq	e43f6c <_Min_Stack_Size+0xe43b6c>
    127c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1280:	34230000 	strtcc	r0, [r3], #-0
    1284:	3a0e0300 	bcc	381e8c <_Min_Stack_Size+0x381a8c>
    1288:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    128c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1290:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
    1294:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    1298:	0b3a0e03 	bleq	e84aac <_Min_Stack_Size+0xe846ac>
    129c:	0b390b3b 	bleq	e43f90 <_Min_Stack_Size+0xe43b90>
    12a0:	13491927 	movtne	r1, #39207	; 0x9927
    12a4:	06120111 			; <UNDEFINED> instruction: 0x06120111
    12a8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    12ac:	00000019 	andeq	r0, r0, r9, lsl r0
    12b0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    12b4:	030b130e 	movweq	r1, #45838	; 0xb30e
    12b8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    12bc:	10011117 	andne	r1, r1, r7, lsl r1
    12c0:	02000017 	andeq	r0, r0, #23
    12c4:	0b0b0024 	bleq	2c135c <_Min_Stack_Size+0x2c0f5c>
    12c8:	0e030b3e 	vmoveq.16	d3[0], r0
    12cc:	16030000 	strne	r0, [r3], -r0
    12d0:	3a0e0300 	bcc	381ed8 <_Min_Stack_Size+0x381ad8>
    12d4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    12d8:	0013490b 	andseq	r4, r3, fp, lsl #18
    12dc:	00350400 	eorseq	r0, r5, r0, lsl #8
    12e0:	00001349 	andeq	r1, r0, r9, asr #6
    12e4:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
    12e8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    12ec:	0b0b0024 	bleq	2c1384 <_Min_Stack_Size+0x2c0f84>
    12f0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    12f4:	34070000 	strcc	r0, [r7], #-0
    12f8:	3a0e0300 	bcc	381f00 <_Min_Stack_Size+0x381b00>
    12fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1300:	3f13490b 	svccc	0x0013490b
    1304:	00193c19 	andseq	r3, r9, r9, lsl ip
    1308:	00340800 	eorseq	r0, r4, r0, lsl #16
    130c:	0b3a0e03 	bleq	e84b20 <_Min_Stack_Size+0xe84720>
    1310:	0b390b3b 	bleq	e44004 <_Min_Stack_Size+0xe43c04>
    1314:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1318:	0000193c 	andeq	r1, r0, ip, lsr r9
    131c:	49010109 	stmdbmi	r1, {r0, r3, r8}
    1320:	00130113 	andseq	r0, r3, r3, lsl r1
    1324:	00210a00 	eoreq	r0, r1, r0, lsl #20
    1328:	0b2f1349 	bleq	bc6054 <_Min_Stack_Size+0xbc5c54>
    132c:	130b0000 	movwne	r0, #45056	; 0xb000
    1330:	3a0b0b01 	bcc	2c3f3c <_Min_Stack_Size+0x2c3b3c>
    1334:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1338:	0013010b 	andseq	r0, r3, fp, lsl #2
    133c:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1340:	0b3a0803 	bleq	e83354 <_Min_Stack_Size+0xe82f54>
    1344:	0b39053b 	bleq	e42838 <_Min_Stack_Size+0xe42438>
    1348:	0b381349 	bleq	e06074 <_Min_Stack_Size+0xe05c74>
    134c:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    1350:	3a0e0300 	bcc	381f58 <_Min_Stack_Size+0x381b58>
    1354:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1358:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    135c:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    1360:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1364:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1368:	13490b39 	movtne	r0, #39737	; 0x9b39
    136c:	040f0000 	streq	r0, [pc], #-0	; 1374 <_Min_Stack_Size+0xf74>
    1370:	0b0b3e01 	bleq	2d0b7c <_Min_Stack_Size+0x2d077c>
    1374:	3a13490b 	bcc	4d37a8 <_Min_Stack_Size+0x4d33a8>
    1378:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    137c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1380:	00281000 	eoreq	r1, r8, r0
    1384:	0b1c0e03 	bleq	704b98 <_Min_Stack_Size+0x704798>
    1388:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
    138c:	1c080300 	stcne	3, cr0, [r8], {-0}
    1390:	1200000b 	andne	r0, r0, #11
    1394:	0b0b0113 	bleq	2c17e8 <_Min_Stack_Size+0x2c13e8>
    1398:	0b3b0b3a 	bleq	ec4088 <_Min_Stack_Size+0xec3c88>
    139c:	13010b39 	movwne	r0, #6969	; 0x1b39
    13a0:	0d130000 	ldceq	0, cr0, [r3, #-0]
    13a4:	3a0e0300 	bcc	381fac <_Min_Stack_Size+0x381bac>
    13a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13ac:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    13b0:	1400000b 	strne	r0, [r0], #-11
    13b4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    13b8:	0b3a0b0b 	bleq	e83fec <_Min_Stack_Size+0xe83bec>
    13bc:	0b390b3b 	bleq	e440b0 <_Min_Stack_Size+0xe43cb0>
    13c0:	00001301 	andeq	r1, r0, r1, lsl #6
    13c4:	0b000f15 	bleq	5020 <_Min_Stack_Size+0x4c20>
    13c8:	0013490b 	andseq	r4, r3, fp, lsl #18
    13cc:	000f1600 	andeq	r1, pc, r0, lsl #12
    13d0:	00000b0b 	andeq	r0, r0, fp, lsl #22
    13d4:	27011517 	smladcs	r1, r7, r5, r1
    13d8:	00130119 	andseq	r0, r3, r9, lsl r1
    13dc:	00051800 	andeq	r1, r5, r0, lsl #16
    13e0:	00001349 	andeq	r1, r0, r9, asr #6
    13e4:	03000d19 	movweq	r0, #3353	; 0xd19
    13e8:	3b0b3a08 	blcc	2cfc10 <_Min_Stack_Size+0x2cf810>
    13ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13f0:	000b3813 	andeq	r3, fp, r3, lsl r8
    13f4:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
    13f8:	0b3a0e03 	bleq	e84c0c <_Min_Stack_Size+0xe8480c>
    13fc:	0b39053b 	bleq	e428f0 <_Min_Stack_Size+0xe424f0>
    1400:	13491927 	movtne	r1, #39207	; 0x9927
    1404:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1408:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    140c:	00130119 	andseq	r0, r3, r9, lsl r1
    1410:	00051b00 	andeq	r1, r5, r0, lsl #22
    1414:	0b3a0e03 	bleq	e84c28 <_Min_Stack_Size+0xe84828>
    1418:	0b39053b 	bleq	e4290c <_Min_Stack_Size+0xe4250c>
    141c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1420:	341c0000 	ldrcc	r0, [ip], #-0
    1424:	3a0e0300 	bcc	38202c <_Min_Stack_Size+0x381c2c>
    1428:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    142c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1430:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    1434:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1438:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    143c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1440:	00001802 	andeq	r1, r0, r2, lsl #16
    1444:	03012e1e 	movweq	r2, #7710	; 0x1e1e
    1448:	3b0b3a0e 	blcc	2cfc88 <_Min_Stack_Size+0x2cf888>
    144c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1450:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1454:	97184006 	ldrls	r4, [r8, -r6]
    1458:	13011942 	movwne	r1, #6466	; 0x1942
    145c:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    1460:	03193f01 	tsteq	r9, #1, 30
    1464:	3b0b3a0e 	blcc	2cfca4 <_Min_Stack_Size+0x2cf8a4>
    1468:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    146c:	11134919 	tstne	r3, r9, lsl r9
    1470:	40061201 	andmi	r1, r6, r1, lsl #4
    1474:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1478:	00001301 	andeq	r1, r0, r1, lsl #6
    147c:	3f012e20 	svccc	0x00012e20
    1480:	3a0e0319 	bcc	3820ec <_Min_Stack_Size+0x381cec>
    1484:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1488:	1119270b 	tstne	r9, fp, lsl #14
    148c:	40061201 	andmi	r1, r6, r1, lsl #4
    1490:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1494:	00001301 	andeq	r1, r0, r1, lsl #6
    1498:	3f012e21 	svccc	0x00012e21
    149c:	3a0e0319 	bcc	382108 <_Min_Stack_Size+0x381d08>
    14a0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14a4:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    14a8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    14ac:	96184006 	ldrls	r4, [r8], -r6
    14b0:	13011942 	movwne	r1, #6466	; 0x1942
    14b4:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    14b8:	03193f01 	tsteq	r9, #1, 30
    14bc:	3b0b3a0e 	blcc	2cfcfc <_Min_Stack_Size+0x2cf8fc>
    14c0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    14c4:	11134919 	tstne	r3, r9, lsl r9
    14c8:	40061201 	andmi	r1, r6, r1, lsl #4
    14cc:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    14d0:	05230000 	streq	r0, [r3, #-0]!
    14d4:	3a0e0300 	bcc	3820dc <_Min_Stack_Size+0x381cdc>
    14d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    14dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    14e0:	24000018 	strcs	r0, [r0], #-24	; 0xffffffe8
    14e4:	08030034 	stmdaeq	r3, {r2, r4, r5}
    14e8:	0b3b0b3a 	bleq	ec41d8 <_Min_Stack_Size+0xec3dd8>
    14ec:	13490b39 	movtne	r0, #39737	; 0x9b39
    14f0:	00001802 	andeq	r1, r0, r2, lsl #16
    14f4:	03003425 	movweq	r3, #1061	; 0x425
    14f8:	3b0b3a0e 	blcc	2cfd38 <_Min_Stack_Size+0x2cf938>
    14fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1500:	00180213 	andseq	r0, r8, r3, lsl r2
    1504:	11010000 	mrsne	r0, (UNDEF: 1)
    1508:	130e2501 	movwne	r2, #58625	; 0xe501
    150c:	1b0e030b 	blne	382140 <_Min_Stack_Size+0x381d40>
    1510:	1117550e 	tstne	r7, lr, lsl #10
    1514:	00171001 	andseq	r1, r7, r1
    1518:	00240200 	eoreq	r0, r4, r0, lsl #4
    151c:	0b3e0b0b 	bleq	f84150 <_Min_Stack_Size+0xf83d50>
    1520:	00000e03 	andeq	r0, r0, r3, lsl #28
    1524:	03001603 	movweq	r1, #1539	; 0x603
    1528:	3b0b3a0e 	blcc	2cfd68 <_Min_Stack_Size+0x2cf968>
    152c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1530:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    1534:	13490035 	movtne	r0, #36917	; 0x9035
    1538:	26050000 	strcs	r0, [r5], -r0
    153c:	00134900 	andseq	r4, r3, r0, lsl #18
    1540:	00240600 	eoreq	r0, r4, r0, lsl #12
    1544:	0b3e0b0b 	bleq	f84178 <_Min_Stack_Size+0xf83d78>
    1548:	00000803 	andeq	r0, r0, r3, lsl #16
    154c:	49010107 	stmdbmi	r1, {r0, r1, r2, r8}
    1550:	00130113 	andseq	r0, r3, r3, lsl r1
    1554:	00210800 	eoreq	r0, r1, r0, lsl #16
    1558:	0b2f1349 	bleq	bc6284 <_Min_Stack_Size+0xbc5e84>
    155c:	34090000 	strcc	r0, [r9], #-0
    1560:	3a0e0300 	bcc	382168 <_Min_Stack_Size+0x381d68>
    1564:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1568:	3f13490b 	svccc	0x0013490b
    156c:	00193c19 	andseq	r3, r9, r9, lsl ip
    1570:	00340a00 	eorseq	r0, r4, r0, lsl #20
    1574:	0b3a0e03 	bleq	e84d88 <_Min_Stack_Size+0xe84988>
    1578:	0b390b3b 	bleq	e4426c <_Min_Stack_Size+0xe43e6c>
    157c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    1580:	0000193c 	andeq	r1, r0, ip, lsr r9
    1584:	0b01130b 	bleq	461b8 <_Min_Stack_Size+0x45db8>
    1588:	3b0b3a0b 	blcc	2cfdbc <_Min_Stack_Size+0x2cf9bc>
    158c:	010b3905 	tsteq	fp, r5, lsl #18
    1590:	0c000013 	stceq	0, cr0, [r0], {19}
    1594:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1598:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    159c:	13490b39 	movtne	r0, #39737	; 0x9b39
    15a0:	00000b38 	andeq	r0, r0, r8, lsr fp
    15a4:	03000d0d 	movweq	r0, #3341	; 0xd0d
    15a8:	3b0b3a0e 	blcc	2cfde8 <_Min_Stack_Size+0x2cf9e8>
    15ac:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    15b0:	000b3813 	andeq	r3, fp, r3, lsl r8
    15b4:	00160e00 	andseq	r0, r6, r0, lsl #28
    15b8:	0b3a0e03 	bleq	e84dcc <_Min_Stack_Size+0xe849cc>
    15bc:	0b39053b 	bleq	e42ab0 <_Min_Stack_Size+0xe426b0>
    15c0:	00001349 	andeq	r1, r0, r9, asr #6
    15c4:	3e01040f 	cdpcc	4, 0, cr0, cr1, cr15, {0}
    15c8:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    15cc:	3b0b3a13 	blcc	2cfe20 <_Min_Stack_Size+0x2cfa20>
    15d0:	010b390b 	tsteq	fp, fp, lsl #18
    15d4:	10000013 	andne	r0, r0, r3, lsl r0
    15d8:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    15dc:	00000b1c 	andeq	r0, r0, ip, lsl fp
    15e0:	03002811 	movweq	r2, #2065	; 0x811
    15e4:	000b1c08 	andeq	r1, fp, r8, lsl #24
    15e8:	01131200 	tsteq	r3, r0, lsl #4
    15ec:	0b3a0b0b 	bleq	e84220 <_Min_Stack_Size+0xe83e20>
    15f0:	0b390b3b 	bleq	e442e4 <_Min_Stack_Size+0xe43ee4>
    15f4:	00001301 	andeq	r1, r0, r1, lsl #6
    15f8:	03000d13 	movweq	r0, #3347	; 0xd13
    15fc:	3b0b3a08 	blcc	2cfe24 <_Min_Stack_Size+0x2cfa24>
    1600:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1604:	000b3813 	andeq	r3, fp, r3, lsl r8
    1608:	000d1400 	andeq	r1, sp, r0, lsl #8
    160c:	0b3a0e03 	bleq	e84e20 <_Min_Stack_Size+0xe84a20>
    1610:	0b390b3b 	bleq	e44304 <_Min_Stack_Size+0xe43f04>
    1614:	0b381349 	bleq	e06340 <_Min_Stack_Size+0xe05f40>
    1618:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    161c:	03193f01 	tsteq	r9, #1, 30
    1620:	3b0b3a0e 	blcc	2cfe60 <_Min_Stack_Size+0x2cfa60>
    1624:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1628:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    162c:	97184006 	ldrls	r4, [r8, -r6]
    1630:	13011942 	movwne	r1, #6466	; 0x1942
    1634:	05160000 	ldreq	r0, [r6, #-0]
    1638:	3a0e0300 	bcc	382240 <_Min_Stack_Size+0x381e40>
    163c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1640:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1644:	17000018 	smladne	r0, r8, r0, r0
    1648:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    164c:	0b3a0e03 	bleq	e84e60 <_Min_Stack_Size+0xe84a60>
    1650:	0b39053b 	bleq	e42b44 <_Min_Stack_Size+0xe42744>
    1654:	01111927 	tsteq	r1, r7, lsr #18
    1658:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    165c:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1660:	18000013 	stmdane	r0, {r0, r1, r4}
    1664:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1668:	0b3a0e03 	bleq	e84e7c <_Min_Stack_Size+0xe84a7c>
    166c:	0b39053b 	bleq	e42b60 <_Min_Stack_Size+0xe42760>
    1670:	13491927 	movtne	r1, #39207	; 0x9927
    1674:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1678:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    167c:	00130119 	andseq	r0, r3, r9, lsl r1
    1680:	00341900 	eorseq	r1, r4, r0, lsl #18
    1684:	0b3a0803 	bleq	e83698 <_Min_Stack_Size+0xe83298>
    1688:	0b39053b 	bleq	e42b7c <_Min_Stack_Size+0xe4277c>
    168c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1690:	0f1a0000 	svceq	0x001a0000
    1694:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1698:	1b000013 	blne	16ec <_Min_Stack_Size+0x12ec>
    169c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    16a0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16a4:	13490b39 	movtne	r0, #39737	; 0x9b39
    16a8:	00001802 	andeq	r1, r0, r2, lsl #16
    16ac:	3f012e1c 	svccc	0x00012e1c
    16b0:	3a0e0319 	bcc	38231c <_Min_Stack_Size+0x381f1c>
    16b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16b8:	1119270b 	tstne	r9, fp, lsl #14
    16bc:	40061201 	andmi	r1, r6, r1, lsl #4
    16c0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    16c4:	00001301 	andeq	r1, r0, r1, lsl #6
    16c8:	0300051d 	movweq	r0, #1309	; 0x51d
    16cc:	3b0b3a0e 	blcc	2cff0c <_Min_Stack_Size+0x2cfb0c>
    16d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    16d4:	00180213 	andseq	r0, r8, r3, lsl r2
    16d8:	00341e00 	eorseq	r1, r4, r0, lsl #28
    16dc:	0b3a0e03 	bleq	e84ef0 <_Min_Stack_Size+0xe84af0>
    16e0:	0b390b3b 	bleq	e443d4 <_Min_Stack_Size+0xe43fd4>
    16e4:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    16e8:	0b1f0000 	bleq	7c16f0 <_Min_Stack_Size+0x7c12f0>
    16ec:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
    16f0:	00000006 	andeq	r0, r0, r6
    16f4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    16f8:	030b130e 	movweq	r1, #45838	; 0xb30e
    16fc:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1700:	10011117 	andne	r1, r1, r7, lsl r1
    1704:	02000017 	andeq	r0, r0, #23
    1708:	0b0b0024 	bleq	2c17a0 <_Min_Stack_Size+0x2c13a0>
    170c:	0e030b3e 	vmoveq.16	d3[0], r0
    1710:	16030000 	strne	r0, [r3], -r0
    1714:	3a0e0300 	bcc	38231c <_Min_Stack_Size+0x381f1c>
    1718:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    171c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1720:	00350400 	eorseq	r0, r5, r0, lsl #8
    1724:	00001349 	andeq	r1, r0, r9, asr #6
    1728:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
    172c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1730:	0b0b0024 	bleq	2c17c8 <_Min_Stack_Size+0x2c13c8>
    1734:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1738:	34070000 	strcc	r0, [r7], #-0
    173c:	3a0e0300 	bcc	382344 <_Min_Stack_Size+0x381f44>
    1740:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1744:	3f13490b 	svccc	0x0013490b
    1748:	00193c19 	andseq	r3, r9, r9, lsl ip
    174c:	00340800 	eorseq	r0, r4, r0, lsl #16
    1750:	0b3a0e03 	bleq	e84f64 <_Min_Stack_Size+0xe84b64>
    1754:	0b390b3b 	bleq	e44448 <_Min_Stack_Size+0xe44048>
    1758:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    175c:	0000193c 	andeq	r1, r0, ip, lsr r9
    1760:	49010109 	stmdbmi	r1, {r0, r3, r8}
    1764:	00130113 	andseq	r0, r3, r3, lsl r1
    1768:	00210a00 	eoreq	r0, r1, r0, lsl #20
    176c:	0b2f1349 	bleq	bc6498 <_Min_Stack_Size+0xbc6098>
    1770:	130b0000 	movwne	r0, #45056	; 0xb000
    1774:	3a0b0b01 	bcc	2c4380 <_Min_Stack_Size+0x2c3f80>
    1778:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    177c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1780:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1784:	0b3a0803 	bleq	e83798 <_Min_Stack_Size+0xe83398>
    1788:	0b39053b 	bleq	e42c7c <_Min_Stack_Size+0xe4287c>
    178c:	0b381349 	bleq	e064b8 <_Min_Stack_Size+0xe060b8>
    1790:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    1794:	3a0e0300 	bcc	38239c <_Min_Stack_Size+0x381f9c>
    1798:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    179c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    17a0:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    17a4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    17a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17ac:	13490b39 	movtne	r0, #39737	; 0x9b39
    17b0:	040f0000 	streq	r0, [pc], #-0	; 17b8 <_Min_Stack_Size+0x13b8>
    17b4:	0b0b3e01 	bleq	2d0fc0 <_Min_Stack_Size+0x2d0bc0>
    17b8:	3a13490b 	bcc	4d3bec <_Min_Stack_Size+0x4d37ec>
    17bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17c0:	0013010b 	andseq	r0, r3, fp, lsl #2
    17c4:	00281000 	eoreq	r1, r8, r0
    17c8:	0b1c0e03 	bleq	704fdc <_Min_Stack_Size+0x704bdc>
    17cc:	28110000 	ldmdacs	r1, {}	; <UNPREDICTABLE>
    17d0:	1c080300 	stcne	3, cr0, [r8], {-0}
    17d4:	1200000b 	andne	r0, r0, #11
    17d8:	0b0b0113 	bleq	2c1c2c <_Min_Stack_Size+0x2c182c>
    17dc:	0b3b0b3a 	bleq	ec44cc <_Min_Stack_Size+0xec40cc>
    17e0:	13010b39 	movwne	r0, #6969	; 0x1b39
    17e4:	0d130000 	ldceq	0, cr0, [r3, #-0]
    17e8:	3a0e0300 	bcc	3823f0 <_Min_Stack_Size+0x381ff0>
    17ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17f0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    17f4:	1400000b 	strne	r0, [r0], #-11
    17f8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    17fc:	0b3a0b0b 	bleq	e84430 <_Min_Stack_Size+0xe84030>
    1800:	0b390b3b 	bleq	e444f4 <_Min_Stack_Size+0xe440f4>
    1804:	00001301 	andeq	r1, r0, r1, lsl #6
    1808:	0b000f15 	bleq	5464 <_Min_Stack_Size+0x5064>
    180c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1810:	000f1600 	andeq	r1, pc, r0, lsl #12
    1814:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1818:	27011517 	smladcs	r1, r7, r5, r1
    181c:	00130119 	andseq	r0, r3, r9, lsl r1
    1820:	00051800 	andeq	r1, r5, r0, lsl #16
    1824:	00001349 	andeq	r1, r0, r9, asr #6
    1828:	03012e19 	movweq	r2, #7705	; 0x1e19
    182c:	3b0b3a0e 	blcc	2d006c <_Min_Stack_Size+0x2cfc6c>
    1830:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1834:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1838:	96184006 	ldrls	r4, [r8], -r6
    183c:	13011942 	movwne	r1, #6466	; 0x1942
    1840:	051a0000 	ldreq	r0, [sl, #-0]
    1844:	3a0e0300 	bcc	38244c <_Min_Stack_Size+0x38204c>
    1848:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    184c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1850:	1b000018 	blne	18b8 <_Min_Stack_Size+0x14b8>
    1854:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1858:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    185c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1860:	00001802 	andeq	r1, r0, r2, lsl #16
    1864:	03012e1c 	movweq	r2, #7708	; 0x1e1c
    1868:	3b0b3a0e 	blcc	2d00a8 <_Min_Stack_Size+0x2cfca8>
    186c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1870:	11134919 	tstne	r3, r9, lsl r9
    1874:	40061201 	andmi	r1, r6, r1, lsl #4
    1878:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    187c:	00001301 	andeq	r1, r0, r1, lsl #6
    1880:	03012e1d 	movweq	r2, #7709	; 0x1e1d
    1884:	3b0b3a0e 	blcc	2d00c4 <_Min_Stack_Size+0x2cfcc4>
    1888:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    188c:	11134919 	tstne	r3, r9, lsl r9
    1890:	40061201 	andmi	r1, r6, r1, lsl #4
    1894:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1898:	00001301 	andeq	r1, r0, r1, lsl #6
    189c:	0300341e 	movweq	r3, #1054	; 0x41e
    18a0:	3b0b3a08 	blcc	2d00c8 <_Min_Stack_Size+0x2cfcc8>
    18a4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    18a8:	00180213 	andseq	r0, r8, r3, lsl r2
    18ac:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
    18b0:	0b3a0e03 	bleq	e850c4 <_Min_Stack_Size+0xe84cc4>
    18b4:	0b39053b 	bleq	e42da8 <_Min_Stack_Size+0xe429a8>
    18b8:	01111927 	tsteq	r1, r7, lsr #18
    18bc:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    18c0:	01194297 			; <UNDEFINED> instruction: 0x01194297
    18c4:	20000013 	andcs	r0, r0, r3, lsl r0
    18c8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    18cc:	0b3a0e03 	bleq	e850e0 <_Min_Stack_Size+0xe84ce0>
    18d0:	0b39053b 	bleq	e42dc4 <_Min_Stack_Size+0xe429c4>
    18d4:	13491927 	movtne	r1, #39207	; 0x9927
    18d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    18dc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    18e0:	00130119 	andseq	r0, r3, r9, lsl r1
    18e4:	010b2100 	mrseq	r2, (UNDEF: 27)
    18e8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    18ec:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    18f0:	03193f01 	tsteq	r9, #1, 30
    18f4:	3b0b3a0e 	blcc	2d0134 <_Min_Stack_Size+0x2cfd34>
    18f8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    18fc:	11134919 	tstne	r3, r9, lsl r9
    1900:	40061201 	andmi	r1, r6, r1, lsl #4
    1904:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1908:	00001301 	andeq	r1, r0, r1, lsl #6
    190c:	3f012e23 	svccc	0x00012e23
    1910:	3a0e0319 	bcc	38257c <_Min_Stack_Size+0x38217c>
    1914:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1918:	1119270b 	tstne	r9, fp, lsl #14
    191c:	40061201 	andmi	r1, r6, r1, lsl #4
    1920:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1924:	00001301 	andeq	r1, r0, r1, lsl #6
    1928:	3f012e24 	svccc	0x00012e24
    192c:	3a0e0319 	bcc	382598 <_Min_Stack_Size+0x382198>
    1930:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1934:	1119270b 	tstne	r9, fp, lsl #14
    1938:	40061201 	andmi	r1, r6, r1, lsl #4
    193c:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1940:	00001301 	andeq	r1, r0, r1, lsl #6
    1944:	11010b25 	tstne	r1, r5, lsr #22
    1948:	01061201 	tsteq	r6, r1, lsl #4
    194c:	26000013 			; <UNDEFINED> instruction: 0x26000013
    1950:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
    1954:	00001301 	andeq	r1, r0, r1, lsl #6
    1958:	55010b27 	strpl	r0, [r1, #-2855]	; 0xfffff4d9
    195c:	28000017 	stmdacs	r0, {r0, r1, r2, r4}
    1960:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1964:	0b3a0e03 	bleq	e85178 <_Min_Stack_Size+0xe84d78>
    1968:	0b39053b 	bleq	e42e5c <_Min_Stack_Size+0xe42a5c>
    196c:	13491927 	movtne	r1, #39207	; 0x9927
    1970:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1974:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1978:	00000019 	andeq	r0, r0, r9, lsl r0
    197c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1980:	030b130e 	movweq	r1, #45838	; 0xb30e
    1984:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1988:	10011117 	andne	r1, r1, r7, lsl r1
    198c:	02000017 	andeq	r0, r0, #23
    1990:	0b0b0024 	bleq	2c1a28 <_Min_Stack_Size+0x2c1628>
    1994:	0e030b3e 	vmoveq.16	d3[0], r0
    1998:	26030000 	strcs	r0, [r3], -r0
    199c:	00134900 	andseq	r4, r3, r0, lsl #18
    19a0:	00240400 	eoreq	r0, r4, r0, lsl #8
    19a4:	0b3e0b0b 	bleq	f845d8 <_Min_Stack_Size+0xf841d8>
    19a8:	00000803 	andeq	r0, r0, r3, lsl #16
    19ac:	03001605 	movweq	r1, #1541	; 0x605
    19b0:	3b0b3a0e 	blcc	2d01f0 <_Min_Stack_Size+0x2cfdf0>
    19b4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    19b8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    19bc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    19c0:	0b3a0b0b 	bleq	e845f4 <_Min_Stack_Size+0xe841f4>
    19c4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    19c8:	0d070000 	stceq	0, cr0, [r7, #-0]
    19cc:	490e0300 	stmdbmi	lr, {r8, r9}
    19d0:	340b3813 	strcc	r3, [fp], #-2067	; 0xfffff7ed
    19d4:	08000019 	stmdaeq	r0, {r0, r3, r4}
    19d8:	0b0b000f 	bleq	2c1a1c <_Min_Stack_Size+0x2c161c>
    19dc:	0f090000 	svceq	0x00090000
    19e0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    19e4:	0a000013 	beq	1a38 <_Min_Stack_Size+0x1638>
    19e8:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    19ec:	00001301 	andeq	r1, r0, r1, lsl #6
    19f0:	4900050b 	stmdbmi	r0, {r0, r1, r3, r8, sl}
    19f4:	0c000013 	stceq	0, cr0, [r0], {19}
    19f8:	0b0b0113 	bleq	2c1e4c <_Min_Stack_Size+0x2c1a4c>
    19fc:	0b3b0b3a 	bleq	ec46ec <_Min_Stack_Size+0xec42ec>
    1a00:	13010b39 	movwne	r0, #6969	; 0x1b39
    1a04:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    1a08:	3a080300 	bcc	202610 <_Min_Stack_Size+0x202210>
    1a0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a10:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1a14:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    1a18:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1a1c:	0b3a0e03 	bleq	e85230 <_Min_Stack_Size+0xe84e30>
    1a20:	0b39053b 	bleq	e42f14 <_Min_Stack_Size+0xe42b14>
    1a24:	13491927 	movtne	r1, #39207	; 0x9927
    1a28:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1a2c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1a30:	00130119 	andseq	r0, r3, r9, lsl r1
    1a34:	00050f00 	andeq	r0, r5, r0, lsl #30
    1a38:	0b3a0803 	bleq	e83a4c <_Min_Stack_Size+0xe8364c>
    1a3c:	0b39053b 	bleq	e42f30 <_Min_Stack_Size+0xe42b30>
    1a40:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1a44:	05100000 	ldreq	r0, [r0, #-0]
    1a48:	3a0e0300 	bcc	382650 <_Min_Stack_Size+0x382250>
    1a4c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a50:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1a54:	11000018 	tstne	r0, r8, lsl r0
    1a58:	00000018 	andeq	r0, r0, r8, lsl r0
    1a5c:	03003412 	movweq	r3, #1042	; 0x412
    1a60:	3b0b3a08 	blcc	2d0288 <_Min_Stack_Size+0x2cfe88>
    1a64:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1a68:	00180213 	andseq	r0, r8, r3, lsl r2
    1a6c:	00341300 	eorseq	r1, r4, r0, lsl #6
    1a70:	0b3a0e03 	bleq	e85284 <_Min_Stack_Size+0xe84e84>
    1a74:	0b39053b 	bleq	e42f68 <_Min_Stack_Size+0xe42b68>
    1a78:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1a7c:	01140000 	tsteq	r4, r0
    1a80:	01134901 	tsteq	r3, r1, lsl #18
    1a84:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    1a88:	13490021 	movtne	r0, #36897	; 0x9021
    1a8c:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1a90:	03012e16 	movweq	r2, #7702	; 0x1e16
    1a94:	3b0b3a0e 	blcc	2d02d4 <_Min_Stack_Size+0x2cfed4>
    1a98:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1a9c:	11134919 	tstne	r3, r9, lsl r9
    1aa0:	40061201 	andmi	r1, r6, r1, lsl #4
    1aa4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1aa8:	00001301 	andeq	r1, r0, r1, lsl #6
    1aac:	11010b17 	tstne	r1, r7, lsl fp
    1ab0:	01061201 	tsteq	r6, r1, lsl #4
    1ab4:	18000013 	stmdane	r0, {r0, r1, r4}
    1ab8:	0111010b 	tsteq	r1, fp, lsl #2
    1abc:	00000612 	andeq	r0, r0, r2, lsl r6
    1ac0:	03012e19 	movweq	r2, #7705	; 0x1e19
    1ac4:	3b0b3a0e 	blcc	2d0304 <_Min_Stack_Size+0x2cff04>
    1ac8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1acc:	11134919 	tstne	r3, r9, lsl r9
    1ad0:	40061201 	andmi	r1, r6, r1, lsl #4
    1ad4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1ad8:	00001301 	andeq	r1, r0, r1, lsl #6
    1adc:	0300051a 	movweq	r0, #1306	; 0x51a
    1ae0:	3b0b3a08 	blcc	2d0308 <_Min_Stack_Size+0x2cff08>
    1ae4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ae8:	00180213 	andseq	r0, r8, r3, lsl r2
    1aec:	00051b00 	andeq	r1, r5, r0, lsl #22
    1af0:	0b3a0e03 	bleq	e85304 <_Min_Stack_Size+0xe84f04>
    1af4:	0b390b3b 	bleq	e447e8 <_Min_Stack_Size+0xe443e8>
    1af8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1afc:	341c0000 	ldrcc	r0, [ip], #-0
    1b00:	3a0e0300 	bcc	382708 <_Min_Stack_Size+0x382308>
    1b04:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b08:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1b0c:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    1b10:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1b14:	0b3b0b3a 	bleq	ec4804 <_Min_Stack_Size+0xec4404>
    1b18:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b1c:	00001802 	andeq	r1, r0, r2, lsl #16
    1b20:	03012e1e 	movweq	r2, #7710	; 0x1e1e
    1b24:	3b0b3a0e 	blcc	2d0364 <_Min_Stack_Size+0x2cff64>
    1b28:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1b2c:	11134919 	tstne	r3, r9, lsl r9
    1b30:	40061201 	andmi	r1, r6, r1, lsl #4
    1b34:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1b38:	00001301 	andeq	r1, r0, r1, lsl #6
    1b3c:	03012e1f 	movweq	r2, #7711	; 0x1e1f
    1b40:	3b0b3a0e 	blcc	2d0380 <_Min_Stack_Size+0x2cff80>
    1b44:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1b48:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1b4c:	96184006 	ldrls	r4, [r8], -r6
    1b50:	13011942 	movwne	r1, #6466	; 0x1942
    1b54:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
    1b58:	3a0e0301 	bcc	382764 <_Min_Stack_Size+0x382364>
    1b5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b60:	1119270b 	tstne	r9, fp, lsl #14
    1b64:	40061201 	andmi	r1, r6, r1, lsl #4
    1b68:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1b6c:	00001301 	andeq	r1, r0, r1, lsl #6
    1b70:	03012e21 	movweq	r2, #7713	; 0x1e21
    1b74:	3b0b3a0e 	blcc	2d03b4 <_Min_Stack_Size+0x2cffb4>
    1b78:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1b7c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    1b80:	97184006 	ldrls	r4, [r8, -r6]
    1b84:	00001942 	andeq	r1, r0, r2, asr #18
    1b88:	01110100 	tsteq	r1, r0, lsl #2
    1b8c:	0b130e25 	bleq	4c5428 <_Min_Stack_Size+0x4c5028>
    1b90:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1b94:	01111755 	tsteq	r1, r5, asr r7
    1b98:	00001710 	andeq	r1, r0, r0, lsl r7
    1b9c:	03001602 	movweq	r1, #1538	; 0x602
    1ba0:	3b0b3a0e 	blcc	2d03e0 <_Min_Stack_Size+0x2cffe0>
    1ba4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ba8:	03000013 	movweq	r0, #19
    1bac:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1bb0:	0b3a0b0b 	bleq	e847e4 <_Min_Stack_Size+0xe843e4>
    1bb4:	13010b3b 	movwne	r0, #6971	; 0x1b3b
    1bb8:	0d040000 	stceq	0, cr0, [r4, #-0]
    1bbc:	490e0300 	stmdbmi	lr, {r8, r9}
    1bc0:	340b3813 	strcc	r3, [fp], #-2067	; 0xfffff7ed
    1bc4:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    1bc8:	0b0b000f 	bleq	2c1c0c <_Min_Stack_Size+0x2c180c>
    1bcc:	24060000 	strcs	r0, [r6], #-0
    1bd0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1bd4:	000e030b 	andeq	r0, lr, fp, lsl #6
    1bd8:	00240700 	eoreq	r0, r4, r0, lsl #14
    1bdc:	0b3e0b0b 	bleq	f84810 <_Min_Stack_Size+0xf84410>
    1be0:	00000803 	andeq	r0, r0, r3, lsl #16
    1be4:	3f012e08 	svccc	0x00012e08
    1be8:	3a0e0319 	bcc	382854 <_Min_Stack_Size+0x382454>
    1bec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bf0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1bf4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1bf8:	96184006 	ldrls	r4, [r8], -r6
    1bfc:	13011942 	movwne	r1, #6466	; 0x1942
    1c00:	05090000 	streq	r0, [r9, #-0]
    1c04:	3a080300 	bcc	20280c <_Min_Stack_Size+0x20240c>
    1c08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c0c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1c10:	0a000018 	beq	1c78 <_Min_Stack_Size+0x1878>
    1c14:	00000018 	andeq	r0, r0, r8, lsl r0
    1c18:	0300340b 	movweq	r3, #1035	; 0x40b
    1c1c:	3b0b3a08 	blcc	2d0444 <_Min_Stack_Size+0x2d0044>
    1c20:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c24:	00180213 	andseq	r0, r8, r3, lsl r2
    1c28:	00340c00 	eorseq	r0, r4, r0, lsl #24
    1c2c:	0b3a0e03 	bleq	e85440 <_Min_Stack_Size+0xe85040>
    1c30:	0b390b3b 	bleq	e44924 <_Min_Stack_Size+0xe44524>
    1c34:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1c38:	0f0d0000 	svceq	0x000d0000
    1c3c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1c40:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1c44:	13490026 	movtne	r0, #36902	; 0x9026
    1c48:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    1c4c:	3a0e0301 	bcc	382858 <_Min_Stack_Size+0x382458>
    1c50:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c54:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1c58:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1c5c:	97184006 	ldrls	r4, [r8, -r6]
    1c60:	13011942 	movwne	r1, #6466	; 0x1942
    1c64:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    1c68:	03193f01 	tsteq	r9, #1, 30
    1c6c:	3b0b3a0e 	blcc	2d04ac <_Min_Stack_Size+0x2d00ac>
    1c70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1c74:	11134919 	tstne	r3, r9, lsl r9
    1c78:	40061201 	andmi	r1, r6, r1, lsl #4
    1c7c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1c80:	00001301 	andeq	r1, r0, r1, lsl #6
    1c84:	3f012e11 	svccc	0x00012e11
    1c88:	3a0e0319 	bcc	3828f4 <_Min_Stack_Size+0x3824f4>
    1c8c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c90:	1119270b 	tstne	r9, fp, lsl #14
    1c94:	40061201 	andmi	r1, r6, r1, lsl #4
    1c98:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    1c9c:	00001301 	andeq	r1, r0, r1, lsl #6
    1ca0:	03000512 	movweq	r0, #1298	; 0x512
    1ca4:	3b0b3a0e 	blcc	2d04e4 <_Min_Stack_Size+0x2d00e4>
    1ca8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1cac:	00180213 	andseq	r0, r8, r3, lsl r2
    1cb0:	002e1300 	eoreq	r1, lr, r0, lsl #6
    1cb4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1cb8:	0b3b0b3a 	bleq	ec49a8 <_Min_Stack_Size+0xec45a8>
    1cbc:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1cc0:	01111349 	tsteq	r1, r9, asr #6
    1cc4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1cc8:	00194296 	mulseq	r9, r6, r2
    1ccc:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    1cd0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1cd4:	0b3b0b3a 	bleq	ec49c4 <_Min_Stack_Size+0xec45c4>
    1cd8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1cdc:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1ce0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1ce4:	00000019 	andeq	r0, r0, r9, lsl r0
    1ce8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1cec:	030b130e 	movweq	r1, #45838	; 0xb30e
    1cf0:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1cf4:	10011117 	andne	r1, r1, r7, lsl r1
    1cf8:	02000017 	andeq	r0, r0, #23
    1cfc:	0b0b0024 	bleq	2c1d94 <_Min_Stack_Size+0x2c1994>
    1d00:	0e030b3e 	vmoveq.16	d3[0], r0
    1d04:	16030000 	strne	r0, [r3], -r0
    1d08:	3a0e0300 	bcc	382910 <_Min_Stack_Size+0x382510>
    1d0c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d10:	0013490b 	andseq	r4, r3, fp, lsl #18
    1d14:	00240400 	eoreq	r0, r4, r0, lsl #8
    1d18:	0b3e0b0b 	bleq	f8494c <_Min_Stack_Size+0xf8454c>
    1d1c:	00000803 	andeq	r0, r0, r3, lsl #16
    1d20:	0b000f05 	bleq	593c <_Min_Stack_Size+0x553c>
    1d24:	0600000b 	streq	r0, [r0], -fp
    1d28:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1d2c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d30:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d34:	17070000 	strne	r0, [r7, -r0]
    1d38:	3a0b0b01 	bcc	2c4944 <_Min_Stack_Size+0x2c4544>
    1d3c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d40:	0013010b 	andseq	r0, r3, fp, lsl #2
    1d44:	000d0800 	andeq	r0, sp, r0, lsl #16
    1d48:	0b3a0e03 	bleq	e8555c <_Min_Stack_Size+0xe8515c>
    1d4c:	0b390b3b 	bleq	e44a40 <_Min_Stack_Size+0xe44640>
    1d50:	00001349 	andeq	r1, r0, r9, asr #6
    1d54:	49010109 	stmdbmi	r1, {r0, r3, r8}
    1d58:	00130113 	andseq	r0, r3, r3, lsl r1
    1d5c:	00210a00 	eoreq	r0, r1, r0, lsl #20
    1d60:	0b2f1349 	bleq	bc6a8c <_Min_Stack_Size+0xbc668c>
    1d64:	130b0000 	movwne	r0, #45056	; 0xb000
    1d68:	3a0b0b01 	bcc	2c4974 <_Min_Stack_Size+0x2c4574>
    1d6c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d70:	0013010b 	andseq	r0, r3, fp, lsl #2
    1d74:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1d78:	0b3a0e03 	bleq	e8558c <_Min_Stack_Size+0xe8518c>
    1d7c:	0b390b3b 	bleq	e44a70 <_Min_Stack_Size+0xe44670>
    1d80:	0b381349 	bleq	e06aac <_Min_Stack_Size+0xe066ac>
    1d84:	130d0000 	movwne	r0, #53248	; 0xd000
    1d88:	0b0e0301 	bleq	382994 <_Min_Stack_Size+0x382594>
    1d8c:	3b0b3a0b 	blcc	2d05c0 <_Min_Stack_Size+0x2d01c0>
    1d90:	010b390b 	tsteq	fp, fp, lsl #18
    1d94:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1d98:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1d9c:	0b3b0b3a 	bleq	ec4a8c <_Min_Stack_Size+0xec468c>
    1da0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1da4:	00000b38 	andeq	r0, r0, r8, lsr fp
    1da8:	0b000f0f 	bleq	59ec <_Min_Stack_Size+0x55ec>
    1dac:	0013490b 	andseq	r4, r3, fp, lsl #18
    1db0:	01131000 	tsteq	r3, r0
    1db4:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    1db8:	0b3b0b3a 	bleq	ec4aa8 <_Min_Stack_Size+0xec46a8>
    1dbc:	13010b39 	movwne	r0, #6969	; 0x1b39
    1dc0:	0d110000 	ldceq	0, cr0, [r1, #-0]
    1dc4:	3a0e0300 	bcc	3829cc <_Min_Stack_Size+0x3825cc>
    1dc8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1dcc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1dd0:	12000005 	andne	r0, r0, #5
    1dd4:	19270015 	stmdbne	r7!, {r0, r2, r4}
    1dd8:	15130000 	ldrne	r0, [r3, #-0]
    1ddc:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
    1de0:	00130113 	andseq	r0, r3, r3, lsl r1
    1de4:	00051400 	andeq	r1, r5, r0, lsl #8
    1de8:	00001349 	andeq	r1, r0, r9, asr #6
    1dec:	49002615 	stmdbmi	r0, {r0, r2, r4, r9, sl, sp}
    1df0:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1df4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1df8:	0b3a050b 	bleq	e8322c <_Min_Stack_Size+0xe82e2c>
    1dfc:	0b39053b 	bleq	e432f0 <_Min_Stack_Size+0xe42ef0>
    1e00:	00001301 	andeq	r1, r0, r1, lsl #6
    1e04:	03000d17 	movweq	r0, #3351	; 0xd17
    1e08:	3b0b3a0e 	blcc	2d0648 <_Min_Stack_Size+0x2d0248>
    1e0c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1e10:	000b3813 	andeq	r3, fp, r3, lsl r8
    1e14:	000d1800 	andeq	r1, sp, r0, lsl #16
    1e18:	0b3a0e03 	bleq	e8562c <_Min_Stack_Size+0xe8522c>
    1e1c:	0b39053b 	bleq	e43310 <_Min_Stack_Size+0xe42f10>
    1e20:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
    1e24:	13190000 	tstne	r9, #0
    1e28:	0b0e0301 	bleq	382a34 <_Min_Stack_Size+0x382634>
    1e2c:	3b0b3a0b 	blcc	2d0660 <_Min_Stack_Size+0x2d0260>
    1e30:	010b3905 	tsteq	fp, r5, lsl #18
    1e34:	1a000013 	bne	1e88 <_Min_Stack_Size+0x1a88>
    1e38:	0b0b0113 	bleq	2c228c <_Min_Stack_Size+0x2c1e8c>
    1e3c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1e40:	13010b39 	movwne	r0, #6969	; 0x1b39
    1e44:	171b0000 	ldrne	r0, [fp, -r0]
    1e48:	3a0b0b01 	bcc	2c4a54 <_Min_Stack_Size+0x2c4654>
    1e4c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e50:	0013010b 	andseq	r0, r3, fp, lsl #2
    1e54:	000d1c00 	andeq	r1, sp, r0, lsl #24
    1e58:	0b3a0e03 	bleq	e8566c <_Min_Stack_Size+0xe8526c>
    1e5c:	0b39053b 	bleq	e43350 <_Min_Stack_Size+0xe42f50>
    1e60:	00001349 	andeq	r1, r0, r9, asr #6
    1e64:	0300131d 	movweq	r1, #797	; 0x31d
    1e68:	00193c0e 	andseq	r3, r9, lr, lsl #24
    1e6c:	01151e00 	tsteq	r5, r0, lsl #28
    1e70:	13011927 	movwne	r1, #6439	; 0x1927
    1e74:	341f0000 	ldrcc	r0, [pc], #-0	; 1e7c <_Min_Stack_Size+0x1a7c>
    1e78:	3a0e0300 	bcc	382a80 <_Min_Stack_Size+0x382680>
    1e7c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e80:	3f13490b 	svccc	0x0013490b
    1e84:	00193c19 	andseq	r3, r9, r9, lsl ip
    1e88:	00352000 	eorseq	r2, r5, r0
    1e8c:	00001349 	andeq	r1, r0, r9, asr #6
    1e90:	3e010421 	cdpcc	4, 0, cr0, cr1, cr1, {1}
    1e94:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1e98:	3b0b3a13 	blcc	2d06ec <_Min_Stack_Size+0x2d02ec>
    1e9c:	010b390b 	tsteq	fp, fp, lsl #18
    1ea0:	22000013 	andcs	r0, r0, #19
    1ea4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1ea8:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1eac:	03002823 	movweq	r2, #2083	; 0x823
    1eb0:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    1eb4:	01132400 	tsteq	r3, r0, lsl #8
    1eb8:	0b3a050b 	bleq	e832ec <_Min_Stack_Size+0xe82eec>
    1ebc:	0b39053b 	bleq	e433b0 <_Min_Stack_Size+0xe42fb0>
    1ec0:	00001301 	andeq	r1, r0, r1, lsl #6
    1ec4:	03000d25 	movweq	r0, #3365	; 0xd25
    1ec8:	3b0b3a08 	blcc	2d06f0 <_Min_Stack_Size+0x2d02f0>
    1ecc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1ed0:	00053813 	andeq	r3, r5, r3, lsl r8
    1ed4:	00212600 	eoreq	r2, r1, r0, lsl #12
    1ed8:	052f1349 	streq	r1, [pc, #-841]!	; 1b97 <_Min_Stack_Size+0x1797>
    1edc:	0d270000 	stceq	0, cr0, [r7, #-0]
    1ee0:	3a080300 	bcc	202ae8 <_Min_Stack_Size+0x2026e8>
    1ee4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ee8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1eec:	2800000b 	stmdacs	r0, {r0, r1, r3}
    1ef0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1ef4:	0b3b0b3a 	bleq	ec4be4 <_Min_Stack_Size+0xec47e4>
    1ef8:	13490b39 	movtne	r0, #39737	; 0x9b39
    1efc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1f00:	34290000 	strtcc	r0, [r9], #-0
    1f04:	3a0e0300 	bcc	382b0c <_Min_Stack_Size+0x38270c>
    1f08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f0c:	3f13490b 	svccc	0x0013490b
    1f10:	00180219 	andseq	r0, r8, r9, lsl r2
    1f14:	002e2a00 	eoreq	r2, lr, r0, lsl #20
    1f18:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1f1c:	0b3b0b3a 	bleq	ec4c0c <_Min_Stack_Size+0xec480c>
    1f20:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1f24:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1f28:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1f2c:	2b000019 	blcs	1f98 <_Min_Stack_Size+0x1b98>
    1f30:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1f34:	0b3a0e03 	bleq	e85748 <_Min_Stack_Size+0xe85348>
    1f38:	0b390b3b 	bleq	e44c2c <_Min_Stack_Size+0xe4482c>
    1f3c:	01111927 	tsteq	r1, r7, lsr #18
    1f40:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    1f44:	01194296 			; <UNDEFINED> instruction: 0x01194296
    1f48:	2c000013 	stccs	0, cr0, [r0], {19}
    1f4c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1f50:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1f54:	0b590b58 	bleq	1644cbc <_Min_Stack_Size+0x16448bc>
    1f58:	00000b57 	andeq	r0, r0, r7, asr fp
    1f5c:	3100052d 	tstcc	r0, sp, lsr #10
    1f60:	00180213 	andseq	r0, r8, r3, lsl r2
    1f64:	012e2e00 			; <UNDEFINED> instruction: 0x012e2e00
    1f68:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    1f6c:	0b3b0b3a 	bleq	ec4c5c <_Min_Stack_Size+0xec485c>
    1f70:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    1f74:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1f78:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    1f7c:	00130119 	andseq	r0, r3, r9, lsl r1
    1f80:	00052f00 	andeq	r2, r5, r0, lsl #30
    1f84:	0b3a0e03 	bleq	e85798 <_Min_Stack_Size+0xe85398>
    1f88:	0b390b3b 	bleq	e44c7c <_Min_Stack_Size+0xe4487c>
    1f8c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1f90:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    1f94:	03193f01 	tsteq	r9, #1, 30
    1f98:	3b0b3a0e 	blcc	2d07d8 <_Min_Stack_Size+0x2d03d8>
    1f9c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1fa0:	11134919 	tstne	r3, r9, lsl r9
    1fa4:	40061201 	andmi	r1, r6, r1, lsl #4
    1fa8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1fac:	00001301 	andeq	r1, r0, r1, lsl #6
    1fb0:	03003431 	movweq	r3, #1073	; 0x431
    1fb4:	3b0b3a0e 	blcc	2d07f4 <_Min_Stack_Size+0x2d03f4>
    1fb8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1fbc:	00180213 	andseq	r0, r8, r3, lsl r2
    1fc0:	011d3200 	tsteq	sp, r0, lsl #4
    1fc4:	01111331 	tsteq	r1, r1, lsr r3
    1fc8:	0b580612 	bleq	1603818 <_Min_Stack_Size+0x1603418>
    1fcc:	0b570b59 	bleq	15c4d38 <_Min_Stack_Size+0x15c4938>
    1fd0:	00001301 	andeq	r1, r0, r1, lsl #6
    1fd4:	11010b33 	tstne	r1, r3, lsr fp
    1fd8:	00061201 	andeq	r1, r6, r1, lsl #4
    1fdc:	00343400 	eorseq	r3, r4, r0, lsl #8
    1fe0:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    1fe4:	1d350000 	ldcne	0, cr0, [r5, #-0]
    1fe8:	11133100 	tstne	r3, r0, lsl #2
    1fec:	58061201 	stmdapl	r6, {r0, r9, ip}
    1ff0:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1ff4:	3600000b 	strcc	r0, [r0], -fp
    1ff8:	0e03012e 	adfeqsp	f0, f3, #0.5
    1ffc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2000:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2004:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2008:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    200c:	00130119 	andseq	r0, r3, r9, lsl r1
    2010:	00053700 	andeq	r3, r5, r0, lsl #14
    2014:	0b3a0e03 	bleq	e85828 <_Min_Stack_Size+0xe85428>
    2018:	0b39053b 	bleq	e4350c <_Min_Stack_Size+0xe4310c>
    201c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2020:	2e380000 	cdpcs	0, 3, cr0, cr8, cr0, {0}
    2024:	3a0e0301 	bcc	382c30 <_Min_Stack_Size+0x382830>
    2028:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    202c:	2019270b 	andscs	r2, r9, fp, lsl #14
    2030:	0013010b 	andseq	r0, r3, fp, lsl #2
    2034:	00053900 	andeq	r3, r5, r0, lsl #18
    2038:	0b3a0e03 	bleq	e8584c <_Min_Stack_Size+0xe8544c>
    203c:	0b39053b 	bleq	e43530 <_Min_Stack_Size+0xe43130>
    2040:	00001349 	andeq	r1, r0, r9, asr #6
    2044:	03012e3a 	movweq	r2, #7738	; 0x1e3a
    2048:	3b0b3a0e 	blcc	2d0888 <_Min_Stack_Size+0x2d0488>
    204c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2050:	20134919 	andscs	r4, r3, r9, lsl r9
    2054:	0013010b 	andseq	r0, r3, fp, lsl #2
    2058:	00343b00 	eorseq	r3, r4, r0, lsl #22
    205c:	0b3a0e03 	bleq	e85870 <_Min_Stack_Size+0xe85470>
    2060:	0b39053b 	bleq	e43554 <_Min_Stack_Size+0xe43154>
    2064:	00001349 	andeq	r1, r0, r9, asr #6
    2068:	03002e3c 	movweq	r2, #3644	; 0xe3c
    206c:	3b0b3a0e 	blcc	2d08ac <_Min_Stack_Size+0x2d04ac>
    2070:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2074:	000b2019 	andeq	r2, fp, r9, lsl r0
    2078:	11010000 	mrsne	r0, (UNDEF: 1)
    207c:	130e2501 	movwne	r2, #58625	; 0xe501
    2080:	1b0e030b 	blne	382cb4 <_Min_Stack_Size+0x3828b4>
    2084:	1117550e 	tstne	r7, lr, lsl #10
    2088:	00171001 	andseq	r1, r7, r1
    208c:	00240200 	eoreq	r0, r4, r0, lsl #4
    2090:	0b3e0b0b 	bleq	f84cc4 <_Min_Stack_Size+0xf848c4>
    2094:	00000e03 	andeq	r0, r0, r3, lsl #28
    2098:	03001603 	movweq	r1, #1539	; 0x603
    209c:	3b0b3a0e 	blcc	2d08dc <_Min_Stack_Size+0x2d04dc>
    20a0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    20a4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    20a8:	13490035 	movtne	r0, #36917	; 0x9035
    20ac:	26050000 	strcs	r0, [r5], -r0
    20b0:	00134900 	andseq	r4, r3, r0, lsl #18
    20b4:	00240600 	eoreq	r0, r4, r0, lsl #12
    20b8:	0b3e0b0b 	bleq	f84cec <_Min_Stack_Size+0xf848ec>
    20bc:	00000803 	andeq	r0, r0, r3, lsl #16
    20c0:	3e010407 	cdpcc	4, 0, cr0, cr1, cr7, {0}
    20c4:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    20c8:	3b0b3a13 	blcc	2d091c <_Min_Stack_Size+0x2d051c>
    20cc:	010b390b 	tsteq	fp, fp, lsl #18
    20d0:	08000013 	stmdaeq	r0, {r0, r1, r4}
    20d4:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    20d8:	00000d1c 	andeq	r0, r0, ip, lsl sp
    20dc:	03002809 	movweq	r2, #2057	; 0x809
    20e0:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    20e4:	01130a00 	tsteq	r3, r0, lsl #20
    20e8:	0b3a050b 	bleq	e8351c <_Min_Stack_Size+0xe8311c>
    20ec:	0b39053b 	bleq	e435e0 <_Min_Stack_Size+0xe431e0>
    20f0:	00001301 	andeq	r1, r0, r1, lsl #6
    20f4:	03000d0b 	movweq	r0, #3339	; 0xd0b
    20f8:	3b0b3a0e 	blcc	2d0938 <_Min_Stack_Size+0x2d0538>
    20fc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2100:	000b3813 	andeq	r3, fp, r3, lsl r8
    2104:	000d0c00 	andeq	r0, sp, r0, lsl #24
    2108:	0b3a0e03 	bleq	e8591c <_Min_Stack_Size+0xe8551c>
    210c:	0b39053b 	bleq	e43600 <_Min_Stack_Size+0xe43200>
    2110:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
    2114:	0d0d0000 	stceq	0, cr0, [sp, #-0]
    2118:	3a080300 	bcc	202d20 <_Min_Stack_Size+0x202920>
    211c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2120:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2124:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    2128:	13490101 	movtne	r0, #37121	; 0x9101
    212c:	00001301 	andeq	r1, r0, r1, lsl #6
    2130:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    2134:	000b2f13 	andeq	r2, fp, r3, lsl pc
    2138:	00211000 	eoreq	r1, r1, r0
    213c:	052f1349 	streq	r1, [pc, #-841]!	; 1dfb <_Min_Stack_Size+0x19fb>
    2140:	16110000 	ldrne	r0, [r1], -r0
    2144:	3a0e0300 	bcc	382d4c <_Min_Stack_Size+0x38294c>
    2148:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    214c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2150:	01131200 	tsteq	r3, r0, lsl #4
    2154:	0b3a0b0b 	bleq	e84d88 <_Min_Stack_Size+0xe84988>
    2158:	0b39053b 	bleq	e4364c <_Min_Stack_Size+0xe4324c>
    215c:	00001301 	andeq	r1, r0, r1, lsl #6
    2160:	03000d13 	movweq	r0, #3347	; 0xd13
    2164:	3b0b3a08 	blcc	2d098c <_Min_Stack_Size+0x2d058c>
    2168:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    216c:	000b3813 	andeq	r3, fp, r3, lsl r8
    2170:	00341400 	eorseq	r1, r4, r0, lsl #8
    2174:	0b3a0e03 	bleq	e85988 <_Min_Stack_Size+0xe85588>
    2178:	0b39053b 	bleq	e4366c <_Min_Stack_Size+0xe4326c>
    217c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    2180:	0000193c 	andeq	r1, r0, ip, lsr r9
    2184:	03003415 	movweq	r3, #1045	; 0x415
    2188:	3b0b3a0e 	blcc	2d09c8 <_Min_Stack_Size+0x2d05c8>
    218c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2190:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2194:	16000019 			; <UNDEFINED> instruction: 0x16000019
    2198:	0b0b000f 	bleq	2c21dc <_Min_Stack_Size+0x2c1ddc>
    219c:	17170000 	ldrne	r0, [r7, -r0]
    21a0:	3a0b0b01 	bcc	2c4dac <_Min_Stack_Size+0x2c49ac>
    21a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    21a8:	0013010b 	andseq	r0, r3, fp, lsl #2
    21ac:	000d1800 	andeq	r1, sp, r0, lsl #16
    21b0:	0b3a0e03 	bleq	e859c4 <_Min_Stack_Size+0xe855c4>
    21b4:	0b390b3b 	bleq	e44ea8 <_Min_Stack_Size+0xe44aa8>
    21b8:	00001349 	andeq	r1, r0, r9, asr #6
    21bc:	0b011319 	bleq	46e28 <_Min_Stack_Size+0x46a28>
    21c0:	3b0b3a0b 	blcc	2d09f4 <_Min_Stack_Size+0x2d05f4>
    21c4:	010b390b 	tsteq	fp, fp, lsl #18
    21c8:	1a000013 	bne	221c <_Min_Stack_Size+0x1e1c>
    21cc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    21d0:	0b3b0b3a 	bleq	ec4ec0 <_Min_Stack_Size+0xec4ac0>
    21d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    21d8:	00000b38 	andeq	r0, r0, r8, lsr fp
    21dc:	0301131b 	movweq	r1, #4891	; 0x131b
    21e0:	3a0b0b0e 	bcc	2c4e20 <_Min_Stack_Size+0x2c4a20>
    21e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    21e8:	0013010b 	andseq	r0, r3, fp, lsl #2
    21ec:	000d1c00 	andeq	r1, sp, r0, lsl #24
    21f0:	0b3a0803 	bleq	e84204 <_Min_Stack_Size+0xe83e04>
    21f4:	0b390b3b 	bleq	e44ee8 <_Min_Stack_Size+0xe44ae8>
    21f8:	0b381349 	bleq	e06f24 <_Min_Stack_Size+0xe06b24>
    21fc:	0f1d0000 	svceq	0x001d0000
    2200:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2204:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2208:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    220c:	0b3a050b 	bleq	e83640 <_Min_Stack_Size+0xe83240>
    2210:	0b390b3b 	bleq	e44f04 <_Min_Stack_Size+0xe44b04>
    2214:	00001301 	andeq	r1, r0, r1, lsl #6
    2218:	03000d1f 	movweq	r0, #3359	; 0xd1f
    221c:	3b0b3a0e 	blcc	2d0a5c <_Min_Stack_Size+0x2d065c>
    2220:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2224:	00053813 	andeq	r3, r5, r3, lsl r8
    2228:	00152000 	andseq	r2, r5, r0
    222c:	00001927 	andeq	r1, r0, r7, lsr #18
    2230:	27011521 	strcs	r1, [r1, -r1, lsr #10]
    2234:	01134919 	tsteq	r3, r9, lsl r9
    2238:	22000013 	andcs	r0, r0, #19
    223c:	13490005 	movtne	r0, #36869	; 0x9005
    2240:	13230000 			; <UNDEFINED> instruction: 0x13230000
    2244:	0b0e0301 	bleq	382e50 <_Min_Stack_Size+0x382a50>
    2248:	3b0b3a05 	blcc	2d0a64 <_Min_Stack_Size+0x2d0664>
    224c:	010b3905 	tsteq	fp, r5, lsl #18
    2250:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    2254:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2258:	0b3a0b0b 	bleq	e84e8c <_Min_Stack_Size+0xe84a8c>
    225c:	0b39053b 	bleq	e43750 <_Min_Stack_Size+0xe43350>
    2260:	00001301 	andeq	r1, r0, r1, lsl #6
    2264:	0b011725 	bleq	47f00 <_Min_Stack_Size+0x47b00>
    2268:	3b0b3a0b 	blcc	2d0a9c <_Min_Stack_Size+0x2d069c>
    226c:	010b3905 	tsteq	fp, r5, lsl #18
    2270:	26000013 			; <UNDEFINED> instruction: 0x26000013
    2274:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2278:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    227c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2280:	13270000 			; <UNDEFINED> instruction: 0x13270000
    2284:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    2288:	28000019 	stmdacs	r0, {r0, r3, r4}
    228c:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    2290:	00001301 	andeq	r1, r0, r1, lsl #6
    2294:	03003429 	movweq	r3, #1065	; 0x429
    2298:	3b0b3a0e 	blcc	2d0ad8 <_Min_Stack_Size+0x2d06d8>
    229c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    22a0:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
    22a4:	2a000018 	bcs	230c <_Min_Stack_Size+0x1f0c>
    22a8:	13470034 	movtne	r0, #28724	; 0x7034
    22ac:	0b3b0b3a 	bleq	ec4f9c <_Min_Stack_Size+0xec4b9c>
    22b0:	18020b39 	stmdane	r2, {r0, r3, r4, r5, r8, r9, fp}
    22b4:	342b0000 	strtcc	r0, [fp], #-0
    22b8:	3a0e0300 	bcc	382ec0 <_Min_Stack_Size+0x382ac0>
    22bc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    22c0:	3f13490b 	svccc	0x0013490b
    22c4:	00180219 	andseq	r0, r8, r9, lsl r2
    22c8:	002e2c00 	eoreq	r2, lr, r0, lsl #24
    22cc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    22d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    22d4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    22d8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    22dc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    22e0:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    22e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    22e8:	0b3a0e03 	bleq	e85afc <_Min_Stack_Size+0xe856fc>
    22ec:	0b39053b 	bleq	e437e0 <_Min_Stack_Size+0xe433e0>
    22f0:	01111927 	tsteq	r1, r7, lsr #18
    22f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    22f8:	01194297 			; <UNDEFINED> instruction: 0x01194297
    22fc:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
    2300:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2304:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2308:	13490b39 	movtne	r0, #39737	; 0x9b39
    230c:	00001802 	andeq	r1, r0, r2, lsl #16
    2310:	3f012e2f 	svccc	0x00012e2f
    2314:	3a0e0319 	bcc	382f80 <_Min_Stack_Size+0x382b80>
    2318:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    231c:	1119270b 	tstne	r9, fp, lsl #14
    2320:	40061201 	andmi	r1, r6, r1, lsl #4
    2324:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2328:	00001301 	andeq	r1, r0, r1, lsl #6
    232c:	03003430 	movweq	r3, #1072	; 0x430
    2330:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
    2334:	00180219 	andseq	r0, r8, r9, lsl r2
    2338:	012e3100 			; <UNDEFINED> instruction: 0x012e3100
    233c:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2340:	0b3b0b3a 	bleq	ec5030 <_Min_Stack_Size+0xec4c30>
    2344:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2348:	06120111 			; <UNDEFINED> instruction: 0x06120111
    234c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2350:	00130119 	andseq	r0, r3, r9, lsl r1
    2354:	00053200 	andeq	r3, r5, r0, lsl #4
    2358:	0b3a0e03 	bleq	e85b6c <_Min_Stack_Size+0xe8576c>
    235c:	0b390b3b 	bleq	e45050 <_Min_Stack_Size+0xe44c50>
    2360:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2364:	34330000 	ldrtcc	r0, [r3], #-0
    2368:	3a0e0300 	bcc	382f70 <_Min_Stack_Size+0x382b70>
    236c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2370:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2374:	34000018 	strcc	r0, [r0], #-24	; 0xffffffe8
    2378:	08030034 	stmdaeq	r3, {r2, r4, r5}
    237c:	0b3b0b3a 	bleq	ec506c <_Min_Stack_Size+0xec4c6c>
    2380:	13490b39 	movtne	r0, #39737	; 0x9b39
    2384:	00001802 	andeq	r1, r0, r2, lsl #16
    2388:	11010b35 	tstne	r1, r5, lsr fp
    238c:	00061201 	andeq	r1, r6, r1, lsl #4
    2390:	00343600 	eorseq	r3, r4, r0, lsl #12
    2394:	0b3a0803 	bleq	e843a8 <_Min_Stack_Size+0xe83fa8>
    2398:	0b39053b 	bleq	e4388c <_Min_Stack_Size+0xe4348c>
    239c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    23a0:	05370000 	ldreq	r0, [r7, #-0]!
    23a4:	3a080300 	bcc	202fac <_Min_Stack_Size+0x202bac>
    23a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    23ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    23b0:	38000018 	stmdacc	r0, {r3, r4}
    23b4:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
    23b8:	0b3a0e03 	bleq	e85bcc <_Min_Stack_Size+0xe857cc>
    23bc:	0b390b3b 	bleq	e450b0 <_Min_Stack_Size+0xe44cb0>
    23c0:	01111927 	tsteq	r1, r7, lsr #18
    23c4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    23c8:	00194296 	mulseq	r9, r6, r2
    23cc:	00343900 	eorseq	r3, r4, r0, lsl #18
    23d0:	0b3a0803 	bleq	e843e4 <_Min_Stack_Size+0xe83fe4>
    23d4:	0b390b3b 	bleq	e450c8 <_Min_Stack_Size+0xe44cc8>
    23d8:	00001349 	andeq	r1, r0, r9, asr #6
    23dc:	3f012e3a 	svccc	0x00012e3a
    23e0:	3a0e0319 	bcc	38304c <_Min_Stack_Size+0x382c4c>
    23e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    23e8:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    23ec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    23f0:	96184006 	ldrls	r4, [r8], -r6
    23f4:	13011942 	movwne	r1, #6466	; 0x1942
    23f8:	2e3b0000 	cdpcs	0, 3, cr0, cr11, cr0, {0}
    23fc:	3a0e0301 	bcc	383008 <_Min_Stack_Size+0x382c08>
    2400:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2404:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    2408:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    240c:	96184006 	ldrls	r4, [r8], -r6
    2410:	13011942 	movwne	r1, #6466	; 0x1942
    2414:	2e3c0000 	cdpcs	0, 3, cr0, cr12, cr0, {0}
    2418:	3a0e0301 	bcc	383024 <_Min_Stack_Size+0x382c24>
    241c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2420:	1119270b 	tstne	r9, fp, lsl #14
    2424:	40061201 	andmi	r1, r6, r1, lsl #4
    2428:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    242c:	01000000 	mrseq	r0, (UNDEF: 0)
    2430:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2434:	0e030b13 	vmoveq.32	d3[0], r0
    2438:	17550e1b 	smmlane	r5, fp, lr, r0
    243c:	17100111 			; <UNDEFINED> instruction: 0x17100111
    2440:	24020000 	strcs	r0, [r2], #-0
    2444:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2448:	000e030b 	andeq	r0, lr, fp, lsl #6
    244c:	00160300 	andseq	r0, r6, r0, lsl #6
    2450:	0b3a0e03 	bleq	e85c64 <_Min_Stack_Size+0xe85864>
    2454:	0b390b3b 	bleq	e45148 <_Min_Stack_Size+0xe44d48>
    2458:	00001349 	andeq	r1, r0, r9, asr #6
    245c:	49002604 	stmdbmi	r0, {r2, r9, sl, sp}
    2460:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2464:	0b0b0024 	bleq	2c24fc <_Min_Stack_Size+0x2c20fc>
    2468:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    246c:	13060000 	movwne	r0, #24576	; 0x6000
    2470:	3a0b0b01 	bcc	2c507c <_Min_Stack_Size+0x2c4c7c>
    2474:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2478:	0013010b 	andseq	r0, r3, fp, lsl #2
    247c:	000d0700 	andeq	r0, sp, r0, lsl #14
    2480:	0b3a0e03 	bleq	e85c94 <_Min_Stack_Size+0xe85894>
    2484:	0b390b3b 	bleq	e45178 <_Min_Stack_Size+0xe44d78>
    2488:	0b381349 	bleq	e071b4 <_Min_Stack_Size+0xe06db4>
    248c:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
    2490:	03193f01 	tsteq	r9, #1, 30
    2494:	3b0b3a0e 	blcc	2d0cd4 <_Min_Stack_Size+0x2d08d4>
    2498:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    249c:	11134919 	tstne	r3, r9, lsl r9
    24a0:	40061201 	andmi	r1, r6, r1, lsl #4
    24a4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    24a8:	00001301 	andeq	r1, r0, r1, lsl #6
    24ac:	03000509 	movweq	r0, #1289	; 0x509
    24b0:	3b0b3a0e 	blcc	2d0cf0 <_Min_Stack_Size+0x2d08f0>
    24b4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    24b8:	00180213 	andseq	r0, r8, r3, lsl r2
    24bc:	00340a00 	eorseq	r0, r4, r0, lsl #20
    24c0:	0b3a0e03 	bleq	e85cd4 <_Min_Stack_Size+0xe858d4>
    24c4:	0b390b3b 	bleq	e451b8 <_Min_Stack_Size+0xe44db8>
    24c8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    24cc:	0f0b0000 	svceq	0x000b0000
    24d0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    24d4:	0c000013 	stceq	0, cr0, [r0], {19}
    24d8:	13490101 	movtne	r0, #37121	; 0x9101
    24dc:	00001301 	andeq	r1, r0, r1, lsl #6
    24e0:	4900210d 	stmdbmi	r0, {r0, r2, r3, r8, sp}
    24e4:	000b2f13 	andeq	r2, fp, r3, lsl pc
    24e8:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
    24ec:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    24f0:	0b3b0b3a 	bleq	ec51e0 <_Min_Stack_Size+0xec4de0>
    24f4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    24f8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    24fc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2500:	00130119 	andseq	r0, r3, r9, lsl r1
    2504:	00050f00 	andeq	r0, r5, r0, lsl #30
    2508:	0b3a0803 	bleq	e8451c <_Min_Stack_Size+0xe8411c>
    250c:	0b390b3b 	bleq	e45200 <_Min_Stack_Size+0xe44e00>
    2510:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2514:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    2518:	03193f00 	tsteq	r9, #0, 30
    251c:	3b0b3a0e 	blcc	2d0d5c <_Min_Stack_Size+0x2d095c>
    2520:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2524:	11134919 	tstne	r3, r9, lsl r9
    2528:	40061201 	andmi	r1, r6, r1, lsl #4
    252c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2530:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    2534:	03193f01 	tsteq	r9, #1, 30
    2538:	3b0b3a0e 	blcc	2d0d78 <_Min_Stack_Size+0x2d0978>
    253c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2540:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2544:	97184006 	ldrls	r4, [r8, -r6]
    2548:	00001942 	andeq	r1, r0, r2, asr #18
    254c:	01110100 	tsteq	r1, r0, lsl #2
    2550:	0b130e25 	bleq	4c5dec <_Min_Stack_Size+0x4c59ec>
    2554:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2558:	01111755 	tsteq	r1, r5, asr r7
    255c:	00001710 	andeq	r1, r0, r0, lsl r7
    2560:	0b002402 	bleq	b570 <_Min_Stack_Size+0xb170>
    2564:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2568:	0300000e 	movweq	r0, #14
    256c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2570:	0b3b0b3a 	bleq	ec5260 <_Min_Stack_Size+0xec4e60>
    2574:	13490b39 	movtne	r0, #39737	; 0x9b39
    2578:	24040000 	strcs	r0, [r4], #-0
    257c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2580:	0008030b 	andeq	r0, r8, fp, lsl #6
    2584:	01130500 	tsteq	r3, r0, lsl #10
    2588:	0b0b0e03 	bleq	2c5d9c <_Min_Stack_Size+0x2c599c>
    258c:	0b3b0b3a 	bleq	ec527c <_Min_Stack_Size+0xec4e7c>
    2590:	13010b39 	movwne	r0, #6969	; 0x1b39
    2594:	0d060000 	stceq	0, cr0, [r6, #-0]
    2598:	3a0e0300 	bcc	3831a0 <_Min_Stack_Size+0x382da0>
    259c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25a0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    25a4:	0700000b 	streq	r0, [r0, -fp]
    25a8:	0b0b000f 	bleq	2c25ec <_Min_Stack_Size+0x2c21ec>
    25ac:	00001349 	andeq	r1, r0, r9, asr #6
    25b0:	3f012e08 	svccc	0x00012e08
    25b4:	3a0e0319 	bcc	383220 <_Min_Stack_Size+0x382e20>
    25b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25bc:	1119270b 	tstne	r9, fp, lsl #14
    25c0:	40061201 	andmi	r1, r6, r1, lsl #4
    25c4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    25c8:	00001301 	andeq	r1, r0, r1, lsl #6
    25cc:	03000509 	movweq	r0, #1289	; 0x509
    25d0:	3b0b3a0e 	blcc	2d0e10 <_Min_Stack_Size+0x2d0a10>
    25d4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    25d8:	00180213 	andseq	r0, r8, r3, lsl r2
    25dc:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
    25e0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    25e4:	0b3b0b3a 	bleq	ec52d4 <_Min_Stack_Size+0xec4ed4>
    25e8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    25ec:	01111349 	tsteq	r1, r9, asr #6
    25f0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    25f4:	01194297 			; <UNDEFINED> instruction: 0x01194297
    25f8:	0b000013 	bleq	264c <_Min_Stack_Size+0x224c>
    25fc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2600:	0b3b0b3a 	bleq	ec52f0 <_Min_Stack_Size+0xec4ef0>
    2604:	13490b39 	movtne	r0, #39737	; 0x9b39
    2608:	00001802 	andeq	r1, r0, r2, lsl #16
    260c:	11010b0c 	tstne	r1, ip, lsl #22
    2610:	00061201 	andeq	r1, r6, r1, lsl #4
    2614:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
    2618:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    261c:	0b3b0b3a 	bleq	ec530c <_Min_Stack_Size+0xec4f0c>
    2620:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2624:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2628:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    262c:	00000019 	andeq	r0, r0, r9, lsl r0
    2630:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2634:	030b130e 	movweq	r1, #45838	; 0xb30e
    2638:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    263c:	10011117 	andne	r1, r1, r7, lsl r1
    2640:	02000017 	andeq	r0, r0, #23
    2644:	0b0b0024 	bleq	2c26dc <_Min_Stack_Size+0x2c22dc>
    2648:	0e030b3e 	vmoveq.16	d3[0], r0
    264c:	16030000 	strne	r0, [r3], -r0
    2650:	3a0e0300 	bcc	383258 <_Min_Stack_Size+0x382e58>
    2654:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2658:	0013490b 	andseq	r4, r3, fp, lsl #18
    265c:	00350400 	eorseq	r0, r5, r0, lsl #8
    2660:	00001349 	andeq	r1, r0, r9, asr #6
    2664:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
    2668:	06000013 			; <UNDEFINED> instruction: 0x06000013
    266c:	0b0b0024 	bleq	2c2704 <_Min_Stack_Size+0x2c2304>
    2670:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2674:	16070000 	strne	r0, [r7], -r0
    2678:	3a0e0300 	bcc	383280 <_Min_Stack_Size+0x382e80>
    267c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2680:	0013490b 	andseq	r4, r3, fp, lsl #18
    2684:	01170800 	tsteq	r7, r0, lsl #16
    2688:	0b3a0b0b 	bleq	e852bc <_Min_Stack_Size+0xe84ebc>
    268c:	0b390b3b 	bleq	e45380 <_Min_Stack_Size+0xe44f80>
    2690:	00001301 	andeq	r1, r0, r1, lsl #6
    2694:	03000d09 	movweq	r0, #3337	; 0xd09
    2698:	3b0b3a0e 	blcc	2d0ed8 <_Min_Stack_Size+0x2d0ad8>
    269c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    26a0:	0a000013 	beq	26f4 <_Min_Stack_Size+0x22f4>
    26a4:	13490101 	movtne	r0, #37121	; 0x9101
    26a8:	00001301 	andeq	r1, r0, r1, lsl #6
    26ac:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    26b0:	000b2f13 	andeq	r2, fp, r3, lsl pc
    26b4:	01130c00 	tsteq	r3, r0, lsl #24
    26b8:	0b3a0b0b 	bleq	e852ec <_Min_Stack_Size+0xe84eec>
    26bc:	0b390b3b 	bleq	e453b0 <_Min_Stack_Size+0xe44fb0>
    26c0:	00001301 	andeq	r1, r0, r1, lsl #6
    26c4:	03000d0d 	movweq	r0, #3341	; 0xd0d
    26c8:	3b0b3a0e 	blcc	2d0f08 <_Min_Stack_Size+0x2d0b08>
    26cc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    26d0:	000b3813 	andeq	r3, fp, r3, lsl r8
    26d4:	000f0e00 	andeq	r0, pc, r0, lsl #28
    26d8:	00000b0b 	andeq	r0, r0, fp, lsl #22
    26dc:	0301130f 	movweq	r1, #4879	; 0x130f
    26e0:	3a0b0b0e 	bcc	2c5320 <_Min_Stack_Size+0x2c4f20>
    26e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    26e8:	0013010b 	andseq	r0, r3, fp, lsl #2
    26ec:	000d1000 	andeq	r1, sp, r0
    26f0:	0b3a0803 	bleq	e84704 <_Min_Stack_Size+0xe84304>
    26f4:	0b390b3b 	bleq	e453e8 <_Min_Stack_Size+0xe44fe8>
    26f8:	0b381349 	bleq	e07424 <_Min_Stack_Size+0xe07024>
    26fc:	0f110000 	svceq	0x00110000
    2700:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2704:	12000013 	andne	r0, r0, #19
    2708:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    270c:	0b3a050b 	bleq	e83b40 <_Min_Stack_Size+0xe83740>
    2710:	0b390b3b 	bleq	e45404 <_Min_Stack_Size+0xe45004>
    2714:	00001301 	andeq	r1, r0, r1, lsl #6
    2718:	03000d13 	movweq	r0, #3347	; 0xd13
    271c:	3b0b3a0e 	blcc	2d0f5c <_Min_Stack_Size+0x2d0b5c>
    2720:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2724:	00053813 	andeq	r3, r5, r3, lsl r8
    2728:	00151400 	andseq	r1, r5, r0, lsl #8
    272c:	00001927 	andeq	r1, r0, r7, lsr #18
    2730:	27011515 	smladcs	r1, r5, r5, r1
    2734:	01134919 	tsteq	r3, r9, lsl r9
    2738:	16000013 			; <UNDEFINED> instruction: 0x16000013
    273c:	13490005 	movtne	r0, #36869	; 0x9005
    2740:	13170000 	tstne	r7, #0
    2744:	0b0e0301 	bleq	383350 <_Min_Stack_Size+0x382f50>
    2748:	3b0b3a05 	blcc	2d0f64 <_Min_Stack_Size+0x2d0b64>
    274c:	010b3905 	tsteq	fp, r5, lsl #18
    2750:	18000013 	stmdane	r0, {r0, r1, r4}
    2754:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2758:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    275c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2760:	00000b38 	andeq	r0, r0, r8, lsr fp
    2764:	03000d19 	movweq	r0, #3353	; 0xd19
    2768:	3b0b3a0e 	blcc	2d0fa8 <_Min_Stack_Size+0x2d0ba8>
    276c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2770:	00053813 	andeq	r3, r5, r3, lsl r8
    2774:	01131a00 	tsteq	r3, r0, lsl #20
    2778:	0b0b0e03 	bleq	2c5f8c <_Min_Stack_Size+0x2c5b8c>
    277c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2780:	13010b39 	movwne	r0, #6969	; 0x1b39
    2784:	131b0000 	tstne	fp, #0
    2788:	3a0b0b01 	bcc	2c5394 <_Min_Stack_Size+0x2c4f94>
    278c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2790:	0013010b 	andseq	r0, r3, fp, lsl #2
    2794:	01171c00 	tsteq	r7, r0, lsl #24
    2798:	0b3a0b0b 	bleq	e853cc <_Min_Stack_Size+0xe84fcc>
    279c:	0b39053b 	bleq	e43c90 <_Min_Stack_Size+0xe43890>
    27a0:	00001301 	andeq	r1, r0, r1, lsl #6
    27a4:	03000d1d 	movweq	r0, #3357	; 0xd1d
    27a8:	3b0b3a0e 	blcc	2d0fe8 <_Min_Stack_Size+0x2d0be8>
    27ac:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    27b0:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    27b4:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    27b8:	0000193c 	andeq	r1, r0, ip, lsr r9
    27bc:	2701151f 	smladcs	r1, pc, r5, r1	; <UNPREDICTABLE>
    27c0:	00130119 	andseq	r0, r3, r9, lsl r1
    27c4:	00342000 	eorseq	r2, r4, r0
    27c8:	0b3a0e03 	bleq	e85fdc <_Min_Stack_Size+0xe85bdc>
    27cc:	0b39053b 	bleq	e43cc0 <_Min_Stack_Size+0xe438c0>
    27d0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    27d4:	0000193c 	andeq	r1, r0, ip, lsr r9
    27d8:	03000d21 	movweq	r0, #3361	; 0xd21
    27dc:	3b0b3a08 	blcc	2d1004 <_Min_Stack_Size+0x2d0c04>
    27e0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    27e4:	000b3813 	andeq	r3, fp, r3, lsl r8
    27e8:	00342200 	eorseq	r2, r4, r0, lsl #4
    27ec:	0b3a0e03 	bleq	e86000 <_Min_Stack_Size+0xe85c00>
    27f0:	0b390b3b 	bleq	e454e4 <_Min_Stack_Size+0xe450e4>
    27f4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    27f8:	0000193c 	andeq	r1, r0, ip, lsr r9
    27fc:	3e010423 	cdpcc	4, 0, cr0, cr1, cr3, {1}
    2800:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    2804:	3b0b3a13 	blcc	2d1058 <_Min_Stack_Size+0x2d0c58>
    2808:	010b390b 	tsteq	fp, fp, lsl #18
    280c:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    2810:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    2814:	00000b1c 	andeq	r0, r0, ip, lsl fp
    2818:	03003425 	movweq	r3, #1061	; 0x425
    281c:	3b0b3a0e 	blcc	2d105c <_Min_Stack_Size+0x2d0c5c>
    2820:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2824:	00180213 	andseq	r0, r8, r3, lsl r2
    2828:	00342600 	eorseq	r2, r4, r0, lsl #12
    282c:	0b3a0e03 	bleq	e86040 <_Min_Stack_Size+0xe85c40>
    2830:	0b39053b 	bleq	e43d24 <_Min_Stack_Size+0xe43924>
    2834:	01881349 	orreq	r1, r8, r9, asr #6
    2838:	0018020b 	andseq	r0, r8, fp, lsl #4
    283c:	00342700 	eorseq	r2, r4, r0, lsl #14
    2840:	0b3a0e03 	bleq	e86054 <_Min_Stack_Size+0xe85c54>
    2844:	0b39053b 	bleq	e43d38 <_Min_Stack_Size+0xe43938>
    2848:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    284c:	00001802 	andeq	r1, r0, r2, lsl #16
    2850:	3f012e28 	svccc	0x00012e28
    2854:	3a0e0319 	bcc	3834c0 <_Min_Stack_Size+0x3830c0>
    2858:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    285c:	1119270b 	tstne	r9, fp, lsl #14
    2860:	40061201 	andmi	r1, r6, r1, lsl #4
    2864:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2868:	00001301 	andeq	r1, r0, r1, lsl #6
    286c:	03000529 	movweq	r0, #1321	; 0x529
    2870:	3b0b3a0e 	blcc	2d10b0 <_Min_Stack_Size+0x2d0cb0>
    2874:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2878:	00180213 	andseq	r0, r8, r3, lsl r2
    287c:	001d2a00 	andseq	r2, sp, r0, lsl #20
    2880:	01111331 	tsteq	r1, r1, lsr r3
    2884:	0b580612 	bleq	16040d4 <_Min_Stack_Size+0x1603cd4>
    2888:	0b570559 	bleq	15c3df4 <_Min_Stack_Size+0x15c39f4>
    288c:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
    2890:	03193f00 	tsteq	r9, #0, 30
    2894:	3b0b3a0e 	blcc	2d10d4 <_Min_Stack_Size+0x2d0cd4>
    2898:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    289c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    28a0:	96184006 	ldrls	r4, [r8], -r6
    28a4:	00001942 	andeq	r1, r0, r2, asr #18
    28a8:	3f002e2c 	svccc	0x00002e2c
    28ac:	3a0e0319 	bcc	383518 <_Min_Stack_Size+0x383118>
    28b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    28b4:	1119270b 	tstne	r9, fp, lsl #14
    28b8:	40061201 	andmi	r1, r6, r1, lsl #4
    28bc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    28c0:	2e2d0000 	cdpcs	0, 2, cr0, cr13, cr0, {0}
    28c4:	3a0e0300 	bcc	3834cc <_Min_Stack_Size+0x3830cc>
    28c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    28cc:	1119270b 	tstne	r9, fp, lsl #14
    28d0:	40061201 	andmi	r1, r6, r1, lsl #4
    28d4:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    28d8:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    28dc:	3a0e0300 	bcc	3834e4 <_Min_Stack_Size+0x3830e4>
    28e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    28e4:	1119270b 	tstne	r9, fp, lsl #14
    28e8:	40061201 	andmi	r1, r6, r1, lsl #4
    28ec:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    28f0:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
    28f4:	3a0e0301 	bcc	383500 <_Min_Stack_Size+0x383100>
    28f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    28fc:	1119270b 	tstne	r9, fp, lsl #14
    2900:	40061201 	andmi	r1, r6, r1, lsl #4
    2904:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2908:	00001301 	andeq	r1, r0, r1, lsl #6
    290c:	11010b30 	tstne	r1, r0, lsr fp
    2910:	01061201 	tsteq	r6, r1, lsl #4
    2914:	31000013 	tstcc	r0, r3, lsl r0
    2918:	08030034 	stmdaeq	r3, {r2, r4, r5}
    291c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2920:	13490b39 	movtne	r0, #39737	; 0x9b39
    2924:	00001802 	andeq	r1, r0, r2, lsl #16
    2928:	11010b32 	tstne	r1, r2, lsr fp
    292c:	00061201 	andeq	r1, r6, r1, lsl #4
    2930:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
    2934:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
    2938:	0b3b0b3a 	bleq	ec5628 <_Min_Stack_Size+0xec5228>
    293c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
    2940:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2944:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    2948:	00130119 	andseq	r0, r3, r9, lsl r1
    294c:	00053400 	andeq	r3, r5, r0, lsl #8
    2950:	0b3a0e03 	bleq	e86164 <_Min_Stack_Size+0xe85d64>
    2954:	0b390b3b 	bleq	e45648 <_Min_Stack_Size+0xe45248>
    2958:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    295c:	2e350000 	cdpcs	0, 3, cr0, cr5, cr0, {0}
    2960:	03193f00 	tsteq	r9, #0, 30
    2964:	3b0b3a0e 	blcc	2d11a4 <_Min_Stack_Size+0x2d0da4>
    2968:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    296c:	00193c19 	andseq	r3, r9, r9, lsl ip
    2970:	002e3600 	eoreq	r3, lr, r0, lsl #12
    2974:	0b3a0e03 	bleq	e86188 <_Min_Stack_Size+0xe85d88>
    2978:	0b390b3b 	bleq	e4566c <_Min_Stack_Size+0xe4526c>
    297c:	0b201927 	bleq	808e20 <_Min_Stack_Size+0x808a20>
    2980:	01000000 	mrseq	r0, (UNDEF: 0)
    2984:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2988:	0e030b13 	vmoveq.32	d3[0], r0
    298c:	17550e1b 	smmlane	r5, fp, lr, r0
    2990:	17100111 			; <UNDEFINED> instruction: 0x17100111
    2994:	24020000 	strcs	r0, [r2], #-0
    2998:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    299c:	000e030b 	andeq	r0, lr, fp, lsl #6
    29a0:	00160300 	andseq	r0, r6, r0, lsl #6
    29a4:	0b3a0e03 	bleq	e861b8 <_Min_Stack_Size+0xe85db8>
    29a8:	0b390b3b 	bleq	e4569c <_Min_Stack_Size+0xe4529c>
    29ac:	00001349 	andeq	r1, r0, r9, asr #6
    29b0:	49003504 	stmdbmi	r0, {r2, r8, sl, ip, sp}
    29b4:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    29b8:	13490026 	movtne	r0, #36902	; 0x9026
    29bc:	24060000 	strcs	r0, [r6], #-0
    29c0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    29c4:	0008030b 	andeq	r0, r8, fp, lsl #6
    29c8:	00160700 	andseq	r0, r6, r0, lsl #14
    29cc:	0b3a0e03 	bleq	e861e0 <_Min_Stack_Size+0xe85de0>
    29d0:	0b39053b 	bleq	e43ec4 <_Min_Stack_Size+0xe43ac4>
    29d4:	00001349 	andeq	r1, r0, r9, asr #6
    29d8:	0b011708 	bleq	48600 <_Min_Stack_Size+0x48200>
    29dc:	3b0b3a0b 	blcc	2d1210 <_Min_Stack_Size+0x2d0e10>
    29e0:	010b390b 	tsteq	fp, fp, lsl #18
    29e4:	09000013 	stmdbeq	r0, {r0, r1, r4}
    29e8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    29ec:	0b3b0b3a 	bleq	ec56dc <_Min_Stack_Size+0xec52dc>
    29f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    29f4:	010a0000 	mrseq	r0, (UNDEF: 10)
    29f8:	01134901 	tsteq	r3, r1, lsl #18
    29fc:	0b000013 	bleq	2a50 <_Min_Stack_Size+0x2650>
    2a00:	13490021 	movtne	r0, #36897	; 0x9021
    2a04:	00000b2f 	andeq	r0, r0, pc, lsr #22
    2a08:	0b01130c 	bleq	47640 <_Min_Stack_Size+0x47240>
    2a0c:	3b0b3a0b 	blcc	2d1240 <_Min_Stack_Size+0x2d0e40>
    2a10:	010b390b 	tsteq	fp, fp, lsl #18
    2a14:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    2a18:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2a1c:	0b3b0b3a 	bleq	ec570c <_Min_Stack_Size+0xec530c>
    2a20:	13490b39 	movtne	r0, #39737	; 0x9b39
    2a24:	00000b38 	andeq	r0, r0, r8, lsr fp
    2a28:	0b000f0e 	bleq	6668 <_Min_Stack_Size+0x6268>
    2a2c:	0f00000b 	svceq	0x0000000b
    2a30:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2a34:	0b3a0b0b 	bleq	e85668 <_Min_Stack_Size+0xe85268>
    2a38:	0b390b3b 	bleq	e4572c <_Min_Stack_Size+0xe4532c>
    2a3c:	00001301 	andeq	r1, r0, r1, lsl #6
    2a40:	03000d10 	movweq	r0, #3344	; 0xd10
    2a44:	3b0b3a08 	blcc	2d126c <_Min_Stack_Size+0x2d0e6c>
    2a48:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2a4c:	000b3813 	andeq	r3, fp, r3, lsl r8
    2a50:	000f1100 	andeq	r1, pc, r0, lsl #2
    2a54:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2a58:	13120000 	tstne	r2, #0
    2a5c:	0b0e0301 	bleq	383668 <_Min_Stack_Size+0x383268>
    2a60:	3b0b3a05 	blcc	2d127c <_Min_Stack_Size+0x2d0e7c>
    2a64:	010b390b 	tsteq	fp, fp, lsl #18
    2a68:	13000013 	movwne	r0, #19
    2a6c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2a70:	0b3b0b3a 	bleq	ec5760 <_Min_Stack_Size+0xec5360>
    2a74:	13490b39 	movtne	r0, #39737	; 0x9b39
    2a78:	00000538 	andeq	r0, r0, r8, lsr r5
    2a7c:	27001514 	smladcs	r0, r4, r5, r1
    2a80:	15000019 	strne	r0, [r0, #-25]	; 0xffffffe7
    2a84:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    2a88:	13011349 	movwne	r1, #4937	; 0x1349
    2a8c:	05160000 	ldreq	r0, [r6, #-0]
    2a90:	00134900 	andseq	r4, r3, r0, lsl #18
    2a94:	01131700 	tsteq	r3, r0, lsl #14
    2a98:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    2a9c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2aa0:	13010b39 	movwne	r0, #6969	; 0x1b39
    2aa4:	0d180000 	ldceq	0, cr0, [r8, #-0]
    2aa8:	3a0e0300 	bcc	3836b0 <_Min_Stack_Size+0x3832b0>
    2aac:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ab0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2ab4:	1900000b 	stmdbne	r0, {r0, r1, r3}
    2ab8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2abc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2ac0:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ac4:	00000538 	andeq	r0, r0, r8, lsr r5
    2ac8:	0301131a 	movweq	r1, #4890	; 0x131a
    2acc:	3a0b0b0e 	bcc	2c570c <_Min_Stack_Size+0x2c530c>
    2ad0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ad4:	0013010b 	andseq	r0, r3, fp, lsl #2
    2ad8:	01131b00 	tsteq	r3, r0, lsl #22
    2adc:	0b3a0b0b 	bleq	e85710 <_Min_Stack_Size+0xe85310>
    2ae0:	0b39053b 	bleq	e43fd4 <_Min_Stack_Size+0xe43bd4>
    2ae4:	00001301 	andeq	r1, r0, r1, lsl #6
    2ae8:	0b01171c 	bleq	48760 <_Min_Stack_Size+0x48360>
    2aec:	3b0b3a0b 	blcc	2d1320 <_Min_Stack_Size+0x2d0f20>
    2af0:	010b3905 	tsteq	fp, r5, lsl #18
    2af4:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    2af8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2afc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2b00:	13490b39 	movtne	r0, #39737	; 0x9b39
    2b04:	131e0000 	tstne	lr, #0
    2b08:	3c0e0300 	stccc	3, cr0, [lr], {-0}
    2b0c:	1f000019 	svcne	0x00000019
    2b10:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    2b14:	00001301 	andeq	r1, r0, r1, lsl #6
    2b18:	03003420 	movweq	r3, #1056	; 0x420
    2b1c:	3b0b3a0e 	blcc	2d135c <_Min_Stack_Size+0x2d0f5c>
    2b20:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2b24:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2b28:	21000019 	tstcs	r0, r9, lsl r0
    2b2c:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
    2b30:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2b34:	13010b39 	movwne	r0, #6969	; 0x1b39
    2b38:	0d220000 	stceq	0, cr0, [r2, #-0]
    2b3c:	3a080300 	bcc	203744 <_Min_Stack_Size+0x203344>
    2b40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b44:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2b48:	23000005 	movwcs	r0, #5
    2b4c:	13490021 	movtne	r0, #36897	; 0x9021
    2b50:	0000052f 	andeq	r0, r0, pc, lsr #10
    2b54:	03003424 	movweq	r3, #1060	; 0x424
    2b58:	3b0b3a0e 	blcc	2d1398 <_Min_Stack_Size+0x2d0f98>
    2b5c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2b60:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2b64:	25000019 	strcs	r0, [r0, #-25]	; 0xffffffe7
    2b68:	0b3e0104 	bleq	f82f80 <_Min_Stack_Size+0xf82b80>
    2b6c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2b70:	0b3b0b3a 	bleq	ec5860 <_Min_Stack_Size+0xec5460>
    2b74:	13010b39 	movwne	r0, #6969	; 0x1b39
    2b78:	28260000 	stmdacs	r6!, {}	; <UNPREDICTABLE>
    2b7c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    2b80:	2700000b 	strcs	r0, [r0, -fp]
    2b84:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2b88:	0b3b0b3a 	bleq	ec5878 <_Min_Stack_Size+0xec5478>
    2b8c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2b90:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    2b94:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    2b98:	03193f00 	tsteq	r9, #0, 30
    2b9c:	3b0b3a0e 	blcc	2d13dc <_Min_Stack_Size+0x2d0fdc>
    2ba0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2ba4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2ba8:	97184006 	ldrls	r4, [r8, -r6]
    2bac:	00001942 	andeq	r1, r0, r2, asr #18
    2bb0:	3f012e29 	svccc	0x00012e29
    2bb4:	3a0e0319 	bcc	383820 <_Min_Stack_Size+0x383420>
    2bb8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2bbc:	1119270b 	tstne	r9, fp, lsl #14
    2bc0:	40061201 	andmi	r1, r6, r1, lsl #4
    2bc4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    2bc8:	00001301 	andeq	r1, r0, r1, lsl #6
    2bcc:	0300052a 	movweq	r0, #1322	; 0x52a
    2bd0:	3b0b3a0e 	blcc	2d1410 <_Min_Stack_Size+0x2d1010>
    2bd4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2bd8:	00180213 	andseq	r0, r8, r3, lsl r2
    2bdc:	00342b00 	eorseq	r2, r4, r0, lsl #22
    2be0:	0b3a0e03 	bleq	e863f4 <_Min_Stack_Size+0xe85ff4>
    2be4:	0b390b3b 	bleq	e458d8 <_Min_Stack_Size+0xe454d8>
    2be8:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    2bec:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
    2bf0:	03193f01 	tsteq	r9, #1, 30
    2bf4:	3b0b3a0e 	blcc	2d1434 <_Min_Stack_Size+0x2d1034>
    2bf8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2bfc:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
    2c00:	97184006 	ldrls	r4, [r8, -r6]
    2c04:	13011942 	movwne	r1, #6466	; 0x1942
    2c08:	342d0000 	strtcc	r0, [sp], #-0
    2c0c:	3a080300 	bcc	203814 <_Min_Stack_Size+0x203414>
    2c10:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c14:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2c18:	2e000018 	mcrcs	0, 0, r0, cr0, cr8, {0}
    2c1c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    2c20:	0b3a0e03 	bleq	e86434 <_Min_Stack_Size+0xe86034>
    2c24:	0b390b3b 	bleq	e45918 <_Min_Stack_Size+0xe45518>
    2c28:	13491927 	movtne	r1, #39207	; 0x9927
    2c2c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    2c30:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    2c34:	00130119 	andseq	r0, r3, r9, lsl r1
    2c38:	00152f00 	andseq	r2, r5, r0, lsl #30
    2c3c:	13491927 	movtne	r1, #39207	; 0x9927
    2c40:	2e300000 	cdpcs	0, 3, cr0, cr0, cr0, {0}
    2c44:	03193f00 	tsteq	r9, #0, 30
    2c48:	3b0b3a0e 	blcc	2d1488 <_Min_Stack_Size+0x2d1088>
    2c4c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2c50:	11134919 	tstne	r3, r9, lsl r9
    2c54:	40061201 	andmi	r1, r6, r1, lsl #4
    2c58:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2c5c:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
    2c60:	03193f01 	tsteq	r9, #1, 30
    2c64:	3b0b3a0e 	blcc	2d14a4 <_Min_Stack_Size+0x2d10a4>
    2c68:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2c6c:	11134919 	tstne	r3, r9, lsl r9
    2c70:	40061201 	andmi	r1, r6, r1, lsl #4
    2c74:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2c78:	00001301 	andeq	r1, r0, r1, lsl #6
    2c7c:	11010b32 	tstne	r1, r2, lsr fp
    2c80:	00061201 	andeq	r1, r6, r1, lsl #4
    2c84:	00213300 	eoreq	r3, r1, r0, lsl #6
    2c88:	21340000 	teqcs	r4, r0
    2c8c:	2f134900 	svccs	0x00134900
    2c90:	00000018 	andeq	r0, r0, r8, lsl r0
    2c94:	10001101 	andne	r1, r0, r1, lsl #2
    2c98:	03065506 	movweq	r5, #25862	; 0x6506
    2c9c:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2ca0:	0005130e 	andeq	r1, r5, lr, lsl #6
    2ca4:	11010000 	mrsne	r0, (UNDEF: 1)
    2ca8:	11061000 	mrsne	r1, (UNDEF: 6)
    2cac:	03011201 	movweq	r1, #4609	; 0x1201
    2cb0:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2cb4:	0005130e 	andeq	r1, r5, lr, lsl #6
    2cb8:	11010000 	mrsne	r0, (UNDEF: 1)
    2cbc:	11061000 	mrsne	r1, (UNDEF: 6)
    2cc0:	03011201 	movweq	r1, #4609	; 0x1201
    2cc4:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2cc8:	0005130e 	andeq	r1, r5, lr, lsl #6
    2ccc:	11010000 	mrsne	r0, (UNDEF: 1)
    2cd0:	11061000 	mrsne	r1, (UNDEF: 6)
    2cd4:	03011201 	movweq	r1, #4609	; 0x1201
    2cd8:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2cdc:	0005130e 	andeq	r1, r5, lr, lsl #6
    2ce0:	11010000 	mrsne	r0, (UNDEF: 1)
    2ce4:	11061000 	mrsne	r1, (UNDEF: 6)
    2ce8:	03011201 	movweq	r1, #4609	; 0x1201
    2cec:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2cf0:	0005130e 	andeq	r1, r5, lr, lsl #6
    2cf4:	11010000 	mrsne	r0, (UNDEF: 1)
    2cf8:	11061000 	mrsne	r1, (UNDEF: 6)
    2cfc:	03011201 	movweq	r1, #4609	; 0x1201
    2d00:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2d04:	0005130e 	andeq	r1, r5, lr, lsl #6
    2d08:	11010000 	mrsne	r0, (UNDEF: 1)
    2d0c:	11061000 	mrsne	r1, (UNDEF: 6)
    2d10:	03011201 	movweq	r1, #4609	; 0x1201
    2d14:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    2d18:	0005130e 	andeq	r1, r5, lr, lsl #6
    2d1c:	11010000 	mrsne	r0, (UNDEF: 1)
    2d20:	130e2501 	movwne	r2, #58625	; 0xe501
    2d24:	1b0e030b 	blne	383958 <_Min_Stack_Size+0x383558>
    2d28:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    2d2c:	00171006 	andseq	r1, r7, r6
    2d30:	00240200 	eoreq	r0, r4, r0, lsl #4
    2d34:	0b3e0b0b 	bleq	f85968 <_Min_Stack_Size+0xf85568>
    2d38:	00000e03 	andeq	r0, r0, r3, lsl #28
    2d3c:	0b002403 	bleq	bd50 <_Min_Stack_Size+0xb950>
    2d40:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2d44:	04000008 	streq	r0, [r0], #-8
    2d48:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2d4c:	0b3b0b3a 	bleq	ec5a3c <_Min_Stack_Size+0xec563c>
    2d50:	13490b39 	movtne	r0, #39737	; 0x9b39
    2d54:	0f050000 	svceq	0x00050000
    2d58:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2d5c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2d60:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    2d64:	13011349 	movwne	r1, #4937	; 0x1349
    2d68:	05070000 	streq	r0, [r7, #-0]
    2d6c:	00134900 	andseq	r4, r3, r0, lsl #18
    2d70:	00260800 	eoreq	r0, r6, r0, lsl #16
    2d74:	34090000 	strcc	r0, [r9], #-0
    2d78:	3a0e0300 	bcc	383980 <_Min_Stack_Size+0x383580>
    2d7c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d80:	3f13490b 	svccc	0x0013490b
    2d84:	00193c19 	andseq	r3, r9, r9, lsl ip
    2d88:	01040a00 	tsteq	r4, r0, lsl #20
    2d8c:	0b3e0e03 	bleq	f865a0 <_Min_Stack_Size+0xf861a0>
    2d90:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2d94:	0b3b0b3a 	bleq	ec5a84 <_Min_Stack_Size+0xec5684>
    2d98:	13010b39 	movwne	r0, #6969	; 0x1b39
    2d9c:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    2da0:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    2da4:	0c00000b 	stceq	0, cr0, [r0], {11}
    2da8:	13490101 	movtne	r0, #37121	; 0x9101
    2dac:	00001301 	andeq	r1, r0, r1, lsl #6
    2db0:	0000210d 	andeq	r2, r0, sp, lsl #2
    2db4:	00260e00 	eoreq	r0, r6, r0, lsl #28
    2db8:	00001349 	andeq	r1, r0, r9, asr #6
    2dbc:	0300340f 	movweq	r3, #1039	; 0x40f
    2dc0:	3b0b3a0e 	blcc	2d1600 <_Min_Stack_Size+0x2d1200>
    2dc4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2dc8:	3c193f13 	ldccc	15, cr3, [r9], {19}
    2dcc:	10000019 	andne	r0, r0, r9, lsl r0
    2dd0:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    2dd4:	0000193c 	andeq	r1, r0, ip, lsr r9
    2dd8:	27001511 	smladcs	r0, r1, r5, r1
    2ddc:	12000019 	andne	r0, r0, #25
    2de0:	0e030017 	mcreq	0, 0, r0, cr3, cr7, {0}
    2de4:	0000193c 	andeq	r1, r0, ip, lsr r9
    2de8:	03011313 	movweq	r1, #4883	; 0x1313
    2dec:	3a0b0b0e 	bcc	2c5a2c <_Min_Stack_Size+0x2c562c>
    2df0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2df4:	0013010b 	andseq	r0, r3, fp, lsl #2
    2df8:	000d1400 	andeq	r1, sp, r0, lsl #8
    2dfc:	0b3a0e03 	bleq	e86610 <_Min_Stack_Size+0xe86210>
    2e00:	0b39053b 	bleq	e442f4 <_Min_Stack_Size+0xe43ef4>
    2e04:	0b381349 	bleq	e07b30 <_Min_Stack_Size+0xe07730>
    2e08:	21150000 	tstcs	r5, r0
    2e0c:	2f134900 	svccs	0x00134900
    2e10:	1600000b 	strne	r0, [r0], -fp
    2e14:	0e030104 	adfeqs	f0, f3, f4
    2e18:	0b0b0b3e 	bleq	2c5b18 <_Min_Stack_Size+0x2c5718>
    2e1c:	0b3a1349 	bleq	e87b48 <_Min_Stack_Size+0xe87748>
    2e20:	0b39053b 	bleq	e44314 <_Min_Stack_Size+0xe43f14>
    2e24:	00001301 	andeq	r1, r0, r1, lsl #6
    2e28:	03000d17 	movweq	r0, #3351	; 0xd17
    2e2c:	3b0b3a08 	blcc	2d1654 <_Min_Stack_Size+0x2d1254>
    2e30:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2e34:	000b3813 	andeq	r3, fp, r3, lsl r8
    2e38:	01171800 	tsteq	r7, r0, lsl #16
    2e3c:	0b3a0b0b 	bleq	e85a70 <_Min_Stack_Size+0xe85670>
    2e40:	0b39053b 	bleq	e44334 <_Min_Stack_Size+0xe43f34>
    2e44:	00001301 	andeq	r1, r0, r1, lsl #6
    2e48:	03000d19 	movweq	r0, #3353	; 0xd19
    2e4c:	3b0b3a08 	blcc	2d1674 <_Min_Stack_Size+0x2d1274>
    2e50:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2e54:	1a000013 	bne	2ea8 <_Min_Stack_Size+0x2aa8>
    2e58:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2e5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2e60:	13490b39 	movtne	r0, #39737	; 0x9b39
    2e64:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
    2e68:	03193f01 	tsteq	r9, #1, 30
    2e6c:	3b0b3a0e 	blcc	2d16ac <_Min_Stack_Size+0x2d12ac>
    2e70:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2e74:	11134919 	tstne	r3, r9, lsl r9
    2e78:	40061201 	andmi	r1, r6, r1, lsl #4
    2e7c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    2e80:	00001301 	andeq	r1, r0, r1, lsl #6
    2e84:	0300051c 	movweq	r0, #1308	; 0x51c
    2e88:	3b0b3a08 	blcc	2d16b0 <_Min_Stack_Size+0x2d12b0>
    2e8c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2e90:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    2e94:	00001742 	andeq	r1, r0, r2, asr #14
    2e98:	0300341d 	movweq	r3, #1053	; 0x41d
    2e9c:	3b0b3a08 	blcc	2d16c4 <_Min_Stack_Size+0x2d12c4>
    2ea0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2ea4:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2ea8:	08030034 	stmdaeq	r3, {r2, r4, r5}
    2eac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2eb0:	13490b39 	movtne	r0, #39737	; 0x9b39
    2eb4:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
    2eb8:	1f000017 	svcne	0x00000017
    2ebc:	1755010b 	ldrbne	r0, [r5, -fp, lsl #2]
    2ec0:	00001301 	andeq	r1, r0, r1, lsl #6
    2ec4:	03003420 	movweq	r3, #1056	; 0x420
    2ec8:	3b0b3a0e 	blcc	2d1708 <_Min_Stack_Size+0x2d1308>
    2ecc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2ed0:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    2ed4:	00001742 	andeq	r1, r0, r2, asr #14
    2ed8:	55010b21 	strpl	r0, [r1, #-2849]	; 0xfffff4df
    2edc:	00000017 	andeq	r0, r0, r7, lsl r0
    2ee0:	10001101 	andne	r1, r0, r1, lsl #2
    2ee4:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    2ee8:	1b0e0301 	blne	383af4 <_Min_Stack_Size+0x3836f4>
    2eec:	130e250e 	movwne	r2, #58638	; 0xe50e
    2ef0:	00000005 	andeq	r0, r0, r5
    2ef4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2ef8:	030b130e 	movweq	r1, #45838	; 0xb30e
    2efc:	110e1b0e 	tstne	lr, lr, lsl #22
    2f00:	10061201 	andne	r1, r6, r1, lsl #4
    2f04:	02000017 	andeq	r0, r0, #23
    2f08:	0b0b0024 	bleq	2c2fa0 <_Min_Stack_Size+0x2c2ba0>
    2f0c:	0e030b3e 	vmoveq.16	d3[0], r0
    2f10:	24030000 	strcs	r0, [r3], #-0
    2f14:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2f18:	0008030b 	andeq	r0, r8, fp, lsl #6
    2f1c:	00160400 	andseq	r0, r6, r0, lsl #8
    2f20:	0b3a0e03 	bleq	e86734 <_Min_Stack_Size+0xe86334>
    2f24:	0b39053b 	bleq	e44418 <_Min_Stack_Size+0xe44018>
    2f28:	00001349 	andeq	r1, r0, r9, asr #6
    2f2c:	03001605 	movweq	r1, #1541	; 0x605
    2f30:	3b0b3a0e 	blcc	2d1770 <_Min_Stack_Size+0x2d1370>
    2f34:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2f38:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2f3c:	0b0b0117 	bleq	2c33a0 <_Min_Stack_Size+0x2c2fa0>
    2f40:	0b3b0b3a 	bleq	ec5c30 <_Min_Stack_Size+0xec5830>
    2f44:	13010b39 	movwne	r0, #6969	; 0x1b39
    2f48:	0d070000 	stceq	0, cr0, [r7, #-0]
    2f4c:	3a0e0300 	bcc	383b54 <_Min_Stack_Size+0x383754>
    2f50:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f54:	0013490b 	andseq	r4, r3, fp, lsl #18
    2f58:	01010800 	tsteq	r1, r0, lsl #16
    2f5c:	13011349 	movwne	r1, #4937	; 0x1349
    2f60:	21090000 	mrscs	r0, (UNDEF: 9)
    2f64:	2f134900 	svccs	0x00134900
    2f68:	0a00000b 	beq	2f9c <_Min_Stack_Size+0x2b9c>
    2f6c:	0b0b0113 	bleq	2c33c0 <_Min_Stack_Size+0x2c2fc0>
    2f70:	0b3b0b3a 	bleq	ec5c60 <_Min_Stack_Size+0xec5860>
    2f74:	13010b39 	movwne	r0, #6969	; 0x1b39
    2f78:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    2f7c:	3a0e0300 	bcc	383b84 <_Min_Stack_Size+0x383784>
    2f80:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f84:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2f88:	0c00000b 	stceq	0, cr0, [r0], {11}
    2f8c:	0b0b000f 	bleq	2c2fd0 <_Min_Stack_Size+0x2c2bd0>
    2f90:	130d0000 	movwne	r0, #53248	; 0xd000
    2f94:	0b0e0301 	bleq	383ba0 <_Min_Stack_Size+0x3837a0>
    2f98:	3b0b3a0b 	blcc	2d17cc <_Min_Stack_Size+0x2d13cc>
    2f9c:	010b390b 	tsteq	fp, fp, lsl #18
    2fa0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    2fa4:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    2fa8:	0b3b0b3a 	bleq	ec5c98 <_Min_Stack_Size+0xec5898>
    2fac:	13490b39 	movtne	r0, #39737	; 0x9b39
    2fb0:	00000b38 	andeq	r0, r0, r8, lsr fp
    2fb4:	0b000f0f 	bleq	6bf8 <_Min_Stack_Size+0x67f8>
    2fb8:	0013490b 	andseq	r4, r3, fp, lsl #18
    2fbc:	01131000 	tsteq	r3, r0
    2fc0:	050b0e03 	streq	r0, [fp, #-3587]	; 0xfffff1fd
    2fc4:	0b3b0b3a 	bleq	ec5cb4 <_Min_Stack_Size+0xec58b4>
    2fc8:	13010b39 	movwne	r0, #6969	; 0x1b39
    2fcc:	0d110000 	ldceq	0, cr0, [r1, #-0]
    2fd0:	3a0e0300 	bcc	383bd8 <_Min_Stack_Size+0x3837d8>
    2fd4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2fd8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2fdc:	12000005 	andne	r0, r0, #5
    2fe0:	19270015 	stmdbne	r7!, {r0, r2, r4}
    2fe4:	15130000 	ldrne	r0, [r3, #-0]
    2fe8:	49192701 	ldmdbmi	r9, {r0, r8, r9, sl, sp}
    2fec:	00130113 	andseq	r0, r3, r3, lsl r1
    2ff0:	00051400 	andeq	r1, r5, r0, lsl #8
    2ff4:	00001349 	andeq	r1, r0, r9, asr #6
    2ff8:	49002615 	stmdbmi	r0, {r0, r2, r4, r9, sl, sp}
    2ffc:	16000013 			; <UNDEFINED> instruction: 0x16000013
    3000:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    3004:	0b3a050b 	bleq	e84438 <_Min_Stack_Size+0xe84038>
    3008:	0b39053b 	bleq	e444fc <_Min_Stack_Size+0xe440fc>
    300c:	00001301 	andeq	r1, r0, r1, lsl #6
    3010:	03000d17 	movweq	r0, #3351	; 0xd17
    3014:	3b0b3a0e 	blcc	2d1854 <_Min_Stack_Size+0x2d1454>
    3018:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    301c:	000b3813 	andeq	r3, fp, r3, lsl r8
    3020:	000d1800 	andeq	r1, sp, r0, lsl #16
    3024:	0b3a0e03 	bleq	e86838 <_Min_Stack_Size+0xe86438>
    3028:	0b39053b 	bleq	e4451c <_Min_Stack_Size+0xe4411c>
    302c:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
    3030:	13190000 	tstne	r9, #0
    3034:	0b0e0301 	bleq	383c40 <_Min_Stack_Size+0x383840>
    3038:	3b0b3a0b 	blcc	2d186c <_Min_Stack_Size+0x2d146c>
    303c:	010b3905 	tsteq	fp, r5, lsl #18
    3040:	1a000013 	bne	3094 <_Min_Stack_Size+0x2c94>
    3044:	0b0b0113 	bleq	2c3498 <_Min_Stack_Size+0x2c3098>
    3048:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    304c:	13010b39 	movwne	r0, #6969	; 0x1b39
    3050:	171b0000 	ldrne	r0, [fp, -r0]
    3054:	3a0b0b01 	bcc	2c5c60 <_Min_Stack_Size+0x2c5860>
    3058:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    305c:	0013010b 	andseq	r0, r3, fp, lsl #2
    3060:	000d1c00 	andeq	r1, sp, r0, lsl #24
    3064:	0b3a0e03 	bleq	e86878 <_Min_Stack_Size+0xe86478>
    3068:	0b39053b 	bleq	e4455c <_Min_Stack_Size+0xe4415c>
    306c:	00001349 	andeq	r1, r0, r9, asr #6
    3070:	0300131d 	movweq	r1, #797	; 0x31d
    3074:	00193c0e 	andseq	r3, r9, lr, lsl #24
    3078:	01151e00 	tsteq	r5, r0, lsl #28
    307c:	13011927 	movwne	r1, #6439	; 0x1927
    3080:	341f0000 	ldrcc	r0, [pc], #-0	; 3088 <_Min_Stack_Size+0x2c88>
    3084:	3a0e0300 	bcc	383c8c <_Min_Stack_Size+0x38388c>
    3088:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    308c:	3f13490b 	svccc	0x0013490b
    3090:	00193c19 	andseq	r3, r9, r9, lsl ip
    3094:	00342000 	eorseq	r2, r4, r0
    3098:	0b3a0e03 	bleq	e868ac <_Min_Stack_Size+0xe864ac>
    309c:	0b390b3b 	bleq	e45d90 <_Min_Stack_Size+0xe45990>
    30a0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    30a4:	0000193c 	andeq	r1, r0, ip, lsr r9
    30a8:	03010421 	movweq	r0, #5153	; 0x1421
    30ac:	0b0b3e0e 	bleq	2d28ec <_Min_Stack_Size+0x2d24ec>
    30b0:	3a13490b 	bcc	4d54e4 <_Min_Stack_Size+0x4d50e4>
    30b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    30b8:	0013010b 	andseq	r0, r3, fp, lsl #2
    30bc:	00282200 	eoreq	r2, r8, r0, lsl #4
    30c0:	0b1c0e03 	bleq	7068d4 <_Min_Stack_Size+0x7064d4>
    30c4:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    30c8:	03193f01 	tsteq	r9, #1, 30
    30cc:	3b0b3a0e 	blcc	2d190c <_Min_Stack_Size+0x2d150c>
    30d0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    30d4:	11134919 	tstne	r3, r9, lsl r9
    30d8:	40061201 	andmi	r1, r6, r1, lsl #4
    30dc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    30e0:	00001301 	andeq	r1, r0, r1, lsl #6
    30e4:	03000524 	movweq	r0, #1316	; 0x524
    30e8:	3b0b3a08 	blcc	2d1910 <_Min_Stack_Size+0x2d1510>
    30ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    30f0:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    30f4:	00001742 	andeq	r1, r0, r2, asr #14
    30f8:	01828925 	orreq	r8, r2, r5, lsr #18
    30fc:	95011101 	strls	r1, [r1, #-257]	; 0xfffffeff
    3100:	13311942 	teqne	r1, #1081344	; 0x108000
    3104:	8a260000 	bhi	98310c <_Min_Stack_Size+0x982d0c>
    3108:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    310c:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
    3110:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    3114:	3c193f00 	ldccc	15, cr3, [r9], {-0}
    3118:	030e6e19 	movweq	r6, #60953	; 0xee19
    311c:	3b0b3a0e 	blcc	2d195c <_Min_Stack_Size+0x2d155c>
    3120:	000b390b 	andeq	r3, fp, fp, lsl #18
    3124:	11010000 	mrsne	r0, (UNDEF: 1)
    3128:	130e2501 	movwne	r2, #58625	; 0xe501
    312c:	1b0e030b 	blne	383d60 <_Min_Stack_Size+0x383960>
    3130:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
    3134:	00171006 	andseq	r1, r7, r6
    3138:	00240200 	eoreq	r0, r4, r0, lsl #4
    313c:	0b3e0b0b 	bleq	f85d70 <_Min_Stack_Size+0xf85970>
    3140:	00000e03 	andeq	r0, r0, r3, lsl #28
    3144:	0b002403 	bleq	c158 <_Min_Stack_Size+0xbd58>
    3148:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    314c:	04000008 	streq	r0, [r0], #-8
    3150:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    3154:	0b3b0b3a 	bleq	ec5e44 <_Min_Stack_Size+0xec5a44>
    3158:	13490b39 	movtne	r0, #39737	; 0x9b39
    315c:	01050000 	mrseq	r0, (UNDEF: 5)
    3160:	01134901 	tsteq	r3, r1, lsl #18
    3164:	06000013 			; <UNDEFINED> instruction: 0x06000013
    3168:	00000021 	andeq	r0, r0, r1, lsr #32
    316c:	0b000f07 	bleq	6d90 <_Min_Stack_Size+0x6990>
    3170:	0013490b 	andseq	r4, r3, fp, lsl #18
    3174:	00150800 	andseq	r0, r5, r0, lsl #16
    3178:	00001927 	andeq	r1, r0, r7, lsr #18
    317c:	03003409 	movweq	r3, #1033	; 0x409
    3180:	3b0b3a0e 	blcc	2d19c0 <_Min_Stack_Size+0x2d15c0>
    3184:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3188:	3c193f13 	ldccc	15, cr3, [r9], {19}
    318c:	0a000019 	beq	31f8 <_Min_Stack_Size+0x2df8>
    3190:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    3194:	0b3a0e03 	bleq	e869a8 <_Min_Stack_Size+0xe865a8>
    3198:	0b390b3b 	bleq	e45e8c <_Min_Stack_Size+0xe45a8c>
    319c:	01111927 	tsteq	r1, r7, lsr #18
    31a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    31a4:	01194296 			; <UNDEFINED> instruction: 0x01194296
    31a8:	0b000013 	bleq	31fc <_Min_Stack_Size+0x2dfc>
    31ac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    31b0:	0b3b0b3a 	bleq	ec5ea0 <_Min_Stack_Size+0xec5aa0>
    31b4:	13490b39 	movtne	r0, #39737	; 0x9b39
    31b8:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
    31bc:	0c000017 	stceq	0, cr0, [r0], {23}
    31c0:	08030034 	stmdaeq	r3, {r2, r4, r5}
    31c4:	0b3b0b3a 	bleq	ec5eb4 <_Min_Stack_Size+0xec5ab4>
    31c8:	13490b39 	movtne	r0, #39737	; 0x9b39
    31cc:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
    31d0:	0d000017 	stceq	0, cr0, [r0, #-92]	; 0xffffffa4
    31d4:	00018289 	andeq	r8, r1, r9, lsl #5
    31d8:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    31dc:	00133119 	andseq	r3, r3, r9, lsl r1
    31e0:	002e0e00 	eoreq	r0, lr, r0, lsl #28
    31e4:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    31e8:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
    31ec:	0b3b0b3a 	bleq	ec5edc <_Min_Stack_Size+0xec5adc>
    31f0:	00000b39 	andeq	r0, r0, r9, lsr fp
    31f4:	01110100 	tsteq	r1, r0, lsl #2
    31f8:	0b130e25 	bleq	4c6a94 <_Min_Stack_Size+0x4c6694>
    31fc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    3200:	00001710 	andeq	r1, r0, r0, lsl r7
    3204:	0b002402 	bleq	c214 <_Min_Stack_Size+0xbe14>
    3208:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    320c:	03000008 	movweq	r0, #8
    3210:	0b0b0024 	bleq	2c32a8 <_Min_Stack_Size+0x2c2ea8>
    3214:	0e030b3e 	vmoveq.16	d3[0], r0
    3218:	16040000 	strne	r0, [r4], -r0
    321c:	3a0e0300 	bcc	383e24 <_Min_Stack_Size+0x383a24>
    3220:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3224:	0013490b 	andseq	r4, r3, fp, lsl #18
    3228:	00160500 	andseq	r0, r6, r0, lsl #10
    322c:	0b3a0e03 	bleq	e86a40 <_Min_Stack_Size+0xe86640>
    3230:	0b390b3b 	bleq	e45f24 <_Min_Stack_Size+0xe45b24>
    3234:	00001349 	andeq	r1, r0, r9, asr #6
    3238:	0b011706 	bleq	48e58 <_Min_Stack_Size+0x48a58>
    323c:	3b0b3a0b 	blcc	2d1a70 <_Min_Stack_Size+0x2d1670>
    3240:	010b390b 	tsteq	fp, fp, lsl #18
    3244:	07000013 	smladeq	r0, r3, r0, r0
    3248:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    324c:	0b3b0b3a 	bleq	ec5f3c <_Min_Stack_Size+0xec5b3c>
    3250:	13490b39 	movtne	r0, #39737	; 0x9b39
    3254:	01080000 	mrseq	r0, (UNDEF: 8)
    3258:	01134901 	tsteq	r3, r1, lsl #18
    325c:	09000013 	stmdbeq	r0, {r0, r1, r4}
    3260:	13490021 	movtne	r0, #36897	; 0x9021
    3264:	00000b2f 	andeq	r0, r0, pc, lsr #22
    3268:	0b01130a 	bleq	47e98 <_Min_Stack_Size+0x47a98>
    326c:	3b0b3a0b 	blcc	2d1aa0 <_Min_Stack_Size+0x2d16a0>
    3270:	010b390b 	tsteq	fp, fp, lsl #18
    3274:	0b000013 	bleq	32c8 <_Min_Stack_Size+0x2ec8>
    3278:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    327c:	0b3b0b3a 	bleq	ec5f6c <_Min_Stack_Size+0xec5b6c>
    3280:	13490b39 	movtne	r0, #39737	; 0x9b39
    3284:	00000b38 	andeq	r0, r0, r8, lsr fp
    3288:	0b000f0c 	bleq	6ec0 <_Min_Stack_Size+0x6ac0>
    328c:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    3290:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    3294:	0b3a0b0b 	bleq	e85ec8 <_Min_Stack_Size+0xe85ac8>
    3298:	0b390b3b 	bleq	e45f8c <_Min_Stack_Size+0xe45b8c>
    329c:	00001301 	andeq	r1, r0, r1, lsl #6
    32a0:	03000d0e 	movweq	r0, #3342	; 0xd0e
    32a4:	3b0b3a08 	blcc	2d1acc <_Min_Stack_Size+0x2d16cc>
    32a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    32ac:	000b3813 	andeq	r3, fp, r3, lsl r8
    32b0:	000f0f00 	andeq	r0, pc, r0, lsl #30
    32b4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    32b8:	13100000 	tstne	r0, #0
    32bc:	0b0e0301 	bleq	383ec8 <_Min_Stack_Size+0x383ac8>
    32c0:	3b0b3a05 	blcc	2d1adc <_Min_Stack_Size+0x2d16dc>
    32c4:	010b390b 	tsteq	fp, fp, lsl #18
    32c8:	11000013 	tstne	r0, r3, lsl r0
    32cc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    32d0:	0b3b0b3a 	bleq	ec5fc0 <_Min_Stack_Size+0xec5bc0>
    32d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    32d8:	00000538 	andeq	r0, r0, r8, lsr r5
    32dc:	27001512 	smladcs	r0, r2, r5, r1
    32e0:	13000019 	movwne	r0, #25
    32e4:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    32e8:	13011349 	movwne	r1, #4937	; 0x1349
    32ec:	05140000 	ldreq	r0, [r4, #-0]
    32f0:	00134900 	andseq	r4, r3, r0, lsl #18
    32f4:	00261500 	eoreq	r1, r6, r0, lsl #10
    32f8:	00001349 	andeq	r1, r0, r9, asr #6
    32fc:	03011316 	movweq	r1, #4886	; 0x1316
    3300:	3a050b0e 	bcc	145f40 <_Min_Stack_Size+0x145b40>
    3304:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3308:	0013010b 	andseq	r0, r3, fp, lsl #2
    330c:	000d1700 	andeq	r1, sp, r0, lsl #14
    3310:	0b3a0e03 	bleq	e86b24 <_Min_Stack_Size+0xe86724>
    3314:	0b39053b 	bleq	e44808 <_Min_Stack_Size+0xe44408>
    3318:	0b381349 	bleq	e08044 <_Min_Stack_Size+0xe07c44>
    331c:	0d180000 	ldceq	0, cr0, [r8, #-0]
    3320:	3a0e0300 	bcc	383f28 <_Min_Stack_Size+0x383b28>
    3324:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3328:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    332c:	19000005 	stmdbne	r0, {r0, r2}
    3330:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    3334:	0b3a0b0b 	bleq	e85f68 <_Min_Stack_Size+0xe85b68>
    3338:	0b39053b 	bleq	e4482c <_Min_Stack_Size+0xe4442c>
    333c:	00001301 	andeq	r1, r0, r1, lsl #6
    3340:	0b01131a 	bleq	47fb0 <_Min_Stack_Size+0x47bb0>
    3344:	3b0b3a0b 	blcc	2d1b78 <_Min_Stack_Size+0x2d1778>
    3348:	010b3905 	tsteq	fp, r5, lsl #18
    334c:	1b000013 	blne	33a0 <_Min_Stack_Size+0x2fa0>
    3350:	0b0b0117 	bleq	2c37b4 <_Min_Stack_Size+0x2c33b4>
    3354:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3358:	13010b39 	movwne	r0, #6969	; 0x1b39
    335c:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    3360:	3a0e0300 	bcc	383f68 <_Min_Stack_Size+0x383b68>
    3364:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3368:	0013490b 	andseq	r4, r3, fp, lsl #18
    336c:	00131d00 	andseq	r1, r3, r0, lsl #26
    3370:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    3374:	151e0000 	ldrne	r0, [lr, #-0]
    3378:	01192701 	tsteq	r9, r1, lsl #14
    337c:	1f000013 	svcne	0x00000013
    3380:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    3384:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3388:	13490b39 	movtne	r0, #39737	; 0x9b39
    338c:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    3390:	34200000 	strtcc	r0, [r0], #-0
    3394:	3a0e0300 	bcc	383f9c <_Min_Stack_Size+0x383b9c>
    3398:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    339c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    33a0:	21000018 	tstcs	r0, r8, lsl r0
    33a4:	13470034 	movtne	r0, #28724	; 0x7034
    33a8:	00001802 	andeq	r1, r0, r2, lsl #16
    33ac:	01110100 	tsteq	r1, r0, lsl #2
    33b0:	0b130e25 	bleq	4c6c4c <_Min_Stack_Size+0x4c684c>
    33b4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    33b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    33bc:	00001710 	andeq	r1, r0, r0, lsl r7
    33c0:	0b002402 	bleq	c3d0 <_Min_Stack_Size+0xbfd0>
    33c4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    33c8:	03000008 	movweq	r0, #8
    33cc:	0b0b0024 	bleq	2c3464 <_Min_Stack_Size+0x2c3064>
    33d0:	0e030b3e 	vmoveq.16	d3[0], r0
    33d4:	16040000 	strne	r0, [r4], -r0
    33d8:	3a0e0300 	bcc	383fe0 <_Min_Stack_Size+0x383be0>
    33dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    33e0:	0013490b 	andseq	r4, r3, fp, lsl #18
    33e4:	00160500 	andseq	r0, r6, r0, lsl #10
    33e8:	0b3a0e03 	bleq	e86bfc <_Min_Stack_Size+0xe867fc>
    33ec:	0b390b3b 	bleq	e460e0 <_Min_Stack_Size+0xe45ce0>
    33f0:	00001349 	andeq	r1, r0, r9, asr #6
    33f4:	0b011706 	bleq	49014 <_Min_Stack_Size+0x48c14>
    33f8:	3b0b3a0b 	blcc	2d1c2c <_Min_Stack_Size+0x2d182c>
    33fc:	010b390b 	tsteq	fp, fp, lsl #18
    3400:	07000013 	smladeq	r0, r3, r0, r0
    3404:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    3408:	0b3b0b3a 	bleq	ec60f8 <_Min_Stack_Size+0xec5cf8>
    340c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3410:	01080000 	mrseq	r0, (UNDEF: 8)
    3414:	01134901 	tsteq	r3, r1, lsl #18
    3418:	09000013 	stmdbeq	r0, {r0, r1, r4}
    341c:	13490021 	movtne	r0, #36897	; 0x9021
    3420:	00000b2f 	andeq	r0, r0, pc, lsr #22
    3424:	0b01130a 	bleq	48054 <_Min_Stack_Size+0x47c54>
    3428:	3b0b3a0b 	blcc	2d1c5c <_Min_Stack_Size+0x2d185c>
    342c:	010b390b 	tsteq	fp, fp, lsl #18
    3430:	0b000013 	bleq	3484 <_Min_Stack_Size+0x3084>
    3434:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    3438:	0b3b0b3a 	bleq	ec6128 <_Min_Stack_Size+0xec5d28>
    343c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3440:	00000b38 	andeq	r0, r0, r8, lsr fp
    3444:	0b000f0c 	bleq	707c <_Min_Stack_Size+0x6c7c>
    3448:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
    344c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    3450:	0b3a0b0b 	bleq	e86084 <_Min_Stack_Size+0xe85c84>
    3454:	0b390b3b 	bleq	e46148 <_Min_Stack_Size+0xe45d48>
    3458:	00001301 	andeq	r1, r0, r1, lsl #6
    345c:	03000d0e 	movweq	r0, #3342	; 0xd0e
    3460:	3b0b3a08 	blcc	2d1c88 <_Min_Stack_Size+0x2d1888>
    3464:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3468:	000b3813 	andeq	r3, fp, r3, lsl r8
    346c:	000f0f00 	andeq	r0, pc, r0, lsl #30
    3470:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    3474:	13100000 	tstne	r0, #0
    3478:	0b0e0301 	bleq	384084 <_Min_Stack_Size+0x383c84>
    347c:	3b0b3a05 	blcc	2d1c98 <_Min_Stack_Size+0x2d1898>
    3480:	010b390b 	tsteq	fp, fp, lsl #18
    3484:	11000013 	tstne	r0, r3, lsl r0
    3488:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    348c:	0b3b0b3a 	bleq	ec617c <_Min_Stack_Size+0xec5d7c>
    3490:	13490b39 	movtne	r0, #39737	; 0x9b39
    3494:	00000538 	andeq	r0, r0, r8, lsr r5
    3498:	27001512 	smladcs	r0, r2, r5, r1
    349c:	13000019 	movwne	r0, #25
    34a0:	19270115 	stmdbne	r7!, {r0, r2, r4, r8}
    34a4:	13011349 	movwne	r1, #4937	; 0x1349
    34a8:	05140000 	ldreq	r0, [r4, #-0]
    34ac:	00134900 	andseq	r4, r3, r0, lsl #18
    34b0:	00261500 	eoreq	r1, r6, r0, lsl #10
    34b4:	00001349 	andeq	r1, r0, r9, asr #6
    34b8:	03011316 	movweq	r1, #4886	; 0x1316
    34bc:	3a050b0e 	bcc	1460fc <_Min_Stack_Size+0x145cfc>
    34c0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    34c4:	0013010b 	andseq	r0, r3, fp, lsl #2
    34c8:	000d1700 	andeq	r1, sp, r0, lsl #14
    34cc:	0b3a0e03 	bleq	e86ce0 <_Min_Stack_Size+0xe868e0>
    34d0:	0b39053b 	bleq	e449c4 <_Min_Stack_Size+0xe445c4>
    34d4:	0b381349 	bleq	e08200 <_Min_Stack_Size+0xe07e00>
    34d8:	0d180000 	ldceq	0, cr0, [r8, #-0]
    34dc:	3a0e0300 	bcc	3840e4 <_Min_Stack_Size+0x383ce4>
    34e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    34e4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    34e8:	19000005 	stmdbne	r0, {r0, r2}
    34ec:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    34f0:	0b3a0b0b 	bleq	e86124 <_Min_Stack_Size+0xe85d24>
    34f4:	0b39053b 	bleq	e449e8 <_Min_Stack_Size+0xe445e8>
    34f8:	00001301 	andeq	r1, r0, r1, lsl #6
    34fc:	0b01131a 	bleq	4816c <_Min_Stack_Size+0x47d6c>
    3500:	3b0b3a0b 	blcc	2d1d34 <_Min_Stack_Size+0x2d1934>
    3504:	010b3905 	tsteq	fp, r5, lsl #18
    3508:	1b000013 	blne	355c <_Min_Stack_Size+0x315c>
    350c:	0b0b0117 	bleq	2c3970 <_Min_Stack_Size+0x2c3570>
    3510:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3514:	13010b39 	movwne	r0, #6969	; 0x1b39
    3518:	0d1c0000 	ldceq	0, cr0, [ip, #-0]
    351c:	3a0e0300 	bcc	384124 <_Min_Stack_Size+0x383d24>
    3520:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3524:	0013490b 	andseq	r4, r3, fp, lsl #18
    3528:	00131d00 	andseq	r1, r3, r0, lsl #26
    352c:	193c0e03 	ldmdbne	ip!, {r0, r1, r9, sl, fp}
    3530:	151e0000 	ldrne	r0, [lr, #-0]
    3534:	01192701 	tsteq	r9, r1, lsl #14
    3538:	1f000013 	svcne	0x00000013
    353c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    3540:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3544:	13490b39 	movtne	r0, #39737	; 0x9b39
    3548:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    354c:	34200000 	strtcc	r0, [r0], #-0
    3550:	3a0e0300 	bcc	384158 <_Min_Stack_Size+0x383d58>
    3554:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3558:	3f13490b 	svccc	0x0013490b
    355c:	00193c19 	andseq	r3, r9, r9, lsl ip
    3560:	01042100 	mrseq	r2, (UNDEF: 20)
    3564:	0b3e0e03 	bleq	f86d78 <_Min_Stack_Size+0xf86978>
    3568:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    356c:	0b3b0b3a 	bleq	ec625c <_Min_Stack_Size+0xec5e5c>
    3570:	13010b39 	movwne	r0, #6969	; 0x1b39
    3574:	28220000 	stmdacs	r2!, {}	; <UNPREDICTABLE>
    3578:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    357c:	2300000b 	movwcs	r0, #11
    3580:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    3584:	0b3a0e03 	bleq	e86d98 <_Min_Stack_Size+0xe86998>
    3588:	0b390b3b 	bleq	e4627c <_Min_Stack_Size+0xe45e7c>
    358c:	13491927 	movtne	r1, #39207	; 0x9927
    3590:	06120111 			; <UNDEFINED> instruction: 0x06120111
    3594:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    3598:	00130119 	andseq	r0, r3, r9, lsl r1
    359c:	00052400 	andeq	r2, r5, r0, lsl #8
    35a0:	0b3a0e03 	bleq	e86db4 <_Min_Stack_Size+0xe869b4>
    35a4:	0b390b3b 	bleq	e46298 <_Min_Stack_Size+0xe45e98>
    35a8:	17021349 	strne	r1, [r2, -r9, asr #6]
    35ac:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
    35b0:	00052500 	andeq	r2, r5, r0, lsl #10
    35b4:	0b3a0803 	bleq	e855c8 <_Min_Stack_Size+0xe851c8>
    35b8:	0b390b3b 	bleq	e462ac <_Min_Stack_Size+0xe45eac>
    35bc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    35c0:	05260000 	streq	r0, [r6, #-0]!
    35c4:	3a080300 	bcc	2041cc <_Min_Stack_Size+0x203dcc>
    35c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    35cc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    35d0:	1742b717 	smlaldne	fp, r2, r7, r7
    35d4:	34270000 	strtcc	r0, [r7], #-0
    35d8:	3a0e0300 	bcc	3841e0 <_Min_Stack_Size+0x383de0>
    35dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    35e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    35e4:	1742b717 	smlaldne	fp, r2, r7, r7
    35e8:	34280000 	strtcc	r0, [r8], #-0
    35ec:	3a080300 	bcc	2041f4 <_Min_Stack_Size+0x203df4>
    35f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    35f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    35f8:	1742b717 	smlaldne	fp, r2, r7, r7
    35fc:	01000000 	mrseq	r0, (UNDEF: 0)
    3600:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    3604:	0e030b13 	vmoveq.32	d3[0], r0
    3608:	17550e1b 	smmlane	r5, fp, lr, r0
    360c:	17100111 			; <UNDEFINED> instruction: 0x17100111
    3610:	24020000 	strcs	r0, [r2], #-0
    3614:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    3618:	000e030b 	andeq	r0, lr, fp, lsl #6
    361c:	00240300 	eoreq	r0, r4, r0, lsl #6
    3620:	0b3e0b0b 	bleq	f86254 <_Min_Stack_Size+0xf85e54>
    3624:	00000803 	andeq	r0, r0, r3, lsl #16
    3628:	03001604 	movweq	r1, #1540	; 0x604
    362c:	3b0b3a0e 	blcc	2d1e6c <_Min_Stack_Size+0x2d1a6c>
    3630:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3634:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    3638:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    363c:	0b3b0b3a 	bleq	ec632c <_Min_Stack_Size+0xec5f2c>
    3640:	13490b39 	movtne	r0, #39737	; 0x9b39
    3644:	17060000 	strne	r0, [r6, -r0]
    3648:	3a0b0b01 	bcc	2c6254 <_Min_Stack_Size+0x2c5e54>
    364c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3650:	0013010b 	andseq	r0, r3, fp, lsl #2
    3654:	000d0700 	andeq	r0, sp, r0, lsl #14
    3658:	0b3a0e03 	bleq	e86e6c <_Min_Stack_Size+0xe86a6c>
    365c:	0b390b3b 	bleq	e46350 <_Min_Stack_Size+0xe45f50>
    3660:	00001349 	andeq	r1, r0, r9, asr #6
    3664:	49010108 	stmdbmi	r1, {r3, r8}
    3668:	00130113 	andseq	r0, r3, r3, lsl r1
    366c:	00210900 	eoreq	r0, r1, r0, lsl #18
    3670:	0b2f1349 	bleq	bc839c <_Min_Stack_Size+0xbc7f9c>
    3674:	130a0000 	movwne	r0, #40960	; 0xa000
    3678:	3a0b0b01 	bcc	2c6284 <_Min_Stack_Size+0x2c5e84>
    367c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3680:	0013010b 	andseq	r0, r3, fp, lsl #2
    3684:	000d0b00 	andeq	r0, sp, r0, lsl #22
    3688:	0b3a0e03 	bleq	e86e9c <_Min_Stack_Size+0xe86a9c>
    368c:	0b390b3b 	bleq	e46380 <_Min_Stack_Size+0xe45f80>
    3690:	0b381349 	bleq	e083bc <_Min_Stack_Size+0xe07fbc>
    3694:	0f0c0000 	svceq	0x000c0000
    3698:	000b0b00 	andeq	r0, fp, r0, lsl #22
    369c:	01130d00 	tsteq	r3, r0, lsl #26
    36a0:	0b0b0e03 	bleq	2c6eb4 <_Min_Stack_Size+0x2c6ab4>
    36a4:	0b3b0b3a 	bleq	ec6394 <_Min_Stack_Size+0xec5f94>
    36a8:	13010b39 	movwne	r0, #6969	; 0x1b39
    36ac:	0d0e0000 	stceq	0, cr0, [lr, #-0]
    36b0:	3a080300 	bcc	2042b8 <_Min_Stack_Size+0x203eb8>
    36b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    36b8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    36bc:	0f00000b 	svceq	0x0000000b
    36c0:	0b0b000f 	bleq	2c3704 <_Min_Stack_Size+0x2c3304>
    36c4:	00001349 	andeq	r1, r0, r9, asr #6
    36c8:	03011310 	movweq	r1, #4880	; 0x1310
    36cc:	3a050b0e 	bcc	14630c <_Min_Stack_Size+0x145f0c>
    36d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    36d4:	0013010b 	andseq	r0, r3, fp, lsl #2
    36d8:	000d1100 	andeq	r1, sp, r0, lsl #2
    36dc:	0b3a0e03 	bleq	e86ef0 <_Min_Stack_Size+0xe86af0>
    36e0:	0b390b3b 	bleq	e463d4 <_Min_Stack_Size+0xe45fd4>
    36e4:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
    36e8:	15120000 	ldrne	r0, [r2, #-0]
    36ec:	00192700 	andseq	r2, r9, r0, lsl #14
    36f0:	01151300 	tsteq	r5, r0, lsl #6
    36f4:	13491927 	movtne	r1, #39207	; 0x9927
    36f8:	00001301 	andeq	r1, r0, r1, lsl #6
    36fc:	49000514 	stmdbmi	r0, {r2, r4, r8, sl}
    3700:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    3704:	13490026 	movtne	r0, #36902	; 0x9026
    3708:	13160000 	tstne	r6, #0
    370c:	0b0e0301 	bleq	384318 <_Min_Stack_Size+0x383f18>
    3710:	3b0b3a05 	blcc	2d1f2c <_Min_Stack_Size+0x2d1b2c>
    3714:	010b3905 	tsteq	fp, r5, lsl #18
    3718:	17000013 	smladne	r0, r3, r0, r0
    371c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    3720:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3724:	13490b39 	movtne	r0, #39737	; 0x9b39
    3728:	00000b38 	andeq	r0, r0, r8, lsr fp
    372c:	03000d18 	movweq	r0, #3352	; 0xd18
    3730:	3b0b3a0e 	blcc	2d1f70 <_Min_Stack_Size+0x2d1b70>
    3734:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3738:	00053813 	andeq	r3, r5, r3, lsl r8
    373c:	01131900 	tsteq	r3, r0, lsl #18
    3740:	0b0b0e03 	bleq	2c6f54 <_Min_Stack_Size+0x2c6b54>
    3744:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    3748:	13010b39 	movwne	r0, #6969	; 0x1b39
    374c:	131a0000 	tstne	sl, #0
    3750:	3a0b0b01 	bcc	2c635c <_Min_Stack_Size+0x2c5f5c>
    3754:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3758:	0013010b 	andseq	r0, r3, fp, lsl #2
    375c:	01171b00 	tsteq	r7, r0, lsl #22
    3760:	0b3a0b0b 	bleq	e86394 <_Min_Stack_Size+0xe85f94>
    3764:	0b39053b 	bleq	e44c58 <_Min_Stack_Size+0xe44858>
    3768:	00001301 	andeq	r1, r0, r1, lsl #6
    376c:	03000d1c 	movweq	r0, #3356	; 0xd1c
    3770:	3b0b3a0e 	blcc	2d1fb0 <_Min_Stack_Size+0x2d1bb0>
    3774:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3778:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    377c:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    3780:	0000193c 	andeq	r1, r0, ip, lsr r9
    3784:	2701151e 	smladcs	r1, lr, r5, r1
    3788:	00130119 	andseq	r0, r3, r9, lsl r1
    378c:	00341f00 	eorseq	r1, r4, r0, lsl #30
    3790:	0b3a0e03 	bleq	e86fa4 <_Min_Stack_Size+0xe86ba4>
    3794:	0b39053b 	bleq	e44c88 <_Min_Stack_Size+0xe44888>
    3798:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
    379c:	0000193c 	andeq	r1, r0, ip, lsr r9
    37a0:	03003420 	movweq	r3, #1056	; 0x420
    37a4:	3b0b3a0e 	blcc	2d1fe4 <_Min_Stack_Size+0x2d1be4>
    37a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    37ac:	3c193f13 	ldccc	15, cr3, [r9], {19}
    37b0:	21000019 	tstcs	r0, r9, lsl r0
    37b4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    37b8:	0b3b0b3a 	bleq	ec64a8 <_Min_Stack_Size+0xec60a8>
    37bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    37c0:	00000b1c 	andeq	r0, r0, ip, lsl fp
    37c4:	3f012e22 	svccc	0x00012e22
    37c8:	3a0e0319 	bcc	384434 <_Min_Stack_Size+0x384034>
    37cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    37d0:	1119270b 	tstne	r9, fp, lsl #14
    37d4:	40061201 	andmi	r1, r6, r1, lsl #4
    37d8:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
    37dc:	00001301 	andeq	r1, r0, r1, lsl #6
    37e0:	03000523 	movweq	r0, #1315	; 0x523
    37e4:	3b0b3a0e 	blcc	2d2024 <_Min_Stack_Size+0x2d1c24>
    37e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    37ec:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    37f0:	00001742 	andeq	r1, r0, r2, asr #14
    37f4:	03000524 	movweq	r0, #1316	; 0x524
    37f8:	3b0b3a08 	blcc	2d2020 <_Min_Stack_Size+0x2d1c20>
    37fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3800:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    3804:	00001742 	andeq	r1, r0, r2, asr #14
    3808:	03003425 	movweq	r3, #1061	; 0x425
    380c:	3b0b3a08 	blcc	2d2034 <_Min_Stack_Size+0x2d1c34>
    3810:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3814:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    3818:	00001742 	andeq	r1, r0, r2, asr #14
    381c:	03003426 	movweq	r3, #1062	; 0x426
    3820:	3b0b3a0e 	blcc	2d2060 <_Min_Stack_Size+0x2d1c60>
    3824:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3828:	b7170213 			; <UNDEFINED> instruction: 0xb7170213
    382c:	00001742 	andeq	r1, r0, r2, asr #14
    3830:	03000a27 	movweq	r0, #2599	; 0xa27
    3834:	3b0b3a0e 	blcc	2d2074 <_Min_Stack_Size+0x2d1c74>
    3838:	000b390b 	andeq	r3, fp, fp, lsl #18
    383c:	010b2800 	tsteq	fp, r0, lsl #16
    3840:	00001755 	andeq	r1, r0, r5, asr r7
    3844:	01828929 	orreq	r8, r2, r9, lsr #18
    3848:	00011101 	andeq	r1, r1, r1, lsl #2
    384c:	828a2a00 	addhi	r2, sl, #0, 20
    3850:	18020001 	stmdane	r2, {r0}
    3854:	00184291 	mulseq	r8, r1, r2
    3858:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    385c:	0b3a0e03 	bleq	e87070 <_Min_Stack_Size+0xe86c70>
    3860:	0b390b3b 	bleq	e46554 <_Min_Stack_Size+0xe46154>
    3864:	01111927 	tsteq	r1, r7, lsr #18
    3868:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    386c:	01194297 			; <UNDEFINED> instruction: 0x01194297
    3870:	2c000013 	stccs	0, cr0, [r0], {19}
    3874:	0111010b 	tsteq	r1, fp, lsl #2
    3878:	00000612 	andeq	r0, r0, r2, lsl r6
    387c:	3f002e2d 	svccc	0x00002e2d
    3880:	3a0e0319 	bcc	3844ec <_Min_Stack_Size+0x3840ec>
    3884:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3888:	3c19270b 	ldccc	7, cr2, [r9], {11}
    388c:	2e000019 	mcrcs	0, 0, r0, cr0, cr9, {0}
    3890:	00018289 	andeq	r8, r1, r9, lsl #5
    3894:	42950111 	addsmi	r0, r5, #1073741828	; 0x40000004
    3898:	00133119 	andseq	r3, r3, r9, lsl r1
    389c:	002e2f00 	eoreq	r2, lr, r0, lsl #30
    38a0:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    38a4:	0e030e6e 	cdpeq	14, 0, cr0, cr3, cr14, {3}
    38a8:	0b3b0b3a 	bleq	ec6598 <_Min_Stack_Size+0xec6198>
    38ac:	00000b39 	andeq	r0, r0, r9, lsr fp
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
{
   0:	0000002c 	andeq	r0, r0, ip, lsr #32
}
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
  return ch;
   c:	00000000 	andeq	r0, r0, r0
  10:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
  14:	00000020 	andeq	r0, r0, r0, lsr #32
  18:	00000000 	andeq	r0, r0, r0
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  1c:	000000b4 	strheq	r0, [r0], -r4
  20:	08000f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp}
  24:	00000006 	andeq	r0, r0, r6
	...
  return ret;
  30:	0000002c 	andeq	r0, r0, ip, lsr #32
}
  34:	0e300002 	cdpeq	0, 3, cr0, cr0, cr2, {0}
  38:	00040000 	andeq	r0, r4, r0
  3c:	00000000 	andeq	r0, r0, r0
  40:	08000f20 	stmdaeq	r0, {r5, r8, r9, sl, fp}
    list->node_count = 0;
  44:	00000054 	andeq	r0, r0, r4, asr r0
  48:	08000f74 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, fp}
}
  4c:	00000020 	andeq	r0, r0, r0, lsr #32
  50:	00000000 	andeq	r0, r0, r0
  54:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
  HARDFAULT_HANDLING_ASM();
  60:	00000024 	andeq	r0, r0, r4, lsr #32
  64:	1d7b0002 	ldclne	0, cr0, [fp, #-8]!
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
}
  74:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
  78:	00000000 	andeq	r0, r0, r0
  7c:	00000060 	andeq	r0, r0, r0, rrx
	...
  trigger_irq();
  88:	00000024 	andeq	r0, r0, r4, lsr #32
}
  8c:	321e0002 	andscc	r0, lr, #2
  90:	00040000 	andeq	r0, r4, r0
  94:	00000000 	andeq	r0, r0, r0
  98:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  9c:	00000018 	andeq	r0, r0, r8, lsl r0
    Error_Handler();
  a0:	0800117c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, ip}
}
  a4:	0000000c 	andeq	r0, r0, ip
	...
  b0:	00000024 	andeq	r0, r0, r4, lsr #32
      SystemCoreClock = HSI_VALUE;
  b4:	3c5a0002 	mrrccc	0, 0, r0, sl, cr2
      break;
  b8:	00040000 	andeq	r0, r4, r0
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  bc:	00000000 	andeq	r0, r0, r0
  c0:	08001188 	stmdaeq	r0, {r3, r7, r8, ip}
  c4:	0000005c 	andeq	r0, r0, ip, asr r0
  c8:	00000000 	andeq	r0, r0, r0
  SystemCoreClock >>= tmp;
  cc:	000000f8 	strdeq	r0, [r0], -r8
	...
}
  d8:	000000ec 	andeq	r0, r0, ip, ror #1
  dc:	41780002 	cmnmi	r8, r2
  e0:	00040000 	andeq	r0, r4, r0
  e4:	00000000 	andeq	r0, r0, r0
  e8:	080011e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, ip}
  ec:	00000044 	andeq	r0, r0, r4, asr #32
  f0:	00000000 	andeq	r0, r0, r0
  f4:	00000058 	andeq	r0, r0, r8, asr r0
        EXTI->FTSR &= ~((uint32_t)iocurrent);
  f8:	00000000 	andeq	r0, r0, r0
  fc:	0000000c 	andeq	r0, r0, ip
 100:	00000000 	andeq	r0, r0, r0
        tmp = 0x0FU << (4U * (position & 0x03U));
 104:	0000000c 	andeq	r0, r0, ip
 108:	08001228 	stmdaeq	r0, {r3, r5, r9, ip}
 10c:	00000060 	andeq	r0, r0, r0, rrx
 110:	08001288 	stmdaeq	r0, {r3, r7, r9, ip}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 114:	00000024 	andeq	r0, r0, r4, lsr #32
 118:	080012ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip}
 11c:	00000014 	andeq	r0, r0, r4, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	00000014 	andeq	r0, r0, r4, lsl r0
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000050 	andeq	r0, r0, r0, asr r0
 130:	00000000 	andeq	r0, r0, r0
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 134:	00000014 	andeq	r0, r0, r4, lsl r0
 138:	00000000 	andeq	r0, r0, r0
 13c:	0000004c 	andeq	r0, r0, ip, asr #32
 140:	00000000 	andeq	r0, r0, r0
 144:	0000001c 	andeq	r0, r0, ip, lsl r0
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 148:	00000000 	andeq	r0, r0, r0
 14c:	0000001c 	andeq	r0, r0, ip, lsl r0
 150:	00000000 	andeq	r0, r0, r0
 154:	00000014 	andeq	r0, r0, r4, lsl r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	00000018 	andeq	r0, r0, r8, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	00000018 	andeq	r0, r0, r8, lsl r0
 168:	00000000 	andeq	r0, r0, r0
 16c:	0000001c 	andeq	r0, r0, ip, lsl r0
 170:	00000000 	andeq	r0, r0, r0
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 174:	0000001c 	andeq	r0, r0, ip, lsl r0
 178:	00000000 	andeq	r0, r0, r0
 17c:	0000001c 	andeq	r0, r0, ip, lsl r0
 180:	00000000 	andeq	r0, r0, r0
 184:	0000001c 	andeq	r0, r0, ip, lsl r0
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 188:	00000000 	andeq	r0, r0, r0
 18c:	0000001c 	andeq	r0, r0, ip, lsl r0
 190:	00000000 	andeq	r0, r0, r0
 194:	0000001c 	andeq	r0, r0, ip, lsl r0
 198:	00000000 	andeq	r0, r0, r0
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 19c:	00000018 	andeq	r0, r0, r8, lsl r0
 1a0:	00000000 	andeq	r0, r0, r0
 1a4:	00000018 	andeq	r0, r0, r8, lsl r0
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	00000014 	andeq	r0, r0, r4, lsl r0
 1b0:	00000000 	andeq	r0, r0, r0
  for(position = 0U; position < GPIO_NUMBER; position++)
 1b4:	00000014 	andeq	r0, r0, r4, lsl r0
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	00000014 	andeq	r0, r0, r4, lsl r0
	...
}
 1c8:	00000034 	andeq	r0, r0, r4, lsr r0
 1cc:	4b000002 	blmi	1dc <_Min_Heap_Size-0x24>
 1d0:	00040000 	andeq	r0, r4, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	080012c0 	stmdaeq	r0, {r6, r7, r9, ip}
 1dc:	0000000c 	andeq	r0, r0, ip
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	0000000c 	andeq	r0, r0, ip
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	0000000c 	andeq	r0, r0, ip
 1f0:	00000000 	andeq	r0, r0, r0
                res += 1;
 1f4:	0000000c 	andeq	r0, r0, ip
	...
            _putchar('\n');
 200:	00000114 	andeq	r0, r0, r4, lsl r1
            res += 1;
 204:	4ca00002 	stcmi	0, cr0, [r0], #8
 208:	00040000 	andeq	r0, r4, r0
            _putchar('\r');
 20c:	00000000 	andeq	r0, r0, r0
 210:	080012cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, ip}
            res += 1;
 214:	00000048 	andeq	r0, r0, r8, asr #32
            break;
 218:	08001314 	stmdaeq	r0, {r2, r4, r8, r9, ip}
            _putchar(*str);
 21c:	0000001c 	andeq	r0, r0, ip, lsl r0
 220:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
            res += 1;
 224:	00000038 	andeq	r0, r0, r8, lsr r0
 228:	00000000 	andeq	r0, r0, r0
            break;
 22c:	00000044 	andeq	r0, r0, r4, asr #32
        str++;
 230:	00000000 	andeq	r0, r0, r0
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
 234:	00000040 	andeq	r0, r0, r0, asr #32
 238:	00000000 	andeq	r0, r0, r0
 23c:	0000003c 	andeq	r0, r0, ip, lsr r0
}
 240:	00000000 	andeq	r0, r0, r0
 244:	0000003c 	andeq	r0, r0, ip, lsr r0
 248:	00000000 	andeq	r0, r0, r0
 24c:	00000040 	andeq	r0, r0, r0, asr #32
 250:	08001368 	stmdaeq	r0, {r3, r5, r6, r8, r9, ip}
            hdma->XferCpltCallback(hdma);
 254:	00000054 	andeq	r0, r0, r4, asr r0
 258:	00000000 	andeq	r0, r0, r0
 25c:	0000004c 	andeq	r0, r0, ip, asr #32
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 260:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
 264:	00000064 	andeq	r0, r0, r4, rrx
 268:	00000000 	andeq	r0, r0, r0
 26c:	0000006c 	andeq	r0, r0, ip, rrx
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 270:	00000000 	andeq	r0, r0, r0
 274:	00000028 	andeq	r0, r0, r8, lsr #32
 278:	08001420 	stmdaeq	r0, {r5, sl, ip}
 27c:	00000044 	andeq	r0, r0, r4, asr #32
          __HAL_UNLOCK(hdma);
 280:	08001464 	stmdaeq	r0, {r2, r5, r6, sl, ip}
 284:	00000016 	andeq	r0, r0, r6, lsl r0
          hdma->State = HAL_DMA_STATE_READY;
 288:	0800147a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, ip}
 28c:	00000038 	andeq	r0, r0, r8, lsr r0
        if(hdma->XferCpltCallback != NULL)
 290:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
 294:	0000001c 	andeq	r0, r0, ip, lsl r0
          hdma->XferCpltCallback(hdma);
 298:	00000000 	andeq	r0, r0, r0
 29c:	0000001c 	andeq	r0, r0, ip, lsl r0
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 2a0:	00000000 	andeq	r0, r0, r0
 2a4:	00000008 	andeq	r0, r0, r8
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 2a8:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
 2ac:	00000018 	andeq	r0, r0, r8, lsl r0
 2b0:	00000000 	andeq	r0, r0, r0
      hdma->State = HAL_DMA_STATE_ABORT;
 2b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2b8:	00000000 	andeq	r0, r0, r0
      __HAL_DMA_DISABLE(hdma);
 2bc:	00000038 	andeq	r0, r0, r8, lsr r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000088 	andeq	r0, r0, r8, lsl #1
 2c8:	00000000 	andeq	r0, r0, r0
        if (++count > timeout)
 2cc:	0000000e 	andeq	r0, r0, lr
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	0000002c 	andeq	r0, r0, ip, lsr #32
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 2d8:	00000000 	andeq	r0, r0, r0
 2dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000001e 	andeq	r0, r0, lr, lsl r0
      __HAL_UNLOCK(hdma);
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	0000001c 	andeq	r0, r0, ip, lsl r0
      hdma->State = HAL_DMA_STATE_READY;
 2f0:	00000000 	andeq	r0, r0, r0
 2f4:	0000001e 	andeq	r0, r0, lr, lsl r0
    if(hdma->XferErrorCallback != NULL)
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	00000038 	andeq	r0, r0, r8, lsr r0
      hdma->XferErrorCallback(hdma);
 300:	00000000 	andeq	r0, r0, r0
 304:	0000000c 	andeq	r0, r0, ip
 308:	00000000 	andeq	r0, r0, r0
}
 30c:	0000000c 	andeq	r0, r0, ip
	...
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 318:	00000084 	andeq	r0, r0, r4, lsl #1
 31c:	5b3d0002 	blpl	f4032c <_Min_Stack_Size+0xf3ff2c>
    UART_Transmit_IT(huart);
 320:	00040000 	andeq	r0, r4, r0
	...
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 32c:	0000000e 	andeq	r0, r0, lr
 330:	00000000 	andeq	r0, r0, r0
 334:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 338:	00000000 	andeq	r0, r0, r0
    UART_EndTransmit_IT(huart);
 33c:	000001cc 	andeq	r0, r0, ip, asr #3
    return;
 340:	00000000 	andeq	r0, r0, r0
    return;
 344:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
      return;
 348:	00000000 	andeq	r0, r0, r0
      return;
 34c:	00000018 	andeq	r0, r0, r8, lsl r0
}
 350:	00000000 	andeq	r0, r0, r0
 354:	00000018 	andeq	r0, r0, r8, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 358:	00000000 	andeq	r0, r0, r0
 35c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
      tickstart = HAL_GetTick();
 360:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 364:	00000014 	andeq	r0, r0, r4, lsl r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 368:	080014fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, ip}
 36c:	00000028 	andeq	r0, r0, r8, lsr #32
 370:	08001524 	stmdaeq	r0, {r2, r5, r8, sl, ip}
 374:	00000028 	andeq	r0, r0, r8, lsr #32
          return HAL_TIMEOUT;
 378:	00000000 	andeq	r0, r0, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 37c:	00000128 	andeq	r0, r0, r8, lsr #2
 380:	00000000 	andeq	r0, r0, r0
 384:	00000060 	andeq	r0, r0, r0, rrx
    if(pwrclkchanged == SET)
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000028 	andeq	r0, r0, r8, lsr #32
      __HAL_RCC_PWR_CLK_DISABLE();
 390:	00000000 	andeq	r0, r0, r0
 394:	0000000c 	andeq	r0, r0, ip
	...
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 3a0:	0000008c 	andeq	r0, r0, ip, lsl #1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 3a4:	64930002 	ldrvs	r0, [r3], #2
 3a8:	00040000 	andeq	r0, r4, r0
 3ac:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 3b0:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
 3b4:	0000015c 	andeq	r0, r0, ip, asr r1
        __HAL_RCC_PLL_DISABLE();
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	000000bc 	strheq	r0, [r0], -ip
        tickstart = HAL_GetTick();
 3c0:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 3c4:	00000076 	andeq	r0, r0, r6, ror r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3c8:	00000000 	andeq	r0, r0, r0
 3cc:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 3d0:	00000000 	andeq	r0, r0, r0
            return HAL_TIMEOUT;
 3d4:	000000e0 	andeq	r0, r0, r0, ror #1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	00000042 	andeq	r0, r0, r2, asr #32
 3e0:	00000000 	andeq	r0, r0, r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 3e4:	000001be 			; <UNDEFINED> instruction: 0x000001be
 3e8:	00000000 	andeq	r0, r0, r0
 3ec:	00000312 	andeq	r0, r0, r2, lsl r3
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	000000a4 	andeq	r0, r0, r4, lsr #1
 3f8:	00000000 	andeq	r0, r0, r0
 3fc:	000000d2 	ldrdeq	r0, [r0], -r2
 400:	00000000 	andeq	r0, r0, r0
 404:	0000001a 	andeq	r0, r0, sl, lsl r0
 408:	00000000 	andeq	r0, r0, r0
 40c:	00000016 	andeq	r0, r0, r6, lsl r0
        __HAL_RCC_PLL_ENABLE();
 410:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
 414:	0000005a 	andeq	r0, r0, sl, asr r0
 418:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 41c:	00000068 	andeq	r0, r0, r8, rrx
 420:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
 424:	000000f4 	strdeq	r0, [r0], -r4
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 430:	00000054 	andeq	r0, r0, r4, asr r0
 434:	6e5c0002 	cdpvs	0, 5, cr0, cr12, cr2, {0}
 438:	00040000 	andeq	r0, r4, r0
        __HAL_RCC_PLL_DISABLE();
 43c:	00000000 	andeq	r0, r0, r0
 440:	08001804 	stmdaeq	r0, {r2, fp, ip}
        tickstart = HAL_GetTick();
 444:	00000334 	andeq	r0, r0, r4, lsr r3
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 448:	00000000 	andeq	r0, r0, r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 44c:	000001f4 	strdeq	r0, [r0], -r4
 450:	00000000 	andeq	r0, r0, r0
 454:	0000002e 	andeq	r0, r0, lr, lsr #32
            return HAL_TIMEOUT;
 458:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000030 	andeq	r0, r0, r0, lsr r0
 460:	00000000 	andeq	r0, r0, r0
 464:	00000032 	andeq	r0, r0, r2, lsr r0
 468:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 46c:	0000004e 	andeq	r0, r0, lr, asr #32
 470:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
 474:	00000030 	andeq	r0, r0, r0, lsr r0
        pll_config = RCC->PLLCFGR;
 478:	00000000 	andeq	r0, r0, r0
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 47c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 488:	000001fc 	strdeq	r0, [r0], -ip
 48c:	76660002 	strbtvc	r0, [r6], -r2
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 490:	00040000 	andeq	r0, r4, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 494:	00000000 	andeq	r0, r0, r0
 498:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 49c:	0000009a 	muleq	r0, sl, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	000000aa 	andeq	r0, r0, sl, lsr #1
 4a8:	00000000 	andeq	r0, r0, r0
 4ac:	000000cc 	andeq	r0, r0, ip, asr #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 4b0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b4:	000000e0 	andeq	r0, r0, r0, ror #1
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	0000005e 	andeq	r0, r0, lr, asr r0
 4c0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4c4:	00000012 	andeq	r0, r0, r2, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4c8:	00000000 	andeq	r0, r0, r0
 4cc:	00000012 	andeq	r0, r0, r2, lsl r0
 4d0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4d4:	00000124 	andeq	r0, r0, r4, lsr #2
          return HAL_ERROR;
 4d8:	00000000 	andeq	r0, r0, r0
}
 4dc:	00000144 	andeq	r0, r0, r4, asr #2
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	00000088 	andeq	r0, r0, r8, lsl #1
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	00000060 	andeq	r0, r0, r0, rrx
 4f0:	00000000 	andeq	r0, r0, r0
 4f4:	000000d8 	ldrdeq	r0, [r0], -r8
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	00000060 	andeq	r0, r0, r0, rrx
 500:	00000000 	andeq	r0, r0, r0
 504:	000000c6 	andeq	r0, r0, r6, asr #1
 508:	00000000 	andeq	r0, r0, r0
 50c:	000000a0 	andeq	r0, r0, r0, lsr #1
 510:	00000000 	andeq	r0, r0, r0
 514:	000000b6 	strheq	r0, [r0], -r6
 518:	00000000 	andeq	r0, r0, r0
 51c:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
 520:	00000000 	andeq	r0, r0, r0
 524:	0000009e 	muleq	r0, lr, r0
 528:	00000000 	andeq	r0, r0, r0
 52c:	0000009e 	muleq	r0, lr, r0
 530:	00000000 	andeq	r0, r0, r0
 534:	00000122 	andeq	r0, r0, r2, lsr #2
 538:	00000000 	andeq	r0, r0, r0
 53c:	00000088 	andeq	r0, r0, r8, lsl #1
 540:	00000000 	andeq	r0, r0, r0
 544:	000000b6 	strheq	r0, [r0], -r6
 548:	00000000 	andeq	r0, r0, r0
 54c:	00000168 	andeq	r0, r0, r8, ror #2
 550:	00000000 	andeq	r0, r0, r0
 554:	000000a0 	andeq	r0, r0, r0, lsr #1
 558:	00000000 	andeq	r0, r0, r0
 55c:	000000d4 	ldrdeq	r0, [r0], -r4
 560:	00000000 	andeq	r0, r0, r0
 564:	00000358 	andeq	r0, r0, r8, asr r3
 568:	00000000 	andeq	r0, r0, r0
 56c:	00000012 	andeq	r0, r0, r2, lsl r0
 570:	00000000 	andeq	r0, r0, r0
 574:	00000012 	andeq	r0, r0, r2, lsl r0
 578:	00000000 	andeq	r0, r0, r0
 57c:	00000012 	andeq	r0, r0, r2, lsl r0
 580:	00000000 	andeq	r0, r0, r0
 584:	00000012 	andeq	r0, r0, r2, lsl r0
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000012 	andeq	r0, r0, r2, lsl r0
 590:	00000000 	andeq	r0, r0, r0
 594:	00000012 	andeq	r0, r0, r2, lsl r0
 598:	00000000 	andeq	r0, r0, r0
 59c:	00000012 	andeq	r0, r0, r2, lsl r0
 5a0:	00000000 	andeq	r0, r0, r0
 5a4:	00000012 	andeq	r0, r0, r2, lsl r0
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	00000016 	andeq	r0, r0, r6, lsl r0
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000052 	andeq	r0, r0, r2, asr r0
 5b8:	00000000 	andeq	r0, r0, r0
 5bc:	00000052 	andeq	r0, r0, r2, asr r0
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	00000052 	andeq	r0, r0, r2, asr r0
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000066 	andeq	r0, r0, r6, rrx
 5d0:	00000000 	andeq	r0, r0, r0
 5d4:	00000066 	andeq	r0, r0, r6, rrx
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000003a 	andeq	r0, r0, sl, lsr r0
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	00000016 	andeq	r0, r0, r6, lsl r0
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	00000052 	andeq	r0, r0, r2, asr r0
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000096 	muleq	r0, r6, r0
 600:	00000000 	andeq	r0, r0, r0
 604:	00000036 	andeq	r0, r0, r6, lsr r0
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000094 	muleq	r0, r4, r0
 610:	00000000 	andeq	r0, r0, r0
 614:	00000094 	muleq	r0, r4, r0
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000072 	andeq	r0, r0, r2, ror r0
 620:	00000000 	andeq	r0, r0, r0
 624:	000000c8 	andeq	r0, r0, r8, asr #1
 628:	00000000 	andeq	r0, r0, r0
 62c:	0000002a 	andeq	r0, r0, sl, lsr #32
 630:	00000000 	andeq	r0, r0, r0
 634:	00000058 	andeq	r0, r0, r8, asr r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000028 	andeq	r0, r0, r8, lsr #32
 640:	00000000 	andeq	r0, r0, r0
 644:	00000060 	andeq	r0, r0, r0, rrx
 648:	00000000 	andeq	r0, r0, r0
 64c:	00000060 	andeq	r0, r0, r0, rrx
 650:	00000000 	andeq	r0, r0, r0
 654:	0000002a 	andeq	r0, r0, sl, lsr #32
 658:	00000000 	andeq	r0, r0, r0
 65c:	00000030 	andeq	r0, r0, r0, lsr r0
 660:	00000000 	andeq	r0, r0, r0
 664:	0000009e 	muleq	r0, lr, r0
 668:	00000000 	andeq	r0, r0, r0
 66c:	00000030 	andeq	r0, r0, r0, lsr r0
 670:	00000000 	andeq	r0, r0, r0
 674:	0000012e 	andeq	r0, r0, lr, lsr #2
 678:	08001bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, ip}
 67c:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
 688:	000000a4 	andeq	r0, r0, r4, lsr #1
 68c:	8c8b0002 	stchi	0, cr0, [fp], {2}
 690:	00040000 	andeq	r0, r4, r0
	...
 69c:	0000002c 	andeq	r0, r0, ip, lsr #32
 6a0:	08001fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp, ip}
 6a4:	0000001a 	andeq	r0, r0, sl, lsl r0
 6a8:	08001fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}
 6ac:	00000026 	andeq	r0, r0, r6, lsr #32
 6b0:	00000000 	andeq	r0, r0, r0
 6b4:	0000002c 	andeq	r0, r0, ip, lsr #32
 6b8:	08001fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp, ip}
 6bc:	00000038 	andeq	r0, r0, r8, lsr r0
 6c0:	0800201c 	stmdaeq	r0, {r2, r3, r4, sp}
 6c4:	0000002c 	andeq	r0, r0, ip, lsr #32
 6c8:	08002048 	stmdaeq	r0, {r3, r6, sp}
 6cc:	00000048 	andeq	r0, r0, r8, asr #32
 6d0:	08002090 	stmdaeq	r0, {r4, r7, sp}
 6d4:	000000a0 	andeq	r0, r0, r0, lsr #1
 6d8:	08002130 	stmdaeq	r0, {r4, r5, r8, sp}
 6dc:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 6e0:	080022e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sp}
 6e4:	000000ce 	andeq	r0, r0, lr, asr #1
 6e8:	080023b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, sp}
 6ec:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
 6f0:	0800286c 	stmdaeq	r0, {r2, r3, r5, r6, fp, sp}
 6f4:	0000080e 	andeq	r0, r0, lr, lsl #16
 6f8:	0800307c 	stmdaeq	r0, {r2, r3, r4, r5, r6, ip, sp}
 6fc:	00000038 	andeq	r0, r0, r8, lsr r0
 700:	00000000 	andeq	r0, r0, r0
 704:	00000038 	andeq	r0, r0, r8, lsr r0
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000038 	andeq	r0, r0, r8, lsr r0
 710:	00000000 	andeq	r0, r0, r0
 714:	0000002c 	andeq	r0, r0, ip, lsr #32
 718:	00000000 	andeq	r0, r0, r0
 71c:	0000002c 	andeq	r0, r0, ip, lsr #32
 720:	00000000 	andeq	r0, r0, r0
 724:	00000044 	andeq	r0, r0, r4, asr #32
	...
 730:	00000054 	andeq	r0, r0, r4, asr r0
 734:	97c80002 	strbls	r0, [r8, r2]
 738:	00040000 	andeq	r0, r4, r0
 73c:	00000000 	andeq	r0, r0, r0
 740:	080030b4 	stmdaeq	r0, {r2, r4, r5, r7, ip, sp}
 744:	0000001a 	andeq	r0, r0, sl, lsl r0
 748:	00000000 	andeq	r0, r0, r0
 74c:	00000010 	andeq	r0, r0, r0, lsl r0
 750:	00000000 	andeq	r0, r0, r0
 754:	00000024 	andeq	r0, r0, r4, lsr #32
 758:	00000000 	andeq	r0, r0, r0
 75c:	0000001a 	andeq	r0, r0, sl, lsl r0
 760:	00000000 	andeq	r0, r0, r0
 764:	00000028 	andeq	r0, r0, r8, lsr #32
 768:	00000000 	andeq	r0, r0, r0
 76c:	0000002c 	andeq	r0, r0, ip, lsr #32
 770:	00000000 	andeq	r0, r0, r0
 774:	00000030 	andeq	r0, r0, r0, lsr r0
 778:	00000000 	andeq	r0, r0, r0
 77c:	00000254 	andeq	r0, r0, r4, asr r2
	...
 788:	0000003c 	andeq	r0, r0, ip, lsr r0
 78c:	9a430002 	bls	10c079c <_Min_Stack_Size+0x10c039c>
 790:	00040000 	andeq	r0, r4, r0
 794:	00000000 	andeq	r0, r0, r0
 798:	080030d0 	stmdaeq	r0, {r4, r6, r7, ip, sp}
 79c:	00000054 	andeq	r0, r0, r4, asr r0
 7a0:	08003124 	stmdaeq	r0, {r2, r5, r8, ip, sp}
 7a4:	0000001e 	andeq	r0, r0, lr, lsl r0
 7a8:	08003142 	stmdaeq	r0, {r1, r6, r8, ip, sp}
 7ac:	0000001c 	andeq	r0, r0, ip, lsl r0
 7b0:	08003160 	stmdaeq	r0, {r5, r6, r8, ip, sp}
 7b4:	00000034 	andeq	r0, r0, r4, lsr r0
 7b8:	08003194 	stmdaeq	r0, {r2, r4, r7, r8, ip, sp}
 7bc:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 7c8:	000000c4 	andeq	r0, r0, r4, asr #1
 7cc:	abca0002 	blge	ff2807dc <__StackLimit+0xdf2607dc>
 7d0:	00040000 	andeq	r0, r4, r0
 7d4:	00000000 	andeq	r0, r0, r0
 7d8:	080031b0 	stmdaeq	r0, {r4, r5, r7, r8, ip, sp}
 7dc:	00000054 	andeq	r0, r0, r4, asr r0
 7e0:	08003204 	stmdaeq	r0, {r2, r9, ip, sp}
 7e4:	00000044 	andeq	r0, r0, r4, asr #32
 7e8:	08003248 	stmdaeq	r0, {r3, r6, r9, ip, sp}
 7ec:	00000134 	andeq	r0, r0, r4, lsr r1
 7f0:	0800337c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
 7f4:	0000003c 	andeq	r0, r0, ip, lsr r0
 7f8:	080033b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip, sp}
 7fc:	00000050 	andeq	r0, r0, r0, asr r0
 800:	08003408 	stmdaeq	r0, {r3, sl, ip, sp}
 804:	00000034 	andeq	r0, r0, r4, lsr r0
 808:	0800343c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip, sp}
 80c:	00000040 	andeq	r0, r0, r0, asr #32
 810:	0800347c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, ip, sp}
 814:	00000040 	andeq	r0, r0, r0, asr #32
 818:	080034bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip, sp}
 81c:	0000005c 	andeq	r0, r0, ip, asr r0
 820:	08003518 	stmdaeq	r0, {r3, r4, r8, sl, ip, sp}
 824:	00000050 	andeq	r0, r0, r0, asr r0
 828:	08003568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip, sp}
 82c:	00000014 	andeq	r0, r0, r4, lsl r0
 830:	0800357c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip, sp}
 834:	00000034 	andeq	r0, r0, r4, lsr r0
 838:	080035b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip, sp}
 83c:	0000002c 	andeq	r0, r0, ip, lsr #32
 840:	080035dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip, sp}
 844:	000000d4 	ldrdeq	r0, [r0], -r4
 848:	080036b0 	stmdaeq	r0, {r4, r5, r7, r9, sl, ip, sp}
 84c:	0000003c 	andeq	r0, r0, ip, lsr r0
 850:	080036ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip, sp}
 854:	0000002c 	andeq	r0, r0, ip, lsr #32
 858:	08003718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip, sp}
 85c:	00000026 	andeq	r0, r0, r6, lsr #32
 860:	08003740 	stmdaeq	r0, {r6, r8, r9, sl, ip, sp}
 864:	000000e8 	andeq	r0, r0, r8, ror #1
 868:	08003828 	stmdaeq	r0, {r3, r5, fp, ip, sp}
 86c:	0000005c 	andeq	r0, r0, ip, asr r0
 870:	08003884 	stmdaeq	r0, {r2, r7, fp, ip, sp}
 874:	0000005c 	andeq	r0, r0, ip, asr r0
 878:	080038e0 	stmdaeq	r0, {r5, r6, r7, fp, ip, sp}
 87c:	0000000a 	andeq	r0, r0, sl
 880:	080038ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip, sp}
 884:	000000a4 	andeq	r0, r0, r4, lsr #1
	...
 890:	0000003c 	andeq	r0, r0, ip, lsr r0
 894:	c2890002 	addgt	r0, r9, #2
 898:	00040000 	andeq	r0, r4, r0
 89c:	00000000 	andeq	r0, r0, r0
 8a0:	08003990 	stmdaeq	r0, {r4, r7, r8, fp, ip, sp}
 8a4:	00000018 	andeq	r0, r0, r8, lsl r0
 8a8:	080039a8 	stmdaeq	r0, {r3, r5, r7, r8, fp, ip, sp}
 8ac:	0000000e 	andeq	r0, r0, lr
 8b0:	080039b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, fp, ip, sp}
 8b4:	00000026 	andeq	r0, r0, r6, lsr #32
 8b8:	080039dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, ip, sp}
 8bc:	00000028 	andeq	r0, r0, r8, lsr #32
 8c0:	08003a04 	stmdaeq	r0, {r2, r9, fp, ip, sp}
 8c4:	00000084 	andeq	r0, r0, r4, lsl #1
	...
 8d0:	0000007c 	andeq	r0, r0, ip, ror r0
 8d4:	c42e0002 	strtgt	r0, [lr], #-2
 8d8:	00040000 	andeq	r0, r4, r0
 8dc:	00000000 	andeq	r0, r0, r0
 8e0:	08003a88 	stmdaeq	r0, {r3, r7, r9, fp, ip, sp}
 8e4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8e8:	08003aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp, ip, sp}
 8ec:	00000024 	andeq	r0, r0, r4, lsr #32
 8f0:	08003aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp, ip, sp}
 8f4:	00000016 	andeq	r0, r0, r6, lsl r0
 8f8:	08003ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip, sp}
 8fc:	00000026 	andeq	r0, r0, r6, lsr #32
 900:	00000000 	andeq	r0, r0, r0
 904:	00000026 	andeq	r0, r0, r6, lsr #32
 908:	00000000 	andeq	r0, r0, r0
 90c:	00000026 	andeq	r0, r0, r6, lsr #32
 910:	00000000 	andeq	r0, r0, r0
 914:	00000026 	andeq	r0, r0, r6, lsr #32
 918:	00000000 	andeq	r0, r0, r0
 91c:	00000054 	andeq	r0, r0, r4, asr r0
 920:	00000000 	andeq	r0, r0, r0
 924:	0000003e 	andeq	r0, r0, lr, lsr r0
 928:	08003b06 	stmdaeq	r0, {r1, r2, r8, r9, fp, ip, sp}
 92c:	0000003a 	andeq	r0, r0, sl, lsr r0
 930:	08003b40 	stmdaeq	r0, {r6, r8, r9, fp, ip, sp}
 934:	00000040 	andeq	r0, r0, r0, asr #32
 938:	00000000 	andeq	r0, r0, r0
 93c:	0000003e 	andeq	r0, r0, lr, lsr r0
 940:	08003b80 	stmdaeq	r0, {r7, r8, r9, fp, ip, sp}
 944:	00000032 	andeq	r0, r0, r2, lsr r0
	...
 950:	00000084 	andeq	r0, r0, r4, lsl #1
 954:	c7f30002 	ldrbgt	r0, [r3, r2]!
 958:	00040000 	andeq	r0, r4, r0
	...
 964:	00000014 	andeq	r0, r0, r4, lsl r0
 968:	08003bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp, ip, sp}
 96c:	000000b8 	strheq	r0, [r0], -r8
 970:	00000000 	andeq	r0, r0, r0
 974:	00000060 	andeq	r0, r0, r0, rrx
 978:	00000000 	andeq	r0, r0, r0
 97c:	00000008 	andeq	r0, r0, r8
 980:	00000000 	andeq	r0, r0, r0
 984:	0000000c 	andeq	r0, r0, ip
 988:	08003c6c 	stmdaeq	r0, {r2, r3, r5, r6, sl, fp, ip, sp}
 98c:	00000070 	andeq	r0, r0, r0, ror r0
 990:	00000000 	andeq	r0, r0, r0
 994:	00000070 	andeq	r0, r0, r0, ror r0
 998:	08003ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip, sp}
 99c:	00000070 	andeq	r0, r0, r0, ror r0
 9a0:	08003d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp, ip, sp}
 9a4:	00000070 	andeq	r0, r0, r0, ror r0
 9a8:	00000000 	andeq	r0, r0, r0
 9ac:	0000007a 	andeq	r0, r0, sl, ror r0
 9b0:	00000000 	andeq	r0, r0, r0
 9b4:	00000070 	andeq	r0, r0, r0, ror r0
 9b8:	00000000 	andeq	r0, r0, r0
 9bc:	0000001c 	andeq	r0, r0, ip, lsl r0
 9c0:	00000000 	andeq	r0, r0, r0
 9c4:	00000012 	andeq	r0, r0, r2, lsl r0
 9c8:	00000000 	andeq	r0, r0, r0
 9cc:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 9d8:	00000084 	andeq	r0, r0, r4, lsl #1
 9dc:	da660002 	ble	19809ec <_Min_Stack_Size+0x19805ec>
 9e0:	00040000 	andeq	r0, r4, r0
	...
 9ec:	00000030 	andeq	r0, r0, r0, lsr r0
 9f0:	00000000 	andeq	r0, r0, r0
 9f4:	00000098 	muleq	r0, r8, r0
 9f8:	00000000 	andeq	r0, r0, r0
 9fc:	0000001c 	andeq	r0, r0, ip, lsl r0
 a00:	00000000 	andeq	r0, r0, r0
 a04:	00000014 	andeq	r0, r0, r4, lsl r0
 a08:	00000000 	andeq	r0, r0, r0
 a0c:	0000001a 	andeq	r0, r0, sl, lsl r0
 a10:	00000000 	andeq	r0, r0, r0
 a14:	0000000c 	andeq	r0, r0, ip
 a18:	00000000 	andeq	r0, r0, r0
 a1c:	00000030 	andeq	r0, r0, r0, lsr r0
 a20:	00000000 	andeq	r0, r0, r0
 a24:	00000018 	andeq	r0, r0, r8, lsl r0
 a28:	00000000 	andeq	r0, r0, r0
 a2c:	00000006 	andeq	r0, r0, r6
 a30:	00000000 	andeq	r0, r0, r0
 a34:	00000018 	andeq	r0, r0, r8, lsl r0
 a38:	00000000 	andeq	r0, r0, r0
 a3c:	00000018 	andeq	r0, r0, r8, lsl r0
 a40:	00000000 	andeq	r0, r0, r0
 a44:	00000008 	andeq	r0, r0, r8
 a48:	00000000 	andeq	r0, r0, r0
 a4c:	0000006e 	andeq	r0, r0, lr, rrx
 a50:	08003dd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, fp, ip, sp}
 a54:	00000006 	andeq	r0, r0, r6
	...
 a60:	0000002c 	andeq	r0, r0, ip, lsr #32
 a64:	e7bc0002 	ldr	r0, [ip, r2]!
 a68:	00040000 	andeq	r0, r4, r0
 a6c:	00000000 	andeq	r0, r0, r0
 a70:	08003ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp, ip, sp}
 a74:	00000014 	andeq	r0, r0, r4, lsl r0
 a78:	08003df0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, fp, ip, sp}
 a7c:	00000004 	andeq	r0, r0, r4
 a80:	08003df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 a84:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 a90:	0000001c 	andeq	r0, r0, ip, lsl r0
 a94:	e7de0002 	ldrb	r0, [lr, r2]
 a98:	00040000 	andeq	r0, r4, r0
 a9c:	00000000 	andeq	r0, r0, r0
 aa0:	08000210 	stmdaeq	r0, {r4, r9}
 aa4:	00000376 	andeq	r0, r0, r6, ror r3
	...
 ab0:	0000001c 	andeq	r0, r0, ip, lsl r0
 ab4:	e8040002 	stmda	r4, {r1}
 ab8:	00040000 	andeq	r0, r4, r0
 abc:	00000000 	andeq	r0, r0, r0
 ac0:	08000588 	stmdaeq	r0, {r3, r7, r8, sl}
 ac4:	00000424 	andeq	r0, r0, r4, lsr #8
	...
 ad0:	0000001c 	andeq	r0, r0, ip, lsl r0
 ad4:	e82a0002 	stmda	sl!, {r1}
 ad8:	00040000 	andeq	r0, r4, r0
 adc:	00000000 	andeq	r0, r0, r0
 ae0:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
 ae4:	0000010e 	andeq	r0, r0, lr, lsl #2
	...
 af0:	0000001c 	andeq	r0, r0, ip, lsl r0
 af4:	e8500002 	ldmda	r0, {r1}^
 af8:	00040000 	andeq	r0, r4, r0
 afc:	00000000 	andeq	r0, r0, r0
 b00:	08000abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp}
 b04:	0000004e 	andeq	r0, r0, lr, asr #32
	...
 b10:	0000001c 	andeq	r0, r0, ip, lsl r0
 b14:	e8760002 	ldmda	r6!, {r1}^
 b18:	00040000 	andeq	r0, r4, r0
 b1c:	00000000 	andeq	r0, r0, r0
 b20:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
 b24:	00000040 	andeq	r0, r0, r0, asr #32
	...
 b30:	0000001c 	andeq	r0, r0, ip, lsl r0
 b34:	e89c0002 	ldm	ip, {r1}
 b38:	00040000 	andeq	r0, r4, r0
 b3c:	00000000 	andeq	r0, r0, r0
 b40:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
 b44:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 b50:	0000001c 	andeq	r0, r0, ip, lsl r0
 b54:	e8c20002 	stmia	r2, {r1}^
 b58:	00040000 	andeq	r0, r4, r0
 b5c:	00000000 	andeq	r0, r0, r0
 b60:	08000b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp}
 b64:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
 b70:	0000001c 	andeq	r0, r0, ip, lsl r0
 b74:	f7150002 			; <UNDEFINED> instruction: 0xf7150002
 b78:	00040000 	andeq	r0, r4, r0
 b7c:	00000000 	andeq	r0, r0, r0
 b80:	08000e4c 	stmdaeq	r0, {r2, r3, r6, r9, sl, fp}
 b84:	00000002 	andeq	r0, r0, r2
	...
 b90:	0000001c 	andeq	r0, r0, ip, lsl r0
 b94:	f73b0002 			; <UNDEFINED> instruction: 0xf73b0002
 b98:	00040000 	andeq	r0, r4, r0
 b9c:	00000000 	andeq	r0, r0, r0
 ba0:	08000e50 	stmdaeq	r0, {r4, r6, r9, sl, fp}
 ba4:	0000000c 	andeq	r0, r0, ip
	...
 bb0:	0000001c 	andeq	r0, r0, ip, lsl r0
 bb4:	00d00002 	sbcseq	r0, r0, r2
 bb8:	00040001 	andeq	r0, r4, r1
 bbc:	00000000 	andeq	r0, r0, r0
 bc0:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
 bc4:	00000034 	andeq	r0, r0, r4, lsr r0
	...
 bd0:	00000014 	andeq	r0, r0, r4, lsl r0
 bd4:	01d20002 	bicseq	r0, r2, r2
 bd8:	00040001 	andeq	r0, r4, r1
	...
 be8:	0000001c 	andeq	r0, r0, ip, lsl r0
 bec:	0afc0002 	beq	fff00bfc <__StackLimit+0xdfee0bfc>
 bf0:	00040001 	andeq	r0, r4, r1
 bf4:	00000000 	andeq	r0, r0, r0
 bf8:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
 bfc:	00000068 	andeq	r0, r0, r8, rrx
	...
 c08:	00000024 	andeq	r0, r0, r4, lsr #32
 c0c:	14d10002 	ldrbne	r0, [r1], #2
 c10:	00040001 	andeq	r0, r4, r1
	...
 c1c:	0000009c 	muleq	r0, ip, r0
 c20:	08003e24 	stmdaeq	r0, {r2, r5, r9, sl, fp, ip, sp}
 c24:	00000014 	andeq	r0, r0, r4, lsl r0
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
{
   0:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
}
   4:	08000f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp}
   8:	00000001 	andeq	r0, r0, r1
  return ch;
   c:	00000001 	andeq	r0, r0, r1
  10:	08000f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp}
  14:	08000f1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, fp}
	...
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  20:	08000f20 	stmdaeq	r0, {r5, r8, r9, sl, fp}
  24:	08000f74 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, fp}
  28:	08000f74 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, fp}
  2c:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
  return ret;
  30:	00000001 	andeq	r0, r0, r1
}
  34:	00000001 	andeq	r0, r0, r1
	...
  40:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
    list->node_count = 0;
  44:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
  48:	00000001 	andeq	r0, r0, r1
}
  4c:	00000001 	andeq	r0, r0, r1
	...
  58:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
  5c:	0800117c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, ip}
  HARDFAULT_HANDLING_ASM();
  60:	0800117c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, ip}
  64:	08001188 	stmdaeq	r0, {r3, r7, r8, ip}
	...
  70:	08001188 	stmdaeq	r0, {r3, r7, r8, ip}
}
  74:	080011e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, ip}
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
	...
  trigger_irq();
  88:	080011e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, ip}
}
  8c:	08001228 	stmdaeq	r0, {r3, r5, r9, ip}
  90:	00000001 	andeq	r0, r0, r1
  94:	00000001 	andeq	r0, r0, r1
  98:	00000001 	andeq	r0, r0, r1
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
  9c:	00000001 	andeq	r0, r0, r1
    Error_Handler();
  a0:	00000001 	andeq	r0, r0, r1
}
  a4:	00000001 	andeq	r0, r0, r1
  a8:	08001228 	stmdaeq	r0, {r3, r5, r9, ip}
  ac:	08001288 	stmdaeq	r0, {r3, r7, r9, ip}
  b0:	08001288 	stmdaeq	r0, {r3, r7, r9, ip}
      SystemCoreClock = HSI_VALUE;
  b4:	080012ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip}
      break;
  b8:	080012ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip}
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
  bc:	080012c0 	stmdaeq	r0, {r6, r7, r9, ip}
  c0:	00000001 	andeq	r0, r0, r1
  c4:	00000001 	andeq	r0, r0, r1
  c8:	00000001 	andeq	r0, r0, r1
  SystemCoreClock >>= tmp;
  cc:	00000001 	andeq	r0, r0, r1
  d0:	00000001 	andeq	r0, r0, r1
  d4:	00000001 	andeq	r0, r0, r1
}
  d8:	00000001 	andeq	r0, r0, r1
  dc:	00000001 	andeq	r0, r0, r1
  e0:	00000001 	andeq	r0, r0, r1
  e4:	00000001 	andeq	r0, r0, r1
  e8:	00000001 	andeq	r0, r0, r1
  ec:	00000001 	andeq	r0, r0, r1
  f0:	00000001 	andeq	r0, r0, r1
  f4:	00000001 	andeq	r0, r0, r1
        EXTI->FTSR &= ~((uint32_t)iocurrent);
  f8:	00000001 	andeq	r0, r0, r1
  fc:	00000001 	andeq	r0, r0, r1
 100:	00000001 	andeq	r0, r0, r1
        tmp = 0x0FU << (4U * (position & 0x03U));
 104:	00000001 	andeq	r0, r0, r1
 108:	00000001 	andeq	r0, r0, r1
 10c:	00000001 	andeq	r0, r0, r1
 110:	00000001 	andeq	r0, r0, r1
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 114:	00000001 	andeq	r0, r0, r1
 118:	00000001 	andeq	r0, r0, r1
 11c:	00000001 	andeq	r0, r0, r1
 120:	00000001 	andeq	r0, r0, r1
 124:	00000001 	andeq	r0, r0, r1
 128:	00000001 	andeq	r0, r0, r1
 12c:	00000001 	andeq	r0, r0, r1
 130:	00000001 	andeq	r0, r0, r1
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 134:	00000001 	andeq	r0, r0, r1
 138:	00000001 	andeq	r0, r0, r1
 13c:	00000001 	andeq	r0, r0, r1
 140:	00000001 	andeq	r0, r0, r1
 144:	00000001 	andeq	r0, r0, r1
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 148:	00000001 	andeq	r0, r0, r1
 14c:	00000001 	andeq	r0, r0, r1
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
 158:	00000001 	andeq	r0, r0, r1
 15c:	00000001 	andeq	r0, r0, r1
	...
 168:	080012c0 	stmdaeq	r0, {r6, r7, r9, ip}
 16c:	080012cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, ip}
 170:	00000001 	andeq	r0, r0, r1
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 174:	00000001 	andeq	r0, r0, r1
 178:	00000001 	andeq	r0, r0, r1
 17c:	00000001 	andeq	r0, r0, r1
 180:	00000001 	andeq	r0, r0, r1
 184:	00000001 	andeq	r0, r0, r1
	...
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 190:	080012cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, ip}
 194:	08001314 	stmdaeq	r0, {r2, r4, r8, r9, ip}
 198:	08001314 	stmdaeq	r0, {r2, r4, r8, r9, ip}
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 19c:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
 1a0:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
 1a4:	08001368 	stmdaeq	r0, {r3, r5, r6, r8, r9, ip}
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000001 	andeq	r0, r0, r1
  for(position = 0U; position < GPIO_NUMBER; position++)
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
}
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	08001368 	stmdaeq	r0, {r3, r5, r6, r8, r9, ip}
 1d4:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
 1e0:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
 1e4:	08001420 	stmdaeq	r0, {r5, sl, ip}
 1e8:	00000001 	andeq	r0, r0, r1
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	00000001 	andeq	r0, r0, r1
                res += 1;
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	08001420 	stmdaeq	r0, {r5, sl, ip}
            break;
 1fc:	08001464 	stmdaeq	r0, {r2, r5, r6, sl, ip}
            _putchar('\n');
 200:	08001464 	stmdaeq	r0, {r2, r5, r6, sl, ip}
            res += 1;
 204:	0800147a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, ip}
 208:	0800147a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, ip}
            _putchar('\r');
 20c:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
 210:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
            res += 1;
 214:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
            break;
 218:	00000001 	andeq	r0, r0, r1
            _putchar(*str);
 21c:	00000001 	andeq	r0, r0, r1
 220:	00000001 	andeq	r0, r0, r1
            res += 1;
 224:	00000001 	andeq	r0, r0, r1
 228:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
            break;
 22c:	080014e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, sl, ip}
        str++;
 230:	00000001 	andeq	r0, r0, r1
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
 234:	00000001 	andeq	r0, r0, r1
 238:	00000001 	andeq	r0, r0, r1
 23c:	00000001 	andeq	r0, r0, r1
}
 240:	00000001 	andeq	r0, r0, r1
 244:	00000001 	andeq	r0, r0, r1
 248:	00000001 	andeq	r0, r0, r1
 24c:	00000001 	andeq	r0, r0, r1
 250:	00000001 	andeq	r0, r0, r1
            hdma->XferCpltCallback(hdma);
 254:	00000001 	andeq	r0, r0, r1
 258:	00000001 	andeq	r0, r0, r1
 25c:	00000001 	andeq	r0, r0, r1
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 270:	00000001 	andeq	r0, r0, r1
 274:	00000001 	andeq	r0, r0, r1
 278:	00000001 	andeq	r0, r0, r1
 27c:	00000001 	andeq	r0, r0, r1
          __HAL_UNLOCK(hdma);
 280:	00000001 	andeq	r0, r0, r1
 284:	00000001 	andeq	r0, r0, r1
          hdma->State = HAL_DMA_STATE_READY;
 288:	00000001 	andeq	r0, r0, r1
 28c:	00000001 	andeq	r0, r0, r1
	...
          hdma->XferCpltCallback(hdma);
 298:	00000001 	andeq	r0, r0, r1
 29c:	00000001 	andeq	r0, r0, r1
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 2a0:	00000001 	andeq	r0, r0, r1
 2a4:	00000001 	andeq	r0, r0, r1
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 2a8:	00000001 	andeq	r0, r0, r1
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	00000001 	andeq	r0, r0, r1
      hdma->State = HAL_DMA_STATE_ABORT;
 2b4:	00000001 	andeq	r0, r0, r1
 2b8:	00000001 	andeq	r0, r0, r1
      __HAL_DMA_DISABLE(hdma);
 2bc:	00000001 	andeq	r0, r0, r1
 2c0:	00000001 	andeq	r0, r0, r1
 2c4:	00000001 	andeq	r0, r0, r1
 2c8:	00000001 	andeq	r0, r0, r1
        if (++count > timeout)
 2cc:	00000001 	andeq	r0, r0, r1
 2d0:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
 2d4:	080014fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, ip}
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 2d8:	080014fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, ip}
 2dc:	08001524 	stmdaeq	r0, {r2, r5, r8, sl, ip}
 2e0:	08001524 	stmdaeq	r0, {r2, r5, r8, sl, ip}
 2e4:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
      __HAL_UNLOCK(hdma);
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
      hdma->State = HAL_DMA_STATE_READY;
 2f0:	00000001 	andeq	r0, r0, r1
 2f4:	00000001 	andeq	r0, r0, r1
    if(hdma->XferErrorCallback != NULL)
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
      hdma->XferErrorCallback(hdma);
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
	...
}
 310:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 314:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
 318:	00000001 	andeq	r0, r0, r1
 31c:	00000001 	andeq	r0, r0, r1
    UART_Transmit_IT(huart);
 320:	00000001 	andeq	r0, r0, r1
    return;
 324:	00000001 	andeq	r0, r0, r1
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 328:	00000001 	andeq	r0, r0, r1
 32c:	00000001 	andeq	r0, r0, r1
 330:	00000001 	andeq	r0, r0, r1
 334:	00000001 	andeq	r0, r0, r1
 338:	00000001 	andeq	r0, r0, r1
    UART_EndTransmit_IT(huart);
 33c:	00000001 	andeq	r0, r0, r1
    return;
 340:	00000001 	andeq	r0, r0, r1
    return;
 344:	00000001 	andeq	r0, r0, r1
      return;
 348:	00000001 	andeq	r0, r0, r1
      return;
 34c:	00000001 	andeq	r0, r0, r1
}
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 358:	00000001 	andeq	r0, r0, r1
 35c:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 360:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 364:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 368:	00000001 	andeq	r0, r0, r1
 36c:	00000001 	andeq	r0, r0, r1
 370:	00000001 	andeq	r0, r0, r1
 374:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 378:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 37c:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
 380:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
 384:	08001804 	stmdaeq	r0, {r2, fp, ip}
	...
      __HAL_RCC_PWR_CLK_DISABLE();
 390:	08001804 	stmdaeq	r0, {r2, fp, ip}
 394:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
 398:	00000001 	andeq	r0, r0, r1
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 3a4:	00000001 	andeq	r0, r0, r1
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 3b0:	00000001 	andeq	r0, r0, r1
 3b4:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 3b8:	00000001 	andeq	r0, r0, r1
 3bc:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 3c0:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 3c4:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3c8:	00000001 	andeq	r0, r0, r1
 3cc:	00000001 	andeq	r0, r0, r1
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 3d8:	00000001 	andeq	r0, r0, r1
 3dc:	00000001 	andeq	r0, r0, r1
 3e0:	00000001 	andeq	r0, r0, r1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 3e4:	00000001 	andeq	r0, r0, r1
	...
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
 3fc:	00000001 	andeq	r0, r0, r1
	...
 408:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
 40c:	08001bd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, fp, ip}
        __HAL_RCC_PLL_ENABLE();
 410:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 414:	00000001 	andeq	r0, r0, r1
 418:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 41c:	00000001 	andeq	r0, r0, r1
 420:	00000001 	andeq	r0, r0, r1
 424:	00000001 	andeq	r0, r0, r1
 428:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 42c:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 430:	00000001 	andeq	r0, r0, r1
 434:	00000001 	andeq	r0, r0, r1
 438:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 43c:	00000001 	andeq	r0, r0, r1
 440:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 444:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 448:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 44c:	00000001 	andeq	r0, r0, r1
 450:	00000001 	andeq	r0, r0, r1
 454:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 458:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
 468:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 46c:	00000001 	andeq	r0, r0, r1
 470:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 474:	00000001 	andeq	r0, r0, r1
        pll_config = RCC->PLLCFGR;
 478:	00000001 	andeq	r0, r0, r1
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 47c:	00000001 	andeq	r0, r0, r1
 480:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 484:	00000001 	andeq	r0, r0, r1
 488:	00000001 	andeq	r0, r0, r1
 48c:	00000001 	andeq	r0, r0, r1
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 490:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 494:	00000001 	andeq	r0, r0, r1
 498:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 49c:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4a0:	00000001 	andeq	r0, r0, r1
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
 4ac:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 4b0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b4:	00000001 	andeq	r0, r0, r1
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
 4c0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4c4:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4c8:	00000001 	andeq	r0, r0, r1
 4cc:	00000001 	andeq	r0, r0, r1
 4d0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4d4:	00000001 	andeq	r0, r0, r1
          return HAL_ERROR;
 4d8:	00000001 	andeq	r0, r0, r1
}
 4dc:	00000001 	andeq	r0, r0, r1
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
 4f8:	00000001 	andeq	r0, r0, r1
 4fc:	00000001 	andeq	r0, r0, r1
 500:	00000001 	andeq	r0, r0, r1
 504:	00000001 	andeq	r0, r0, r1
 508:	00000001 	andeq	r0, r0, r1
 50c:	00000001 	andeq	r0, r0, r1
 510:	00000001 	andeq	r0, r0, r1
 514:	00000001 	andeq	r0, r0, r1
 518:	00000001 	andeq	r0, r0, r1
 51c:	00000001 	andeq	r0, r0, r1
 520:	00000001 	andeq	r0, r0, r1
 524:	00000001 	andeq	r0, r0, r1
 528:	00000001 	andeq	r0, r0, r1
 52c:	00000001 	andeq	r0, r0, r1
 530:	00000001 	andeq	r0, r0, r1
 534:	00000001 	andeq	r0, r0, r1
 538:	00000001 	andeq	r0, r0, r1
 53c:	00000001 	andeq	r0, r0, r1
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	00000001 	andeq	r0, r0, r1
 55c:	00000001 	andeq	r0, r0, r1
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
 570:	00000001 	andeq	r0, r0, r1
 574:	00000001 	andeq	r0, r0, r1
 578:	00000001 	andeq	r0, r0, r1
 57c:	00000001 	andeq	r0, r0, r1
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
 588:	00000001 	andeq	r0, r0, r1
 58c:	00000001 	andeq	r0, r0, r1
 590:	00000001 	andeq	r0, r0, r1
 594:	00000001 	andeq	r0, r0, r1
 598:	00000001 	andeq	r0, r0, r1
 59c:	00000001 	andeq	r0, r0, r1
 5a0:	00000001 	andeq	r0, r0, r1
 5a4:	00000001 	andeq	r0, r0, r1
 5a8:	00000001 	andeq	r0, r0, r1
 5ac:	00000001 	andeq	r0, r0, r1
 5b0:	00000001 	andeq	r0, r0, r1
 5b4:	00000001 	andeq	r0, r0, r1
 5b8:	00000001 	andeq	r0, r0, r1
 5bc:	00000001 	andeq	r0, r0, r1
 5c0:	00000001 	andeq	r0, r0, r1
 5c4:	00000001 	andeq	r0, r0, r1
 5c8:	00000001 	andeq	r0, r0, r1
 5cc:	00000001 	andeq	r0, r0, r1
 5d0:	00000001 	andeq	r0, r0, r1
 5d4:	00000001 	andeq	r0, r0, r1
 5d8:	00000001 	andeq	r0, r0, r1
 5dc:	00000001 	andeq	r0, r0, r1
 5e0:	00000001 	andeq	r0, r0, r1
 5e4:	00000001 	andeq	r0, r0, r1
 5e8:	08001bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, ip}
 5ec:	08001fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp, ip}
	...
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	08001fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp, ip}
 604:	08001fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}
 608:	08001fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}
 60c:	08001fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp, ip}
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	08001fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp, ip}
 61c:	0800201c 	stmdaeq	r0, {r2, r3, r4, sp}
 620:	0800201c 	stmdaeq	r0, {r2, r3, r4, sp}
 624:	08002048 	stmdaeq	r0, {r3, r6, sp}
 628:	08002048 	stmdaeq	r0, {r3, r6, sp}
 62c:	08002090 	stmdaeq	r0, {r4, r7, sp}
 630:	08002090 	stmdaeq	r0, {r4, r7, sp}
 634:	08002130 	stmdaeq	r0, {r4, r5, r8, sp}
 638:	08002130 	stmdaeq	r0, {r4, r5, r8, sp}
 63c:	080022e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sp}
 640:	080022e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sp}
 644:	080023b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sp}
 648:	080023b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, sp}
 64c:	0800286c 	stmdaeq	r0, {r2, r3, r5, r6, fp, sp}
 650:	0800286c 	stmdaeq	r0, {r2, r3, r5, r6, fp, sp}
 654:	0800307a 	stmdaeq	r0, {r1, r3, r4, r5, r6, ip, sp}
 658:	0800307c 	stmdaeq	r0, {r2, r3, r4, r5, r6, ip, sp}
 65c:	080030b4 	stmdaeq	r0, {r2, r4, r5, r7, ip, sp}
 660:	00000001 	andeq	r0, r0, r1
 664:	00000001 	andeq	r0, r0, r1
 668:	00000001 	andeq	r0, r0, r1
 66c:	00000001 	andeq	r0, r0, r1
 670:	00000001 	andeq	r0, r0, r1
 674:	00000001 	andeq	r0, r0, r1
 678:	00000001 	andeq	r0, r0, r1
 67c:	00000001 	andeq	r0, r0, r1
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
	...
 690:	080030b4 	stmdaeq	r0, {r2, r4, r5, r7, ip, sp}
 694:	080030ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, ip, sp}
 698:	00000001 	andeq	r0, r0, r1
 69c:	00000001 	andeq	r0, r0, r1
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
 6a8:	00000001 	andeq	r0, r0, r1
 6ac:	00000001 	andeq	r0, r0, r1
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
 6b8:	00000001 	andeq	r0, r0, r1
 6bc:	00000001 	andeq	r0, r0, r1
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
 6c8:	00000001 	andeq	r0, r0, r1
 6cc:	00000001 	andeq	r0, r0, r1
	...
 6d8:	080030d0 	stmdaeq	r0, {r4, r6, r7, ip, sp}
 6dc:	08003124 	stmdaeq	r0, {r2, r5, r8, ip, sp}
 6e0:	08003124 	stmdaeq	r0, {r2, r5, r8, ip, sp}
 6e4:	08003142 	stmdaeq	r0, {r1, r6, r8, ip, sp}
 6e8:	08003142 	stmdaeq	r0, {r1, r6, r8, ip, sp}
 6ec:	0800315e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, ip, sp}
 6f0:	08003160 	stmdaeq	r0, {r5, r6, r8, ip, sp}
 6f4:	08003194 	stmdaeq	r0, {r2, r4, r7, r8, ip, sp}
 6f8:	08003194 	stmdaeq	r0, {r2, r4, r7, r8, ip, sp}
 6fc:	080031b0 	stmdaeq	r0, {r4, r5, r7, r8, ip, sp}
	...
 708:	080031b0 	stmdaeq	r0, {r4, r5, r7, r8, ip, sp}
 70c:	08003204 	stmdaeq	r0, {r2, r9, ip, sp}
 710:	08003204 	stmdaeq	r0, {r2, r9, ip, sp}
 714:	08003248 	stmdaeq	r0, {r3, r6, r9, ip, sp}
 718:	08003248 	stmdaeq	r0, {r3, r6, r9, ip, sp}
 71c:	0800337c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
 720:	0800337c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
 724:	080033b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip, sp}
 728:	080033b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip, sp}
 72c:	08003408 	stmdaeq	r0, {r3, sl, ip, sp}
 730:	08003408 	stmdaeq	r0, {r3, sl, ip, sp}
 734:	0800343c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip, sp}
 738:	0800343c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip, sp}
 73c:	0800347c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, ip, sp}
 740:	0800347c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, ip, sp}
 744:	080034bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip, sp}
 748:	080034bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip, sp}
 74c:	08003518 	stmdaeq	r0, {r3, r4, r8, sl, ip, sp}
 750:	08003518 	stmdaeq	r0, {r3, r4, r8, sl, ip, sp}
 754:	08003568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip, sp}
 758:	08003568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip, sp}
 75c:	0800357c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip, sp}
 760:	0800357c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip, sp}
 764:	080035b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip, sp}
 768:	080035b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip, sp}
 76c:	080035dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip, sp}
 770:	080035dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip, sp}
 774:	080036b0 	stmdaeq	r0, {r4, r5, r7, r9, sl, ip, sp}
 778:	080036b0 	stmdaeq	r0, {r4, r5, r7, r9, sl, ip, sp}
 77c:	080036ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip, sp}
 780:	080036ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip, sp}
 784:	08003718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip, sp}
 788:	08003718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip, sp}
 78c:	0800373e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp}
 790:	08003740 	stmdaeq	r0, {r6, r8, r9, sl, ip, sp}
 794:	08003828 	stmdaeq	r0, {r3, r5, fp, ip, sp}
 798:	08003828 	stmdaeq	r0, {r3, r5, fp, ip, sp}
 79c:	08003884 	stmdaeq	r0, {r2, r7, fp, ip, sp}
 7a0:	08003884 	stmdaeq	r0, {r2, r7, fp, ip, sp}
 7a4:	080038e0 	stmdaeq	r0, {r5, r6, r7, fp, ip, sp}
 7a8:	080038e0 	stmdaeq	r0, {r5, r6, r7, fp, ip, sp}
 7ac:	080038ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, fp, ip, sp}
 7b0:	080038ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip, sp}
 7b4:	08003990 	stmdaeq	r0, {r4, r7, r8, fp, ip, sp}
	...
 7c0:	08003990 	stmdaeq	r0, {r4, r7, r8, fp, ip, sp}
 7c4:	080039a8 	stmdaeq	r0, {r3, r5, r7, r8, fp, ip, sp}
 7c8:	080039a8 	stmdaeq	r0, {r3, r5, r7, r8, fp, ip, sp}
 7cc:	080039b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, fp, ip, sp}
 7d0:	080039b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, fp, ip, sp}
 7d4:	080039dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, ip, sp}
 7d8:	080039dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, ip, sp}
 7dc:	08003a04 	stmdaeq	r0, {r2, r9, fp, ip, sp}
 7e0:	08003a04 	stmdaeq	r0, {r2, r9, fp, ip, sp}
 7e4:	08003a88 	stmdaeq	r0, {r3, r7, r9, fp, ip, sp}
	...
 7f0:	08003a88 	stmdaeq	r0, {r3, r7, r9, fp, ip, sp}
 7f4:	08003aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp, ip, sp}
 7f8:	08003aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp, ip, sp}
 7fc:	08003aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp, ip, sp}
 800:	08003aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp, ip, sp}
 804:	08003ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip, sp}
 808:	08003ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip, sp}
 80c:	08003b06 	stmdaeq	r0, {r1, r2, r8, r9, fp, ip, sp}
 810:	00000001 	andeq	r0, r0, r1
 814:	00000001 	andeq	r0, r0, r1
 818:	00000001 	andeq	r0, r0, r1
 81c:	00000001 	andeq	r0, r0, r1
 820:	00000001 	andeq	r0, r0, r1
 824:	00000001 	andeq	r0, r0, r1
 828:	00000001 	andeq	r0, r0, r1
 82c:	00000001 	andeq	r0, r0, r1
 830:	00000001 	andeq	r0, r0, r1
 834:	00000001 	andeq	r0, r0, r1
 838:	08003b06 	stmdaeq	r0, {r1, r2, r8, r9, fp, ip, sp}
 83c:	08003b40 	stmdaeq	r0, {r6, r8, r9, fp, ip, sp}
 840:	08003b40 	stmdaeq	r0, {r6, r8, r9, fp, ip, sp}
 844:	08003b80 	stmdaeq	r0, {r7, r8, r9, fp, ip, sp}
 848:	00000001 	andeq	r0, r0, r1
 84c:	00000001 	andeq	r0, r0, r1
 850:	08003b80 	stmdaeq	r0, {r7, r8, r9, fp, ip, sp}
 854:	08003bb2 	stmdaeq	r0, {r1, r4, r5, r7, r8, r9, fp, ip, sp}
	...
 860:	00000001 	andeq	r0, r0, r1
 864:	00000001 	andeq	r0, r0, r1
 868:	08003bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp, ip, sp}
 86c:	08003c6c 	stmdaeq	r0, {r2, r3, r5, r6, sl, fp, ip, sp}
 870:	00000001 	andeq	r0, r0, r1
 874:	00000001 	andeq	r0, r0, r1
 878:	00000001 	andeq	r0, r0, r1
 87c:	00000001 	andeq	r0, r0, r1
 880:	00000001 	andeq	r0, r0, r1
 884:	00000001 	andeq	r0, r0, r1
 888:	08003c6c 	stmdaeq	r0, {r2, r3, r5, r6, sl, fp, ip, sp}
 88c:	08003cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, ip, sp}
 890:	00000001 	andeq	r0, r0, r1
 894:	00000001 	andeq	r0, r0, r1
 898:	08003ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip, sp}
 89c:	08003d54 	stmdaeq	r0, {r2, r4, r6, r8, sl, fp, ip, sp}
 8a0:	08003d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp, ip, sp}
 8a4:	08003dcc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, fp, ip, sp}
 8a8:	00000001 	andeq	r0, r0, r1
 8ac:	00000001 	andeq	r0, r0, r1
 8b0:	00000001 	andeq	r0, r0, r1
 8b4:	00000001 	andeq	r0, r0, r1
 8b8:	00000001 	andeq	r0, r0, r1
 8bc:	00000001 	andeq	r0, r0, r1
 8c0:	00000001 	andeq	r0, r0, r1
 8c4:	00000001 	andeq	r0, r0, r1
 8c8:	00000001 	andeq	r0, r0, r1
 8cc:	00000001 	andeq	r0, r0, r1
	...
 8d8:	00000001 	andeq	r0, r0, r1
 8dc:	00000001 	andeq	r0, r0, r1
 8e0:	00000001 	andeq	r0, r0, r1
 8e4:	00000001 	andeq	r0, r0, r1
 8e8:	00000001 	andeq	r0, r0, r1
 8ec:	00000001 	andeq	r0, r0, r1
 8f0:	00000001 	andeq	r0, r0, r1
 8f4:	00000001 	andeq	r0, r0, r1
 8f8:	00000001 	andeq	r0, r0, r1
 8fc:	00000001 	andeq	r0, r0, r1
 900:	00000001 	andeq	r0, r0, r1
 904:	00000001 	andeq	r0, r0, r1
 908:	00000001 	andeq	r0, r0, r1
 90c:	00000001 	andeq	r0, r0, r1
 910:	00000001 	andeq	r0, r0, r1
 914:	00000001 	andeq	r0, r0, r1
 918:	00000001 	andeq	r0, r0, r1
 91c:	00000001 	andeq	r0, r0, r1
 920:	00000001 	andeq	r0, r0, r1
 924:	00000001 	andeq	r0, r0, r1
 928:	00000001 	andeq	r0, r0, r1
 92c:	00000001 	andeq	r0, r0, r1
 930:	00000001 	andeq	r0, r0, r1
 934:	00000001 	andeq	r0, r0, r1
 938:	00000001 	andeq	r0, r0, r1
 93c:	00000001 	andeq	r0, r0, r1
 940:	08003dd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, fp, ip, sp}
 944:	08003dda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, sl, fp, ip, sp}
	...
 950:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 954:	00000000 	andeq	r0, r0, r0
 958:	08003ddc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, fp, ip, sp}
 95c:	08003df0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, fp, ip, sp}
 960:	08003df0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, fp, ip, sp}
 964:	08003df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 968:	08003df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 96c:	08003e24 	stmdaeq	r0, {r2, r5, r9, sl, fp, ip, sp}
	...
 978:	00000030 	andeq	r0, r0, r0, lsr r0
 97c:	00000096 	muleq	r0, r6, r0
 980:	0000021a 	andeq	r0, r0, sl, lsl r2
 984:	00000222 	andeq	r0, r0, r2, lsr #4
	...
 990:	000000c2 	andeq	r0, r0, r2, asr #1
 994:	0000011a 	andeq	r0, r0, sl, lsl r1
 998:	000002be 			; <UNDEFINED> instruction: 0x000002be
 99c:	000002cc 	andeq	r0, r0, ip, asr #5
	...
 9a8:	00000156 	andeq	r0, r0, r6, asr r1
 9ac:	00000214 	andeq	r0, r0, r4, lsl r2
 9b0:	00000298 	muleq	r0, r8, r2
 9b4:	000002aa 	andeq	r0, r0, sl, lsr #5
 9b8:	000002ae 	andeq	r0, r0, lr, lsr #5
 9bc:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
 9c0:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
 9c4:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
 9c8:	000002cc 	andeq	r0, r0, ip, asr #5
 9cc:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
 9d8:	00000170 	andeq	r0, r0, r0, ror r1
 9dc:	00000174 	andeq	r0, r0, r4, ror r1
 9e0:	00000178 	andeq	r0, r0, r8, ror r1
 9e4:	00000190 	muleq	r0, r0, r1
 9e8:	00000198 	muleq	r0, r8, r1
 9ec:	000001e6 	andeq	r0, r0, r6, ror #3
 9f0:	000002ae 	andeq	r0, r0, lr, lsr #5
 9f4:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
 9f8:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
 9fc:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
	...
 a08:	000001e6 	andeq	r0, r0, r6, ror #3
 a0c:	000001ea 	andeq	r0, r0, sl, ror #3
 a10:	000001ec 	andeq	r0, r0, ip, ror #3
 a14:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
 a20:	00000234 	andeq	r0, r0, r4, lsr r2
 a24:	00000238 	andeq	r0, r0, r8, lsr r2
 a28:	0000023a 	andeq	r0, r0, sl, lsr r2
 a2c:	00000252 	andeq	r0, r0, r2, asr r2
 a30:	00000256 	andeq	r0, r0, r6, asr r2
 a34:	00000298 	muleq	r0, r8, r2
 a38:	000002aa 	andeq	r0, r0, sl, lsr #5
 a3c:	000002ae 	andeq	r0, r0, lr, lsr #5
 a40:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
 a44:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
	...
 a50:	00000001 	andeq	r0, r0, r1
 a54:	00000001 	andeq	r0, r0, r1
 a58:	00000001 	andeq	r0, r0, r1
 a5c:	00000001 	andeq	r0, r0, r1
 a60:	00000001 	andeq	r0, r0, r1
 a64:	00000001 	andeq	r0, r0, r1
	...
 a70:	00000001 	andeq	r0, r0, r1
 a74:	00000001 	andeq	r0, r0, r1
 a78:	08003e24 	stmdaeq	r0, {r2, r5, r9, sl, fp, ip, sp}
 a7c:	08003e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp, ip, sp}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
{
       0:	00000279 	andeq	r0, r0, r9, ror r2
}
       4:	01eb0003 	mvneq	r0, r3
       8:	01020000 	mrseq	r0, (UNDEF: 2)
  return ch;
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
      1c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
      20:	2f2e2e2f 	svccs	0x002e2e2f
      24:	702f2e2e 	eorvc	r2, pc, lr, lsr #28
      28:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
      2c:	732f7463 			; <UNDEFINED> instruction: 0x732f7463
  return ret;
      30:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
}
      34:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
      38:	74654e2f 	strbtvc	r4, [r5], #-3631	; 0xfffff1d1
      3c:	6e697564 	cdpvs	5, 6, cr7, cr9, cr4, {3}
      40:	756c506f 	strbvc	r5, [ip, #-111]!	; 0xffffff91
    list->node_count = 0;
      44:	732f3273 			; <UNDEFINED> instruction: 0x732f3273
      48:	2f006372 	svccs	0x00006372
}
      4c:	2f727375 	svccs	0x00727375
      50:	2f62696c 	svccs	0x0062696c
      54:	2f636367 	svccs	0x00636367
      58:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      5c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  HARDFAULT_HANDLING_ASM();
      60:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      64:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
      68:	2f312e33 	svccs	0x00312e33
      6c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
      70:	00656475 	rsbeq	r6, r5, r5, ror r4
}
      74:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
      78:	636e692f 	cmnvs	lr, #770048	; 0xbc000
      7c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      80:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
      84:	2f62696c 	svccs	0x0062696c
  trigger_irq();
      88:	00737973 	rsbseq	r7, r3, r3, ror r9
}
      8c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
      90:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
      94:	2f2e2e2f 	svccs	0x002e2e2f
      98:	76697264 	strbtvc	r7, [r9], -r4, ror #4
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
      9c:	2f737265 	svccs	0x00737265
    Error_Handler();
      a0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
}
      a4:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
      a8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
      ac:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
      b0:	2f2e2e2f 	svccs	0x002e2e2f
      SystemCoreClock = HSI_VALUE;
      b4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
      break;
      b8:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
      bc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
      c0:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
      c4:	2f534953 	svccs	0x00534953
      c8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
  SystemCoreClock >>= tmp;
      cc:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
      d0:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
      d4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
}
      d8:	2f787834 	svccs	0x00787834
      dc:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
      e0:	00656475 	rsbeq	r6, r5, r5, ror r4
      e4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
      e8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
      ec:	2f2e2e2f 	svccs	0x002e2e2f
      f0:	76697264 	strbtvc	r7, [r9], -r4, ror #4
      f4:	2f737265 	svccs	0x00737265
        EXTI->FTSR &= ~((uint32_t)iocurrent);
      f8:	70696863 	rsbvc	r6, r9, r3, ror #16
      fc:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
     100:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
        tmp = 0x0FU << (4U * (position & 0x03U));
     104:	532f7878 			; <UNDEFINED> instruction: 0x532f7878
     108:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     10c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     110:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     114:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     118:	2f726576 	svccs	0x00726576
     11c:	00636e69 	rsbeq	r6, r3, r9, ror #28
     120:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     124:	00632e6e 	rsbeq	r2, r3, lr, ror #28
     128:	73000001 	movwvc	r0, #1
     12c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     130:	00682e74 	rsbeq	r2, r8, r4, ror lr
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
     134:	73000002 	movwvc	r0, #2
     138:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     13c:	00682e66 	rsbeq	r2, r8, r6, ror #28
     140:	5f000002 	svcpl	0x00000002
     144:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
     148:	00682e73 	rsbeq	r2, r8, r3, ror lr
     14c:	72000003 	andvc	r0, r0, #3
     150:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     154:	0300682e 	movweq	r6, #2094	; 0x82e
     158:	6f6c0000 	svcvs	0x006c0000
     15c:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     160:	00000300 	andeq	r0, r0, r0, lsl #6
     164:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     168:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
     16c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     170:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
     174:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     178:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     17c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     180:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     184:	00000500 	andeq	r0, r0, r0, lsl #10
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
     188:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     18c:	30346632 	eorscc	r6, r4, r2, lsr r6
     190:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     194:	00050068 	andeq	r0, r5, r8, rrx
     198:	6d747300 	ldclvs	3, cr7, [r4, #-0]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
     19c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     1a0:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     1a4:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
     1a8:	655f6363 	ldrbvs	r6, [pc, #-867]	; fffffe4d <__StackLimit+0xdffdfe4d>
     1ac:	00682e78 	rsbeq	r2, r8, r8, ror lr
     1b0:	73000006 	movwvc	r0, #6
  for(position = 0U; position < GPIO_NUMBER; position++)
     1b4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     1b8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     1bc:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
}
     1c0:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
     1c4:	0600682e 	streq	r6, [r0], -lr, lsr #16
     1c8:	74730000 	ldrbtvc	r0, [r3], #-0
     1cc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     1d0:	5f787834 	svcpl	0x00787834
     1d4:	5f6c6168 	svcpl	0x006c6168
     1d8:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     1dc:	00060068 	andeq	r0, r6, r8, rrx
     1e0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     1e4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     1e8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     1ec:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
     1f0:	00000600 	andeq	r0, r0, r0, lsl #12
                res += 1;
     1f4:	00010500 	andeq	r0, r1, r0, lsl #10
     1f8:	0ef80205 	cdpeq	2, 15, cr0, cr8, cr5, {0}
            break;
     1fc:	e9030800 	stmdb	r3, {fp}
            _putchar('\n');
     200:	03050100 	movweq	r0, #20736	; 0x5100
            res += 1;
     204:	322e0b03 	eorcc	r0, lr, #3072	; 0xc00
     208:	05300205 	ldreq	r0, [r0, #-517]!	; 0xfffffdfb
            _putchar('\r');
     20c:	05264b03 	streq	r4, [r6, #-2819]!	; 0xfffff4fd
     210:	04020009 	streq	r0, [r2], #-9
            res += 1;
     214:	03023101 	movweq	r3, #8449	; 0x2101
            break;
     218:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
            _putchar(*str);
     21c:	02050001 	andeq	r0, r5, #1
     220:	00000000 	andeq	r0, r0, r0
            res += 1;
     224:	01019e03 	tsteq	r1, r3, lsl #28
     228:	db410305 	blle	1040e44 <_Min_Stack_Size+0x1040a44>
            break;
     22c:	05d92405 	ldrbeq	r2, [r9, #1029]	; 0x405
        str++;
     230:	29052f1e 	stmdbcs	r5, {r1, r2, r3, r4, r8, r9, sl, fp, sp}
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
     234:	2f22052f 	svccs	0x0022052f
     238:	052f2305 	streq	r2, [pc, #-773]!	; ffffff3b <__StackLimit+0xdffdff3b>
     23c:	3d2f2f1e 	stccc	15, cr2, [pc, #-120]!	; 1cc <_Min_Heap_Size-0x34>
}
     240:	2f06052f 	svccs	0x0006052f
     244:	30660505 	rsbcc	r0, r6, r5, lsl #10
     248:	05331f05 	ldreq	r1, [r3, #-3845]!	; 0xfffff0fb
     24c:	23052f22 	movwcs	r2, #24354	; 0x5f22
     250:	2f24052f 	svccs	0x0024052f
            hdma->XferCpltCallback(hdma);
     254:	2f06053d 	svccs	0x0006053d
     258:	30740505 	rsbscc	r0, r4, r5, lsl #10
     25c:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
     260:	01010008 	tsteq	r1, r8
     264:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     268:	000f1802 	andeq	r1, pc, r2, lsl #16
     26c:	01cc0308 	biceq	r0, ip, r8, lsl #6
          hdma->Instance->CR  &= ~(DMA_IT_TC);
     270:	00080501 	andeq	r0, r8, r1, lsl #10
     274:	31010402 	tstcc	r1, r2, lsl #8
     278:	01000102 	tsteq	r0, r2, lsl #2
     27c:	00025201 	andeq	r5, r2, r1, lsl #4
          __HAL_UNLOCK(hdma);
     280:	eb000300 	bl	e88 <_Min_Stack_Size+0xa88>
     284:	02000001 	andeq	r0, r0, #1
          hdma->State = HAL_DMA_STATE_READY;
     288:	0d0efb01 	vstreq	d15, [lr, #-4]
     28c:	01010100 	mrseq	r0, (UNDEF: 17)
        if(hdma->XferCpltCallback != NULL)
     290:	00000001 	andeq	r0, r0, r1
     294:	01000001 	tsteq	r0, r1
          hdma->XferCpltCallback(hdma);
     298:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     29c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
     2a0:	2f2e2e2f 	svccs	0x002e2e2f
     2a4:	6a6f7270 	bvs	1bdcc6c <_Min_Stack_Size+0x1bdc86c>
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
     2a8:	2f746365 	svccs	0x00746365
     2ac:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     2b0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
      hdma->State = HAL_DMA_STATE_ABORT;
     2b4:	654e2f78 	strbvs	r2, [lr, #-3960]	; 0xfffff088
     2b8:	69756474 	ldmdbvs	r5!, {r2, r4, r5, r6, sl, sp, lr}^
      __HAL_DMA_DISABLE(hdma);
     2bc:	6c506f6e 	mrrcvs	15, 6, r6, r0, cr14
     2c0:	2f327375 	svccs	0x00327375
     2c4:	00637273 	rsbeq	r7, r3, r3, ror r2
     2c8:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
        if (++count > timeout)
     2cc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     2d0:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
     2d4:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
     2d8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     2dc:	61652d65 	cmnvs	r5, r5, ror #26
     2e0:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     2e4:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
      __HAL_UNLOCK(hdma);
     2e8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     2ec:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      hdma->State = HAL_DMA_STATE_READY;
     2f0:	73752f00 	cmnvc	r5, #0, 30
     2f4:	6e692f72 	mcrvs	15, 3, r2, cr9, cr2, {3}
    if(hdma->XferErrorCallback != NULL)
     2f8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     2fc:	656e2f65 	strbvs	r2, [lr, #-3941]!	; 0xfffff09b
      hdma->XferErrorCallback(hdma);
     300:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
     304:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
     308:	2f2e2e00 	svccs	0x002e2e00
}
     30c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     310:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
     314:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     318:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     31c:	534d432f 	movtpl	r4, #54063	; 0xd32f
    UART_Transmit_IT(huart);
     320:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    return;
     324:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
     328:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     32c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     330:	2f2e2e2f 	svccs	0x002e2e2f
     334:	642f2e2e 	strtvs	r2, [pc], #-3630	; 33c <_Min_Heap_Size+0x13c>
     338:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    UART_EndTransmit_IT(huart);
     33c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    return;
     340:	5349534d 	movtpl	r5, #37709	; 0x934d
    return;
     344:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
      return;
     348:	2f656369 	svccs	0x00656369
      return;
     34c:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
}
     350:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     354:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     358:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     35c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      tickstart = HAL_GetTick();
     360:	2f2e2e00 	svccs	0x002e2e00
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     364:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     368:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     36c:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     370:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     374:	6968632f 	stmdbvs	r8!, {r0, r1, r2, r3, r5, r8, r9, sp, lr}^
          return HAL_TIMEOUT;
     378:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     37c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     380:	2f787834 	svccs	0x00787834
     384:	334d5453 	movtcc	r5, #54355	; 0xd453
    if(pwrclkchanged == SET)
     388:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     38c:	41485f78 	hvcmi	34296	; 0x85f8
      __HAL_RCC_PWR_CLK_DISABLE();
     390:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
     394:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     398:	636e692f 	cmnvs	lr, #770048	; 0xbc000
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     39c:	65730000 	ldrbvs	r0, [r3, #-0]!
     3a0:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     3a4:	0100632e 	tsteq	r0, lr, lsr #6
     3a8:	74730000 	ldrbtvc	r0, [r3], #-0
     3ac:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     3b0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     3b4:	74730000 	ldrbtvc	r0, [r3], #-0
        __HAL_RCC_PLL_DISABLE();
     3b8:	66656464 	strbtvs	r6, [r5], -r4, ror #8
     3bc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
        tickstart = HAL_GetTick();
     3c0:	745f0000 	ldrbvc	r0, [pc], #-0	; 3c8 <_Min_Heap_Size+0x1c8>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3c4:	73657079 	cmnvc	r5, #121	; 0x79
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3c8:	0300682e 	movweq	r6, #2094	; 0x82e
     3cc:	65720000 	ldrbvs	r0, [r2, #-0]!
     3d0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
            return HAL_TIMEOUT;
     3d4:	00030068 	andeq	r0, r3, r8, rrx
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3d8:	636f6c00 	cmnvs	pc, #0, 24
     3dc:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     3e0:	63000003 	movwvs	r0, #3
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     3e4:	5f65726f 	svcpl	0x0065726f
     3e8:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
     3ec:	00040068 	andeq	r0, r4, r8, rrx
     3f0:	73797300 	cmnvc	r9, #0, 6
     3f4:	5f6d6574 	svcpl	0x006d6574
     3f8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     3fc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     400:	00682e78 	rsbeq	r2, r8, r8, ror lr
     404:	73000005 	movwvc	r0, #5
     408:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     40c:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
        __HAL_RCC_PLL_ENABLE();
     410:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
        tickstart = HAL_GetTick();
     414:	00000500 	andeq	r0, r0, r0, lsl #10
     418:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     41c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     420:	61685f78 	smcvs	34296	; 0x85f8
     424:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
     428:	00682e66 	rsbeq	r2, r8, r6, ror #28
            return HAL_TIMEOUT;
     42c:	73000006 	movwvc	r0, #6
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     430:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     434:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     438:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
        __HAL_RCC_PLL_DISABLE();
     43c:	616d645f 	cmnvs	sp, pc, asr r4
     440:	0600682e 	streq	r6, [r0], -lr, lsr #16
        tickstart = HAL_GetTick();
     444:	74730000 	ldrbtvc	r0, [r3], #-0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     448:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     44c:	5f787834 	svcpl	0x00787834
     450:	5f6c6168 	svcpl	0x006c6168
     454:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
            return HAL_TIMEOUT;
     458:	0600682e 	streq	r6, [r0], -lr, lsr #16
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	74730000 	ldrbtvc	r0, [r3], #-0
     460:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     464:	5f787834 	svcpl	0x00787834
     468:	2e6c6168 	powcsez	f6, f4, #0.0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     46c:	00060068 	andeq	r0, r6, r8, rrx
     470:	01050000 	mrseq	r0, (UNDEF: 5)
        return HAL_ERROR;
     474:	20020500 	andcs	r0, r2, r0, lsl #10
        pll_config = RCC->PLLCFGR;
     478:	0308000f 	movweq	r0, #32783	; 0x800f
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     47c:	20050116 	andcs	r0, r5, r6, lsl r1
     480:	3e2e0a03 	vmulcc.f32	s0, s28, s6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     484:	3d3d3d4b 	ldccc	13, cr3, [sp, #-300]!	; 0xfffffed4
     488:	06053d3d 			; <UNDEFINED> instruction: 0x06053d3d
     48c:	4a05053e 	bmi	14198c <_Min_Stack_Size+0x14158c>
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     490:	31010530 	tstcc	r1, r0, lsr r5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     494:	01000702 	tsteq	r0, r2, lsl #14
     498:	00010501 	andeq	r0, r1, r1, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     49c:	0f740205 	svceq	0x00740205
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4a0:	37030800 	strcc	r0, [r3, -r0, lsl #16]
     4a4:	4e030501 	cfsh32mi	mvfx0, mvfx3, #1
     4a8:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
     4ac:	01053d0a 	tsteq	r5, sl, lsl #26
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     4b0:	00070221 	andeq	r0, r7, r1, lsr #4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b4:	01050101 	tsteq	r5, r1, lsl #2
     4b8:	00020500 	andeq	r0, r2, r0, lsl #10
     4bc:	03000000 	movweq	r0, #0
     4c0:	0805013f 	stmdaeq	r5, {r0, r1, r2, r3, r4, r5, r8}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4c4:	20060541 	andcs	r0, r6, r1, asr #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4c8:	052f0a05 	streq	r0, [pc, #-2565]!	; fffffacb <__StackLimit+0xdffdfacb>
     4cc:	07022101 	streq	r2, [r2, -r1, lsl #2]
     4d0:	8b010100 	blhi	408d8 <_Min_Stack_Size+0x404d8>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4d4:	03000002 	movweq	r0, #2
          return HAL_ERROR;
     4d8:	00020e00 	andeq	r0, r2, r0, lsl #28
}
     4dc:	fb010200 	blx	40ce6 <_Min_Stack_Size+0x408e6>
     4e0:	01000d0e 	tsteq	r0, lr, lsl #26
     4e4:	00010101 	andeq	r0, r1, r1, lsl #2
     4e8:	00010000 	andeq	r0, r1, r0
     4ec:	2e2e0100 	sufcse	f0, f6, f0
     4f0:	2f2e2e2f 	svccs	0x002e2e2f
     4f4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     4f8:	72702f2e 	rsbsvc	r2, r0, #46, 30	; 0xb8
     4fc:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
     500:	74732f74 	ldrbtvc	r2, [r3], #-3956	; 0xfffff08c
     504:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     508:	2f787834 	svccs	0x00787834
     50c:	6474654e 	ldrbtvs	r6, [r4], #-1358	; 0xfffffab2
     510:	6f6e6975 	svcvs	0x006e6975
     514:	73756c50 	cmnvc	r5, #80, 24	; 0x5000
     518:	72732f32 	rsbsvc	r2, r3, #50, 30	; 0xc8
     51c:	752f0063 	strvc	r0, [pc, #-99]!	; 4c1 <_Min_Stack_Size+0xc1>
     520:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 35c <_Min_Heap_Size+0x15c>
     524:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     528:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     52c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     530:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     534:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     538:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     53c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     540:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     544:	2f006564 	svccs	0x00006564
     548:	2f727375 	svccs	0x00727375
     54c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     550:	2f656475 	svccs	0x00656475
     554:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
     558:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
     55c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     560:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     564:	2f2e2e2f 	svccs	0x002e2e2f
     568:	642f2e2e 	strtvs	r2, [pc], #-3630	; 570 <_Min_Stack_Size+0x170>
     56c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     570:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     574:	5349534d 	movtpl	r5, #37709	; 0x934d
     578:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     57c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     580:	2f2e2e00 	svccs	0x002e2e00
     584:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     588:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     58c:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     590:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     594:	534d432f 	movtpl	r4, #54063	; 0xd32f
     598:	442f5349 	strtmi	r5, [pc], #-841	; 5a0 <_Min_Stack_Size+0x1a0>
     59c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     5a0:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     5a4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     5a8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     5ac:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     5b0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     5b4:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     5b8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     5bc:	2f2e2e2f 	svccs	0x002e2e2f
     5c0:	642f2e2e 	strtvs	r2, [pc], #-3630	; 5c8 <_Min_Stack_Size+0x1c8>
     5c4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     5c8:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
     5cc:	2f706968 	svccs	0x00706968
     5d0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     5d4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     5d8:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
     5dc:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     5e0:	5f787834 	svcpl	0x00787834
     5e4:	5f4c4148 	svcpl	0x004c4148
     5e8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     5ec:	692f7265 	stmdbvs	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     5f0:	0000636e 	andeq	r6, r0, lr, ror #6
     5f4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     5f8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     5fc:	61685f78 	smcvs	34296	; 0x85f8
     600:	736d5f6c 	cmnvc	sp, #108, 30	; 0x1b0
     604:	00632e70 	rsbeq	r2, r3, r0, ror lr
     608:	73000001 	movwvc	r0, #1
     60c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     610:	00682e74 	rsbeq	r2, r8, r4, ror lr
     614:	73000002 	movwvc	r0, #2
     618:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     61c:	00682e66 	rsbeq	r2, r8, r6, ror #28
     620:	5f000002 	svcpl	0x00000002
     624:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     628:	00682e73 	rsbeq	r2, r8, r3, ror lr
     62c:	72000003 	andvc	r0, r0, #3
     630:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
     634:	0300682e 	movweq	r6, #2094	; 0x82e
     638:	6f6c0000 	svcvs	0x006c0000
     63c:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
     640:	00000300 	andeq	r0, r0, r0, lsl #6
     644:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     648:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
     64c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     650:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     654:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     658:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     65c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     660:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     664:	00000500 	andeq	r0, r0, r0, lsl #10
     668:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     66c:	30346632 	eorscc	r6, r4, r2, lsr r6
     670:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     674:	00050068 	andeq	r0, r5, r8, rrx
     678:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     67c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     680:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     684:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 68c <_Min_Stack_Size+0x28c>
     688:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     68c:	00000600 	andeq	r0, r0, r0, lsl #12
     690:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     694:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     698:	61685f78 	smcvs	34296	; 0x85f8
     69c:	70675f6c 	rsbvc	r5, r7, ip, ror #30
     6a0:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     6a4:	00000600 	andeq	r0, r0, r0, lsl #12
     6a8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     6ac:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     6b0:	61685f78 	smcvs	34296	; 0x85f8
     6b4:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
     6b8:	00682e61 	rsbeq	r2, r8, r1, ror #28
     6bc:	73000006 	movwvc	r0, #6
     6c0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     6c4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     6c8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     6cc:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     6d0:	00682e74 	rsbeq	r2, r8, r4, ror lr
     6d4:	73000006 	movwvc	r0, #6
     6d8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     6dc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     6e0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     6e4:	0600682e 	streq	r6, [r0], -lr, lsr #16
     6e8:	05000000 	streq	r0, [r0, #-0]
     6ec:	02050001 	andeq	r0, r5, #1
     6f0:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
     6f4:	05013403 	streq	r3, [r1, #-1027]	; 0xfffffbfd
     6f8:	d8d75203 	ldmle	r7, {r0, r1, r9, ip, lr}^
     6fc:	da1d05d8 	ble	741e64 <_Min_Stack_Size+0x741a64>
     700:	2f2f2f2f 	svccs	0x002f2f2f
     704:	05300305 	ldreq	r0, [r0, #-773]!	; 0xfffffcfb
     708:	1d056917 	vstrne.16	s12, [r5, #-46]	; 0xffffffd2	; <UNPREDICTABLE>
     70c:	3003052f 	andcc	r0, r3, pc, lsr #10
     710:	3e6a2405 	cdpcc	4, 6, cr2, cr10, cr5, {0}
     714:	4b3d3d4b 	blmi	f4fc48 <_Min_Stack_Size+0xf4f848>
     718:	3d3d3d3d 	ldccc	13, cr3, [sp, #-244]!	; 0xffffff0c
     71c:	054b3d3d 	strbeq	r3, [fp, #-3389]	; 0xfffff2c3
     720:	053f4c03 	ldreq	r4, [pc, #-3075]!	; fffffb25 <__StackLimit+0xdffdfb25>
     724:	4b3e6924 	blmi	f9abbc <_Min_Stack_Size+0xf9a7bc>
     728:	3d4b3d3d 	stclcc	13, cr3, [fp, #-244]	; 0xffffff0c
     72c:	3d4b3d3d 	stclcc	13, cr3, [fp, #-244]	; 0xffffff0c
     730:	03054b3d 	movweq	r4, #23357	; 0x5b3d
     734:	596a3f4c 	stmdbpl	sl!, {r2, r3, r6, r8, r9, sl, fp, ip, sp}^
     738:	593f593f 	ldmdbpl	pc!, {r0, r1, r2, r3, r4, r5, r8, fp, ip, lr}	; <UNPREDICTABLE>
     73c:	083d0105 	ldmdaeq	sp!, {r0, r2, r8}
     740:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     744:	02050001 	andeq	r0, r5, #1
     748:	00000000 	andeq	r0, r0, r0
     74c:	01019503 	tsteq	r1, r3, lsl #10
     750:	67500305 	ldrbvs	r0, [r0, -r5, lsl #6]
     754:	3e4e4c6a 	cdpcc	12, 4, cr4, cr14, cr10, {3}
     758:	01053d3f 	tsteq	r5, pc, lsr sp
     75c:	000c023d 	andeq	r0, ip, sp, lsr r2
     760:	01cb0101 	biceq	r0, fp, r1, lsl #2
     764:	00030000 	andeq	r0, r3, r0
     768:	0000019a 	muleq	r0, sl, r1
     76c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     770:	0101000d 	tsteq	r1, sp
     774:	00000101 	andeq	r0, r0, r1, lsl #2
     778:	00000100 	andeq	r0, r0, r0, lsl #2
     77c:	2f2e2e01 	svccs	0x002e2e01
     780:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     784:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     788:	6f72702f 	svcvs	0x0072702f
     78c:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     790:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
     794:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     798:	4e2f7878 	mcrmi	8, 1, r7, cr15, cr8, {3}
     79c:	75647465 	strbvc	r7, [r4, #-1125]!	; 0xfffffb9b
     7a0:	506f6e69 	rsbpl	r6, pc, r9, ror #28
     7a4:	3273756c 	rsbscc	r7, r3, #108, 10	; 0x1b000000
     7a8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     7ac:	73752f00 	cmnvc	r5, #0, 30
     7b0:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     7b4:	63672f62 	cmnvs	r7, #392	; 0x188
     7b8:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
     7bc:	6f6e2d6d 	svcvs	0x006e2d6d
     7c0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     7c4:	2f696261 	svccs	0x00696261
     7c8:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
     7cc:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
     7d0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     7d4:	752f0065 	strvc	r0, [pc, #-101]!	; 777 <_Min_Stack_Size+0x377>
     7d8:	692f7273 	stmdbvs	pc!, {r0, r1, r4, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     7dc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     7e0:	6e2f6564 	cfsh64vs	mvdx6, mvdx15, #52
     7e4:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
     7e8:	79732f62 	ldmdbvc	r3!, {r1, r5, r6, r8, r9, sl, fp, sp}^
     7ec:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     7f0:	2f2e2e2f 	svccs	0x002e2e2f
     7f4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     7f8:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
     7fc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     800:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     804:	2f534953 	svccs	0x00534953
     808:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     80c:	00656475 	rsbeq	r6, r5, r5, ror r4
     810:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     814:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     818:	2f2e2e2f 	svccs	0x002e2e2f
     81c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
     820:	2f737265 	svccs	0x00737265
     824:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     828:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
     82c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     830:	2f54532f 	svccs	0x0054532f
     834:	334d5453 	movtcc	r5, #54355	; 0xd453
     838:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     83c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
     840:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     844:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     848:	2f2e2e2f 	svccs	0x002e2e2f
     84c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     850:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
     854:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     858:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     85c:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
     860:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     864:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     868:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     86c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     870:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     874:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 87c <_Min_Stack_Size+0x47c>
     878:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     87c:	6e692f72 	mcrvs	15, 3, r2, cr9, cr2, {3}
     880:	73000063 	movwvc	r0, #99	; 0x63
     884:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     888:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     88c:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
     890:	00010063 	andeq	r0, r1, r3, rrx
     894:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     898:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     89c:	00020068 	andeq	r0, r2, r8, rrx
     8a0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     8a4:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     8a8:	00020068 	andeq	r0, r2, r8, rrx
     8ac:	79745f00 	ldmdbvc	r4!, {r8, r9, sl, fp, ip, lr}^
     8b0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     8b4:	00030068 	andeq	r0, r3, r8, rrx
     8b8:	65657200 	strbvs	r7, [r5, #-512]!	; 0xfffffe00
     8bc:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     8c0:	00000300 	andeq	r0, r0, r0, lsl #6
     8c4:	6b636f6c 	blvs	18dc67c <_Min_Stack_Size+0x18dc27c>
     8c8:	0300682e 	movweq	r6, #2094	; 0x82e
     8cc:	6f630000 	svcvs	0x00630000
     8d0:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     8d4:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
     8d8:	00000400 	andeq	r0, r0, r0, lsl #8
     8dc:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     8e0:	735f6d65 	cmpvc	pc, #6464	; 0x1940
     8e4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     8e8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     8ec:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     8f0:	74730000 	ldrbtvc	r0, [r3], #-0
     8f4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     8f8:	5f787834 	svcpl	0x00787834
     8fc:	2e6c6168 	powcsez	f6, f4, #0.0
     900:	00060068 	andeq	r0, r6, r8, rrx
     904:	01050000 	mrseq	r0, (UNDEF: 5)
     908:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
     90c:	03080011 	movweq	r0, #32785	; 0x8011
     910:	050100ff 	streq	r0, [r1, #-255]	; 0xffffff01
     914:	01052f03 	tsteq	r5, r3, lsl #30
     918:	0006024b 	andeq	r0, r6, fp, asr #4
     91c:	01050101 	tsteq	r5, r1, lsl #2
     920:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
     924:	03080011 	movweq	r0, #32785	; 0x8011
     928:	30010189 	andcc	r0, r1, r9, lsl #3
     92c:	01000402 	tsteq	r0, r2, lsl #8
     930:	0001e201 	andeq	lr, r1, r1, lsl #4
     934:	1b000300 	blne	153c <_Min_Stack_Size+0x113c>
     938:	02000001 	andeq	r0, r0, #1
     93c:	0d0efb01 	vstreq	d15, [lr, #-4]
     940:	01010100 	mrseq	r0, (UNDEF: 17)
     944:	00000001 	andeq	r0, r0, r1
     948:	01000001 	tsteq	r0, r1
     94c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     950:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     954:	2f2e2e2f 	svccs	0x002e2e2f
     958:	6a6f7270 	bvs	1bdd320 <_Min_Stack_Size+0x1bdcf20>
     95c:	2f746365 	svccs	0x00746365
     960:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     964:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     968:	654e2f78 	strbvs	r2, [lr, #-3960]	; 0xfffff088
     96c:	69756474 	ldmdbvs	r5!, {r2, r4, r5, r6, sl, sp, lr}^
     970:	6c506f6e 	mrrcvs	15, 6, r6, r0, cr14
     974:	2f327375 	svccs	0x00327375
     978:	00637273 	rsbeq	r7, r3, r3, ror r2
     97c:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
     980:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
     984:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
     988:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     98c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     990:	61652d65 	cmnvs	r5, r5, ror #26
     994:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     998:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
     99c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     9a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     9a4:	2f2e2e00 	svccs	0x002e2e00
     9a8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     9ac:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     9b0:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     9b4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     9b8:	534d432f 	movtpl	r4, #54063	; 0xd32f
     9bc:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
     9c0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     9c4:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     9c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     9cc:	2f2e2e2f 	svccs	0x002e2e2f
     9d0:	642f2e2e 	strtvs	r2, [pc], #-3630	; 9d8 <_Min_Stack_Size+0x5d8>
     9d4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     9d8:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     9dc:	5349534d 	movtpl	r5, #37709	; 0x934d
     9e0:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     9e4:	2f656369 	svccs	0x00656369
     9e8:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
     9ec:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     9f0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     9f4:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     9f8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     9fc:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     a00:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     a04:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     a08:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     a0c:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
     a10:	00000100 	andeq	r0, r0, r0, lsl #2
     a14:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     a18:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     a1c:	00000200 	andeq	r0, r0, r0, lsl #4
     a20:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     a24:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
     a28:	0300682e 	movweq	r6, #2094	; 0x82e
     a2c:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     a30:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     a34:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
     a38:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     a3c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     a40:	00000400 	andeq	r0, r0, r0, lsl #8
     a44:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     a48:	30346632 	eorscc	r6, r4, r2, lsr r6
     a4c:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     a50:	00040068 	andeq	r0, r4, r8, rrx
     a54:	01050000 	mrseq	r0, (UNDEF: 5)
     a58:	88020500 	stmdahi	r2, {r8, sl}
     a5c:	03080011 	movweq	r0, #32785	; 0x8011
     a60:	05010184 	streq	r0, [r1, #-388]	; 0xfffffe7c
     a64:	0605350b 	streq	r3, [r5], -fp, lsl #10
     a68:	200d0569 	andcs	r0, sp, r9, ror #10
     a6c:	05310b05 	ldreq	r0, [r1, #-2821]!	; 0xfffff4fb
     a70:	10058506 	andne	r8, r5, r6, lsl #10
     a74:	310b0520 	tstcc	fp, r0, lsr #10
     a78:	05690605 	strbeq	r0, [r9, #-1541]!	; 0xfffff9fb
     a7c:	0605200c 	streq	r2, [r5], -ip
     a80:	200d0534 	andcs	r0, sp, r4, lsr r5
     a84:	023e0105 	eorseq	r0, lr, #1073741825	; 0x40000001
     a88:	0101000b 	tsteq	r1, fp
     a8c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     a90:	00000002 	andeq	r0, r0, r2
     a94:	01c90300 	biceq	r0, r9, r0, lsl #6
     a98:	3d0c0501 	cfstr32cc	mvfx0, [ip, #-4]
     a9c:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
     aa0:	2b052e21 	blcs	14c32c <_Min_Stack_Size+0x14bf2c>
     aa4:	2e3a052e 	cdpcs	5, 3, cr0, cr10, cr14, {1}
     aa8:	05310c05 	ldreq	r0, [r1, #-3077]!	; 0xfffff3fb
     aac:	03052e07 	movweq	r2, #24071	; 0x5e07
     ab0:	9317053e 	tstls	r7, #260046848	; 0xf800000
     ab4:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
     ab8:	07052217 	smladeq	r5, r7, r2, r2
     abc:	2617053d 			; <UNDEFINED> instruction: 0x2617053d
     ac0:	052e3705 	streq	r3, [lr, #-1797]!	; 0xfffff8fb
     ac4:	053d2011 	ldreq	r2, [sp, #-17]!	; 0xffffffef
     ac8:	0a052e0c 	beq	14c300 <_Min_Stack_Size+0x14bf00>
     acc:	3f1d053e 	svccc	0x001d053e
     ad0:	054a2c05 	strbeq	r2, [sl, #-3077]	; 0xfffff3fb
     ad4:	10052e4a 	andne	r2, r5, sl, asr #28
     ad8:	4f1d053c 	svcmi	0x001d053c
     adc:	054a2c05 	strbeq	r2, [sl, #-3077]	; 0xfffff3fb
     ae0:	10052e4a 	andne	r2, r5, sl, asr #28
     ae4:	3f14053c 	svccc	0x0014053c
     ae8:	052e3205 	streq	r3, [lr, #-517]!	; 0xfffffdfb
     aec:	0c053c3e 	stceq	12, cr3, [r5], {62}	; 0x3e
     af0:	2f1f0520 	svccs	0x001f0520
     af4:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
     af8:	17052f07 	strne	r2, [r5, -r7, lsl #30]
     afc:	3d070522 	cfstr32cc	mvfx0, [r7, #-136]	; 0xffffff78
     b00:	05241c05 	streq	r1, [r4, #-3077]!	; 0xfffff3fb
     b04:	16052e34 			; <UNDEFINED> instruction: 0x16052e34
     b08:	2e07053c 	mcrcs	5, 0, r0, cr7, cr12, {1}
     b0c:	05221305 	streq	r1, [r2, #-773]!	; 0xfffffcfb
     b10:	10027501 	andne	r7, r2, r1, lsl #10
     b14:	8c010100 	stfhis	f0, [r1], {-0}
     b18:	03000004 	movweq	r0, #4
     b1c:	00019900 	andeq	r9, r1, r0, lsl #18
     b20:	fb010200 	blx	4132a <_Min_Stack_Size+0x40f2a>
     b24:	01000d0e 	tsteq	r0, lr, lsl #26
     b28:	00010101 	andeq	r0, r1, r1, lsl #2
     b2c:	00010000 	andeq	r0, r1, r0
     b30:	2e2e0100 	sufcse	f0, f6, f0
     b34:	2f2e2e2f 	svccs	0x002e2e2f
     b38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     b3c:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
     b40:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     b44:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     b48:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
     b4c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     b50:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     b54:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     b58:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     b5c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     b60:	445f4c41 	ldrbmi	r4, [pc], #-3137	; b68 <_Min_Stack_Size+0x768>
     b64:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     b68:	72732f72 	rsbsvc	r2, r3, #456	; 0x1c8
     b6c:	752f0063 	strvc	r0, [pc, #-99]!	; b11 <_Min_Stack_Size+0x711>
     b70:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 9ac <_Min_Stack_Size+0x5ac>
     b74:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
     b78:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
     b7c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     b80:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     b84:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     b88:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
     b8c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
     b90:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     b94:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     b98:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     b9c:	2f2e2e2f 	svccs	0x002e2e2f
     ba0:	642f2e2e 	strtvs	r2, [pc], #-3630	; ba8 <_Min_Stack_Size+0x7a8>
     ba4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     ba8:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     bac:	5349534d 	movtpl	r5, #37709	; 0x934d
     bb0:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     bb4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     bb8:	2f2e2e00 	svccs	0x002e2e00
     bbc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     bc0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     bc4:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     bc8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     bcc:	534d432f 	movtpl	r4, #54063	; 0xd32f
     bd0:	442f5349 	strtmi	r5, [pc], #-841	; bd8 <_Min_Stack_Size+0x7d8>
     bd4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     bd8:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     bdc:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     be0:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     be4:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     be8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     bec:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     bf0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     bf4:	2f2e2e2f 	svccs	0x002e2e2f
     bf8:	642f2e2e 	strtvs	r2, [pc], #-3630	; c00 <_Min_Stack_Size+0x800>
     bfc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     c00:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
     c04:	2f706968 	svccs	0x00706968
     c08:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c0c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c10:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
     c14:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     c18:	5f787834 	svcpl	0x00787834
     c1c:	5f4c4148 	svcpl	0x004c4148
     c20:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     c24:	692f7265 	stmdbvs	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     c28:	0000636e 	andeq	r6, r0, lr, ror #6
     c2c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c30:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c34:	61685f78 	smcvs	34296	; 0x85f8
     c38:	00632e6c 	rsbeq	r2, r3, ip, ror #28
     c3c:	73000001 	movwvc	r0, #1
     c40:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     c44:	00682e74 	rsbeq	r2, r8, r4, ror lr
     c48:	63000002 	movwvs	r0, #2
     c4c:	5f65726f 	svcpl	0x0065726f
     c50:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
     c54:	00030068 	andeq	r0, r3, r8, rrx
     c58:	73797300 	cmnvc	r9, #0, 6
     c5c:	5f6d6574 	svcpl	0x006d6574
     c60:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c64:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c68:	00682e78 	rsbeq	r2, r8, r8, ror lr
     c6c:	73000004 	movwvc	r0, #4
     c70:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     c74:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
     c78:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
     c7c:	00000400 	andeq	r0, r0, r0, lsl #8
     c80:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c84:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c88:	00682e78 	rsbeq	r2, r8, r8, ror lr
     c8c:	73000004 	movwvc	r0, #4
     c90:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     c94:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     c98:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     c9c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     ca0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     ca4:	74730000 	ldrbtvc	r0, [r3], #-0
     ca8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     cac:	5f787834 	svcpl	0x00787834
     cb0:	2e6c6168 	powcsez	f6, f4, #0.0
     cb4:	00050068 	andeq	r0, r5, r8, rrx
     cb8:	01050000 	mrseq	r0, (UNDEF: 5)
     cbc:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
     cc0:	03080011 	movweq	r0, #32785	; 0x8011
     cc4:	0501019d 	streq	r0, [r1, #-413]	; 0xfffffe63
     cc8:	6a6a3103 	bvs	1a8d0dc <_Min_Stack_Size+0x1a8ccdc>
     ccc:	053f3f6a 	ldreq	r3, [pc, #-3946]!	; fffffd6a <__StackLimit+0xdffdfd6a>
     cd0:	0105310a 	tsteq	r5, sl, lsl #2
     cd4:	00050221 	andeq	r0, r5, r1, lsr #4
     cd8:	01050101 	tsteq	r5, r1, lsl #2
     cdc:	00020500 	andeq	r0, r2, r0, lsl #10
     ce0:	03000000 	movweq	r0, #0
     ce4:	050101be 	streq	r0, [r1, #-446]	; 0xfffffe42
     ce8:	3e4b3003 	cdpcc	0, 4, cr3, cr11, cr3, {0}
     cec:	3e4b3e4b 	cdpcc	14, 4, cr3, cr11, cr11, {2}
     cf0:	3f4b3e4b 	svccc	0x004b3e4b
     cf4:	05310a05 	ldreq	r0, [r1, #-2565]!	; 0xfffff5fb
     cf8:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
     cfc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     d00:	02050001 	andeq	r0, r5, #1
     d04:	00000000 	andeq	r0, r0, r0
     d08:	0101db03 	tsteq	r1, r3, lsl #22
     d0c:	00040232 	andeq	r0, r4, r2, lsr r2
     d10:	01050101 	tsteq	r5, r1, lsl #2
     d14:	00020500 	andeq	r0, r2, r0, lsl #10
     d18:	03000000 	movweq	r0, #0
     d1c:	320101e6 	andcc	r0, r1, #-2147483591	; 0x80000039
     d20:	01000402 	tsteq	r0, r2, lsl #8
     d24:	00010501 	andeq	r0, r1, r1, lsl #10
     d28:	12280205 	eorne	r0, r8, #1342177280	; 0x50000000
     d2c:	fd030800 	stc2	8, cr0, [r3, #-0]
     d30:	07050101 	streq	r0, [r5, -r1, lsl #2]
     d34:	2e33054c 	cdpcs	5, 3, cr0, cr3, cr12, {2}
     d38:	05740705 	ldrbeq	r0, [r4, #-1797]!	; 0xfffff8fb
     d3c:	0c056606 	stceq	6, cr6, [r5], {6}
     d40:	32060530 	andcc	r0, r6, #48, 10	; 0xc000000
     d44:	053e0505 	ldreq	r0, [lr, #-1285]!	; 0xfffffafb
     d48:	0a056710 	beq	15a990 <_Min_Stack_Size+0x15a590>
     d4c:	2a0c0544 	bcs	302264 <_Min_Stack_Size+0x301e64>
     d50:	02250105 	eoreq	r0, r5, #1073741825	; 0x40000001
     d54:	0101000a 	tsteq	r1, sl
     d58:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     d5c:	00128802 	andseq	r8, r2, r2, lsl #16
     d60:	02b80308 	adcseq	r0, r8, #8, 6	; 0x20000000
     d64:	2f0a0501 	svccs	0x000a0501
     d68:	02830105 	addeq	r0, r3, #1073741825	; 0x40000001
     d6c:	01010008 	tsteq	r1, r8
     d70:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     d74:	0012ac02 	andseq	sl, r2, r2, lsl #24
     d78:	02c30308 	sbceq	r0, r3, #8, 6	; 0x20000000
     d7c:	2f0a0501 	svccs	0x000a0501
     d80:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     d84:	01010006 	tsteq	r1, r6
     d88:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     d8c:	00000002 	andeq	r0, r0, r2
     d90:	02cc0300 	sbceq	r0, ip, #0, 6
     d94:	2f0a0501 	svccs	0x000a0501
     d98:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     d9c:	01010006 	tsteq	r1, r6
     da0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     da4:	00000002 	andeq	r0, r0, r2
     da8:	02d50300 	sbcseq	r0, r5, #0, 6
     dac:	59150501 	ldmdbpl	r5, {r0, r8, sl}
     db0:	05331205 	ldreq	r1, [r3, #-517]!	; 0xfffffdfb
     db4:	12052e06 	andne	r2, r5, #6, 28	; 0x60
     db8:	3f10053f 	svccc	0x0010053f
     dbc:	053f0e05 	ldreq	r0, [pc, #-3589]!	; ffffffbf <__StackLimit+0xdffdffbf>
     dc0:	12057608 	andne	r7, r5, #8, 12	; 0x800000
     dc4:	400a053f 	andmi	r0, sl, pc, lsr r5
     dc8:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
     dcc:	01010008 	tsteq	r1, r8
     dd0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     dd4:	00000002 	andeq	r0, r0, r2
     dd8:	02f50300 	rscseq	r0, r5, #0, 6
     ddc:	2f0a0501 	svccs	0x000a0501
     de0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     de4:	01010006 	tsteq	r1, r6
     de8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     dec:	00000002 	andeq	r0, r0, r2
     df0:	03850300 	orreq	r0, r5, #0, 6
     df4:	4b180501 	blmi	602200 <_Min_Stack_Size+0x601e00>
     df8:	053d0c05 	ldreq	r0, [sp, #-3077]!	; 0xfffff3fb
     dfc:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
     e00:	3c0a054c 	cfstr32cc	mvfx0, [sl], {76}	; 0x4c
     e04:	053e0d05 	ldreq	r0, [lr, #-3333]!	; 0xfffff2fb
     e08:	0f053d08 	svceq	0x00053d08
     e0c:	3a120522 	bcc	48229c <_Min_Stack_Size+0x481e9c>
     e10:	053c0805 	ldreq	r0, [ip, #-2053]!	; 0xfffff7fb
     e14:	06024001 	streq	r4, [r2], -r1
     e18:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e1c:	02050001 	andeq	r0, r5, #1
     e20:	00000000 	andeq	r0, r0, r0
     e24:	0103a003 	tsteq	r3, r3
     e28:	05301105 	ldreq	r1, [r0, #-261]!	; 0xfffffefb
     e2c:	06026701 	streq	r6, [r2], -r1, lsl #14
     e30:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e34:	02050001 	andeq	r0, r5, #1
     e38:	00000000 	andeq	r0, r0, r0
     e3c:	0103b003 	tsteq	r3, r3
     e40:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
     e44:	06026701 	streq	r6, [r2], -r1, lsl #14
     e48:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e4c:	02050001 	andeq	r0, r5, #1
     e50:	00000000 	andeq	r0, r0, r0
     e54:	0103ba03 	tsteq	r3, r3, lsl #20
     e58:	052f0a05 	streq	r0, [pc, #-2565]!	; 45b <_Min_Stack_Size+0x5b>
     e5c:	07022101 	streq	r2, [r2, -r1, lsl #2]
     e60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e64:	02050001 	andeq	r0, r5, #1
     e68:	00000000 	andeq	r0, r0, r0
     e6c:	0103c303 	tsteq	r3, r3, lsl #6
     e70:	052f1105 	streq	r1, [pc, #-261]!	; d73 <_Min_Stack_Size+0x973>
     e74:	01052e1b 	tsteq	r5, fp, lsl lr
     e78:	00070221 	andeq	r0, r7, r1, lsr #4
     e7c:	01050101 	tsteq	r5, r1, lsl #2
     e80:	00020500 	andeq	r0, r2, r0, lsl #10
     e84:	03000000 	movweq	r0, #0
     e88:	050103cc 	streq	r0, [r1, #-972]	; 0xfffffc34
     e8c:	1b052f11 	blne	14cad8 <_Min_Stack_Size+0x14c6d8>
     e90:	2f01052e 	svccs	0x0001052e
     e94:	01000602 	tsteq	r0, r2, lsl #12
     e98:	00010501 	andeq	r0, r1, r1, lsl #10
     e9c:	00000205 	andeq	r0, r0, r5, lsl #4
     ea0:	d5030000 	strle	r0, [r3, #-0]
     ea4:	03050103 	movweq	r0, #20739	; 0x5103
     ea8:	6701052f 	strvs	r0, [r1, -pc, lsr #10]
     eac:	01000602 	tsteq	r0, r2, lsl #12
     eb0:	00010501 	andeq	r0, r1, r1, lsl #10
     eb4:	00000205 	andeq	r0, r0, r5, lsl #4
     eb8:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
     ebc:	03050103 	movweq	r0, #20739	; 0x5103
     ec0:	6701052f 	strvs	r0, [r1, -pc, lsr #10]
     ec4:	01000602 	tsteq	r0, r2, lsl #12
     ec8:	00010501 	andeq	r0, r1, r1, lsl #10
     ecc:	00000205 	andeq	r0, r0, r5, lsl #4
     ed0:	e7030000 	str	r0, [r3, -r0]
     ed4:	03050103 	movweq	r0, #20739	; 0x5103
     ed8:	6701052f 	strvs	r0, [r1, -pc, lsr #10]
     edc:	01000602 	tsteq	r0, r2, lsl #12
     ee0:	00010501 	andeq	r0, r1, r1, lsl #10
     ee4:	00000205 	andeq	r0, r0, r5, lsl #4
     ee8:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
     eec:	03050103 	movweq	r0, #20739	; 0x5103
     ef0:	6701052f 	strvs	r0, [r1, -pc, lsr #10]
     ef4:	01000602 	tsteq	r0, r2, lsl #12
     ef8:	00010501 	andeq	r0, r1, r1, lsl #10
     efc:	00000205 	andeq	r0, r0, r5, lsl #4
     f00:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
     f04:	03050103 	movweq	r0, #20739	; 0x5103
     f08:	6701052f 	strvs	r0, [r1, -pc, lsr #10]
     f0c:	01000602 	tsteq	r0, r2, lsl #12
     f10:	00010501 	andeq	r0, r1, r1, lsl #10
     f14:	00000205 	andeq	r0, r0, r5, lsl #4
     f18:	82030000 	andhi	r0, r3, #0
     f1c:	03050104 	movweq	r0, #20740	; 0x5104
     f20:	6701052f 	strvs	r0, [r1, -pc, lsr #10]
     f24:	01000602 	tsteq	r0, r2, lsl #12
     f28:	00010501 	andeq	r0, r1, r1, lsl #10
     f2c:	00000205 	andeq	r0, r0, r5, lsl #4
     f30:	8d030000 	stchi	0, cr0, [r3, #-0]
     f34:	03050104 	movweq	r0, #20740	; 0x5104
     f38:	2025052f 	eorcs	r0, r5, pc, lsr #10
     f3c:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
     f40:	01010007 	tsteq	r1, r7
     f44:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     f48:	00000002 	andeq	r0, r0, r2
     f4c:	04980300 	ldreq	r0, [r8], #768	; 0x300
     f50:	2f030501 	svccs	0x00030501
     f54:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
     f58:	07022f01 	streq	r2, [r2, -r1, lsl #30]
     f5c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     f60:	02050001 	andeq	r0, r5, #1
     f64:	00000000 	andeq	r0, r0, r0
     f68:	0104a103 	tsteq	r4, r3, lsl #2
     f6c:	052f0b05 	streq	r0, [pc, #-2821]!	; 46f <_Min_Stack_Size+0x6f>
     f70:	06022f01 	streq	r2, [r2], -r1, lsl #30
     f74:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     f78:	02050001 	andeq	r0, r5, #1
     f7c:	00000000 	andeq	r0, r0, r0
     f80:	0104aa03 	tsteq	r4, r3, lsl #20
     f84:	052f0b05 	streq	r0, [pc, #-2821]!	; 487 <_Min_Stack_Size+0x87>
     f88:	06022f01 	streq	r2, [r2], -r1, lsl #30
     f8c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     f90:	02050001 	andeq	r0, r5, #1
     f94:	00000000 	andeq	r0, r0, r0
     f98:	0104b303 	tsteq	r4, r3, lsl #6
     f9c:	052f0b05 	streq	r0, [pc, #-2821]!	; 49f <_Min_Stack_Size+0x9f>
     fa0:	06022f01 	streq	r2, [r2], -r1, lsl #30
     fa4:	bf010100 	svclt	0x00010100
     fa8:	03000001 	movweq	r0, #1
     fac:	00016f00 	andeq	r6, r1, r0, lsl #30
     fb0:	fb010200 	blx	417ba <_Min_Stack_Size+0x413ba>
     fb4:	01000d0e 	tsteq	r0, lr, lsl #26
     fb8:	00010101 	andeq	r0, r1, r1, lsl #2
     fbc:	00010000 	andeq	r0, r1, r0
     fc0:	2e2e0100 	sufcse	f0, f6, f0
     fc4:	2f2e2e2f 	svccs	0x002e2e2f
     fc8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     fcc:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
     fd0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     fd4:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
     fd8:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
     fdc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     fe0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     fe4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     fe8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     fec:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     ff0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; ff8 <_Min_Stack_Size+0xbf8>
     ff4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     ff8:	72732f72 	rsbsvc	r2, r3, #456	; 0x1c8
     ffc:	752f0063 	strvc	r0, [pc, #-99]!	; fa1 <_Min_Stack_Size+0xba1>
    1000:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; e3c <_Min_Stack_Size+0xa3c>
    1004:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    1008:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    100c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1010:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1014:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1018:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
    101c:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
    1020:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1024:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    1028:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    102c:	2f2e2e2f 	svccs	0x002e2e2f
    1030:	642f2e2e 	strtvs	r2, [pc], #-3630	; 1038 <_Min_Stack_Size+0xc38>
    1034:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1038:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    103c:	5349534d 	movtpl	r5, #37709	; 0x934d
    1040:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1044:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1048:	2f2e2e00 	svccs	0x002e2e00
    104c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1050:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1054:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1058:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    105c:	534d432f 	movtpl	r4, #54063	; 0xd32f
    1060:	442f5349 	strtmi	r5, [pc], #-841	; 1068 <_Min_Stack_Size+0xc68>
    1064:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    1068:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    106c:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1070:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1074:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    1078:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    107c:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    1080:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1084:	2f2e2e2f 	svccs	0x002e2e2f
    1088:	642f2e2e 	strtvs	r2, [pc], #-3630	; 1090 <_Min_Stack_Size+0xc90>
    108c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1090:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    1094:	2f706968 	svccs	0x00706968
    1098:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    109c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    10a0:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    10a4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    10a8:	5f787834 	svcpl	0x00787834
    10ac:	5f4c4148 	svcpl	0x004c4148
    10b0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    10b4:	692f7265 	stmdbvs	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    10b8:	0000636e 	andeq	r6, r0, lr, ror #6
    10bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    10c0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    10c4:	61685f78 	smcvs	34296	; 0x85f8
    10c8:	736d5f6c 	cmnvc	sp, #108, 30	; 0x1b0
    10cc:	65745f70 	ldrbvs	r5, [r4, #-3952]!	; 0xfffff090
    10d0:	616c706d 	cmnvs	ip, sp, rrx
    10d4:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    10d8:	00000100 	andeq	r0, r0, r0, lsl #2
    10dc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    10e0:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    10e4:	00000200 	andeq	r0, r0, r0, lsl #4
    10e8:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    10ec:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
    10f0:	0300682e 	movweq	r6, #2094	; 0x82e
    10f4:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    10f8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    10fc:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    1100:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1104:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    1108:	00000400 	andeq	r0, r0, r0, lsl #8
    110c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1110:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1114:	61685f78 	smcvs	34296	; 0x85f8
    1118:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    111c:	00000005 	andeq	r0, r0, r5
    1120:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1124:	0012c002 	andseq	ip, r2, r2
    1128:	01330308 	teqeq	r3, r8, lsl #6
    112c:	00040230 	andeq	r0, r4, r0, lsr r2
    1130:	01050101 	tsteq	r5, r1, lsl #2
    1134:	00020500 	andeq	r0, r2, r0, lsl #10
    1138:	03000000 	movweq	r0, #0
    113c:	0230013e 	eorseq	r0, r0, #-2147483633	; 0x8000000f
    1140:	01010004 	tsteq	r1, r4
    1144:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1148:	00000002 	andeq	r0, r0, r2
    114c:	00c90300 	sbceq	r0, r9, r0, lsl #6
    1150:	04023001 	streq	r3, [r2], #-1
    1154:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1158:	02050001 	andeq	r0, r5, #1
    115c:	00000000 	andeq	r0, r0, r0
    1160:	0100d403 	tsteq	r0, r3, lsl #8
    1164:	00040230 	andeq	r0, r4, r0, lsr r2
    1168:	07410101 	strbeq	r0, [r1, -r1, lsl #2]
    116c:	00030000 	andeq	r0, r3, r0
    1170:	000001b2 			; <UNDEFINED> instruction: 0x000001b2
    1174:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1178:	0101000d 	tsteq	r1, sp
    117c:	00000101 	andeq	r0, r0, r1, lsl #2
    1180:	00000100 	andeq	r0, r0, r0, lsl #2
    1184:	2f2e2e01 	svccs	0x002e2e01
    1188:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    118c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1190:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1194:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1198:	534d432f 	movtpl	r4, #54063	; 0xd32f
    119c:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    11a0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    11a4:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    11a8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    11ac:	2f2e2e2f 	svccs	0x002e2e2f
    11b0:	642f2e2e 	strtvs	r2, [pc], #-3630	; 11b8 <_Min_Stack_Size+0xdb8>
    11b4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    11b8:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    11bc:	2f706968 	svccs	0x00706968
    11c0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    11c4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    11c8:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    11cc:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    11d0:	5f787834 	svcpl	0x00787834
    11d4:	5f4c4148 	svcpl	0x004c4148
    11d8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    11dc:	732f7265 			; <UNDEFINED> instruction: 0x732f7265
    11e0:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    11e4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    11e8:	2f2e2e2f 	svccs	0x002e2e2f
    11ec:	642f2e2e 	strtvs	r2, [pc], #-3630	; 11f4 <_Min_Stack_Size+0xdf4>
    11f0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    11f4:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    11f8:	5349534d 	movtpl	r5, #37709	; 0x934d
    11fc:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    1200:	2f656369 	svccs	0x00656369
    1204:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    1208:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    120c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1210:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1214:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1218:	73752f00 	cmnvc	r5, #0, 30
    121c:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1220:	63672f62 	cmnvs	r7, #392	; 0x188
    1224:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    1228:	6f6e2d6d 	svcvs	0x006e2d6d
    122c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1230:	2f696261 	svccs	0x00696261
    1234:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    1238:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    123c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1240:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    1244:	2f2e2e2f 	svccs	0x002e2e2f
    1248:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    124c:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    1250:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1254:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1258:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
    125c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1260:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1264:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1268:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    126c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1270:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1278 <_Min_Stack_Size+0xe78>
    1274:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1278:	6e692f72 	mcrvs	15, 3, r2, cr9, cr2, {3}
    127c:	63000063 	movwvs	r0, #99	; 0x63
    1280:	5f65726f 	svcpl	0x0065726f
    1284:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    1288:	00010068 	andeq	r0, r1, r8, rrx
    128c:	736d6300 	cmnvc	sp, #0, 6
    1290:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    1294:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    1298:	00000100 	andeq	r0, r0, r0, lsl #2
    129c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    12a0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    12a4:	61685f78 	smcvs	34296	; 0x85f8
    12a8:	6f635f6c 	svcvs	0x00635f6c
    12ac:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    12b0:	0200632e 	andeq	r6, r0, #-1207959552	; 0xb8000000
    12b4:	74730000 	ldrbtvc	r0, [r3], #-0
    12b8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    12bc:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    12c0:	00682e78 	rsbeq	r2, r8, r8, ror lr
    12c4:	73000003 	movwvc	r0, #3
    12c8:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    12cc:	00682e74 	rsbeq	r2, r8, r4, ror lr
    12d0:	73000004 	movwvc	r0, #4
    12d4:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    12d8:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    12dc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    12e0:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    12e4:	00030068 	andeq	r0, r3, r8, rrx
    12e8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    12ec:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    12f0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    12f4:	00000300 	andeq	r0, r0, r0, lsl #6
    12f8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    12fc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1300:	61685f78 	smcvs	34296	; 0x85f8
    1304:	6f635f6c 	svcvs	0x00635f6c
    1308:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    130c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1310:	74730000 	ldrbtvc	r0, [r3], #-0
    1314:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1318:	5f787834 	svcpl	0x00787834
    131c:	2e6c6168 	powcsez	f6, f4, #0.0
    1320:	00050068 	andeq	r0, r5, r8, rrx
    1324:	01050000 	mrseq	r0, (UNDEF: 5)
    1328:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    132c:	03080012 	movweq	r0, #32786	; 0x8012
    1330:	05010cf9 	streq	r0, [r1, #-3321]	; 0xfffff307
    1334:	14054c0c 	strne	r4, [r5], #-3084	; 0xfffff3f4
    1338:	200e054c 	andcs	r0, lr, ip, asr #10
    133c:	052f0d05 	streq	r0, [pc, #-3333]!	; 63f <_Min_Stack_Size+0x23f>
    1340:	3e055b23 	vmlacc.f64	d5, d5, d19
    1344:	2d0e052d 	cfstr32cs	mvfx0, [lr, #-180]	; 0xffffff4c
    1348:	055b0605 	ldrbeq	r0, [fp, #-1541]	; 0xfffff9fb
    134c:	0105200e 	tsteq	r5, lr
    1350:	0008022f 	andeq	r0, r8, pc, lsr #4
    1354:	01050101 	tsteq	r5, r1, lsl #2
    1358:	14020500 	strne	r0, [r2], #-1280	; 0xfffffb00
    135c:	03080013 	movweq	r0, #32787	; 0x8013
    1360:	05010d8c 	streq	r0, [r1, #-3468]	; 0xfffff274
    1364:	0b052f1a 	bleq	14cfd4 <_Min_Stack_Size+0x14cbd4>
    1368:	3d01052e 	cfstr32cc	mvfx0, [r1, #-184]	; 0xffffff48
    136c:	01000702 	tsteq	r0, r2, lsl #14
    1370:	00010501 	andeq	r0, r1, r1, lsl #10
    1374:	13300205 	teqne	r0, #1342177280	; 0x50000000
    1378:	98030800 	stmdals	r3, {fp}
    137c:	0605010d 	streq	r0, [r5], -sp, lsl #2
    1380:	4c510559 	cfldr64mi	mvdx0, [r1], {89}	; 0x59
    1384:	053c0905 	ldreq	r0, [ip, #-2309]!	; 0xfffff6fb
    1388:	22052012 	andcs	r2, r5, #18
    138c:	202d052e 	eorcs	r0, sp, lr, lsr #10
    1390:	053c2b05 	ldreq	r2, [ip, #-2821]!	; 0xfffff4fb
    1394:	07023001 	streq	r3, [r2, -r1]
    1398:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    139c:	02050001 	andeq	r0, r5, #1
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	010dbc03 	tsteq	sp, r3, lsl #24
    13a8:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
    13ac:	09054c51 	stmdbeq	r5, {r0, r4, r6, sl, fp, lr}
    13b0:	2012053c 	andscs	r0, r2, ip, lsr r5
    13b4:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    13b8:	2b05202d 	blcs	149474 <_Min_Stack_Size+0x149074>
    13bc:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    13c0:	79af0303 	stmibvc	pc!, {r0, r1, r8, r9}	; <UNPREDICTABLE>
    13c4:	2e75033c 	mrccs	3, 3, r0, cr5, cr12, {1}
    13c8:	01050104 	tsteq	r5, r4, lsl #2
    13cc:	2e06e003 	cdpcs	0, 0, cr14, cr6, cr3, {0}
    13d0:	01000802 	tsteq	r0, r2, lsl #16
    13d4:	00010501 	andeq	r0, r1, r1, lsl #10
    13d8:	00000205 	andeq	r0, r0, r5, lsl #4
    13dc:	cf030000 	svcgt	0x00030000
    13e0:	0605010d 	streq	r0, [r5], -sp, lsl #2
    13e4:	4c1d0559 	cfldr32mi	mvfx0, [sp], {89}	; 0x59
    13e8:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    13ec:	23052e36 	movwcs	r2, #24118	; 0x5e36
    13f0:	3c5b0520 	cfldr64cc	mvdx0, [fp], {32}
    13f4:	053c6705 	ldreq	r6, [ip, #-1797]!	; 0xfffff8fb
    13f8:	0b052e0c 	bleq	14cc30 <_Min_Stack_Size+0x14c830>
    13fc:	22010540 	andcs	r0, r1, #64, 10	; 0x10000000
    1400:	01000702 	tsteq	r0, r2, lsl #14
    1404:	00010501 	andeq	r0, r1, r1, lsl #10
    1408:	00000205 	andeq	r0, r0, r5, lsl #4
    140c:	e2030000 	and	r0, r3, #0
    1410:	0605010d 	streq	r0, [r5], -sp, lsl #2
    1414:	4c510559 	cfldr64mi	mvdx0, [r1], {89}	; 0x59
    1418:	053c0905 	ldreq	r0, [ip, #-2309]!	; 0xfffff6fb
    141c:	22052012 	andcs	r2, r5, #18
    1420:	202d052e 	eorcs	r0, sp, lr, lsr #10
    1424:	053c2b05 	ldreq	r2, [ip, #-2821]!	; 0xfffff4fb
    1428:	08023e01 	stmdaeq	r2, {r0, r9, sl, fp, ip, sp}
    142c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1430:	02050001 	andeq	r0, r5, #1
    1434:	00000000 	andeq	r0, r0, r0
    1438:	010df103 	tsteq	sp, r3, lsl #2	; <UNPREDICTABLE>
    143c:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
    1440:	09054c51 	stmdbeq	r5, {r0, r4, r6, sl, fp, lr}
    1444:	2012053c 	andscs	r0, r2, ip, lsr r5
    1448:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    144c:	2b05202d 	blcs	149508 <_Min_Stack_Size+0x149108>
    1450:	3e01053c 	mcrcc	5, 0, r0, cr1, cr12, {1}
    1454:	01000802 	tsteq	r0, r2, lsl #16
    1458:	00010501 	andeq	r0, r1, r1, lsl #10
    145c:	00000205 	andeq	r0, r0, r5, lsl #4
    1460:	82030000 	andhi	r0, r3, #0
    1464:	0605010e 	streq	r0, [r5], -lr, lsl #2
    1468:	4c1d0559 	cfldr32mi	mvfx0, [sp], {89}	; 0x59
    146c:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    1470:	23052e36 	movwcs	r2, #24118	; 0x5e36
    1474:	3c5b0520 	cfldr64cc	mvdx0, [fp], {32}
    1478:	053c6705 	ldreq	r6, [ip, #-1797]!	; 0xfffff8fb
    147c:	0b052e0c 	bleq	14ccb4 <_Min_Stack_Size+0x14c8b4>
    1480:	22010540 	andcs	r0, r1, #64, 10	; 0x10000000
    1484:	01000702 	tsteq	r0, r2, lsl #14
    1488:	00010501 	andeq	r0, r1, r1, lsl #10
    148c:	13680205 	cmnne	r8, #1342177280	; 0x50000000
    1490:	98030800 	stmdals	r3, {fp}
    1494:	0605010e 	streq	r0, [r5], -lr, lsl #2
    1498:	4c300567 	cfldr32mi	mvfx0, [r0], #-412	; 0xfffffe64
    149c:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    14a0:	3005200f 	andcc	r2, r5, pc
    14a4:	2e2e052e 	cfsh64cs	mvdx0, mvdx14, #30
    14a8:	05420105 	strbeq	r0, [r2, #-261]	; 0xfffffefb
    14ac:	08051e30 	stmdaeq	r5, {r4, r5, r9, sl, fp, ip}
    14b0:	2020052e 	eorcs	r0, r0, lr, lsr #10
    14b4:	053c2805 	ldreq	r2, [ip, #-2053]!	; 0xfffff7fb
    14b8:	2e052030 	mcrcs	0, 0, r2, cr5, cr0, {1}
    14bc:	3001052e 	andcc	r0, r1, lr, lsr #10
    14c0:	01000a02 	tsteq	r0, r2, lsl #20
    14c4:	00010501 	andeq	r0, r1, r1, lsl #10
    14c8:	00000205 	andeq	r0, r0, r5, lsl #4
    14cc:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    14d0:	0605010e 	streq	r0, [r5], -lr, lsl #2
    14d4:	4c1b055a 	cfldr32mi	mvfx0, [fp], {90}	; 0x5a
    14d8:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    14dc:	40052e1f 	andmi	r2, r5, pc, lsl lr
    14e0:	401a054a 	andsmi	r0, sl, sl, asr #10
    14e4:	05203205 	streq	r3, [r0, #-517]!	; 0xfffffdfb
    14e8:	1f053c3a 	svcne	0x00053c3a
    14ec:	3c400520 	cfstr64cc	mvdx0, [r0], {32}
    14f0:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    14f4:	01010009 	tsteq	r1, r9
    14f8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    14fc:	0013bc02 	andseq	fp, r3, r2, lsl #24
    1500:	0ec70308 	cdpeq	3, 12, cr0, cr7, cr8, {0}
    1504:	670c0501 	strvs	r0, [ip, -r1, lsl #10]
    1508:	054e1f05 	strbeq	r1, [lr, #-3845]	; 0xfffff0fb
    150c:	2c053c17 	stccs	12, cr3, [r5], {23}
    1510:	2e6d054b 	cdpcs	5, 6, cr0, cr13, cr11, {2}
    1514:	01040200 	mrseq	r0, R12_usr
    1518:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    151c:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    1520:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    1524:	05200604 	streq	r0, [r0, #-1540]!	; 0xfffff9fc
    1528:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    152c:	52052304 	andpl	r2, r5, #4, 6	; 0x10000000
    1530:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1534:	001e0582 	andseq	r0, lr, r2, lsl #11
    1538:	2f040402 	svccs	0x00040402
    153c:	02006605 	andeq	r6, r0, #5242880	; 0x500000
    1540:	05810404 	streq	r0, [r1, #1028]	; 0x404
    1544:	04020001 	streq	r0, [r2], #-1
    1548:	05022304 	streq	r2, [r2, #-772]	; 0xfffffcfc
    154c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1550:	02050001 	andeq	r0, r5, #1
    1554:	00000000 	andeq	r0, r0, r0
    1558:	010ee203 	tsteq	lr, r3, lsl #4
    155c:	05750c05 	ldrbeq	r0, [r5, #-3077]!	; 0xfffff3fb
    1560:	17054e1f 	smladne	r5, pc, lr, r4	; <UNPREDICTABLE>
    1564:	4b2c053c 	blmi	b02a5c <_Min_Stack_Size+0xb0265c>
    1568:	002e6d05 	eoreq	r6, lr, r5, lsl #26
    156c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1570:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1574:	17053c02 	strne	r3, [r5, -r2, lsl #24]
    1578:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    157c:	21052006 	tstcs	r5, r6
    1580:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1584:	00350522 	eorseq	r0, r5, r2, lsr #10
    1588:	3c040402 	cfstrscc	mvf0, [r4], {2}
    158c:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    1590:	05740404 	ldrbeq	r0, [r4, #-1028]!	; 0xfffffbfc
    1594:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    1598:	15052f04 	strne	r2, [r5, #-3844]	; 0xfffff0fc
    159c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    15a0:	00010582 	andeq	r0, r1, r2, lsl #11
    15a4:	2f040402 	svccs	0x00040402
    15a8:	01000502 	tsteq	r0, r2, lsl #10
    15ac:	00010501 	andeq	r0, r1, r1, lsl #10
    15b0:	00000205 	andeq	r0, r0, r5, lsl #4
    15b4:	93030000 	movwls	r0, #12288	; 0x3000
    15b8:	0204010f 	andeq	r0, r4, #-1073741821	; 0xc0000003
    15bc:	db030305 	blle	c21d8 <_Min_Stack_Size+0xc1dd8>
    15c0:	01042e77 	tsteq	r4, r7, ror lr
    15c4:	a9032005 	stmdbge	r3, {r0, r2, sp}
    15c8:	28052e08 	stmdacs	r5, {r3, r9, sl, fp, sp}
    15cc:	2d06052e 	cfstr32cs	mvfx0, [r6, #-184]	; 0xffffff48
    15d0:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    15d4:	02042e0f 	andeq	r2, r4, #15, 28	; 0xf0
    15d8:	d8030305 	stmdale	r3, {r0, r2, r8, r9}
    15dc:	01042077 	tsteq	r4, r7, ror r0
    15e0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    15e4:	af030104 	svcge	0x00030104
    15e8:	06022e08 	streq	r2, [r2], -r8, lsl #28
    15ec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    15f0:	02050001 	andeq	r0, r5, #1
    15f4:	08001420 	stmdaeq	r0, {r5, sl, ip}
    15f8:	010fe603 	tsteq	pc, r3, lsl #12
    15fc:	054b0e05 	strbeq	r0, [fp, #-3589]	; 0xfffff1fb
    1600:	0c052e06 	stceq	14, cr2, [r5], {6}
    1604:	310a053e 	tstcc	sl, lr, lsr r5
    1608:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    160c:	03052e12 	movweq	r2, #24082	; 0x5e12
    1610:	590a0521 	stmdbpl	sl, {r0, r5, r8, sl}
    1614:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    1618:	12052f0a 	andne	r2, r5, #10, 30	; 0x28
    161c:	310a0520 	tstcc	sl, r0, lsr #10
    1620:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    1624:	01010007 	tsteq	r1, r7
    1628:	01050304 	tsteq	r5, r4, lsl #6
    162c:	64020500 	strvs	r0, [r2], #-1280	; 0xfffffb00
    1630:	03080014 	movweq	r0, #32788	; 0x8014
    1634:	0501018f 	streq	r0, [r1, #-399]	; 0xfffffe71
    1638:	01054f03 	tsteq	r5, r3, lsl #30
    163c:	0004023d 	andeq	r0, r4, sp, lsr r2
    1640:	03040101 	movweq	r0, #16641	; 0x4101
    1644:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1648:	00147a02 	andseq	r7, r4, r2, lsl #20
    164c:	01a50308 			; <UNDEFINED> instruction: 0x01a50308
    1650:	750c0501 	strvc	r0, [ip, #-1281]	; 0xfffffaff
    1654:	05341305 	ldreq	r1, [r4, #-773]!	; 0xfffffcfb
    1658:	01053e03 	tsteq	r5, r3, lsl #28
    165c:	000402bb 			; <UNDEFINED> instruction: 0x000402bb
    1660:	03040101 	movweq	r0, #16641	; 0x4101
    1664:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1668:	0014b202 	andseq	fp, r4, r2, lsl #4
    166c:	01bb0308 			; <UNDEFINED> instruction: 0x01bb0308
    1670:	5d030501 	cfstr32pl	mvfx0, [r3, #-4]
    1674:	02590105 	subseq	r0, r9, #1073741825	; 0x40000001
    1678:	01010004 	tsteq	r1, r4
    167c:	01050304 	tsteq	r5, r4, lsl #6
    1680:	00020500 	andeq	r0, r2, r0, lsl #10
    1684:	03000000 	movweq	r0, #0
    1688:	050101cb 	streq	r0, [r1, #-459]	; 0xfffffe35
    168c:	01055d03 	tsteq	r5, r3, lsl #26
    1690:	00040259 	andeq	r0, r4, r9, asr r2
    1694:	03040101 	movweq	r0, #16641	; 0x4101
    1698:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    169c:	00000002 	andeq	r0, r0, r2
    16a0:	01d80300 	bicseq	r0, r8, r0, lsl #6
    16a4:	30030501 	andcc	r0, r3, r1, lsl #10
    16a8:	01000202 	tsteq	r0, r2, lsl #4
    16ac:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    16b0:	02050001 	andeq	r0, r5, #1
    16b4:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
    16b8:	0101e503 	tsteq	r1, r3, lsl #10
    16bc:	054b0b05 	strbeq	r0, [fp, #-2821]	; 0xfffff4fb
    16c0:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    16c4:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    16c8:	00010503 	andeq	r0, r1, r3, lsl #10
    16cc:	00000205 	andeq	r0, r0, r5, lsl #4
    16d0:	82030000 	andhi	r0, r3, #0
    16d4:	02040102 	andeq	r0, r4, #-2147483648	; 0x80000000
    16d8:	f7030305 			; <UNDEFINED> instruction: 0xf7030305
    16dc:	03042e04 	movweq	r2, #19972	; 0x4e04
    16e0:	8e030e05 	cdphi	14, 0, cr0, cr3, cr5, {0}
    16e4:	06052e7b 			; <UNDEFINED> instruction: 0x06052e7b
    16e8:	200d0569 	andcs	r0, sp, r9, ror #10
    16ec:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    16f0:	01010009 	tsteq	r1, r9
    16f4:	01050304 	tsteq	r5, r4, lsl #6
    16f8:	00020500 	andeq	r0, r2, r0, lsl #10
    16fc:	03000000 	movweq	r0, #0
    1700:	05010299 	streq	r0, [r1, #-665]	; 0xfffffd67
    1704:	1b054c06 	blne	154724 <_Min_Stack_Size+0x154324>
    1708:	3c0d0520 	cfstr32cc	mvfx0, [sp], {32}
    170c:	04230e05 	strteq	r0, [r3], #-3589	; 0xfffff1fb
    1710:	03030502 	movweq	r0, #13570	; 0x3502
    1714:	036604d0 	cmneq	r6, #208, 8	; 0xd0000000
    1718:	03042e75 	movweq	r2, #20085	; 0x4e75
    171c:	c0030105 	andgt	r0, r3, r5, lsl #2
    1720:	09022e7b 	stmdbeq	r2, {r0, r1, r3, r4, r5, r6, r9, sl, fp, sp}
    1724:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    1728:	00010503 	andeq	r0, r1, r3, lsl #10
    172c:	00000205 	andeq	r0, r0, r5, lsl #4
    1730:	ac030000 	stcge	0, cr0, [r3], {-0}
    1734:	16050102 	strne	r0, [r5], -r2, lsl #2
    1738:	2e060550 	cfrshl32cs	mvfx6, mvfx0, r0
    173c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1740:	06052210 			; <UNDEFINED> instruction: 0x06052210
    1744:	0308052e 	movweq	r0, #34094	; 0x852e
    1748:	19052e0c 	stmdbne	r5, {r2, r3, r9, sl, fp, sp}
    174c:	2e0f0520 	cfsh32cs	mvfx0, mvfx15, #16
    1750:	05212405 	streq	r2, [r1, #-1029]!	; 0xfffffbfb
    1754:	24052e3e 	strcs	r2, [r5], #-3646	; 0xfffff1c2
    1758:	2e3e0521 	cdpcs	5, 3, cr0, cr14, cr1, {1}
    175c:	051f5405 	ldreq	r5, [pc, #-1029]	; 135f <_Min_Stack_Size+0xf5f>
    1760:	3e052224 	cdpcc	2, 0, cr2, cr5, cr4, {1}
    1764:	1f54052e 	svcne	0x0054052e
    1768:	05222405 	streq	r2, [r2, #-1029]!	; 0xfffffbfb
    176c:	54052e3e 	strpl	r2, [r5], #-3646	; 0xfffff1c2
    1770:	2224051f 	eorcs	r0, r4, #130023424	; 0x7c00000
    1774:	052e3e05 	streq	r3, [lr, #-3589]!	; 0xfffff1fb
    1778:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    177c:	2e3e0522 	cdpcs	5, 3, cr0, cr14, cr2, {1}
    1780:	051f5405 	ldreq	r5, [pc, #-1029]	; 1383 <_Min_Stack_Size+0xf83>
    1784:	3e052224 	cdpcc	2, 0, cr2, cr5, cr4, {1}
    1788:	1f54052e 	svcne	0x0054052e
    178c:	05222405 	streq	r2, [r2, #-1029]!	; 0xfffffbfb
    1790:	54052e3e 	strpl	r2, [r5], #-3646	; 0xfffff1c2
    1794:	2224051f 	eorcs	r0, r4, #130023424	; 0x7c00000
    1798:	052e3e05 	streq	r3, [lr, #-3589]!	; 0xfffff1fb
    179c:	20780308 	rsbscs	r0, r8, r8, lsl #6
    17a0:	05275405 	streq	r5, [r7, #-1029]!	; 0xfffffbfb
    17a4:	2079030f 	rsbscs	r0, r9, pc, lsl #6
    17a8:	0f030105 	svceq	0x00030105
    17ac:	1d080520 	cfstr32ne	mvfx0, [r8, #-128]	; 0xffffff80
    17b0:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    17b4:	0f052f08 	svceq	0x00052f08
    17b8:	30010520 	andcc	r0, r1, r0, lsr #10
    17bc:	01000802 	tsteq	r0, r2, lsl #16
    17c0:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    17c4:	02050001 	andeq	r0, r5, #1
    17c8:	00000000 	andeq	r0, r0, r0
    17cc:	0102d803 	tsteq	r2, r3, lsl #16
    17d0:	05300a05 	ldreq	r0, [r0, #-2565]!	; 0xfffff5fb
    17d4:	02023d01 	andeq	r3, r2, #1, 26	; 0x40
    17d8:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    17dc:	00010503 	andeq	r0, r1, r3, lsl #10
    17e0:	00000205 	andeq	r0, r0, r5, lsl #4
    17e4:	f3030000 	vhadd.u8	d0, d3, d0
    17e8:	03050102 	movweq	r0, #20738	; 0x5102
    17ec:	9f010586 	svcls	0x00010586
    17f0:	01000402 	tsteq	r0, r2, lsl #8
    17f4:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    17f8:	02050001 	andeq	r0, r5, #1
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	01038203 	tsteq	r3, r3, lsl #4
    1804:	055d0305 	ldrbeq	r0, [sp, #-773]	; 0xfffffcfb
    1808:	04025901 	streq	r5, [r2], #-2305	; 0xfffff6ff
    180c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    1810:	00010503 	andeq	r0, r1, r3, lsl #10
    1814:	00000205 	andeq	r0, r0, r5, lsl #4
    1818:	94030000 	strls	r0, [r3], #-0
    181c:	0a050103 	beq	141c30 <_Min_Stack_Size+0x141830>
    1820:	6701055d 	smlsdvs	r1, sp, r5, r0
    1824:	01000402 	tsteq	r0, r2, lsl #8
    1828:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    182c:	02050001 	andeq	r0, r5, #1
    1830:	00000000 	andeq	r0, r0, r0
    1834:	0103a403 	tsteq	r3, r3, lsl #8
    1838:	055d0305 	ldrbeq	r0, [sp, #-773]	; 0xfffffcfb
    183c:	04025901 	streq	r5, [r2], #-2305	; 0xfffff6ff
    1840:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    1844:	00010503 	andeq	r0, r1, r3, lsl #10
    1848:	00000205 	andeq	r0, r0, r5, lsl #4
    184c:	b5030000 	strlt	r0, [r3, #-0]
    1850:	0a050103 	beq	141c64 <_Min_Stack_Size+0x141864>
    1854:	6701055d 	smlsdvs	r1, sp, r5, r0
    1858:	01000402 	tsteq	r0, r2, lsl #8
    185c:	05030401 	streq	r0, [r3, #-1025]	; 0xfffffbff
    1860:	02050001 	andeq	r0, r5, #1
    1864:	00000000 	andeq	r0, r0, r0
    1868:	0103c603 	tsteq	r3, r3, lsl #12
    186c:	054d0605 	strbeq	r0, [sp, #-1541]	; 0xfffff9fb
    1870:	01053e13 	tsteq	r5, r3, lsl lr
    1874:	1e13056c 	cfmsc32ne	mvfx0, mvfx3, mvfx12
    1878:	02680105 	rsbeq	r0, r8, #1073741825	; 0x40000001
    187c:	01010008 	tsteq	r1, r8
    1880:	01050304 	tsteq	r5, r4, lsl #6
    1884:	00020500 	andeq	r0, r2, r0, lsl #10
    1888:	03000000 	movweq	r0, #0
    188c:	050103d8 	streq	r0, [r1, #-984]	; 0xfffffc28
    1890:	01052f03 	tsteq	r5, r3, lsl #30
    1894:	0002022f 	andeq	r0, r2, pc, lsr #4
    1898:	03040101 	movweq	r0, #16641	; 0x4101
    189c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    18a0:	00000002 	andeq	r0, r0, r2
    18a4:	03e10300 	mvneq	r0, #0, 6
    18a8:	04023201 	streq	r3, [r2], #-513	; 0xfffffdff
    18ac:	5a010100 	bpl	41cb4 <_Min_Stack_Size+0x418b4>
    18b0:	03000008 	movweq	r0, #8
    18b4:	0001e600 	andeq	lr, r1, r0, lsl #12
    18b8:	fb010200 	blx	420c2 <_Min_Stack_Size+0x41cc2>
    18bc:	01000d0e 	tsteq	r0, lr, lsl #26
    18c0:	00010101 	andeq	r0, r1, r1, lsl #2
    18c4:	00010000 	andeq	r0, r1, r0
    18c8:	2e2e0100 	sufcse	f0, f6, f0
    18cc:	2f2e2e2f 	svccs	0x002e2e2f
    18d0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    18d4:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    18d8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    18dc:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    18e0:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
    18e4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    18e8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    18ec:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    18f0:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    18f4:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    18f8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1900 <_Min_Stack_Size+0x1500>
    18fc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1900:	72732f72 	rsbsvc	r2, r3, #456	; 0x1c8
    1904:	752f0063 	strvc	r0, [pc, #-99]!	; 18a9 <_Min_Stack_Size+0x14a9>
    1908:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 1744 <_Min_Stack_Size+0x1344>
    190c:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    1910:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    1914:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1918:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    191c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1920:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
    1924:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
    1928:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    192c:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    1930:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1934:	2f2e2e2f 	svccs	0x002e2e2f
    1938:	642f2e2e 	strtvs	r2, [pc], #-3630	; 1940 <_Min_Stack_Size+0x1540>
    193c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1940:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    1944:	5349534d 	movtpl	r5, #37709	; 0x934d
    1948:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    194c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1950:	2f2e2e00 	svccs	0x002e2e00
    1954:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1958:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    195c:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    1960:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1964:	534d432f 	movtpl	r4, #54063	; 0xd32f
    1968:	442f5349 	strtmi	r5, [pc], #-841	; 1970 <_Min_Stack_Size+0x1570>
    196c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    1970:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    1974:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1978:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    197c:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    1980:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1984:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    1988:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    198c:	2f2e2e2f 	svccs	0x002e2e2f
    1990:	642f2e2e 	strtvs	r2, [pc], #-3630	; 1998 <_Min_Stack_Size+0x1598>
    1994:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1998:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    199c:	2f706968 	svccs	0x00706968
    19a0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    19a4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    19a8:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    19ac:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    19b0:	5f787834 	svcpl	0x00787834
    19b4:	5f4c4148 	svcpl	0x004c4148
    19b8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    19bc:	692f7265 	stmdbvs	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    19c0:	0000636e 	andeq	r6, r0, lr, ror #6
    19c4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    19c8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    19cc:	61685f78 	smcvs	34296	; 0x85f8
    19d0:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    19d4:	00632e63 	rsbeq	r2, r3, r3, ror #28
    19d8:	73000001 	movwvc	r0, #1
    19dc:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    19e0:	00682e74 	rsbeq	r2, r8, r4, ror lr
    19e4:	63000002 	movwvs	r0, #2
    19e8:	5f65726f 	svcpl	0x0065726f
    19ec:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    19f0:	00030068 	andeq	r0, r3, r8, rrx
    19f4:	73797300 	cmnvc	r9, #0, 6
    19f8:	5f6d6574 	svcpl	0x006d6574
    19fc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1a00:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1a04:	00682e78 	rsbeq	r2, r8, r8, ror lr
    1a08:	73000004 	movwvc	r0, #4
    1a0c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1a10:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    1a14:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    1a18:	00000400 	andeq	r0, r0, r0, lsl #8
    1a1c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1a20:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1a24:	00682e78 	rsbeq	r2, r8, r8, ror lr
    1a28:	73000004 	movwvc	r0, #4
    1a2c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1a30:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1a34:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1a38:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1a3c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1a40:	74730000 	ldrbtvc	r0, [r3], #-0
    1a44:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1a48:	5f787834 	svcpl	0x00787834
    1a4c:	5f6c6168 	svcpl	0x006c6168
    1a50:	5f636372 	svcpl	0x00636372
    1a54:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    1a58:	00000500 	andeq	r0, r0, r0, lsl #10
    1a5c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1a60:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1a64:	61685f78 	smcvs	34296	; 0x85f8
    1a68:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    1a6c:	00682e63 	rsbeq	r2, r8, r3, ror #28
    1a70:	73000005 	movwvc	r0, #5
    1a74:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1a78:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1a7c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1a80:	6970675f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, sp, lr}^
    1a84:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    1a88:	73000005 	movwvc	r0, #5
    1a8c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1a90:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1a94:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1a98:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1a9c:	05000000 	streq	r0, [r0, #-0]
    1aa0:	02050001 	andeq	r0, r5, #1
    1aa4:	00000000 	andeq	r0, r0, r0
    1aa8:	0101ca03 	tsteq	r1, r3, lsl #20
    1aac:	052f0a05 	streq	r0, [pc, #-2565]!	; 10af <_Min_Stack_Size+0xcaf>
    1ab0:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
    1ab4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ab8:	02050001 	andeq	r0, r5, #1
    1abc:	00000000 	andeq	r0, r0, r0
    1ac0:	0101dd03 	tsteq	r1, r3, lsl #26
    1ac4:	054e0505 	strbeq	r0, [lr, #-1285]	; 0xfffffafb
    1ac8:	19053e0c 	stmdbne	r5, {r2, r3, r9, sl, fp, ip, sp}
    1acc:	2e2b0534 	mcrcs	5, 1, r0, cr11, cr4, {1}
    1ad0:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1ad4:	07053309 	streq	r3, [r5, -r9, lsl #6]
    1ad8:	0009054a 	andeq	r0, r9, sl, asr #10
    1adc:	2f010402 	svccs	0x00010402
    1ae0:	02003c05 	andeq	r3, r0, #1280	; 0x500
    1ae4:	05490104 	strbeq	r0, [r9, #-260]	; 0xfffffefc
    1ae8:	4e052f44 	cdpmi	15, 0, cr2, cr5, cr4, {2}
    1aec:	2e3c052e 	cdpcs	5, 3, cr0, cr12, cr14, {1}
    1af0:	053e0b05 	ldreq	r0, [lr, #-2821]!	; 0xfffff4fb
    1af4:	4e054a09 	vmlami.f32	s8, s10, s18
    1af8:	01040200 	mrseq	r0, R12_usr
    1afc:	0039052e 	eorseq	r0, r9, lr, lsr #10
    1b00:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1b04:	05301005 	ldreq	r1, [r0, #-5]!
    1b08:	02003407 	andeq	r3, r0, #117440512	; 0x7000000
    1b0c:	58060104 	stmdapl	r6, {r2, r8}
    1b10:	02040200 	andeq	r0, r4, #0, 4
    1b14:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    1b18:	02005803 	andeq	r5, r0, #196608	; 0x30000
    1b1c:	05c80404 	strbeq	r0, [r8, #1028]	; 0x404
    1b20:	05bd061c 	ldreq	r0, [sp, #1564]!	; 0x61c
    1b24:	15052e09 	strne	r2, [r5, #-3593]	; 0xfffff1f7
    1b28:	3f0e0531 	svccc	0x000e0531
    1b2c:	05220f05 	streq	r0, [r2, #-3845]!	; 0xfffff0fb
    1b30:	0d053c1d 	stceq	12, cr3, [r5, #-116]	; 0xffffff8c
    1b34:	3014052e 	andscc	r0, r4, lr, lsr #10
    1b38:	052a0f05 	streq	r0, [sl, #-3845]!	; 0xfffff0fb
    1b3c:	15054a0e 	strne	r4, [r5, #-2574]	; 0xfffff5f2
    1b40:	053c0b03 	ldreq	r0, [ip, #-2819]!	; 0xfffff4fd
    1b44:	0f053f0e 	svceq	0x00053f0e
    1b48:	3c1d0522 	cfldr32cc	mvfx0, [sp], {34}	; 0x22
    1b4c:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    1b50:	0f053014 	svceq	0x00053014
    1b54:	4a0e052a 	bmi	383004 <_Min_Stack_Size+0x382c04>
    1b58:	61030905 	tstvs	r3, r5, lsl #18
    1b5c:	0319053c 	tsteq	r9, #60, 10	; 0xf000000
    1b60:	2b05202a 	blcs	149c10 <_Min_Stack_Size+0x149810>
    1b64:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
    1b68:	05350905 	ldreq	r0, [r5, #-2309]!	; 0xfffff6fb
    1b6c:	09054a07 	stmdbeq	r5, {r0, r1, r2, r9, fp, lr}
    1b70:	01040200 	mrseq	r0, R12_usr
    1b74:	003c052f 	eorseq	r0, ip, pc, lsr #10
    1b78:	49010402 	stmdbmi	r1, {r1, sl}
    1b7c:	052f4405 	streq	r4, [pc, #-1029]!	; 177f <_Min_Stack_Size+0x137f>
    1b80:	3c052e4e 	stccc	14, cr2, [r5], {78}	; 0x4e
    1b84:	310b052e 	tstcc	fp, lr, lsr #10
    1b88:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1b8c:	0402004e 	streq	r0, [r2], #-78	; 0xffffffb2
    1b90:	39052e01 	stmdbcc	r5, {r0, r9, sl, fp, sp}
    1b94:	01040200 	mrseq	r0, R12_usr
    1b98:	3010052e 	andscc	r0, r0, lr, lsr #10
    1b9c:	03340905 	teqeq	r4, #81920	; 0x14000
    1ba0:	1c059e78 	stcne	14, cr9, [r5], {120}	; 0x78
    1ba4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    1ba8:	05312e09 	ldreq	r2, [r1, #-3593]!	; 0xfffff1f7
    1bac:	0e053f15 	mcreq	15, 0, r3, cr5, cr5, {0}
    1bb0:	220f053f 	andcs	r0, pc, #264241152	; 0xfc00000
    1bb4:	053c1d05 	ldreq	r1, [ip, #-3333]!	; 0xfffff2fb
    1bb8:	14052e0d 	strne	r2, [r5], #-3597	; 0xfffff1f3
    1bbc:	2a0f0530 	bcs	3c3084 <_Min_Stack_Size+0x3c2c84>
    1bc0:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
    1bc4:	2e090309 	cdpcs	3, 0, cr0, cr9, cr9, {0}
    1bc8:	3f1505b1 	svccc	0x001505b1
    1bcc:	053f0e05 	ldreq	r0, [pc, #-3589]!	; dcf <_Min_Stack_Size+0x9cf>
    1bd0:	1d05220f 	sfmne	f2, 4, [r5, #-60]	; 0xffffffc4
    1bd4:	2e0d053c 	mcrcs	5, 0, r0, cr13, cr12, {1}
    1bd8:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    1bdc:	0e052a0f 	vmlaeq.f32	s4, s10, s30
    1be0:	0319054a 	tsteq	r9, #310378496	; 0x12800000
    1be4:	2b052e0b 	blcs	14d418 <_Min_Stack_Size+0x14d018>
    1be8:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
    1bec:	05341a05 	ldreq	r1, [r4, #-2565]!	; 0xfffff5fb
    1bf0:	05312e07 	ldreq	r2, [r1, #-3591]!	; 0xfffff1f9
    1bf4:	0c053f13 	stceq	15, cr3, [r5], {19}
    1bf8:	220d053f 	andcs	r0, sp, #264241152	; 0xfc00000
    1bfc:	053c1b05 	ldreq	r1, [ip, #-2821]!	; 0xfffff4fb
    1c00:	12052e0b 	andne	r2, r5, #11, 28	; 0xb0
    1c04:	2a0d0530 	bcs	3430cc <_Min_Stack_Size+0x342ccc>
    1c08:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    1c0c:	3c0b0307 	stccc	3, cr0, [fp], {7}
    1c10:	053f1305 	ldreq	r1, [pc, #-773]!	; 1913 <_Min_Stack_Size+0x1513>
    1c14:	0d053f0c 	stceq	15, cr3, [r5, #-48]	; 0xffffffd0
    1c18:	3c1b0522 	cfldr32cc	mvfx0, [fp], {34}	; 0x22
    1c1c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    1c20:	0d053012 	stceq	0, cr3, [r5, #-72]	; 0xffffffb8
    1c24:	4a0c052a 	bmi	3030d4 <_Min_Stack_Size+0x302cd4>
    1c28:	0a031905 	beq	c8044 <_Min_Stack_Size+0xc7c44>
    1c2c:	2e2b052e 	cfsh64cs	mvdx0, mvdx11, #30
    1c30:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1c34:	08053e16 	stmdaeq	r5, {r1, r2, r4, r9, sl, fp, ip, sp}
    1c38:	4a070535 	bmi	1c3114 <_Min_Stack_Size+0x1c2d14>
    1c3c:	d7150530 			; <UNDEFINED> instruction: 0xd7150530
    1c40:	05310805 	ldreq	r0, [r1, #-2053]!	; 0xfffff7fb
    1c44:	05314a07 	ldreq	r4, [r1, #-2567]!	; 0xfffff5f9
    1c48:	0c056913 			; <UNDEFINED> instruction: 0x0c056913
    1c4c:	a00d053e 	andge	r0, sp, lr, lsr r5
    1c50:	053c1b05 	ldreq	r1, [ip, #-2821]!	; 0xfffff4fb
    1c54:	12052e0b 	andne	r2, r5, #11, 28	; 0xb0
    1c58:	2a0d0530 	bcs	343120 <_Min_Stack_Size+0x342d20>
    1c5c:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    1c60:	2e0a0305 	cdpcs	3, 0, cr0, cr10, cr5, {0}
    1c64:	01040200 	mrseq	r0, R12_usr
    1c68:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1c6c:	00740204 	rsbseq	r0, r4, r4, lsl #4
    1c70:	4a030402 	bmi	c2c80 <_Min_Stack_Size+0xc2880>
    1c74:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1c78:	061a05c8 	ldreq	r0, [sl], -r8, asr #11
    1c7c:	2e0705bc 	mcrcs	5, 0, r0, cr7, cr12, {5}
    1c80:	05311305 	ldreq	r1, [r1, #-773]!	; 0xfffffcfb
    1c84:	0d053f0c 	stceq	15, cr3, [r5, #-48]	; 0xffffffd0
    1c88:	3c1b0522 	cfldr32cc	mvfx0, [fp], {34}	; 0x22
    1c8c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    1c90:	0d054c12 	stceq	12, cr4, [r5, #-72]	; 0xffffffb8
    1c94:	4a0c052a 	bmi	303144 <_Min_Stack_Size+0x302d44>
    1c98:	0b031305 	bleq	c68b4 <_Min_Stack_Size+0xc64b4>
    1c9c:	3f0c053c 	svccc	0x000c053c
    1ca0:	05220d05 	streq	r0, [r2, #-3333]!	; 0xfffff2fb
    1ca4:	0b053c1b 	bleq	150d18 <_Min_Stack_Size+0x150918>
    1ca8:	4c12052e 	cfldr32mi	mvfx0, [r2], {46}	; 0x2e
    1cac:	052a0d05 	streq	r0, [sl, #-3333]!	; 0xfffff2fb
    1cb0:	07054a0c 	streq	r4, [r5, -ip, lsl #20]
    1cb4:	3e2e0a03 	vmulcc.f32	s0, s28, s6
    1cb8:	056c1e05 	strbeq	r1, [ip, #-3589]!	; 0xfffff1fb
    1cbc:	08052e06 	stmdaeq	r5, {r1, r2, r9, sl, fp, sp}
    1cc0:	4a07053f 	bmi	1c31c4 <_Min_Stack_Size+0x1c2dc4>
    1cc4:	05302105 	ldreq	r2, [r0, #-261]!	; 0xfffffefb
    1cc8:	0a032e09 	beq	cd4f4 <_Min_Stack_Size+0xcd0f4>
    1ccc:	3f15052e 	svccc	0x0015052e
    1cd0:	053f0e05 	ldreq	r0, [pc, #-3589]!	; ed3 <_Min_Stack_Size+0xad3>
    1cd4:	1d05220f 	sfmne	f2, 4, [r5, #-60]	; 0xffffffc4
    1cd8:	2e0d053c 	mcrcs	5, 0, r0, cr13, cr12, {1}
    1cdc:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    1ce0:	0e052a0f 	vmlaeq.f32	s4, s10, s30
    1ce4:	0309054a 	movweq	r0, #38218	; 0x954a
    1ce8:	50082e09 	andpl	r2, r8, r9, lsl #28
    1cec:	053f1505 	ldreq	r1, [pc, #-1285]!	; 17ef <_Min_Stack_Size+0x13ef>
    1cf0:	0f053f0e 	svceq	0x00053f0e
    1cf4:	3c1d0522 	cfldr32cc	mvfx0, [sp], {34}	; 0x22
    1cf8:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    1cfc:	0f053014 	svceq	0x00053014
    1d00:	4a0e052a 	bmi	3831b0 <_Min_Stack_Size+0x382db0>
    1d04:	0b030905 	bleq	c4120 <_Min_Stack_Size+0xc3d20>
    1d08:	3f15053c 	svccc	0x0015053c
    1d0c:	053f0e05 	ldreq	r0, [pc, #-3589]!	; f0f <_Min_Stack_Size+0xb0f>
    1d10:	1d05220f 	sfmne	f2, 4, [r5, #-60]	; 0xffffffc4
    1d14:	2e0d053c 	mcrcs	5, 0, r0, cr13, cr12, {1}
    1d18:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    1d1c:	0e052a0f 	vmlaeq.f32	s4, s10, s30
    1d20:	0321054a 			; <UNDEFINED> instruction: 0x0321054a
    1d24:	09053c0c 	stmdbeq	r5, {r2, r3, sl, fp, ip, sp}
    1d28:	3010052e 	andscc	r0, r0, lr, lsr #10
    1d2c:	05331905 	ldreq	r1, [r3, #-2309]!	; 0xfffff6fb
    1d30:	25052014 	strcs	r2, [r5, #-20]	; 0xffffffec
    1d34:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    1d38:	0e052e0c 	cdpeq	14, 0, cr2, cr5, cr12, {0}
    1d3c:	01040200 	mrseq	r0, R12_usr
    1d40:	0050052f 	subseq	r0, r0, pc, lsr #10
    1d44:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1d48:	02004005 	andeq	r4, r0, #5
    1d4c:	052d0104 	streq	r0, [sp, #-260]!	; 0xfffffefc
    1d50:	5605300e 	strpl	r3, [r5], -lr
    1d54:	2d5c053c 	cfldr64cs	mvdx0, [ip, #-240]	; 0xffffff10
    1d58:	05300e05 	ldreq	r0, [r0, #-3589]!	; 0xfffff1fb
    1d5c:	56054a4f 	strpl	r4, [r5], -pc, asr #20
    1d60:	1f6f052e 	svcne	0x006f052e
    1d64:	05300e05 	ldreq	r0, [r0, #-3589]!	; 0xfffff1fb
    1d68:	57053c51 	smlsdpl	r5, r1, ip, r3
    1d6c:	205e052e 	subscs	r0, lr, lr, lsr #10
    1d70:	05206505 	streq	r6, [r0, #-1285]!	; 0xfffffafb
    1d74:	0e051f6f 	cdpeq	15, 0, cr1, cr5, cr15, {3}
    1d78:	3c4f0530 	cfstr64cc	mvdx0, [pc], {48}	; 0x30
    1d7c:	052e5505 	streq	r5, [lr, #-1285]!	; 0xfffffafb
    1d80:	12051f7e 	andne	r1, r5, #504	; 0x1f8
    1d84:	330a0532 	movwcc	r0, #42290	; 0xa532
    1d88:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    1d8c:	0101000a 	tsteq	r1, sl
    1d90:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1d94:	00000002 	andeq	r0, r0, r2
    1d98:	04d10300 	ldrbeq	r0, [r1], #768	; 0x300
    1d9c:	5c050501 	cfstr32pl	mvfx0, [r5], {1}
    1da0:	053e0c05 	ldreq	r0, [lr, #-3077]!	; 0xfffff3fb
    1da4:	2e0c0311 	mcrcs	3, 0, r0, cr12, cr1, {0}
    1da8:	3f4a0505 	svccc	0x004a0505
    1dac:	054e0805 	strbeq	r0, [lr, #-2053]	; 0xfffff7fb
    1db0:	0e054a07 	vmlaeq.f32	s8, s10, s14
    1db4:	3319053e 	tstcc	r9, #260046848	; 0xf800000
    1db8:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    1dbc:	1b052e05 	blne	14d5d8 <_Min_Stack_Size+0x14d1d8>
    1dc0:	2e280532 	mcrcs	5, 1, r0, cr8, cr2, {1}
    1dc4:	302e0705 	eorcc	r0, lr, r5, lsl #14
    1dc8:	05691b05 	strbeq	r1, [r9, #-2821]!	; 0xfffff4fb
    1dcc:	07052e28 	streq	r2, [r5, -r8, lsr #28]
    1dd0:	0505302e 	streq	r3, [r5, #-46]	; 0xffffffd2
    1dd4:	9419056a 	ldrls	r0, [r9], #-1386	; 0xfffffa96
    1dd8:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    1ddc:	19052e05 	stmdbne	r5, {r0, r2, r9, sl, fp, sp}
    1de0:	2e070533 	mcrcs	5, 0, r0, cr7, cr3, {1}
    1de4:	05310a05 	ldreq	r0, [r1, #-2565]!	; 0xfffff5fb
    1de8:	10054a09 	andne	r4, r5, r9, lsl #20
    1dec:	321f0530 	andscc	r0, pc, #48, 10	; 0xc000000
    1df0:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    1df4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1df8:	4c052f01 	stcmi	15, cr2, [r5], {1}
    1dfc:	01040200 	mrseq	r0, R12_usr
    1e00:	320a052d 	andcc	r0, sl, #188743680	; 0xb400000
    1e04:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1e08:	0a053010 	beq	14de50 <_Min_Stack_Size+0x14da50>
    1e0c:	4a090535 	bmi	2432e8 <_Min_Stack_Size+0x242ee8>
    1e10:	05301005 	ldreq	r1, [r0, #-5]!
    1e14:	11053205 	tstne	r5, r5, lsl #4
    1e18:	3e0b0593 	mcrcc	5, 0, r0, cr11, cr3, {4}
    1e1c:	05220c05 	streq	r0, [r2, #-3077]!	; 0xfffff3fb
    1e20:	0a053c1a 	beq	150e90 <_Min_Stack_Size+0x150a90>
    1e24:	4c10052e 	cfldr32mi	mvfx0, [r0], {46}	; 0x2e
    1e28:	052a0c05 	streq	r0, [sl, #-3077]!	; 0xfffff3fb
    1e2c:	4e054a3f 			; <UNDEFINED> instruction: 0x4e054a3f
    1e30:	200b052e 	andcs	r0, fp, lr, lsr #10
    1e34:	0a031105 	beq	c6250 <_Min_Stack_Size+0xc5e50>
    1e38:	4a05052e 	bmi	1432f8 <_Min_Stack_Size+0x142ef8>
    1e3c:	4e08053f 	mcrmi	5, 0, r0, cr8, cr15, {1}
    1e40:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
    1e44:	19053e0e 	stmdbne	r5, {r1, r2, r3, r9, sl, fp, ip, sp}
    1e48:	2e260533 	mcrcs	5, 1, r0, cr6, cr3, {1}
    1e4c:	312e0505 			; <UNDEFINED> instruction: 0x312e0505
    1e50:	05941905 	ldreq	r1, [r4, #2309]	; 0x905
    1e54:	05052e26 	streq	r2, [r5, #-3622]	; 0xfffff1da
    1e58:	1505312e 	strne	r3, [r5, #-302]	; 0xfffffed2
    1e5c:	3c4405a2 	cfstr64cc	mvdx0, [r4], {162}	; 0xa2
    1e60:	052e5b05 	streq	r5, [lr, #-2821]!	; 0xfffff4fb
    1e64:	2f053c3f 	svccs	0x00053c3f
    1e68:	2e13052e 	cfmul64cs	mvdx0, mvdx3, mvdx14
    1e6c:	05310305 	ldreq	r0, [r1, #-773]!	; 0xfffffcfb
    1e70:	01055a0a 	tsteq	r5, sl, lsl #20
    1e74:	000f0221 	andeq	r0, pc, r1, lsr #4
    1e78:	01050101 	tsteq	r5, r1, lsl #2
    1e7c:	00020500 	andeq	r0, r2, r0, lsl #10
    1e80:	03000000 	movweq	r0, #0
    1e84:	05010689 	streq	r0, [r1, #-1673]	; 0xfffff977
    1e88:	05416c05 	strbeq	r6, [r1, #-3077]	; 0xfffff3fb
    1e8c:	1a05d919 	bne	1782f8 <_Min_Stack_Size+0x177ef8>
    1e90:	2f1b053d 	svccs	0x001b053d
    1e94:	052f1a05 	streq	r1, [pc, #-2565]!	; 1497 <_Min_Stack_Size+0x1097>
    1e98:	05052f1f 	streq	r2, [r5, #-3871]	; 0xfffff0e1
    1e9c:	0105692f 	tsteq	r5, pc, lsr #18
    1ea0:	059e2003 	ldreq	r2, [lr, #3]
    1ea4:	206d0305 	rsbcs	r0, sp, r5, lsl #6
    1ea8:	05d91905 	ldrbeq	r1, [r9, #2309]	; 0x905
    1eac:	1b053d1a 	blne	15131c <_Min_Stack_Size+0x150f1c>
    1eb0:	2f1a052f 	svccs	0x001a052f
    1eb4:	052f1f05 	streq	r1, [pc, #-3845]!	; fb7 <_Min_Stack_Size+0xbb7>
    1eb8:	05692f05 	strbeq	r2, [r9, #-3845]!	; 0xfffff0fb
    1ebc:	0b02b401 	bleq	aeec8 <_Min_Stack_Size+0xaeac8>
    1ec0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ec4:	02050001 	andeq	r0, r5, #1
    1ec8:	00000000 	andeq	r0, r0, r0
    1ecc:	0106cb03 	tsteq	r6, r3, lsl #22
    1ed0:	052f0305 	streq	r0, [pc, #-773]!	; 1bd3 <_Min_Stack_Size+0x17d3>
    1ed4:	01052026 	tsteq	r5, r6, lsr #32
    1ed8:	0007022f 	andeq	r0, r7, pc, lsr #4
    1edc:	01050101 	tsteq	r5, r1, lsl #2
    1ee0:	00020500 	andeq	r0, r2, r0, lsl #10
    1ee4:	03000000 	movweq	r0, #0
    1ee8:	050106d4 	streq	r0, [r1, #-1748]	; 0xfffff92c
    1eec:	26052f03 	strcs	r2, [r5], -r3, lsl #30
    1ef0:	2f010520 	svccs	0x00010520
    1ef4:	01000702 	tsteq	r0, r2, lsl #14
    1ef8:	00010501 	andeq	r0, r1, r1, lsl #10
    1efc:	00000205 	andeq	r0, r0, r5, lsl #4
    1f00:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    1f04:	0c050106 	stfeqs	f0, [r5], {6}
    1f08:	2e17054b 	cfmac32cs	mvfx0, mvfx7, mvfx11
    1f0c:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    1f10:	0e052f0c 	cdpeq	15, 0, cr2, cr5, cr12, {0}
    1f14:	2e150531 	mrccs	5, 0, r0, cr5, cr1, {1}
    1f18:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
    1f1c:	08057814 	stmdaeq	r5, {r2, r4, fp, ip, sp, lr}
    1f20:	2414052f 	ldrcs	r0, [r4], #-1327	; 0xfffffad1
    1f24:	052f0705 	streq	r0, [pc, #-1797]!	; 1827 <_Min_Stack_Size+0x1427>
    1f28:	0c052611 	stceq	6, cr2, [r5], {17}
    1f2c:	3d0a052e 	cfstr32cc	mvfx0, [sl, #-184]	; 0xffffff48
    1f30:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    1f34:	66053148 	strvs	r3, [r5], -r8, asr #2
    1f38:	2038052e 	eorscs	r0, r8, lr, lsr #10
    1f3c:	059e3505 	ldreq	r3, [lr, #1285]	; 0x505
    1f40:	35020184 	strcc	r0, [r2, #-388]	; 0xfffffe7c
    1f44:	01820512 	orreq	r0, r2, r2, lsl r5
    1f48:	6610053c 			; <UNDEFINED> instruction: 0x6610053c
    1f4c:	05334805 	ldreq	r4, [r3, #-2053]!	; 0xfffff7fb
    1f50:	38052e66 	stmdacc	r5, {r1, r2, r5, r6, r9, sl, fp, sp}
    1f54:	9e350520 	cfabs64ls	mvdx0, mvdx5
    1f58:	02018405 	andeq	r8, r1, #83886080	; 0x5000000
    1f5c:	82051233 	andhi	r1, r5, #805306371	; 0x30000003
    1f60:	10053c01 	andne	r3, r5, r1, lsl #24
    1f64:	22150566 	andscs	r0, r5, #427819008	; 0x19800000
    1f68:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    1f6c:	0c053c52 	stceq	12, cr3, [r5], {82}	; 0x52
    1f70:	30140520 	andscc	r0, r4, r0, lsr #10
    1f74:	05590705 	ldrbeq	r0, [r9, #-1797]	; 0xfffff8fb
    1f78:	07052414 	smladeq	r5, r4, r4, r2
    1f7c:	230a052f 	movwcs	r0, #42287	; 0xa52f
    1f80:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    1f84:	0101000b 	tsteq	r1, fp
    1f88:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1f8c:	0014e802 	andseq	lr, r4, r2, lsl #16
    1f90:	07af0308 	streq	r0, [pc, r8, lsl #6]!
    1f94:	2f0a0501 	svccs	0x000a0501
    1f98:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1f9c:	01010006 	tsteq	r1, r6
    1fa0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1fa4:	0014fc02 	andseq	pc, r4, r2, lsl #24
    1fa8:	07ba0308 	ldreq	r0, [sl, r8, lsl #6]!
    1fac:	300b0501 	andcc	r0, fp, r1, lsl #10
    1fb0:	053c3605 	ldreq	r3, [ip, #-1541]!	; 0xfffff9fb
    1fb4:	31052e4e 	tstcc	r5, lr, asr #28
    1fb8:	2e21053c 	mcrcs	5, 1, r0, cr1, cr12, {1}
    1fbc:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1fc0:	01010006 	tsteq	r1, r6
    1fc4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1fc8:	00152402 	andseq	r2, r5, r2, lsl #8
    1fcc:	07c60308 	strbeq	r0, [r6, r8, lsl #6]
    1fd0:	300b0501 	andcc	r0, fp, r1, lsl #10
    1fd4:	053c3505 	ldreq	r3, [ip, #-1285]!	; 0xfffffafb
    1fd8:	30052e4d 	andcc	r2, r5, sp, asr #28
    1fdc:	2e20053c 	mcrcs	5, 1, r0, cr0, cr12, {1}
    1fe0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1fe4:	01010006 	tsteq	r1, r6
    1fe8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1fec:	00000002 	andeq	r0, r0, r2
    1ff0:	07d30300 	ldrbeq	r0, [r3, r0, lsl #6]
    1ff4:	4c250501 	cfstr32mi	mvfx0, [r5], #-4
    1ff8:	053f0a05 	ldreq	r0, [pc, #-2565]!	; 15fb <_Min_Stack_Size+0x11fb>
    1ffc:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    2000:	3e21052e 	cfsh64cc	mvdx0, mvdx1, #30
    2004:	055a0f05 	ldrbeq	r0, [sl, #-3845]	; 0xfffff0fb
    2008:	0a052e14 	beq	14d860 <_Min_Stack_Size+0x14d460>
    200c:	3e21052e 	cfsh64cc	mvdx0, mvdx1, #30
    2010:	400a055c 	andmi	r0, sl, ip, asr r5
    2014:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    2018:	21052e05 	tstcs	r5, r5, lsl #28
    201c:	3b054e30 	blcc	1558e4 <_Min_Stack_Size+0x1554e4>
    2020:	2e2c053f 	mcrcs	5, 1, r0, cr12, cr15, {1}
    2024:	053c2a05 	ldreq	r2, [ip, #-2565]!	; 0xfffff5fb
    2028:	1105310a 	tstne	r5, sl, lsl #2
    202c:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
    2030:	05302105 	ldreq	r2, [r0, #-261]!	; 0xfffffefb
    2034:	16054c0f 	strne	r4, [r5], -pc, lsl #24
    2038:	2e0a052e 	cfsh32cs	mvfx0, mvfx10, #30
    203c:	4e302105 	rsfmis	f2, f0, f5
    2040:	05400a05 	strbeq	r0, [r0, #-2565]	; 0xfffff5fb
    2044:	05052e10 	streq	r2, [r5, #-3600]	; 0xfffff1f0
    2048:	3021052e 	eorcc	r0, r1, lr, lsr #10
    204c:	400a054e 	andmi	r0, sl, lr, asr #10
    2050:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    2054:	25052e05 	strcs	r2, [r5, #-3589]	; 0xfffff1fb
    2058:	34054e3e 	strcc	r4, [r5], #-3646	; 0xfffff1c2
    205c:	2e26053e 	mcrcs	5, 1, r0, cr6, cr14, {1}
    2060:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    2064:	21052f2f 	tstcs	r5, pc, lsr #30
    2068:	2e1f052e 	cfmul64cs	mvdx0, mvdx15, mvdx14
    206c:	052f3005 	streq	r3, [pc, #-5]!	; 206f <_Min_Stack_Size+0x1c6f>
    2070:	1f052e21 	svcne	0x00052e21
    2074:	2f32053c 	svccs	0x0032053c
    2078:	052e3c05 	streq	r3, [lr, #-3077]!	; 0xfffff3fb
    207c:	66052e50 			; <UNDEFINED> instruction: 0x66052e50
    2080:	2021052e 	eorcs	r0, r1, lr, lsr #10
    2084:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    2088:	21052f30 	tstcs	r5, r0, lsr pc
    208c:	3c1f052e 	cfldr32cc	mvfx0, [pc], {46}	; 0x2e
    2090:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    2094:	01010008 	tsteq	r1, r8
    2098:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    209c:	00000002 	andeq	r0, r0, r2
    20a0:	08a20300 	stmiaeq	r2!, {r8, r9}
    20a4:	5a200501 	bpl	8034b0 <_Min_Stack_Size+0x8030b0>
    20a8:	053f3305 	ldreq	r3, [pc, #-773]!	; 1dab <_Min_Stack_Size+0x19ab>
    20ac:	23052e25 	movwcs	r2, #24101	; 0x5e25
    20b0:	3134052e 	teqcc	r4, lr, lsr #10
    20b4:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    20b8:	35052e24 	strcc	r2, [r5, #-3620]	; 0xfffff1dc
    20bc:	2e270531 	mcrcs	5, 1, r0, cr7, cr1, {1}
    20c0:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    20c4:	27053136 	smladxcs	r5, r6, r1, r3
    20c8:	3c25052e 	cfstr32cc	mvfx0, [r5], #-184	; 0xffffff48
    20cc:	05312005 	ldreq	r2, [r1, #-5]!
    20d0:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
    20d4:	2f01052e 	svccs	0x0001052e
    20d8:	01000902 	tsteq	r0, r2, lsl #18
    20dc:	00010501 	andeq	r0, r1, r1, lsl #10
    20e0:	00000205 	andeq	r0, r0, r5, lsl #4
    20e4:	bc030000 	stclt	0, cr0, [r3], {-0}
    20e8:	06050108 	streq	r0, [r5], -r8, lsl #2
    20ec:	4a050530 	bmi	1435b4 <_Min_Stack_Size+0x1431b4>
    20f0:	01053131 	tsteq	r5, r1, lsr r1
    20f4:	0007023e 	andeq	r0, r7, lr, lsr r2
    20f8:	01050101 	tsteq	r5, r1, lsl #2
    20fc:	00020500 	andeq	r0, r2, r0, lsl #10
    2100:	03000000 	movweq	r0, #0
    2104:	320108cd 	andcc	r0, r1, #13434880	; 0xcd0000
    2108:	01000402 	tsteq	r0, r2, lsl #8
    210c:	000a1701 	andeq	r1, sl, r1, lsl #14
    2110:	b4000300 	strlt	r0, [r0], #-768	; 0xfffffd00
    2114:	02000001 	andeq	r0, r0, #1
    2118:	0d0efb01 	vstreq	d15, [lr, #-4]
    211c:	01010100 	mrseq	r0, (UNDEF: 17)
    2120:	00000001 	andeq	r0, r0, r1
    2124:	01000001 	tsteq	r0, r1
    2128:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    212c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2130:	2f2e2e2f 	svccs	0x002e2e2f
    2134:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    2138:	2f737265 	svccs	0x00737265
    213c:	70696863 	rsbvc	r6, r9, r3, ror #16
    2140:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    2144:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2148:	532f7878 			; <UNDEFINED> instruction: 0x532f7878
    214c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    2150:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    2154:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    2158:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    215c:	2f726576 	svccs	0x00726576
    2160:	00637273 	rsbeq	r7, r3, r3, ror r2
    2164:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    2168:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    216c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    2170:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    2174:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    2178:	61652d65 	cmnvs	r5, r5, ror #26
    217c:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    2180:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    2184:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2188:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    218c:	2f2e2e00 	svccs	0x002e2e00
    2190:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2194:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2198:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    219c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    21a0:	534d432f 	movtpl	r4, #54063	; 0xd32f
    21a4:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    21a8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    21ac:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    21b0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    21b4:	2f2e2e2f 	svccs	0x002e2e2f
    21b8:	642f2e2e 	strtvs	r2, [pc], #-3630	; 21c0 <_Min_Stack_Size+0x1dc0>
    21bc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21c0:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    21c4:	5349534d 	movtpl	r5, #37709	; 0x934d
    21c8:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    21cc:	2f656369 	svccs	0x00656369
    21d0:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    21d4:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    21d8:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    21dc:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    21e0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    21e4:	2f2e2e00 	svccs	0x002e2e00
    21e8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    21ec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    21f0:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    21f4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    21f8:	6968632f 	stmdbvs	r8!, {r0, r1, r2, r3, r5, r8, r9, sp, lr}^
    21fc:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    2200:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2204:	2f787834 	svccs	0x00787834
    2208:	334d5453 	movtcc	r5, #54355	; 0xd453
    220c:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    2210:	41485f78 	hvcmi	34296	; 0x85f8
    2214:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    2218:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    221c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2220:	74730000 	ldrbtvc	r0, [r3], #-0
    2224:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2228:	5f787834 	svcpl	0x00787834
    222c:	5f6c6168 	svcpl	0x006c6168
    2230:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    2234:	00010063 	andeq	r0, r1, r3, rrx
    2238:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    223c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    2240:	00020068 	andeq	r0, r2, r8, rrx
    2244:	726f6300 	rsbvc	r6, pc, #0, 6
    2248:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    224c:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    2250:	73000003 	movwvc	r0, #3
    2254:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2258:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    225c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2260:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    2264:	00040068 	andeq	r0, r4, r8, rrx
    2268:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    226c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2270:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    2274:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    2278:	74730000 	ldrbtvc	r0, [r3], #-0
    227c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2280:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    2284:	00040068 	andeq	r0, r4, r8, rrx
    2288:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    228c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2290:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    2294:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 229c <_Min_Stack_Size+0x1e9c>
    2298:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    229c:	00000500 	andeq	r0, r0, r0, lsl #10
    22a0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    22a4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    22a8:	61685f78 	smcvs	34296	; 0x85f8
    22ac:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
    22b0:	00682e61 	rsbeq	r2, r8, r1, ror #28
    22b4:	73000005 	movwvc	r0, #5
    22b8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    22bc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    22c0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    22c4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    22c8:	05000000 	streq	r0, [r0, #-0]
    22cc:	02050001 	andeq	r0, r5, #1
    22d0:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    22d4:	0101ab03 	tsteq	r1, r3, lsl #22
    22d8:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
    22dc:	05052f18 	streq	r2, [r5, #-3864]	; 0xfffff0e8
    22e0:	3e0c0540 	cfsh32cc	mvfx0, mvfx12, #32
    22e4:	18030305 	stmdane	r3, {r0, r2, r8, r9}
    22e8:	4d0f052e 	cfstr32mi	mvfx0, [pc, #-184]	; 2238 <_Min_Stack_Size+0x1e38>
    22ec:	054d0305 	strbeq	r0, [sp, #-773]	; 0xfffffcfb
    22f0:	09058508 	stmdbeq	r5, {r3, r8, sl, pc}
    22f4:	3c170523 	cfldr32cc	mvfx0, [r7], {35}	; 0x23
    22f8:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    22fc:	13053117 	movwne	r3, #20759	; 0x5117
    2300:	4c0e053f 	cfstr32mi	mvfx0, [lr], {63}	; 0x3f
    2304:	052e7503 	streq	r7, [lr, #-1283]!	; 0xfffffafd
    2308:	1d052e18 	stcne	14, cr2, [r5, #-96]	; 0xffffffa0
    230c:	2e080520 	cfsh32cs	mvfx0, mvfx8, #16
    2310:	10030d05 	andne	r0, r3, r5, lsl #26
    2314:	2e07052e 	cfsh32cs	mvfx0, mvfx7, #30
    2318:	50150531 	andspl	r0, r5, r1, lsr r5
    231c:	052e3605 	streq	r3, [lr, #-1541]!	; 0xfffff9fb
    2320:	15052e2a 	strne	r2, [r5, #-3626]	; 0xfffff1d6
    2324:	2d480521 	cfstr64cs	mvdx0, [r8, #-132]	; 0xffffff7c
    2328:	05213605 	streq	r3, [r1, #-1541]!	; 0xfffff9fb
    232c:	15052e2a 	strne	r2, [r5, #-3626]	; 0xfffff1d6
    2330:	2d480521 	cfstr64cs	mvdx0, [r8, #-132]	; 0xffffff7c
    2334:	05213605 	streq	r3, [r1, #-1541]!	; 0xfffff9fb
    2338:	15052e2a 	strne	r2, [r5, #-3626]	; 0xfffff1d6
    233c:	2d480521 	cfstr64cs	mvdx0, [r8, #-132]	; 0xffffff7c
    2340:	05213605 	streq	r3, [r1, #-1541]!	; 0xfffff9fb
    2344:	07052e2a 	streq	r2, [r5, -sl, lsr #28]
    2348:	4210051d 	andsmi	r0, r0, #121634816	; 0x7400000
    234c:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    2350:	2d053117 	stfcss	f3, [r5, #-92]	; 0xffffffa4
    2354:	2e21052e 	cfsh64cs	mvdx0, mvdx1, #30
    2358:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    235c:	16054007 	strne	r4, [r5], -r7
    2360:	310d052e 	tstcc	sp, lr, lsr #10
    2364:	312e0705 			; <UNDEFINED> instruction: 0x312e0705
    2368:	054d1405 	strbeq	r1, [sp, #-1029]	; 0xfffffbfb
    236c:	10052e07 	andne	r2, r5, r7, lsl #28
    2370:	2e05053f 	mcrcs	5, 0, r0, cr5, cr15, {1}
    2374:	05311605 	ldreq	r1, [r1, #-1541]!	; 0xfffff9fb
    2378:	13052e09 	movwne	r2, #24073	; 0x5e09
    237c:	2e080540 	cfsh32cs	mvfx0, mvfx8, #32
    2380:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
    2384:	19054a0a 	stmdbne	r5, {r1, r3, r9, fp, lr}
    2388:	3f150531 	svccc	0x00150531
    238c:	054c1005 	strbeq	r1, [ip, #-5]
    2390:	17053407 	strne	r3, [r5, -r7, lsl #8]
    2394:	3220052e 	eorcc	r0, r0, #192937984	; 0xb800000
    2398:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
    239c:	1605231d 			; <UNDEFINED> instruction: 0x1605231d
    23a0:	2e0e052e 	cfsh32cs	mvfx0, mvfx14, #30
    23a4:	05311305 	ldreq	r1, [r1, #-773]!	; 0xfffffcfb
    23a8:	0a053f0f 	beq	151fec <_Min_Stack_Size+0x151bec>
    23ac:	2101054c 	tstcs	r1, ip, asr #10
    23b0:	01000602 	tsteq	r0, r2, lsl #12
    23b4:	00010501 	andeq	r0, r1, r1, lsl #10
    23b8:	00000205 	andeq	r0, r0, r5, lsl #4
    23bc:	b6030000 	strlt	r0, [r3], -r0
    23c0:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    23c4:	3e0c054e 	cfsh32cc	mvfx0, mvfx12, #46
    23c8:	05320a05 	ldreq	r0, [r2, #-2565]!	; 0xfffff5fb
    23cc:	0c054a05 			; <UNDEFINED> instruction: 0x0c054a05
    23d0:	35030531 	strcc	r0, [r3, #-1329]	; 0xfffffacf
    23d4:	05850705 	streq	r0, [r5, #1797]	; 0x705
    23d8:	07052e18 	smladeq	r5, r8, lr, r2
    23dc:	2e180531 	mrccs	5, 0, r0, cr8, cr1, {1}
    23e0:	05310705 	ldreq	r0, [r1, #-1797]!	; 0xfffff8fb
    23e4:	07052e18 	smladeq	r5, r8, lr, r2
    23e8:	2e180531 	mrccs	5, 0, r0, cr8, cr1, {1}
    23ec:	05310705 	ldreq	r0, [r1, #-1797]!	; 0xfffff8fb
    23f0:	07052e18 	smladeq	r5, r8, lr, r2
    23f4:	2e180531 	mrccs	5, 0, r0, cr8, cr1, {1}
    23f8:	05312005 	ldreq	r2, [r1, #-5]!
    23fc:	1a054a08 	bne	154c24 <_Min_Stack_Size+0x154824>
    2400:	3d1e0523 	cfldr32cc	mvfx0, [lr, #-140]	; 0xffffff74
    2404:	053d1c05 	ldreq	r1, [sp, #-3077]!	; 0xfffff3fb
    2408:	1b053d20 	blne	151890 <_Min_Stack_Size+0x151490>
    240c:	1d053d3d 	stcne	13, cr3, [r5, #-244]	; 0xffffff0c
    2410:	2e16053f 	mrccs	5, 0, r0, cr6, cr15, {1}
    2414:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    2418:	0f053113 	svceq	0x00053113
    241c:	4d03053f 	cfstr32mi	mvfx0, [r3, #-252]	; 0xffffff04
    2420:	054c0a05 	strbeq	r0, [ip, #-2565]	; 0xfffff5fb
    2424:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
    2428:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    242c:	02050001 	andeq	r0, r5, #1
    2430:	00000000 	andeq	r0, r0, r0
    2434:	01039803 	tsteq	r3, r3, lsl #16
    2438:	05751505 	ldrbeq	r1, [r5, #-1285]!	; 0xfffffafb
    243c:	02003403 	andeq	r3, r0, #50331648	; 0x3000000
    2440:	58060104 	stmdapl	r6, {r2, r8}
    2444:	02040200 	andeq	r0, r4, #0, 4
    2448:	0021052e 	eoreq	r0, r1, lr, lsr #10
    244c:	06020402 	streq	r0, [r2], -r2, lsl #8
    2450:	0005054c 	andeq	r0, r5, ip, asr #10
    2454:	4a020402 	bmi	83464 <_Min_Stack_Size+0x83064>
    2458:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    245c:	05054d15 	streq	r4, [r5, #-3349]	; 0xfffff2eb
    2460:	0595693f 	ldreq	r6, [r5, #2367]	; 0x93f
    2464:	0a054d0c 	beq	15589c <_Min_Stack_Size+0x15549c>
    2468:	21010530 	tstcs	r1, r0, lsr r5
    246c:	01000402 	tsteq	r0, r2, lsl #8
    2470:	00010501 	andeq	r0, r1, r1, lsl #10
    2474:	00000205 	andeq	r0, r0, r5, lsl #4
    2478:	c4030000 	strgt	r0, [r3], #-0
    247c:	15050103 	strne	r0, [r5, #-259]	; 0xfffffefd
    2480:	31380575 	teqcc	r8, r5, ror r5
    2484:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    2488:	02002603 	andeq	r2, r0, #3145728	; 0x300000
    248c:	58060104 	stmdapl	r6, {r2, r8}
    2490:	02040200 	andeq	r0, r4, #0, 4
    2494:	0021052e 	eoreq	r0, r1, lr, lsr #10
    2498:	06020402 	streq	r0, [r2], -r2, lsl #8
    249c:	0005054c 	andeq	r0, r5, ip, asr #10
    24a0:	4a020402 	bmi	834b0 <_Min_Stack_Size+0x830b0>
    24a4:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    24a8:	05054d15 	streq	r4, [r5, #-3349]	; 0xfffff2eb
    24ac:	691f053f 	ldmdbvs	pc, {r0, r1, r2, r3, r4, r5, r8, sl}	; <UNPREDICTABLE>
    24b0:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    24b4:	09052e10 	stmdbeq	r5, {r4, r9, sl, fp, sp}
    24b8:	2e190531 	mrccs	5, 0, r0, cr9, cr1, {1}
    24bc:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    24c0:	0c052e19 	stceq	14, cr2, [r5], {25}
    24c4:	2e07053e 	mcrcs	5, 0, r0, cr7, cr14, {1}
    24c8:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
    24cc:	0b052e1b 	bleq	14dd40 <_Min_Stack_Size+0x14d940>
    24d0:	2e1b0520 	cfmul64cs	mvdx0, mvdx11, mvdx0
    24d4:	95400505 	strbls	r0, [r0, #-1285]	; 0xfffffafb
    24d8:	054d0c05 	strbeq	r0, [sp, #-3077]	; 0xfffff3fb
    24dc:	0105310a 	tsteq	r5, sl, lsl #2
    24e0:	00040221 	andeq	r0, r4, r1, lsr #4
    24e4:	01050101 	tsteq	r5, r1, lsl #2
    24e8:	00020500 	andeq	r0, r2, r0, lsl #10
    24ec:	03000000 	movweq	r0, #0
    24f0:	05010482 	streq	r0, [r1, #-1154]	; 0xfffffb7e
    24f4:	17054c38 	smladxne	r5, r8, ip, r4
    24f8:	2218052e 	andscs	r0, r8, #192937984	; 0xb800000
    24fc:	053e0a05 	ldreq	r0, [lr, #-2565]!	; 0xfffff5fb
    2500:	15054a05 	strne	r4, [r5, #-2565]	; 0xfffff5fb
    2504:	3f050530 	svccc	0x00050530
    2508:	054c0c05 	strbeq	r0, [ip, #-3077]	; 0xfffff3fb
    250c:	19053309 	stmdbne	r5, {r0, r3, r8, r9, ip, sp}
    2510:	2009052e 	andcs	r0, r9, lr, lsr #10
    2514:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    2518:	19053d09 	stmdbne	r5, {r0, r3, r8, sl, fp, ip, sp}
    251c:	2009052e 	andcs	r0, r9, lr, lsr #10
    2520:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    2524:	07053e0d 	streq	r3, [r5, -sp, lsl #28]
    2528:	0035052e 	eorseq	r0, r5, lr, lsr #10
    252c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2530:	02002d05 	andeq	r2, r0, #320	; 0x140
    2534:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    2538:	1b05300b 	blne	14e56c <_Min_Stack_Size+0x14e16c>
    253c:	200b052e 	andcs	r0, fp, lr, lsr #10
    2540:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    2544:	0a054005 	beq	152560 <_Min_Stack_Size+0x152160>
    2548:	230b0585 	movwcs	r0, #46469	; 0xb585
    254c:	053c1905 	ldreq	r1, [ip, #-2309]!	; 0xfffff6fb
    2550:	19052e09 	stmdbne	r5, {r0, r3, r9, sl, fp, sp}
    2554:	3f090531 	svccc	0x00090531
    2558:	054d1505 	strbeq	r1, [sp, #-1285]	; 0xfffffafb
    255c:	72034c10 	andvc	r4, r3, #16, 24	; 0x1000
    2560:	2e1a052e 	cfmul64cs	mvdx0, mvdx10, mvdx14
    2564:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    2568:	1f052e0a 	svcne	0x00052e0a
    256c:	052e1303 	streq	r1, [lr, #-771]!	; 0xfffffcfd
    2570:	10052e18 	andne	r2, r5, r8, lsl lr
    2574:	3105052e 	tstcc	r5, lr, lsr #10
    2578:	054d1105 	strbeq	r1, [sp, #-261]	; 0xfffffefb
    257c:	01054c0a 	tsteq	r5, sl, lsl #24
    2580:	00040221 	andeq	r0, r4, r1, lsr #4
    2584:	01050101 	tsteq	r5, r1, lsl #2
    2588:	00020500 	andeq	r0, r2, r0, lsl #10
    258c:	03000000 	movweq	r0, #0
    2590:	050104c5 	streq	r0, [r1, #-1221]	; 0xfffffb3b
    2594:	05054b0a 	streq	r4, [r5, #-2826]	; 0xfffff4f6
    2598:	3015054a 	andscc	r0, r5, sl, asr #10
    259c:	053d0c05 	ldreq	r0, [sp, #-3077]!	; 0xfffff3fb
    25a0:	05053311 	streq	r3, [r5, #-785]	; 0xfffffcef
    25a4:	850a054d 	strhi	r0, [sl, #-1357]	; 0xfffffab3
    25a8:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    25ac:	01010005 	tsteq	r1, r5
    25b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    25b4:	00000002 	andeq	r0, r0, r2
    25b8:	04e30300 	strbteq	r0, [r3], #768	; 0x300
    25bc:	75150501 	ldrvc	r0, [r5, #-1281]	; 0xfffffaff
    25c0:	05301805 	ldreq	r1, [r0, #-2053]!	; 0xfffff7fb
    25c4:	05054220 	streq	r4, [r5, #-544]	; 0xfffffde0
    25c8:	3115054a 	tstcc	r5, sl, asr #10
    25cc:	053d0505 	ldreq	r0, [sp, #-1285]!	; 0xfffffafb
    25d0:	05324b0c 	ldreq	r4, [r2, #-2828]!	; 0xfffff4f4
    25d4:	1b052e16 	blne	14de34 <_Min_Stack_Size+0x14da34>
    25d8:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    25dc:	05301505 	ldreq	r1, [r0, #-1285]!	; 0xfffffafb
    25e0:	05054b0c 	streq	r4, [r5, #-2828]	; 0xfffff4f4
    25e4:	3f2e0532 	svccc	0x002e0532
    25e8:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    25ec:	14055d2e 	strne	r5, [r5], #-3374	; 0xfffff2d2
    25f0:	4d24052e 	cfstr32mi	mvfx0, [r4, #-184]!	; 0xffffff48
    25f4:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    25f8:	0805210a 	stmdaeq	r5, {r1, r3, r8, sp}
    25fc:	2307053e 	movwcs	r0, #30014	; 0x753e
    2600:	054c0905 	strbeq	r0, [ip, #-2309]	; 0xfffff6fb
    2604:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2608:	2b053c01 	blcs	151614 <_Min_Stack_Size+0x151214>
    260c:	01040200 	mrseq	r0, R12_usr
    2610:	0019053c 	andseq	r0, r9, ip, lsr r5
    2614:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2618:	3f09053f 	svccc	0x0009053f
    261c:	054d1505 	strbeq	r1, [sp, #-1285]	; 0xfffffafb
    2620:	0c054c10 	stceq	12, cr4, [r5], {16}
    2624:	3e2b0533 	mcrcc	5, 1, r0, cr11, cr3, {1}
    2628:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    262c:	07052e10 	smladeq	r5, r0, lr, r2
    2630:	3117052e 	tstcc	r7, lr, lsr #10
    2634:	05692c05 	strbeq	r2, [r9, #-3077]!	; 0xfffff3fb
    2638:	12052e25 	andne	r2, r5, #592	; 0x250
    263c:	312b052e 			; <UNDEFINED> instruction: 0x312b052e
    2640:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    2644:	07052e10 	smladeq	r5, r0, lr, r2
    2648:	3117052e 	tstcc	r7, lr, lsr #10
    264c:	05692c05 	strbeq	r2, [r9, #-3077]!	; 0xfffff3fb
    2650:	12052e25 	andne	r2, r5, #592	; 0x250
    2654:	312c052e 			; <UNDEFINED> instruction: 0x312c052e
    2658:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    265c:	07052e10 	smladeq	r5, r0, lr, r2
    2660:	3117052e 	tstcc	r7, lr, lsr #10
    2664:	05692d05 	strbeq	r2, [r9, #-3333]!	; 0xfffff2fb
    2668:	12052e26 	andne	r2, r5, #608	; 0x260
    266c:	2e51032e 	cdpcs	3, 5, cr0, cr1, cr14, {1}
    2670:	053c0805 	ldreq	r0, [ip, #-2053]!	; 0xfffff7fb
    2674:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    2678:	43052e01 	movwmi	r2, #24065	; 0x5e01
    267c:	01040200 	mrseq	r0, R12_usr
    2680:	002e052e 	eoreq	r0, lr, lr, lsr #10
    2684:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2688:	33030a05 	movwcc	r0, #14853	; 0x3a05
    268c:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
    2690:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    2694:	07052e19 	smladeq	r5, r9, lr, r2
    2698:	4105302e 	tstmi	r5, lr, lsr #32
    269c:	2e3a053f 	mrccs	5, 1, r0, cr10, cr15, {1}
    26a0:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    26a4:	12053107 	andne	r3, r5, #-1073741823	; 0xc0000001
    26a8:	4c0e054d 	cfstr32mi	mvfx0, [lr], {77}	; 0x4d
    26ac:	05330505 	ldreq	r0, [r3, #-1285]!	; 0xfffffafb
    26b0:	38053f3f 	stmdacc	r5, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp}
    26b4:	2e10052e 	cfmul64cs	mvdx0, mvdx0, mvdx14
    26b8:	05310505 	ldreq	r0, [r1, #-1285]!	; 0xfffffafb
    26bc:	2c054c11 	stccs	12, cr4, [r5], {17}
    26c0:	2e25055d 	mcrcs	5, 1, r0, cr5, cr13, {2}
    26c4:	052e1005 	streq	r1, [lr, #-5]!
    26c8:	0105310a 	tsteq	r5, sl, lsl #2
    26cc:	00040221 	andeq	r0, r4, r1, lsr #4
    26d0:	01050101 	tsteq	r5, r1, lsl #2
    26d4:	00020500 	andeq	r0, r2, r0, lsl #10
    26d8:	03000000 	movweq	r0, #0
    26dc:	050105eb 	streq	r0, [r1, #-1515]	; 0xfffffa15
    26e0:	26054c11 			; <UNDEFINED> instruction: 0x26054c11
    26e4:	2e0c052f 	cfsh32cs	mvfx0, mvfx12, #31
    26e8:	055b3805 	ldrbeq	r3, [fp, #-2053]	; 0xfffff7fb
    26ec:	0a052e17 	beq	14df50 <_Min_Stack_Size+0x14db50>
    26f0:	3f2a0522 	svccc	0x002a0522
    26f4:	052e2305 	streq	r2, [lr, #-773]!	; 0xfffffcfb
    26f8:	06052e0f 	streq	r2, [r5], -pc, lsl #28
    26fc:	3008052e 	andcc	r0, r8, lr, lsr #10
    2700:	05580705 	ldrbeq	r0, [r8, #-1797]	; 0xfffff8fb
    2704:	1b05310b 	blne	14eb38 <_Min_Stack_Size+0x14e738>
    2708:	200b052e 	andcs	r0, fp, lr, lsr #10
    270c:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    2710:	25053f2c 	strcs	r3, [r5, #-3884]	; 0xfffff0d4
    2714:	2e12052e 	cfmul64cs	mvdx0, mvdx2, mvdx14
    2718:	05311705 	ldreq	r1, [r1, #-1797]!	; 0xfffff8fb
    271c:	23056a2a 	movwcs	r6, #23082	; 0x5a2a
    2720:	2e0f052e 	cfsh32cs	mvfx0, mvfx15, #30
    2724:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    2728:	07053008 	streq	r3, [r5, -r8]
    272c:	312c0558 			; <UNDEFINED> instruction: 0x312c0558
    2730:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    2734:	17052e12 	smladne	r5, r2, lr, r2
    2738:	6a2b0531 	bvs	ac3c04 <_Min_Stack_Size+0xac3804>
    273c:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    2740:	06052e0f 	streq	r2, [r5], -pc, lsl #28
    2744:	3008052e 	andcc	r0, r8, lr, lsr #10
    2748:	05580705 	ldrbeq	r0, [r8, #-1797]	; 0xfffff8fb
    274c:	2605312d 	strcs	r3, [r5], -sp, lsr #2
    2750:	2e12052e 	cfmul64cs	mvdx0, mvdx2, mvdx14
    2754:	05311705 	ldreq	r1, [r1, #-1797]!	; 0xfffff8fb
    2758:	23056a2a 	movwcs	r6, #23082	; 0x5a2a
    275c:	2e0f052e 	cfsh32cs	mvfx0, mvfx15, #30
    2760:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    2764:	07053008 	streq	r3, [r5, -r8]
    2768:	312c0558 			; <UNDEFINED> instruction: 0x312c0558
    276c:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    2770:	10052e12 	andne	r2, r5, r2, lsl lr
    2774:	2e1a0531 	mrccs	5, 0, r0, cr10, cr1, {1}
    2778:	05202005 	streq	r2, [r0, #-5]!
    277c:	11052e09 	tstne	r5, r9, lsl #28
    2780:	2e1b0531 	mrccs	5, 0, r0, cr11, cr1, {1}
    2784:	05202005 	streq	r2, [r0, #-5]!
    2788:	12052e0b 	andne	r2, r5, #11, 28	; 0xb0
    278c:	2e0d0530 	cfmv64hrcs	mvdx13, r0
    2790:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    2794:	12052e0d 	andne	r2, r5, #13, 28	; 0xd0
    2798:	2e0d0542 	cfsh32cs	mvfx0, mvfx13, #34
    279c:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    27a0:	11052e0d 	tstne	r5, sp, lsl #28
    27a4:	2e1b0543 	cfmac32cs	mvfx0, mvfx11, mvfx3
    27a8:	05202005 	streq	r2, [r0, #-5]!
    27ac:	0f052e0b 	svceq	0x00052e0b
    27b0:	2e1f0531 	mrccs	5, 0, r0, cr15, cr1, {1}
    27b4:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    27b8:	10052e1f 	andne	r2, r5, pc, lsl lr
    27bc:	2e0b053f 	mcrcs	5, 0, r0, cr11, cr15, {1}
    27c0:	05310f05 	ldreq	r0, [r1, #-3845]!	; 0xfffff0fb
    27c4:	2a052e0b 	bcs	14dff8 <_Min_Stack_Size+0x14dbf8>
    27c8:	2e230534 	mcrcs	5, 1, r0, cr3, cr4, {1}
    27cc:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    27d0:	08052e06 	stmdaeq	r5, {r1, r2, r9, sl, fp, sp}
    27d4:	5807053e 	stmdapl	r7, {r1, r2, r3, r4, r5, r8, sl}
    27d8:	053f2c05 	ldreq	r2, [pc, #-3077]!	; 1bdb <_Min_Stack_Size+0x17db>
    27dc:	12052e25 	andne	r2, r5, #592	; 0x250
    27e0:	3025052e 	eorcc	r0, r5, lr, lsr #10
    27e4:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    27e8:	1d05310d 	stfnes	f3, [r5, #-52]	; 0xffffffcc
    27ec:	200d052e 	andcs	r0, sp, lr, lsr #10
    27f0:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    27f4:	1d053d0d 	stcne	13, cr3, [r5, #-52]	; 0xffffffcc
    27f8:	200d052e 	andcs	r0, sp, lr, lsr #10
    27fc:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    2800:	0b053e11 	bleq	15204c <_Min_Stack_Size+0x151c4c>
    2804:	0039052e 	eorseq	r0, r9, lr, lsr #10
    2808:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    280c:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    2810:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    2814:	1f05300f 	svcne	0x0005300f
    2818:	200f052e 	andcs	r0, pc, lr, lsr #10
    281c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    2820:	1c054023 	stcne	0, cr4, [r5], {35}	; 0x23
    2824:	2e14052e 	cfmul64cs	mvdx0, mvdx4, mvdx14
    2828:	05310905 	ldreq	r0, [r1, #-2309]!	; 0xfffff6fb
    282c:	10054d15 	andne	r4, r5, r5, lsl sp
    2830:	2e0b054c 	cfsh32cs	mvfx0, mvfx11, #44
    2834:	05300f05 	ldreq	r0, [r0, #-3845]!	; 0xfffff0fb
    2838:	09052e0b 	stmdbeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    283c:	23100530 	tstcs	r0, #48, 10	; 0xc000000
    2840:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
    2844:	09052020 	stmdbeq	r5, {r5, sp}
    2848:	3111052e 	tstcc	r1, lr, lsr #10
    284c:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    2850:	0b052020 	bleq	14a8d8 <_Min_Stack_Size+0x14a4d8>
    2854:	3012052e 	andscc	r0, r2, lr, lsr #10
    2858:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    285c:	0d053111 	stfeqs	f3, [r5, #-68]	; 0xffffffbc
    2860:	4212052e 	andsmi	r0, r2, #192937984	; 0xb800000
    2864:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    2868:	0d053111 	stfeqs	f3, [r5, #-68]	; 0xffffffbc
    286c:	7b11052e 	blvc	443d2c <_Min_Stack_Size+0x44392c>
    2870:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    2874:	0b052020 	bleq	14a8fc <_Min_Stack_Size+0x14a4fc>
    2878:	310f052e 	tstcc	pc, lr, lsr #10
    287c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    2880:	1f05200f 	svcne	0x0005200f
    2884:	3f0b052e 	svccc	0x000b052e
    2888:	054d1705 	strbeq	r1, [sp, #-1797]	; 0xfffff8fb
    288c:	0b054d10 	bleq	155cd4 <_Min_Stack_Size+0x1558d4>
    2890:	310f052e 	tstcc	pc, lr, lsr #10
    2894:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    2898:	0505350a 	streq	r3, [r5, #-1290]	; 0xfffffaf6
    289c:	300d052e 	andcc	r0, sp, lr, lsr #10
    28a0:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    28a4:	13052e07 	movwne	r2, #24071	; 0x5e07
    28a8:	4d070530 	cfstr32mi	mvfx0, [r7, #-192]	; 0xffffff40
    28ac:	05860d05 	streq	r0, [r6, #3333]	; 0xd05
    28b0:	12052e0c 	andne	r2, r5, #12, 28	; 0xc0
    28b4:	2e1c054f 	cfmac32cs	mvfx0, mvfx12, mvfx15
    28b8:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    28bc:	0b052e07 	bleq	14e0e0 <_Min_Stack_Size+0x14dce0>
    28c0:	26070539 			; <UNDEFINED> instruction: 0x26070539
    28c4:	054d1305 	strbeq	r1, [sp, #-773]	; 0xfffffcfb
    28c8:	07054d0c 	streq	r4, [r5, -ip, lsl #26]
    28cc:	310b052e 	tstcc	fp, lr, lsr #10
    28d0:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    28d4:	7fb30309 	svcvc	0x00b30309
    28d8:	0301053c 	movweq	r0, #5436	; 0x153c
    28dc:	022000d0 	eoreq	r0, r0, #208	; 0xd0
    28e0:	01010003 	tsteq	r1, r3
    28e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    28e8:	00000002 	andeq	r0, r0, r2
    28ec:	07c80300 	strbeq	r0, [r8, r0, lsl #6]
    28f0:	76150501 	ldrvc	r0, [r5], -r1, lsl #10
    28f4:	00310305 	eorseq	r0, r1, r5, lsl #6
    28f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    28fc:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    2900:	21052e02 	tstcs	r5, r2, lsl #28
    2904:	02040200 	andeq	r0, r4, #0, 4
    2908:	05054c06 	streq	r4, [r5, #-3078]	; 0xfffff3fa
    290c:	02040200 	andeq	r0, r4, #0, 4
    2910:	1e05304a 	cdpne	0, 0, cr3, cr5, cr10, {2}
    2914:	07052308 	streq	r2, [r5, -r8, lsl #6]
    2918:	2322053d 			; <UNDEFINED> instruction: 0x2322053d
    291c:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
    2920:	07052320 	streq	r2, [r5, -r0, lsr #6]
    2924:	2324053d 			; <UNDEFINED> instruction: 0x2324053d
    2928:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
    292c:	0705231f 	smladeq	r5, pc, r3, r2	; <UNPREDICTABLE>
    2930:	231f053d 	tstcs	pc, #255852544	; 0xf400000
    2934:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
    2938:	2009030c 	andcs	r0, r9, ip, lsl #6
    293c:	7a030705 	bvc	c4558 <_Min_Stack_Size+0xc4158>
    2940:	0303053c 	movweq	r0, #13628	; 0x353c
    2944:	0a05200a 	beq	14a974 <_Min_Stack_Size+0x14a574>
    2948:	2101054c 	tstcs	r1, ip, asr #10
    294c:	01000502 	tsteq	r0, r2, lsl #10
    2950:	00010501 	andeq	r0, r1, r1, lsl #10
    2954:	00000205 	andeq	r0, r0, r5, lsl #4
    2958:	84030000 	strhi	r0, [r3], #-0
    295c:	15050108 	strne	r0, [r5, #-264]	; 0xfffffef8
    2960:	31030567 	tstcc	r3, r7, ror #10
    2964:	01040200 	mrseq	r0, R12_usr
    2968:	02005806 	andeq	r5, r0, #393216	; 0x60000
    296c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    2970:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    2974:	054c0602 	strbeq	r0, [ip, #-1538]	; 0xfffff9fe
    2978:	04020005 	streq	r0, [r2], #-5
    297c:	05304a02 	ldreq	r4, [r0, #-2562]!	; 0xfffff5fe
    2980:	054d081e 	strbeq	r0, [sp, #-2078]	; 0xfffff7e2
    2984:	22053d07 	andcs	r3, r5, #448	; 0x1c0
    2988:	3d070523 	cfstr32cc	mvfx0, [r7, #-140]	; 0xffffff74
    298c:	05232005 	streq	r2, [r3, #-5]!
    2990:	24053d07 	strcs	r3, [r5], #-3335	; 0xfffff2f9
    2994:	3d070523 	cfstr32cc	mvfx0, [r7, #-140]	; 0xffffff74
    2998:	05231f05 	streq	r1, [r3, #-3845]!	; 0xfffff0fb
    299c:	1f053d07 	svcne	0x00053d07
    29a0:	3d070523 	cfstr32cc	mvfx0, [r7, #-140]	; 0xffffff74
    29a4:	05231e05 	streq	r1, [r3, #-3589]!	; 0xfffff1fb
    29a8:	20053d22 	andcs	r3, r5, r2, lsr #26
    29ac:	3d24053d 	cfstr32cc	mvfx0, [r4, #-244]!	; 0xffffff0c
    29b0:	3d3d1f05 	ldccc	15, cr1, [sp, #-20]!	; 0xffffffec
    29b4:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
    29b8:	0705230e 	streq	r2, [r5, -lr, lsl #6]
    29bc:	330c052f 	movwcc	r0, #50479	; 0xc52f
    29c0:	05320305 	ldreq	r0, [r2, #-773]!	; 0xfffffcfb
    29c4:	01054c0a 	tsteq	r5, sl, lsl #24
    29c8:	00050221 	andeq	r0, r5, r1, lsr #4
    29cc:	01050101 	tsteq	r5, r1, lsl #2
    29d0:	00020500 	andeq	r0, r2, r0, lsl #10
    29d4:	03000000 	movweq	r0, #0
    29d8:	050108d9 	streq	r0, [r1, #-2265]	; 0xfffff727
    29dc:	01054b0e 	tsteq	r5, lr, lsl #22
    29e0:	0005024b 	andeq	r0, r5, fp, asr #4
    29e4:	01050101 	tsteq	r5, r1, lsl #2
    29e8:	00020500 	andeq	r0, r2, r0, lsl #10
    29ec:	03000000 	movweq	r0, #0
    29f0:	050108e4 	streq	r0, [r1, #-2276]	; 0xfffff71c
    29f4:	01054b0e 	tsteq	r5, lr, lsl #22
    29f8:	0005022f 	andeq	r0, r5, pc, lsr #4
    29fc:	01050101 	tsteq	r5, r1, lsl #2
    2a00:	00020500 	andeq	r0, r2, r0, lsl #10
    2a04:	03000000 	movweq	r0, #0
    2a08:	050108fe 	streq	r0, [r1, #-2302]	; 0xfffff702
    2a0c:	16057607 	strne	r7, [r5], -r7, lsl #12
    2a10:	2007052e 	andcs	r0, r7, lr, lsr #10
    2a14:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    2a18:	18053f07 	stmdane	r5, {r0, r1, r2, r8, r9, sl, fp, ip, sp}
    2a1c:	3111052e 	tstcc	r1, lr, lsr #10
    2a20:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    2a24:	19053109 	stmdbne	r5, {r0, r3, r8, ip, sp}
    2a28:	3109052e 	tstcc	r9, lr, lsr #10
    2a2c:	052e1a05 	streq	r1, [lr, #-2565]!	; 0xfffff5fb
    2a30:	2e0b0301 	cdpcs	3, 0, cr0, cr11, cr1, {0}
    2a34:	051b0905 	ldreq	r0, [fp, #-2309]	; 0xfffff6fb
    2a38:	09052e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, sp}
    2a3c:	2e1a0531 	mrccs	5, 0, r0, cr10, cr1, {1}
    2a40:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    2a44:	01010005 	tsteq	r1, r5
    2a48:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2a4c:	0016a802 	andseq	sl, r6, r2, lsl #16
    2a50:	09a00308 	stmibeq	r0!, {r3, r8, r9}
    2a54:	4b2c0501 	blmi	b03e60 <_Min_Stack_Size+0xb03a60>
    2a58:	052e3705 	streq	r3, [lr, #-1797]!	; 0xfffff8fb
    2a5c:	0c052040 	stceq	0, cr2, [r5], {64}	; 0x40
    2a60:	5c290520 	cfstr32pl	mvfx0, [r9], #-128	; 0xffffff80
    2a64:	05581505 	ldrbeq	r1, [r8, #-1285]	; 0xfffffafb
    2a68:	2f053006 	svccs	0x00053006
    2a6c:	2e3a053f 	mrccs	5, 1, r0, cr10, cr15, {1}
    2a70:	054a5105 	strbeq	r5, [sl, #-261]	; 0xfffffefb
    2a74:	2e05201d 	mcrcs	0, 0, r2, cr5, cr13, {0}
    2a78:	2e390541 	cdpcs	5, 3, cr0, cr9, cr1, {2}
    2a7c:	054a1d05 	strbeq	r1, [sl, #-3333]	; 0xfffff2fb
    2a80:	0105310e 	tsteq	r5, lr, lsl #2
    2a84:	0009022f 	andeq	r0, r9, pc, lsr #4
    2a88:	01050101 	tsteq	r5, r1, lsl #2
    2a8c:	10020500 	andne	r0, r2, r0, lsl #10
    2a90:	03080017 	movweq	r0, #32791	; 0x8017
    2a94:	050109bc 	streq	r0, [r1, #-2492]	; 0xfffff644
    2a98:	0c054b15 			; <UNDEFINED> instruction: 0x0c054b15
    2a9c:	3f10052f 	svccc	0x0010052f
    2aa0:	302e0505 	eorcc	r0, lr, r5, lsl #10
    2aa4:	05e81605 	strbeq	r1, [r8, #1541]!	; 0x605
    2aa8:	0a052e20 	beq	14e330 <_Min_Stack_Size+0x14df30>
    2aac:	3010052e 	andscc	r0, r0, lr, lsr #10
    2ab0:	05300705 	ldreq	r0, [r0, #-1797]!	; 0xfffff8fb
    2ab4:	0a052215 	beq	14b310 <_Min_Stack_Size+0x14af10>
    2ab8:	3e10052e 	cfmul64cc	mvdx0, mvdx0, mvdx14
    2abc:	05300705 	ldreq	r0, [r0, #-1797]!	; 0xfffff8fb
    2ac0:	20090316 	andcs	r0, r9, r6, lsl r3
    2ac4:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    2ac8:	0e053e05 	cdpeq	14, 0, cr3, cr5, cr5, {0}
    2acc:	2f0705da 	svccs	0x000705da
    2ad0:	05221605 	streq	r1, [r2, #-1541]!	; 0xfffff9fb
    2ad4:	0a052e20 	beq	14e35c <_Min_Stack_Size+0x14df5c>
    2ad8:	3010052e 	andscc	r0, r0, lr, lsr #10
    2adc:	05300705 	ldreq	r0, [r0, #-1797]!	; 0xfffff8fb
    2ae0:	0a052215 	beq	14b33c <_Min_Stack_Size+0x14af3c>
    2ae4:	3e10052e 	cfmul64cc	mvdx0, mvdx0, mvdx14
    2ae8:	05300705 	ldreq	r0, [r0, #-1797]!	; 0xfffff8fb
    2aec:	20090305 	andcs	r0, r9, r5, lsl #6
    2af0:	0e030705 	cdpeq	7, 0, cr0, cr3, cr5, {0}
    2af4:	030e0566 	movweq	r0, #58726	; 0xe566
    2af8:	07052077 	smlsdxeq	r5, r7, r0, r2
    2afc:	2216052f 	andscs	r0, r6, #197132288	; 0xbc00000
    2b00:	052e2005 	streq	r2, [lr, #-5]!
    2b04:	10052e0a 	andne	r2, r5, sl, lsl #28
    2b08:	30070530 	andcc	r0, r7, r0, lsr r5
    2b0c:	03205303 			; <UNDEFINED> instruction: 0x03205303
    2b10:	03342e76 	teqeq	r4, #1888	; 0x760
    2b14:	78032e1e 	stmdavc	r3, {r1, r2, r3, r4, r9, sl, fp, sp}
    2b18:	1503342e 	strne	r3, [r3, #-1070]	; 0xfffffbd2
    2b1c:	260a052e 	strcs	r0, [sl], -lr, lsr #10
    2b20:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    2b24:	01010005 	tsteq	r1, r5
    2b28:	00000625 	andeq	r0, r0, r5, lsr #12
    2b2c:	01b60003 			; <UNDEFINED> instruction: 0x01b60003
    2b30:	01020000 	mrseq	r0, (UNDEF: 2)
    2b34:	000d0efb 	strdeq	r0, [sp], -fp
    2b38:	01010101 	tsteq	r1, r1, lsl #2
    2b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2b40:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    2b44:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2b48:	2f2e2e2f 	svccs	0x002e2e2f
    2b4c:	642f2e2e 	strtvs	r2, [pc], #-3630	; 2b54 <_Min_Stack_Size+0x2754>
    2b50:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2b54:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    2b58:	2f706968 	svccs	0x00706968
    2b5c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2b60:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    2b64:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    2b68:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    2b6c:	5f787834 	svcpl	0x00787834
    2b70:	5f4c4148 	svcpl	0x004c4148
    2b74:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    2b78:	732f7265 			; <UNDEFINED> instruction: 0x732f7265
    2b7c:	2f006372 	svccs	0x00006372
    2b80:	2f727375 	svccs	0x00727375
    2b84:	2f62696c 	svccs	0x0062696c
    2b88:	2f636367 	svccs	0x00636367
    2b8c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2b90:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2b94:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2b98:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
    2b9c:	2f312e33 	svccs	0x00312e33
    2ba0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    2ba4:	00656475 	rsbeq	r6, r5, r5, ror r4
    2ba8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2bac:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2bb0:	2f2e2e2f 	svccs	0x002e2e2f
    2bb4:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    2bb8:	2f737265 	svccs	0x00737265
    2bbc:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    2bc0:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    2bc4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    2bc8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    2bcc:	2f2e2e2f 	svccs	0x002e2e2f
    2bd0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2bd4:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    2bd8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    2bdc:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    2be0:	2f534953 	svccs	0x00534953
    2be4:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    2be8:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    2bec:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    2bf0:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    2bf4:	2f787834 	svccs	0x00787834
    2bf8:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    2bfc:	00656475 	rsbeq	r6, r5, r5, ror r4
    2c00:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2c04:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2c08:	2f2e2e2f 	svccs	0x002e2e2f
    2c0c:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    2c10:	2f737265 	svccs	0x00737265
    2c14:	70696863 	rsbvc	r6, r9, r3, ror #16
    2c18:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    2c1c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2c20:	532f7878 			; <UNDEFINED> instruction: 0x532f7878
    2c24:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    2c28:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    2c2c:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    2c30:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2c34:	2f726576 	svccs	0x00726576
    2c38:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2c3c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2c40:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2c44:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    2c48:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    2c4c:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    2c50:	00010063 	andeq	r0, r1, r3, rrx
    2c54:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    2c58:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    2c5c:	00020068 	andeq	r0, r2, r8, rrx
    2c60:	726f6300 	rsbvc	r6, pc, #0, 6
    2c64:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    2c68:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    2c6c:	73000003 	movwvc	r0, #3
    2c70:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2c74:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    2c78:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2c7c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    2c80:	00040068 	andeq	r0, r4, r8, rrx
    2c84:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2c88:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2c8c:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    2c90:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    2c94:	74730000 	ldrbtvc	r0, [r3], #-0
    2c98:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2c9c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    2ca0:	00040068 	andeq	r0, r4, r8, rrx
    2ca4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    2ca8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2cac:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    2cb0:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 2cb8 <_Min_Stack_Size+0x28b8>
    2cb4:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    2cb8:	00000500 	andeq	r0, r0, r0, lsl #10
    2cbc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2cc0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    2cc4:	61685f78 	smcvs	34296	; 0x85f8
    2cc8:	70675f6c 	rsbvc	r5, r7, ip, ror #30
    2ccc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    2cd0:	00000500 	andeq	r0, r0, r0, lsl #10
    2cd4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    2cd8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    2cdc:	61685f78 	smcvs	34296	; 0x85f8
    2ce0:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    2ce4:	00000005 	andeq	r0, r0, r5
    2ce8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2cec:	00180402 	andseq	r0, r8, r2, lsl #8
    2cf0:	01a40308 			; <UNDEFINED> instruction: 0x01a40308
    2cf4:	5a0c0501 	bpl	304100 <_Min_Stack_Size+0x303d00>
    2cf8:	10052f2f 	andne	r2, r5, pc, lsr #30
    2cfc:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    2d00:	10052e03 	andne	r2, r5, r3, lsl #28
    2d04:	5a250523 	bpl	944198 <_Min_Stack_Size+0x943d98>
    2d08:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    2d0c:	15053e07 	strne	r3, [r5, #-3591]	; 0xfffff1f9
    2d10:	2e1c055c 	mrccs	5, 0, r0, cr12, cr12, {2}
    2d14:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    2d18:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    2d1c:	1c052f01 	stcne	15, cr2, [r5], {1}
    2d20:	01040200 	mrseq	r0, R12_usr
    2d24:	0039052e 	eorseq	r0, r9, lr, lsr #10
    2d28:	2d010402 	cfstrscs	mvf0, [r1, #-8]
    2d2c:	05340e05 	ldreq	r0, [r4, #-3589]!	; 0xfffff1fb
    2d30:	2a053d37 	bcs	152214 <_Min_Stack_Size+0x151e14>
    2d34:	3c11052e 	cfldr32cc	mvfx0, [r1], {46}	; 0x2e
    2d38:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    2d3c:	30053d1b 	andcc	r3, r5, fp, lsl sp
    2d40:	2e23052e 	cfsh64cs	mvdx0, mvdx3, #30
    2d44:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    2d48:	0e053d18 	mcreq	13, 0, r3, cr5, cr8, {0}
    2d4c:	3d24053f 	cfstr32cc	mvfx0, [r4, #-252]!	; 0xffffff04
    2d50:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    2d54:	1d05200e 	stcne	0, cr2, [r5, #-56]	; 0xffffffc8
    2d58:	2e38053d 	mrccs	5, 1, r0, cr8, cr13, {1}
    2d5c:	053c3f05 	ldreq	r3, [ip, #-3845]!	; 0xfffff0fb
    2d60:	17053c0e 	strne	r3, [r5, -lr, lsl #24]
    2d64:	3f14053d 	svccc	0x0014053d
    2d68:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    2d6c:	0e052e09 	cdpeq	14, 0, cr2, cr5, cr9, {0}
    2d70:	3d320531 	cfldr32cc	mvfx0, [r2, #-196]!	; 0xffffff3c
    2d74:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    2d78:	0e053c11 	mcreq	12, 0, r3, cr5, cr1, {0}
    2d7c:	3d1c0520 	cfldr32cc	mvfx0, [ip, #-128]	; 0xffffff80
    2d80:	052e3105 	streq	r3, [lr, #-261]!	; 0xfffffefb
    2d84:	0e052e24 	cdpeq	14, 0, cr2, cr5, cr4, {1}
    2d88:	3d16052e 	cfldr32cc	mvfx0, [r6, #-184]	; 0xffffff48
    2d8c:	05401405 	strbeq	r1, [r0, #-1029]	; 0xfffffbfb
    2d90:	09052e1b 	stmdbeq	r5, {r0, r1, r3, r4, r9, sl, fp, sp}
    2d94:	3324052e 			; <UNDEFINED> instruction: 0x3324052e
    2d98:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    2d9c:	3905591c 	stmdbcc	r5, {r2, r3, r4, r8, fp, ip, lr}
    2da0:	2018053c 	andscs	r0, r8, ip, lsr r5
    2da4:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
    2da8:	2605200e 	strcs	r2, [r5], -lr
    2dac:	2e4b053d 	mcrcs	5, 2, r0, cr11, cr13, {1}
    2db0:	053c5405 	ldreq	r5, [ip, #-1029]!	; 0xfffffbfb
    2db4:	0e052033 	mcreq	0, 0, r2, cr5, cr3, {1}
    2db8:	3d1d052e 	cfldr32cc	mvfx0, [sp, #-184]	; 0xffffff48
    2dbc:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    2dc0:	30055c0c 	andcc	r5, r5, ip, lsl #24
    2dc4:	2e23053d 	mcrcs	5, 1, r0, cr3, cr13, {1}
    2dc8:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    2dcc:	1a05200c 	bne	14ae04 <_Min_Stack_Size+0x14aa04>
    2dd0:	2e21053d 	mcrcs	5, 1, r0, cr1, cr13, {1}
    2dd4:	052e3b05 	streq	r3, [lr, #-2821]!	; 0xfffff4fb
    2dd8:	0c052e2e 	stceq	14, cr2, [r5], {46}	; 0x2e
    2ddc:	3d14052e 	cfldr32cc	mvfx0, [r4, #-184]	; 0xffffff48
    2de0:	2e1b0540 	cfmac32cs	mvfx0, mvfx11, mvfx0
    2de4:	3f2e0905 	svccc	0x002e0905
    2de8:	05d81605 	ldrbeq	r1, [r8, #1541]	; 0x605
    2dec:	0e052028 	cdpeq	0, 0, cr2, cr5, cr8, {1}
    2df0:	4b2c052e 	blmi	b042b0 <_Min_Stack_Size+0xb03eb0>
    2df4:	053c2005 	ldreq	r2, [ip, #-5]!
    2df8:	11052019 	tstne	r5, r9, lsl r0
    2dfc:	200e053c 	andcs	r0, lr, ip, lsr r5
    2e00:	053d1205 	ldreq	r1, [sp, #-517]!	; 0xfffffdfb
    2e04:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    2e08:	02004a01 	andeq	r4, r0, #4096	; 0x1000
    2e0c:	4a060304 	bmi	183a24 <_Min_Stack_Size+0x183624>
    2e10:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2e14:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    2e18:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    2e1c:	004a0904 	subeq	r0, sl, r4, lsl #18
    2e20:	4a0b0402 	bmi	2c3e30 <_Min_Stack_Size+0x2c3a30>
    2e24:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    2e28:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    2e2c:	02004a0f 	andeq	r4, r0, #61440	; 0xf000
    2e30:	002e1004 	eoreq	r1, lr, r4
    2e34:	2e0e0402 	cdpcs	4, 0, cr0, cr14, cr2, {0}
    2e38:	0c040200 	sfmeq	f0, 4, [r4], {-0}
    2e3c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2e40:	02002e0a 	andeq	r2, r0, #10, 28	; 0xa0
    2e44:	002e0804 	eoreq	r0, lr, r4, lsl #16
    2e48:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
    2e4c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    2e50:	0012052e 	andseq	r0, r2, lr, lsr #10
    2e54:	06020402 	streq	r0, [r2], -r2, lsl #8
    2e58:	0047052e 	subeq	r0, r7, lr, lsr #10
    2e5c:	20200402 	eorcs	r0, r0, r2, lsl #8
    2e60:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    2e64:	053c2004 	ldreq	r2, [ip, #-4]!
    2e68:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    2e6c:	0e052020 	cdpeq	0, 0, cr2, cr5, cr0, {1}
    2e70:	20040200 	andcs	r0, r4, r0, lsl #4
    2e74:	000f0520 	andeq	r0, pc, r0, lsr #10
    2e78:	3d200402 	cfstrscc	mvf0, [r0, #-8]!
    2e7c:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    2e80:	05202004 	streq	r2, [r0, #-4]!
    2e84:	04020028 	streq	r0, [r2], #-40	; 0xffffffd8
    2e88:	14052e20 	strne	r2, [r5], #-3616	; 0xfffff1e0
    2e8c:	20040200 	andcs	r0, r4, r0, lsl #4
    2e90:	000e054d 	andeq	r0, lr, sp, asr #10
    2e94:	20200402 	eorcs	r0, r0, r2, lsl #8
    2e98:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    2e9c:	052f2004 	streq	r2, [pc, #-4]!	; 2ea0 <_Min_Stack_Size+0x2aa0>
    2ea0:	0402000e 	streq	r0, [r2], #-14
    2ea4:	16052e20 	strne	r2, [r5], -r0, lsr #28
    2ea8:	20040200 	andcs	r0, r4, r0, lsl #4
    2eac:	001d053d 	andseq	r0, sp, sp, lsr r5
    2eb0:	2e200402 	cdpcs	4, 2, cr0, cr0, cr2, {0}
    2eb4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    2eb8:	052e2004 	streq	r2, [lr, #-4]!
    2ebc:	0d053010 	stceq	0, cr3, [r5, #-64]	; 0xffffffc0
    2ec0:	2013054c 	andscs	r0, r3, ip, asr #10
    2ec4:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    2ec8:	1105200e 	tstne	r5, lr
    2ecc:	2e0e052f 	cfsh32cs	mvfx0, mvfx14, #31
    2ed0:	053d1605 	ldreq	r1, [sp, #-1541]!	; 0xfffff9fb
    2ed4:	0b052e1d 	bleq	14e750 <_Min_Stack_Size+0x14e350>
    2ed8:	3010052e 	andscc	r0, r0, lr, lsr #10
    2edc:	054c0d05 	strbeq	r0, [ip, #-3333]	; 0xfffff2fb
    2ee0:	14052013 	strne	r2, [r5], #-19	; 0xffffffed
    2ee4:	200e0531 	andcs	r0, lr, r1, lsr r5
    2ee8:	052f1105 	streq	r1, [pc, #-261]!	; 2deb <_Min_Stack_Size+0x29eb>
    2eec:	16052e0e 	strne	r2, [r5], -lr, lsl #28
    2ef0:	2e1d053d 	mrccs	5, 0, r0, cr13, cr13, {1}
    2ef4:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    2ef8:	0d053010 	stceq	0, cr3, [r5, #-64]	; 0xffffffc0
    2efc:	2014054c 	andscs	r0, r4, ip, asr #10
    2f00:	200e0530 	andcs	r0, lr, r0, lsr r5
    2f04:	052f1105 	streq	r1, [pc, #-261]!	; 2e07 <_Min_Stack_Size+0x2a07>
    2f08:	16052e0e 	strne	r2, [r5], -lr, lsl #28
    2f0c:	2e1d053d 	mrccs	5, 0, r0, cr13, cr13, {1}
    2f10:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    2f14:	0d053010 	stceq	0, cr3, [r5, #-64]	; 0xffffffc0
    2f18:	2014054c 	andscs	r0, r4, ip, asr #10
    2f1c:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    2f20:	9c030204 	sfmls	f0, 4, [r3], {4}
    2f24:	03052e7f 	movweq	r2, #24191	; 0x5e7f
    2f28:	01040200 	mrseq	r0, R12_usr
    2f2c:	0301053c 	movweq	r0, #5436	; 0x153c
    2f30:	024a00e8 	subeq	r0, sl, #232	; 0xe8
    2f34:	0101001c 	tsteq	r1, ip, lsl r0
    2f38:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2f3c:	00000002 	andeq	r0, r0, r2
    2f40:	02a40300 	adceq	r0, r4, #0, 6
    2f44:	5a0c0501 	bpl	304350 <_Min_Stack_Size+0x303f50>
    2f48:	10052f2f 	andne	r2, r5, pc, lsr #30
    2f4c:	2e030534 	mcrcs	5, 0, r0, cr3, cr4, {1}
    2f50:	05231005 	streq	r1, [r3, #-5]!
    2f54:	07055a0f 	streq	r5, [r5, -pc, lsl #20]
    2f58:	5b13054c 	blpl	4c4490 <_Min_Stack_Size+0x4c4090>
    2f5c:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    2f60:	28052e0b 	stmdacs	r5, {r0, r1, r3, r9, sl, fp, sp}
    2f64:	3c1c054b 	cfldr32cc	mvfx0, [ip], {75}	; 0x4b
    2f68:	05201505 	streq	r1, [r0, #-1285]!	; 0xfffffafb
    2f6c:	12053c0b 	andne	r3, r5, #2816	; 0xb00
    2f70:	001d053d 	andseq	r0, sp, sp, lsr r5
    2f74:	4a010402 	bmi	43f84 <_Min_Stack_Size+0x43b84>
    2f78:	03040200 	movweq	r0, #16896	; 0x4200
    2f7c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    2f80:	004a0504 	subeq	r0, sl, r4, lsl #10
    2f84:	4a070402 	bmi	1c3f94 <_Min_Stack_Size+0x1c3b94>
    2f88:	09040200 	stmdbeq	r4, {r9}
    2f8c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    2f90:	02004a0b 	andeq	r4, r0, #45056	; 0xb000
    2f94:	004a0d04 	subeq	r0, sl, r4, lsl #26
    2f98:	4a0f0402 	bmi	3c3fa8 <_Min_Stack_Size+0x3c3ba8>
    2f9c:	10040200 	andne	r0, r4, r0, lsl #4
    2fa0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2fa4:	02002e0e 	andeq	r2, r0, #14, 28	; 0xe0
    2fa8:	002e0c04 	eoreq	r0, lr, r4, lsl #24
    2fac:	2e0a0402 	cdpcs	4, 0, cr0, cr10, cr2, {0}
    2fb0:	08040200 	stmdaeq	r4, {r9}
    2fb4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2fb8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2fbc:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    2fc0:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    2fc4:	052e0602 	streq	r0, [lr, #-1538]!	; 0xfffff9fe
    2fc8:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    2fcc:	3b052020 	blcc	14b054 <_Min_Stack_Size+0x14ac54>
    2fd0:	20040200 	andcs	r0, r4, r0, lsl #4
    2fd4:	0034053c 	eorseq	r0, r4, ip, lsr r5
    2fd8:	20200402 	eorcs	r0, r0, r2, lsl #8
    2fdc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    2fe0:	05202004 	streq	r2, [r0, #-4]!
    2fe4:	16053f13 			; <UNDEFINED> instruction: 0x16053f13
    2fe8:	2e13052e 	cfmul64cs	mvdx0, mvdx3, mvdx14
    2fec:	2e16053d 	mrccs	5, 0, r0, cr6, cr13, {1}
    2ff0:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    2ff4:	17053f14 	smladne	r5, r4, pc, r3	; <UNPREDICTABLE>
    2ff8:	2e14052e 	cfmul64cs	mvdx0, mvdx4, mvdx14
    2ffc:	2e17053d 	mrccs	5, 0, r0, cr7, cr13, {1}
    3000:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    3004:	1c053f28 	stcne	15, cr3, [r5], {40}	; 0x28
    3008:	200d053c 	andcs	r0, sp, ip, lsr r5
    300c:	054b2805 	strbeq	r2, [fp, #-2053]	; 0xfffff7fb
    3010:	2805662b 	stmdacs	r5, {r0, r1, r3, r5, r9, sl, sp, lr}
    3014:	7914052e 	ldmdbvc	r4, {r1, r2, r3, r5, r8, sl}
    3018:	052e3805 	streq	r3, [lr, #-2053]!	; 0xfffff7fb
    301c:	17052e2b 	strne	r2, [r5, -fp, lsr #28]
    3020:	2014053c 	andscs	r0, r4, ip, lsr r5
    3024:	053f2205 	ldreq	r2, [pc, #-517]!	; 2e27 <_Min_Stack_Size+0x2a27>
    3028:	4d056630 	stcmi	6, cr6, [r5, #-192]	; 0xffffff40
    302c:	202c053c 	eorcs	r0, ip, ip, lsr r5
    3030:	053c2505 	ldreq	r2, [ip, #-1285]!	; 0xfffffafb
    3034:	14052022 	strne	r2, [r5], #-34	; 0xffffffde
    3038:	2e380577 	mrccs	5, 1, r0, cr8, cr7, {3}
    303c:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    3040:	14053c17 	strne	r3, [r5], #-3095	; 0xfffff3e9
    3044:	3f160520 	svccc	0x00160520
    3048:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    304c:	16054a19 			; <UNDEFINED> instruction: 0x16054a19
    3050:	3f053f20 	svccc	0x00053f20
    3054:	2e32052e 	cdpcs	5, 3, cr0, cr2, cr14, {1}
    3058:	053c1905 	ldreq	r1, [ip, #-2309]!	; 0xfffff6fb
    305c:	36052016 			; <UNDEFINED> instruction: 0x36052016
    3060:	02040200 	andeq	r0, r4, #0, 4
    3064:	053c5703 	ldreq	r5, [ip, #-1795]!	; 0xfffff8fd
    3068:	04020003 	streq	r0, [r2], #-3
    306c:	01053c01 	tsteq	r5, r1, lsl #24
    3070:	024a2c03 	subeq	r2, sl, #768	; 0x300
    3074:	0101001a 	tsteq	r1, sl, lsl r0
    3078:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    307c:	00000002 	andeq	r0, r0, r2
    3080:	02f50300 	rscseq	r0, r5, #0, 6
    3084:	6c0c0501 	cfstr32vs	mvfx0, [ip], {1}
    3088:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    308c:	0f052e05 	svceq	0x00052e05
    3090:	0a054030 	beq	153158 <_Min_Stack_Size+0x152d58>
    3094:	21010530 	tstcs	r1, r0, lsr r5
    3098:	01000502 	tsteq	r0, r2, lsl #10
    309c:	00010501 	andeq	r0, r1, r1, lsl #10
    30a0:	00000205 	andeq	r0, r0, r5, lsl #4
    30a4:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    30a8:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    30ac:	3e110587 	cdpcc	5, 1, cr0, cr1, cr7, {4}
    30b0:	05420105 	strbeq	r0, [r2, #-261]	; 0xfffffefb
    30b4:	26051e13 			; <UNDEFINED> instruction: 0x26051e13
    30b8:	20110520 	andscs	r0, r1, r0, lsr #10
    30bc:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    30c0:	01010005 	tsteq	r1, r5
    30c4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    30c8:	00000002 	andeq	r0, r0, r2
    30cc:	03af0300 			; <UNDEFINED> instruction: 0x03af0300
    30d0:	6d070501 	cfstr32vs	mvfx0, [r7, #-4]
    30d4:	053f1705 	ldreq	r1, [pc, #-1797]!	; 29d7 <_Min_Stack_Size+0x25d7>
    30d8:	36053c23 	strcc	r3, [r5], -r3, lsr #24
    30dc:	2e3b0520 	cfabs64cs	mvdx0, mvdx11
    30e0:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    30e4:	0105200f 	tsteq	r5, pc
    30e8:	0005022f 	andeq	r0, r5, pc, lsr #4
    30ec:	01050101 	tsteq	r5, r1, lsl #2
    30f0:	00020500 	andeq	r0, r2, r0, lsl #10
    30f4:	03000000 	movweq	r0, #0
    30f8:	050103c8 	streq	r0, [r1, #-968]	; 0xfffffc38
    30fc:	07056711 	smladeq	r5, r1, r7, r6
    3100:	4c0f0542 	cfstr32mi	mvfx0, [pc], {66}	; 0x42
    3104:	0e053e3e 	mcreq	14, 0, r3, cr5, cr14, {1}
    3108:	2e07053e 	mcrcs	5, 0, r0, cr7, cr14, {1}
    310c:	05230b05 	streq	r0, [r3, #-2821]!	; 0xfffff4fb
    3110:	04052e12 	streq	r2, [r5], #-3602	; 0xfffff1ee
    3114:	300c052e 	andcc	r0, ip, lr, lsr #10
    3118:	22010532 	andcs	r0, r1, #209715200	; 0xc800000
    311c:	01000502 	tsteq	r0, r2, lsl #10
    3120:	00010501 	andeq	r0, r1, r1, lsl #10
    3124:	00000205 	andeq	r0, r0, r5, lsl #4
    3128:	ea030000 	b	c3130 <_Min_Stack_Size+0xc2d30>
    312c:	06050103 	streq	r0, [r5], -r3, lsl #2
    3130:	4a05055a 	bmi	1446a0 <_Min_Stack_Size+0x1442a0>
    3134:	01053d30 	tsteq	r5, r0, lsr sp
    3138:	0006024c 	andeq	r0, r6, ip, asr #4
    313c:	01050101 	tsteq	r5, r1, lsl #2
    3140:	00020500 	andeq	r0, r2, r0, lsl #10
    3144:	03000000 	movweq	r0, #0
    3148:	5e0103f9 	mcrpl	3, 0, r0, cr1, cr9, {7}
    314c:	01000502 	tsteq	r0, r2, lsl #10
    3150:	00158a01 	andseq	r8, r5, r1, lsl #20
    3154:	cd000300 	stcgt	3, cr0, [r0, #-0]
    3158:	02000001 	andeq	r0, r0, #1
    315c:	0d0efb01 	vstreq	d15, [lr, #-4]
    3160:	01010100 	mrseq	r0, (UNDEF: 17)
    3164:	00000001 	andeq	r0, r0, r1
    3168:	01000001 	tsteq	r0, r1
    316c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3170:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3174:	2f2e2e2f 	svccs	0x002e2e2f
    3178:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    317c:	2f737265 	svccs	0x00737265
    3180:	70696863 	rsbvc	r6, r9, r3, ror #16
    3184:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    3188:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    318c:	532f7878 			; <UNDEFINED> instruction: 0x532f7878
    3190:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    3194:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    3198:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    319c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    31a0:	2f726576 	svccs	0x00726576
    31a4:	00637273 	rsbeq	r7, r3, r3, ror r2
    31a8:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    31ac:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    31b0:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    31b4:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    31b8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    31bc:	61652d65 	cmnvs	r5, r5, ror #26
    31c0:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    31c4:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    31c8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    31cc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    31d0:	2f2e2e00 	svccs	0x002e2e00
    31d4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    31d8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    31dc:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    31e0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    31e4:	534d432f 	movtpl	r4, #54063	; 0xd32f
    31e8:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    31ec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    31f0:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    31f4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    31f8:	2f2e2e2f 	svccs	0x002e2e2f
    31fc:	642f2e2e 	strtvs	r2, [pc], #-3630	; 3204 <_Min_Stack_Size+0x2e04>
    3200:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    3204:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    3208:	5349534d 	movtpl	r5, #37709	; 0x934d
    320c:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    3210:	2f656369 	svccs	0x00656369
    3214:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    3218:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    321c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    3220:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    3224:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    3228:	2f2e2e00 	svccs	0x002e2e00
    322c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3230:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3234:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    3238:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    323c:	6968632f 	stmdbvs	r8!, {r0, r1, r2, r3, r5, r8, r9, sp, lr}^
    3240:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    3244:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    3248:	2f787834 	svccs	0x00787834
    324c:	334d5453 	movtcc	r5, #54355	; 0xd453
    3250:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    3254:	41485f78 	hvcmi	34296	; 0x85f8
    3258:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    325c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    3260:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3264:	74730000 	ldrbtvc	r0, [r3], #-0
    3268:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    326c:	5f787834 	svcpl	0x00787834
    3270:	5f6c6168 	svcpl	0x006c6168
    3274:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    3278:	0100632e 	tsteq	r0, lr, lsr #6
    327c:	74730000 	ldrbtvc	r0, [r3], #-0
    3280:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    3284:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3288:	6f630000 	svcvs	0x00630000
    328c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    3290:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    3294:	00000300 	andeq	r0, r0, r0, lsl #6
    3298:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    329c:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    32a0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    32a4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    32a8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    32ac:	74730000 	ldrbtvc	r0, [r3], #-0
    32b0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    32b4:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    32b8:	00682e78 	rsbeq	r2, r8, r8, ror lr
    32bc:	73000004 	movwvc	r0, #4
    32c0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    32c4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    32c8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    32cc:	74730000 	ldrbtvc	r0, [r3], #-0
    32d0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    32d4:	5f787834 	svcpl	0x00787834
    32d8:	5f6c6168 	svcpl	0x006c6168
    32dc:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    32e0:	00050068 	andeq	r0, r5, r8, rrx
    32e4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    32e8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    32ec:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    32f0:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 32f8 <_Min_Stack_Size+0x2ef8>
    32f4:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
    32f8:	00000500 	andeq	r0, r0, r0, lsl #10
    32fc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    3300:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    3304:	61685f78 	smcvs	34296	; 0x85f8
    3308:	61755f6c 	cmnvs	r5, ip, ror #30
    330c:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    3310:	00000500 	andeq	r0, r0, r0, lsl #10
    3314:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    3318:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    331c:	61685f78 	smcvs	34296	; 0x85f8
    3320:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    3324:	00000005 	andeq	r0, r0, r5
    3328:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    332c:	001b3802 	andseq	r3, fp, r2, lsl #16
    3330:	02e30308 	rsceq	r0, r3, #8, 6	; 0x20000000
    3334:	4c060501 	cfstr32mi	mvfx0, [r6], {1}
    3338:	033e0c05 	teqeq	lr, #1280	; 0x500
    333c:	06052e13 			; <UNDEFINED> instruction: 0x06052e13
    3340:	3111054a 	tstcc	r1, sl, asr #10
    3344:	0e030505 	cfsh32eq	mvfx0, mvfx3, #5
    3348:	4011054a 	andsmi	r0, r1, sl, asr #10
    334c:	854d0305 	strbhi	r0, [sp, #-773]	; 0xfffffcfb
    3350:	05858341 	streq	r8, [r5, #833]	; 0x341
    3354:	11058514 	tstne	r5, r4, lsl r5
    3358:	4b12053d 	blmi	484854 <_Min_Stack_Size+0x484454>
    335c:	054c0a05 	strbeq	r0, [ip, #-2565]	; 0xfffff5fb
    3360:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
    3364:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3368:	02050001 	andeq	r0, r5, #1
    336c:	00000000 	andeq	r0, r0, r0
    3370:	0103b003 	tsteq	r3, r3
    3374:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    3378:	05363e0c 	ldreq	r3, [r6, #-3596]!	; 0xfffff1f4
    337c:	11054a06 	tstne	r5, r6, lsl #20
    3380:	03050531 	movweq	r0, #21809	; 0x5531
    3384:	11054a0e 	tstne	r5, lr, lsl #20
    3388:	4d030540 	cfstr32mi	mvfx0, [r3, #-256]	; 0xffffff00
    338c:	85834185 	strhi	r4, [r3, #389]	; 0x185
    3390:	85140585 	ldrhi	r0, [r4, #-1413]	; 0xfffffa7b
    3394:	053d1105 	ldreq	r1, [sp, #-261]!	; 0xfffffefb
    3398:	0a054b12 	beq	155fe8 <_Min_Stack_Size+0x155be8>
    339c:	2101054c 	tstcs	r1, ip, asr #10
    33a0:	01000402 	tsteq	r0, r2, lsl #8
    33a4:	00010501 	andeq	r0, r1, r1, lsl #10
    33a8:	00000205 	andeq	r0, r0, r5, lsl #4
    33ac:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    33b0:	06050103 	streq	r0, [r5], -r3, lsl #2
    33b4:	3e0c055a 	cfrshl32cc	mvfx12, mvfx10, r0
    33b8:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    33bc:	11054a06 	tstne	r5, r6, lsl #20
    33c0:	03050531 	movweq	r0, #21809	; 0x5531
    33c4:	11054a0e 	tstne	r5, lr, lsl #20
    33c8:	4d030540 	cfstr32mi	mvfx0, [r3, #-256]	; 0xffffff00
    33cc:	85834185 	strhi	r4, [r3, #389]	; 0x185
    33d0:	05858385 	streq	r8, [r5, #901]	; 0x385
    33d4:	11058514 	tstne	r5, r4, lsl r5
    33d8:	4b12053d 	blmi	4848d4 <_Min_Stack_Size+0x4844d4>
    33dc:	054c0a05 	strbeq	r0, [ip, #-2565]	; 0xfffff5fb
    33e0:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
    33e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    33e8:	02050001 	andeq	r0, r5, #1
    33ec:	00000000 	andeq	r0, r0, r0
    33f0:	0104ca03 	tsteq	r4, r3, lsl #20
    33f4:	05760605 	ldrbeq	r0, [r6, #-1541]!	; 0xfffff9fb
    33f8:	0c033e0c 	stceq	14, cr3, [r3], {12}
    33fc:	4a06052e 	bmi	1848bc <_Min_Stack_Size+0x1844bc>
    3400:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    3404:	4a0e0305 	bmi	384020 <_Min_Stack_Size+0x383c20>
    3408:	05401105 	strbeq	r1, [r0, #-261]	; 0xfffffefb
    340c:	41854d03 	orrmi	r4, r5, r3, lsl #26
    3410:	85838583 	strhi	r8, [r3, #1411]	; 0x583
    3414:	14058583 	strne	r8, [r5], #-1411	; 0xfffffa7d
    3418:	3d110585 	cfldr32cc	mvfx0, [r1, #-532]	; 0xfffffdec
    341c:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    3420:	01054c0a 	tsteq	r5, sl, lsl #24
    3424:	00040221 	andeq	r0, r4, r1, lsr #4
    3428:	01050101 	tsteq	r5, r1, lsl #2
    342c:	00020500 	andeq	r0, r2, r0, lsl #10
    3430:	03000000 	movweq	r0, #0
    3434:	05010597 	streq	r0, [r1, #-1431]	; 0xfffffa69
    3438:	0c054c06 	stceq	12, cr4, [r5], {6}
    343c:	3411053e 	ldrcc	r0, [r1], #-1342	; 0xfffffac2
    3440:	034d0305 	movteq	r0, #54021	; 0xd305
    3444:	1405820b 	strne	r8, [r5], #-523	; 0xfffffdf5
    3448:	3d11053f 	cfldr32cc	mvfx0, [r1, #-252]	; 0xffffff04
    344c:	054b1205 	strbeq	r1, [fp, #-517]	; 0xfffffdfb
    3450:	03054b18 	movweq	r4, #23320	; 0x5b18
    3454:	4c0a053f 	cfstr32mi	mvfx0, [sl], {63}	; 0x3f
    3458:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    345c:	01010004 	tsteq	r1, r4
    3460:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3464:	00000002 	andeq	r0, r0, r2
    3468:	05c40300 	strbeq	r0, [r4, #768]	; 0x300
    346c:	05025001 	streq	r5, [r2, #-1]
    3470:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3474:	02050001 	andeq	r0, r5, #1
    3478:	00000000 	andeq	r0, r0, r0
    347c:	0105d303 	tsteq	r5, r3, lsl #6
    3480:	00050250 	andeq	r0, r5, r0, asr r2
    3484:	01050101 	tsteq	r5, r1, lsl #2
    3488:	00020500 	andeq	r0, r2, r0, lsl #10
    348c:	03000000 	movweq	r0, #0
    3490:	050108ed 	streq	r0, [r1, #-2285]	; 0xfffff713
    3494:	0531850c 	ldreq	r8, [r1, #-1292]!	; 0xfffffaf4
    3498:	08054a06 	stmdaeq	r5, {r1, r2, r9, fp, lr}
    349c:	00190530 	andseq	r0, r9, r0, lsr r5
    34a0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    34a4:	053e0f05 	ldreq	r0, [lr, #-3845]!	; 0xfffff0fb
    34a8:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    34ac:	58060104 	stmdapl	r6, {r2, r8}
    34b0:	02040200 	andeq	r0, r4, #0, 4
    34b4:	0016052e 	andseq	r0, r6, lr, lsr #10
    34b8:	06020402 	streq	r0, [r2], -r2, lsl #8
    34bc:	0013054c 	andseq	r0, r3, ip, asr #10
    34c0:	3d020402 	cfstrscc	mvf0, [r2, #-8]
    34c4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    34c8:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    34cc:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    34d0:	18053e02 	stmdane	r5, {r1, r9, sl, fp, ip, sp}
    34d4:	02040200 	andeq	r0, r4, #0, 4
    34d8:	0015053d 	andseq	r0, r5, sp, lsr r5
    34dc:	3f020402 	svccc	0x00020402
    34e0:	02000805 	andeq	r0, r0, #327680	; 0x50000
    34e4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    34e8:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    34ec:	38053c01 	stmdacc	r5, {r0, sl, fp, ip, sp}
    34f0:	01040200 	mrseq	r0, R12_usr
    34f4:	3013052e 	andscc	r0, r3, lr, lsr #10
    34f8:	052f402f 	streq	r4, [pc, #-47]!	; 34d1 <_Min_Stack_Size+0x30d1>
    34fc:	0b053205 	bleq	14fd18 <_Min_Stack_Size+0x14f918>
    3500:	0a05224c 	beq	14be38 <_Min_Stack_Size+0x14ba38>
    3504:	30100590 	mulscc	r0, r0, r5
    3508:	05300a05 	ldreq	r0, [r0, #-2565]!	; 0xfffff5fb
    350c:	1f053e2a 	svcne	0x00053e2a
    3510:	200e052e 	andcs	r0, lr, lr, lsr #10
    3514:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    3518:	14052e1d 	strne	r2, [r5], #-3613	; 0xfffff1e3
    351c:	4e290521 	cfsh64mi	mvdx0, mvdx9, #17
    3520:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    3524:	13052e1d 	movwne	r2, #24093	; 0x5e1d
    3528:	3e0c0521 	cfsh32cc	mvfx0, mvfx12, #17
    352c:	053c1905 	ldreq	r1, [ip, #-2309]!	; 0xfffff6fb
    3530:	4a700311 	bmi	1c0417c <_Min_Stack_Size+0x1c03d7c>
    3534:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
    3538:	2e130309 	cdpcs	3, 1, cr0, cr3, cr9, {0}
    353c:	05900805 	ldreq	r0, [r0, #2053]	; 0x805
    3540:	1305300e 	movwne	r3, #20494	; 0x500e
    3544:	4c0c0532 	cfstr32mi	mvfx0, [ip], {50}	; 0x32
    3548:	22010532 	andcs	r0, r1, #209715200	; 0xc800000
    354c:	01000402 	tsteq	r0, r2, lsl #8
    3550:	00010501 	andeq	r0, r1, r1, lsl #10
    3554:	00000205 	andeq	r0, r0, r5, lsl #4
    3558:	c5030000 	strgt	r0, [r3, #-0]
    355c:	0c050109 	stfeqs	f0, [r5], {9}
    3560:	06053185 	streq	r3, [r5], -r5, lsl #3
    3564:	3e08054a 	cfsh32cc	mvfx0, mvfx8, #42
    3568:	02001905 	andeq	r1, r0, #81920	; 0x14000
    356c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3570:	05053e0f 	streq	r3, [r5, #-3599]	; 0xfffff1f1
    3574:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    3578:	00580601 	subseq	r0, r8, r1, lsl #12
    357c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    3580:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    3584:	4c060204 	sfmmi	f0, 4, [r6], {4}
    3588:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    358c:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
    3590:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    3594:	11054b02 	tstne	r5, r2, lsl #22
    3598:	02040200 	andeq	r0, r4, #0, 4
    359c:	0017053f 	andseq	r0, r7, pc, lsr r5
    35a0:	3e020402 	cdpcc	4, 0, cr0, cr2, cr2, {0}
    35a4:	02001805 	andeq	r1, r0, #327680	; 0x50000
    35a8:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
    35ac:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    35b0:	08053f02 	stmdaeq	r5, {r1, r8, r9, sl, fp, ip, sp}
    35b4:	02040200 	andeq	r0, r4, #0, 4
    35b8:	0047052e 	subeq	r0, r7, lr, lsr #10
    35bc:	3c010402 	cfstrscc	mvf0, [r1], {2}
    35c0:	02003805 	andeq	r3, r0, #327680	; 0x50000
    35c4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    35c8:	402f3013 	eormi	r3, pc, r3, lsl r0	; <UNPREDICTABLE>
    35cc:	3205052f 	andcc	r0, r5, #197132288	; 0xbc00000
    35d0:	224d0b05 	subcs	r0, sp, #5120	; 0x1400
    35d4:	05900a05 	ldreq	r0, [r0, #2565]	; 0xa05
    35d8:	0a053010 	beq	14f620 <_Min_Stack_Size+0x14f220>
    35dc:	3e280530 	mcrcc	5, 1, r0, cr8, cr0, {1}
    35e0:	052e3205 	streq	r3, [lr, #-517]!	; 0xfffffdfb
    35e4:	16052018 			; <UNDEFINED> instruction: 0x16052018
    35e8:	2f14054a 	svccs	0x0014054a
    35ec:	054e1905 	strbeq	r1, [lr, #-2309]	; 0xfffff6fb
    35f0:	4c052e0c 	stcmi	14, cr2, [r5], {12}
    35f4:	01040200 	mrseq	r0, R12_usr
    35f8:	003c053c 	eorseq	r0, ip, ip, lsr r5
    35fc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3600:	02007e05 	andeq	r7, r0, #5, 28	; 0x50
    3604:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    3608:	0402006f 	streq	r0, [r2], #-111	; 0xffffff91
    360c:	28052e02 	stmdacs	r5, {r1, r9, sl, fp, sp}
    3610:	2e320530 	mrccs	5, 1, r0, cr2, cr0, {1}
    3614:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    3618:	28052017 	stmdacs	r5, {r0, r1, r2, r4, sp}
    361c:	2e320540 	cfneg32cs	mvfx0, mvfx2
    3620:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    3624:	13054a17 	movwne	r4, #23063	; 0x5a17
    3628:	3e0c0530 	cfmv64hrcc	mvdx12, r0
    362c:	053c1905 	ldreq	r1, [ip, #-2309]!	; 0xfffff6fb
    3630:	4a690311 	bmi	1a4427c <_Min_Stack_Size+0x1a43e7c>
    3634:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
    3638:	2e1b0314 	mrccs	3, 0, r0, cr11, cr4, {0}
    363c:	324c0c05 	subcc	r0, ip, #1280	; 0x500
    3640:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
    3644:	01010004 	tsteq	r1, r4
    3648:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    364c:	00000002 	andeq	r0, r0, r2
    3650:	0aa00300 	beq	fe804258 <__StackLimit+0xde7e4258>
    3654:	760c0501 	strvc	r0, [ip], -r1, lsl #10
    3658:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    365c:	19053008 	stmdbne	r5, {r3, ip, sp}
    3660:	01040200 	mrseq	r0, R12_usr
    3664:	3e0e053c 	mcrcc	5, 0, r0, cr14, cr12, {1}
    3668:	00320505 	eorseq	r0, r2, r5, lsl #10
    366c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3670:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    3674:	17052e02 	strne	r2, [r5, -r2, lsl #28]
    3678:	02040200 	andeq	r0, r4, #0, 4
    367c:	02004c06 	andeq	r4, r0, #1536	; 0x600
    3680:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
    3684:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    3688:	16053d02 	strne	r3, [r5], -r2, lsl #26
    368c:	02040200 	andeq	r0, r4, #0, 4
    3690:	0013053e 	andseq	r0, r3, lr, lsr r5
    3694:	3d020402 	cfstrscc	mvf0, [r2, #-8]
    3698:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    369c:	004d0204 	subeq	r0, sp, r4, lsl #4
    36a0:	4d020402 	cfstrsmi	mvf0, [r2, #-8]
    36a4:	02000c05 	andeq	r0, r0, #1280	; 0x500
    36a8:	32840204 	addcc	r0, r4, #4, 4	; 0x40000000
    36ac:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
    36b0:	01010005 	tsteq	r1, r5
    36b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    36b8:	00000002 	andeq	r0, r0, r2
    36bc:	0acd0300 	beq	ff3442c4 <__StackLimit+0xdf3242c4>
    36c0:	760c0501 	strvc	r0, [ip], -r1, lsl #10
    36c4:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    36c8:	19053008 	stmdbne	r5, {r3, ip, sp}
    36cc:	01040200 	mrseq	r0, R12_usr
    36d0:	3e0e053c 	mcrcc	5, 0, r0, cr14, cr12, {1}
    36d4:	00320505 	eorseq	r0, r2, r5, lsl #10
    36d8:	06010402 	streq	r0, [r1], -r2, lsl #8
    36dc:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    36e0:	1a052e02 	bne	14eef0 <_Min_Stack_Size+0x14eaf0>
    36e4:	02040200 	andeq	r0, r4, #0, 4
    36e8:	0c054d06 	stceq	13, cr4, [r5], {6}
    36ec:	02040200 	andeq	r0, r4, #0, 4
    36f0:	0105863e 	tsteq	r5, lr, lsr r6
    36f4:	00040222 	andeq	r0, r4, r2, lsr #4
    36f8:	01050101 	tsteq	r5, r1, lsl #2
    36fc:	00020500 	andeq	r0, r2, r0, lsl #10
    3700:	03000000 	movweq	r0, #0
    3704:	05010af0 	streq	r0, [r1, #-2800]	; 0xfffff510
    3708:	0605780c 	streq	r7, [r5], -ip, lsl #16
    370c:	3010054a 	andscc	r0, r0, sl, asr #10
    3710:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    3714:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    3718:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
    371c:	3205053e 	andcc	r0, r5, #260046848	; 0xf800000
    3720:	01040200 	mrseq	r0, R12_usr
    3724:	02005806 	andeq	r5, r0, #393216	; 0x60000
    3728:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    372c:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    3730:	004c0602 	subeq	r0, ip, r2, lsl #12
    3734:	3d020402 	cfstrscc	mvf0, [r2, #-8]
    3738:	02001805 	andeq	r1, r0, #327680	; 0x50000
    373c:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
    3740:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    3744:	13053e02 	movwne	r3, #24066	; 0x5e02
    3748:	02040200 	andeq	r0, r4, #0, 4
    374c:	000a053d 	andeq	r0, sl, sp, lsr r5
    3750:	4d020402 	cfstrsmi	mvf0, [r2, #-8]
    3754:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    3758:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    375c:	0402000a 	streq	r0, [r2], #-10
    3760:	29053102 	stmdbcs	r5, {r1, r8, ip, sp}
    3764:	02040200 	andeq	r0, r4, #0, 4
    3768:	000a052e 	andeq	r0, sl, lr, lsr #10
    376c:	31020402 	tstcc	r2, r2, lsl #8
    3770:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    3774:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    3778:	0402000a 	streq	r0, [r2], #-10
    377c:	26053102 	strcs	r3, [r5], -r2, lsl #2
    3780:	02040200 	andeq	r0, r4, #0, 4
    3784:	0009052e 	andeq	r0, r9, lr, lsr #10
    3788:	31020402 	tstcc	r2, r2, lsl #8
    378c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3790:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
    3794:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    3798:	41054a02 	tstmi	r5, r2, lsl #20
    379c:	02040200 	andeq	r0, r4, #0, 4
    37a0:	0005052e 	andeq	r0, r5, lr, lsr #10
    37a4:	20020402 	andcs	r0, r2, r2, lsl #8
    37a8:	02040200 	andeq	r0, r4, #0, 4
    37ac:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
    37b0:	02005b02 	andeq	r5, r0, #2048	; 0x800
    37b4:	054e0204 	strbeq	r0, [lr, #-516]	; 0xfffffdfc
    37b8:	0402000c 	streq	r0, [r2], #-12
    37bc:	05328402 	ldreq	r8, [r2, #-1026]!	; 0xfffffbfe
    37c0:	0a022201 	beq	8bfcc <_Min_Stack_Size+0x8bbcc>
    37c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    37c8:	02050001 	andeq	r0, r5, #1
    37cc:	00000000 	andeq	r0, r0, r0
    37d0:	010bb403 	tsteq	fp, r3, lsl #8
    37d4:	05760c05 	ldrbeq	r0, [r6, #-3077]!	; 0xfffff3fb
    37d8:	08054a06 	stmdaeq	r5, {r1, r2, r9, fp, lr}
    37dc:	00190530 	andseq	r0, r9, r0, lsr r5
    37e0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    37e4:	053e0e05 	ldreq	r0, [lr, #-3589]!	; 0xfffff1fb
    37e8:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    37ec:	58060104 	stmdapl	r6, {r2, r8}
    37f0:	02040200 	andeq	r0, r4, #0, 4
    37f4:	001a052e 	andseq	r0, sl, lr, lsr #10
    37f8:	06020402 	streq	r0, [r2], -r2, lsl #8
    37fc:	000c054d 	andeq	r0, ip, sp, asr #10
    3800:	3e020402 	cdpcc	4, 0, cr0, cr2, cr2, {0}
    3804:	22010586 	andcs	r0, r1, #562036736	; 0x21800000
    3808:	01000402 	tsteq	r0, r2, lsl #8
    380c:	00010501 	andeq	r0, r1, r1, lsl #10
    3810:	00000205 	andeq	r0, r0, r5, lsl #4
    3814:	d2030000 	andle	r0, r3, #0
    3818:	0c05010b 	stfeqs	f0, [r5], {11}
    381c:	3103054b 	tstcc	r3, fp, asr #10
    3820:	01040200 	mrseq	r0, R12_usr
    3824:	02005806 	andeq	r5, r0, #393216	; 0x60000
    3828:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    382c:	04020010 	streq	r0, [r2], #-16
    3830:	054c0602 	strbeq	r0, [ip, #-1538]	; 0xfffff9fe
    3834:	0402000e 	streq	r0, [r2], #-14
    3838:	0d059e02 	stceq	14, cr9, [r5, #-8]
    383c:	02040200 	andeq	r0, r4, #0, 4
    3840:	00060521 	andeq	r0, r6, r1, lsr #10
    3844:	4a020402 	bmi	84854 <_Min_Stack_Size+0x84454>
    3848:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    384c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3850:	10053f05 	andne	r3, r5, r5, lsl #30
    3854:	9e0e0585 	cfsh32ls	mvfx0, mvfx14, #-59
    3858:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    385c:	32054a06 	andcc	r4, r5, #24576	; 0x6000
    3860:	01040200 	mrseq	r0, R12_usr
    3864:	3f05052e 	svccc	0x0005052e
    3868:	03058583 	movweq	r8, #21891	; 0x5583
    386c:	4c0a0586 	cfstr32mi	mvfx0, [sl], {134}	; 0x86
    3870:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    3874:	01010005 	tsteq	r1, r5
    3878:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    387c:	00000002 	andeq	r0, r0, r2
    3880:	0bf70300 	bleq	ffdc4488 <__StackLimit+0xdfda4488>
    3884:	4c030501 	cfstr32mi	mvfx0, [r3], {1}
    3888:	01040200 	mrseq	r0, R12_usr
    388c:	02005806 	andeq	r5, r0, #393216	; 0x60000
    3890:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    3894:	0402000c 	streq	r0, [r2], #-12
    3898:	054c0602 	strbeq	r0, [ip, #-1538]	; 0xfffff9fe
    389c:	04020006 	streq	r0, [r2], #-6
    38a0:	05054a02 	streq	r4, [r5, #-2562]	; 0xfffff5fe
    38a4:	850c0531 	strhi	r0, [ip, #-1329]	; 0xfffffacf
    38a8:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    38ac:	83af3105 			; <UNDEFINED> instruction: 0x83af3105
    38b0:	86030585 	strhi	r0, [r3], -r5, lsl #11
    38b4:	054c0a05 	strbeq	r0, [ip, #-2565]	; 0xfffff5fb
    38b8:	05022101 	streq	r2, [r2, #-257]	; 0xfffffeff
    38bc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    38c0:	02050001 	andeq	r0, r5, #1
    38c4:	00000000 	andeq	r0, r0, r0
    38c8:	010c9b03 	tsteq	ip, r3, lsl #22
    38cc:	054b0c05 	strbeq	r0, [fp, #-3077]	; 0xfffff3fb
    38d0:	0e053610 	mcreq	6, 0, r3, cr5, cr0, {0}
    38d4:	210d059e 			; <UNDEFINED> instruction: 0x210d059e
    38d8:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    38dc:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    38e0:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    38e4:	850e053e 	strhi	r0, [lr, #-1342]	; 0xfffffac2
    38e8:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    38ec:	05053007 	streq	r3, [r5, #-7]
    38f0:	4010055a 	andsmi	r0, r0, sl, asr r5
    38f4:	059e0e05 	ldreq	r0, [lr, #3589]	; 0xe05
    38f8:	0605210d 	streq	r2, [r5], -sp, lsl #2
    38fc:	0032054a 	eorseq	r0, r2, sl, asr #10
    3900:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3904:	053e0505 	ldreq	r0, [lr, #-1285]!	; 0xfffffafb
    3908:	0805850e 	stmdaeq	r5, {r1, r2, r3, r8, sl, pc}
    390c:	3007052e 	andcc	r0, r7, lr, lsr #10
    3910:	055a0505 	ldrbeq	r0, [sl, #-1285]	; 0xfffffafb
    3914:	01053f0a 	tsteq	r5, sl, lsl #30
    3918:	00040221 	andeq	r0, r4, r1, lsr #4
    391c:	01050101 	tsteq	r5, r1, lsl #2
    3920:	00020500 	andeq	r0, r2, r0, lsl #10
    3924:	03000000 	movweq	r0, #0
    3928:	05010cd2 	streq	r0, [r1, #-3282]	; 0xfffff32e
    392c:	0605880c 	streq	r8, [r5], -ip, lsl #16
    3930:	3e08054a 	cfsh32cc	mvfx0, mvfx8, #42
    3934:	02001905 	andeq	r1, r0, #81920	; 0x14000
    3938:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    393c:	05053e0f 	streq	r3, [r5, #-3599]	; 0xfffff1f1
    3940:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    3944:	00580601 	subseq	r0, r8, r1, lsl #12
    3948:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    394c:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    3950:	4c060204 	sfmmi	f0, 4, [r6], {4}
    3954:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    3958:	053d0204 	ldreq	r0, [sp, #-516]!	; 0xfffffdfc
    395c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    3960:	11054b02 	tstne	r5, r2, lsl #22
    3964:	02040200 	andeq	r0, r4, #0, 4
    3968:	0018053f 	andseq	r0, r8, pc, lsr r5
    396c:	3e020402 	cdpcc	4, 0, cr0, cr2, cr2, {0}
    3970:	02040200 	andeq	r0, r4, #0, 4
    3974:	0015053d 	andseq	r0, r5, sp, lsr r5
    3978:	3f020402 	svccc	0x00020402
    397c:	02000805 	andeq	r0, r0, #327680	; 0x50000
    3980:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    3984:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    3988:	38053c01 	stmdacc	r5, {r0, sl, fp, ip, sp}
    398c:	01040200 	mrseq	r0, R12_usr
    3990:	3013052e 	andscc	r0, r3, lr, lsr #10
    3994:	052f402f 	streq	r4, [pc, #-47]!	; 396d <_Min_Stack_Size+0x356d>
    3998:	0c053105 	stfeqs	f3, [r5], {5}
    399c:	3f0b054d 	svccc	0x000b054d
    39a0:	580a0523 	stmdapl	sl, {r0, r1, r5, r8, sl}
    39a4:	05310905 	ldreq	r0, [r1, #-2309]!	; 0xfffff6fb
    39a8:	0c05b00d 	stceq	0, cr11, [r5], {13}
    39ac:	301a052e 	andscc	r0, sl, lr, lsr #10
    39b0:	054c1205 	strbeq	r1, [ip, #-517]	; 0xfffffdfb
    39b4:	0a05330b 	beq	1505e8 <_Min_Stack_Size+0x1501e8>
    39b8:	300c0558 	andcc	r0, ip, r8, asr r5
    39bc:	053e2a05 	ldreq	r2, [lr, #-2565]!	; 0xfffff5fb
    39c0:	1a052e34 	bne	14f298 <_Min_Stack_Size+0x14ee98>
    39c4:	4a180520 	bmi	604e4c <_Min_Stack_Size+0x604a4c>
    39c8:	052f1605 	streq	r1, [pc, #-1541]!	; 33cb <_Min_Stack_Size+0x2fcb>
    39cc:	0f054e1c 	svceq	0x00054e1c
    39d0:	004f052e 	subeq	r0, pc, lr, lsr #10
    39d4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    39d8:	02003f05 	andeq	r3, r0, #5, 30
    39dc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    39e0:	02000181 	andeq	r0, r0, #1073741856	; 0x40000020
    39e4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    39e8:	04020072 	streq	r0, [r2], #-114	; 0xffffff8e
    39ec:	2b052e02 	blcs	14f1fc <_Min_Stack_Size+0x14edfc>
    39f0:	2e350530 	mrccs	5, 1, r0, cr5, cr0, {1}
    39f4:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    39f8:	2b05201a 	blcs	14ba68 <_Min_Stack_Size+0x14b668>
    39fc:	2e350540 	cfneg32cs	mvfx0, mvfx5
    3a00:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    3a04:	15054a1a 	strne	r4, [r5, #-2586]	; 0xfffff5e6
    3a08:	3f100531 	svccc	0x00100531
    3a0c:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    3a10:	0a053c1b 	beq	152a84 <_Min_Stack_Size+0x152684>
    3a14:	4c0f054e 	cfstr32mi	mvfx0, [pc], {78}	; 0x4e
    3a18:	053c1d05 	ldreq	r1, [ip, #-3333]!	; 0xfffff2fb
    3a1c:	35052e0c 	strcc	r2, [r5, #-3596]	; 0xfffff1f4
    3a20:	01040200 	mrseq	r0, R12_usr
    3a24:	3e1a053c 	mrccc	5, 0, r0, cr10, cr12, {1}
    3a28:	054c1205 	strbeq	r1, [ip, #-517]	; 0xfffffdfb
    3a2c:	2e4d0311 	mcrcs	3, 2, r0, cr13, cr1, {0}
    3a30:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
    3a34:	2e390313 	mrccs	3, 1, r0, cr9, cr3, {0}
    3a38:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    3a3c:	0c053c20 	stceq	12, cr3, [r5], {32}
    3a40:	3014052e 	andscc	r0, r4, lr, lsr #10
    3a44:	324c0c05 	subcc	r0, ip, #1280	; 0x500
    3a48:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
    3a4c:	01010004 	tsteq	r1, r4
    3a50:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3a54:	00000002 	andeq	r0, r0, r2
    3a58:	0dd00300 	ldcleq	3, cr0, [r0]
    3a5c:	780c0501 	stmdavc	ip, {r0, r8, sl}
    3a60:	054a0605 	strbeq	r0, [sl, #-1541]	; 0xfffff9fb
    3a64:	19053008 	stmdbne	r5, {r3, ip, sp}
    3a68:	01040200 	mrseq	r0, R12_usr
    3a6c:	3e0e053c 	mcrcc	5, 0, r0, cr14, cr12, {1}
    3a70:	00310505 	eorseq	r0, r1, r5, lsl #10
    3a74:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a78:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    3a7c:	1a052e02 	bne	14f28c <_Min_Stack_Size+0x14ee8c>
    3a80:	02040200 	andeq	r0, r4, #0, 4
    3a84:	0f054d06 	svceq	0x00054d06
    3a88:	02040200 	andeq	r0, r4, #0, 4
    3a8c:	0008053e 	andeq	r0, r8, lr, lsr r5
    3a90:	85020402 	strhi	r0, [r2, #-1026]	; 0xfffffbfe
    3a94:	053e1005 	ldreq	r1, [lr, #-5]!
    3a98:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3a9c:	1005ad30 	andne	sl, r5, r0, lsr sp
    3aa0:	320c0598 	andcc	r0, ip, #152, 10	; 0x26000000
    3aa4:	22010532 	andcs	r0, r1, #209715200	; 0xc800000
    3aa8:	01000402 	tsteq	r0, r2, lsl #8
    3aac:	00010501 	andeq	r0, r1, r1, lsl #10
    3ab0:	00000205 	andeq	r0, r0, r5, lsl #4
    3ab4:	8d030000 	stchi	0, cr0, [r3, #-0]
    3ab8:	0c05010e 	stfeqs	f0, [r5], {14}
    3abc:	4a060578 	bmi	1850a4 <_Min_Stack_Size+0x184ca4>
    3ac0:	05300805 	ldreq	r0, [r0, #-2053]!	; 0xfffff7fb
    3ac4:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    3ac8:	0e053c01 	cdpeq	12, 0, cr3, cr5, cr1, {0}
    3acc:	3105053e 	tstcc	r5, lr, lsr r5
    3ad0:	01040200 	mrseq	r0, R12_usr
    3ad4:	02005806 	andeq	r5, r0, #393216	; 0x60000
    3ad8:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    3adc:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    3ae0:	054d0602 	strbeq	r0, [sp, #-1538]	; 0xfffff9fe
    3ae4:	0402000f 	streq	r0, [r2], #-15
    3ae8:	08053e02 	stmdaeq	r5, {r1, r9, sl, fp, ip, sp}
    3aec:	02040200 	andeq	r0, r4, #0, 4
    3af0:	3e100585 	cdpcc	5, 1, cr0, cr0, cr5, {4}
    3af4:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    3af8:	05ad3009 	streq	r3, [sp, #9]!
    3afc:	0c059810 	stceq	8, cr9, [r5], {16}
    3b00:	01053232 	tsteq	r5, r2, lsr r2
    3b04:	00040222 	andeq	r0, r4, r2, lsr #4
    3b08:	01050101 	tsteq	r5, r1, lsl #2
    3b0c:	00020500 	andeq	r0, r2, r0, lsl #10
    3b10:	03000000 	movweq	r0, #0
    3b14:	05010ec6 	streq	r0, [r1, #-3782]	; 0xfffff13a
    3b18:	05834c03 	streq	r4, [r3, #3075]	; 0xc03
    3b1c:	0605850c 	streq	r8, [r5], -ip, lsl #10
    3b20:	3005052e 	andcc	r0, r5, lr, lsr #10
    3b24:	05860705 	streq	r0, [r6, #1797]	; 0x705
    3b28:	05055806 	streq	r5, [r5, #-2054]	; 0xfffff7fa
    3b2c:	850e0530 	strhi	r0, [lr, #-1328]	; 0xfffffad0
    3b30:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    3b34:	2805320c 	stmdacs	r5, {r2, r3, r9, ip, sp}
    3b38:	300b052e 	andcc	r0, fp, lr, lsr #10
    3b3c:	05660a05 	strbeq	r0, [r6, #-2565]!	; 0xfffff5fb
    3b40:	0c05300d 	stceq	0, cr3, [r5], {13}
    3b44:	311c0566 	tstcc	ip, r6, ror #10
    3b48:	053e1205 	ldreq	r1, [lr, #-517]!	; 0xfffffdfb
    3b4c:	06053507 	streq	r3, [r5], -r7, lsl #10
    3b50:	30050558 	andcc	r0, r5, r8, asr r5
    3b54:	05850e05 	streq	r0, [r5, #3589]	; 0xe05
    3b58:	0c052e08 	stceq	14, cr2, [r5], {8}
    3b5c:	2e280532 	mcrcs	5, 1, r0, cr8, cr2, {1}
    3b60:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
    3b64:	0d05660a 	stceq	6, cr6, [r5, #-40]	; 0xffffffd8
    3b68:	660c0530 			; <UNDEFINED> instruction: 0x660c0530
    3b6c:	05311c05 	ldreq	r1, [r1, #-3077]!	; 0xfffff3fb
    3b70:	16053e12 			; <UNDEFINED> instruction: 0x16053e12
    3b74:	14053d35 	strne	r3, [r5], #-3381	; 0xfffff2cb
    3b78:	3f12053f 	svccc	0x0012053f
    3b7c:	054b1105 	strbeq	r1, [fp, #-261]	; 0xfffffefb
    3b80:	0a054b18 	beq	1567e8 <_Min_Stack_Size+0x1563e8>
    3b84:	2101053e 	tstcs	r1, lr, lsr r5
    3b88:	01000402 	tsteq	r0, r2, lsl #8
    3b8c:	00010501 	andeq	r0, r1, r1, lsl #10
    3b90:	00000205 	andeq	r0, r0, r5, lsl #4
    3b94:	9f030000 	svcls	0x00030000
    3b98:	0305010f 	movweq	r0, #20751	; 0x510f
    3b9c:	8507054c 	strhi	r0, [r7, #-1356]	; 0xfffffab4
    3ba0:	05580605 	ldrbeq	r0, [r8, #-1541]	; 0xfffff9fb
    3ba4:	0e053005 	cdpeq	0, 0, cr3, cr5, cr5, {0}
    3ba8:	2e080585 	cfsh32cs	mvfx0, mvfx8, #-59
    3bac:	05320c05 	ldreq	r0, [r2, #-3077]!	; 0xfffff3fb
    3bb0:	0b052e28 	bleq	14f458 <_Min_Stack_Size+0x14f058>
    3bb4:	660a0530 			; <UNDEFINED> instruction: 0x660a0530
    3bb8:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    3bbc:	1c05660c 	stcne	6, cr6, [r5], {12}
    3bc0:	3e120531 	mrccc	5, 0, r0, cr2, cr1, {1}
    3bc4:	05351605 	ldreq	r1, [r5, #-1541]!	; 0xfffff9fb
    3bc8:	0a053f11 	beq	153814 <_Min_Stack_Size+0x153414>
    3bcc:	2101054c 	tstcs	r1, ip, asr #10
    3bd0:	01000402 	tsteq	r0, r2, lsl #8
    3bd4:	00010501 	andeq	r0, r1, r1, lsl #10
    3bd8:	00000205 	andeq	r0, r0, r5, lsl #4
    3bdc:	d2030000 	andle	r0, r3, #0
    3be0:	0305010f 	movweq	r0, #20751	; 0x510f
    3be4:	0c05834c 	stceq	3, cr8, [r5], {76}	; 0x4c
    3be8:	2e060585 	cfsh32cs	mvfx0, mvfx6, #-59
    3bec:	05300505 	ldreq	r0, [r0, #-1285]!	; 0xfffffafb
    3bf0:	06058607 	streq	r8, [r5], -r7, lsl #12
    3bf4:	30050558 	andcc	r0, r5, r8, asr r5
    3bf8:	05850e05 	streq	r0, [r5, #3589]	; 0xe05
    3bfc:	0c052e08 	stceq	14, cr2, [r5], {8}
    3c00:	2e280532 	mcrcs	5, 1, r0, cr8, cr2, {1}
    3c04:	05300b05 	ldreq	r0, [r0, #-2821]!	; 0xfffff4fb
    3c08:	0d05660a 	stceq	6, cr6, [r5, #-40]	; 0xffffffd8
    3c0c:	660c0530 			; <UNDEFINED> instruction: 0x660c0530
    3c10:	05311c05 	ldreq	r1, [r1, #-3077]!	; 0xfffff3fb
    3c14:	16053e12 			; <UNDEFINED> instruction: 0x16053e12
    3c18:	3f120535 	svccc	0x00120535
    3c1c:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    3c20:	01053e0a 	tsteq	r5, sl, lsl #28
    3c24:	00040221 	andeq	r0, r4, r1, lsr #4
    3c28:	01050101 	tsteq	r5, r1, lsl #2
    3c2c:	00020500 	andeq	r0, r2, r0, lsl #10
    3c30:	03000000 	movweq	r0, #0
    3c34:	0501108f 	streq	r1, [r1, #-143]	; 0xffffff71
    3c38:	03054b0c 	movweq	r4, #23308	; 0x5b0c
    3c3c:	0c058331 	stceq	3, cr8, [r5], {49}	; 0x31
    3c40:	2e060585 	cfsh32cs	mvfx0, mvfx6, #-59
    3c44:	05300505 	ldreq	r0, [r0, #-1285]!	; 0xfffffafb
    3c48:	0605880c 	streq	r8, [r5], -ip, lsl #16
    3c4c:	3209052e 	andcc	r0, r9, #192937984	; 0xb800000
    3c50:	05580805 	ldrbeq	r0, [r8, #-2053]	; 0xfffff7fb
    3c54:	2805300c 	stmdacs	r5, {r2, r3, ip, sp}
    3c58:	400c052e 	andmi	r0, ip, lr, lsr #10
    3c5c:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
    3c60:	0605320c 	streq	r3, [r5], -ip, lsl #4
    3c64:	3209052e 	andcc	r0, r9, #192937984	; 0xb800000
    3c68:	05580805 	ldrbeq	r0, [r8, #-2053]	; 0xfffff7fb
    3c6c:	2805300c 	stmdacs	r5, {r2, r3, ip, sp}
    3c70:	400c052e 	andmi	r0, ip, lr, lsr #10
    3c74:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
    3c78:	06053307 	streq	r3, [r5], -r7, lsl #6
    3c7c:	31050558 	tstcc	r5, r8, asr r5
    3c80:	05850e05 	streq	r0, [r5, #3589]	; 0xe05
    3c84:	0b052e08 	bleq	14f4ac <_Min_Stack_Size+0x14f0ac>
    3c88:	660a0534 			; <UNDEFINED> instruction: 0x660a0534
    3c8c:	05300e05 	ldreq	r0, [r0, #-3589]!	; 0xfffff1fb
    3c90:	13052e2a 	movwne	r2, #24106	; 0x5e2a
    3c94:	34070540 	strcc	r0, [r7], #-1344	; 0xfffffac0
    3c98:	05580605 	ldrbeq	r0, [r8, #-1541]	; 0xfffff9fb
    3c9c:	0e053005 	cdpeq	0, 0, cr3, cr5, cr5, {0}
    3ca0:	2e080585 	cfsh32cs	mvfx0, mvfx8, #-59
    3ca4:	05340b05 	ldreq	r0, [r4, #-2821]!	; 0xfffff4fb
    3ca8:	0e05660a 	cfmadd32eq	mvax0, mvfx6, mvfx5, mvfx10
    3cac:	2e2a0530 	mcrcs	5, 1, r0, cr10, cr0, {1}
    3cb0:	402f1305 	eormi	r1, pc, r5, lsl #6
    3cb4:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
    3cb8:	053d3f18 	ldreq	r3, [sp, #-3864]!	; 0xfffff0e8
    3cbc:	14053f16 	strne	r3, [r5], #-3862	; 0xfffff0ea
    3cc0:	1a054b3f 	bne	1569c4 <_Min_Stack_Size+0x1565c4>
    3cc4:	4405054b 	strmi	r0, [r5], #-1355	; 0xfffffab5
    3cc8:	05400a05 	strbeq	r0, [r0, #-2565]	; 0xfffff5fb
    3ccc:	09022101 	stmdbeq	r2, {r0, r8, sp}
    3cd0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3cd4:	02050001 	andeq	r0, r5, #1
    3cd8:	00000000 	andeq	r0, r0, r0
    3cdc:	01119603 	tsteq	r1, r3, lsl #12
    3ce0:	054c0305 	strbeq	r0, [ip, #-773]	; 0xfffffcfb
    3ce4:	06058507 	streq	r8, [r5], -r7, lsl #10
    3ce8:	30050558 	andcc	r0, r5, r8, asr r5
    3cec:	05850e05 	streq	r0, [r5, #3589]	; 0xe05
    3cf0:	0c052e08 	stceq	14, cr2, [r5], {8}
    3cf4:	2e280532 	mcrcs	5, 1, r0, cr8, cr2, {1}
    3cf8:	05310b05 	ldreq	r0, [r1, #-2821]!	; 0xfffff4fb
    3cfc:	0e05660a 	cfmadd32eq	mvax0, mvfx6, mvfx5, mvfx10
    3d00:	2e160531 	mrccs	5, 0, r0, cr6, cr1, {1}
    3d04:	05202f05 	streq	r2, [r0, #-3845]!	; 0xfffff0fb
    3d08:	1a052e09 	bne	14f534 <_Min_Stack_Size+0x14f134>
    3d0c:	3f150542 	svccc	0x00150542
    3d10:	05520705 	ldrbeq	r0, [r2, #-1797]	; 0xfffff8fb
    3d14:	13055118 	movwne	r5, #20760	; 0x5118
    3d18:	5205053f 	andpl	r0, r5, #264241152	; 0xfc00000
    3d1c:	05400a05 	strbeq	r0, [r0, #-2565]	; 0xfffff5fb
    3d20:	07022101 	streq	r2, [r2, -r1, lsl #2]
    3d24:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d28:	02050001 	andeq	r0, r5, #1
    3d2c:	00000000 	andeq	r0, r0, r0
    3d30:	0111e303 	tsteq	r1, r3, lsl #6
    3d34:	834c0305 	movthi	r0, #49925	; 0xc305
    3d38:	05850c05 	streq	r0, [r5, #3077]	; 0xc05
    3d3c:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    3d40:	86070530 			; <UNDEFINED> instruction: 0x86070530
    3d44:	05580605 	ldrbeq	r0, [r8, #-1541]	; 0xfffff9fb
    3d48:	0e053005 	cdpeq	0, 0, cr3, cr5, cr5, {0}
    3d4c:	2e080585 	cfsh32cs	mvfx0, mvfx8, #-59
    3d50:	05320c05 	ldreq	r0, [r2, #-3077]!	; 0xfffff3fb
    3d54:	0b052e28 	bleq	14f5fc <_Min_Stack_Size+0x14f1fc>
    3d58:	660a0531 			; <UNDEFINED> instruction: 0x660a0531
    3d5c:	05310e05 	ldreq	r0, [r1, #-3589]!	; 0xfffff1fb
    3d60:	2f052e16 	svccs	0x00052e16
    3d64:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
    3d68:	05421a05 	strbeq	r1, [r2, #-2565]	; 0xfffff5fb
    3d6c:	1c053f16 	stcne	15, cr3, [r5], {22}
    3d70:	4407054b 	strmi	r0, [r7], #-1355	; 0xfffffab5
    3d74:	05511805 	ldrbeq	r1, [r1, #-2053]	; 0xfffff7fb
    3d78:	1a053f14 	bne	1539d0 <_Min_Stack_Size+0x1535d0>
    3d7c:	4405054b 	strmi	r0, [r5], #-1355	; 0xfffffab5
    3d80:	05400a05 	strbeq	r0, [r0, #-2565]	; 0xfffff5fb
    3d84:	07022101 	streq	r2, [r2, -r1, lsl #2]
    3d88:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d8c:	02050001 	andeq	r0, r5, #1
    3d90:	00000000 	andeq	r0, r0, r0
    3d94:	0112b103 	tsteq	r2, r3, lsl #2
    3d98:	054b1905 	strbeq	r1, [fp, #-2309]	; 0xfffff6fb
    3d9c:	19052e0c 	stmdbne	r5, {r2, r3, r9, sl, fp, sp}
    3da0:	2e0c052f 	cfsh32cs	mvfx0, mvfx12, #31
    3da4:	052f1905 	streq	r1, [pc, #-2309]!	; 34a7 <_Min_Stack_Size+0x30a7>
    3da8:	2f2f2e0c 	svccs	0x002f2e0c
    3dac:	05310e05 	ldreq	r0, [r1, #-3589]!	; 0xfffff1fb
    3db0:	14054b06 	strne	r4, [r5], #-2822	; 0xfffff4fa
    3db4:	3c08053f 	cfstr32cc	mvfx0, [r8], {63}	; 0x3f
    3db8:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    3dbc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3dc0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3dc4:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    3dc8:	06053d30 			; <UNDEFINED> instruction: 0x06053d30
    3dcc:	002a0525 	eoreq	r0, sl, r5, lsr #10
    3dd0:	4a010402 	bmi	44de0 <_Min_Stack_Size+0x449e0>
    3dd4:	02001d05 	andeq	r1, r0, #320	; 0x140
    3dd8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3ddc:	04020051 	streq	r0, [r2], #-81	; 0xffffffaf
    3de0:	45052e02 	strmi	r2, [r5, #-3586]	; 0xfffff1fe
    3de4:	02040200 	andeq	r0, r4, #0, 4
    3de8:	3f14053c 	svccc	0x0014053c
    3dec:	053c0805 	ldreq	r0, [ip, #-2053]!	; 0xfffff7fb
    3df0:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    3df4:	2d052e01 	stccs	14, cr2, [r5, #-4]
    3df8:	01040200 	mrseq	r0, R12_usr
    3dfc:	3018053c 	andscc	r0, r8, ip, lsr r5
    3e00:	056a1405 	strbeq	r1, [sl, #-1029]!	; 0xfffffbfb
    3e04:	39053c08 	stmdbcc	r5, {r3, sl, fp, ip, sp}
    3e08:	01040200 	mrseq	r0, R12_usr
    3e0c:	002d052e 	eoreq	r0, sp, lr, lsr #10
    3e10:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3e14:	05301805 	ldreq	r1, [r0, #-2053]!	; 0xfffff7fb
    3e18:	08056a14 	stmdaeq	r5, {r2, r4, r9, fp, sp, lr}
    3e1c:	0039053c 	eorseq	r0, r9, ip, lsr r5
    3e20:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3e24:	02002d05 	andeq	r2, r0, #320	; 0x140
    3e28:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3e2c:	14053018 	strne	r3, [r5], #-24	; 0xffffffe8
    3e30:	3c08056a 	cfstr32cc	mvfx0, [r8], {106}	; 0x6a
    3e34:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    3e38:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3e3c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3e40:	65053c01 	strvs	r3, [r5, #-3073]	; 0xfffff3ff
    3e44:	02040200 	andeq	r0, r4, #0, 4
    3e48:	0059052e 	subseq	r0, r9, lr, lsr #10
    3e4c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    3e50:	05301805 	ldreq	r1, [r0, #-2053]!	; 0xfffff7fb
    3e54:	08056a0e 	stmdaeq	r5, {r1, r2, r3, r9, fp, sp, lr}
    3e58:	3f16052e 	svccc	0x0016052e
    3e5c:	053c0a05 	ldreq	r0, [ip, #-2565]!	; 0xfffff5fb
    3e60:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    3e64:	31052e01 	tstcc	r5, r1, lsl #28
    3e68:	01040200 	mrseq	r0, R12_usr
    3e6c:	3009053c 	andcc	r0, r9, ip, lsr r5
    3e70:	05411405 	strbeq	r1, [r1, #-1029]	; 0xfffffbfb
    3e74:	05219e12 	streq	r9, [r1, #-3602]!	; 0xfffff1ee
    3e78:	0a052e1e 	beq	14f6f8 <_Min_Stack_Size+0x14f2f8>
    3e7c:	003e052e 	eorseq	r0, lr, lr, lsr #10
    3e80:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3e84:	05410905 	strbeq	r0, [r1, #-2309]	; 0xfffff6fb
    3e88:	0c053f0d 	stceq	15, cr3, [r5], {13}
    3e8c:	300b0558 	andcc	r0, fp, r8, asr r5
    3e90:	05851405 	streq	r1, [r5, #1029]	; 0x405
    3e94:	12052e0e 	andne	r2, r5, #14, 28	; 0xe0
    3e98:	2e2e0532 	mcrcs	5, 1, r0, cr14, cr2, {1}
    3e9c:	052f1105 	streq	r1, [pc, #-261]!	; 3d9f <_Min_Stack_Size+0x399f>
    3ea0:	14056610 	strne	r6, [r5], #-1552	; 0xfffff9f0
    3ea4:	2e1c0531 	mrccs	5, 0, r0, cr12, cr1, {1}
    3ea8:	05203505 	streq	r3, [r0, #-1285]!	; 0xfffffafb
    3eac:	0c052e0f 	stceq	14, cr2, [r5], {15}
    3eb0:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    3eb4:	2018030d 	andscs	r0, r8, sp, lsl #6
    3eb8:	68030c05 	stmdavs	r3, {r0, r2, sl, fp}
    3ebc:	030b053c 	movweq	r0, #46396	; 0xb53c
    3ec0:	0c052024 	stceq	0, cr2, [r5], {36}	; 0x24
    3ec4:	053c5c03 	ldreq	r5, [ip, #-3075]!	; 0xfffff3fd
    3ec8:	20310309 	eorscs	r0, r1, r9, lsl #6
    3ecc:	053f1a05 	ldreq	r1, [pc, #-2565]!	; 34cf <_Min_Stack_Size+0x30cf>
    3ed0:	0c053f05 	stceq	15, cr3, [r5], {5}
    3ed4:	05204903 	streq	r4, [r0, #-2307]!	; 0xfffff6fd
    3ed8:	20370305 	eorscs	r0, r7, r5, lsl #6
    3edc:	05250f05 	streq	r0, [r5, #-3845]!	; 0xfffff0fb
    3ee0:	14052e06 	strne	r2, [r5], #-3590	; 0xfffff1fa
    3ee4:	3c07053d 	cfstr32cc	mvfx0, [r7], {61}	; 0x3d
    3ee8:	053d1205 	ldreq	r1, [sp, #-517]!	; 0xfffffdfb
    3eec:	05053c07 	streq	r3, [r5, #-3079]	; 0xfffff3f9
    3ef0:	af09053e 	svcge	0x0009053e
    3ef4:	05580805 	ldrbeq	r0, [r8, #-2053]	; 0xfffff7fb
    3ef8:	10053432 	andne	r3, r5, r2, lsr r4
    3efc:	210a054a 	tstcs	sl, sl, asr #10
    3f00:	054b2a05 	strbeq	r2, [fp, #-2565]	; 0xfffff5fb
    3f04:	1c052e0b 	stcne	14, cr2, [r5], {11}
    3f08:	3f12054d 	svccc	0x0012054d
    3f0c:	052e2005 	streq	r2, [lr, #-5]!
    3f10:	0b05200c 	bleq	14bf48 <_Min_Stack_Size+0x14bb48>
    3f14:	0586833f 	streq	r8, [r6, #831]	; 0x33f
    3f18:	2005851a 	andcs	r8, r5, sl, lsl r5
    3f1c:	3e0b054b 	cfsh32cc	mvfx0, mvfx11, #43
    3f20:	05851105 	streq	r1, [r5, #261]	; 0x105
    3f24:	45055f31 	strmi	r5, [r5, #-3889]	; 0xfffff0cf
    3f28:	3c09052e 	cfstr32cc	mvfx0, [r9], {46}	; 0x2e
    3f2c:	05690705 	strbeq	r0, [r9, #-1797]!	; 0xfffff8fb
    3f30:	36052722 	strcc	r2, [r5], -r2, lsr #14
    3f34:	3c10052e 	cfldr32cc	mvfx0, [r0], {46}	; 0x2e
    3f38:	052f1305 	streq	r1, [pc, #-773]!	; 3c3b <_Min_Stack_Size+0x383b>
    3f3c:	0b053c0a 	bleq	152f6c <_Min_Stack_Size+0x152b6c>
    3f40:	3f09052f 	svccc	0x0009052f
    3f44:	85180585 	ldrhi	r0, [r8, #-1413]	; 0xfffffa7b
    3f48:	054b1e05 	strbeq	r1, [fp, #-3589]	; 0xfffff1fb
    3f4c:	05883e09 	streq	r3, [r8, #3593]	; 0xe09
    3f50:	12055b07 	andne	r5, r5, #7168	; 0x1c00
    3f54:	3c060525 	cfstr32cc	mvfx0, [r6], {37}	; 0x25
    3f58:	02003805 	andeq	r3, r0, #327680	; 0x50000
    3f5c:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3f60:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    3f64:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
    3f68:	12053d30 	andne	r3, r5, #48, 26	; 0xc00
    3f6c:	3c060524 	cfstr32cc	mvfx0, [r6], {36}	; 0x24
    3f70:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    3f74:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    3f78:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    3f7c:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
    3f80:	9e033d30 	mcrls	13, 0, r3, cr3, cr0, {1}
    3f84:	07052e7f 	smlsdxeq	r5, pc, lr, r2	; <UNPREDICTABLE>
    3f88:	032e3503 			; <UNDEFINED> instruction: 0x032e3503
    3f8c:	01052e1e 	tsteq	r5, lr, lsl lr
    3f90:	02201103 	eoreq	r1, r0, #-1073741824	; 0xc0000000
    3f94:	01010005 	tsteq	r1, r5
    3f98:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3f9c:	00000002 	andeq	r0, r0, r2
    3fa0:	14970300 	ldrne	r0, [r7], #768	; 0x300
    3fa4:	05025001 	streq	r5, [r2, #-1]
    3fa8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3fac:	02050001 	andeq	r0, r5, #1
    3fb0:	00000000 	andeq	r0, r0, r0
    3fb4:	0114a603 	tsteq	r4, r3, lsl #12
    3fb8:	00050250 	andeq	r0, r5, r0, asr r2
    3fbc:	01050101 	tsteq	r5, r1, lsl #2
    3fc0:	00020500 	andeq	r0, r2, r0, lsl #10
    3fc4:	03000000 	movweq	r0, #0
    3fc8:	500114b5 			; <UNDEFINED> instruction: 0x500114b5
    3fcc:	01000502 	tsteq	r0, r2, lsl #10
    3fd0:	00010501 	andeq	r0, r1, r1, lsl #10
    3fd4:	00000205 	andeq	r0, r0, r5, lsl #4
    3fd8:	c4030000 	strgt	r0, [r3], #-0
    3fdc:	02500114 	subseq	r0, r0, #20, 2
    3fe0:	01010005 	tsteq	r1, r5
    3fe4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3fe8:	00000002 	andeq	r0, r0, r2
    3fec:	14d30300 	ldrbne	r0, [r3], #768	; 0x300
    3ff0:	05025001 	streq	r5, [r2, #-1]
    3ff4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3ff8:	02050001 	andeq	r0, r5, #1
    3ffc:	00000000 	andeq	r0, r0, r0
    4000:	0114e103 	tsteq	r4, r3, lsl #2
    4004:	00050251 	andeq	r0, r5, r1, asr r2
    4008:	01050101 	tsteq	r5, r1, lsl #2
    400c:	00020500 	andeq	r0, r2, r0, lsl #10
    4010:	03000000 	movweq	r0, #0
    4014:	510114f0 	strdpl	r1, [r1, -r0]
    4018:	01000502 	tsteq	r0, r2, lsl #10
    401c:	00010501 	andeq	r0, r1, r1, lsl #10
    4020:	00000205 	andeq	r0, r0, r5, lsl #4
    4024:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    4028:	02510114 	subseq	r0, r1, #20, 2
    402c:	01010005 	tsteq	r1, r5
    4030:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4034:	00000002 	andeq	r0, r0, r2
    4038:	15900300 	ldrne	r0, [r0, #768]	; 0x300
    403c:	05026e01 	streq	r6, [r2, #-3585]	; 0xfffff1ff
    4040:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4044:	02050001 	andeq	r0, r5, #1
    4048:	00000000 	andeq	r0, r0, r0
    404c:	0115b803 	tsteq	r5, r3, lsl #16
    4050:	004f0305 	subeq	r0, pc, r5, lsl #6
    4054:	06010402 	streq	r0, [r1], -r2, lsl #8
    4058:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    405c:	11052e02 	tstne	r5, r2, lsl #28
    4060:	02040200 	andeq	r0, r4, #0, 4
    4064:	03054c06 	movweq	r4, #23558	; 0x5c06
    4068:	02040200 	andeq	r0, r4, #0, 4
    406c:	0011054d 	andseq	r0, r1, sp, asr #10
    4070:	84020402 	strhi	r0, [r2], #-1026	; 0xfffffbfe
    4074:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4078:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    407c:	0402000a 	streq	r0, [r2], #-10
    4080:	01054c02 	tsteq	r5, r2, lsl #24
    4084:	00050221 	andeq	r0, r5, r1, lsr #4
    4088:	01050101 	tsteq	r5, r1, lsl #2
    408c:	00020500 	andeq	r0, r2, r0, lsl #10
    4090:	03000000 	movweq	r0, #0
    4094:	050115d3 	streq	r1, [r1, #-1491]	; 0xfffffa2d
    4098:	02004f03 	andeq	r4, r0, #3, 30
    409c:	58060104 	stmdapl	r6, {r2, r8}
    40a0:	02040200 	andeq	r0, r4, #0, 4
    40a4:	0011052e 	andseq	r0, r1, lr, lsr #10
    40a8:	06020402 	streq	r0, [r2], -r2, lsl #8
    40ac:	0003054c 	andeq	r0, r3, ip, asr #10
    40b0:	4d020402 	cfstrsmi	mvf0, [r2, #-8]
    40b4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    40b8:	05840204 	streq	r0, [r4, #516]	; 0x204
    40bc:	04020003 	streq	r0, [r2], #-3
    40c0:	0a054d02 	beq	1574d0 <_Min_Stack_Size+0x1570d0>
    40c4:	02040200 	andeq	r0, r4, #0, 4
    40c8:	2101054c 	tstcs	r1, ip, asr #10
    40cc:	01000502 	tsteq	r0, r2, lsl #10
    40d0:	00010501 	andeq	r0, r1, r1, lsl #10
    40d4:	00000205 	andeq	r0, r0, r5, lsl #4
    40d8:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    40dc:	03050115 	movweq	r0, #20757	; 0x5115
    40e0:	0402004f 	streq	r0, [r2], #-79	; 0xffffffb1
    40e4:	00580601 	subseq	r0, r8, r1, lsl #12
    40e8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    40ec:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    40f0:	4c060204 	sfmmi	f0, 4, [r6], {4}
    40f4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    40f8:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    40fc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4100:	03058402 	movweq	r8, #21506	; 0x5402
    4104:	02040200 	andeq	r0, r4, #0, 4
    4108:	000a054d 	andeq	r0, sl, sp, asr #10
    410c:	4c020402 	cfstrsmi	mvf0, [r2], {2}
    4110:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    4114:	01010005 	tsteq	r1, r5
    4118:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    411c:	00000002 	andeq	r0, r0, r2
    4120:	16890300 	strne	r0, [r9], r0, lsl #6
    4124:	4b0c0501 	blmi	305530 <_Min_Stack_Size+0x305130>
    4128:	00310305 	eorseq	r0, r1, r5, lsl #6
    412c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4130:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4134:	11052e02 	tstne	r5, r2, lsl #28
    4138:	02040200 	andeq	r0, r4, #0, 4
    413c:	02004c06 	andeq	r4, r0, #1536	; 0x600
    4140:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    4144:	0402000a 	streq	r0, [r2], #-10
    4148:	02002e02 	andeq	r2, r0, #2, 28
    414c:	00310204 	eorseq	r0, r1, r4, lsl #4
    4150:	4d020402 	cfstrsmi	mvf0, [r2, #-8]
    4154:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4158:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    415c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4160:	03054c02 	movweq	r4, #23554	; 0x5c02
    4164:	02040200 	andeq	r0, r4, #0, 4
    4168:	000a054d 	andeq	r0, sl, sp, asr #10
    416c:	4c020402 	cfstrsmi	mvf0, [r2], {2}
    4170:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    4174:	01010005 	tsteq	r1, r5
    4178:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    417c:	00000002 	andeq	r0, r0, r2
    4180:	16ac0300 	strtne	r0, [ip], r0, lsl #6
    4184:	4b0c0501 	blmi	305590 <_Min_Stack_Size+0x305190>
    4188:	00310305 	eorseq	r0, r1, r5, lsl #6
    418c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4190:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    4194:	11052e02 	tstne	r5, r2, lsl #28
    4198:	02040200 	andeq	r0, r4, #0, 4
    419c:	02004c06 	andeq	r4, r0, #1536	; 0x600
    41a0:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    41a4:	0402000a 	streq	r0, [r2], #-10
    41a8:	02002e02 	andeq	r2, r0, #2, 28
    41ac:	00310204 	eorseq	r0, r1, r4, lsl #4
    41b0:	4d020402 	cfstrsmi	mvf0, [r2, #-8]
    41b4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    41b8:	054d0204 	strbeq	r0, [sp, #-516]	; 0xfffffdfc
    41bc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    41c0:	03054c02 	movweq	r4, #23554	; 0x5c02
    41c4:	02040200 	andeq	r0, r4, #0, 4
    41c8:	000a054d 	andeq	r0, sl, sp, asr #10
    41cc:	4c020402 	cfstrsmi	mvf0, [r2], {2}
    41d0:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    41d4:	01010005 	tsteq	r1, r5
    41d8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    41dc:	00000002 	andeq	r0, r0, r2
    41e0:	16e50300 	strbtne	r0, [r5], r0, lsl #6
    41e4:	4b0c0501 	blmi	3055f0 <_Min_Stack_Size+0x3051f0>
    41e8:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    41ec:	09052f10 	stmdbeq	r5, {r4, r8, r9, sl, fp, sp}
    41f0:	2110054a 	tstcs	r0, sl, asr #10
    41f4:	054a0905 	strbeq	r0, [sl, #-2309]	; 0xfffff6fb
    41f8:	0105220a 	tsteq	r5, sl, lsl #4
    41fc:	00050267 	andeq	r0, r5, r7, ror #4
    4200:	01050101 	tsteq	r5, r1, lsl #2
    4204:	00020500 	andeq	r0, r2, r0, lsl #10
    4208:	03000000 	movweq	r0, #0
    420c:	050116f4 	streq	r1, [r1, #-1780]	; 0xfffff90c
    4210:	01054b0f 	tsteq	r5, pc, lsl #22
    4214:	0005022f 	andeq	r0, r5, pc, lsr #4
    4218:	01050101 	tsteq	r5, r1, lsl #2
    421c:	00020500 	andeq	r0, r2, r0, lsl #10
    4220:	03000000 	movweq	r0, #0
    4224:	050117a1 	streq	r1, [r1, #-1953]	; 0xfffff85f
    4228:	0c054b17 			; <UNDEFINED> instruction: 0x0c054b17
    422c:	2e16053e 	mrccs	5, 0, r0, cr6, cr14, {1}
    4230:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    4234:	18052e06 	stmdane	r5, {r1, r2, r9, sl, fp, sp}
    4238:	40050530 	andmi	r0, r5, r0, lsr r5
    423c:	03010585 	movweq	r0, #5509	; 0x1585
    4240:	0505820e 	streq	r8, [r5, #-526]	; 0xfffffdf2
    4244:	3f01051d 	svccc	0x0001051d
    4248:	01000402 	tsteq	r0, r2, lsl #8
    424c:	00010501 	andeq	r0, r1, r1, lsl #10
    4250:	00000205 	andeq	r0, r0, r5, lsl #4
    4254:	c4030000 	strgt	r0, [r3], #-0
    4258:	17050117 	smladne	r5, r7, r1, r0
    425c:	4303054b 	movwmi	r0, #13643	; 0x354b
    4260:	023e0105 	eorseq	r0, lr, #1073741825	; 0x40000001
    4264:	01010004 	tsteq	r1, r4
    4268:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    426c:	00000002 	andeq	r0, r0, r2
    4270:	17d70300 	ldrbne	r0, [r7, r0, lsl #6]
    4274:	4b170501 	blmi	5c5680 <_Min_Stack_Size+0x5c5280>
    4278:	053e0c05 	ldreq	r0, [lr, #-3077]!	; 0xfffff3fb
    427c:	1b052e16 	blne	14fadc <_Min_Stack_Size+0x14f6dc>
    4280:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    4284:	05301805 	ldreq	r1, [r0, #-2053]!	; 0xfffff7fb
    4288:	86833f05 	strhi	r3, [r3], r5, lsl #30
    428c:	05851405 	streq	r1, [r5, #1029]	; 0x405
    4290:	08054d0e 	stmdaeq	r5, {r1, r2, r3, r8, sl, fp, lr}
    4294:	3007052e 	andcc	r0, r7, lr, lsr #10
    4298:	05880c05 	streq	r0, [r8, #3077]	; 0xc05
    429c:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    42a0:	03010535 	movweq	r0, #5429	; 0x1535
    42a4:	0505660e 	streq	r6, [r5, #-1550]	; 0xfffff9f2
    42a8:	3f01051d 	svccc	0x0001051d
    42ac:	01000402 	tsteq	r0, r2, lsl #8
    42b0:	00010501 	andeq	r0, r1, r1, lsl #10
    42b4:	00000205 	andeq	r0, r0, r5, lsl #4
    42b8:	90030000 	andls	r0, r3, r0
    42bc:	17050118 	smladne	r5, r8, r1, r0
    42c0:	400c054b 	andmi	r0, ip, fp, asr #10
    42c4:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    42c8:	0505352c 	streq	r3, [r5, #-1324]	; 0xfffffad4
    42cc:	0301052e 	movweq	r0, #5422	; 0x152e
    42d0:	0505660e 	streq	r6, [r5, #-1550]	; 0xfffff9f2
    42d4:	3f01051d 	svccc	0x0001051d
    42d8:	01000402 	tsteq	r0, r2, lsl #8
    42dc:	00010501 	andeq	r0, r1, r1, lsl #10
    42e0:	00000205 	andeq	r0, r0, r5, lsl #4
    42e4:	b3030000 	movwlt	r0, #12288	; 0x3000
    42e8:	0c050118 	stfeqs	f0, [r5], {24}
    42ec:	2f17054b 	svccs	0x0017054b
    42f0:	053f1005 	ldreq	r1, [pc, #-5]!	; 42f3 <_Min_Stack_Size+0x3ef3>
    42f4:	0d059e0e 	stceq	14, cr9, [r5, #-56]	; 0xffffffc8
    42f8:	4a060521 	bmi	185784 <_Min_Stack_Size+0x185384>
    42fc:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    4300:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4304:	05053e18 	streq	r3, [r5, #-3608]	; 0xfffff1e8
    4308:	4010053d 	andsmi	r0, r0, sp, lsr r5
    430c:	059e0e05 	ldreq	r0, [lr, #3589]	; 0xe05
    4310:	0605210d 	streq	r2, [r5], -sp, lsl #2
    4314:	0032054a 	eorseq	r0, r2, sl, asr #10
    4318:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    431c:	053e1805 	ldreq	r1, [lr, #-2053]!	; 0xfffff7fb
    4320:	14053d05 	strne	r3, [r5], #-3333	; 0xfffff2fb
    4324:	6c03053f 	cfstr32vs	mvfx0, [r3], {63}	; 0x3f
    4328:	023e0105 	eorseq	r0, lr, #1073741825	; 0x40000001
    432c:	01010004 	tsteq	r1, r4
    4330:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4334:	00000002 	andeq	r0, r0, r2
    4338:	18dc0300 	ldmne	ip, {r8, r9}^
    433c:	84090501 	strhi	r0, [r9], #-1281	; 0xfffffaff
    4340:	05230805 	streq	r0, [r3, #-2053]!	; 0xfffff7fb
    4344:	20054c0a 	andcs	r4, r5, sl, lsl #24
    4348:	01040200 	mrseq	r0, R12_usr
    434c:	002e053c 	eoreq	r0, lr, ip, lsr r5
    4350:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4354:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    4358:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    435c:	05833f09 	streq	r3, [r3, #3849]	; 0xf09
    4360:	054b8418 	strbeq	r8, [fp, #-1048]	; 0xfffffbe8
    4364:	10054d09 	andne	r4, r5, r9, lsl #26
    4368:	030b054c 	movweq	r0, #46412	; 0xb54c
    436c:	32052e6f 	andcc	r2, r5, #1776	; 0x6f0
    4370:	743b0558 	ldrtvc	r0, [fp], #-1368	; 0xfffffaa8
    4374:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    4378:	2e15030a 	cdpcs	3, 1, cr0, cr5, cr10, {0}
    437c:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    4380:	01010004 	tsteq	r1, r4
    4384:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4388:	00000002 	andeq	r0, r0, r2
    438c:	19820300 	stmibne	r2, {r8, r9}
    4390:	75150501 	ldrvc	r0, [r5, #-1281]	; 0xfffffaff
    4394:	3d16053d 	cfldr32cc	mvfx0, [r6, #-244]	; 0xffffff0c
    4398:	053e1405 	ldreq	r1, [lr, #-1029]!	; 0xfffffbfb
    439c:	03053d12 	movweq	r3, #23826	; 0x5d12
    43a0:	85854d4d 	strhi	r4, [r5, #3405]	; 0xd4d
    43a4:	05840a05 	streq	r0, [r4, #2565]	; 0xa05
    43a8:	05022101 	streq	r2, [r2, #-257]	; 0xfffffeff
    43ac:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    43b0:	02050001 	andeq	r0, r5, #1
    43b4:	00000000 	andeq	r0, r0, r0
    43b8:	0119a503 	tsteq	r9, r3, lsl #10
    43bc:	3d771505 	cfldr64cc	mvdx1, [r7, #-20]!	; 0xffffffec
    43c0:	053e1405 	ldreq	r1, [lr, #-1029]!	; 0xfffffbfb
    43c4:	08053d12 	stmdaeq	r5, {r1, r4, r8, sl, fp, ip, sp}
    43c8:	2e23054d 	cfsh64cs	mvdx0, mvdx3, #45
    43cc:	05310805 	ldreq	r0, [r1, #-2053]!	; 0xfffff7fb
    43d0:	08052e27 	stmdaeq	r5, {r0, r1, r2, r5, r9, sl, fp, sp}
    43d4:	2e240531 	mcrcs	5, 1, r0, cr4, cr1, {1}
    43d8:	05310805 	ldreq	r0, [r1, #-2053]!	; 0xfffff7fb
    43dc:	07052e24 	streq	r2, [r5, -r4, lsr #28]
    43e0:	3d030531 	cfstr32cc	mvfx0, [r3, #-196]	; 0xffffff3c
    43e4:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    43e8:	03052e2d 	movweq	r2, #24109	; 0x5e2d
    43ec:	4daf6920 			; <UNDEFINED> instruction: 0x4daf6920
    43f0:	0a058685 	beq	165e0c <_Min_Stack_Size+0x165a0c>
    43f4:	21010584 	smlabbcs	r1, r4, r5, r0
    43f8:	01000a02 	tsteq	r0, r2, lsl #20
    43fc:	00010501 	andeq	r0, r1, r1, lsl #10
    4400:	00000205 	andeq	r0, r0, r5, lsl #4
    4404:	d7030000 	strle	r0, [r3, -r0]
    4408:	03050119 	movweq	r0, #20761	; 0x5119
    440c:	8511054c 	ldrhi	r0, [r1, #-1356]	; 0xfffffab4
    4410:	024b0105 	subeq	r0, fp, #1073741825	; 0x40000001
    4414:	01010005 	tsteq	r1, r5
    4418:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    441c:	00000002 	andeq	r0, r0, r2
    4420:	19e50300 	stmibne	r5!, {r8, r9}^
    4424:	4c030501 	cfstr32mi	mvfx0, [r3], {1}
    4428:	850c0583 	strhi	r0, [ip, #-1411]	; 0xfffffa7d
    442c:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    4430:	12053005 	andne	r3, r5, #5
    4434:	4b180586 	blmi	605a54 <_Min_Stack_Size+0x605654>
    4438:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    443c:	01010005 	tsteq	r1, r5
    4440:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4444:	00000002 	andeq	r0, r0, r2
    4448:	19fd0300 	ldmibne	sp!, {r8, r9}^
    444c:	4b170501 	blmi	5c5858 <_Min_Stack_Size+0x5c5458>
    4450:	3d3d1605 	ldccc	6, cr1, [sp, #-20]!	; 0xffffffec
    4454:	05430305 	strbeq	r0, [r3, #-773]	; 0xfffffcfb
    4458:	04023e01 	streq	r3, [r2], #-3585	; 0xfffff1ff
    445c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4460:	02050001 	andeq	r0, r5, #1
    4464:	00000000 	andeq	r0, r0, r0
    4468:	011a9503 	tsteq	sl, r3, lsl #10
    446c:	054b1705 	strbeq	r1, [fp, #-1797]	; 0xfffff8fb
    4470:	24053e08 	strcs	r3, [r5], #-3592	; 0xfffff1f8
    4474:	310c052e 	tstcc	ip, lr, lsr #10
    4478:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    447c:	1605300e 	strne	r3, [r5], -lr
    4480:	2008052e 	andcs	r0, r8, lr, lsr #10
    4484:	3d351605 	ldccc	6, cr1, [r5, #-20]!	; 0xffffffec
    4488:	053f1405 	ldreq	r1, [pc, #-1029]!	; 408b <_Min_Stack_Size+0x3c8b>
    448c:	054b3f12 	strbeq	r3, [fp, #-3858]	; 0xfffff0ee
    4490:	03054b18 	movweq	r4, #23320	; 0x5b18
    4494:	03070544 	movweq	r0, #30020	; 0x7544
    4498:	01054a6a 	tsteq	r5, sl, ror #20
    449c:	02201803 	eoreq	r1, r0, #196608	; 0x30000
    44a0:	01010003 	tsteq	r1, r3
    44a4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    44a8:	00000002 	andeq	r0, r0, r2
    44ac:	1ac30300 	bne	ff0c50b4 <__StackLimit+0xdf0a50b4>
    44b0:	4b170501 	blmi	5c58bc <_Min_Stack_Size+0x5c54bc>
    44b4:	053e0805 	ldreq	r0, [lr, #-2053]!	; 0xfffff7fb
    44b8:	0c052e24 	stceq	14, cr2, [r5], {36}	; 0x24
    44bc:	2e060531 	mcrcs	5, 0, r0, cr6, cr1, {1}
    44c0:	05300e05 	ldreq	r0, [r0, #-3589]!	; 0xfffff1fb
    44c4:	08052e16 	stmdaeq	r5, {r1, r2, r4, r9, sl, fp, sp}
    44c8:	35160520 	ldrcc	r0, [r6, #-1312]	; 0xfffffae0
    44cc:	3f14053d 	svccc	0x0014053d
    44d0:	4b3f1205 	blmi	fc8cec <_Min_Stack_Size+0xfc88ec>
    44d4:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    44d8:	07054403 	streq	r4, [r5, -r3, lsl #8]
    44dc:	054a6a03 	strbeq	r6, [sl, #-2563]	; 0xfffff5fd
    44e0:	20180301 	andscs	r0, r8, r1, lsl #6
    44e4:	01000302 	tsteq	r0, r2, lsl #6
    44e8:	00010501 	andeq	r0, r1, r1, lsl #10
    44ec:	00000205 	andeq	r0, r0, r5, lsl #4
    44f0:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    44f4:	1705011a 	smladne	r5, sl, r1, r0
    44f8:	3e16054b 	cfmac32cc	mvfx0, mvfx6, mvfx11
    44fc:	053f1105 	ldreq	r1, [pc, #-261]!	; 43ff <_Min_Stack_Size+0x3fff>
    4500:	01055203 	tsteq	r5, r3, lsl #4
    4504:	0004023e 	andeq	r0, r4, lr, lsr r2
    4508:	01050101 	tsteq	r5, r1, lsl #2
    450c:	00020500 	andeq	r0, r2, r0, lsl #10
    4510:	03000000 	movweq	r0, #0
    4514:	05011b8d 	streq	r1, [r1, #-2957]	; 0xfffff473
    4518:	16054b17 			; <UNDEFINED> instruction: 0x16054b17
    451c:	3f12053e 	svccc	0x0012053e
    4520:	054b1805 	strbeq	r1, [fp, #-2053]	; 0xfffff7fb
    4524:	01054403 	tsteq	r5, r3, lsl #8
    4528:	0004023e 	andeq	r0, r4, lr, lsr r2
    452c:	01050101 	tsteq	r5, r1, lsl #2
    4530:	00020500 	andeq	r0, r2, r0, lsl #10
    4534:	03000000 	movweq	r0, #0
    4538:	05011ba7 	streq	r1, [r1, #-2983]	; 0xfffff459
    453c:	06054e0c 	streq	r4, [r5], -ip, lsl #28
    4540:	3015054a 	andscc	r0, r5, sl, asr #10
    4544:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    4548:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    454c:	38053c01 	stmdacc	r5, {r0, sl, fp, ip, sp}
    4550:	01040200 	mrseq	r0, R12_usr
    4554:	300b052e 	andcc	r0, fp, lr, lsr #10
    4558:	053d2805 	ldreq	r2, [sp, #-2053]!	; 0xfffff7fb
    455c:	0c052e1d 	stceq	14, cr2, [r5], {29}
    4560:	2e1d0520 	cfmul64cs	mvdx0, mvdx13, mvdx0
    4564:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    4568:	2d052119 	stfcss	f2, [r5, #-100]	; 0xffffff9c
    456c:	2e39056a 	cdpcs	5, 3, cr0, cr9, cr10, {3}
    4570:	053c2705 	ldreq	r2, [ip, #-1797]!	; 0xfffff8fb
    4574:	1b05200c 	blne	14c5ac <_Min_Stack_Size+0x14c1ac>
    4578:	2310052e 	tstcs	r0, #192937984	; 0xb800000
    457c:	053c0905 	ldreq	r0, [ip, #-2309]!	; 0xfffff6fb
    4580:	07052e08 	streq	r2, [r5, -r8, lsl #28]
    4584:	0c05855b 	cfstr32eq	mvfx8, [r5], {91}	; 0x5b
    4588:	01053284 	smlabbeq	r5, r4, r2, r3
    458c:	00050222 	andeq	r0, r5, r2, lsr #4
    4590:	01050101 	tsteq	r5, r1, lsl #2
    4594:	00020500 	andeq	r0, r2, r0, lsl #10
    4598:	03000000 	movweq	r0, #0
    459c:	05011bcf 	streq	r1, [r1, #-3023]	; 0xfffff431
    45a0:	11054c03 	tstne	r5, r3, lsl #24
    45a4:	51030585 	smlabbpl	r3, r5, r5, r0
    45a8:	053f0a05 	ldreq	r0, [pc, #-2565]!	; 3bab <_Min_Stack_Size+0x37ab>
    45ac:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
    45b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    45b4:	02050001 	andeq	r0, r5, #1
    45b8:	00000000 	andeq	r0, r0, r0
    45bc:	011be803 	tsteq	fp, r3, lsl #16
    45c0:	054f0c05 	strbeq	r0, [pc, #-3077]	; 39c3 <_Min_Stack_Size+0x35c3>
    45c4:	15054a06 	strne	r4, [r5, #-2566]	; 0xfffff5fa
    45c8:	2e08053e 	mcrcs	5, 0, r0, cr8, cr14, {1}
    45cc:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    45d0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    45d4:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    45d8:	13052e01 	movwne	r2, #24065	; 0x5e01
    45dc:	26052f30 			; <UNDEFINED> instruction: 0x26052f30
    45e0:	2e30053d 	mrccs	5, 1, r0, cr0, cr13, {1}
    45e4:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    45e8:	19054a14 	stmdbne	r5, {r2, r4, r9, fp, lr}
    45ec:	6a12052f 	bvs	485ab0 <_Min_Stack_Size+0x4856b0>
    45f0:	053d1405 	ldreq	r1, [sp, #-1029]!	; 0xfffffbfb
    45f4:	0a053017 	beq	150658 <_Min_Stack_Size+0x150258>
    45f8:	004a052e 	subeq	r0, sl, lr, lsr #10
    45fc:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4600:	02003a05 	andeq	r3, r0, #20480	; 0x5000
    4604:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4608:	0402007c 	streq	r0, [r2], #-124	; 0xffffff84
    460c:	6d052e02 	stcvs	14, cr2, [r5, #-8]
    4610:	02040200 	andeq	r0, r4, #0, 4
    4614:	3026052e 	eorcc	r0, r6, lr, lsr #10
    4618:	052e3005 	streq	r3, [lr, #-5]!
    461c:	15052017 	strne	r2, [r5, #-23]	; 0xffffffe9
    4620:	40260520 	eormi	r0, r6, r0, lsr #10
    4624:	052e3005 	streq	r3, [lr, #-5]!
    4628:	15052017 	strne	r2, [r5, #-23]	; 0xffffffe9
    462c:	3019054a 	andscc	r0, r9, sl, asr #10
    4630:	055b1005 	ldrbeq	r1, [fp, #-5]
    4634:	08053c09 	stmdaeq	r5, {r0, r3, sl, fp, ip, sp}
    4638:	5b07052e 	blpl	1c5af8 <_Min_Stack_Size+0x1c56f8>
    463c:	16058585 	strne	r8, [r5], -r5, lsl #11
    4640:	4e100585 	cdpmi	5, 1, cr0, cr0, cr5, {4}
    4644:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    4648:	05893109 	streq	r3, [r9, #265]	; 0x109
    464c:	740b0308 	strvc	r0, [fp], #-776	; 0xfffffcf8
    4650:	053f1c05 	ldreq	r1, [pc, #-3077]!	; 3a53 <_Min_Stack_Size+0x3653>
    4654:	0c053d0e 	stceq	13, cr3, [r5], {14}
    4658:	01053230 	tsteq	r5, r0, lsr r2
    465c:	00040222 	andeq	r0, r4, r2, lsr #4
    4660:	01050101 	tsteq	r5, r1, lsl #2
    4664:	d4020500 	strle	r0, [r2], #-1280	; 0xfffffb00
    4668:	0308001b 	movweq	r0, #32795	; 0x801b
    466c:	05011cc0 	streq	r1, [r1, #-3264]	; 0xfffff340
    4670:	580d0303 	stmdapl	sp, {r0, r1, r8, r9}
    4674:	09032105 	stmdbeq	r3, {r0, r2, r8, sp}
    4678:	2e3a05ba 	mrccs	5, 1, r0, cr10, cr10, {5}
    467c:	052e2d05 	streq	r2, [lr, #-3333]!	; 0xfffff2fb
    4680:	4205204f 	andmi	r2, r5, #79	; 0x4f
    4684:	2062052e 	rsbcs	r0, r2, lr, lsr #10
    4688:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    468c:	05c02f03 	strbeq	r2, [r0, #3843]	; 0xf03
    4690:	ba09030f 	blt	2452d4 <_Min_Stack_Size+0x244ed4>
    4694:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    4698:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    469c:	25053c01 	strcs	r3, [r5, #-3073]	; 0xfffff3ff
    46a0:	01040200 	mrseq	r0, R12_usr
    46a4:	3e0e052e 	cfsh32cc	mvfx0, mvfx14, #30
    46a8:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    46ac:	200a030e 	andcs	r0, sl, lr, lsl #6
    46b0:	053f1205 	ldreq	r1, [pc, #-517]!	; 44b3 <_Min_Stack_Size+0x40b3>
    46b4:	1c052e06 	stcne	14, cr2, [r5], {6}
    46b8:	020a054c 	andeq	r0, sl, #76, 10	; 0x13000000
    46bc:	051201c0 	ldreq	r0, [r2, #-448]	; 0xfffffe40
    46c0:	1a052e1c 	bne	14ff38 <_Min_Stack_Size+0x14fb38>
    46c4:	26010520 	strcs	r0, [r1], -r0, lsr #10
    46c8:	05801c05 	streq	r1, [r0, #3077]	; 0xc05
    46cc:	01c5020a 	biceq	r0, r5, sl, lsl #4
    46d0:	2e1c0512 	mrccs	5, 0, r0, cr12, cr2, {0}
    46d4:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    46d8:	07022201 	streq	r2, [r2, -r1, lsl #4]
    46dc:	c8010100 	stmdagt	r1, {r8}
    46e0:	03000009 	movweq	r0, #9
    46e4:	00009c00 	andeq	r9, r0, r0, lsl #24
    46e8:	fb010200 	blx	44ef2 <_Min_Stack_Size+0x44af2>
    46ec:	01000d0e 	tsteq	r0, lr, lsl #26
    46f0:	00010101 	andeq	r0, r1, r1, lsl #2
    46f4:	00010000 	andeq	r0, r1, r0
    46f8:	2e2e0100 	sufcse	f0, f6, f0
    46fc:	2f2e2e2f 	svccs	0x002e2e2f
    4700:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4704:	656b2f2e 	strbvs	r2, [fp, #-3886]!	; 0xfffff0d2
    4708:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    470c:	7265732f 	rsbvc	r7, r5, #-1140850688	; 0xbc000000
    4710:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    4714:	6972702f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, ip, sp, lr}^
    4718:	0066746e 	rsbeq	r7, r6, lr, ror #8
    471c:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    4720:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4724:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    4728:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    472c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    4730:	61652d65 	cmnvs	r5, r5, ror #26
    4734:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    4738:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    473c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4740:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    4744:	72700000 	rsbsvc	r0, r0, #0
    4748:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
    474c:	0100632e 	tsteq	r0, lr, lsr #6
    4750:	74730000 	ldrbtvc	r0, [r3], #-0
    4754:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    4758:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    475c:	74730000 	ldrbtvc	r0, [r3], #-0
    4760:	67726164 	ldrbvs	r6, [r2, -r4, ror #2]!
    4764:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4768:	74730000 	ldrbtvc	r0, [r3], #-0
    476c:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    4770:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4774:	623c0000 	eorsvs	r0, ip, #0
    4778:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    477c:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    4780:	00000000 	andeq	r0, r0, r0
    4784:	00010500 	andeq	r0, r1, r0, lsl #10
    4788:	00000205 	andeq	r0, r0, r5, lsl #4
    478c:	85030000 	strhi	r0, [r3, #-0]
    4790:	06050101 	streq	r0, [r5], -r1, lsl #2
    4794:	4b140583 	blmi	505da8 <_Min_Stack_Size+0x5059a8>
    4798:	053c1a05 	ldreq	r1, [ip, #-2565]!	; 0xfffff5fb
    479c:	05023001 	streq	r3, [r2, #-1]
    47a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    47a4:	02050001 	andeq	r0, r5, #1
    47a8:	08001fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp, ip}
    47ac:	01018e03 	tsteq	r1, r3, lsl #28
    47b0:	00050284 	andeq	r0, r5, r4, lsl #5
    47b4:	01050101 	tsteq	r5, r1, lsl #2
    47b8:	be020500 	cfsh32lt	mvfx0, mvfx2, #0
    47bc:	0308001f 	movweq	r0, #32799	; 0x801f
    47c0:	05010195 	streq	r0, [r1, #-405]	; 0xfffffe6b
    47c4:	05058406 	streq	r8, [r5, #-1030]	; 0xfffffbfa
    47c8:	4c01053d 	cfstr32mi	mvfx0, [r1], {61}	; 0x3d
    47cc:	01000402 	tsteq	r0, r2, lsl #8
    47d0:	00010501 	andeq	r0, r1, r1, lsl #10
    47d4:	00000205 	andeq	r0, r0, r5, lsl #4
    47d8:	9f030000 	svcls	0x00030000
    47dc:	06050101 	streq	r0, [r5], -r1, lsl #2
    47e0:	3e210584 	cfsh64cc	mvdx0, mvdx1, #-60
    47e4:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    47e8:	04025a01 	streq	r5, [r2], #-2561	; 0xfffff5ff
    47ec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    47f0:	02050001 	andeq	r0, r5, #1
    47f4:	08001fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp, ip}
    47f8:	0101ab03 	tsteq	r1, r3, lsl #22
    47fc:	055a0a05 	ldrbeq	r0, [sl, #-2565]	; 0xfffff5fb
    4800:	22052e03 	andcs	r2, r5, #3, 28	; 0x30
    4804:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4808:	00110520 	andseq	r0, r1, r0, lsr #10
    480c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4810:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4814:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4818:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    481c:	14052e03 	strne	r2, [r5], #-3587	; 0xfffff1fd
    4820:	03040200 	movweq	r0, #16896	; 0x4200
    4824:	2f1b053c 	svccs	0x001b053c
    4828:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    482c:	01010005 	tsteq	r1, r5
    4830:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4834:	00201c02 	eoreq	r1, r0, r2, lsl #24
    4838:	01b50308 			; <UNDEFINED> instruction: 0x01b50308
    483c:	59160501 	ldmdbpl	r6, {r0, r8, sl}
    4840:	01040200 	mrseq	r0, R12_usr
    4844:	02003c06 	andeq	r3, r0, #1536	; 0x600
    4848:	003c0304 	eorseq	r0, ip, r4, lsl #6
    484c:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    4850:	06040200 	streq	r0, [r4], -r0, lsl #4
    4854:	00010520 	andeq	r0, r1, r0, lsr #10
    4858:	06060402 	streq	r0, [r6], -r2, lsl #8
    485c:	0005023d 	andeq	r0, r5, sp, lsr r2
    4860:	01050101 	tsteq	r5, r1, lsl #2
    4864:	48020500 	stmdami	r2, {r8, sl}
    4868:	03080020 	movweq	r0, #32800	; 0x8020
    486c:	050101bc 	streq	r0, [r1, #-444]	; 0xfffffe44
    4870:	09054b10 	stmdbeq	r5, {r4, r8, r9, fp, lr}
    4874:	210b052f 	tstcs	fp, pc, lsr #10
    4878:	05662505 	strbeq	r2, [r6, #-1285]!	; 0xfffffafb
    487c:	22052e2a 	andcs	r2, r5, #672	; 0x2a0
    4880:	2011053c 	andscs	r0, r1, ip, lsr r5
    4884:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    4888:	0a052d15 	beq	14fce4 <_Min_Stack_Size+0x14f8e4>
    488c:	5809052e 	stmdapl	r9, {r1, r2, r3, r5, r8, sl}
    4890:	05310a05 	ldreq	r0, [r1, #-2565]!	; 0xfffff5fb
    4894:	04022101 	streq	r2, [r2], #-257	; 0xfffffeff
    4898:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    489c:	02050001 	andeq	r0, r5, #1
    48a0:	08002090 	stmdaeq	r0, {r4, r7, sp}
    48a4:	0101c703 	tsteq	r1, r3, lsl #14
    48a8:	05751005 	ldrbeq	r1, [r5, #-5]!
    48ac:	0605310f 	streq	r3, [r5], -pc, lsl #2
    48b0:	0028053c 	eoreq	r0, r8, ip, lsr r5
    48b4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    48b8:	02001d05 	andeq	r1, r0, #320	; 0x140
    48bc:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    48c0:	05052f11 	streq	r2, [r5, #-3857]	; 0xfffff0ef
    48c4:	0007052e 	andeq	r0, r7, lr, lsr #10
    48c8:	21030402 	tstcs	r3, r2, lsl #8
    48cc:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    48d0:	05810304 	streq	r0, [r1, #772]	; 0x304
    48d4:	04020005 	streq	r0, [r2], #-5
    48d8:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
    48dc:	21050550 	tstcs	r5, r0, asr r5
    48e0:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    48e4:	09053c05 	stmdbeq	r5, {r0, r2, sl, fp, ip, sp}
    48e8:	410d0581 	smlabbmi	sp, r1, r5, r0
    48ec:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    48f0:	07052f0b 	streq	r2, [r5, -fp, lsl #30]
    48f4:	81100521 	tsthi	r0, r1, lsr #10
    48f8:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
    48fc:	0105410a 	tsteq	r5, sl, lsl #2
    4900:	00040221 	andeq	r0, r4, r1, lsr #4
    4904:	01050101 	tsteq	r5, r1, lsl #2
    4908:	30020500 	andcc	r0, r2, r0, lsl #10
    490c:	03080021 	movweq	r0, #32801	; 0x8021
    4910:	050101e3 	streq	r0, [r1, #-483]	; 0xfffffe1d
    4914:	0605760f 	streq	r7, [r5], -pc, lsl #12
    4918:	2f08053c 	svccs	0x0008053c
    491c:	02001905 	andeq	r1, r0, #81920	; 0x14000
    4920:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4924:	0402000f 	streq	r0, [r2], #-15
    4928:	2a053c01 	bcs	153934 <_Min_Stack_Size+0x153534>
    492c:	02040200 	andeq	r0, r4, #0, 4
    4930:	0041052e 	subeq	r0, r1, lr, lsr #10
    4934:	4a030402 	bmi	c5944 <_Min_Stack_Size+0xc5544>
    4938:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    493c:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    4940:	0b052f0c 	bleq	150578 <_Min_Stack_Size+0x150178>
    4944:	210e053e 	tstcs	lr, lr, lsr r5
    4948:	053c0a05 	ldreq	r0, [ip, #-2565]!	; 0xfffff5fb
    494c:	0b052e12 	bleq	15019c <_Min_Stack_Size+0x14fd9c>
    4950:	0019052d 	andseq	r0, r9, sp, lsr #10
    4954:	4a010402 	bmi	45964 <_Min_Stack_Size+0x45564>
    4958:	053f0b05 	ldreq	r0, [pc, #-2821]!	; 3e5b <_Min_Stack_Size+0x3a5b>
    495c:	0a05210e 	beq	14cd9c <_Min_Stack_Size+0x14c99c>
    4960:	2e12053c 	mrccs	5, 0, r0, cr2, cr12, {1}
    4964:	052d1305 	streq	r1, [sp, #-773]!	; 0xfffffcfb
    4968:	24053c0b 	strcs	r3, [r5], #-3083	; 0xfffff3f5
    496c:	01040200 	mrseq	r0, R12_usr
    4970:	0035052e 	eorseq	r0, r5, lr, lsr #10
    4974:	4a020402 	bmi	85984 <_Min_Stack_Size+0x85584>
    4978:	05420d05 	strbeq	r0, [r2, #-3333]	; 0xfffff2fb
    497c:	11053c06 	tstne	r5, r6, lsl #24
    4980:	3c08052f 	cfstr32cc	mvfx0, [r8], {47}	; 0x2f
    4984:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    4988:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    498c:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    4990:	3d053c02 	stccc	12, cr3, [r5, #-8]
    4994:	03040200 	movweq	r0, #16896	; 0x4200
    4998:	4b0a054a 	blmi	285ec8 <_Min_Stack_Size+0x285ac8>
    499c:	000f053d 	andeq	r0, pc, sp, lsr r5	; <UNPREDICTABLE>
    49a0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    49a4:	053d0c05 	ldreq	r0, [sp, #-3077]!	; 0xfffff3fb
    49a8:	22053f08 	andcs	r3, r5, #8, 30
    49ac:	01040200 	mrseq	r0, R12_usr
    49b0:	0017053c 	andseq	r0, r7, ip, lsr r5
    49b4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    49b8:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    49bc:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    49c0:	0a053d0e 	beq	153e00 <_Min_Stack_Size+0x153a00>
    49c4:	2e12053c 	mrccs	5, 0, r0, cr2, cr12, {1}
    49c8:	053e0d05 	ldreq	r0, [lr, #-3333]!	; 0xfffff2fb
    49cc:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    49d0:	1c053c01 	stcne	12, cr3, [r5], {1}
    49d4:	01040200 	mrseq	r0, R12_usr
    49d8:	0039053c 	eorseq	r0, r9, ip, lsr r5
    49dc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    49e0:	053d0e05 	ldreq	r0, [sp, #-3589]!	; 0xfffff1fb
    49e4:	12053c0a 	andne	r3, r5, #2560	; 0xa00
    49e8:	3e0d052e 	cfsh32cc	mvfx0, mvfx13, #30
    49ec:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    49f0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    49f4:	0a053d0e 	beq	153e34 <_Min_Stack_Size+0x153a34>
    49f8:	2e12053c 	mrccs	5, 0, r0, cr2, cr12, {1}
    49fc:	05300805 	ldreq	r0, [r0, #-2053]!	; 0xfffff7fb
    4a00:	0a053d0e 	beq	153e40 <_Min_Stack_Size+0x153a40>
    4a04:	2e12053c 	mrccs	5, 0, r0, cr2, cr12, {1}
    4a08:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
    4a0c:	0e053d08 	cdpeq	13, 0, cr3, cr5, cr8, {0}
    4a10:	3c0a054b 	cfstr32cc	mvfx0, [sl], {75}	; 0x4b
    4a14:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    4a18:	0d053e14 	stceq	14, cr3, [r5, #-80]	; 0xffffffb0
    4a1c:	2f0e053c 	svccs	0x000e053c
    4a20:	053c0a05 	ldreq	r0, [ip, #-2565]!	; 0xfffff5fb
    4a24:	14052e12 	strne	r2, [r5], #-3602	; 0xfffff1ee
    4a28:	3c0d053e 	cfstr32cc	mvfx0, [sp], {62}	; 0x3e
    4a2c:	052f0e05 	streq	r0, [pc, #-3589]!	; 3c2f <_Min_Stack_Size+0x382f>
    4a30:	12053c0a 	andne	r3, r5, #2560	; 0xa00
    4a34:	320a052e 	andcc	r0, sl, #192937984	; 0xb800000
    4a38:	02e50105 	rsceq	r0, r5, #1073741825	; 0x40000001
    4a3c:	01010004 	tsteq	r1, r4
    4a40:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4a44:	0022e802 	eoreq	lr, r2, r2, lsl #16
    4a48:	02990308 	addseq	r0, r9, #8, 6	; 0x20000000
    4a4c:	760a0501 	strvc	r0, [sl], -r1, lsl #10
    4a50:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    4a54:	0f053d0b 	svceq	0x00053d0b
    4a58:	3c06054e 	cfstr32cc	mvfx0, [r6], {78}	; 0x4e
    4a5c:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    4a60:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4a64:	12053e27 	andne	r3, r5, #624	; 0x270
    4a68:	02002f82 	andeq	r2, r0, #520	; 0x208
    4a6c:	4a060104 	bmi	184e84 <_Min_Stack_Size+0x184a84>
    4a70:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    4a74:	58060204 	stmdapl	r6, {r2, r9}
    4a78:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
    4a7c:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4a80:	06040402 	streq	r0, [r4], -r2, lsl #8
    4a84:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4a88:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    4a8c:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
    4a90:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    4a94:	054a0607 	strbeq	r0, [sl, #-1543]	; 0xfffff9f9
    4a98:	0402000e 	streq	r0, [r2], #-14
    4a9c:	12052e08 	andne	r2, r5, #8, 28	; 0x80
    4aa0:	08040200 	stmdaeq	r4, {r9}
    4aa4:	000d053c 	andeq	r0, sp, ip, lsr r5
    4aa8:	59080402 	stmdbpl	r8, {r1, sl}
    4aac:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4ab0:	05590804 	ldrbeq	r0, [r9, #-2052]	; 0xfffff7fc
    4ab4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4ab8:	0a053c01 	beq	153ac4 <_Min_Stack_Size+0x1536c4>
    4abc:	0801053f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, sl}
    4ac0:	00040267 	andeq	r0, r4, r7, ror #4
    4ac4:	01050101 	tsteq	r5, r1, lsl #2
    4ac8:	b8020500 	stmdalt	r2, {r8, sl}
    4acc:	03080023 	movweq	r0, #32803	; 0x8023
    4ad0:	050102d3 	streq	r0, [r1, #-723]	; 0xfffffd2d
    4ad4:	052f760a 	streq	r7, [pc, #-1546]!	; 44d2 <_Min_Stack_Size+0x40d2>
    4ad8:	0c056c06 	stceq	12, cr6, [r5], {6}
    4adc:	f3060591 	vqrshl.u8	d0, d1, d22
    4ae0:	05ad0c05 	streq	r0, [sp, #3077]!	; 0xc05
    4ae4:	3605f306 	strcc	pc, [r5], -r6, lsl #6
    4ae8:	3c0c059f 	cfstr32cc	mvfx0, [ip], {159}	; 0x9f
    4aec:	01040200 	mrseq	r0, R12_usr
    4af0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4af4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4af8:	0402005d 	streq	r0, [r2], #-93	; 0xffffffa3
    4afc:	05200604 	streq	r0, [r0, #-1540]!	; 0xfffff9fc
    4b00:	0402000c 	streq	r0, [r2], #-12
    4b04:	02003c04 	andeq	r3, r0, #4, 24	; 0x400
    4b08:	2e060504 	cfsh32cs	mvfx0, mvfx6, #4
    4b0c:	06040200 	streq	r0, [r4], -r0, lsl #4
    4b10:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b14:	06052008 	streq	r2, [r5], -r8
    4b18:	2205da06 	andcs	sp, r5, #24576	; 0x6000
    4b1c:	01040200 	mrseq	r0, R12_usr
    4b20:	a20c059e 	andge	r0, ip, #662700032	; 0x27800000
    4b24:	05330805 	ldreq	r0, [r3, #-2053]!	; 0xfffff7fb
    4b28:	0e053d06 	cdpeq	13, 0, cr3, cr5, cr6, {0}
    4b2c:	3d0b05ad 	cfstr32cc	mvfx0, [fp, #-692]	; 0xfffffd4c
    4b30:	05be0f05 	ldreq	r0, [lr, #3845]!	; 0xf05
    4b34:	0a053c06 	beq	153b54 <_Min_Stack_Size+0x153754>
    4b38:	3109052f 	tstcc	r9, pc, lsr #10
    4b3c:	05210c05 	streq	r0, [r1, #-3077]!	; 0xfffff3fb
    4b40:	09053c10 	stmdbeq	r5, {r4, sl, fp, ip, sp}
    4b44:	2a053a67 	bcs	1534e8 <_Min_Stack_Size+0x1530e8>
    4b48:	01040200 	mrseq	r0, R12_usr
    4b4c:	4107053c 	tstmi	r7, ip, lsr r5
    4b50:	05671705 	strbeq	r1, [r7, #-1797]!	; 0xfffff8fb
    4b54:	0a05e427 	beq	17dbf8 <_Min_Stack_Size+0x17d7f8>
    4b58:	83110566 	tsthi	r1, #427819008	; 0x19800000
    4b5c:	05670e05 	strbeq	r0, [r7, #-3589]!	; 0xfffff1fb
    4b60:	06055808 	streq	r5, [r5], -r8, lsl #16
    4b64:	9f0505a0 	svcls	0x000505a0
    4b68:	053e0e05 	ldreq	r0, [lr, #-3589]!	; 0xfffff1fb
    4b6c:	08053c16 	stmdaeq	r5, {r1, r2, r4, sl, fp, ip, sp}
    4b70:	750c0566 	strvc	r0, [ip, #-1382]	; 0xfffffa9a
    4b74:	052f0705 	streq	r0, [pc, #-1797]!	; 4477 <_Min_Stack_Size+0x4077>
    4b78:	05a04d0b 	streq	r4, [r0, #3339]!	; 0xd0b
    4b7c:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    4b80:	19053c01 	stmdbne	r5, {r0, sl, fp, ip, sp}
    4b84:	01040200 	mrseq	r0, R12_usr
    4b88:	3005053c 	andcc	r0, r5, ip, lsr r5
    4b8c:	053f0605 	ldreq	r0, [pc, #-1541]!	; 458f <_Min_Stack_Size+0x418f>
    4b90:	0a053d14 	beq	153fe8 <_Min_Stack_Size+0x153be8>
    4b94:	9f110558 	svcls	0x00110558
    4b98:	05e40a05 	strbeq	r0, [r4, #2565]!	; 0xa05
    4b9c:	18053c08 	stmdane	r5, {r3, sl, fp, ip, sp}
    4ba0:	02040200 	andeq	r0, r4, #0, 4
    4ba4:	0033052e 	eorseq	r0, r3, lr, lsr #10
    4ba8:	9e030402 	cdpls	4, 0, cr0, cr3, cr2, {0}
    4bac:	02002905 	andeq	r2, r0, #81920	; 0x14000
    4bb0:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    4bb4:	12053f07 	andne	r3, r5, #7, 30
    4bb8:	300b054e 	andcc	r0, fp, lr, asr #10
    4bbc:	91080705 	tstls	r8, r5, lsl #14
    4bc0:	053d2705 	ldreq	r2, [sp, #-1797]!	; 0xfffff8fb
    4bc4:	0e059e14 	mcreq	14, 0, r9, cr5, cr4, {0}
    4bc8:	3c140520 	cfldr32cc	mvfx0, [r4], {32}
    4bcc:	592e1205 	stmdbpl	lr!, {r0, r2, r9, ip}
    4bd0:	05660a05 	strbeq	r0, [r6, #-2565]!	; 0xfffff5fb
    4bd4:	0905390b 	stmdbeq	r5, {r0, r1, r3, r8, fp, ip, sp}
    4bd8:	240b054e 	strcs	r0, [fp], #-1358	; 0xfffffab2
    4bdc:	05210e05 	streq	r0, [r1, #-3589]!	; 0xfffff1fb
    4be0:	0b053c12 	bleq	153c30 <_Min_Stack_Size+0x153830>
    4be4:	00350565 	eorseq	r0, r5, r5, ror #10
    4be8:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4bec:	02002c05 	andeq	r2, r0, #1280	; 0x500
    4bf0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4bf4:	0e053108 	adfeqs	f3, f5, #0.0
    4bf8:	3c12053e 	cfldr32cc	mvfx0, [r2], {62}	; 0x3e
    4bfc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4c00:	056b0104 	strbeq	r0, [fp, #-260]!	; 0xfffffefc
    4c04:	12052125 	andne	r2, r5, #1073741833	; 0x40000009
    4c08:	200c05ba 			; <UNDEFINED> instruction: 0x200c05ba
    4c0c:	053c1205 	ldreq	r1, [ip, #-517]!	; 0xfffffdfb
    4c10:	11052e10 	tstne	r5, r0, lsl lr
    4c14:	82080559 	andhi	r0, r8, #373293056	; 0x16400000
    4c18:	053a0905 	ldreq	r0, [sl, #-2309]!	; 0xfffff6fb
    4c1c:	0f054d07 	svceq	0x00054d07
    4c20:	3c060525 	cfstr32cc	mvfx0, [r6], {37}	; 0x25
    4c24:	02002705 	andeq	r2, r0, #1310720	; 0x140000
    4c28:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4c2c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    4c30:	08053c01 	stmdaeq	r5, {r0, sl, fp, ip, sp}
    4c34:	000f052f 	andeq	r0, pc, pc, lsr #10
    4c38:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4c3c:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    4c40:	054a0204 	strbeq	r0, [sl, #-516]	; 0xfffffdfc
    4c44:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    4c48:	0c053c02 	stceq	12, cr3, [r5], {2}
    4c4c:	3e0b052f 	cfsh32cc	mvfx0, mvfx11, #31
    4c50:	05210e05 	streq	r0, [r1, #-3589]!	; 0xfffff1fb
    4c54:	0b053c12 	bleq	153ca4 <_Min_Stack_Size+0x1538a4>
    4c58:	001a0565 	andseq	r0, sl, r5, ror #10
    4c5c:	4a010402 	bmi	45c6c <_Min_Stack_Size+0x4586c>
    4c60:	05410605 	strbeq	r0, [r1, #-1541]	; 0xfffff9fb
    4c64:	0e053d08 	cdpeq	13, 0, cr3, cr5, cr8, {0}
    4c68:	3c12054b 	cfldr32cc	mvfx0, [r2], {75}	; 0x4b
    4c6c:	05761405 	ldrbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    4c70:	0e053c0d 	cdpeq	12, 0, cr3, cr5, cr13, {0}
    4c74:	3c12052f 	cfldr32cc	mvfx0, [r2], {47}	; 0x2f
    4c78:	05761405 	ldrbeq	r1, [r6, #-1029]!	; 0xfffffbfb
    4c7c:	0e053c0d 	cdpeq	12, 0, cr3, cr5, cr13, {0}
    4c80:	3c12052f 	cfldr32cc	mvfx0, [r2], {47}	; 0x2f
    4c84:	056a0a05 	strbeq	r0, [sl, #-2565]!	; 0xfffff5fb
    4c88:	04020001 	streq	r0, [r2], #-1
    4c8c:	0802f303 	stmdaeq	r2, {r0, r1, r8, r9, ip, sp, lr, pc}
    4c90:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4c94:	02050001 	andeq	r0, r5, #1
    4c98:	0800286c 	stmdaeq	r0, {r2, r3, r5, r6, fp, sp}
    4c9c:	0104c103 	tsteq	r4, r3, lsl #2
    4ca0:	05760a05 	ldrbeq	r0, [r6, #-2565]!	; 0xfffff5fb
    4ca4:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    4ca8:	0523314c 	streq	r3, [r3, #-332]!	; 0xfffffeb4
    4cac:	07052e08 	streq	r2, [r5, -r8, lsl #28]
    4cb0:	910d0530 	tstls	sp, r0, lsr r5
    4cb4:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
    4cb8:	0b05240d 	bleq	14dcf4 <_Min_Stack_Size+0x14d8f4>
    4cbc:	300f0540 	andcc	r0, pc, r0, asr #10
    4cc0:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    4cc4:	13280219 			; <UNDEFINED> instruction: 0x13280219
    4cc8:	054a3105 	strbeq	r3, [sl, #-261]	; 0xfffffefb
    4ccc:	09053c37 	stmdbeq	r5, {r0, r1, r2, r4, r5, sl, fp, ip, sp}
    4cd0:	2119052e 	tstcs	r9, lr, lsr #10
    4cd4:	054a3105 	strbeq	r3, [sl, #-261]	; 0xfffffefb
    4cd8:	09053c37 	stmdbeq	r5, {r0, r1, r2, r4, r5, sl, fp, ip, sp}
    4cdc:	2119052e 	tstcs	r9, lr, lsr #10
    4ce0:	054a3105 	strbeq	r3, [sl, #-261]	; 0xfffffefb
    4ce4:	09053c37 	stmdbeq	r5, {r0, r1, r2, r4, r5, sl, fp, ip, sp}
    4ce8:	2119052e 	tstcs	r9, lr, lsr #10
    4cec:	054a3105 	strbeq	r3, [sl, #-261]	; 0xfffffefb
    4cf0:	09053c37 	stmdbeq	r5, {r0, r1, r2, r4, r5, sl, fp, ip, sp}
    4cf4:	2119052e 	tstcs	r9, lr, lsr #10
    4cf8:	054a3105 	strbeq	r3, [sl, #-261]	; 0xfffffefb
    4cfc:	09053c37 	stmdbeq	r5, {r0, r1, r2, r4, r5, sl, fp, ip, sp}
    4d00:	2137052e 	teqcs	r7, lr, lsr #10
    4d04:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    4d08:	0b052205 	bleq	14d524 <_Min_Stack_Size+0x14d124>
    4d0c:	2f09053f 	svccs	0x0009053f
    4d10:	05660805 	strbeq	r0, [r6, #-2053]!	; 0xfffff7fb
    4d14:	0e052f0f 	cdpeq	15, 0, cr2, cr5, cr15, {0}
    4d18:	2e0d0568 	cfsh32cs	mvfx0, mvfx13, #56
    4d1c:	052f1105 	streq	r1, [pc, #-261]!	; 4c1f <_Min_Stack_Size+0x481f>
    4d20:	0f05590a 	svceq	0x0005590a
    4d24:	4b1f053d 	blmi	7c6220 <_Min_Stack_Size+0x7c5e20>
    4d28:	312e0f05 			; <UNDEFINED> instruction: 0x312e0f05
    4d2c:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    4d30:	0905400f 	stmdbeq	r5, {r0, r1, r2, r3, lr}
    4d34:	2e08052f 	cfsh32cs	mvfx0, mvfx8, #31
    4d38:	4b2f0d05 	blmi	bc8154 <_Min_Stack_Size+0xbc7d54>
    4d3c:	053d0b05 	ldreq	r0, [sp, #-2821]!	; 0xfffff4fb
    4d40:	1505660a 	strne	r6, [r5, #-1546]	; 0xfffff9f6
    4d44:	6810052f 	ldmdavs	r0, {r0, r1, r2, r3, r5, r8, sl}
    4d48:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    4d4c:	33052f13 	movwcc	r2, #24339	; 0x5f13
    4d50:	3c130559 	cfldr32cc	mvfx0, [r3], {89}	; 0x59
    4d54:	05210f05 	streq	r0, [r1, #-3845]!	; 0xfffff0fb
    4d58:	0505410d 	streq	r4, [r5, #-269]	; 0xfffffef3
    4d5c:	020f052e 	andeq	r0, pc, #192937984	; 0xb800000
    4d60:	054b142c 	strbeq	r1, [fp, #-1068]	; 0xfffffbd4
    4d64:	0c053d0d 	stceq	13, cr3, [r5], {13}
    4d68:	2f11052e 	svccs	0x0011052e
    4d6c:	3e09054b 	cfsh32cc	mvfx0, mvfx9, #43
    4d70:	4b220f05 	blmi	88898c <_Min_Stack_Size+0x88858c>
    4d74:	053d0d05 	ldreq	r0, [sp, #-3333]!	; 0xfffff2fb
    4d78:	11052e0c 	tstne	r5, ip, lsl #28
    4d7c:	09054b2f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, fp, lr}
    4d80:	230f053e 	movwcs	r0, #62782	; 0xf53e
    4d84:	3d09054b 	cfstr32cc	mvfx0, [r9, #-300]	; 0xfffffed4
    4d88:	4b230f05 	blmi	8c89a4 <_Min_Stack_Size+0x8c85a4>
    4d8c:	053d0905 	ldreq	r0, [sp, #-2309]!	; 0xfffff6fb
    4d90:	054b220f 	strbeq	r2, [fp, #-527]	; 0xfffffdf1
    4d94:	03223d09 			; <UNDEFINED> instruction: 0x03223d09
    4d98:	05522e68 	ldrbeq	r2, [r2, #-3688]	; 0xfffff198
    4d9c:	2014030d 	andscs	r0, r4, sp, lsl #6
    4da0:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    4da4:	020a030d 	andeq	r0, sl, #872415232	; 0x34000000
    4da8:	050101af 	streq	r0, [r1, #-431]	; 0xfffffe51
    4dac:	1f052e0c 	svcne	0x00052e0c
    4db0:	01040200 	mrseq	r0, R12_usr
    4db4:	001c052e 	andseq	r0, ip, lr, lsr #10
    4db8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4dbc:	052f1005 	streq	r1, [pc, #-5]!	; 4dbf <_Min_Stack_Size+0x49bf>
    4dc0:	11053e12 	tstne	r5, r2, lsl lr
    4dc4:	2f10052e 	svccs	0x0010052e
    4dc8:	053e1205 	ldreq	r1, [lr, #-517]!	; 0xfffffdfb
    4dcc:	10052e11 	andne	r2, r5, r1, lsl lr
    4dd0:	11053f2f 	tstne	r5, pc, lsr #30
    4dd4:	4d0d052f 	cfstr32mi	mvfx0, [sp, #-188]	; 0xffffff44
    4dd8:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    4ddc:	0e052f11 	mcreq	15, 0, r2, cr5, cr1, {0}
    4de0:	2e0c054e 	cfsh32cs	mvfx0, mvfx12, #46
    4de4:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    4de8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4dec:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    4df0:	11052e01 	tstne	r5, r1, lsl #28
    4df4:	4e13052f 	cfmul64mi	mvdx0, mvdx3, mvdx15
    4df8:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    4dfc:	0e052f11 	mcreq	15, 0, r2, cr5, cr1, {0}
    4e00:	2e0c054e 	cfsh32cs	mvfx0, mvfx12, #46
    4e04:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    4e08:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    4e0c:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    4e10:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    4e14:	3c0e0530 	cfstr32cc	mvfx0, [lr], {48}	; 0x30
    4e18:	05421a05 	strbeq	r1, [r2, #-2565]	; 0xfffff5fb
    4e1c:	18053c13 	stmdane	r5, {r0, r1, r4, sl, fp, ip, sp}
    4e20:	5938052f 	ldmdbpl	r8!, {r0, r1, r2, r3, r5, r8, sl}
    4e24:	054a1305 	strbeq	r1, [sl, #-773]	; 0xfffffcfb
    4e28:	0878030e 	ldmdaeq	r8!, {r1, r2, r3, r8, r9}^
    4e2c:	0326054a 			; <UNDEFINED> instruction: 0x0326054a
    4e30:	4c05200b 	stcmi	0, cr2, [r5], {11}
    4e34:	003c053c 	eorseq	r0, ip, ip, lsr r5
    4e38:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4e3c:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    4e40:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    4e44:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
    4e48:	81052e02 	tsthi	r5, r2, lsl #28
    4e4c:	04020001 	streq	r0, [r2], #-1
    4e50:	71053c02 	tstvc	r5, r2, lsl #24
    4e54:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    4e58:	0066052e 	rsbeq	r0, r6, lr, lsr #10
    4e5c:	4a040402 	bmi	105e6c <_Min_Stack_Size+0x105a6c>
    4e60:	00018105 	andeq	r8, r1, r5, lsl #2
    4e64:	2e050402 	cdpcs	4, 0, cr0, cr5, cr2, {0}
    4e68:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    4e6c:	054a0804 	strbeq	r0, [sl, #-2052]	; 0xfffff7fc
    4e70:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    4e74:	13052108 	movwne	r2, #20744	; 0x5108
    4e78:	08040200 	stmdaeq	r4, {r9}
    4e7c:	000e054a 	andeq	r0, lr, sl, asr #10
    4e80:	03080402 	movweq	r0, #33794	; 0x8402
    4e84:	054a0874 	strbeq	r0, [sl, #-2164]	; 0xfffff78c
    4e88:	20110315 	andscs	r0, r1, r5, lsl r3
    4e8c:	053c0e05 	ldreq	r0, [ip, #-3589]!	; 0xfffff1fb
    4e90:	1305331a 	movwne	r3, #21274	; 0x531a
    4e94:	2f052f3c 	svccs	0x00052f3c
    4e98:	67056908 	strvs	r6, [r5, -r8, lsl #18]
    4e9c:	004e053c 	subeq	r0, lr, ip, lsr r5
    4ea0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4ea4:	02003f05 	andeq	r3, r0, #5, 30
    4ea8:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
    4eac:	04020070 	streq	r0, [r2], #-112	; 0xffffff90
    4eb0:	ae052e02 	cdpge	14, 0, cr2, cr5, cr2, {0}
    4eb4:	04020001 	streq	r0, [r2], #-1
    4eb8:	95053c02 	strls	r3, [r5, #-3074]	; 0xfffff3fe
    4ebc:	04020001 	streq	r0, [r2], #-1
    4ec0:	81052e04 	tsthi	r5, r4, lsl #28
    4ec4:	04020001 	streq	r0, [r2], #-1
    4ec8:	ae054a04 	vmlage.f32	s8, s10, s8
    4ecc:	04020001 	streq	r0, [r2], #-1
    4ed0:	20052e05 	andcs	r2, r5, r5, lsl #28
    4ed4:	08040200 	stmdaeq	r4, {r9}
    4ed8:	0013054a 	andseq	r0, r3, sl, asr #10
    4edc:	21080402 	tstcs	r8, r2, lsl #8
    4ee0:	31080f05 	tstcc	r8, r5, lsl #30
    4ee4:	053d0905 	ldreq	r0, [sp, #-2309]!	; 0xfffff6fb
    4ee8:	0c05250d 	cfstr32eq	mvfx2, [r5], {13}
    4eec:	0023052e 	eoreq	r0, r3, lr, lsr #10
    4ef0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4ef4:	084b0f05 	stmdaeq	fp, {r0, r2, r8, r9, sl, fp}^
    4ef8:	3d090575 	cfstr32cc	mvfx0, [r9, #-468]	; 0xfffffe2c
    4efc:	0e031605 	cfmadd32eq	mvax0, mvfx1, mvfx3, mvfx5
    4f00:	30150520 	andscc	r0, r5, r0, lsr #10
    4f04:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    4f08:	0d052f11 	stceq	15, cr2, [r5, #-68]	; 0xffffffbc
    4f0c:	81130521 	tsthi	r3, r1, lsr #10
    4f10:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
    4f14:	09054113 	stmdbeq	r5, {r0, r1, r4, r8, lr}
    4f18:	8413054a 	ldrhi	r0, [r3], #-1354	; 0xfffffab6
    4f1c:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    4f20:	0d052f11 	stceq	15, cr2, [r5, #-68]	; 0xffffffbc
    4f24:	81130521 	tsthi	r3, r1, lsr #10
    4f28:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
    4f2c:	0905400f 	stmdbeq	r5, {r0, r1, r2, r3, lr}
    4f30:	2415053d 	ldrcs	r0, [r5], #-1341	; 0xfffffac3
    4f34:	00591a05 	subseq	r1, r9, r5, lsl #20
    4f38:	06010402 	streq	r0, [r1], -r2, lsl #8
    4f3c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4f40:	02002e02 	andeq	r2, r0, #2, 28
    4f44:	052e0404 	streq	r0, [lr, #-1028]!	; 0xfffffbfc
    4f48:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    4f4c:	055a0604 	ldrbeq	r0, [sl, #-1540]	; 0xfffff9fc
    4f50:	0402000c 	streq	r0, [r2], #-12
    4f54:	0d053c04 	stceq	12, cr3, [r5, #-16]
    4f58:	6815052f 	ldmdavs	r5, {r0, r1, r2, r3, r5, r8, sl}
    4f5c:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    4f60:	0d052f11 	stceq	15, cr2, [r5, #-68]	; 0xffffffbc
    4f64:	81130521 	tsthi	r3, r1, lsr #10
    4f68:	053c1105 	ldreq	r1, [ip, #-261]!	; 0xfffffefb
    4f6c:	1205410f 	andne	r4, r5, #-1073741821	; 0xc0000003
    4f70:	3c0b0521 	cfstr32cc	mvfx0, [fp], {33}	; 0x21
    4f74:	05811105 	streq	r1, [r1, #261]	; 0x105
    4f78:	26052e0f 	strcs	r2, [r5], -pc, lsl #28
    4f7c:	01040200 	mrseq	r0, R12_usr
    4f80:	001a052e 	andseq	r0, sl, lr, lsr #10
    4f84:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4f88:	02004505 	andeq	r4, r0, #20971520	; 0x1400000
    4f8c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    4f90:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    4f94:	13053c02 	movwne	r3, #23554	; 0x5c02
    4f98:	3c0c0532 	cfstr32cc	mvfx0, [ip], {50}	; 0x32
    4f9c:	052f1105 	streq	r1, [pc, #-261]!	; 4e9f <_Min_Stack_Size+0x4a9f>
    4fa0:	1305210d 	movwne	r2, #20749	; 0x510d
    4fa4:	3c110581 	cfldr32cc	mvfx0, [r1], {129}	; 0x81
    4fa8:	05400f05 	strbeq	r0, [r0, #-3845]	; 0xfffff0fb
    4fac:	0f053d09 	svceq	0x00053d09
    4fb0:	51052f24 	tstpl	r5, r4, lsr #30
    4fb4:	4a110552 	bmi	446504 <_Min_Stack_Size+0x446104>
    4fb8:	32080f05 	andcc	r0, r8, #5, 30
    4fbc:	243d0905 	ldrtcs	r0, [sp], #-2309	; 0xfffff6fb
    4fc0:	05830f05 	streq	r0, [r3, #3845]	; 0xf05
    4fc4:	05233d09 	streq	r3, [r3, #-3337]!	; 0xfffff2f7
    4fc8:	0905910f 	stmdbeq	r5, {r0, r1, r2, r3, r8, ip, pc}
    4fcc:	030a053d 	movweq	r0, #42301	; 0xa53d
    4fd0:	05207dfb 	streq	r7, [r0, #-3579]!	; 0xfffff205
    4fd4:	03052e09 	movweq	r2, #24073	; 0x5e09
    4fd8:	3c028a03 			; <UNDEFINED> instruction: 0x3c028a03
    4fdc:	01040200 	mrseq	r0, R12_usr
    4fe0:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4fe4:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4fe8:	20040402 	andcs	r0, r4, r2, lsl #8
    4fec:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    4ff0:	5b060404 	blpl	186008 <_Min_Stack_Size+0x185c08>
    4ff4:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    4ff8:	02210404 	eoreq	r0, r1, #4, 8	; 0x4000000
    4ffc:	01010004 	tsteq	r1, r4
    5000:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5004:	00307c02 	eorseq	r7, r0, r2, lsl #24
    5008:	06de0308 	ldrbeq	r0, [lr], r8, lsl #6
    500c:	4c030501 	cfstr32mi	mvfx0, [r3], {1}
    5010:	053e1305 	ldreq	r1, [lr, #-773]!	; 0xfffffcfb
    5014:	0105a00a 	tsteq	r5, sl
    5018:	000a0221 	andeq	r0, sl, r1, lsr #4
    501c:	01050101 	tsteq	r5, r1, lsl #2
    5020:	00020500 	andeq	r0, r2, r0, lsl #10
    5024:	03000000 	movweq	r0, #0
    5028:	050106e9 	streq	r0, [r1, #-1769]	; 0xfffff917
    502c:	13055a03 	movwne	r5, #23043	; 0x5a03
    5030:	a00a053d 	andge	r0, sl, sp, lsr r5
    5034:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    5038:	01010009 	tsteq	r1, r9
    503c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5040:	00000002 	andeq	r0, r0, r2
    5044:	06f30300 	ldrbteq	r0, [r3], r0, lsl #6
    5048:	68030501 	stmdavs	r3, {r0, r8, sl}
    504c:	053d1305 	ldreq	r1, [sp, #-773]!	; 0xfffffcfb
    5050:	0105920a 	tsteq	r5, sl, lsl #4
    5054:	00090221 	andeq	r0, r9, r1, lsr #4
    5058:	01050101 	tsteq	r5, r1, lsl #2
    505c:	00020500 	andeq	r0, r2, r0, lsl #10
    5060:	03000000 	movweq	r0, #0
    5064:	050106fd 	streq	r0, [r1, #-1789]	; 0xfffff903
    5068:	01055a0a 	tsteq	r5, sl, lsl #20
    506c:	000602ad 	andeq	r0, r6, sp, lsr #5
    5070:	01050101 	tsteq	r5, r1, lsl #2
    5074:	00020500 	andeq	r0, r2, r0, lsl #10
    5078:	03000000 	movweq	r0, #0
    507c:	05010784 	streq	r0, [r1, #-1924]	; 0xfffff87c
    5080:	0105750a 	tsteq	r5, sl, lsl #10
    5084:	00060291 	muleq	r6, r1, r2
    5088:	01050101 	tsteq	r5, r1, lsl #2
    508c:	00020500 	andeq	r0, r2, r0, lsl #10
    5090:	03000000 	movweq	r0, #0
    5094:	0501078a 	streq	r0, [r1, #-1930]	; 0xfffff876
    5098:	1b056803 	blne	15f0ac <_Min_Stack_Size+0x15ecac>
    509c:	4b13053d 	blmi	4c6598 <_Min_Stack_Size+0x4c6198>
    50a0:	05ae0a05 	streq	r0, [lr, #2565]!	; 0xa05
    50a4:	09022101 	stmdbeq	r2, {r0, r8, sp}
    50a8:	83010100 	movwhi	r0, #4352	; 0x1100
    50ac:	03000002 	movweq	r0, #2
    50b0:	00009a00 	andeq	r9, r0, r0, lsl #20
    50b4:	fb010200 	blx	458be <_Min_Stack_Size+0x454be>
    50b8:	01000d0e 	tsteq	r0, lr, lsl #26
    50bc:	00010101 	andeq	r0, r1, r1, lsl #2
    50c0:	00010000 	andeq	r0, r1, r0
    50c4:	2e2e0100 	sufcse	f0, f6, f0
    50c8:	2f2e2e2f 	svccs	0x002e2e2f
    50cc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    50d0:	656b2f2e 	strbvs	r2, [fp, #-3886]!	; 0xfffff0d2
    50d4:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    50d8:	7265732f 	rsbvc	r7, r5, #-1140850688	; 0xbc000000
    50dc:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    50e0:	74696c2f 	strbtvc	r6, [r9], #-3119	; 0xfffff3d1
    50e4:	72705f65 	rsbsvc	r5, r0, #404	; 0x194
    50e8:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
    50ec:	73752f00 	cmnvc	r5, #0, 30
    50f0:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    50f4:	63672f62 	cmnvs	r7, #392	; 0x188
    50f8:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    50fc:	6f6e2d6d 	svcvs	0x006e2d6d
    5100:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    5104:	2f696261 	svccs	0x00696261
    5108:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    510c:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    5110:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5114:	6c000065 	stcvs	0, cr0, [r0], {101}	; 0x65
    5118:	5f657469 	svcpl	0x00657469
    511c:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
    5120:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
    5124:	00000100 	andeq	r0, r0, r0, lsl #2
    5128:	61647473 	smcvs	18243	; 0x4743
    512c:	682e6772 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, sp, lr}
    5130:	00000200 	andeq	r0, r0, r0, lsl #4
    5134:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    5138:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    513c:	00000200 	andeq	r0, r0, r0, lsl #4
    5140:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    5144:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    5148:	00003e6e 	andeq	r3, r0, lr, ror #28
    514c:	05000000 	streq	r0, [r0, #-0]
    5150:	02050001 	andeq	r0, r5, #1
    5154:	080030b4 	stmdaeq	r0, {r2, r4, r5, r7, ip, sp}
    5158:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    515c:	01055905 	tsteq	r5, r5, lsl #18
    5160:	0004024b 	andeq	r0, r4, fp, asr #4
    5164:	01050101 	tsteq	r5, r1, lsl #2
    5168:	00020500 	andeq	r0, r2, r0, lsl #10
    516c:	03000000 	movweq	r0, #0
    5170:	1105010e 	tstne	r5, lr, lsl #2
    5174:	3c0b052f 	cfstr32cc	mvfx0, [fp], {47}	; 0x2f
    5178:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    517c:	01010002 	tsteq	r1, r2
    5180:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5184:	00000002 	andeq	r0, r0, r2
    5188:	01130300 	tsteq	r3, r0, lsl #6
    518c:	02001005 	andeq	r1, r0, #5
    5190:	054c0104 	strbeq	r0, [ip, #-260]	; 0xfffffefc
    5194:	0402000e 	streq	r0, [r2], #-14
    5198:	02004a01 	andeq	r4, r0, #4096	; 0x1000
    519c:	052f0104 	streq	r0, [pc, #-260]!	; 50a0 <_Min_Stack_Size+0x4ca0>
    51a0:	04020005 	streq	r0, [r2], #-5
    51a4:	01052e01 	tsteq	r5, r1, lsl #28
    51a8:	0004022f 	andeq	r0, r4, pc, lsr #4
    51ac:	01050101 	tsteq	r5, r1, lsl #2
    51b0:	00020500 	andeq	r0, r2, r0, lsl #10
    51b4:	03000000 	movweq	r0, #0
    51b8:	05050119 	streq	r0, [r5, #-281]	; 0xfffffee7
    51bc:	4b010559 	blmi	46728 <_Min_Stack_Size+0x46328>
    51c0:	01000402 	tsteq	r0, r2, lsl #8
    51c4:	00010501 	andeq	r0, r1, r1, lsl #10
    51c8:	00000205 	andeq	r0, r0, r5, lsl #4
    51cc:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
    51d0:	4b0b0501 	blmi	2c65dc <_Min_Stack_Size+0x2c61dc>
    51d4:	05211605 	streq	r1, [r1, #-1541]!	; 0xfffff9fb
    51d8:	0c053c09 	stceq	12, cr3, [r5], {9}
    51dc:	2e0b0549 	cfsh32cs	mvfx0, mvfx11, #41
    51e0:	02310105 	eorseq	r0, r1, #1073741825	; 0x40000001
    51e4:	01010004 	tsteq	r1, r4
    51e8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    51ec:	00000002 	andeq	r0, r0, r2
    51f0:	01250300 			; <UNDEFINED> instruction: 0x01250300
    51f4:	054b0e05 	strbeq	r0, [fp, #-3589]	; 0xfffff1fb
    51f8:	1b052f0a 	blne	150e28 <_Min_Stack_Size+0x150a28>
    51fc:	02040200 	andeq	r0, r4, #0, 4
    5200:	000e0520 	andeq	r0, lr, r0, lsr #10
    5204:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5208:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    520c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    5210:	0402000a 	streq	r0, [r2], #-10
    5214:	0c052001 	stceq	0, cr2, [r5], {1}
    5218:	2101052f 	tstcs	r1, pc, lsr #10
    521c:	01000502 	tsteq	r0, r2, lsl #10
    5220:	00010501 	andeq	r0, r1, r1, lsl #10
    5224:	00000205 	andeq	r0, r0, r5, lsl #4
    5228:	2c030000 	stccs	0, cr0, [r3], {-0}
    522c:	59130501 	ldmdbpl	r3, {r0, r8, sl}
    5230:	052f0b05 	streq	r0, [pc, #-2821]!	; 4733 <_Min_Stack_Size+0x4333>
    5234:	0556220d 	ldrbeq	r2, [r6, #-525]	; 0xfffffdf3
    5238:	0c053c0b 	stceq	12, cr3, [r5], {11}
    523c:	21010532 	tstcs	r1, r2, lsr r5
    5240:	01000502 	tsteq	r0, r2, lsl #10
    5244:	00010501 	andeq	r0, r1, r1, lsl #10
    5248:	00000205 	andeq	r0, r0, r5, lsl #4
    524c:	36030000 	strcc	r0, [r3], -r0
    5250:	4e0b0501 	cfsh32mi	mvfx0, mvfx11, #1
    5254:	052f0905 	streq	r0, [pc, #-2309]!	; 4957 <_Min_Stack_Size+0x4557>
    5258:	0b053005 	bleq	151274 <_Min_Stack_Size+0x150e74>
    525c:	2211053d 	andscs	r0, r1, #255852544	; 0xf400000
    5260:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    5264:	15059310 	strne	r9, [r5, #-784]	; 0xfffffcf0
    5268:	1536023d 	ldrne	r0, [r6, #-573]!	; 0xfffffdc3
    526c:	2f591705 	svccs	0x00591705
    5270:	231a052f 	tstcs	sl, #197132288	; 0xbc00000
    5274:	053d1b05 	ldreq	r1, [sp, #-2821]!	; 0xfffff4fb
    5278:	15057e17 	strne	r7, [r5, #-3607]	; 0xfffff1e9
    527c:	4c170543 	cfldr32mi	mvfx0, [r7], {67}	; 0x43
    5280:	2220052f 	eorcs	r0, r0, #197132288	; 0xbc00000
    5284:	05202205 	streq	r2, [r0, #-517]!	; 0xfffffdfb
    5288:	18057420 	stmdane	r5, {r5, sl, ip, sp, lr}
    528c:	211e052e 	tstcs	lr, lr, lsr #10
    5290:	05741b05 	ldrbeq	r1, [r4, #-2821]!	; 0xfffff4fb
    5294:	1a057615 	bne	162af0 <_Min_Stack_Size+0x1626f0>
    5298:	03170568 	tsteq	r7, #104, 10	; 0x1a000000
    529c:	11053c79 	tstne	r5, r9, ror ip
    52a0:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    52a4:	17052215 	smladne	r5, r5, r2, r2
    52a8:	052f2f59 	streq	r2, [pc, #-3929]!	; 4357 <_Min_Stack_Size+0x3f57>
    52ac:	1b05231a 	blne	14df1c <_Min_Stack_Size+0x14db1c>
    52b0:	6217053d 	andsvs	r0, r7, #255852544	; 0xf400000
    52b4:	05431505 	strbeq	r1, [r3, #-1285]	; 0xfffffafb
    52b8:	052f4c17 	streq	r4, [pc, #-3095]!	; 46a9 <_Min_Stack_Size+0x42a9>
    52bc:	22052220 	andcs	r2, r5, #32, 4
    52c0:	74200520 	strtvc	r0, [r0], #-1312	; 0xfffffae0
    52c4:	052e1805 	streq	r1, [lr, #-2053]!	; 0xfffff7fb
    52c8:	1b05211e 	blne	14d748 <_Min_Stack_Size+0x14d348>
    52cc:	75180574 	ldrvc	r0, [r8, #-1396]	; 0xfffffa8c
    52d0:	773d1905 	ldrvc	r1, [sp, -r5, lsl #18]!
    52d4:	05671a05 	strbeq	r1, [r7, #-2565]!	; 0xfffff5fb
    52d8:	3c770317 	ldclcc	3, cr0, [r7], #-92	; 0xffffffa4
    52dc:	0b031105 	bleq	c96f8 <_Min_Stack_Size+0xc92f8>
    52e0:	2213053c 	andscs	r0, r3, #60, 10	; 0xf000000
    52e4:	05591105 	ldrbeq	r1, [r9, #-261]	; 0xfffffefb
    52e8:	15053e18 	strne	r3, [r5, #-3608]	; 0xfffff1e8
    52ec:	3e11054a 	cfmac32cc	mvfx0, mvfx1, mvfx10
    52f0:	05222005 	streq	r2, [r2, #-5]!
    52f4:	15054a11 	strne	r4, [r5, #-2577]	; 0xfffff5ef
    52f8:	3e11054b 	cfmac32cc	mvfx0, mvfx1, mvfx11
    52fc:	22230d05 	eorcs	r0, r3, #320	; 0x140
    5300:	053d1105 	ldreq	r1, [sp, #-261]!	; 0xfffffefb
    5304:	05223d0d 	streq	r3, [r2, #-3341]!	; 0xfffff2f3
    5308:	0d053d11 	stceq	13, cr3, [r5, #-68]	; 0xffffffbc
    530c:	1105223d 	tstne	r5, sp, lsr r2
    5310:	030d0559 	movweq	r0, #54617	; 0xd559
    5314:	0c054a75 			; <UNDEFINED> instruction: 0x0c054a75
    5318:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    531c:	7faa0314 	svcvc	0x00aa0314
    5320:	2e0b053c 	mcrcs	5, 0, r0, cr11, cr12, {1}
    5324:	d9030c05 	stmdble	r3, {r0, r2, sl, fp}
    5328:	01053c00 	tsteq	r5, r0, lsl #24
    532c:	000a0221 	andeq	r0, sl, r1, lsr #4
    5330:	02c50101 	sbceq	r0, r5, #1073741824	; 0x40000000
    5334:	00030000 	andeq	r0, r3, r0
    5338:	000001e7 	andeq	r0, r0, r7, ror #3
    533c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    5340:	0101000d 	tsteq	r1, sp
    5344:	00000101 	andeq	r0, r0, r1, lsl #2
    5348:	00000100 	andeq	r0, r0, r0, lsl #2
    534c:	2f2e2e01 	svccs	0x002e2e01
    5350:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5354:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5358:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    535c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    5360:	534d432f 	movtpl	r4, #54063	; 0xd32f
    5364:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    5368:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    536c:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    5370:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5374:	2f2e2e2f 	svccs	0x002e2e2f
    5378:	6b2f2e2e 	blvs	bd0c38 <_Min_Stack_Size+0xbd0838>
    537c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    5380:	65732f6c 	ldrbvs	r2, [r3, #-3948]!	; 0xfffff094
    5384:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    5388:	74722f65 	ldrbtvc	r2, [r2], #-3941	; 0xfffff09b
    538c:	2f00736f 	svccs	0x0000736f
    5390:	2f727375 	svccs	0x00727375
    5394:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5398:	2f656475 	svccs	0x00656475
    539c:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    53a0:	6d2f6269 	sfmvs	f6, 4, [pc, #-420]!	; 5204 <_Min_Stack_Size+0x4e04>
    53a4:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    53a8:	2f00656e 	svccs	0x0000656e
    53ac:	2f727375 	svccs	0x00727375
    53b0:	2f62696c 	svccs	0x0062696c
    53b4:	2f636367 	svccs	0x00636367
    53b8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    53bc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    53c0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    53c4:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
    53c8:	2f312e33 	svccs	0x00312e33
    53cc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    53d0:	00656475 	rsbeq	r6, r5, r5, ror r4
    53d4:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    53d8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    53dc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    53e0:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    53e4:	2f62696c 	svccs	0x0062696c
    53e8:	00737973 	rsbseq	r7, r3, r3, ror r9
    53ec:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    53f0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    53f4:	2f2e2e2f 	svccs	0x002e2e2f
    53f8:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    53fc:	2f737265 	svccs	0x00737265
    5400:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    5404:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    5408:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    540c:	2f54532f 	svccs	0x0054532f
    5410:	334d5453 	movtcc	r5, #54355	; 0xd453
    5414:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    5418:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    541c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5420:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    5424:	2f2e2e2f 	svccs	0x002e2e2f
    5428:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    542c:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    5430:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    5434:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    5438:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
    543c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5440:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5444:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    5448:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    544c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5450:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 5458 <_Min_Stack_Size+0x5058>
    5454:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    5458:	6e692f72 	mcrvs	15, 3, r2, cr9, cr2, {3}
    545c:	63000063 	movwvs	r0, #99	; 0x63
    5460:	5f65726f 	svcpl	0x0065726f
    5464:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    5468:	00010068 	andeq	r0, r1, r8, rrx
    546c:	69777300 	ldmdbvs	r7!, {r8, r9, ip, sp, lr}^
    5470:	2e686374 	mcrcs	3, 3, r6, cr8, cr4, {3}
    5474:	00020063 	andeq	r0, r2, r3, rrx
    5478:	736d6300 	cmnvc	sp, #0, 6
    547c:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    5480:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    5484:	00000100 	andeq	r0, r0, r0, lsl #2
    5488:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    548c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    5490:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    5494:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    5498:	00000300 	andeq	r0, r0, r0, lsl #6
    549c:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    54a0:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    54a4:	00000400 	andeq	r0, r0, r0, lsl #8
    54a8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    54ac:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    54b0:	00000500 	andeq	r0, r0, r0, lsl #10
    54b4:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
    54b8:	00682e74 	rsbeq	r2, r8, r4, ror lr
    54bc:	6c000005 	stcvs	0, cr0, [r0], {5}
    54c0:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
    54c4:	00050068 	andeq	r0, r5, r8, rrx
    54c8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    54cc:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    54d0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    54d4:	74730000 	ldrbtvc	r0, [r3], #-0
    54d8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    54dc:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    54e0:	00682e78 	rsbeq	r2, r8, r8, ror lr
    54e4:	73000006 	movwvc	r0, #6
    54e8:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    54ec:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    54f0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    54f4:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    54f8:	00060068 	andeq	r0, r6, r8, rrx
    54fc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5500:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5504:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5508:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    550c:	00000700 	andeq	r0, r0, r0, lsl #14
    5510:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    5514:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5518:	736f0000 	cmnvc	pc, #0
    551c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5520:	05000000 	streq	r0, [r0, #-0]
    5524:	02050001 	andeq	r0, r5, #1
    5528:	080030d0 	stmdaeq	r0, {r4, r6, r7, ip, sp}
    552c:	010e9803 	tsteq	lr, r3, lsl #16
    5530:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    5534:	09054c30 	stmdbeq	r5, {r4, r5, sl, fp, lr}
    5538:	200f052e 	andcs	r0, pc, lr, lsr #10
    553c:	052e3005 	streq	r3, [lr, #-5]!
    5540:	01052e2e 	tsteq	r5, lr, lsr #28
    5544:	1e300542 	cdpne	5, 3, cr0, cr0, cr2, {2}
    5548:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    554c:	28052020 	stmdacs	r5, {r5, sp}
    5550:	2030053c 	eorscs	r0, r0, ip, lsr r5
    5554:	052e2e05 	streq	r2, [lr, #-3589]!	; 0xfffff1fb
    5558:	0a023001 	beq	91564 <_Min_Stack_Size+0x91164>
    555c:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    5560:	00010502 	andeq	r0, r1, r2, lsl #10
    5564:	31240205 			; <UNDEFINED> instruction: 0x31240205
    5568:	041a0800 	ldreq	r0, [sl], #-2048	; 0xfffff800
    556c:	03030503 	movweq	r0, #13571	; 0x3503
    5570:	053c02f9 	ldreq	r0, [ip, #-761]!	; 0xfffffd07
    5574:	02043d09 	andeq	r3, r4, #576	; 0x240
    5578:	87031805 	strhi	r1, [r3, -r5, lsl #16]
    557c:	0304207d 	movweq	r2, #16509	; 0x407d
    5580:	84030305 	strhi	r0, [r3], #-773	; 0xfffffcfb
    5584:	02042001 	andeq	r2, r4, #1
    5588:	fe030c05 	cdp2	12, 0, cr0, cr3, cr5, {0}
    558c:	0105207e 	tsteq	r5, lr, ror r0
    5590:	00050221 	andeq	r0, r5, r1, lsr #4
    5594:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    5598:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    559c:	00314202 	eorseq	r4, r1, r2, lsl #4
    55a0:	010f0308 	tsteq	pc, r8, lsl #6
    55a4:	03050304 	movweq	r0, #21252	; 0x5304
    55a8:	66038e03 	strvs	r8, [r3], -r3, lsl #28
    55ac:	01050204 	tsteq	r5, r4, lsl #4
    55b0:	3c7cf403 	cfldrdcc	mvd15, [ip], #-12
    55b4:	01000502 	tsteq	r0, r2, lsl #10
    55b8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    55bc:	02050001 	andeq	r0, r5, #1
    55c0:	08003160 	stmdaeq	r0, {r5, r6, r8, ip, sp}
    55c4:	04011403 	streq	r1, [r1], #-1027	; 0xfffffbfd
    55c8:	03030503 	movweq	r0, #13571	; 0x3503
    55cc:	04580282 	ldrbeq	r0, [r8], #-642	; 0xfffffd7e
    55d0:	03050502 	movweq	r0, #21762	; 0x5502
    55d4:	053c7e80 	ldreq	r7, [ip, #-3712]!	; 0xfffff180
    55d8:	0105590f 	tsteq	r5, pc, lsl #18
    55dc:	00070267 	andeq	r0, r7, r7, ror #4
    55e0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    55e4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    55e8:	00319402 	eorseq	r9, r1, r2, lsl #8
    55ec:	011a0308 	tsteq	sl, r8, lsl #6
    55f0:	052f0f05 	streq	r0, [pc, #-3845]!	; 46f3 <_Min_Stack_Size+0x42f3>
    55f4:	06026701 	streq	r6, [r2], -r1, lsl #14
    55f8:	9e010100 	adflss	f0, f1, f0
    55fc:	03000006 	movweq	r0, #6
    5600:	0001b600 	andeq	fp, r1, r0, lsl #12
    5604:	fb010200 	blx	45e0e <_Min_Stack_Size+0x45a0e>
    5608:	01000d0e 	tsteq	r0, lr, lsl #26
    560c:	00010101 	andeq	r0, r1, r1, lsl #2
    5610:	00010000 	andeq	r0, r1, r0
    5614:	2e2e0100 	sufcse	f0, f6, f0
    5618:	2f2e2e2f 	svccs	0x002e2e2f
    561c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5620:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    5624:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    5628:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    562c:	2f534953 	svccs	0x00534953
    5630:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    5634:	00656475 	rsbeq	r6, r5, r5, ror r4
    5638:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    563c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5640:	2f2e2e2f 	svccs	0x002e2e2f
    5644:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    5648:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    564c:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    5650:	722f6563 	eorvc	r6, pc, #415236096	; 0x18c00000
    5654:	00736f74 	rsbseq	r6, r3, r4, ror pc
    5658:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    565c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5660:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    5664:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    5668:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    566c:	61652d65 	cmnvs	r5, r5, ror #26
    5670:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    5674:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    5678:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    567c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5680:	2f2e2e00 	svccs	0x002e2e00
    5684:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5688:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    568c:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    5690:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    5694:	534d432f 	movtpl	r4, #54063	; 0xd32f
    5698:	442f5349 	strtmi	r5, [pc], #-841	; 56a0 <_Min_Stack_Size+0x52a0>
    569c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    56a0:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    56a4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    56a8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    56ac:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    56b0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    56b4:	2f006564 	svccs	0x00006564
    56b8:	2f727375 	svccs	0x00727375
    56bc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    56c0:	2f656475 	svccs	0x00656475
    56c4:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    56c8:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
    56cc:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    56d0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    56d4:	2f2e2e2f 	svccs	0x002e2e2f
    56d8:	642f2e2e 	strtvs	r2, [pc], #-3630	; 56e0 <_Min_Stack_Size+0x52e0>
    56dc:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    56e0:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    56e4:	2f706968 	svccs	0x00706968
    56e8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    56ec:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    56f0:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    56f4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    56f8:	5f787834 	svcpl	0x00787834
    56fc:	5f4c4148 	svcpl	0x004c4148
    5700:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    5704:	692f7265 	stmdbvs	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    5708:	0000636e 	andeq	r6, r0, lr, ror #6
    570c:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
    5710:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
    5714:	0100682e 	tsteq	r0, lr, lsr #16
    5718:	61740000 	cmnvs	r4, r0
    571c:	6d5f6b73 	vldrvs	d22, [pc, #-460]	; 5558 <_Min_Stack_Size+0x5158>
    5720:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
    5724:	00020063 	andeq	r0, r2, r3, rrx
    5728:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    572c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    5730:	00030068 	andeq	r0, r3, r8, rrx
    5734:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5738:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    573c:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    5740:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    5744:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    5748:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    574c:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    5750:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5754:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    5758:	00000400 	andeq	r0, r0, r0, lsl #8
    575c:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    5760:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    5764:	00000300 	andeq	r0, r0, r0, lsl #6
    5768:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    576c:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    5770:	00000500 	andeq	r0, r0, r0, lsl #10
    5774:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
    5778:	00682e74 	rsbeq	r2, r8, r4, ror lr
    577c:	6c000005 	stcvs	0, cr0, [r0], {5}
    5780:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
    5784:	00050068 	andeq	r0, r5, r8, rrx
    5788:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    578c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5790:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5794:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    5798:	00000600 	andeq	r0, r0, r0, lsl #12
    579c:	6d746962 			; <UNDEFINED> instruction: 0x6d746962
    57a0:	682e7061 	stmdavs	lr!, {r0, r5, r6, ip, sp, lr}
    57a4:	00000200 	andeq	r0, r0, r0, lsl #4
    57a8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    57ac:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    57b0:	736f0000 	cmnvc	pc, #0
    57b4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    57b8:	05000000 	streq	r0, [r0, #-0]
    57bc:	02050001 	andeq	r0, r5, #1
    57c0:	080031b0 	stmdaeq	r0, {r4, r5, r7, r8, ip, sp}
    57c4:	010e9803 	tsteq	lr, r3, lsl #16
    57c8:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    57cc:	09054c30 	stmdbeq	r5, {r4, r5, sl, fp, lr}
    57d0:	200f052e 	andcs	r0, pc, lr, lsr #10
    57d4:	052e3005 	streq	r3, [lr, #-5]!
    57d8:	01052e2e 	tsteq	r5, lr, lsr #28
    57dc:	1e300542 	cdpne	5, 3, cr0, cr0, cr2, {2}
    57e0:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    57e4:	28052020 	stmdacs	r5, {r5, sp}
    57e8:	2030053c 	eorscs	r0, r0, ip, lsr r5
    57ec:	052e2e05 	streq	r2, [lr, #-3589]!	; 0xfffff1fb
    57f0:	0a023001 	beq	917fc <_Min_Stack_Size+0x913fc>
    57f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    57f8:	02050001 	andeq	r0, r5, #1
    57fc:	08003204 	stmdaeq	r0, {r2, r9, ip, sp}
    5800:	010fe603 	tsteq	pc, r3, lsl #12
    5804:	054b0e05 	strbeq	r0, [fp, #-3589]	; 0xfffff1fb
    5808:	0c052e06 	stceq	14, cr2, [r5], {6}
    580c:	310a053e 	tstcc	sl, lr, lsr r5
    5810:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    5814:	03052e12 	movweq	r2, #24082	; 0x5e12
    5818:	590a0521 	stmdbpl	sl, {r0, r5, r8, sl}
    581c:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
    5820:	12052f0a 	andne	r2, r5, #10, 30	; 0x28
    5824:	310a0520 	tstcc	sl, r0, lsr #10
    5828:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    582c:	01010007 	tsteq	r1, r7
    5830:	01050204 	tsteq	r5, r4, lsl #4
    5834:	48020500 	stmdami	r2, {r8, sl}
    5838:	03080032 	movweq	r0, #32818	; 0x8032
    583c:	10050117 	andne	r0, r5, r7, lsl r1
    5840:	12057575 	andne	r7, r5, #490733568	; 0x1d400000
    5844:	2010053c 	andscs	r0, r0, ip, lsr r5
    5848:	6767672f 	strbvs	r6, [r7, -pc, lsr #14]!
    584c:	12056767 	andne	r6, r5, #27000832	; 0x19c0000
    5850:	2010053c 	andscs	r0, r0, ip, lsr r5
    5854:	6767672f 	strbvs	r6, [r7, -pc, lsr #14]!
    5858:	67676767 	strbvs	r6, [r7, -r7, ror #14]!
    585c:	05671105 	strbeq	r1, [r7, #-261]!	; 0xfffffefb
    5860:	14053d17 	strne	r3, [r5], #-3351	; 0xfffff2e9
    5864:	3d11053d 	cfldr32cc	mvfx0, [r1, #-244]	; 0xffffff0c
    5868:	3e05053d 	mcrcc	5, 0, r0, cr5, cr13, {1}
    586c:	05ca5959 	strbeq	r5, [sl, #2393]	; 0x959
    5870:	08024b01 	stmdaeq	r2, {r0, r8, r9, fp, lr}
    5874:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    5878:	00010502 	andeq	r0, r1, r2, lsl #10
    587c:	337c0205 	cmncc	ip, #1342177280	; 0x50000000
    5880:	35030800 	strcc	r0, [r3, #-2048]	; 0xfffff800
    5884:	3d210501 	cfstr32cc	mvfx0, [r1, #-4]!
    5888:	054c1505 	strbeq	r1, [ip, #-1285]	; 0xfffffafb
    588c:	1505ac0e 	strne	sl, [r5, #-3086]	; 0xfffff3f2
    5890:	2f010521 	svccs	0x00010521
    5894:	01000902 	tsteq	r0, r2, lsl #18
    5898:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    589c:	02050001 	andeq	r0, r5, #1
    58a0:	080033b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip, sp}
    58a4:	05013d03 	streq	r3, [r1, #-3331]	; 0xfffff2fd
    58a8:	16053d09 	strne	r3, [r5], -r9, lsl #26
    58ac:	3d05052f 	cfstr32cc	mvfx0, [r5, #-188]	; 0xffffff44
    58b0:	053d0c05 	ldreq	r0, [sp, #-3077]!	; 0xfffff3fb
    58b4:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
    58b8:	03040200 	movweq	r0, #16896	; 0x4200
    58bc:	00240521 	eoreq	r0, r4, r1, lsr #10
    58c0:	9d030402 	cfstrsls	mvf0, [r3, #-8]
    58c4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    58c8:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    58cc:	0a023f01 	beq	954d8 <_Min_Stack_Size+0x950d8>
    58d0:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    58d4:	00010502 	andeq	r0, r1, r2, lsl #10
    58d8:	34080205 	strcc	r0, [r8], #-517	; 0xfffffdfb
    58dc:	c7030800 	strgt	r0, [r3, -r0, lsl #16]
    58e0:	17050100 	strne	r0, [r5, -r0, lsl #2]
    58e4:	3d1a053d 	cfldr32cc	mvfx0, [sl, #-244]	; 0xffffff0c
    58e8:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    58ec:	05052f19 	streq	r2, [r5, #-3865]	; 0xfffff0e7
    58f0:	3d010568 	cfstr32cc	mvfx0, [r1, #-416]	; 0xfffffe60
    58f4:	01000702 	tsteq	r0, r2, lsl #14
    58f8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    58fc:	02050001 	andeq	r0, r5, #1
    5900:	0800343c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip, sp}
    5904:	0100d003 	tsteq	r0, r3
    5908:	053d1705 	ldreq	r1, [sp, #-1797]!	; 0xfffff8fb
    590c:	08053d1a 	stmdaeq	r5, {r1, r3, r4, r8, sl, fp, ip, sp}
    5910:	2f0d052e 	svccs	0x000d052e
    5914:	054a0c05 	strbeq	r0, [sl, #-3077]	; 0xfffff3fb
    5918:	0c052e0d 	stceq	14, cr2, [r5], {13}
    591c:	2f0d052e 	svccs	0x000d052e
    5920:	05310505 	ldreq	r0, [r1, #-1285]!	; 0xfffffafb
    5924:	07023d01 	streq	r3, [r2, -r1, lsl #26]
    5928:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    592c:	00010502 	andeq	r0, r1, r2, lsl #10
    5930:	347c0205 	ldrbtcc	r0, [ip], #-517	; 0xfffffdfb
    5934:	db030800 	blle	c793c <_Min_Stack_Size+0xc753c>
    5938:	23050100 	movwcs	r0, #20736	; 0x5100
    593c:	2e05054c 	cfsh32cs	mvfx0, mvfx5, #44
    5940:	670105bb 			; <UNDEFINED> instruction: 0x670105bb
    5944:	01000802 	tsteq	r0, r2, lsl #16
    5948:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    594c:	02050001 	andeq	r0, r5, #1
    5950:	080034bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip, sp}
    5954:	0100e103 	tsteq	r0, r3, lsl #2
    5958:	054c2105 	strbeq	r2, [ip, #-261]	; 0xfffffefb
    595c:	24052e05 	strcs	r2, [r5], #-3589	; 0xfffff1fb
    5960:	2e0905bc 	mcrcs	5, 0, r0, cr9, cr12, {5}
    5964:	059e0805 	ldreq	r0, [lr, #2053]	; 0x805
    5968:	01052f09 	tsteq	r5, r9, lsl #30
    596c:	00080268 	andeq	r0, r8, r8, ror #4
    5970:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    5974:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5978:	00351802 	eorseq	r1, r5, r2, lsl #16
    597c:	00eb0308 	rsceq	r0, fp, r8, lsl #6
    5980:	3e170501 	cfmul32cc	mvfx0, mvfx7, mvfx1
    5984:	053e1a05 	ldreq	r1, [lr, #-2565]!	; 0xfffff5fb
    5988:	09052e08 	stmdbeq	r5, {r3, r9, sl, fp, sp}
    598c:	10053d2f 	andne	r3, r5, pc, lsr #26
    5990:	3d120523 	cfldr32cc	mvfx0, [r2, #-140]	; 0xffffff74
    5994:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    5998:	09053d13 	stmdbeq	r5, {r0, r1, r4, r8, sl, fp, ip, sp}
    599c:	3005053d 	andcc	r0, r5, sp, lsr r5
    59a0:	23030105 	movwcs	r0, #12549	; 0x3105
    59a4:	000a023c 	andeq	r0, sl, ip, lsr r2
    59a8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    59ac:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    59b0:	00356802 	eorseq	r6, r5, r2, lsl #16
    59b4:	019e0308 	orrseq	r0, lr, r8, lsl #6
    59b8:	2f050501 	svccs	0x00050501
    59bc:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    59c0:	01010005 	tsteq	r1, r5
    59c4:	01050204 	tsteq	r5, r4, lsl #4
    59c8:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    59cc:	03080035 	movweq	r0, #32821	; 0x8035
    59d0:	050101a2 	streq	r0, [r1, #-418]	; 0xfffffe5e
    59d4:	05055917 	streq	r5, [r5, #-2327]	; 0xfffff6e9
    59d8:	6711053d 			; <UNDEFINED> instruction: 0x6711053d
    59dc:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    59e0:	01010006 	tsteq	r1, r6
    59e4:	01050204 	tsteq	r5, r4, lsl #4
    59e8:	b0020500 	andlt	r0, r2, r0, lsl #10
    59ec:	03080035 	movweq	r0, #32821	; 0x8035
    59f0:	050101a8 	streq	r0, [r1, #-424]	; 0xfffffe58
    59f4:	11054b05 	tstne	r5, r5, lsl #22
    59f8:	67010567 	strvs	r0, [r1, -r7, ror #10]
    59fc:	01000602 	tsteq	r0, r2, lsl #12
    5a00:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    5a04:	02050001 	andeq	r0, r5, #1
    5a08:	080035dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip, sp}
    5a0c:	0101ae03 	tsteq	r1, r3, lsl #28
    5a10:	05401705 	strbeq	r1, [r0, #-1797]	; 0xfffff8fb
    5a14:	05053d0f 	streq	r3, [r5, #-3343]	; 0xfffff2f1
    5a18:	2118053c 	tstcs	r8, ip, lsr r5
    5a1c:	052e1105 	streq	r1, [lr, #-261]!	; 0xfffffefb
    5a20:	11052217 	tstne	r5, r7, lsl r2
    5a24:	2010052e 	andscs	r0, r0, lr, lsr #10
    5a28:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    5a2c:	11052e10 	tstne	r5, r0, lsl lr
    5a30:	5f053d2f 	svcpl	0x00053d2f
    5a34:	02040200 	andeq	r0, r4, #0, 4
    5a38:	00050537 	andeq	r0, r5, r7, lsr r5
    5a3c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5a40:	0b031705 	bleq	cb65c <_Min_Stack_Size+0xcb25c>
    5a44:	3c09054a 	cfstr32cc	mvfx0, [r9], {74}	; 0x4a
    5a48:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    5a4c:	08052017 	stmdaeq	r5, {r0, r1, r2, r4, sp}
    5a50:	2f300520 	svccs	0x00300520
    5a54:	053c0d05 	ldreq	r0, [ip, #-3333]!	; 0xfffff2fb
    5a58:	37059e0c 	strcc	r9, [r5, -ip, lsl #28]
    5a5c:	3c0d052f 	cfstr32cc	mvfx0, [sp], {47}	; 0x2f
    5a60:	05913305 	ldreq	r3, [r1, #773]	; 0x305
    5a64:	4d053c0d 	stcmi	12, cr3, [r5, #-52]	; 0xffffffcc
    5a68:	2e0d0566 	cfsh32cs	mvfx0, mvfx13, #54
    5a6c:	055a1905 	ldrbeq	r1, [sl, #-2309]	; 0xfffff6fb
    5a70:	05052e21 	streq	r2, [r5, #-3617]	; 0xfffff1df
    5a74:	01053e31 	tsteq	r5, r1, lsr lr
    5a78:	000b022f 	andeq	r0, fp, pc, lsr #4
    5a7c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    5a80:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5a84:	0036b002 	eorseq	fp, r6, r2
    5a88:	01cd0308 	biceq	r0, sp, r8, lsl #6
    5a8c:	4b170501 	blmi	5c6e98 <_Min_Stack_Size+0x5c6a98>
    5a90:	673d0505 	ldrvs	r0, [sp, -r5, lsl #10]!
    5a94:	01052f59 	tsteq	r5, r9, asr pc
    5a98:	0007023d 	andeq	r0, r7, sp, lsr r2
    5a9c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    5aa0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5aa4:	0036ec02 	eorseq	lr, r6, r2, lsl #24
    5aa8:	01d60308 	bicseq	r0, r6, r8, lsl #6
    5aac:	2f050501 	svccs	0x00050501
    5ab0:	052f1105 	streq	r1, [pc, #-261]!	; 59b3 <_Min_Stack_Size+0x55b3>
    5ab4:	08055909 	stmdaeq	r5, {r0, r3, r8, fp, ip, lr}
    5ab8:	2f09052e 	svccs	0x0009052e
    5abc:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    5ac0:	01010007 	tsteq	r1, r7
    5ac4:	01050204 	tsteq	r5, r4, lsl #4
    5ac8:	18020500 	stmdane	r2, {r8, sl}
    5acc:	03080037 	movweq	r0, #32823	; 0x8037
    5ad0:	050101e0 	streq	r0, [r1, #-480]	; 0xfffffe20
    5ad4:	0b054b0e 	bleq	158714 <_Min_Stack_Size+0x158314>
    5ad8:	5a05053d 	bpl	146fd4 <_Min_Stack_Size+0x146bd4>
    5adc:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    5ae0:	01010004 	tsteq	r1, r4
    5ae4:	01050204 	tsteq	r5, r4, lsl #4
    5ae8:	40020500 	andmi	r0, r2, r0, lsl #10
    5aec:	03080037 	movweq	r0, #32823	; 0x8037
    5af0:	050101ec 	streq	r0, [r1, #-492]	; 0xfffffe14
    5af4:	0e054d05 	cdpeq	13, 0, cr4, cr5, cr5, {0}
    5af8:	3c21055a 	cfstr32cc	mvfx0, [r1], #-360	; 0xfffffe98
    5afc:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    5b00:	09052005 	stmdbeq	r5, {r0, r2, sp}
    5b04:	03040200 	movweq	r0, #16896	; 0x4200
    5b08:	00150522 	andseq	r0, r5, r2, lsr #10
    5b0c:	77030402 	strvc	r0, [r3, -r2, lsl #8]
    5b10:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    5b14:	05740304 	ldrbeq	r0, [r4, #-772]!	; 0xfffffcfc
    5b18:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    5b1c:	05052903 	streq	r2, [r5, #-2307]	; 0xfffff6fd
    5b20:	01040200 	mrseq	r0, R12_usr
    5b24:	030c053c 	movweq	r0, #50492	; 0xc53c
    5b28:	05053c09 	streq	r3, [r5, #-3081]	; 0xfffff3f7
    5b2c:	0009052e 	andeq	r0, r9, lr, lsr #10
    5b30:	22030402 	andcs	r0, r3, #33554432	; 0x2000000
    5b34:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    5b38:	05770304 	ldrbeq	r0, [r7, #-772]!	; 0xfffffcfc
    5b3c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5b40:	2a057403 	bcs	162b54 <_Min_Stack_Size+0x162754>
    5b44:	03040200 	movweq	r0, #16896	; 0x4200
    5b48:	00150529 	andseq	r0, r5, r9, lsr #10
    5b4c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5b50:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    5b54:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    5b58:	04020005 	streq	r0, [r2], #-5
    5b5c:	05352001 	ldreq	r2, [r5, #-1]!
    5b60:	04020009 	streq	r0, [r2], #-9
    5b64:	02003f01 	andeq	r3, r0, #1, 30
    5b68:	052f0104 	streq	r0, [pc, #-260]!	; 5a6c <_Min_Stack_Size+0x566c>
    5b6c:	0402000d 	streq	r0, [r2], #-13
    5b70:	14058301 	strne	r8, [r5], #-769	; 0xfffffcff
    5b74:	01040200 	mrseq	r0, R12_usr
    5b78:	0009053d 	andeq	r0, r9, sp, lsr r5
    5b7c:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    5b80:	02000c05 	andeq	r0, r0, #1280	; 0x500
    5b84:	054b0104 	strbeq	r0, [fp, #-260]	; 0xfffffefc
    5b88:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    5b8c:	09053d01 	stmdbeq	r5, {r0, r8, sl, fp, ip, sp}
    5b90:	01040200 	mrseq	r0, R12_usr
    5b94:	0014053d 	andseq	r0, r4, sp, lsr r5
    5b98:	2f010402 	svccs	0x00010402
    5b9c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5ba0:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    5ba4:	0402000d 	streq	r0, [r2], #-13
    5ba8:	4a750301 	bmi	1d467b4 <_Min_Stack_Size+0x1d463b4>
    5bac:	01000d02 	tsteq	r0, r2, lsl #26
    5bb0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    5bb4:	02050001 	andeq	r0, r5, #1
    5bb8:	08003828 	stmdaeq	r0, {r3, r5, fp, ip, sp}
    5bbc:	01029203 	tsteq	r2, r3, lsl #4
    5bc0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5bc4:	004c0104 	subeq	r0, ip, r4, lsl #2
    5bc8:	4b010402 	blmi	46bd8 <_Min_Stack_Size+0x467d8>
    5bcc:	01040200 	mrseq	r0, R12_usr
    5bd0:	0014052f 	andseq	r0, r4, pc, lsr #10
    5bd4:	83010402 	movwhi	r0, #5122	; 0x1402
    5bd8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5bdc:	05590104 	ldrbeq	r0, [r9, #-260]	; 0xfffffefc
    5be0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5be4:	09053001 	stmdbeq	r5, {r0, ip, sp}
    5be8:	01040200 	mrseq	r0, R12_usr
    5bec:	0014053d 	andseq	r0, r4, sp, lsr r5
    5bf0:	4b010402 	blmi	46c00 <_Min_Stack_Size+0x46800>
    5bf4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5bf8:	78030104 	stmdavc	r3, {r2, r8}
    5bfc:	000b023c 	andeq	r0, fp, ip, lsr r2
    5c00:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    5c04:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5c08:	00388402 	eorseq	r8, r8, r2, lsl #8
    5c0c:	02a20308 	adceq	r0, r2, #8, 6	; 0x20000000
    5c10:	00090501 	andeq	r0, r9, r1, lsl #10
    5c14:	4c010402 	cfstrsmi	mvf0, [r1], {2}
    5c18:	01040200 	mrseq	r0, R12_usr
    5c1c:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    5c20:	14052f01 	strne	r2, [r5], #-3841	; 0xfffff0ff
    5c24:	01040200 	mrseq	r0, R12_usr
    5c28:	00090583 	andeq	r0, r9, r3, lsl #11
    5c2c:	59010402 	stmdbpl	r1, {r1, sl}
    5c30:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    5c34:	05300104 	ldreq	r0, [r0, #-260]!	; 0xfffffefc
    5c38:	04020009 	streq	r0, [r2], #-9
    5c3c:	14053d01 	strne	r3, [r5], #-3329	; 0xfffff2ff
    5c40:	01040200 	mrseq	r0, R12_usr
    5c44:	0009054b 	andeq	r0, r9, fp, asr #10
    5c48:	03010402 	movweq	r0, #5122	; 0x1402
    5c4c:	0b023c78 	bleq	94e34 <_Min_Stack_Size+0x94a34>
    5c50:	04010100 	streq	r0, [r1], #-256	; 0xffffff00
    5c54:	00010502 	andeq	r0, r1, r2, lsl #10
    5c58:	38e00205 	stmiacc	r0!, {r0, r2, r9}^
    5c5c:	b2030800 	andlt	r0, r3, #0, 16
    5c60:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    5c64:	01040200 	mrseq	r0, R12_usr
    5c68:	0001024b 	andeq	r0, r1, fp, asr #4
    5c6c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    5c70:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5c74:	0038ec02 	eorseq	lr, r8, r2, lsl #24
    5c78:	02c50308 	sbceq	r0, r5, #8, 6	; 0x20000000
    5c7c:	3d050501 	cfstr32cc	mvfx0, [r5, #-4]
    5c80:	9191302f 	orrsls	r3, r1, pc, lsr #32
    5c84:	84110596 	ldrhi	r0, [r1], #-1430	; 0xfffffa6a
    5c88:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    5c8c:	05052f18 	streq	r2, [r5, #-3864]	; 0xfffff0e8
    5c90:	000a053d 	andeq	r0, sl, sp, lsr r5
    5c94:	2f010402 	svccs	0x00010402
    5c98:	01001e02 	tsteq	r0, r2, lsl #28
    5c9c:	00015d01 	andeq	r5, r1, r1, lsl #26
    5ca0:	80000300 	andhi	r0, r0, r0, lsl #6
    5ca4:	02000000 	andeq	r0, r0, #0
    5ca8:	0d0efb01 	vstreq	d15, [lr, #-4]
    5cac:	01010100 	mrseq	r0, (UNDEF: 17)
    5cb0:	00000001 	andeq	r0, r0, r1
    5cb4:	01000001 	tsteq	r0, r1
    5cb8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5cbc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5cc0:	2f2e2e2f 	svccs	0x002e2e2f
    5cc4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    5cc8:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    5ccc:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    5cd0:	722f6563 	eorvc	r6, pc, #415236096	; 0x18c00000
    5cd4:	00736f74 	rsbseq	r6, r3, r4, ror pc
    5cd8:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    5cdc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5ce0:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    5ce4:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    5ce8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    5cec:	61652d65 	cmnvs	r5, r5, ror #26
    5cf0:	382f6962 	stmdacc	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    5cf4:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    5cf8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5cfc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5d00:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
    5d04:	70616d74 	rsbvc	r6, r1, r4, ror sp
    5d08:	0100632e 	tsteq	r0, lr, lsr #6
    5d0c:	74730000 	ldrbtvc	r0, [r3], #-0
    5d10:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    5d14:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5d18:	69620000 	stmdbvs	r2!, {}^	; <UNPREDICTABLE>
    5d1c:	70616d74 	rsbvc	r6, r1, r4, ror sp
    5d20:	0100682e 	tsteq	r0, lr, lsr #16
    5d24:	05000000 	streq	r0, [r0, #-0]
    5d28:	02050001 	andeq	r0, r5, #1
    5d2c:	08003990 	stmdaeq	r0, {r4, r7, r8, fp, ip, sp}
    5d30:	4b140515 	blmi	50718c <_Min_Stack_Size+0x506d8c>
    5d34:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    5d38:	01010005 	tsteq	r1, r5
    5d3c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5d40:	0039a802 	eorseq	sl, r9, r2, lsl #16
    5d44:	0c051a08 			; <UNDEFINED> instruction: 0x0c051a08
    5d48:	2101052f 	tstcs	r1, pc, lsr #10
    5d4c:	01000402 	tsteq	r0, r2, lsl #8
    5d50:	00010501 	andeq	r0, r1, r1, lsl #10
    5d54:	39b60205 	ldmibcc	r6!, {r0, r2, r9}
    5d58:	0c030800 	stceq	8, cr0, [r3], {-0}
    5d5c:	59140501 	ldmdbpl	r4, {r0, r8, sl}
    5d60:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    5d64:	01054a14 	tsteq	r5, r4, lsl sl
    5d68:	0005023d 	andeq	r0, r5, sp, lsr r2
    5d6c:	01050101 	tsteq	r5, r1, lsl #2
    5d70:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
    5d74:	03080039 	movweq	r0, #32825	; 0x8039
    5d78:	14050110 	strne	r0, [r5], #-272	; 0xfffffef0
    5d7c:	2e1b0559 	mrccs	5, 0, r0, cr11, cr9, {2}
    5d80:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    5d84:	01052014 	tsteq	r5, r4, lsl r0
    5d88:	0005023d 	andeq	r0, r5, sp, lsr r2
    5d8c:	01050101 	tsteq	r5, r1, lsl #2
    5d90:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
    5d94:	0308003a 	movweq	r0, #32826	; 0x803a
    5d98:	0c050115 	stfeqs	f0, [r5], {21}
    5d9c:	054a1503 	strbeq	r1, [sl, #-1283]	; 0xfffffafd
    5da0:	05052e15 	streq	r2, [r5, #-3605]	; 0xfffff1eb
    5da4:	30270520 	eorcc	r0, r7, r0, lsr #10
    5da8:	052e3005 	streq	r3, [lr, #-5]!
    5dac:	14052020 	strne	r2, [r5], #-32	; 0xffffffe0
    5db0:	2e1d053e 	mrccs	5, 0, r0, cr13, cr14, {1}
    5db4:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    5db8:	31053028 	tstcc	r5, r8, lsr #32
    5dbc:	2037052e 	eorscs	r0, r7, lr, lsr #10
    5dc0:	05202005 	streq	r2, [r0, #-5]!
    5dc4:	14052e3f 	strne	r2, [r5], #-3647	; 0xfffff1c1
    5dc8:	2e1d0530 	cfmvr64hcs	r0, mvdx13
    5dcc:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    5dd0:	31053028 	tstcc	r5, r8, lsr #32
    5dd4:	2038052e 	eorscs	r0, r8, lr, lsr #10
    5dd8:	05202005 	streq	r2, [r0, #-5]!
    5ddc:	14052e40 	strne	r2, [r5], #-3648	; 0xfffff1c0
    5de0:	2e1d0530 	cfmvr64hcs	r0, mvdx13
    5de4:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    5de8:	31053028 	tstcc	r5, r8, lsr #32
    5dec:	2020052e 	eorcs	r0, r0, lr, lsr #10
    5df0:	052e4005 	streq	r4, [lr, #-5]!
    5df4:	01053210 	tsteq	r5, r0, lsl r2
    5df8:	0007023e 	andeq	r0, r7, lr, lsr r2
    5dfc:	02a20101 	adceq	r0, r2, #1073741824	; 0x40000000
    5e00:	00030000 	andeq	r0, r3, r0
    5e04:	0000007c 	andeq	r0, r0, ip, ror r0
    5e08:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    5e0c:	0101000d 	tsteq	r1, sp
    5e10:	00000101 	andeq	r0, r0, r1, lsl #2
    5e14:	00000100 	andeq	r0, r0, r0, lsl #2
    5e18:	2f2e2e01 	svccs	0x002e2e01
    5e1c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5e20:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5e24:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    5e28:	2f6c656e 	svccs	0x006c656e
    5e2c:	76726573 			; <UNDEFINED> instruction: 0x76726573
    5e30:	2f656369 	svccs	0x00656369
    5e34:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5e38:	73752f00 	cmnvc	r5, #0, 30
    5e3c:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    5e40:	63672f62 	cmnvs	r7, #392	; 0x188
    5e44:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    5e48:	6f6e2d6d 	svcvs	0x006e2d6d
    5e4c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    5e50:	2f696261 	svccs	0x00696261
    5e54:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    5e58:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    5e5c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5e60:	6c000065 	stcvs	0, cr0, [r0], {101}	; 0x65
    5e64:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    5e68:	00010063 	andeq	r0, r1, r3, rrx
    5e6c:	73696c00 	cmnvc	r9, #0, 24
    5e70:	00682e74 	rsbeq	r2, r8, r4, ror lr
    5e74:	73000001 	movwvc	r0, #1
    5e78:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    5e7c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    5e80:	00000002 	andeq	r0, r0, r2
    5e84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5e88:	003a8802 	eorseq	r8, sl, r2, lsl #16
    5e8c:	15051708 	strne	r1, [r5, #-1800]	; 0xfffff8f8
    5e90:	01053d4b 	tsteq	r5, fp, asr #26
    5e94:	0005023d 	andeq	r0, r5, sp, lsr r2
    5e98:	01050101 	tsteq	r5, r1, lsl #2
    5e9c:	a6020500 	strge	r0, [r2], -r0, lsl #10
    5ea0:	0308003a 	movweq	r0, #32826	; 0x803a
    5ea4:	1505010a 	strne	r0, [r5, #-266]	; 0xfffffef6
    5ea8:	2013054b 	andscs	r0, r3, fp, asr #10
    5eac:	052f1705 	streq	r1, [pc, #-1797]!	; 57af <_Min_Stack_Size+0x53af>
    5eb0:	16052015 			; <UNDEFINED> instruction: 0x16052015
    5eb4:	3d01052f 	cfstr32cc	mvfx0, [r1, #-188]	; 0xffffff44
    5eb8:	01000502 	tsteq	r0, r2, lsl #10
    5ebc:	00010501 	andeq	r0, r1, r1, lsl #10
    5ec0:	3aca0205 	bcc	ff2866dc <__StackLimit+0xdf2666dc>
    5ec4:	11030800 	tstne	r3, r0, lsl #16
    5ec8:	4b100501 	blmi	4072d4 <_Min_Stack_Size+0x406ed4>
    5ecc:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    5ed0:	01010005 	tsteq	r1, r5
    5ed4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5ed8:	003ae002 	eorseq	lr, sl, r2
    5edc:	01160308 	tsteq	r6, r8, lsl #6
    5ee0:	304b0d05 	subcc	r0, fp, r5, lsl #26
    5ee4:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    5ee8:	0c052f0e 	stceq	15, cr2, [r5], {14}
    5eec:	2101053f 	tstcs	r1, pc, lsr r5
    5ef0:	01000502 	tsteq	r0, r2, lsl #10
    5ef4:	00010501 	andeq	r0, r1, r1, lsl #10
    5ef8:	00000205 	andeq	r0, r0, r5, lsl #4
    5efc:	20030000 	andcs	r0, r3, r0
    5f00:	4b0d0501 	blmi	34730c <_Min_Stack_Size+0x346f0c>
    5f04:	2e080530 	cfmv64hrcs	mvdx8, r0
    5f08:	052f0e05 	streq	r0, [pc, #-3589]!	; 510b <_Min_Stack_Size+0x4d0b>
    5f0c:	01053f0c 	tsteq	r5, ip, lsl #30
    5f10:	00050221 	andeq	r0, r5, r1, lsr #4
    5f14:	01050101 	tsteq	r5, r1, lsl #2
    5f18:	00020500 	andeq	r0, r2, r0, lsl #10
    5f1c:	03000000 	movweq	r0, #0
    5f20:	0d05012b 	stfeqs	f0, [r5, #-172]	; 0xffffff54
    5f24:	2e080559 	cfrshl32cs	mvfx8, mvfx9, r0
    5f28:	053d1005 	ldreq	r1, [sp, #-5]!
    5f2c:	01053014 	tsteq	r5, r4, lsl r0
    5f30:	00050230 	andeq	r0, r5, r0, lsr r2
    5f34:	01050101 	tsteq	r5, r1, lsl #2
    5f38:	00020500 	andeq	r0, r2, r0, lsl #10
    5f3c:	03000000 	movweq	r0, #0
    5f40:	0d050133 	stfeqs	f0, [r5, #-204]	; 0xffffff34
    5f44:	2e080559 	cfrshl32cs	mvfx8, mvfx9, r0
    5f48:	053d1005 	ldreq	r1, [sp, #-5]!
    5f4c:	01053014 	tsteq	r5, r4, lsl r0
    5f50:	00050230 	andeq	r0, r5, r0, lsr r2
    5f54:	01050101 	tsteq	r5, r1, lsl #2
    5f58:	00020500 	andeq	r0, r2, r0, lsl #10
    5f5c:	03000000 	movweq	r0, #0
    5f60:	0f05013b 	svceq	0x0005013b
    5f64:	3e10054e 	cfmac32cc	mvfx0, mvfx0, mvfx14
    5f68:	053c0505 	ldreq	r0, [ip, #-1285]!	; 0xfffffafb
    5f6c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5f70:	13052303 	movwne	r2, #21251	; 0x5303
    5f74:	03040200 	movweq	r0, #16896	; 0x4200
    5f78:	0021052f 	eoreq	r0, r1, pc, lsr #10
    5f7c:	3e030402 	cdpcc	4, 0, cr0, cr3, cr2, {0}
    5f80:	03040200 	movweq	r0, #16896	; 0x4200
    5f84:	0035053d 	eorseq	r0, r5, sp, lsr r5
    5f88:	03030402 	movweq	r0, #13314	; 0x3402
    5f8c:	05053c79 	streq	r3, [r5, #-3193]	; 0xfffff387
    5f90:	01040200 	mrseq	r0, R12_usr
    5f94:	0318053c 	tsteq	r8, #60, 10	; 0xf000000
    5f98:	16053c09 	strne	r3, [r5], -r9, lsl #24
    5f9c:	2f170520 	svccs	0x00170520
    5fa0:	05201505 	streq	r1, [r0, #-1285]!	; 0xfffffafb
    5fa4:	01052f16 	tsteq	r5, r6, lsl pc
    5fa8:	0005023d 	andeq	r0, r5, sp, lsr r2
    5fac:	01050101 	tsteq	r5, r1, lsl #2
    5fb0:	00020500 	andeq	r0, r2, r0, lsl #10
    5fb4:	03000000 	movweq	r0, #0
    5fb8:	050100d0 	streq	r0, [r1, #-208]	; 0xffffff30
    5fbc:	2705591d 	smladcs	r5, sp, r9, r5
    5fc0:	2015052e 	andscs	r0, r5, lr, lsr #10
    5fc4:	052f1d05 	streq	r1, [pc, #-3333]!	; 52c7 <_Min_Stack_Size+0x4ec7>
    5fc8:	0b052e15 	bleq	151824 <_Min_Stack_Size+0x151424>
    5fcc:	2e210530 	mcrcs	5, 1, r0, cr1, cr0, {1}
    5fd0:	052f1605 	streq	r1, [pc, #-1541]!	; 59d3 <_Min_Stack_Size+0x55d3>
    5fd4:	15053d09 	strne	r3, [r5, #-3337]	; 0xfffff2f7
    5fd8:	3d01052e 	cfstr32cc	mvfx0, [r1, #-184]	; 0xffffff48
    5fdc:	01000502 	tsteq	r0, r2, lsl #10
    5fe0:	00010501 	andeq	r0, r1, r1, lsl #10
    5fe4:	3b060205 	blcc	186800 <_Min_Stack_Size+0x186400>
    5fe8:	d9030800 	stmdble	r3, {fp}
    5fec:	14050100 	strne	r0, [r5], #-256	; 0xffffff00
    5ff0:	20120559 	andscs	r0, r2, r9, asr r5
    5ff4:	052f1d05 	streq	r1, [pc, #-3333]!	; 52f7 <_Min_Stack_Size+0x4ef7>
    5ff8:	0b052e15 	bleq	151854 <_Min_Stack_Size+0x151454>
    5ffc:	2e200530 	mcrcs	5, 1, r0, cr0, cr0, {1}
    6000:	052f1505 	streq	r1, [pc, #-1285]!	; 5b03 <_Min_Stack_Size+0x5703>
    6004:	15053d09 	strne	r3, [r5, #-3337]	; 0xfffff2f7
    6008:	3d01052e 	cfstr32cc	mvfx0, [r1, #-184]	; 0xffffff48
    600c:	01000502 	tsteq	r0, r2, lsl #10
    6010:	00010501 	andeq	r0, r1, r1, lsl #10
    6014:	3b400205 	blcc	1006830 <_Min_Stack_Size+0x1006430>
    6018:	e2030800 	and	r0, r3, #0, 16
    601c:	0e050100 	adfeqs	f0, f5, f0
    6020:	300a054b 	andcc	r0, sl, fp, asr #10
    6024:	052e0405 	streq	r0, [lr, #-1029]!	; 0xfffffbfb
    6028:	0d05300e 	stceq	0, cr3, [r5, #-56]	; 0xffffffc8
    602c:	2e26053e 	mcrcs	5, 1, r0, cr6, cr14, {1}
    6030:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    6034:	1a052120 	bne	14e4bc <_Min_Stack_Size+0x14e0bc>
    6038:	2f0d052e 	svccs	0x000d052e
    603c:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    6040:	01053e0d 	tsteq	r5, sp, lsl #28
    6044:	00050221 	andeq	r0, r5, r1, lsr #4
    6048:	01050101 	tsteq	r5, r1, lsl #2
    604c:	00020500 	andeq	r0, r2, r0, lsl #10
    6050:	03000000 	movweq	r0, #0
    6054:	050100f0 	streq	r0, [r1, #-240]	; 0xffffff10
    6058:	2b05671f 	blcs	15fcdc <_Min_Stack_Size+0x15f8dc>
    605c:	2e1f053d 	mrccs	5, 0, r0, cr15, cr13, {1}
    6060:	05300f05 	ldreq	r0, [r0, #-3845]!	; 0xfffff0fb
    6064:	1b052e26 	blne	151904 <_Min_Stack_Size+0x151504>
    6068:	3e09052f 	cfsh32cc	mvfx0, mvfx9, #31
    606c:	052e1505 	streq	r1, [lr, #-1285]!	; 0xfffffafb
    6070:	06023d01 	streq	r3, [r2], -r1, lsl #26
    6074:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6078:	02050001 	andeq	r0, r5, #1
    607c:	08003b80 	stmdaeq	r0, {r7, r8, r9, fp, ip, sp}
    6080:	0100fa03 	tsteq	r0, r3, lsl #20	; <UNPREDICTABLE>
    6084:	05590905 	ldrbeq	r0, [r9, #-2309]	; 0xfffff6fb
    6088:	20052e26 	andcs	r2, r5, r6, lsr #28
    608c:	2109052e 	tstcs	r9, lr, lsr #10
    6090:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    6094:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
    6098:	2e150521 	cfmul64cs	mvdx0, mvdx5, mvdx1
    609c:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    60a0:	01010005 	tsteq	r1, r5
    60a4:	00000397 	muleq	r0, r7, r3
    60a8:	019f0003 	orrseq	r0, pc, r3
    60ac:	01020000 	mrseq	r0, (UNDEF: 2)
    60b0:	000d0efb 	strdeq	r0, [sp], -fp
    60b4:	01010101 	tsteq	r1, r1, lsl #2
    60b8:	01000000 	mrseq	r0, (UNDEF: 0)
    60bc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    60c0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    60c4:	2f2e2e2f 	svccs	0x002e2e2f
    60c8:	6b2f2e2e 	blvs	bd1988 <_Min_Stack_Size+0xbd1588>
    60cc:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    60d0:	65732f6c 	ldrbvs	r2, [r3, #-3948]!	; 0xfffff094
    60d4:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    60d8:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    60dc:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    60e0:	2f6e6f69 	svccs	0x006e6f69
    60e4:	00637273 	rsbeq	r7, r3, r3, ror r2
    60e8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    60ec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    60f0:	2f2e2e2f 	svccs	0x002e2e2f
    60f4:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    60f8:	2f737265 	svccs	0x00737265
    60fc:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    6100:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    6104:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6108:	752f0065 	strvc	r0, [pc, #-101]!	; 60ab <_Min_Stack_Size+0x5cab>
    610c:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 5f48 <_Min_Stack_Size+0x5b48>
    6110:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    6114:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    6118:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    611c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    6120:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6124:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
    6128:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
    612c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6130:	2f006564 	svccs	0x00006564
    6134:	2f727375 	svccs	0x00727375
    6138:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    613c:	2f656475 	svccs	0x00656475
    6140:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    6144:	732f6269 			; <UNDEFINED> instruction: 0x732f6269
    6148:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    614c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6150:	2f2e2e2f 	svccs	0x002e2e2f
    6154:	642f2e2e 	strtvs	r2, [pc], #-3630	; 615c <_Min_Stack_Size+0x5d5c>
    6158:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    615c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    6160:	5349534d 	movtpl	r5, #37709	; 0x934d
    6164:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    6168:	2f656369 	svccs	0x00656369
    616c:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    6170:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    6174:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6178:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    617c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6180:	2f2e2e00 	svccs	0x002e2e00
    6184:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6188:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    618c:	6972642f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, sp, lr}^
    6190:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    6194:	6968632f 	stmdbvs	r8!, {r0, r1, r2, r3, r5, r8, r9, sp, lr}^
    6198:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    619c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    61a0:	2f787834 	svccs	0x00787834
    61a4:	334d5453 	movtcc	r5, #54355	; 0xd453
    61a8:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    61ac:	41485f78 	hvcmi	34296	; 0x85f8
    61b0:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    61b4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    61b8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    61bc:	78650000 	stmdavc	r5!, {}^	; <UNPREDICTABLE>
    61c0:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    61c4:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
    61c8:	00010063 	andeq	r0, r1, r3, rrx
    61cc:	736d6300 	cmnvc	sp, #0, 6
    61d0:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    61d4:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    61d8:	00000200 	andeq	r0, r0, r0, lsl #4
    61dc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    61e0:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    61e4:	00000300 	andeq	r0, r0, r0, lsl #6
    61e8:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    61ec:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    61f0:	00000300 	andeq	r0, r0, r0, lsl #6
    61f4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    61f8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    61fc:	00000400 	andeq	r0, r0, r0, lsl #8
    6200:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
    6204:	00682e74 	rsbeq	r2, r8, r4, ror lr
    6208:	6c000004 	stcvs	0, cr0, [r0], {4}
    620c:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
    6210:	00040068 	andeq	r0, r4, r8, rrx
    6214:	726f6300 	rsbvc	r6, pc, #0, 6
    6218:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    621c:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    6220:	73000002 	movwvc	r0, #2
    6224:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    6228:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    622c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6230:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    6234:	00050068 	andeq	r0, r5, r8, rrx
    6238:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    623c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6240:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6244:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    6248:	00000600 	andeq	r0, r0, r0, lsl #12
    624c:	004e0500 	subeq	r0, lr, r0, lsl #10
    6250:	00000205 	andeq	r0, r0, r5, lsl #4
    6254:	c4030000 	strgt	r0, [r3], #-0
    6258:	01050101 	tsteq	r5, r1, lsl #2
    625c:	0005025a 	andeq	r0, r5, sl, asr r2
    6260:	32050101 	andcc	r0, r5, #1073741824	; 0x40000000
    6264:	b4020500 	strlt	r0, [r2], #-1280	; 0xfffffb00
    6268:	0308003b 	movweq	r0, #32827	; 0x803b
    626c:	050101d8 	streq	r0, [r1, #-472]	; 0xfffffe28
    6270:	03054b19 	movweq	r4, #23321	; 0x5b19
    6274:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    6278:	05660601 	strbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    627c:	0c030612 	stceq	6, cr0, [r3], {18}
    6280:	2f2d0520 	svccs	0x002d0520
    6284:	052e3605 	streq	r3, [lr, #-1541]!	; 0xfffff9fb
    6288:	0e052e34 	mcreq	14, 0, r2, cr5, cr4, {1}
    628c:	5b2e0520 	blpl	b87714 <_Min_Stack_Size+0xb87314>
    6290:	052e3505 	streq	r3, [lr, #-1285]!	; 0xfffffafb
    6294:	0605200e 	streq	r2, [r5], -lr
    6298:	001e055a 	andseq	r0, lr, sl, asr r5
    629c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    62a0:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    62a4:	05400104 	strbeq	r0, [r0, #-260]	; 0xfffffefc
    62a8:	0d052513 	cfstr32eq	mvfx2, [r5, #-76]	; 0xffffffb4
    62ac:	5a0f052e 	bpl	3c776c <_Min_Stack_Size+0x3c736c>
    62b0:	31200d05 			; <UNDEFINED> instruction: 0x31200d05
    62b4:	15080f05 	strne	r0, [r8, #-3845]	; 0xfffff0fb
    62b8:	02ad0105 	adceq	r0, sp, #1073741825	; 0x40000001
    62bc:	0101000d 	tsteq	r1, sp
    62c0:	05003705 	streq	r3, [r0, #-1797]	; 0xfffff8fb
    62c4:	00000002 	andeq	r0, r0, r2
    62c8:	02a70300 	adceq	r0, r7, #0, 6
    62cc:	3f120501 	svccc	0x00120501
    62d0:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    62d4:	15052e03 	strne	r2, [r5, #-3587]	; 0xfffff1fd
    62d8:	3c0a0521 	cfstr32cc	mvfx0, [sl], {33}	; 0x21
    62dc:	053c1005 	ldreq	r1, [ip, #-5]!
    62e0:	0305200e 	movweq	r2, #20494	; 0x500e
    62e4:	01040200 	mrseq	r0, R12_usr
    62e8:	4f12051f 	svcmi	0x0012051f
    62ec:	052e0305 	streq	r0, [lr, #-773]!	; 0xfffffcfb
    62f0:	0e05210a 	adfeqs	f2, f5, #2.0
    62f4:	0003053c 	andeq	r0, r3, ip, lsr r5
    62f8:	2d010402 	cfstrscs	mvf0, [r1, #-8]
    62fc:	024d0105 	subeq	r0, sp, #1073741825	; 0x40000001
    6300:	01010010 	tsteq	r1, r0, lsl r0
    6304:	05002505 	streq	r2, [r0, #-1285]	; 0xfffffafb
    6308:	00000002 	andeq	r0, r0, r2
    630c:	02bb0300 	adcseq	r0, fp, #0, 6
    6310:	2f030501 	svccs	0x00030501
    6314:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6318:	02220104 	eoreq	r0, r2, #4, 2
    631c:	01010001 	tsteq	r1, r1
    6320:	05001f05 	streq	r1, [r0, #-3845]	; 0xfffff0fb
    6324:	00000002 	andeq	r0, r0, r2
    6328:	02c20300 	sbceq	r0, r2, #0, 6
    632c:	2f030501 	svccs	0x00030501
    6330:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    6334:	01010002 	tsteq	r1, r2
    6338:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    633c:	003c6c02 	eorseq	r6, ip, r2, lsl #24
    6340:	02cc0308 	sbceq	r0, ip, #8, 6	; 0x20000000
    6344:	13030501 	movwne	r0, #13569	; 0x3501
    6348:	37020105 	strcc	r0, [r2, -r5, lsl #2]
    634c:	00050213 	andeq	r0, r5, r3, lsl r2
    6350:	25050101 	strcs	r0, [r5, #-257]	; 0xfffffeff
    6354:	00020500 	andeq	r0, r2, r0, lsl #10
    6358:	03000000 	movweq	r0, #0
    635c:	050102d0 	streq	r0, [r1, #-720]	; 0xfffffd30
    6360:	01051303 	tsteq	r5, r3, lsl #6
    6364:	02133702 	andseq	r3, r3, #524288	; 0x80000
    6368:	01010005 	tsteq	r1, r5
    636c:	05001d05 	streq	r1, [r0, #-3333]	; 0xfffff2fb
    6370:	003ce402 	eorseq	lr, ip, r2, lsl #8
    6374:	02d40308 	sbcseq	r0, r4, #8, 6	; 0x20000000
    6378:	13030501 	movwne	r0, #13569	; 0x3501
    637c:	37020105 	strcc	r0, [r2, -r5, lsl #2]
    6380:	00050213 	andeq	r0, r5, r3, lsl r2
    6384:	1f050101 	svcne	0x00050101
    6388:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    638c:	0308003d 	movweq	r0, #32829	; 0x803d
    6390:	050102d8 	streq	r0, [r1, #-728]	; 0xfffffd28
    6394:	01051303 	tsteq	r5, r3, lsl #6
    6398:	02133702 	andseq	r3, r3, #524288	; 0x80000
    639c:	01010005 	tsteq	r1, r5
    63a0:	05001905 	streq	r1, [r0, #-2309]	; 0xfffff6fb
    63a4:	00000002 	andeq	r0, r0, r2
    63a8:	02dc0300 	sbcseq	r0, ip, #0, 6
    63ac:	2f030501 	svccs	0x00030501
    63b0:	37020105 	strcc	r0, [r2, -r5, lsl #2]
    63b4:	00090213 	andeq	r0, r9, r3, lsl r2
    63b8:	1f050101 	svcne	0x00050101
    63bc:	00020500 	andeq	r0, r2, r0, lsl #10
    63c0:	03000000 	movweq	r0, #0
    63c4:	050102e3 	streq	r0, [r1, #-739]	; 0xfffffd1d
    63c8:	01051303 	tsteq	r5, r3, lsl #6
    63cc:	02133702 	andseq	r3, r3, #524288	; 0x80000
    63d0:	01010005 	tsteq	r1, r5
    63d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    63d8:	00000002 	andeq	r0, r0, r2
    63dc:	038a0300 	orreq	r0, sl, #0, 6
    63e0:	2f160501 	svccs	0x00160501
    63e4:	02410105 	subeq	r0, r1, #1073741825	; 0x40000001
    63e8:	01010009 	tsteq	r1, r9
    63ec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    63f0:	00000002 	andeq	r0, r0, r2
    63f4:	03930300 	orrseq	r0, r3, #0, 6
    63f8:	2f030501 	svccs	0x00030501
    63fc:	3d01052f 	cfstr32cc	mvfx0, [r1, #-188]	; 0xffffff44
    6400:	01000202 	tsteq	r0, r2, lsl #4
    6404:	00010501 	andeq	r0, r1, r1, lsl #10
    6408:	00000205 	andeq	r0, r0, r5, lsl #4
    640c:	a1030000 	mrsge	r0, (UNDEF: 3)
    6410:	1a050103 	bne	146824 <_Min_Stack_Size+0x146424>
    6414:	20180575 	andscs	r0, r8, r5, ror r5
    6418:	03050204 	movweq	r0, #20996	; 0x5204
    641c:	2e7deb03 	vaddcs.f64	d30, d13, d3
    6420:	14050104 	strne	r0, [r5], #-260	; 0xfffffefc
    6424:	20029703 	andcs	r9, r2, r3, lsl #14
    6428:	0c053d3d 	stceq	13, cr3, [r5], {61}	; 0x3d
    642c:	6703053e 	smladxvs	r3, lr, r5, r0
    6430:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    6434:	04020008 	streq	r0, [r2], #-8
    6438:	08022f01 	stmdaeq	r2, {r0, r8, r9, sl, fp, sp}
    643c:	2b010100 	blcs	46844 <_Min_Stack_Size+0x46444>
    6440:	03000003 	movweq	r0, #3
    6444:	00018e00 	andeq	r8, r1, r0, lsl #28
    6448:	fb010200 	blx	46c52 <_Min_Stack_Size+0x46852>
    644c:	01000d0e 	tsteq	r0, lr, lsl #26
    6450:	00010101 	andeq	r0, r1, r1, lsl #2
    6454:	00010000 	andeq	r0, r1, r0
    6458:	2e2e0100 	sufcse	f0, f6, f0
    645c:	2f2e2e2f 	svccs	0x002e2e2f
    6460:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6464:	656b2f2e 	strbvs	r2, [fp, #-3886]!	; 0xfffff0d2
    6468:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    646c:	7265732f 	rsbvc	r7, r5, #-1140850688	; 0xbc000000
    6470:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    6474:	6378652f 	cmnvs	r8, #197132288	; 0xbc00000
    6478:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    647c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    6480:	2f006372 	svccs	0x00006372
    6484:	2f727375 	svccs	0x00727375
    6488:	2f62696c 	svccs	0x0062696c
    648c:	2f636367 	svccs	0x00636367
    6490:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6494:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    6498:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    649c:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
    64a0:	2f312e33 	svccs	0x00312e33
    64a4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    64a8:	00656475 	rsbeq	r6, r5, r5, ror r4
    64ac:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
    64b0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    64b4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    64b8:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    64bc:	2f62696c 	svccs	0x0062696c
    64c0:	00737973 	rsbseq	r7, r3, r3, ror r9
    64c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    64c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    64cc:	2f2e2e2f 	svccs	0x002e2e2f
    64d0:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    64d4:	2f737265 	svccs	0x00737265
    64d8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    64dc:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    64e0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    64e4:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    64e8:	2f2e2e2f 	svccs	0x002e2e2f
    64ec:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    64f0:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    64f4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    64f8:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    64fc:	2f534953 	svccs	0x00534953
    6500:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    6504:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    6508:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    650c:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    6510:	2f787834 	svccs	0x00787834
    6514:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    6518:	00656475 	rsbeq	r6, r5, r5, ror r4
    651c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6520:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6524:	2f2e2e2f 	svccs	0x002e2e2f
    6528:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    652c:	2f737265 	svccs	0x00737265
    6530:	70696863 	rsbvc	r6, r9, r3, ror #16
    6534:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    6538:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    653c:	532f7878 			; <UNDEFINED> instruction: 0x532f7878
    6540:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    6544:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6548:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    654c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    6550:	2f726576 	svccs	0x00726576
    6554:	00636e69 	rsbeq	r6, r3, r9, ror #28
    6558:	61786500 	cmnvs	r8, r0, lsl #10
    655c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    6560:	0100632e 	tsteq	r0, lr, lsr #6
    6564:	74730000 	ldrbtvc	r0, [r3], #-0
    6568:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    656c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    6570:	74730000 	ldrbtvc	r0, [r3], #-0
    6574:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    6578:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    657c:	745f0000 	ldrbvc	r0, [pc], #-0	; 6584 <_Min_Stack_Size+0x6184>
    6580:	73657079 	cmnvc	r5, #121	; 0x79
    6584:	0300682e 	movweq	r6, #2094	; 0x82e
    6588:	65720000 	ldrbvs	r0, [r2, #-0]!
    658c:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
    6590:	00030068 	andeq	r0, r3, r8, rrx
    6594:	636f6c00 	cmnvs	pc, #0, 24
    6598:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    659c:	63000003 	movwvs	r0, #3
    65a0:	5f65726f 	svcpl	0x0065726f
    65a4:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    65a8:	00040068 	andeq	r0, r4, r8, rrx
    65ac:	73797300 	cmnvc	r9, #0, 6
    65b0:	5f6d6574 	svcpl	0x006d6574
    65b4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    65b8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    65bc:	00682e78 	rsbeq	r2, r8, r8, ror lr
    65c0:	73000005 	movwvc	r0, #5
    65c4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    65c8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    65cc:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    65d0:	0600682e 	streq	r6, [r0], -lr, lsr #16
    65d4:	05000000 	streq	r0, [r0, #-0]
    65d8:	02050001 	andeq	r0, r5, #1
    65dc:	00000000 	andeq	r0, r0, r0
    65e0:	2f130515 	svccs	0x00130515
    65e4:	85050569 	strhi	r0, [r5, #-1385]	; 0xfffffa97
    65e8:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    65ec:	01010006 	tsteq	r1, r6
    65f0:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
    65f4:	00000002 	andeq	r0, r0, r2
    65f8:	01180300 	tsteq	r8, r0, lsl #6
    65fc:	3129053c 			; <UNDEFINED> instruction: 0x3129053c
    6600:	05204505 	streq	r4, [r0, #-1285]!	; 0xfffffafb
    6604:	14052010 	strne	r2, [r5], #-16
    6608:	020f052f 	andeq	r0, pc, #197132288	; 0xbc00000
    660c:	03051327 	movweq	r1, #21287	; 0x5327
    6610:	0010052e 	andseq	r0, r0, lr, lsr #10
    6614:	21030402 	tstcs	r3, r2, lsl #8
    6618:	02002c05 	andeq	r2, r0, #1280	; 0x500
    661c:	05730304 	ldrbeq	r0, [r3, #-772]!	; 0xfffffcfc
    6620:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6624:	03053c01 	movweq	r3, #23553	; 0x5c01
    6628:	01040200 	mrseq	r0, R12_usr
    662c:	0105402e 	tsteq	r5, lr, lsr #32
    6630:	0007023d 	andeq	r0, r7, sp, lsr r2
    6634:	23050101 	movwcs	r0, #20737	; 0x5101
    6638:	00020500 	andeq	r0, r2, r0, lsl #10
    663c:	03000000 	movweq	r0, #0
    6640:	16050124 	strne	r0, [r5], -r4, lsr #2
    6644:	2f0a053d 	svccs	0x000a053d
    6648:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    664c:	01010007 	tsteq	r1, r7
    6650:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
    6654:	00000002 	andeq	r0, r0, r2
    6658:	01290300 			; <UNDEFINED> instruction: 0x01290300
    665c:	052f0a05 	streq	r0, [pc, #-2565]!	; 5c5f <_Min_Stack_Size+0x585f>
    6660:	06022f01 	streq	r2, [r2], -r1, lsl #30
    6664:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6668:	02050029 	andeq	r0, r5, #41	; 0x29
    666c:	00000000 	andeq	r0, r0, r0
    6670:	05012e03 	streq	r2, [r1, #-3587]	; 0xfffff1fd
    6674:	0a053d09 	beq	155aa0 <_Min_Stack_Size+0x1556a0>
    6678:	3d01053d 	cfstr32cc	mvfx0, [r1, #-244]	; 0xffffff0c
    667c:	01000402 	tsteq	r0, r2, lsl #8
    6680:	00270501 	eoreq	r0, r7, r1, lsl #10
    6684:	00000205 	andeq	r0, r0, r5, lsl #4
    6688:	33030000 	movwcc	r0, #12288	; 0x3000
    668c:	32010501 	andcc	r0, r1, #4194304	; 0x400000
    6690:	01000402 	tsteq	r0, r2, lsl #8
    6694:	00270501 	eoreq	r0, r7, r1, lsl #10
    6698:	00000205 	andeq	r0, r0, r5, lsl #4
    669c:	3a030000 	bcc	c66a4 <_Min_Stack_Size+0xc62a4>
    66a0:	3d160501 	cfldr32cc	mvfx0, [r6, #-4]
    66a4:	053d0805 	ldreq	r0, [sp, #-2053]!	; 0xfffff7fb
    66a8:	0c026701 	stceq	7, cr6, [r2], {1}
    66ac:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    66b0:	02050028 	andeq	r0, r5, #40	; 0x28
    66b4:	00000000 	andeq	r0, r0, r0
    66b8:	05013f03 	streq	r3, [r1, #-3843]	; 0xfffff0fd
    66bc:	01053103 	tsteq	r5, r3, lsl #2
    66c0:	0006026d 	andeq	r0, r6, sp, ror #4
    66c4:	01050101 	tsteq	r5, r1, lsl #2
    66c8:	00020500 	andeq	r0, r2, r0, lsl #10
    66cc:	03000000 	movweq	r0, #0
    66d0:	020100cb 	andeq	r0, r1, #203	; 0xcb
    66d4:	01010003 	tsteq	r1, r3
    66d8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    66dc:	00000002 	andeq	r0, r0, r2
    66e0:	00cd0300 	sbceq	r0, sp, r0, lsl #6
    66e4:	16010501 	strne	r0, [r1], -r1, lsl #10
    66e8:	052f0505 	streq	r0, [pc, #-1285]!	; 61eb <_Min_Stack_Size+0x5deb>
    66ec:	0105201c 	tsteq	r5, ip, lsl r0
    66f0:	0007022f 	andeq	r0, r7, pc, lsr #4
    66f4:	01050101 	tsteq	r5, r1, lsl #2
    66f8:	00020500 	andeq	r0, r2, r0, lsl #10
    66fc:	03000000 	movweq	r0, #0
    6700:	050100d5 	streq	r0, [r1, #-213]	; 0xffffff2b
    6704:	05053d0c 	streq	r3, [r5, #-3340]	; 0xfffff2f4
    6708:	2f01053d 	svccs	0x0001053d
    670c:	01000402 	tsteq	r0, r2, lsl #8
    6710:	00190501 	andseq	r0, r9, r1, lsl #10
    6714:	00000205 	andeq	r0, r0, r5, lsl #4
    6718:	db030000 	blle	c6720 <_Min_Stack_Size+0xc6320>
    671c:	03050100 	movweq	r0, #20736	; 0x5100
    6720:	40010513 	andmi	r0, r1, r3, lsl r5
    6724:	01000102 	tsteq	r0, r2, lsl #2
    6728:	00010501 	andeq	r0, r1, r1, lsl #10
    672c:	00000205 	andeq	r0, r0, r5, lsl #4
    6730:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    6734:	03050100 	movweq	r0, #20736	; 0x5100
    6738:	0807054b 	stmdaeq	r7, {r0, r1, r3, r6, r8, sl}
    673c:	2f222f5a 	svccs	0x00222f5a
    6740:	2f222f22 	svccs	0x00222f22
    6744:	2f222f22 	svccs	0x00222f22
    6748:	2f222f22 	svccs	0x00222f22
    674c:	22010522 	andcs	r0, r1, #142606336	; 0x8800000
    6750:	01000402 	tsteq	r0, r2, lsl #8
    6754:	00010501 	andeq	r0, r1, r1, lsl #10
    6758:	3dd40205 	lfmcc	f0, 2, [r4, #20]
    675c:	95030800 	strls	r0, [r3, #-2048]	; 0xfffff800
    6760:	09050101 	stmdbeq	r5, {r0, r8}
    6764:	01040200 	mrseq	r0, R12_usr
    6768:	0001022f 	andeq	r0, r1, pc, lsr #4
    676c:	00ac0101 	adceq	r0, ip, r1, lsl #2
    6770:	00030000 	andeq	r0, r3, r0
    6774:	0000005c 	andeq	r0, r0, ip, asr r0
    6778:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    677c:	0101000d 	tsteq	r1, sp
    6780:	00000101 	andeq	r0, r0, r1, lsl #2
    6784:	00000100 	andeq	r0, r0, r0, lsl #2
    6788:	2f2e2e01 	svccs	0x002e2e01
    678c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6790:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6794:	6f72702f 	svcvs	0x0072702f
    6798:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    679c:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    67a0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    67a4:	4e2f7878 	mcrmi	8, 1, r7, cr15, cr8, {3}
    67a8:	75647465 	strbvc	r7, [r4, #-1125]!	; 0xfffffb9b
    67ac:	506f6e69 	rsbpl	r6, pc, r9, ror #28
    67b0:	3273756c 	rsbscc	r7, r3, #108, 10	; 0x1b000000
    67b4:	4343472f 	movtmi	r4, #14127	; 0x372f
    67b8:	74730000 	ldrbtvc	r0, [r3], #-0
    67bc:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    67c0:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    67c4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    67c8:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    67cc:	00732e78 	rsbseq	r2, r3, r8, ror lr
    67d0:	00000001 	andeq	r0, r0, r1
    67d4:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
    67d8:	0308003d 	movweq	r0, #32829	; 0x803d
    67dc:	2203013d 	andcs	r0, r3, #1073741839	; 0x4000000f
    67e0:	032f322e 			; <UNDEFINED> instruction: 0x032f322e
    67e4:	02022e59 	andeq	r2, r2, #1424	; 0x590
    67e8:	00010100 	andeq	r0, r1, r0, lsl #2
    67ec:	3df00205 	lfmcc	f0, 2, [r0, #20]!
    67f0:	f1030800 			; <UNDEFINED> instruction: 0xf1030800
    67f4:	02210100 	eoreq	r0, r1, #0, 2
    67f8:	01010001 	tsteq	r1, r1
    67fc:	f4020500 	vst3.8	{d0,d2,d4}, [r2], r0
    6800:	0308003d 	movweq	r0, #32829	; 0x803d
    6804:	2f0100f9 	svccs	0x000100f9
    6808:	21213022 			; <UNDEFINED> instruction: 0x21213022
    680c:	21212123 			; <UNDEFINED> instruction: 0x21212123
    6810:	2f2f2122 	svccs	0x002f2122
    6814:	2072032f 	rsbscs	r0, r2, pc, lsr #6
    6818:	00020234 	andeq	r0, r2, r4, lsr r2
    681c:	01810101 	orreq	r0, r1, r1, lsl #2
    6820:	00030000 	andeq	r0, r3, r0
    6824:	00000047 	andeq	r0, r0, r7, asr #32
    6828:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    682c:	0101000d 	tsteq	r1, sp
    6830:	00000101 	andeq	r0, r0, r1, lsl #2
    6834:	00000100 	andeq	r0, r0, r0, lsl #2
    6838:	2f2e2e01 	svccs	0x002e2e01
    683c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6840:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6844:	2f2e2e2f 	svccs	0x002e2e2f
    6848:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 6798 <_Min_Stack_Size+0x6398>
    684c:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    6850:	6f632f63 	svcvs	0x00632f63
    6854:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    6858:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    685c:	65690000 	strbvs	r0, [r9, #-0]!
    6860:	35376565 	ldrcc	r6, [r7, #-1381]!	; 0xfffffa9b
    6864:	66642d34 			; <UNDEFINED> instruction: 0x66642d34
    6868:	0100532e 	tsteq	r0, lr, lsr #6
    686c:	00000000 	andeq	r0, r0, r0
    6870:	02100205 	andseq	r0, r0, #1342177280	; 0x50000000
    6874:	cc030800 	stcgt	8, cr0, [r3], {-0}
    6878:	332f0100 			; <UNDEFINED> instruction: 0x332f0100
    687c:	2f2f2736 	svccs	0x002f2736
    6880:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    6884:	2f2f2f2f 	svccs	0x002f2f2f
    6888:	212f2f32 			; <UNDEFINED> instruction: 0x212f2f32
    688c:	2f212121 	svccs	0x00212121
    6890:	2f2f2f2f 	svccs	0x002f2f2f
    6894:	23212133 			; <UNDEFINED> instruction: 0x23212133
    6898:	2f2f2f2f 	svccs	0x002f2f2f
    689c:	2f342122 	svccs	0x00342122
    68a0:	21222f2f 			; <UNDEFINED> instruction: 0x21222f2f
    68a4:	09032f36 	stmdbeq	r3, {r1, r2, r4, r5, r8, r9, sl, fp, sp}
    68a8:	212f312e 			; <UNDEFINED> instruction: 0x212f312e
    68ac:	3d2f3d2f 	stccc	13, cr3, [pc, #-188]!	; 67f8 <_Min_Stack_Size+0x63f8>
    68b0:	2f2f213d 	svccs	0x002f213d
    68b4:	2f212f21 	svccs	0x00212f21
    68b8:	222f323d 	eorcs	r3, pc, #-805306365	; 0xd0000003
    68bc:	032f2f2f 			; <UNDEFINED> instruction: 0x032f2f2f
    68c0:	212f2e09 			; <UNDEFINED> instruction: 0x212f2e09
    68c4:	2f21232f 	svccs	0x0021232f
    68c8:	2f2f312f 	svccs	0x002f312f
    68cc:	2f212f35 	svccs	0x00212f35
    68d0:	242f2f2f 	strtcs	r2, [pc], #-3887	; 68d8 <_Min_Stack_Size+0x64d8>
    68d4:	2f2f212f 	svccs	0x002f212f
    68d8:	201d032f 	andscs	r0, sp, pc, lsr #6
    68dc:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    68e0:	3321212f 			; <UNDEFINED> instruction: 0x3321212f
    68e4:	2421212f 	strtcs	r2, [r1], #-303	; 0xfffffed1
    68e8:	2f2f2f2f 	svccs	0x002f2f2f
    68ec:	2f212f24 	svccs	0x00212f24
    68f0:	2f212f30 	svccs	0x00212f30
    68f4:	2f212127 	svccs	0x00212127
    68f8:	212f2421 			; <UNDEFINED> instruction: 0x212f2421
    68fc:	2f232121 	svccs	0x00232121
    6900:	4b4b2f2f 	blmi	12d25c4 <_Min_Stack_Size+0x12d21c4>
    6904:	2f2f2f24 	svccs	0x002f2f24
    6908:	2f24214b 	svccs	0x0024214b
    690c:	2f2f2521 	svccs	0x002f2521
    6910:	21212f21 			; <UNDEFINED> instruction: 0x21212f21
    6914:	2f212f24 	svccs	0x00212f24
    6918:	2f212f22 	svccs	0x00212f22
    691c:	21212f23 			; <UNDEFINED> instruction: 0x21212f23
    6920:	21312221 	teqcs	r1, r1, lsr #4
    6924:	2f232121 	svccs	0x00232121
    6928:	21212121 			; <UNDEFINED> instruction: 0x21212121
    692c:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    6930:	2f32212f 	svccs	0x0032212f
    6934:	09032f2f 	stmdbeq	r3, {r0, r1, r2, r3, r5, r8, r9, sl, fp, sp}
    6938:	21212f20 			; <UNDEFINED> instruction: 0x21212f20
    693c:	21212f21 			; <UNDEFINED> instruction: 0x21212f21
    6940:	2f212f21 	svccs	0x00212f21
    6944:	0c032f2f 	stceq	15, cr2, [r3], {47}	; 0x2f
    6948:	21212f2e 			; <UNDEFINED> instruction: 0x21212f2e
    694c:	2f2f2622 	svccs	0x002f2622
    6950:	0a032f32 	beq	d2620 <_Min_Stack_Size+0xd2220>
    6954:	21212f2e 			; <UNDEFINED> instruction: 0x21212f2e
    6958:	2f2f2622 	svccs	0x002f2622
    695c:	2f24212f 	svccs	0x0024212f
    6960:	212e0a03 			; <UNDEFINED> instruction: 0x212e0a03
    6964:	212f2f2f 			; <UNDEFINED> instruction: 0x212f2f2f
    6968:	222f2f2f 	eorcs	r2, pc, #47, 30	; 0xbc
    696c:	2f22212f 	svccs	0x0022212f
    6970:	26232f21 	strtcs	r2, [r3], -r1, lsr #30
    6974:	032f2f2f 			; <UNDEFINED> instruction: 0x032f2f2f
    6978:	212f2e0b 			; <UNDEFINED> instruction: 0x212f2e0b
    697c:	032f2622 			; <UNDEFINED> instruction: 0x032f2622
    6980:	212f2009 			; <UNDEFINED> instruction: 0x212f2009
    6984:	222f2622 	eorcs	r2, pc, #35651584	; 0x2200000
    6988:	032f3421 			; <UNDEFINED> instruction: 0x032f3421
    698c:	312f2e09 			; <UNDEFINED> instruction: 0x312f2e09
    6990:	21212f2f 			; <UNDEFINED> instruction: 0x21212f2f
    6994:	3021212f 	eorcc	r2, r1, pc, lsr #2
    6998:	4b2f2f2f 	blmi	bd265c <_Min_Stack_Size+0xbd225c>
    699c:	0102212f 	tsteq	r2, pc, lsr #2
    69a0:	9a010100 	bls	46da8 <_Min_Stack_Size+0x469a8>
    69a4:	03000001 	movweq	r0, #1
    69a8:	00004700 	andeq	r4, r0, r0, lsl #14
    69ac:	fb010200 	blx	471b6 <_Min_Stack_Size+0x46db6>
    69b0:	01000d0e 	tsteq	r0, lr, lsl #26
    69b4:	00010101 	andeq	r0, r1, r1, lsl #2
    69b8:	00010000 	andeq	r0, r1, r0
    69bc:	2e2e0100 	sufcse	f0, f6, f0
    69c0:	2f2e2e2f 	svccs	0x002e2e2f
    69c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    69c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    69cc:	2f2e2e2f 	svccs	0x002e2e2f
    69d0:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    69d4:	632f6363 			; <UNDEFINED> instruction: 0x632f6363
    69d8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    69dc:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    69e0:	6900006d 	stmdbvs	r0, {r0, r2, r3, r5, r6}
    69e4:	37656565 	strbcc	r6, [r5, -r5, ror #10]!
    69e8:	642d3435 	strtvs	r3, [sp], #-1077	; 0xfffffbcb
    69ec:	00532e66 	subseq	r2, r3, r6, ror #28
    69f0:	00000001 	andeq	r0, r0, r1
    69f4:	88020500 	stmdahi	r2, {r8, sl}
    69f8:	03080005 	movweq	r0, #32773	; 0x8005
    69fc:	280104f0 	stmdacs	r1, {r4, r5, r6, r7, sl}
    6a00:	212f2f2f 			; <UNDEFINED> instruction: 0x212f2f2f
    6a04:	312f2f2f 			; <UNDEFINED> instruction: 0x312f2f2f
    6a08:	2f2f3223 	svccs	0x002f3223
    6a0c:	2f2f212f 	svccs	0x002f212f
    6a10:	00ca032f 	sbceq	r0, sl, pc, lsr #6
    6a14:	2f2f2f20 	svccs	0x002f2f20
    6a18:	342f2f2f 	strtcc	r2, [pc], #-3887	; 6a20 <_Min_Stack_Size+0x6620>
    6a1c:	2f31212f 	svccs	0x0031212f
    6a20:	2f212f2f 	svccs	0x00212f2f
    6a24:	2f2f3121 	svccs	0x002f3121
    6a28:	2f312f2f 	svccs	0x00312f2f
    6a2c:	2f232f21 	svccs	0x00232f21
    6a30:	2f2f2f21 	svccs	0x002f2f21
    6a34:	2f2f2f24 	svccs	0x002f2f24
    6a38:	2f212f2f 	svccs	0x00212f2f
    6a3c:	2f2f232f 	svccs	0x002f232f
    6a40:	212f3123 			; <UNDEFINED> instruction: 0x212f3123
    6a44:	2f232f21 	svccs	0x00232f21
    6a48:	23212121 			; <UNDEFINED> instruction: 0x23212121
    6a4c:	2f2f2f2f 	svccs	0x002f2f2f
    6a50:	2f2f2f4b 	svccs	0x002f2f4b
    6a54:	2f212f4b 	svccs	0x00212f4b
    6a58:	2f2f2f24 	svccs	0x002f2f24
    6a5c:	2f2f4b2f 	svccs	0x002f4b2f
    6a60:	2f212f2f 	svccs	0x00212f2f
    6a64:	2f4b2f24 	svccs	0x004b2f24
    6a68:	4b2f2f4b 	blmi	bd279c <_Min_Stack_Size+0xbd239c>
    6a6c:	2f212f2f 	svccs	0x00212f2f
    6a70:	2f212f25 	svccs	0x00212f25
    6a74:	212f2f21 			; <UNDEFINED> instruction: 0x212f2f21
    6a78:	2f2f2121 	svccs	0x002f2121
    6a7c:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    6a80:	21212f2f 			; <UNDEFINED> instruction: 0x21212f2f
    6a84:	2f242f21 	svccs	0x00242f21
    6a88:	232f212f 			; <UNDEFINED> instruction: 0x232f212f
    6a8c:	242f212f 	strtcs	r2, [pc], #-303	; 6a94 <_Min_Stack_Size+0x6694>
    6a90:	232f2f2f 			; <UNDEFINED> instruction: 0x232f2f2f
    6a94:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    6a98:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    6a9c:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    6aa0:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    6aa4:	2f2f3224 	svccs	0x002f3224
    6aa8:	2f242f2f 	svccs	0x00242f2f
    6aac:	200a032f 	andcs	r0, sl, pc, lsr #6
    6ab0:	2f2f2f28 	svccs	0x002f2f28
    6ab4:	2f2f2f21 	svccs	0x002f2f21
    6ab8:	2f323131 	svccs	0x00323131
    6abc:	2f2f2f2f 	svccs	0x002f2f2f
    6ac0:	2f2f2f2f 	svccs	0x002f2f2f
    6ac4:	2132312f 	teqcs	r2, pc, lsr #2
    6ac8:	2f2f2121 	svccs	0x002f2121
    6acc:	21312121 	teqcs	r1, r1, lsr #2
    6ad0:	2f2f212f 	svccs	0x002f212f
    6ad4:	212f2f31 			; <UNDEFINED> instruction: 0x212f2f31
    6ad8:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    6adc:	212f2f2f 			; <UNDEFINED> instruction: 0x212f2f2f
    6ae0:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    6ae4:	212f2f2f 			; <UNDEFINED> instruction: 0x212f2f2f
    6ae8:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    6aec:	212f2f2f 			; <UNDEFINED> instruction: 0x212f2f2f
    6af0:	2f302121 	svccs	0x00302121
    6af4:	2f2f2f21 	svccs	0x002f2f21
    6af8:	2f2f2f2f 	svccs	0x002f2f2f
    6afc:	2f212f24 	svccs	0x00212f24
    6b00:	2f232f2f 	svccs	0x00232f2f
    6b04:	2f232121 	svccs	0x00232121
    6b08:	2f312f21 	svccs	0x00312f21
    6b0c:	2f2f2f21 	svccs	0x002f2f21
    6b10:	2f2f242f 	svccs	0x002f242f
    6b14:	2f2f212f 	svccs	0x002f212f
    6b18:	212f2f22 			; <UNDEFINED> instruction: 0x212f2f22
    6b1c:	2f242f25 	svccs	0x00242f25
    6b20:	2f2f212f 	svccs	0x002f212f
    6b24:	2f2f212f 	svccs	0x002f212f
    6b28:	21212f2f 			; <UNDEFINED> instruction: 0x21212f2f
    6b2c:	2f212f21 	svccs	0x00212f21
    6b30:	2221212f 	eorcs	r2, r1, #-1073741813	; 0xc000000b
    6b34:	302f212f 	eorcc	r2, pc, pc, lsr #2
    6b38:	2f2f2f2f 	svccs	0x002f2f2f
    6b3c:	01000102 	tsteq	r0, r2, lsl #2
    6b40:	0000b901 	andeq	fp, r0, r1, lsl #18
    6b44:	47000300 	strmi	r0, [r0, -r0, lsl #6]
    6b48:	02000000 	andeq	r0, r0, #0
    6b4c:	0d0efb01 	vstreq	d15, [lr, #-4]
    6b50:	01010100 	mrseq	r0, (UNDEF: 17)
    6b54:	00000001 	andeq	r0, r0, r1
    6b58:	01000001 	tsteq	r0, r1
    6b5c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6b60:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6b64:	2f2e2e2f 	svccs	0x002e2e2f
    6b68:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6b6c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    6b70:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    6b74:	6e6f632f 	cdpvs	3, 6, cr6, cr15, cr15, {1}
    6b78:	2f676966 	svccs	0x00676966
    6b7c:	006d7261 	rsbeq	r7, sp, r1, ror #4
    6b80:	65656900 	strbvs	r6, [r5, #-2304]!	; 0xfffff700
    6b84:	34353765 	ldrtcc	r3, [r5], #-1893	; 0xfffff89b
    6b88:	2e66642d 	cdpcs	4, 6, cr6, cr6, cr13, {1}
    6b8c:	00010053 	andeq	r0, r1, r3, asr r0
    6b90:	05000000 	streq	r0, [r0, #-0]
    6b94:	0009ac02 	andeq	sl, r9, r2, lsl #24
    6b98:	08fc0308 	ldmeq	ip!, {r3, r8, r9}^
    6b9c:	2f322f01 	svccs	0x00322f01
    6ba0:	2f353033 	svccs	0x00353033
    6ba4:	2f212f2f 	svccs	0x00212f2f
    6ba8:	23200a03 			; <UNDEFINED> instruction: 0x23200a03
    6bac:	2f2f212f 	svccs	0x002f212f
    6bb0:	23212f21 			; <UNDEFINED> instruction: 0x23212f21
    6bb4:	21213131 			; <UNDEFINED> instruction: 0x21213131
    6bb8:	21212321 			; <UNDEFINED> instruction: 0x21212321
    6bbc:	2f282f2f 	svccs	0x00282f2f
    6bc0:	212f212f 			; <UNDEFINED> instruction: 0x212f212f
    6bc4:	2f212f2f 	svccs	0x00212f2f
    6bc8:	0e033122 	adfeqsp	f3, f3, f2
    6bcc:	2121212e 			; <UNDEFINED> instruction: 0x2121212e
    6bd0:	35212121 	strcc	r2, [r1, #-289]!	; 0xfffffedf
    6bd4:	21233025 			; <UNDEFINED> instruction: 0x21233025
    6bd8:	200a0330 	andcs	r0, sl, r0, lsr r3
    6bdc:	21212f32 			; <UNDEFINED> instruction: 0x21212f32
    6be0:	2f324422 	svccs	0x00324422
    6be4:	44212121 	strtmi	r2, [r1], #-289	; 0xfffffedf
    6be8:	21212f32 			; <UNDEFINED> instruction: 0x21212f32
    6bec:	2f324421 	svccs	0x00324421
    6bf0:	44212121 	strtmi	r2, [r1], #-289	; 0xfffffedf
    6bf4:	21212f32 			; <UNDEFINED> instruction: 0x21212f32
    6bf8:	00020222 	andeq	r0, r2, r2, lsr #4
    6bfc:	00750101 	rsbseq	r0, r5, r1, lsl #2
    6c00:	00030000 	andeq	r0, r3, r0
    6c04:	00000047 	andeq	r0, r0, r7, asr #32
    6c08:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    6c0c:	0101000d 	tsteq	r1, sp
    6c10:	00000101 	andeq	r0, r0, r1, lsl #2
    6c14:	00000100 	andeq	r0, r0, r0, lsl #2
    6c18:	2f2e2e01 	svccs	0x002e2e01
    6c1c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6c20:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6c24:	2f2e2e2f 	svccs	0x002e2e2f
    6c28:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 6b78 <_Min_Stack_Size+0x6778>
    6c2c:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    6c30:	6f632f63 	svcvs	0x00632f63
    6c34:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    6c38:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    6c3c:	65690000 	strbvs	r0, [r9, #-0]!
    6c40:	35376565 	ldrcc	r6, [r7, #-1381]!	; 0xfffffa9b
    6c44:	66642d34 			; <UNDEFINED> instruction: 0x66642d34
    6c48:	0100532e 	tsteq	r0, lr, lsr #6
    6c4c:	00000000 	andeq	r0, r0, r0
    6c50:	0abc0205 	beq	fef0746c <__StackLimit+0xdeee746c>
    6c54:	f8030800 			; <UNDEFINED> instruction: 0xf8030800
    6c58:	2f2f010a 	svccs	0x002f010a
    6c5c:	2f2f2121 	svccs	0x002f2121
    6c60:	2f2f2f23 	svccs	0x002f2f23
    6c64:	21212f2f 			; <UNDEFINED> instruction: 0x21212f2f
    6c68:	2f222f22 	svccs	0x00222f22
    6c6c:	2f212f21 	svccs	0x00212f21
    6c70:	01022f22 	tsteq	r2, r2, lsr #30
    6c74:	71010100 	mrsvc	r0, (UNDEF: 17)
    6c78:	03000000 	movweq	r0, #0
    6c7c:	00004700 	andeq	r4, r0, r0, lsl #14
    6c80:	fb010200 	blx	4748a <_Min_Stack_Size+0x4708a>
    6c84:	01000d0e 	tsteq	r0, lr, lsl #26
    6c88:	00010101 	andeq	r0, r1, r1, lsl #2
    6c8c:	00010000 	andeq	r0, r1, r0
    6c90:	2e2e0100 	sufcse	f0, f6, f0
    6c94:	2f2e2e2f 	svccs	0x002e2e2f
    6c98:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6c9c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6ca0:	2f2e2e2f 	svccs	0x002e2e2f
    6ca4:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    6ca8:	632f6363 			; <UNDEFINED> instruction: 0x632f6363
    6cac:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    6cb0:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    6cb4:	6900006d 	stmdbvs	r0, {r0, r2, r3, r5, r6}
    6cb8:	37656565 	strbcc	r6, [r5, -r5, ror #10]!
    6cbc:	642d3435 	strtvs	r3, [sp], #-1077	; 0xfffffbcb
    6cc0:	00532e66 	subseq	r2, r3, r6, ror #28
    6cc4:	00000001 	andeq	r0, r0, r1
    6cc8:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    6ccc:	0308000b 	movweq	r0, #32779	; 0x800b
    6cd0:	21010ba4 	smlatbcs	r1, r4, fp, r0
    6cd4:	21212f21 			; <UNDEFINED> instruction: 0x21212f21
    6cd8:	2f232f2f 	svccs	0x00232f2f
    6cdc:	222f2f2f 	eorcs	r2, pc, #47, 30	; 0xbc
    6ce0:	212f222f 			; <UNDEFINED> instruction: 0x212f222f
    6ce4:	022f222f 	eoreq	r2, pc, #-268435454	; 0xf0000002
    6ce8:	01010001 	tsteq	r1, r1
    6cec:	0000005c 	andeq	r0, r0, ip, asr r0
    6cf0:	00420003 	subeq	r0, r2, r3
    6cf4:	01020000 	mrseq	r0, (UNDEF: 2)
    6cf8:	000d0efb 	strdeq	r0, [sp], -fp
    6cfc:	01010101 	tsteq	r1, r1, lsl #2
    6d00:	01000000 	mrseq	r0, (UNDEF: 0)
    6d04:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    6d08:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6d0c:	2f2e2e2f 	svccs	0x002e2e2f
    6d10:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6d14:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6d18:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    6d1c:	2f636367 	svccs	0x00636367
    6d20:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    6d24:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    6d28:	00006d72 	andeq	r6, r0, r2, ror sp
    6d2c:	62617062 	rsbvs	r7, r1, #98	; 0x62
    6d30:	00532e69 	subseq	r2, r3, r9, ror #28
    6d34:	00000001 	andeq	r0, r0, r1
    6d38:	4c020500 	cfstr32mi	mvfx0, [r2], {-0}
    6d3c:	0308000b 	movweq	r0, #32779	; 0x800b
    6d40:	bc0101fd 	stflts	f0, [r1], {253}	; 0xfd
    6d44:	02592f4c 	subseq	r2, r9, #76, 30	; 0x130
    6d48:	01010001 	tsteq	r1, r1
    6d4c:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    6d50:	00ee0003 	rsceq	r0, lr, r3
    6d54:	01020000 	mrseq	r0, (UNDEF: 2)
    6d58:	000d0efb 	strdeq	r0, [sp], -fp
    6d5c:	01010101 	tsteq	r1, r1, lsl #2
    6d60:	01000000 	mrseq	r0, (UNDEF: 0)
    6d64:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    6d68:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6d6c:	2f2e2e2f 	svccs	0x002e2e2f
    6d70:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6d74:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6d78:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    6d7c:	00636367 	rsbeq	r6, r3, r7, ror #6
    6d80:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6d84:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6d88:	2f2e2e2f 	svccs	0x002e2e2f
    6d8c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6d90:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    6d94:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    6d98:	2f2e2e2f 	svccs	0x002e2e2f
    6d9c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6da0:	00656475 	rsbeq	r6, r5, r5, ror r4
    6da4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6da8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6dac:	2f2e2e2f 	svccs	0x002e2e2f
    6db0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6db4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    6db8:	2f2e2e00 	svccs	0x002e2e00
    6dbc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6dc0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    6dc4:	2f2e2e2f 	svccs	0x002e2e2f
    6dc8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 6d18 <_Min_Stack_Size+0x6918>
    6dcc:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    6dd0:	2e2e2f63 	cdpcs	15, 2, cr2, cr14, cr3, {3}
    6dd4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    6dd8:	6e6f632f 	cdpvs	3, 6, cr6, cr15, cr15, {1}
    6ddc:	2f676966 	svccs	0x00676966
    6de0:	006d7261 	rsbeq	r7, sp, r1, ror #4
    6de4:	62696c00 	rsbvs	r6, r9, #0, 24
    6de8:	32636367 	rsbcc	r6, r3, #-1677721599	; 0x9c000001
    6dec:	0100632e 	tsteq	r0, lr, lsr #6
    6df0:	61680000 	cmnvs	r8, r0
    6df4:	61746873 	cmnvs	r4, r3, ror r8
    6df8:	00682e62 	rsbeq	r2, r8, r2, ror #28
    6dfc:	61000002 	tstvs	r0, r2
    6e00:	692d6d72 	pushvs	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
    6e04:	682e6173 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, sp, lr}
    6e08:	00000300 	andeq	r0, r0, r0, lsl #6
    6e0c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6e10:	2e757063 	cdpcs	0, 7, cr7, cr5, cr3, {3}
    6e14:	00030068 	andeq	r0, r3, r8, rrx
    6e18:	736e6900 	cmnvc	lr, #0, 18
    6e1c:	6f632d6e 	svcvs	0x00632d6e
    6e20:	6174736e 	cmnvs	r4, lr, ror #6
    6e24:	2e73746e 	cdpcs	4, 7, cr7, cr3, cr14, {3}
    6e28:	00030068 	andeq	r0, r3, r8, rrx
    6e2c:	6d726100 	ldfvse	f6, [r2, #-0]
    6e30:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6e34:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    6e38:	63636762 	cmnvs	r3, #25690112	; 0x1880000
    6e3c:	00682e32 	rsbeq	r2, r8, r2, lsr lr
    6e40:	00000001 	andeq	r0, r0, r1
    6e44:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6e48:	000b7c02 	andeq	r7, fp, r2, lsl #24
    6e4c:	07f70308 	ldrbeq	r0, [r7, r8, lsl #6]!
    6e50:	13030501 	movwne	r0, #13569	; 0x3501
    6e54:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    6e58:	13131413 	tstne	r3, #318767104	; 0x13000000
    6e5c:	03060105 	movweq	r0, #24837	; 0x6105
    6e60:	052e0176 	streq	r0, [lr, #-374]!	; 0xfffffe8a
    6e64:	200a0306 	andcs	r0, sl, r6, lsl #6
    6e68:	21060305 	tstcs	r6, r5, lsl #6
    6e6c:	01060605 	tsteq	r6, r5, lsl #12
    6e70:	03060305 	movweq	r0, #25349	; 0x6305
    6e74:	06052025 	streq	r2, [r5], -r5, lsr #32
    6e78:	0a050106 	beq	147298 <_Min_Stack_Size+0x146e98>
    6e7c:	0607053e 			; <UNDEFINED> instruction: 0x0607053e
    6e80:	060a052e 	streq	r0, [sl], -lr, lsr #10
    6e84:	06040501 	streq	r0, [r4], -r1, lsl #10
    6e88:	07053024 	streq	r3, [r5, -r4, lsr #32]
    6e8c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    6e90:	2e052506 	cfsh32cs	mvfx2, mvfx5, #6
    6e94:	11051306 	tstne	r5, r6, lsl #6
    6e98:	2e1e052e 	cfmul64cs	mvdx0, mvdx14, mvdx14
    6e9c:	052d0b05 	streq	r0, [sp, #-2821]!	; 0xfffff4fb
    6ea0:	05210608 	streq	r0, [r1, #-1544]!	; 0xfffff9f8
    6ea4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6ea8:	052f0608 	streq	r0, [pc, #-1544]!	; 68a8 <_Min_Stack_Size+0x64a8>
    6eac:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6eb0:	01230604 			; <UNDEFINED> instruction: 0x01230604
    6eb4:	582e0101 	stmdapl	lr!, {r0, r8}
    6eb8:	2e060101 	adfcss	f0, f6, f1
    6ebc:	00014a06 	andeq	r4, r1, r6, lsl #20
    6ec0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    6ec4:	01040200 	mrseq	r0, R12_usr
    6ec8:	02002006 	andeq	r2, r0, #6
    6ecc:	2e060104 	adfcss	f0, f6, f4
    6ed0:	03040200 	movweq	r0, #16896	; 0x4200
    6ed4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6ed8:	02003c05 	andeq	r3, r0, #1280	; 0x500
    6edc:	20060504 	andcs	r0, r6, r4, lsl #10
    6ee0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6ee4:	02002006 	andeq	r2, r0, #6
    6ee8:	00200704 	eoreq	r0, r0, r4, lsl #14
    6eec:	01070402 	tsteq	r7, r2, lsl #8
    6ef0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6ef4:	02002006 	andeq	r2, r0, #6
    6ef8:	2e060704 	cdpcs	7, 0, cr0, cr6, cr4, {0}
    6efc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6f00:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6f04:	4a060704 	bmi	188b1c <_Min_Stack_Size+0x18871c>
    6f08:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6f0c:	04020001 	streq	r0, [r2], #-1
    6f10:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
    6f14:	20060804 	andcs	r0, r6, r4, lsl #16
    6f18:	08040200 	stmdaeq	r4, {r9}
    6f1c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6f20:	002e0a04 	eoreq	r0, lr, r4, lsl #20
    6f24:	3c0c0402 	cfstrscc	mvf0, [ip], {2}
    6f28:	0c040200 	sfmeq	f0, 4, [r4], {-0}
    6f2c:	02002006 	andeq	r2, r0, #6
    6f30:	20060e04 	andcs	r0, r6, r4, lsl #28
    6f34:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    6f38:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6f3c:	2e060e04 	cdpcs	14, 0, cr0, cr6, cr4, {0}
    6f40:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    6f44:	04020001 	streq	r0, [r2], #-1
    6f48:	0001060e 	andeq	r0, r1, lr, lsl #12
    6f4c:	060e0402 	streq	r0, [lr], -r2, lsl #8
    6f50:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    6f54:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6f58:	2e030607 	cfmadd32cs	mvax0, mvfx0, mvfx3, mvfx7
    6f5c:	060a0520 	streq	r0, [sl], -r0, lsr #10
    6f60:	06040501 	streq	r0, [r4], -r1, lsl #10
    6f64:	06120522 	ldreq	r0, [r2], -r2, lsr #10
    6f68:	06040501 	streq	r0, [r4], -r1, lsl #10
    6f6c:	060e0521 	streq	r0, [lr], -r1, lsr #10
    6f70:	06040501 	streq	r0, [r4], -r1, lsl #10
    6f74:	06080521 	streq	r0, [r8], -r1, lsr #10
    6f78:	06030501 	streq	r0, [r3], -r1, lsl #10
    6f7c:	2e00da03 	vmlacs.f32	s26, s0, s6
    6f80:	06010513 			; <UNDEFINED> instruction: 0x06010513
    6f84:	06040513 			; <UNDEFINED> instruction: 0x06040513
    6f88:	3c7efa03 			; <UNDEFINED> instruction: 0x3c7efa03
    6f8c:	01060705 	tsteq	r6, r5, lsl #14
    6f90:	31060405 	tstcc	r6, r5, lsl #8
    6f94:	06070530 			; <UNDEFINED> instruction: 0x06070530
    6f98:	06080501 	streq	r0, [r8], -r1, lsl #10
    6f9c:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    6fa0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6fa4:	06210608 	strteq	r0, [r1], -r8, lsl #12
    6fa8:	06040501 	streq	r0, [r4], -r1, lsl #10
    6fac:	01581203 	cmpeq	r8, r3, lsl #4
    6fb0:	01010101 	tsteq	r1, r1, lsl #2
    6fb4:	3c062e01 	stccc	14, cr2, [r6], {1}
    6fb8:	00014a06 	andeq	r4, r1, r6, lsl #20
    6fbc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    6fc0:	01040200 	mrseq	r0, R12_usr
    6fc4:	02002006 	andeq	r2, r0, #6
    6fc8:	2e060104 	adfcss	f0, f6, f4
    6fcc:	03040200 	movweq	r0, #16896	; 0x4200
    6fd0:	003c0620 	eorseq	r0, ip, r0, lsr #12
    6fd4:	06070402 	streq	r0, [r7], -r2, lsl #8
    6fd8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6fdc:	02002007 	andeq	r2, r0, #7
    6fe0:	00010704 	andeq	r0, r1, r4, lsl #14
    6fe4:	3c070402 	cfstrscc	mvf0, [r7], {2}
    6fe8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6fec:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6ff0:	4a060704 	bmi	188c08 <_Min_Stack_Size+0x188808>
    6ff4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6ff8:	04020001 	streq	r0, [r2], #-1
    6ffc:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
    7000:	20060804 	andcs	r0, r6, r4, lsl #16
    7004:	08040200 	stmdaeq	r4, {r9}
    7008:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    700c:	06200a04 	strteq	r0, [r0], -r4, lsl #20
    7010:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7014:	0020060e 	eoreq	r0, r0, lr, lsl #12
    7018:	2e0e0402 	cdpcs	4, 0, cr0, cr14, cr2, {0}
    701c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    7020:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7024:	0001060e 	andeq	r0, r1, lr, lsl #12
    7028:	200e0402 	andcs	r0, lr, r2, lsl #8
    702c:	03060705 	movweq	r0, #26373	; 0x6705
    7030:	0a050110 	beq	147478 <_Min_Stack_Size+0x147078>
    7034:	04050106 	streq	r0, [r5], #-262	; 0xfffffefa
    7038:	15133206 	ldrne	r3, [r3, #-518]	; 0xfffffdfa
    703c:	01060705 	tsteq	r6, r5, lsl #14
    7040:	30060805 	andcc	r0, r6, r5, lsl #16
    7044:	0c051313 	stceq	3, cr1, [r5], {19}
    7048:	03050106 	movweq	r0, #20742	; 0x5106
    704c:	00c70306 	sbceq	r0, r7, r6, lsl #6
    7050:	0105134a 	tsteq	r5, sl, asr #6
    7054:	05201306 	streq	r1, [r0, #-774]!	; 0xfffffcfa
    7058:	be030604 	cfmadd32lt	mvax0, mvfx0, mvfx3, mvfx4
    705c:	052f2e7f 	streq	r2, [pc, #-3711]!	; 61e5 <_Min_Stack_Size+0x5de5>
    7060:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    7064:	0a030608 	beq	c888c <_Min_Stack_Size+0xc848c>
    7068:	060b0520 	streq	r0, [fp], -r0, lsr #10
    706c:	00140501 	andseq	r0, r4, r1, lsl #10
    7070:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7074:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    7078:	203c0613 	eorscs	r0, ip, r3, lsl r6
    707c:	25060805 	strcs	r0, [r6, #-2053]	; 0xfffff7fb
    7080:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    7084:	06050501 	streq	r0, [r5], -r1, lsl #10
    7088:	05131330 	ldreq	r1, [r3, #-816]	; 0xfffffcd0
    708c:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    7090:	a4030606 	strge	r0, [r3], #-1542	; 0xfffff9fa
    7094:	08053c7f 	stmdaeq	r5, {r0, r1, r2, r3, r4, r5, r6, sl, fp, ip, sp}
    7098:	2000e103 	andcs	lr, r0, r3, lsl #2
    709c:	060a0515 			; <UNDEFINED> instruction: 0x060a0515
    70a0:	06080501 	streq	r0, [r8], -r1, lsl #10
    70a4:	06110530 			; <UNDEFINED> instruction: 0x06110530
    70a8:	201e0501 	andscs	r0, lr, r1, lsl #10
    70ac:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    70b0:	052f0608 	streq	r0, [pc, #-1544]!	; 6ab0 <_Min_Stack_Size+0x66b0>
    70b4:	05140611 	ldreq	r0, [r4, #-1553]	; 0xfffff9ef
    70b8:	0b052e1e 	bleq	152938 <_Min_Stack_Size+0x152538>
    70bc:	3208052d 	andcc	r0, r8, #188743680	; 0xb400000
    70c0:	052b0b05 	streq	r0, [fp, #-2821]!	; 0xfffff4fb
    70c4:	053c3108 	ldreq	r3, [ip, #-264]!	; 0xfffffef8
    70c8:	08058b0b 	stmdaeq	r5, {r0, r1, r3, r8, r9, fp, pc}
    70cc:	13132f06 	tstne	r3, #6, 30
    70d0:	01060b05 	tsteq	r6, r5, lsl #22
    70d4:	30060805 	andcc	r0, r6, r5, lsl #16
    70d8:	01010101 	tsteq	r1, r1, lsl #2
    70dc:	01010101 	tsteq	r1, r1, lsl #2
    70e0:	04020001 	streq	r0, [r2], #-1
    70e4:	02002001 	andeq	r2, r0, #1
    70e8:	2e060104 	adfcss	f0, f6, f4
    70ec:	01040200 	mrseq	r0, R12_usr
    70f0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    70f4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    70f8:	3c050402 	cfstrscc	mvf0, [r5], {2}
    70fc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    7100:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    7104:	20060704 	andcs	r0, r6, r4, lsl #14
    7108:	07040200 	streq	r0, [r4, -r0, lsl #4]
    710c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7110:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    7114:	20060704 	andcs	r0, r6, r4, lsl #14
    7118:	07040200 	streq	r0, [r4, -r0, lsl #4]
    711c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    7120:	2e060704 	cdpcs	7, 0, cr0, cr6, cr4, {0}
    7124:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7128:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    712c:	00010704 	andeq	r0, r1, r4, lsl #14
    7130:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
    7134:	08040200 	stmdaeq	r4, {r9}
    7138:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    713c:	2e060804 	cdpcs	8, 0, cr0, cr6, cr4, {0}
    7140:	0a040200 	beq	107948 <_Min_Stack_Size+0x107548>
    7144:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7148:	02002e0c 	andeq	r2, r0, #12, 28	; 0xc0
    714c:	20060c04 	andcs	r0, r6, r4, lsl #24
    7150:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    7154:	02002006 	andeq	r2, r0, #6
    7158:	2e060e04 	cdpcs	14, 0, cr0, cr6, cr4, {0}
    715c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    7160:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    7164:	00010e04 	andeq	r0, r1, r4, lsl #28
    7168:	060e0402 	streq	r0, [lr], -r2, lsl #8
    716c:	04020001 	streq	r0, [r2], #-1
    7170:	0013060e 	andseq	r0, r3, lr, lsl #12
    7174:	010e0402 	tsteq	lr, r2, lsl #8
    7178:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    717c:	000b052e 	andeq	r0, fp, lr, lsr #10
    7180:	060e0402 	streq	r0, [lr], -r2, lsl #8
    7184:	00080514 	andeq	r0, r8, r4, lsl r5
    7188:	1e0e0402 	cdpne	4, 0, cr0, cr14, cr2, {0}
    718c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    7190:	02002006 	andeq	r2, r0, #6
    7194:	20060e04 	andcs	r0, r6, r4, lsl #28
    7198:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    719c:	0b051406 	bleq	14c1bc <_Min_Stack_Size+0x14bdbc>
    71a0:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    71a4:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    71a8:	01040200 	mrseq	r0, R12_usr
    71ac:	06080520 	streq	r0, [r8], -r0, lsr #10
    71b0:	0b051526 	bleq	14c650 <_Min_Stack_Size+0x14c250>
    71b4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    71b8:	054b3006 	strbeq	r3, [fp, #-6]
    71bc:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    71c0:	14052e20 	strne	r2, [r5], #-3616	; 0xfffff1e0
    71c4:	1f1a052f 	svcne	0x001a052f
    71c8:	21060505 	tstcs	r6, r5, lsl #10
    71cc:	06090513 			; <UNDEFINED> instruction: 0x06090513
    71d0:	2e203c01 	cdpcs	12, 2, cr3, cr0, cr1, {0}
    71d4:	f9030405 			; <UNDEFINED> instruction: 0xf9030405
    71d8:	2e2e207e 	mcrcs	0, 1, r2, cr14, cr14, {3}
    71dc:	03060805 	movweq	r0, #26629	; 0x6805
    71e0:	0a05011e 	beq	147660 <_Min_Stack_Size+0x147260>
    71e4:	08050106 	stmdaeq	r5, {r1, r2, r8}
    71e8:	1e053006 	cdpne	0, 0, cr3, cr5, cr6, {0}
    71ec:	0b051406 	bleq	14c20c <_Min_Stack_Size+0x14be0c>
    71f0:	0608052c 	streq	r0, [r8], -ip, lsr #10
    71f4:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    71f8:	2d0b0513 	cfstr32cs	mvfx0, [fp, #-76]	; 0xffffffb4
    71fc:	2f060805 	svccs	0x00060805
    7200:	0b051506 	bleq	14c620 <_Min_Stack_Size+0x14c220>
    7204:	0608052b 	streq	r0, [r8], -fp, lsr #10
    7208:	74140621 	ldrvc	r0, [r4], #-1569	; 0xfffff9df
    720c:	05560b05 	ldrbeq	r0, [r6, #-2821]	; 0xfffff4fb
    7210:	01300608 	teqeq	r0, r8, lsl #12
    7214:	01010101 	tsteq	r1, r1, lsl #2
    7218:	01010101 	tsteq	r1, r1, lsl #2
    721c:	01040200 	mrseq	r0, R12_usr
    7220:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7224:	00200601 	eoreq	r0, r0, r1, lsl #12
    7228:	06010402 	streq	r0, [r1], -r2, lsl #8
    722c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7230:	02002003 	andeq	r2, r0, #3
    7234:	002e0504 	eoreq	r0, lr, r4, lsl #10
    7238:	06050402 	streq	r0, [r5], -r2, lsl #8
    723c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7240:	00200607 	eoreq	r0, r0, r7, lsl #12
    7244:	20070402 	andcs	r0, r7, r2, lsl #8
    7248:	07040200 	streq	r0, [r4, -r0, lsl #4]
    724c:	04020001 	streq	r0, [r2], #-1
    7250:	02003c07 	andeq	r3, r0, #1792	; 0x700
    7254:	2e060704 	cdpcs	7, 0, cr0, cr6, cr4, {0}
    7258:	07040200 	streq	r0, [r4, -r0, lsl #4]
    725c:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    7260:	00010704 	andeq	r0, r1, r4, lsl #14
    7264:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
    7268:	08040200 	stmdaeq	r4, {r9}
    726c:	02002006 	andeq	r2, r0, #6
    7270:	2e060804 	cdpcs	8, 0, cr0, cr6, cr4, {0}
    7274:	0a040200 	beq	107a7c <_Min_Stack_Size+0x10767c>
    7278:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    727c:	02002e0c 	andeq	r2, r0, #12, 28	; 0xc0
    7280:	20060c04 	andcs	r0, r6, r4, lsl #24
    7284:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    7288:	02002006 	andeq	r2, r0, #6
    728c:	00200e04 	eoreq	r0, r0, r4, lsl #28
    7290:	010e0402 	tsteq	lr, r2, lsl #8
    7294:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    7298:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    729c:	002e0e04 	eoreq	r0, lr, r4, lsl #28
    72a0:	200e0402 	andcs	r0, lr, r2, lsl #8
    72a4:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    72a8:	d4030204 	strle	r0, [r3], #-516	; 0xfffffdfc
    72ac:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    72b0:	13063006 	movwne	r3, #24582	; 0x6006
    72b4:	05490705 	strbeq	r0, [r9, #-1797]	; 0xfffff8fb
    72b8:	06210605 	strteq	r0, [r1], -r5, lsl #12
    72bc:	08052020 	stmdaeq	r5, {r5, sp}
    72c0:	017fa903 	cmneq	pc, r3, lsl #18
    72c4:	00d1032e 	sbcseq	r0, r1, lr, lsr #6
    72c8:	af032e01 	svcge	0x00032e01
    72cc:	032e017f 			; <UNDEFINED> instruction: 0x032e017f
    72d0:	2e0100d1 	mcrcs	0, 0, r0, cr1, cr1, {6}
    72d4:	00040520 	andeq	r0, r4, r0, lsr #10
    72d8:	06050402 	streq	r0, [r5], -r2, lsl #8
    72dc:	207fb403 	rsbscs	fp, pc, r3, lsl #8
    72e0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    72e4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    72e8:	00200504 	eoreq	r0, r0, r4, lsl #10
    72ec:	060c0402 	streq	r0, [ip], -r2, lsl #8
    72f0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    72f4:	0020060c 	eoreq	r0, r0, ip, lsl #12
    72f8:	200c0402 	andcs	r0, ip, r2, lsl #8
    72fc:	0c040200 	sfmeq	f0, 4, [r4], {-0}
    7300:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7304:	0102200c 	tsteq	r2, ip
    7308:	5c010100 	stfpls	f0, [r1], {-0}
    730c:	03000000 	movweq	r0, #0
    7310:	00004600 	andeq	r4, r0, r0, lsl #12
    7314:	fb010200 	blx	47b1e <_Min_Stack_Size+0x4771e>
    7318:	01000d0e 	tsteq	r0, lr, lsl #26
    731c:	00010101 	andeq	r0, r1, r1, lsl #2
    7320:	00010000 	andeq	r0, r1, r0
    7324:	2e2e0100 	sufcse	f0, f6, f0
    7328:	2f2e2e2f 	svccs	0x002e2e2f
    732c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7330:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7334:	2f2e2e2f 	svccs	0x002e2e2f
    7338:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    733c:	632f6363 			; <UNDEFINED> instruction: 0x632f6363
    7340:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    7344:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    7348:	6c00006d 	stcvs	0, cr0, [r0], {109}	; 0x6d
    734c:	66316269 	ldrtvs	r6, [r1], -r9, ror #4
    7350:	73636e75 	cmnvc	r3, #1872	; 0x750
    7354:	0100532e 	tsteq	r0, lr, lsr #6
    7358:	00000000 	andeq	r0, r0, r0
    735c:	0e4c0205 	cdpeq	2, 4, cr0, cr12, cr5, {0}
    7360:	e7030800 	str	r0, [r3, -r0, lsl #16]
    7364:	0102010b 	tsteq	r2, fp, lsl #2
    7368:	46010100 	strmi	r0, [r1], -r0, lsl #2
    736c:	03000001 	movweq	r0, #1
    7370:	00012800 	andeq	r2, r1, r0, lsl #16
    7374:	fb010200 	blx	47b7e <_Min_Stack_Size+0x4777e>
    7378:	01000d0e 	tsteq	r0, lr, lsl #26
    737c:	00010101 	andeq	r0, r1, r1, lsl #2
    7380:	00010000 	andeq	r0, r1, r0
    7384:	2e2e0100 	sufcse	f0, f6, f0
    7388:	2f2e2e2f 	svccs	0x002e2e2f
    738c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7390:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7394:	2f2e2e2f 	svccs	0x002e2e2f
    7398:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    739c:	656e2f2e 	strbvs	r2, [lr, #-3886]!	; 0xfffff0d2
    73a0:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    73a4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    73a8:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    73ac:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    73b0:	73752f00 	cmnvc	r5, #0, 30
    73b4:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    73b8:	63672f62 	cmnvs	r7, #392	; 0x188
    73bc:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    73c0:	6f6e2d6d 	svcvs	0x006e2d6d
    73c4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    73c8:	2f696261 	svccs	0x00696261
    73cc:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    73d0:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    73d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    73d8:	622f0065 	eorvs	r0, pc, #101	; 0x65
    73dc:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    73e0:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    73e4:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
    73e8:	7667476b 	strbtvc	r4, [r7], -fp, ror #14
    73ec:	6e2f4577 	mcrvs	5, 1, r4, cr15, cr7, {3}
    73f0:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    73f4:	2e332d62 	cdpcs	13, 3, cr2, cr3, cr2, {3}
    73f8:	2f302e33 	svccs	0x00302e33
    73fc:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    7400:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 7264 <_Min_Stack_Size+0x6e64>
    7404:	2f636269 	svccs	0x00636269
    7408:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    740c:	2f656475 	svccs	0x00656475
    7410:	00737973 	rsbseq	r7, r3, r3, ror r9
    7414:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    7418:	6e2f646c 	cdpvs	4, 2, cr6, cr15, cr12, {3}
    741c:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    7420:	476b2d62 	strbmi	r2, [fp, -r2, ror #26]!
    7424:	45777667 	ldrbmi	r7, [r7, #-1639]!	; 0xfffff999
    7428:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    742c:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
    7430:	2e332e33 	mrccs	14, 1, r2, cr3, cr3, {1}
    7434:	656e2f30 	strbvs	r2, [lr, #-3888]!	; 0xfffff0d0
    7438:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    743c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7440:	6e692f63 	cdpvs	15, 6, cr2, cr9, cr3, {3}
    7444:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7448:	61000065 	tstvs	r0, r5, rrx
    744c:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    7450:	00632e74 	rsbeq	r2, r3, r4, ror lr
    7454:	73000001 	movwvc	r0, #1
    7458:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    745c:	00682e66 	rsbeq	r2, r8, r6, ror #28
    7460:	5f000002 	svcpl	0x00000002
    7464:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    7468:	00682e73 	rsbeq	r2, r8, r3, ror lr
    746c:	72000003 	andvc	r0, r0, #3
    7470:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
    7474:	0300682e 	movweq	r6, #2094	; 0x82e
    7478:	6f6c0000 	svcvs	0x006c0000
    747c:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    7480:	00000300 	andeq	r0, r0, r0, lsl #6
    7484:	6c647473 	cfstrdvs	mvd7, [r4], #-460	; 0xfffffe34
    7488:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
    748c:	00000400 	andeq	r0, r0, r0, lsl #8
    7490:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
    7494:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
    7498:	00000100 	andeq	r0, r0, r0, lsl #2
    749c:	00010500 	andeq	r0, r1, r0, lsl #10
    74a0:	0e500205 	cdpeq	2, 5, cr0, cr0, cr5, {0}
    74a4:	38030800 	stmdacc	r3, {fp}
    74a8:	13030501 	movwne	r0, #13569	; 0x3501
    74ac:	01060a05 	tsteq	r6, r5, lsl #20
    74b0:	01002e4a 	tsteq	r0, sl, asr #28
    74b4:	0000d301 	andeq	sp, r0, r1, lsl #6
    74b8:	7b000300 	blvc	80c0 <_Min_Stack_Size+0x7cc0>
    74bc:	02000000 	andeq	r0, r0, #0
    74c0:	0d0efb01 	vstreq	d15, [lr, #-4]
    74c4:	01010100 	mrseq	r0, (UNDEF: 17)
    74c8:	00000001 	andeq	r0, r0, r1
    74cc:	01000001 	tsteq	r0, r1
    74d0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    74d4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    74d8:	2f2e2e2f 	svccs	0x002e2e2f
    74dc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    74e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    74e4:	2f2e2e2f 	svccs	0x002e2e2f
    74e8:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    74ec:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 7350 <_Min_Stack_Size+0x6f50>
    74f0:	2f636269 	svccs	0x00636269
    74f4:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
    74f8:	73752f00 	cmnvc	r5, #0, 30
    74fc:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    7500:	63672f62 	cmnvs	r7, #392	; 0x188
    7504:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    7508:	6f6e2d6d 	svcvs	0x006e2d6d
    750c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7510:	2f696261 	svccs	0x00696261
    7514:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    7518:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    751c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7520:	66000065 	strvs	r0, [r0], -r5, rrx
    7524:	2e696e69 	cdpcs	14, 6, cr6, cr9, cr9, {3}
    7528:	00010063 	andeq	r0, r1, r3, rrx
    752c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    7530:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    7534:	00020068 	andeq	r0, r2, r8, rrx
    7538:	01050000 	mrseq	r0, (UNDEF: 5)
    753c:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    7540:	0308000e 	movweq	r0, #32782	; 0x800e
    7544:	0305011a 	movweq	r0, #20762	; 0x511a
    7548:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    754c:	050e0601 	streq	r0, [lr, #-1537]	; 0xfffff9ff
    7550:	0305241c 	movweq	r2, #21532	; 0x541c
    7554:	01063d06 	tsteq	r6, r6, lsl #26
    7558:	00050520 	andeq	r0, r5, r0, lsr #10
    755c:	06030402 	streq	r0, [r3], -r2, lsl #8
    7560:	00190567 	andseq	r0, r9, r7, ror #10
    7564:	06030402 	streq	r0, [r3], -r2, lsl #8
    7568:	00170501 	andseq	r0, r7, r1, lsl #10
    756c:	20030402 	andcs	r0, r3, r2, lsl #8
    7570:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7574:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    7578:	04020003 	streq	r0, [r2], #-3
    757c:	32061f03 	andcc	r1, r6, #3, 30
    7580:	14060105 	strne	r0, [r6], #-261	; 0xfffffefb
    7584:	022c0305 	eoreq	r0, ip, #335544320	; 0x14000000
    7588:	01010007 	tsteq	r1, r7
    758c:	000000df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    7590:	00d90003 	sbcseq	r0, r9, r3
    7594:	01020000 	mrseq	r0, (UNDEF: 2)
    7598:	000d0efb 	strdeq	r0, [sp], -fp
    759c:	01010101 	tsteq	r1, r1, lsl #2
    75a0:	01000000 	mrseq	r0, (UNDEF: 0)
    75a4:	2f010000 	svccs	0x00010000
    75a8:	2f727375 	svccs	0x00727375
    75ac:	2f62696c 	svccs	0x0062696c
    75b0:	2f636367 	svccs	0x00636367
    75b4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    75b8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    75bc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    75c0:	2e382f69 	cdpcs	15, 3, cr2, cr8, cr9, {3}
    75c4:	2f312e33 	svccs	0x00312e33
    75c8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    75cc:	00656475 	rsbeq	r6, r5, r5, ror r4
    75d0:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    75d4:	6e2f646c 	cdpvs	4, 2, cr6, cr15, cr12, {3}
    75d8:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    75dc:	476b2d62 	strbmi	r2, [fp, -r2, ror #26]!
    75e0:	45777667 	ldrbmi	r7, [r7, #-1639]!	; 0xfffff999
    75e4:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    75e8:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
    75ec:	2e332e33 	mrccs	14, 1, r2, cr3, cr3, {1}
    75f0:	656e2f30 	strbvs	r2, [lr, #-3888]!	; 0xfffff0d0
    75f4:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    75f8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    75fc:	6e692f63 	cdpvs	15, 6, cr2, cr9, cr3, {3}
    7600:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7604:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    7608:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    760c:	2f2e2e2f 	svccs	0x002e2e2f
    7610:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7614:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7618:	2f2e2e2f 	svccs	0x002e2e2f
    761c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7620:	656e2f2e 	strbvs	r2, [lr, #-3886]!	; 0xfffff0d2
    7624:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    7628:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    762c:	65722f63 	ldrbvs	r2, [r2, #-3939]!	; 0xfffff09d
    7630:	00746e65 	rsbseq	r6, r4, r5, ror #28
    7634:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    7638:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    763c:	00010068 	andeq	r0, r1, r8, rrx
    7640:	79745f00 	ldmdbvc	r4!, {r8, r9, sl, fp, ip, lr}^
    7644:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7648:	00020068 	andeq	r0, r2, r8, rrx
    764c:	65657200 	strbvs	r7, [r5, #-512]!	; 0xfffffe00
    7650:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    7654:	00000200 	andeq	r0, r0, r0, lsl #4
    7658:	6b636f6c 	blvs	18e3410 <_Min_Stack_Size+0x18e3010>
    765c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    7660:	6d690000 	stclvs	0, cr0, [r9, #-0]
    7664:	65727570 	ldrbvs	r7, [r2, #-1392]!	; 0xfffffa90
    7668:	0300632e 	movweq	r6, #814	; 0x32e
    766c:	dd000000 	stcle	0, cr0, [r0, #-0]
    7670:	03000001 	movweq	r0, #1
    7674:	00012a00 	andeq	r2, r1, r0, lsl #20
    7678:	fb010200 	blx	47e82 <_Min_Stack_Size+0x47a82>
    767c:	01000d0e 	tsteq	r0, lr, lsl #26
    7680:	00010101 	andeq	r0, r1, r1, lsl #2
    7684:	00010000 	andeq	r0, r1, r0
    7688:	2e2e0100 	sufcse	f0, f6, f0
    768c:	2f2e2e2f 	svccs	0x002e2e2f
    7690:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7694:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7698:	2f2e2e2f 	svccs	0x002e2e2f
    769c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    76a0:	656e2f2e 	strbvs	r2, [lr, #-3886]!	; 0xfffff0d2
    76a4:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    76a8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    76ac:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    76b0:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    76b4:	73752f00 	cmnvc	r5, #0, 30
    76b8:	696c2f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    76bc:	63672f62 	cmnvs	r7, #392	; 0x188
    76c0:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    76c4:	6f6e2d6d 	svcvs	0x006e2d6d
    76c8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    76cc:	2f696261 	svccs	0x00696261
    76d0:	2e332e38 	mrccs	14, 1, r2, cr3, cr8, {1}
    76d4:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    76d8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    76dc:	622f0065 	eorvs	r0, pc, #101	; 0x65
    76e0:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    76e4:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    76e8:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
    76ec:	7667476b 	strbtvc	r4, [r7], -fp, ror #14
    76f0:	6e2f4577 	mcrvs	5, 1, r4, cr15, cr7, {3}
    76f4:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    76f8:	2e332d62 	cdpcs	13, 3, cr2, cr3, cr2, {3}
    76fc:	2f302e33 	svccs	0x00302e33
    7700:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    7704:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 7568 <_Min_Stack_Size+0x7168>
    7708:	2f636269 	svccs	0x00636269
    770c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    7710:	2f656475 	svccs	0x00656475
    7714:	00737973 	rsbseq	r7, r3, r3, ror r9
    7718:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    771c:	6e2f646c 	cdpvs	4, 2, cr6, cr15, cr12, {3}
    7720:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    7724:	476b2d62 	strbmi	r2, [fp, -r2, ror #26]!
    7728:	45777667 	ldrbmi	r7, [r7, #-1639]!	; 0xfffff999
    772c:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    7730:	2d62696c 			; <UNDEFINED> instruction: 0x2d62696c
    7734:	2e332e33 	mrccs	14, 1, r2, cr3, cr3, {1}
    7738:	656e2f30 	strbvs	r2, [lr, #-3888]!	; 0xfffff0d0
    773c:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    7740:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    7744:	6e692f63 	cdpvs	15, 6, cr2, cr9, cr3, {3}
    7748:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    774c:	5f000065 	svcpl	0x00000065
    7750:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
    7754:	2e746978 			; <UNDEFINED> instruction: 0x2e746978
    7758:	00010063 	andeq	r0, r1, r3, rrx
    775c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    7760:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    7764:	00020068 	andeq	r0, r2, r8, rrx
    7768:	79745f00 	ldmdbvc	r4!, {r8, r9, sl, fp, ip, lr}^
    776c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    7770:	00030068 	andeq	r0, r3, r8, rrx
    7774:	65657200 	strbvs	r7, [r5, #-512]!	; 0xfffffe00
    7778:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    777c:	00000300 	andeq	r0, r0, r0, lsl #6
    7780:	6b636f6c 	blvs	18e3538 <_Min_Stack_Size+0x18e3138>
    7784:	0300682e 	movweq	r6, #2094	; 0x82e
    7788:	74730000 	ldrbtvc	r0, [r3], #-0
    778c:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    7790:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    7794:	74610000 	strbtvc	r0, [r1], #-0
    7798:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
    779c:	0100682e 	tsteq	r0, lr, lsr #16
    77a0:	05000000 	streq	r0, [r0, #-0]
    77a4:	02050001 	andeq	r0, r5, #1
    77a8:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    77ac:	0100c703 	tsteq	r0, r3, lsl #14
    77b0:	13130305 	tstne	r3, #335544320	; 0x14000000
    77b4:	01051515 	tsteq	r5, r5, lsl r5
    77b8:	01780306 	cmneq	r8, r6, lsl #6
    77bc:	05280705 	streq	r0, [r8, #-1797]!	; 0xfffff8fb
    77c0:	03052e05 	movweq	r2, #24069	; 0x5e05
    77c4:	06052f06 	streq	r2, [r5], -r6, lsl #30
    77c8:	03050106 	movweq	r0, #20742	; 0x5106
    77cc:	20090306 	andcs	r0, r9, r6, lsl #6
    77d0:	01060805 	tsteq	r6, r5, lsl #16
    77d4:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    77d8:	1c030603 	stcne	6, cr0, [r3], {3}
    77dc:	0606052e 	streq	r0, [r6], -lr, lsr #10
    77e0:	06030501 	streq	r0, [r3], -r1, lsl #10
    77e4:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    77e8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    77ec:	16052012 			; <UNDEFINED> instruction: 0x16052012
    77f0:	0603052e 	streq	r0, [r3], -lr, lsr #10
    77f4:	0a051430 	beq	14c8bc <_Min_Stack_Size+0x14c4bc>
    77f8:	01050106 	tsteq	r5, r6, lsl #2
    77fc:	07052021 	streq	r2, [r5, -r1, lsr #32]
    7800:	20730306 	rsbscs	r0, r3, r6, lsl #6
    7804:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    7808:	1f1e052f 	svcne	0x001e052f
    780c:	2f060705 	svccs	0x00060705
    7810:	01061c05 	tsteq	r6, r5, lsl #24
    7814:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    7818:	1605300a 	strne	r3, [r5], -sl
    781c:	0607051e 			; <UNDEFINED> instruction: 0x0607051e
    7820:	0622054b 	strteq	r0, [r2], -fp, asr #10
    7824:	06070501 	streq	r0, [r7], -r1, lsl #10
    7828:	060a052f 	streq	r0, [sl], -pc, lsr #10
    782c:	06020501 	streq	r0, [r2], -r1, lsl #10
    7830:	06100521 	ldreq	r0, [r0], -r1, lsr #10
    7834:	053c2e01 	ldreq	r2, [ip, #-3585]!	; 0xfffff1ff
    7838:	bb030607 	bllt	c905c <_Min_Stack_Size+0xc8c5c>
    783c:	1a05207f 	bne	14fa40 <_Min_Stack_Size+0x14f640>
    7840:	16050106 	strne	r0, [r5], -r6, lsl #2
    7844:	030e052e 	movweq	r0, #58670	; 0xe52e
    7848:	022e3c0d 	eoreq	r3, lr, #3328	; 0xd00
    784c:	01010004 	tsteq	r1, r4
    7850:	00000234 	andeq	r0, r0, r4, lsr r2
    7854:	01230003 			; <UNDEFINED> instruction: 0x01230003
    7858:	01020000 	mrseq	r0, (UNDEF: 2)
    785c:	000d0efb 	strdeq	r0, [sp], -fp
    7860:	01010101 	tsteq	r1, r1, lsl #2
    7864:	01000000 	mrseq	r0, (UNDEF: 0)
    7868:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    786c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    7870:	2f2e2e2f 	svccs	0x002e2e2f
    7874:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    7878:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    787c:	2f2e2e2f 	svccs	0x002e2e2f
    7880:	6e2f2e2e 	cdpvs	14, 2, cr2, cr15, cr14, {1}
    7884:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    7888:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    788c:	732f6362 			; <UNDEFINED> instruction: 0x732f6362
    7890:	696c6474 	stmdbvs	ip!, {r2, r4, r5, r6, sl, sp, lr}^
    7894:	752f0062 	strvc	r0, [pc, #-98]!	; 783a <_Min_Stack_Size+0x743a>
    7898:	6c2f7273 	sfmvs	f7, 4, [pc], #-460	; 76d4 <_Min_Stack_Size+0x72d4>
    789c:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    78a0:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    78a4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    78a8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    78ac:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    78b0:	332e382f 			; <UNDEFINED> instruction: 0x332e382f
    78b4:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
    78b8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    78bc:	2f006564 	svccs	0x00006564
    78c0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    78c4:	656e2f64 	strbvs	r2, [lr, #-3940]!	; 0xfffff09c
    78c8:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    78cc:	67476b2d 	strbvs	r6, [r7, -sp, lsr #22]
    78d0:	2f457776 	svccs	0x00457776
    78d4:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    78d8:	332d6269 			; <UNDEFINED> instruction: 0x332d6269
    78dc:	302e332e 	eorcc	r3, lr, lr, lsr #6
    78e0:	77656e2f 	strbvc	r6, [r5, -pc, lsr #28]!
    78e4:	2f62696c 	svccs	0x0062696c
    78e8:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    78ec:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    78f0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    78f4:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    78f8:	75622f00 	strbvc	r2, [r2, #-3840]!	; 0xfffff100
    78fc:	2f646c69 	svccs	0x00646c69
    7900:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    7904:	6b2d6269 	blvs	b602b0 <_Min_Stack_Size+0xb5feb0>
    7908:	77766747 	ldrbvc	r6, [r6, -r7, asr #14]!
    790c:	656e2f45 	strbvs	r2, [lr, #-3909]!	; 0xfffff0bb
    7910:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    7914:	332e332d 			; <UNDEFINED> instruction: 0x332e332d
    7918:	6e2f302e 	cdpvs	0, 2, cr3, cr15, cr14, {1}
    791c:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    7920:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    7924:	692f6362 	stmdbvs	pc!, {r1, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
    7928:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    792c:	00006564 	andeq	r6, r0, r4, ror #10
    7930:	61635f5f 	cmnvs	r3, pc, asr pc
    7934:	615f6c6c 	cmpvs	pc, ip, ror #24
    7938:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    793c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    7940:	73000001 	movwvc	r0, #1
    7944:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    7948:	00682e66 	rsbeq	r2, r8, r6, ror #28
    794c:	5f000002 	svcpl	0x00000002
    7950:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    7954:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7958:	72000003 	andvc	r0, r0, #3
    795c:	746e6565 	strbtvc	r6, [lr], #-1381	; 0xfffffa9b
    7960:	0300682e 	movweq	r6, #2094	; 0x82e
    7964:	6f6c0000 	svcvs	0x006c0000
    7968:	682e6b63 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    796c:	00000300 	andeq	r0, r0, r0, lsl #6
    7970:	6c647473 	cfstrdvs	mvd7, [r4], #-460	; 0xfffffe34
    7974:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
    7978:	00000400 	andeq	r0, r0, r0, lsl #8
    797c:	00010500 	andeq	r0, r1, r0, lsl #10
    7980:	3e240205 	cdpcc	2, 2, cr0, cr4, cr5, {0}
    7984:	31030800 	tstcc	r3, r0, lsl #16
    7988:	13030501 	movwne	r0, #13569	; 0x3501
    798c:	01060605 	tsteq	r6, r5, lsl #12
    7990:	30060505 	andcc	r0, r6, r5, lsl #10
    7994:	06010513 			; <UNDEFINED> instruction: 0x06010513
    7998:	00050242 	andeq	r0, r5, r2, asr #4
    799c:	01050101 	tsteq	r5, r1, lsl #2
    79a0:	00020500 	andeq	r0, r2, r0, lsl #10
    79a4:	03000000 	movweq	r0, #0
    79a8:	060100c6 	streq	r0, [r1], -r6, asr #1
    79ac:	03070501 	movweq	r0, #29953	; 0x7501
    79b0:	01054a0f 	tsteq	r5, pc, lsl #20
    79b4:	052e7103 	streq	r7, [lr, #-259]!	; 0xfffffefd
    79b8:	2e280311 	mcrcs	3, 1, r0, cr8, cr1, {0}
    79bc:	0603052e 	streq	r0, [r3], -lr, lsr #10
    79c0:	13015903 	movwne	r5, #6403	; 0x1903
    79c4:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    79c8:	05051716 	streq	r1, [r5, #-1814]	; 0xfffff8ea
    79cc:	03050106 	movweq	r0, #20742	; 0x5106
    79d0:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    79d4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    79d8:	14250607 	strtne	r0, [r5], #-1543	; 0xfffff9f9
    79dc:	01061105 	tsteq	r6, r5, lsl #2
    79e0:	20200705 	eorcs	r0, r0, r5, lsl #14
    79e4:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    79e8:	141e0604 	ldrne	r0, [lr], #-1540	; 0xfffff9fc
    79ec:	06070515 			; <UNDEFINED> instruction: 0x06070515
    79f0:	00140501 	andseq	r0, r4, r1, lsl #10
    79f4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    79f8:	02040200 	andeq	r0, r4, #0, 4
    79fc:	0326054a 			; <UNDEFINED> instruction: 0x0326054a
    7a00:	07050179 	smlsdxeq	r5, r9, r1, r0
    7a04:	03010520 	movweq	r0, #5408	; 0x1520
    7a08:	054a00c2 	strbeq	r0, [sl, #-194]	; 0xffffff3e
    7a0c:	4a030604 	bmi	c9224 <_Min_Stack_Size+0xc8e24>
    7a10:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    7a14:	1f070513 	svcne	0x00070513
    7a18:	21060405 	tstcs	r6, r5, lsl #8
    7a1c:	01061505 	tsteq	r6, r5, lsl #10
    7a20:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    7a24:	05210606 	streq	r0, [r1, #-1542]!	; 0xfffff9fa
    7a28:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7a2c:	05300606 	ldreq	r0, [r0, #-1542]!	; 0xfffff9fa
    7a30:	11051504 	tstne	r5, r4, lsl #10
    7a34:	07050f06 	streq	r0, [r5, -r6, lsl #30]
    7a38:	06040531 			; <UNDEFINED> instruction: 0x06040531
    7a3c:	06210531 			; <UNDEFINED> instruction: 0x06210531
    7a40:	2b080515 	blcs	208e9c <_Min_Stack_Size+0x208a9c>
    7a44:	31060405 	tstcc	r6, r5, lsl #8
    7a48:	03060605 	movweq	r0, #26117	; 0x6605
    7a4c:	0e05016b 	adfeqsz	f0, f5, #3.0
    7a50:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    7a54:	053d0606 	ldreq	r0, [sp, #-1542]!	; 0xfffff9fa
    7a58:	20090304 	andcs	r0, r9, r4, lsl #6
    7a5c:	01060705 	tsteq	r6, r5, lsl #14
    7a60:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    7a64:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    7a68:	78030609 	stmdavc	r3, {r0, r3, r9, sl}
    7a6c:	060c0558 			; <UNDEFINED> instruction: 0x060c0558
    7a70:	06060501 	streq	r0, [r6], -r1, lsl #10
    7a74:	06070575 			; <UNDEFINED> instruction: 0x06070575
    7a78:	06052e01 	streq	r2, [r5], -r1, lsl #28
    7a7c:	07052206 	streq	r2, [r5, -r6, lsl #4]
    7a80:	022e0106 	eoreq	r0, lr, #-2147483647	; 0x80000001
    7a84:	01010003 	tsteq	r1, r3

Disassembly of section .debug_str:

00000000 <.debug_str>:
{
       0:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
}
       4:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
       8:	50410074 	subpl	r0, r1, r4, ror r0
  return ch;
       c:	504c3142 	subpl	r3, ip, r2, asr #2
      10:	00524e45 	subseq	r4, r2, r5, asr #28
      14:	5f4c4148 	svcpl	0x004c4148
      18:	6b636954 	blvs	18da570 <_Min_Stack_Size+0x18da170>
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
      1c:	71657246 	cmnvc	r5, r6, asr #4
      20:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
      24:	00666544 	rsbeq	r6, r6, r4, asr #10
      28:	46735f5f 	uhsaxmi	r5, r3, pc	; <UNPREDICTABLE>
      2c:	00454c49 	subeq	r4, r5, r9, asr #24
  return ret;
      30:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
}
      34:	00383464 	eorseq	r3, r8, r4, ror #8
      38:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
      3c:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
      40:	655f0033 	ldrbvs	r0, [pc, #-51]	; 15 <_Min_Heap_Size-0x1eb>
    list->node_count = 0;
      44:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
      48:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
}
      4c:	42504100 	subsmi	r4, r0, #0, 2
      50:	4b4c4331 	blmi	1310d1c <_Min_Stack_Size+0x131091c>
      54:	69766944 	ldmdbvs	r6!, {r2, r6, r8, fp, sp, lr}^
      58:	00726564 	rsbseq	r6, r2, r4, ror #10
      5c:	5f4c4148 	svcpl	0x004c4148
  HARDFAULT_HANDLING_ASM();
      60:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
      64:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
      68:	74616474 	strbtvc	r6, [r1], #-1140	; 0xfffffb8c
      6c:	72655f65 	rsbvc	r5, r5, #404	; 0x194
      70:	4c500072 	mrrcmi	0, 7, r0, r0, cr2	; <UNPREDICTABLE>
}
      74:	50004d4c 	andpl	r4, r0, ip, asr #26
      78:	004e4c4c 	subeq	r4, lr, ip, asr #24
      7c:	7263775f 	rsbvc	r7, r3, #24903680	; 0x17c0000
      80:	626d6f74 	rsbvs	r6, sp, #116, 30	; 0x1d0
      84:	6174735f 	cmnvs	r4, pc, asr r3
  trigger_irq();
      88:	50006574 	andpl	r6, r0, r4, ror r5
}
      8c:	00504c4c 	subseq	r4, r0, ip, asr #24
      90:	514c4c50 	cmppl	ip, r0, asr ip
      94:	65687300 	strbvs	r7, [r8, #-768]!	; 0xfffffd00
      98:	685f6c6c 	ldmdavs	pc, {r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
      9c:	00706c65 	rsbseq	r6, r0, r5, ror #24
    Error_Handler();
      a0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
}
      a4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
      a8:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
      ac:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      b0:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
      SystemCoreClock = HSI_VALUE;
      b4:	5f00746e 	svcpl	0x0000746e
      break;
      b8:	7366626c 	cmnvc	r6, #108, 4	; 0xc0000006
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
      bc:	00657a69 	rsbeq	r7, r5, r9, ror #20
      c0:	6f6c5f5f 	svcvs	0x006c5f5f
      c4:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
      c8:	4800745f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
  SystemCoreClock >>= tmp;
      cc:	74534953 	ldrbvc	r4, [r3], #-2387	; 0xfffff6ad
      d0:	00657461 	rsbeq	r7, r5, r1, ror #8
      d4:	5f4d5449 	svcpl	0x004d5449
}
      d8:	75427852 	strbvc	r7, [r2, #-2130]	; 0xfffff7ae
      dc:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
      e0:	626d5f00 	rsbvs	r5, sp, #0, 30
      e4:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
      e8:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
      ec:	00657461 	rsbeq	r7, r5, r1, ror #8
      f0:	31424841 	cmpcc	r2, r1, asr #16
      f4:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
        EXTI->FTSR &= ~((uint32_t)iocurrent);
      f8:	775f0052 			; <UNDEFINED> instruction: 0x775f0052
      fc:	6d6f7463 	cfstrdvs	mvd7, [pc, #-396]!	; ffffff78 <__StackLimit+0xdffdff78>
     100:	74735f62 	ldrbtvc	r5, [r3], #-3938	; 0xfffff09e
        tmp = 0x0FU << (4U * (position & 0x03U));
     104:	00657461 	rsbeq	r7, r5, r1, ror #8
     108:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     10c:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
     110:	43435200 	movtmi	r5, #12800	; 0x3200
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     114:	63734f5f 	cmnvs	r3, #380	; 0x17c
     118:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     11c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     120:	00666544 	rsbeq	r6, r6, r4, asr #10
     124:	31424841 	cmpcc	r2, r1, asr #16
     128:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     12c:	62755f00 	rsbsvs	r5, r5, #0, 30
     130:	5f006675 	svcpl	0x00006675
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
     134:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
     138:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 140 <_Min_Heap_Size-0xc0>
     13c:	6f685f6d 	svcvs	0x00685f6d
     140:	5f007275 	svcpl	0x00007275
     144:	0066735f 	rsbeq	r7, r6, pc, asr r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
     148:	5f6e6f5f 	svcpl	0x006e6f5f
     14c:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
     150:	6772615f 			; <UNDEFINED> instruction: 0x6772615f
     154:	57500073 			; <UNDEFINED> instruction: 0x57500073
     158:	79545f52 	ldmdbvc	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
     15c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     160:	6d740066 	ldclvs	0, cr0, [r4, #-408]!	; 0xfffffe68
     164:	67657270 			; <UNDEFINED> instruction: 0x67657270
     168:	6f635f00 	svcvs	0x00635f00
     16c:	65696b6f 	strbvs	r6, [r9, #-2927]!	; 0xfffff491
     170:	735f5f00 	cmpvc	pc, #0, 30
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
     174:	65756c67 	ldrbvs	r6, [r5, #-3175]!	; 0xfffff399
     178:	42504100 	subsmi	r4, r0, #0, 2
     17c:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
     180:	534c0052 	movtpl	r0, #49234	; 0xc052
     184:	61745349 	cmnvs	r4, r9, asr #6
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
     188:	5f006574 	svcpl	0x00006574
     18c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
     190:	695f0073 	ldmdbvs	pc, {r0, r1, r4, r5, r6}^	; <UNPREDICTABLE>
     194:	78635f73 	stmdavc	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     198:	775f0061 	ldrbvc	r0, [pc, -r1, rrx]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
     19c:	5f007364 	svcpl	0x00007364
     1a0:	4c49465f 	mcrrmi	6, 5, r4, r9, cr15
     1a4:	725f0045 	subsvc	r0, pc, #69	; 0x45
     1a8:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
     1ac:	006b5f74 	rsbeq	r5, fp, r4, ror pc
     1b0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
  for(position = 0U; position < GPIO_NUMBER; position++)
     1b4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
     1b8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
     1bc:	6d2f0074 	stcvs	0, cr0, [pc, #-464]!	; fffffff4 <__StackLimit+0xdffdfff4>
}
     1c0:	642f746e 	strtvs	r7, [pc], #-1134	; 1c8 <_Min_Heap_Size-0x38>
     1c4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     1c8:	2f736f2f 	svccs	0x00736f2f
     1cc:	6f796f74 	svcvs	0x00796f74
     1d0:	72732f73 	rsbsvc	r2, r3, #460	; 0x1cc
     1d4:	6e672f63 	cdpvs	15, 6, cr2, cr7, cr3, {3}
     1d8:	6c632f75 	stclvs	15, cr2, [r3], #-468	; 0xfffffe2c
     1dc:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
     1e0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     1e4:	72612f32 	rsbvc	r2, r1, #50, 30	; 0xc8
     1e8:	73615f6d 	cmnvc	r1, #436	; 0x1b4
     1ec:	616d2f6d 	cmnvs	sp, sp, ror #30
     1f0:	702f6e69 	eorvc	r6, pc, r9, ror #28
                res += 1;
     1f4:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
     1f8:	732f7463 			; <UNDEFINED> instruction: 0x732f7463
            break;
     1fc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
            _putchar('\n');
     200:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
            res += 1;
     204:	74654e2f 	strbtvc	r4, [r5], #-3631	; 0xfffff1d1
     208:	6e697564 	cdpvs	5, 6, cr7, cr9, cr4, {3}
            _putchar('\r');
     20c:	756c506f 	strbvc	r5, [ip, #-111]!	; 0xffffff91
     210:	472f3273 			; <UNDEFINED> instruction: 0x472f3273
            res += 1;
     214:	50004343 	andpl	r4, r0, r3, asr #6
            break;
     218:	74534c4c 	ldrbvc	r4, [r3], #-3148	; 0xfffff3b4
            _putchar(*str);
     21c:	00657461 	rsbeq	r7, r5, r1, ror #8
     220:	43495348 	movtmi	r5, #37704	; 0x9348
            res += 1;
     224:	62696c61 	rsbvs	r6, r9, #24832	; 0x6100
     228:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
            break;
     22c:	61566e6f 	cmpvs	r6, pc, ror #28
        str++;
     230:	0065756c 	rsbeq	r7, r5, ip, ror #10
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
     234:	73626d5f 	cmnvc	r2, #6080	; 0x17c0
     238:	776f7472 			; <UNDEFINED> instruction: 0x776f7472
     23c:	735f7363 	cmpvc	pc, #-1946157055	; 0x8c000001
}
     240:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     244:	4c4c5000 	marmi	acc0, r5, ip
     248:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     24c:	43435200 	movtmi	r5, #12800	; 0x3200
     250:	63734f5f 	cmnvs	r3, #380	; 0x17c
            hdma->XferCpltCallback(hdma);
     254:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     258:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     25c:	5f007463 	svcpl	0x00007463
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
     260:	6c72626d 	lfmvs	f6, 2, [r2], #-436	; 0xfffffe4c
     264:	735f6e65 	cmpvc	pc, #1616	; 0x650
     268:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     26c:	6e665f00 	cdpvs	15, 6, cr5, cr6, cr0, {0}
          hdma->Instance->CR  &= ~(DMA_IT_TC);
     270:	73677261 	cmnvc	r7, #268435462	; 0x10000006
     274:	43435200 	movtmi	r5, #12800	; 0x3200
     278:	6b6c435f 	blvs	1b10ffc <_Min_Stack_Size+0x1b10bfc>
     27c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
          __HAL_UNLOCK(hdma);
     280:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     284:	00666544 	rsbeq	r6, r6, r4, asr #10
          hdma->State = HAL_DMA_STATE_READY;
     288:	736e665f 	cmnvc	lr, #99614720	; 0x5f00000
     28c:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
        if(hdma->XferCpltCallback != NULL)
     290:	5f006e67 	svcpl	0x00006e67
     294:	65647473 	strbvs	r7, [r4, #-1139]!	; 0xfffffb8d
          hdma->XferCpltCallback(hdma);
     298:	5f007272 	svcpl	0x00007272
     29c:	69676942 	stmdbvs	r7!, {r1, r6, r8, fp, sp, lr}^
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
     2a0:	5f00746e 	svcpl	0x0000746e
     2a4:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
     2a8:	69735f61 	ldmdbvs	r3!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
     2ac:	61676e67 	cmnvs	r7, r7, ror #28
     2b0:	5041006d 	subpl	r0, r1, sp, rrx
      hdma->State = HAL_DMA_STATE_ABORT;
     2b4:	65725042 	ldrbvs	r5, [r2, #-66]!	; 0xffffffbe
     2b8:	61546373 	cmpvs	r4, r3, ror r3
      __HAL_DMA_DISABLE(hdma);
     2bc:	00656c62 	rsbeq	r6, r5, r2, ror #24
     2c0:	616d6e5f 	cmnvs	sp, pc, asr lr
     2c4:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
     2c8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
        if (++count > timeout)
     2cc:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     2d0:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     2d4:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 2dc <_Min_Heap_Size+0xdc>
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
     2d8:	5348006d 	movtpl	r0, #32877	; 0x806d
     2dc:	61745345 	cmnvs	r4, r5, asr #6
     2e0:	5f006574 	svcpl	0x00006574
     2e4:	7473626d 	ldrbtvc	r6, [r3], #-621	; 0xfffffd93
      __HAL_UNLOCK(hdma);
     2e8:	00657461 	rsbeq	r7, r5, r1, ror #8
     2ec:	63775f5f 	cmnvs	r7, #380	; 0x17c
      hdma->State = HAL_DMA_STATE_READY;
     2f0:	75006268 	strvc	r6, [r0, #-616]	; 0xfffffd98
     2f4:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    if(hdma->XferErrorCallback != NULL)
     2f8:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
     2fc:	77750071 			; <UNDEFINED> instruction: 0x77750071
      hdma->XferErrorCallback(hdma);
     300:	6b636954 	blvs	18da858 <_Min_Stack_Size+0x18da458>
     304:	76635f00 	strbtvc	r5, [r3], -r0, lsl #30
     308:	6e656c74 	mcrvs	12, 3, r6, cr5, cr4, {3}
}
     30c:	69665f00 	stmdbvs	r6!, {r8, r9, sl, fp, ip, lr}^
     310:	2e00656c 	cfsh32cs	mvfx6, mvfx0, #60
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
     314:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     318:	2f2e2e2f 	svccs	0x002e2e2f
     31c:	702f2e2e 	eorvc	r2, pc, lr, lsr #28
    UART_Transmit_IT(huart);
     320:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    return;
     324:	732f7463 			; <UNDEFINED> instruction: 0x732f7463
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
     328:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     32c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     330:	74654e2f 	strbtvc	r4, [r5], #-3631	; 0xfffff1d1
     334:	6e697564 	cdpvs	5, 6, cr7, cr9, cr4, {3}
     338:	756c506f 	strbvc	r5, [ip, #-111]!	; 0xffffff91
    UART_EndTransmit_IT(huart);
     33c:	732f3273 			; <UNDEFINED> instruction: 0x732f3273
    return;
     340:	6d2f6372 	stcvs	3, cr6, [pc, #-456]!	; 180 <_Min_Heap_Size-0x80>
    return;
     344:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
      return;
     348:	43520063 	cmpmi	r2, #99	; 0x63
      return;
     34c:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
}
     350:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     354:	41480066 	cmpmi	r8, r6, rrx
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     358:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     35c:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
      tickstart = HAL_GetTick();
     360:	5f514552 	svcpl	0x00514552
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     364:	5a484b31 	bpl	1213030 <_Min_Stack_Size+0x1212c30>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     368:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     36c:	004b4f5f 	subeq	r4, fp, pc, asr pc
     370:	6f696e5f 	svcvs	0x00696e5f
     374:	73007362 	movwvc	r7, #866	; 0x362
          return HAL_TIMEOUT;
     378:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     37c:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     380:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     384:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
    if(pwrclkchanged == SET)
     388:	615f0074 	cmpvs	pc, r4, ror r0	; <UNPREDICTABLE>
     38c:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
      __HAL_RCC_PWR_CLK_DISABLE();
     390:	50003074 	andpl	r3, r0, r4, ror r0
     394:	32494c4c 	subcc	r4, r9, #76, 24	; 0x4c00
     398:	47464353 	smlsldmi	r4, r6, r3, r3
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     39c:	735f0052 	cmpvc	pc, #82	; 0x52
     3a0:	616e6769 	cmnvs	lr, r9, ror #14
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     3a4:	75625f6c 	strbvc	r5, [r2, #-3948]!	; 0xfffff094
     3a8:	615f0066 	cmpvs	pc, r6, rrx
     3ac:	69746373 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     3b0:	625f656d 	subsvs	r6, pc, #457179136	; 0x1b400000
     3b4:	41006675 	tstmi	r0, r5, ror r6
        __HAL_RCC_PLL_DISABLE();
     3b8:	52334248 	eorspl	r4, r3, #72, 4	; 0x80000004
     3bc:	00525453 	subseq	r5, r2, r3, asr r4
        tickstart = HAL_GetTick();
     3c0:	69547775 	ldmdbvs	r4, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3c4:	72506b63 	subsvc	r6, r0, #101376	; 0x18c00
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3c8:	4f006f69 	svcmi	0x00006f69
     3cc:	6c696373 	stclvs	3, cr6, [r9], #-460	; 0xfffffe34
     3d0:	6f74616c 	svcvs	0x0074616c
            return HAL_TIMEOUT;
     3d4:	70795472 	rsbsvc	r5, r9, r2, ror r4
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3d8:	5f5f0065 	svcpl	0x005f0065
     3dc:	00686377 	rsbeq	r6, r8, r7, ror r3
     3e0:	746e6977 	strbtvc	r6, [lr], #-2423	; 0xfffff689
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     3e4:	4100745f 	tstmi	r0, pc, asr r4
     3e8:	4c324250 	lfmmi	f4, 4, [r2], #-320	; 0xfffffec0
     3ec:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     3f0:	6f6c5f00 	svcvs	0x006c5f00
     3f4:	5f006b63 	svcpl	0x00006b63
     3f8:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
     3fc:	65725f00 	ldrbvs	r5, [r2, #-3840]!	; 0xfffff100
     400:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
     404:	42484100 	submi	r4, r8, #0, 2
     408:	444b4c43 	strbmi	r4, [fp], #-3139	; 0xfffff3bd
     40c:	64697669 	strbtvs	r7, [r9], #-1641	; 0xfffff997
        __HAL_RCC_PLL_ENABLE();
     410:	45007265 	strmi	r7, [r0, #-613]	; 0xfffffd9b
        tickstart = HAL_GetTick();
     414:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
     418:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     41c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     420:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 428 <_Min_Stack_Size+0x28>
     424:	65795f6d 	ldrbvs	r5, [r9, #-3949]!	; 0xfffff093
     428:	5f007261 	svcpl	0x00007261
            return HAL_TIMEOUT;
     42c:	73756e75 	cmnvc	r5, #1872	; 0x750
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     430:	725f6465 	subsvc	r6, pc, #1694498816	; 0x65000000
     434:	00646e61 	rsbeq	r6, r4, r1, ror #28
     438:	66666f5f 	uqsaxvs	r6, r6, pc	; <UNPREDICTABLE>
        __HAL_RCC_PLL_DISABLE();
     43c:	00746573 	rsbseq	r6, r4, r3, ror r5
     440:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
        tickstart = HAL_GetTick();
     444:	47006674 	smlsdxmi	r0, r4, r6, r6
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     448:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     44c:	38203731 	stmdacc	r0!, {r0, r4, r5, r8, r9, sl, ip, sp}
     450:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
     454:	31303220 	teqcc	r0, r0, lsr #4
            return HAL_TIMEOUT;
     458:	30373039 	eorscc	r3, r7, r9, lsr r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	72282033 	eorvc	r2, r8, #51	; 0x33
     460:	61656c65 	cmnvs	r5, r5, ror #24
     464:	20296573 	eorcs	r6, r9, r3, ror r5
     468:	6363675b 	cmnvs	r3, #23855104	; 0x16c0000
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     46c:	622d382d 	eorvs	r3, sp, #2949120	; 0x2d0000
     470:	636e6172 	cmnvs	lr, #-2147483620	; 0x8000001c
        return HAL_ERROR;
     474:	65722068 	ldrbvs	r2, [r2, #-104]!	; 0xffffff98
        pll_config = RCC->PLLCFGR;
     478:	69736976 	ldmdbvs	r3!, {r1, r2, r4, r5, r6, r8, fp, sp, lr}^
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     47c:	32206e6f 	eorcc	r6, r0, #1776	; 0x6f0
     480:	32303337 	eorscc	r3, r0, #-603979776	; 0xdc000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     484:	2d205d37 	stccs	13, cr5, [r0, #-220]!	; 0xffffff24
     488:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
     48c:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     490:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     494:	2d20346d 	cfstrscs	mvf3, [r0, #-436]!	; 0xfffffe4c
     498:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     49c:	692d626d 	pushvs	{r0, r2, r3, r5, r6, r9, sp, lr}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4a0:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     4a4:	6b726f77 	blvs	1c9c288 <_Min_Stack_Size+0x1c9be88>
     4a8:	6c6d2d20 	stclvs	13, cr2, [sp], #-128	; 0xffffff80
     4ac:	6c747469 	cfldrdvs	mvd7, [r4], #-420	; 0xfffffe5c
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     4b0:	6e652d65 	cdpvs	13, 6, cr2, cr5, cr5, {3}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b4:	6e616964 	vnmulvs.f16	s13, s2, s9	; <UNPREDICTABLE>
     4b8:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
     4bc:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
     4c0:	616d2d20 	cmnvs	sp, r0, lsr #26
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4c4:	613d6962 	teqvs	sp, r2, ror #18
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4c8:	73637061 	cmnvc	r3, #97	; 0x61
     4cc:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     4d0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4d4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
          return HAL_ERROR;
     4d8:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
}
     4dc:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
     4e0:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     4e4:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     4e8:	2d653776 	stclcs	7, cr3, [r5, #-472]!	; 0xfffffe28
     4ec:	672d206d 	strvs	r2, [sp, -sp, rrx]!
     4f0:	20626467 	rsbcs	r6, r2, r7, ror #8
     4f4:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
     4f8:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
     4fc:	65726666 	ldrbvs	r6, [r2, #-1638]!	; 0xfffff99a
     500:	61747365 	cmnvs	r4, r5, ror #6
     504:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
     508:	662d2067 	strtvs	r2, [sp], -r7, rrx
     50c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     510:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     514:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     518:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     51c:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     520:	61746164 	cmnvs	r4, r4, ror #2
     524:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     528:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     52c:	48410073 	stmdami	r1, {r0, r1, r4, r5, r6}^
     530:	504c3242 	subpl	r3, ip, r2, asr #4
     534:	00524e45 	subseq	r4, r2, r5, asr #28
     538:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     53c:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
     540:	735f5f00 	cmpvc	pc, #0, 30
     544:	69646964 	stmdbvs	r4!, {r2, r5, r6, r8, fp, sp, lr}^
     548:	0074696e 	rsbseq	r6, r4, lr, ror #18
     54c:	5f4c4148 	svcpl	0x004c4148
     550:	4b434954 	blmi	10d2aa8 <_Min_Stack_Size+0x10d26a8>
     554:	4552465f 	ldrbmi	r4, [r2, #-1631]	; 0xfffff9a1
     558:	45445f51 	strbmi	r5, [r4, #-3921]	; 0xfffff0af
     55c:	4c554146 	ldfmie	f4, [r5], {70}	; 0x46
     560:	6f5f0054 	svcvs	0x005f0054
     564:	745f6666 	ldrbvc	r6, [pc], #-1638	; 56c <_Min_Stack_Size+0x16c>
     568:	42504100 	subsmi	r4, r0, #0, 2
     56c:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     570:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     574:	5f6c6c65 	svcpl	0x006c6c65
     578:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
     57c:	5f646e61 	svcpl	0x00646e61
     580:	775f0074 			; <UNDEFINED> instruction: 0x775f0074
     584:	74727363 	ldrbtvc	r7, [r2], #-867	; 0xfffffc9d
     588:	73626d6f 	cmnvc	r2, #7104	; 0x1bc0
     58c:	6174735f 	cmnvs	r4, pc, asr r3
     590:	53006574 	movwpl	r6, #1396	; 0x574
     594:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     598:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     59c:	6f6c4365 	svcvs	0x006c4365
     5a0:	5f006b63 	svcpl	0x00006b63
     5a4:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
     5a8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     5ac:	53455200 	movtpl	r5, #20992	; 0x5200
     5b0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     5b4:	52003044 	andpl	r3, r0, #68	; 0x44
     5b8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     5bc:	31444556 	cmpcc	r4, r6, asr r5
     5c0:	53455200 	movtpl	r5, #20992	; 0x5200
     5c4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     5c8:	5f003244 	svcpl	0x00003244
     5cc:	4b434f4c 	blmi	10d4304 <_Min_Stack_Size+0x10d3f04>
     5d0:	4345525f 	movtmi	r5, #21087	; 0x525f
     5d4:	49535255 	ldmdbmi	r3, {r0, r2, r4, r6, r9, ip, lr}^
     5d8:	545f4556 	ldrbpl	r4, [pc], #-1366	; 5e0 <_Min_Stack_Size+0x1e0>
     5dc:	53455200 	movtpl	r5, #20992	; 0x5200
     5e0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     5e4:	42003444 	andmi	r3, r0, #68, 8	; 0x44000000
     5e8:	00524344 	subseq	r4, r2, r4, asr #6
     5ec:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     5f0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     5f4:	635f0036 	cmpvs	pc, #54	; 0x36
     5f8:	75627476 	strbvc	r7, [r2, #-1142]!	; 0xfffffb8a
     5fc:	645f0066 	ldrbvs	r0, [pc], #-102	; 604 <_Min_Stack_Size+0x204>
     600:	685f6f73 	ldmdavs	pc, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     604:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     608:	43520065 	cmpmi	r2, #101	; 0x65
     60c:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
     610:	696e496b 	stmdbvs	lr!, {r0, r1, r3, r5, r6, r8, fp, lr}^
     614:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
     618:	00746375 	rsbseq	r6, r4, r5, ror r3
     61c:	77656e5f 			; <UNDEFINED> instruction: 0x77656e5f
     620:	45534c00 	ldrbmi	r4, [r3, #-3072]	; 0xfffff400
     624:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     628:	685f0065 	ldmdavs	pc, {r0, r2, r5, r6}^	; <UNPREDICTABLE>
     62c:	7272655f 	rsbsvc	r6, r2, #398458880	; 0x17c00000
     630:	5f006f6e 	svcpl	0x00006f6e
     634:	656c626d 	strbvs	r6, [ip, #-621]!	; 0xfffffd93
     638:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
     63c:	00657461 	rsbeq	r7, r5, r1, ror #8
     640:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     644:	6164795f 	cmnvs	r4, pc, asr r9
     648:	5f5f0079 	svcpl	0x005f0079
     64c:	66756273 			; <UNDEFINED> instruction: 0x66756273
     650:	6c665f00 	stclvs	15, cr5, [r6], #-0
     654:	32736761 	rsbscc	r6, r3, #25427968	; 0x1840000
     658:	42484100 	submi	r4, r8, #0, 2
     65c:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
     660:	5000524e 	andpl	r5, r0, lr, asr #4
     664:	6f534c4c 	svcvs	0x00534c4c
     668:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     66c:	626d5f00 	rsbvs	r5, sp, #0, 30
     670:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     674:	00745f65 	rsbseq	r5, r4, r5, ror #30
     678:	6e61725f 	mcrvs	2, 3, r7, cr1, cr15, {2}
     67c:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     680:	5f007478 	svcpl	0x00007478
     684:	73626f69 	cmnvc	r2, #420	; 0x1a4
     688:	6e695f00 	cdpvs	15, 6, cr5, cr9, cr0, {0}
     68c:	695f0063 	ldmdbvs	pc, {r0, r1, r5, r6}^	; <UNPREDICTABLE>
     690:	4100646e 	tstmi	r0, lr, ror #8
     694:	45324250 	ldrmi	r4, [r2, #-592]!	; 0xfffffdb0
     698:	5f00524e 	svcpl	0x0000524e
     69c:	61636f6c 	cmnvs	r3, ip, ror #30
     6a0:	4100656c 	tstmi	r0, ip, ror #10
     6a4:	45334248 	ldrmi	r4, [r3, #-584]!	; 0xfffffdb8
     6a8:	5f00524e 	svcpl	0x0000524e
     6ac:	70736e75 	rsbsvc	r6, r3, r5, ror lr
     6b0:	66696365 	strbtvs	r6, [r9], -r5, ror #6
     6b4:	5f646569 	svcpl	0x00646569
     6b8:	61636f6c 	cmnvs	r3, ip, ror #30
     6bc:	695f656c 	ldmdbvs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     6c0:	006f666e 	rsbeq	r6, pc, lr, ror #12
     6c4:	78616d5f 	stmdavc	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
     6c8:	00736477 	rsbseq	r6, r3, r7, ror r4
     6cc:	6565725f 	strbvs	r7, [r5, #-607]!	; 0xfffffda1
     6d0:	5f00746e 	svcpl	0x0000746e
     6d4:	64656573 	strbtvs	r6, [r5], #-1395	; 0xfffffa8d
     6d8:	53455200 	movtpl	r5, #20992	; 0x5200
     6dc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     6e0:	5f003544 	svcpl	0x00003544
     6e4:	756f635f 	strbvc	r6, [pc, #-863]!	; 38d <_Min_Heap_Size+0x18d>
     6e8:	5f00746e 	svcpl	0x0000746e
     6ec:	6b656573 	blvs	1959cc0 <_Min_Stack_Size+0x19598c0>
     6f0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     6f4:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     6f8:	5f00524f 	svcpl	0x0000524f
     6fc:	736f7066 	cmnvc	pc, #102	; 0x66
     700:	5f00745f 	svcpl	0x0000745f
     704:	6568735f 	strbvs	r7, [r8, #-863]!	; 0xfffffca1
     708:	635f6c6c 	cmpvs	pc, #108, 24	; 0x6c00
     70c:	616d6d6f 	cmnvs	sp, pc, ror #26
     710:	735f646e 	cmpvc	pc, #1845493760	; 0x6e000000
     714:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     718:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
     71c:	6f642067 	svcvs	0x00642067
     720:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
     724:	6c625f00 	stclvs	15, cr5, [r2], #-0
     728:	7a69736b 	bvc	1a5d4dc <_Min_Stack_Size+0x1a5d0dc>
     72c:	735f0065 	cmpvc	pc, #101	; 0x65
     730:	00657a69 	rsbeq	r7, r5, r9, ror #20
     734:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     738:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     73c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     740:	4349545f 	movtmi	r5, #37983	; 0x945f
     744:	52465f4b 	subpl	r5, r6, #300	; 0x12c
     748:	315f5145 	cmpcc	pc, r5, asr #2
     74c:	5a483030 	bpl	120c814 <_Min_Stack_Size+0x120c414>
     750:	42504100 	subsmi	r4, r0, #0, 2
     754:	4b4c4332 	blmi	1311424 <_Min_Stack_Size+0x1311024>
     758:	69766944 	ldmdbvs	r6!, {r2, r6, r8, fp, sp, lr}^
     75c:	00726564 	rsbseq	r6, r2, r4, ror #10
     760:	50424841 	subpl	r4, r2, r1, asr #16
     764:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
     768:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
     76c:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
     770:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     774:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     778:	6f435f6b 	svcvs	0x00435f6b
     77c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     780:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     784:	6b6f7472 	blvs	1bdd954 <_Min_Stack_Size+0x1bdd554>
     788:	73616c5f 	cmnvc	r1, #24320	; 0x5f00
     78c:	50410074 	subpl	r0, r1, r4, ror r0
     790:	4e453142 	dvfmism	f3, f5, f2
     794:	665f0052 			; <UNDEFINED> instruction: 0x665f0052
     798:	7079746e 	rsbsvc	r7, r9, lr, ror #8
     79c:	41007365 	tstmi	r0, r5, ror #6
     7a0:	45324248 	ldrmi	r4, [r2, #-584]!	; 0xfffffdb8
     7a4:	7500524e 	strvc	r5, [r0, #-590]	; 0xfffffdb2
     7a8:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     7ac:	2064656e 	rsbcs	r6, r4, lr, ror #10
     7b0:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     7b4:	745f5f00 	ldrbvc	r5, [pc], #-3840	; 7bc <_Min_Stack_Size+0x3bc>
     7b8:	696d5f6d 	stmdbvs	sp!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     7bc:	615f006e 	cmpvs	pc, lr, rrx
     7c0:	5f006464 	svcpl	0x00006464
     7c4:	6f4c555f 	svcvs	0x004c555f
     7c8:	5f00676e 	svcpl	0x0000676e
     7cc:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
     7d0:	695f6c61 	ldmdbvs	pc, {r0, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     7d4:	7275706d 	rsbsvc	r7, r5, #109	; 0x6d
     7d8:	74705f65 	ldrbtvc	r5, [r0], #-3941	; 0xfffff09b
     7dc:	53530072 	cmppl	r3, #114	; 0x72
     7e0:	00524743 	subseq	r4, r2, r3, asr #14
     7e4:	6c635f5f 	stclvs	15, cr5, [r3], #-380	; 0xfffffe84
     7e8:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
     7ec:	735f0070 	cmpvc	pc, #112	; 0x70
     7f0:	756f6474 	strbvc	r6, [pc, #-1140]!	; 384 <_Min_Heap_Size+0x184>
     7f4:	5f5f0074 	svcpl	0x005f0074
     7f8:	775f6d74 			; <UNDEFINED> instruction: 0x775f6d74
     7fc:	00796164 	rsbseq	r6, r9, r4, ror #2
     800:	756c675f 	strbvc	r6, [ip, #-1887]!	; 0xfffff8a1
     804:	735f0065 	cmpvc	pc, #101	; 0x65
     808:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     80c:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
     810:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     814:	366c5f00 	strbtcc	r5, [ip], -r0, lsl #30
     818:	625f6134 	subsvs	r6, pc, #52, 2
     81c:	52006675 	andpl	r6, r0, #122683392	; 0x7500000
     820:	505f4343 	subspl	r4, pc, r3, asr #6
     824:	6e494c4c 	cdpvs	12, 4, cr4, cr9, cr12, {2}
     828:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     82c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     830:	735f0066 	cmpvc	pc, #102	; 0x66
     834:	665f6769 	ldrbvs	r6, [pc], -r9, ror #14
     838:	00636e75 	rsbeq	r6, r3, r5, ror lr
     83c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     840:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     844:	41480065 	cmpmi	r8, r5, rrx
     848:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     84c:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
     850:	5f514552 	svcpl	0x00514552
     854:	5a483031 	bpl	120c920 <_Min_Stack_Size+0x120c520>
     858:	6c665f00 	stclvs	15, cr5, [r6], #-0
     85c:	5f6b636f 	svcpl	0x006b636f
     860:	5f5f0074 	svcpl	0x005f0074
     864:	6c656873 	stclvs	8, cr6, [r5], #-460	; 0xfffffe34
     868:	6f635f6c 	svcvs	0x00635f6c
     86c:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
     870:	6e655f64 	cdpvs	15, 6, cr5, cr5, cr4, {3}
     874:	6e5f0064 	cdpvs	0, 5, cr0, cr15, cr4, {3}
     878:	00667562 	rsbeq	r7, r6, r2, ror #10
     87c:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
     880:	00646573 	rsbeq	r6, r4, r3, ror r5
     884:	31424841 	cmpcc	r2, r1, asr #16
     888:	00524e45 	subseq	r4, r2, r5, asr #28
     88c:	6d745f5f 	ldclvs	15, cr5, [r4, #-380]!	; 0xfffffe84
     890:	6473695f 	ldrbtvs	r6, [r3], #-2399	; 0xfffff6a1
     894:	5f007473 	svcpl	0x00007473
     898:	61636f6c 	cmnvs	r3, ip, ror #30
     89c:	6d69746c 	cfstrdvs	mvd7, [r9, #-432]!	; 0xfffffe50
     8a0:	75625f65 	strbvc	r5, [r2, #-3941]!	; 0xfffff09b
     8a4:	635f0066 	cmpvs	pc, #102	; 0x66
     8a8:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
     8ac:	34725f00 	ldrbtcc	r5, [r2], #-3840	; 0xfffff100
     8b0:	6d5f0038 	ldclvs	0, cr0, [pc, #-224]	; 7d8 <_Min_Stack_Size+0x3d8>
     8b4:	776f7462 	strbvc	r7, [pc, -r2, ror #8]!
     8b8:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
     8bc:	00657461 	rsbeq	r7, r5, r1, ror #8
     8c0:	7335705f 	teqvc	r5, #95	; 0x5f
     8c4:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     8c8:	5f5f006e 	svcpl	0x005f006e
     8cc:	6d5f6d74 	ldclvs	13, cr6, [pc, #-464]	; 704 <_Min_Stack_Size+0x304>
     8d0:	00796164 	rsbseq	r6, r9, r4, ror #2
     8d4:	43535953 	cmpmi	r3, #1359872	; 0x14c000
     8d8:	6f534b4c 	svcvs	0x00534b4c
     8dc:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
     8e0:	2f2e2e00 	svccs	0x002e2e00
     8e4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     8e8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     8ec:	6f72702f 	svcvs	0x0072702f
     8f0:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
     8f4:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
     8f8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     8fc:	4e2f7878 	mcrmi	8, 1, r7, cr15, cr8, {3}
     900:	75647465 	strbvc	r7, [r4, #-1125]!	; 0xfffffb9b
     904:	506f6e69 	rsbpl	r6, pc, r9, ror #28
     908:	3273756c 	rsbscc	r7, r3, #108, 10	; 0x1b000000
     90c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     910:	7265732f 	rsbvc	r7, r5, #-1140850688	; 0xbc000000
     914:	2e6c6169 	powcsez	f6, f4, #1.0
     918:	41480063 	cmpmi	r8, r3, rrx
     91c:	41555f4c 	cmpmi	r5, ip, asr #30
     920:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     924:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     928:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     92c:	00666544 	rsbeq	r6, r6, r4, asr #10
     930:	61745367 	cmnvs	r4, r7, ror #6
     934:	4d006574 	cfstr32mi	mvfx6, [r0, #-464]	; 0xfffffe30
     938:	00524130 	subseq	r4, r2, r0, lsr r1
     93c:	5f414d44 	svcpl	0x00414d44
     940:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     944:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     948:	00666544 	rsbeq	r6, r6, r4, asr #10
     94c:	5f4c4148 	svcpl	0x004c4148
     950:	5f414d44 	svcpl	0x00414d44
     954:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     958:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
     95c:	4d005953 	vstrmi.16	s10, [r0, #-166]	; 0xffffff5a	; <UNPREDICTABLE>
     960:	75426d65 	strbvc	r6, [r2, #-3429]	; 0xfffff29b
     964:	00747372 	rsbseq	r7, r4, r2, ror r3
     968:	5f4c4148 	svcpl	0x004c4148
     96c:	5f414d44 	svcpl	0x00414d44
     970:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     974:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     978:	00544553 	subseq	r4, r4, r3, asr r5
     97c:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
     980:	706d6153 	rsbvc	r6, sp, r3, asr r1
     984:	676e696c 	strbvs	r6, [lr, -ip, ror #18]!
     988:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     98c:	43314d72 	teqmi	r1, #7296	; 0x1c80
     990:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
     994:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     998:	006b6361 	rsbeq	r6, fp, r1, ror #6
     99c:	66587854 			; <UNDEFINED> instruction: 0x66587854
     9a0:	6f437265 	svcvs	0x00437265
     9a4:	00746e75 	rsbseq	r6, r4, r5, ror lr
     9a8:	5f4c4148 	svcpl	0x004c4148
     9ac:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     9b0:	4154535f 	cmpmi	r4, pc, asr r3
     9b4:	525f4554 	subspl	r4, pc, #84, 10	; 0x15000000
     9b8:	54455345 	strbpl	r5, [r5], #-837	; 0xfffffcbb
     9bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     9c0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     9c4:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     9c8:	5f455441 	svcpl	0x00455441
     9cc:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     9d0:	5f58545f 	svcpl	0x0058545f
     9d4:	47005852 	smlsdmi	r0, r2, r8, r5
     9d8:	00525054 	subseq	r5, r2, r4, asr r0
     9dc:	64756142 	ldrbtvs	r6, [r5], #-322	; 0xfffffebe
     9e0:	65746152 	ldrbvs	r6, [r4, #-338]!	; 0xfffffeae
     9e4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     9e8:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     9ec:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     9f0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     9f4:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     9f8:	6c614872 	stclvs	8, cr4, [r1], #-456	; 0xfffffe38
     9fc:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
     a00:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     a04:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     a08:	5470006b 	ldrbtpl	r0, [r0], #-107	; 0xffffff95
     a0c:	66754278 			; <UNDEFINED> instruction: 0x66754278
     a10:	72745066 	rsbsvc	r5, r4, #102	; 0x66
     a14:	72655000 	rsbvc	r5, r5, #0
     a18:	49687069 	stmdbmi	r8!, {r0, r3, r5, r6, ip, sp, lr}^
     a1c:	4800636e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sp, lr}
     a20:	445f4c41 	ldrbmi	r4, [pc], #-3137	; a28 <_Min_Stack_Size+0x628>
     a24:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     a28:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     a2c:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     a30:	7500524f 	strvc	r5, [r0, #-591]	; 0xfffffdb1
     a34:	31746e69 	cmncc	r4, r9, ror #28
     a38:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     a3c:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     a40:	73746942 	cmnvc	r4, #1081344	; 0x108000
     a44:	72745300 	rsbsvc	r5, r4, #0, 6
     a48:	426d6165 	rsbmi	r6, sp, #1073741849	; 0x40000019
     a4c:	41657361 	cmnmi	r5, r1, ror #6
     a50:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
     a54:	4c007373 	stcmi	3, cr7, [r0], {115}	; 0x73
     a58:	006b636f 	rsbeq	r6, fp, pc, ror #6
     a5c:	65726944 	ldrbvs	r6, [r2, #-2372]!	; 0xfffff6bc
     a60:	6f697463 	svcvs	0x00697463
     a64:	6468006e 	strbtvs	r0, [r8], #-110	; 0xffffff92
     a68:	7872616d 	ldmdavc	r2!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     a6c:	72615000 	rsbvc	r5, r1, #0
     a70:	00746e65 	rsbseq	r6, r4, r5, ror #28
     a74:	74726155 	ldrbtvc	r6, [r2], #-341	; 0xfffffeab
     a78:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     a7c:	5300656c 	movwpl	r6, #1388	; 0x56c
     a80:	61657274 	smcvs	22308	; 0x5724
     a84:	646e496d 	strbtvs	r4, [lr], #-2413	; 0xfffff693
     a88:	52007865 	andpl	r7, r0, #6619136	; 0x650000
     a8c:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
     a90:	7a695372 	bvc	1a55860 <_Min_Stack_Size+0x1a55460>
     a94:	78540065 	ldmdavc	r4, {r0, r2, r5, r6}^
     a98:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     a9c:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     aa0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     aa4:	414d445f 	cmpmi	sp, pc, asr r4
     aa8:	4154535f 	cmpmi	r4, pc, asr r3
     aac:	415f4554 	cmpmi	pc, r4, asr r5	; <UNPREDICTABLE>
     ab0:	54524f42 	ldrbpl	r4, [r2], #-3906	; 0xfffff0be
     ab4:	72724500 	rsbsvc	r4, r2, #0, 10
     ab8:	6f43726f 	svcvs	0x0043726f
     abc:	4d006564 	cfstr32mi	mvfx6, [r0, #-400]	; 0xfffffe70
     ac0:	61446d65 	cmpvs	r4, r5, ror #26
     ac4:	6c416174 	stfvse	f6, [r1], {116}	; 0x74
     ac8:	6d6e6769 	stclvs	7, cr6, [lr, #-420]!	; 0xfffffe5c
     acc:	00746e65 	rsbseq	r6, r4, r5, ror #28
     ad0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     ad4:	79545f54 	ldmdbvc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     ad8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     adc:	41480066 	cmpmi	r8, r6, rrx
     ae0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     ae4:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
     ae8:	5f455441 	svcpl	0x00455441
     aec:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     af0:	5f5f0059 	svcpl	0x005f0059
     af4:	705f6f69 	subsvc	r6, pc, r9, ror #30
     af8:	68637475 	stmdavs	r3!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     afc:	5f007261 	svcpl	0x00007261
     b00:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     b04:	61485f54 	cmpvs	r8, r4, asr pc
     b08:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     b0c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     b10:	00666544 	rsbeq	r6, r6, r4, asr #10
     b14:	6f695f5f 	svcvs	0x00695f5f
     b18:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
     b1c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     b20:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     b24:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
     b28:	0044454b 	subeq	r4, r4, fp, asr #10
     b2c:	5f4c4148 	svcpl	0x004c4148
     b30:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     b34:	4154535f 	cmpmi	r4, pc, asr r3
     b38:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
     b3c:	5f595355 	svcpl	0x00595355
     b40:	68005854 	stmdavs	r0, {r2, r4, r6, fp, ip, lr}
     b44:	74616d64 	strbtvc	r6, [r1], #-3428	; 0xfffff29c
     b48:	41480078 	hvcmi	32776	; 0x8008
     b4c:	41555f4c 	cmpmi	r5, ip, asr #30
     b50:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     b54:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     b58:	4145525f 	cmpmi	r5, pc, asr r2
     b5c:	49005944 	stmdbmi	r0, {r2, r6, r8, fp, ip, lr}
     b60:	6174736e 	cmnvs	r4, lr, ror #6
     b64:	0065636e 	rsbeq	r6, r5, lr, ror #6
     b68:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     b6c:	6f727245 	svcvs	0x00727245
     b70:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
     b74:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     b78:	6658006b 	ldrbvs	r0, [r8], -fp, rrx
     b7c:	314d7265 	cmpcc	sp, r5, ror #4
     b80:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
     b84:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     b88:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     b8c:	6b636162 	blvs	18d911c <_Min_Stack_Size+0x18d8d1c>
     b90:	61684300 	cmnvs	r8, r0, lsl #6
     b94:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     b98:	72657300 	rsbvc	r7, r5, #0, 6
     b9c:	5f6c6169 	svcpl	0x006c6169
     ba0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     ba4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     ba8:	414d445f 	cmpmi	sp, pc, asr r4
     bac:	6174535f 	cmnvs	r4, pc, asr r3
     bb0:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
     bb4:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     bb8:	41480066 	cmpmi	r8, r6, rrx
     bbc:	41555f4c 	cmpmi	r5, ip, asr #30
     bc0:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     bc4:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     bc8:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     bcc:	5f00524f 	svcpl	0x0000524f
     bd0:	414d445f 	cmpmi	sp, pc, asr r4
     bd4:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     bd8:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
     bdc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     be0:	46006665 	strmi	r6, [r0], -r5, ror #12
     be4:	4d4f4649 	stclmi	6, cr4, [pc, #-292]	; ac8 <_Min_Stack_Size+0x6c8>
     be8:	0065646f 	rsbeq	r6, r5, pc, ror #8
     bec:	64726f57 	ldrbtvs	r6, [r2], #-3927	; 0xfffff0a9
     bf0:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
     bf4:	46006874 			; <UNDEFINED> instruction: 0x46006874
     bf8:	544f4649 	strbpl	r4, [pc], #-1609	; c00 <_Min_Stack_Size+0x800>
     bfc:	73657268 	cmnvc	r5, #104, 4	; 0x80000006
     c00:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
     c04:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     c08:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     c0c:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     c10:	5f455441 	svcpl	0x00455441
     c14:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     c18:	0058525f 	subseq	r5, r8, pc, asr r2
     c1c:	496d654d 	stmdbmi	sp!, {r0, r2, r3, r6, r8, sl, sp, lr}^
     c20:	5000636e 	andpl	r6, r0, lr, ror #6
     c24:	74697261 	strbtvc	r7, [r9], #-609	; 0xfffffd9f
     c28:	444e0079 	strbmi	r0, [lr], #-121	; 0xffffff87
     c2c:	44005254 	strmi	r5, [r0], #-596	; 0xfffffdac
     c30:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     c34:	61657274 	smcvs	22308	; 0x5724
     c38:	79545f6d 	ldmdbvc	r4, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     c3c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     c40:	41480066 	cmpmi	r8, r6, rrx
     c44:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     c48:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
     c4c:	5f455441 	svcpl	0x00455441
     c50:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     c54:	0054554f 	subseq	r5, r4, pc, asr #10
     c58:	5241314d 	subpl	r3, r1, #1073741843	; 0x40000013
     c5c:	72655000 	rsbvc	r5, r5, #0
     c60:	44687069 	strbtmi	r7, [r8], #-105	; 0xffffff97
     c64:	41617461 	cmnmi	r1, r1, ror #8
     c68:	6e67696c 	vnmulvs.f16	s13, s14, s25	; <UNPREDICTABLE>
     c6c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     c70:	52415500 	subpl	r5, r1, #0, 10
     c74:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
     c78:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     c7c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     c80:	41480066 	cmpmi	r8, r6, rrx
     c84:	41555f4c 	cmpmi	r5, ip, asr #30
     c88:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
     c8c:	70795478 	rsbsvc	r5, r9, r8, ror r4
     c90:	70795465 	rsbsvc	r5, r9, r5, ror #8
     c94:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     c98:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     c9c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     ca0:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     ca4:	5f455441 	svcpl	0x00455441
     ca8:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     cac:	0054554f 	subseq	r5, r4, pc, asr #10
     cb0:	6c467748 	mcrrvs	7, 4, r7, r6, cr8
     cb4:	7443776f 	strbvc	r7, [r3], #-1903	; 0xfffff891
     cb8:	5270006c 	rsbspl	r0, r0, #108	; 0x6c
     cbc:	66754278 			; <UNDEFINED> instruction: 0x66754278
     cc0:	72745066 	rsbsvc	r5, r4, #102	; 0x66
     cc4:	58785200 	ldmdapl	r8!, {r9, ip, lr}^
     cc8:	43726566 	cmnmi	r2, #427819008	; 0x19800000
     ccc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     cd0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     cd4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     cd8:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     cdc:	5f455441 	svcpl	0x00455441
     ce0:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     ce4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     ce8:	4c4e555f 	cfstr64mi	mvdx5, [lr], {95}	; 0x5f
     cec:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
     cf0:	78520044 	ldmdavc	r2, {r2, r6}^
     cf4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     cf8:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
     cfc:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
     d00:	546e6f69 	strbtpl	r6, [lr], #-3945	; 0xfffff097
     d04:	00657079 	rsbeq	r7, r5, r9, ror r0
     d08:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     d0c:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
     d10:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     d14:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     d18:	6658006b 	ldrbvs	r0, [r8], -fp, rrx
     d1c:	70437265 	subvc	r7, r3, r5, ror #4
     d20:	6143746c 	cmpvs	r3, ip, ror #8
     d24:	61626c6c 	cmnvs	r2, ip, ror #24
     d28:	50006b63 	andpl	r6, r0, r3, ror #22
     d2c:	70697265 	rsbvc	r7, r9, r5, ror #4
     d30:	72754268 	rsbsvc	r4, r5, #104, 4	; 0x80000006
     d34:	42007473 	andmi	r7, r0, #1929379840	; 0x73000000
     d38:	00525253 	subseq	r5, r2, r3, asr r2
     d3c:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     d40:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     d44:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
     d48:	5152495f 	cmppl	r2, pc, asr r9
     d4c:	4453006e 	ldrbmi	r0, [r3], #-110	; 0xffffff92
     d50:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     d54:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d58:	314e4143 	cmpcc	lr, r3, asr #2
     d5c:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
     d60:	5152495f 	cmppl	r2, pc, asr r9
     d64:	3249006e 	subcc	r0, r9, #110	; 0x6e
     d68:	455f3243 	ldrbmi	r3, [pc, #-579]	; b2d <_Min_Stack_Size+0x72d>
     d6c:	52495f52 	subpl	r5, r9, #328	; 0x148
     d70:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     d74:	5f32414d 	svcpl	0x0032414d
     d78:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     d7c:	5f306d61 	svcpl	0x00306d61
     d80:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d84:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     d88:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     d8c:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
     d90:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
     d94:	414d4400 	cmpmi	sp, r0, lsl #8
     d98:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     d9c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     da0:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
     da4:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     da8:	5f344d49 	svcpl	0x00344d49
     dac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     db0:	414d4400 	cmpmi	sp, r0, lsl #8
     db4:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     db8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     dbc:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     dc0:	46006e51 			; <UNDEFINED> instruction: 0x46006e51
     dc4:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     dc8:	5152495f 	cmppl	r2, pc, asr r9
     dcc:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     dd0:	5f304954 	svcpl	0x00304954
     dd4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     dd8:	43324900 	teqmi	r2, #0, 18
     ddc:	56455f31 			; <UNDEFINED> instruction: 0x56455f31
     de0:	5152495f 	cmppl	r2, pc, asr r9
     de4:	544f006e 	strbpl	r0, [pc], #-110	; dec <_Min_Stack_Size+0x9ec>
     de8:	53485f47 	movtpl	r5, #36679	; 0x8f47
     dec:	3150455f 	cmpcc	r0, pc, asr r5
     df0:	5f4e495f 	svcpl	0x004e495f
     df4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     df8:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     dfc:	5f353149 	svcpl	0x00353149
     e00:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
     e04:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e08:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     e0c:	4b52425f 	blmi	1491790 <_Min_Stack_Size+0x1491390>
     e10:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     e14:	495f3231 	ldmdbmi	pc, {r0, r4, r5, r9, ip, sp}^	; <UNPREDICTABLE>
     e18:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e1c:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     e20:	495f5653 	ldmdbmi	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
     e24:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e28:	5f47544f 	svcpl	0x0047544f
     e2c:	575f5346 	ldrbpl	r5, [pc, -r6, asr #6]
     e30:	5f50554b 	svcpl	0x0050554b
     e34:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e38:	52415500 	subpl	r5, r1, #0, 10
     e3c:	495f3454 	ldmdbmi	pc, {r2, r4, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     e40:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e44:	5f434352 	svcpl	0x00434352
     e48:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e4c:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     e50:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
     e54:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     e58:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     e5c:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     e60:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     e64:	5f504d41 	svcpl	0x00504d41
     e68:	4d415453 	cfstrdmi	mvd5, [r1, #-332]	; 0xfffffeb4
     e6c:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     e70:	4f006e51 	svcmi	0x00006e51
     e74:	465f4754 			; <UNDEFINED> instruction: 0x465f4754
     e78:	52495f53 	subpl	r5, r9, #332	; 0x14c
     e7c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     e80:	5f32414d 	svcpl	0x0032414d
     e84:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     e88:	5f326d61 	svcpl	0x00326d61
     e8c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e90:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     e94:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     e98:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     e9c:	5f314d49 	svcpl	0x00314d49
     ea0:	5f4b5242 	svcpl	0x004b5242
     ea4:	394d4954 	stmdbcc	sp, {r2, r4, r6, r8, fp, lr}^
     ea8:	5152495f 	cmppl	r2, pc, asr r9
     eac:	6468006e 	strbtvs	r0, [r8], #-110	; 0xffffff92
     eb0:	725f616d 	subsvc	r6, pc, #1073741851	; 0x4000001b
     eb4:	4d440078 	stclmi	0, cr0, [r4, #-480]	; 0xfffffe20
     eb8:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     ebc:	61657274 	smcvs	22308	; 0x5724
     ec0:	495f376d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     ec4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ec8:	31414d44 	cmpcc	r1, r4, asr #26
     ecc:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     ed0:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
     ed4:	5152495f 	cmppl	r2, pc, asr r9
     ed8:	7568006e 	strbvc	r0, [r8, #-110]!	; 0xffffff92
     edc:	00747261 	rsbseq	r7, r4, r1, ror #4
     ee0:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     ee4:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
     ee8:	5152495f 	cmppl	r2, pc, asr r9
     eec:	4143006e 	cmpmi	r3, lr, rrx
     ef0:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     ef4:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     ef8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     efc:	44505550 	ldrbmi	r5, [r0], #-1360	; 0xfffffab0
     f00:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     f04:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     f08:	61657274 	smcvs	22308	; 0x5724
     f0c:	495f376d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     f10:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f14:	6c6c7550 	cfstr64vs	mvdx7, [ip], #-320	; 0xfffffec0
     f18:	41535500 	cmpmi	r3, r0, lsl #10
     f1c:	5f325452 	svcpl	0x00325452
     f20:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f24:	43324900 	teqmi	r2, #0, 18
     f28:	52455f33 	subpl	r5, r5, #51, 30	; 0xcc
     f2c:	5152495f 	cmppl	r2, pc, asr r9
     f30:	4f4d006e 	svcmi	0x004d006e
     f34:	00524544 	subseq	r4, r2, r4, asr #10
     f38:	5f435452 	svcpl	0x00435452
     f3c:	50554b57 	subspl	r4, r5, r7, asr fp
     f40:	5152495f 	cmppl	r2, pc, asr r9
     f44:	544f006e 	strbpl	r0, [pc], #-110	; f4c <_Min_Stack_Size+0xb4c>
     f48:	53485f47 	movtpl	r5, #36679	; 0x8f47
     f4c:	5152495f 	cmppl	r2, pc, asr r9
     f50:	6468006e 	strbtvs	r0, [r8], #-110	; 0xffffff92
     f54:	745f616d 	ldrbvc	r6, [pc], #-365	; f5c <_Min_Stack_Size+0xb5c>
     f58:	58450078 	stmdapl	r5, {r3, r4, r5, r6}^
     f5c:	5f324954 	svcpl	0x00324954
     f60:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f64:	43324900 	teqmi	r2, #0, 18
     f68:	56455f32 			; <UNDEFINED> instruction: 0x56455f32
     f6c:	5152495f 	cmppl	r2, pc, asr r9
     f70:	5053006e 	subspl	r0, r3, lr, rrx
     f74:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     f78:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f7c:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     f80:	3058525f 	subscc	r5, r8, pc, asr r2
     f84:	5152495f 	cmppl	r2, pc, asr r9
     f88:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     f8c:	495f334d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     f90:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f94:	65657053 	strbvs	r7, [r5, #-83]!	; 0xffffffad
     f98:	4d440064 	stclmi	0, cr0, [r4, #-400]	; 0xfffffe70
     f9c:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     fa0:	61657274 	smcvs	22308	; 0x5724
     fa4:	495f346d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     fa8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fac:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     fb0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     fb4:	2f2e2e2f 	svccs	0x002e2e2f
     fb8:	6a6f7270 	bvs	1bdd980 <_Min_Stack_Size+0x1bdd580>
     fbc:	2f746365 	svccs	0x00746365
     fc0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     fc4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     fc8:	654e2f78 	strbvs	r2, [lr, #-3960]	; 0xfffff088
     fcc:	69756474 	ldmdbvs	r5!, {r2, r4, r5, r6, sl, sp, lr}^
     fd0:	6c506f6e 	mrrcvs	15, 6, r6, r0, cr14
     fd4:	2f327375 	svccs	0x00327375
     fd8:	2f637273 	svccs	0x00637273
     fdc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     fe0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     fe4:	61685f78 	smcvs	34296	; 0x85f8
     fe8:	736d5f6c 	cmnvc	sp, #108, 30	; 0x1b0
     fec:	00632e70 	rsbeq	r2, r3, r0, ror lr
     ff0:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     ff4:	5f50555f 	svcpl	0x0050555f
     ff8:	314d4954 	cmpcc	sp, r4, asr r9
     ffc:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    1000:	57006e51 	smlsdpl	r0, r1, lr, r6
    1004:	5f474457 	svcpl	0x00474457
    1008:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    100c:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
    1010:	58525f32 	ldmdapl	r2, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
    1014:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1018:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
    101c:	5f32414d 	svcpl	0x0032414d
    1020:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    1024:	5f346d61 	svcpl	0x00346d61
    1028:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    102c:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1030:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    1034:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1038:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
    103c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1040:	5152495f 	cmppl	r2, pc, asr r9
    1044:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    1048:	545f314d 	ldrbpl	r3, [pc], #-333	; 1050 <_Min_Stack_Size+0xc50>
    104c:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
    1050:	545f4d4f 	ldrbpl	r4, [pc], #-3407	; 1058 <_Min_Stack_Size+0xc58>
    1054:	31314d49 	teqcc	r1, r9, asr #26
    1058:	5152495f 	cmppl	r2, pc, asr r9
    105c:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
    1060:	5f344954 	svcpl	0x00344954
    1064:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1068:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    106c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1070:	734d5f54 	movtvc	r5, #57172	; 0xdf54
    1074:	696e4970 	stmdbvs	lr!, {r4, r5, r6, r8, fp, lr}^
    1078:	56500074 			; <UNDEFINED> instruction: 0x56500074
    107c:	52495f44 	subpl	r5, r9, #68, 30	; 0x110
    1080:	4c006e51 	stcmi	14, cr6, [r0], {81}	; 0x51
    1084:	00524b43 	subseq	r4, r2, r3, asr #22
    1088:	5f434441 	svcpl	0x00434441
    108c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1090:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1094:	52495f35 	subpl	r5, r9, #53, 30	; 0xd4
    1098:	4f006e51 	svcmi	0x00006e51
    109c:	45455053 	strbmi	r5, [r5, #-83]	; 0xffffffad
    10a0:	44005244 	strmi	r5, [r0], #-580	; 0xfffffdbc
    10a4:	5f31414d 	svcpl	0x0031414d
    10a8:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    10ac:	5f316d61 	svcpl	0x00316d61
    10b0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    10b4:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
    10b8:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
    10bc:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    10c0:	52006e51 	andpl	r6, r0, #1296	; 0x510
    10c4:	415f4354 	cmpmi	pc, r4, asr r3	; <UNPREDICTABLE>
    10c8:	6d72616c 	ldfvse	f6, [r2, #-432]!	; 0xfffffe50
    10cc:	5152495f 	cmppl	r2, pc, asr r9
    10d0:	6c41006e 	mcrrvs	0, 6, r0, r1, cr14
    10d4:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
    10d8:	00657461 	rsbeq	r7, r5, r1, ror #8
    10dc:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    10e0:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    10e4:	366d6165 	strbtcc	r6, [sp], -r5, ror #2
    10e8:	5152495f 	cmppl	r2, pc, asr r9
    10ec:	3249006e 	subcc	r0, r9, #110	; 0x6e
    10f0:	455f3343 	ldrbmi	r3, [pc, #-835]	; db5 <_Min_Stack_Size+0x9b5>
    10f4:	52495f56 	subpl	r5, r9, #344	; 0x158
    10f8:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
    10fc:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
    1100:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1104:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
    1108:	35545241 	ldrbcc	r5, [r4, #-577]	; 0xfffffdbf
    110c:	5152495f 	cmppl	r2, pc, asr r9
    1110:	6f4e006e 	svcvs	0x004e006e
    1114:	73614d6e 	cmnvc	r1, #7040	; 0x1b80
    1118:	6c62616b 	stfvse	f6, [r2], #-428	; 0xfffffe54
    111c:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
    1120:	5152495f 	cmppl	r2, pc, asr r9
    1124:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    1128:	535f3241 	cmppl	pc, #268435460	; 0x10000004
    112c:	61657274 	smcvs	22308	; 0x5724
    1130:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    1134:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1138:	314d4954 	cmpcc	sp, r4, asr r9
    113c:	5f43435f 	svcpl	0x0043435f
    1140:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1144:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
    1148:	00524550 	subseq	r4, r2, r0, asr r5
    114c:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
    1150:	5f43435f 	svcpl	0x0043435f
    1154:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1158:	414d4400 	cmpmi	sp, r0, lsl #8
    115c:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    1160:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1164:	52495f36 	subpl	r5, r9, #54, 30	; 0xd8
    1168:	52006e51 	andpl	r6, r0, #1296	; 0x510
    116c:	495f474e 	ldmdbmi	pc, {r1, r2, r3, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
    1170:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1174:	314e4143 	cmpcc	lr, r3, asr #2
    1178:	5f58545f 	svcpl	0x0058545f
    117c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1180:	4d534600 	ldclmi	6, cr4, [r3, #-0]
    1184:	52495f43 	subpl	r5, r9, #268	; 0x10c
    1188:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
    118c:	31495458 	cmpcc	r9, r8, asr r4
    1190:	5152495f 	cmppl	r2, pc, asr r9
    1194:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    1198:	445f364d 	ldrbmi	r3, [pc], #-1613	; 11a0 <_Min_Stack_Size+0xda0>
    119c:	495f4341 	ldmdbmi	pc, {r0, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    11a0:	006e5152 	rsbeq	r5, lr, r2, asr r1
    11a4:	4f495047 	svcmi	0x00495047
    11a8:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    11ac:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    11b0:	43324900 	teqmi	r2, #0, 18
    11b4:	52455f31 	subpl	r5, r5, #49, 30	; 0xc4
    11b8:	5152495f 	cmppl	r2, pc, asr r9
    11bc:	5355006e 	cmppl	r5, #110	; 0x6e
    11c0:	36545241 	ldrbcc	r5, [r4], -r1, asr #4
    11c4:	5152495f 	cmppl	r2, pc, asr r9
    11c8:	7953006e 	ldmdbvc	r3, {r1, r2, r3, r5, r6}^
    11cc:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    11d0:	52495f6b 	subpl	r5, r9, #428	; 0x1ac
    11d4:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
    11d8:	5f324d49 	svcpl	0x00324d49
    11dc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    11e0:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
    11e4:	5f53485f 	svcpl	0x0053485f
    11e8:	50554b57 	subspl	r4, r5, r7, asr fp
    11ec:	5152495f 	cmppl	r2, pc, asr r9
    11f0:	6544006e 	strbvs	r0, [r4, #-110]	; 0xffffff92
    11f4:	4d677562 	cfstr64mi	mvdx7, [r7, #-392]!	; 0xfffffe78
    11f8:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    11fc:	495f726f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    1200:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1204:	67617355 			; <UNDEFINED> instruction: 0x67617355
    1208:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
    120c:	495f746c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1210:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1214:	4f495047 	svcmi	0x00495047
    1218:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    121c:	70795474 	rsbsvc	r5, r9, r4, ror r4
    1220:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1224:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1228:	355f3949 	ldrbcc	r3, [pc, #-2377]	; 8e7 <_Min_Stack_Size+0x4e7>
    122c:	5152495f 	cmppl	r2, pc, asr r9
    1230:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
    1234:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1238:	5152495f 	cmppl	r2, pc, asr r9
    123c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    1240:	545f384d 	ldrbpl	r3, [pc], #-2125	; 1248 <_Min_Stack_Size+0xe48>
    1244:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
    1248:	545f4d4f 	ldrbpl	r4, [pc], #-3407	; 1250 <_Min_Stack_Size+0xe50>
    124c:	34314d49 	ldrtcc	r4, [r1], #-3401	; 0xfffff2b7
    1250:	5152495f 	cmppl	r2, pc, asr r9
    1254:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    1258:	535f3241 	cmppl	pc, #268435460	; 0x10000004
    125c:	61657274 	smcvs	22308	; 0x5724
    1260:	495f336d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    1264:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1268:	32495053 	subcc	r5, r9, #83	; 0x53
    126c:	5152495f 	cmppl	r2, pc, asr r9
    1270:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    1274:	495f374d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
    1278:	006e5152 	rsbeq	r5, lr, r2, asr r1
    127c:	31414d44 	cmpcc	r1, r4, asr #26
    1280:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1284:	336d6165 	cmncc	sp, #1073741849	; 0x40000019
    1288:	5152495f 	cmppl	r2, pc, asr r9
    128c:	4143006e 	cmpmi	r3, lr, rrx
    1290:	545f324e 	ldrbpl	r3, [pc], #-590	; 1298 <_Min_Stack_Size+0xe98>
    1294:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
    1298:	4f006e51 	svcmi	0x00006e51
    129c:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
    12a0:	50455f53 	subpl	r5, r5, r3, asr pc
    12a4:	554f5f31 	strbpl	r5, [pc, #-3889]	; 37b <_Min_Heap_Size+0x17b>
    12a8:	52495f54 	subpl	r5, r9, #84, 30	; 0x150
    12ac:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
    12b0:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
    12b4:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    12b8:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
    12bc:	5f314d49 	svcpl	0x00314d49
    12c0:	545f5055 	ldrbpl	r5, [pc], #-85	; 12c8 <_Min_Stack_Size+0xec8>
    12c4:	30314d49 	eorscc	r4, r1, r9, asr #26
    12c8:	5152495f 	cmppl	r2, pc, asr r9
    12cc:	4148006e 	cmpmi	r8, lr, rrx
    12d0:	41555f4c 	cmpmi	r5, ip, asr #30
    12d4:	4d5f5452 	cfldrdmi	mvd5, [pc, #-328]	; 1194 <_Min_Stack_Size+0xd94>
    12d8:	65447073 	strbvs	r7, [r4, #-115]	; 0xffffff8d
    12dc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    12e0:	55504600 	ldrbpl	r4, [r0, #-1536]	; 0xfffffa00
    12e4:	5152495f 	cmppl	r2, pc, asr r9
    12e8:	6544006e 	strbvs	r0, [r4, #-110]	; 0xffffff92
    12ec:	4d677562 	cfstr64mi	mvdx7, [r7, #-392]!	; 0xfffffe78
    12f0:	485f6e6f 	ldmdami	pc, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^	; <UNPREDICTABLE>
    12f4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    12f8:	2e007265 	cdpcs	2, 0, cr7, cr0, cr5, {3}
    12fc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1300:	2f2e2e2f 	svccs	0x002e2e2f
    1304:	702f2e2e 	eorvc	r2, pc, lr, lsr #28
    1308:	656a6f72 	strbvs	r6, [sl, #-3954]!	; 0xfffff08e
    130c:	732f7463 			; <UNDEFINED> instruction: 0x732f7463
    1310:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1314:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1318:	74654e2f 	strbtvc	r4, [r5], #-3631	; 0xfffff1d1
    131c:	6e697564 	cdpvs	5, 6, cr7, cr9, cr4, {3}
    1320:	756c506f 	strbvc	r5, [ip, #-111]!	; 0xffffff91
    1324:	732f3273 			; <UNDEFINED> instruction: 0x732f3273
    1328:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    132c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1330:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1334:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
    1338:	5f5f0063 	svcpl	0x005f0063
    133c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    1340:	53005f5f 	movwpl	r5, #3935	; 0xf5f
    1344:	485f4356 	ldmdami	pc, {r1, r2, r4, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    1348:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    134c:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1350:	00525343 	subseq	r5, r2, r3, asr #6
    1354:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
    1358:	79530044 	ldmdbvc	r3, {r2, r6}^
    135c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1360:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1364:	2f2e2e00 	svccs	0x002e2e00
    1368:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    136c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1370:	6f72702f 	svcvs	0x0072702f
    1374:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
    1378:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    137c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1380:	4e2f7878 	mcrmi	8, 1, r7, cr15, cr8, {3}
    1384:	75647465 	strbvc	r7, [r4, #-1125]!	; 0xfffffb9b
    1388:	506f6e69 	rsbpl	r6, pc, r9, ror #28
    138c:	3273756c 	rsbscc	r7, r3, #108, 10	; 0x1b000000
    1390:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1394:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    1398:	5f6d6574 	svcpl	0x006d6574
    139c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    13a0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    13a4:	00632e78 	rsbeq	r2, r3, r8, ror lr
    13a8:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
    13ac:	53464300 	movtpl	r4, #25344	; 0x6300
    13b0:	6c700052 	ldclvs	0, cr0, [r0], #-328	; 0xfffffeb8
    13b4:	756f736c 	strbvc	r7, [pc, #-876]!	; 1050 <_Min_Stack_Size+0xc50>
    13b8:	00656372 	rsbeq	r6, r5, r2, ror r3
    13bc:	6d6c6c70 	stclvs	12, cr6, [ip, #-448]!	; 0xfffffe40
    13c0:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    13c4:	49410070 	stmdbmi	r1, {r4, r5, r6}^
    13c8:	00524352 	subseq	r4, r2, r2, asr r3
    13cc:	5f424353 	svcpl	0x00424353
    13d0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    13d4:	43485300 	movtmi	r5, #33536	; 0x8300
    13d8:	53005253 	movwpl	r5, #595	; 0x253
    13dc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    13e0:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
    13e4:	6f6c4365 	svcvs	0x006c4365
    13e8:	70556b63 	subsvc	r6, r5, r3, ror #22
    13ec:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    13f0:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
    13f4:	70005241 	andvc	r5, r0, r1, asr #4
    13f8:	63766c6c 	cmnvs	r6, #108, 24	; 0x6c00
    13fc:	5456006f 	ldrbpl	r0, [r6], #-111	; 0xffffff91
    1400:	4900524f 	stmdbmi	r0, {r0, r1, r2, r3, r6, r9, ip, lr}
    1404:	00524153 	subseq	r4, r2, r3, asr r1
    1408:	52534644 	subspl	r4, r3, #68, 12	; 0x4400000
    140c:	53464800 	movtpl	r4, #26624	; 0x6800
    1410:	4d4d0052 	stclmi	0, cr0, [sp, #-328]	; 0xfffffeb8
    1414:	41005246 	tstmi	r0, r6, asr #4
    1418:	00525346 	subseq	r5, r2, r6, asr #6
    141c:	43415043 	movtmi	r5, #4163	; 0x1043
    1420:	41480052 	qdaddmi	r0, r2, r8
    1424:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    1428:	6c614874 	stclvs	8, cr4, [r1], #-464	; 0xfffffe30
    142c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
    1430:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    1434:	6b636954 	blvs	18db98c <_Min_Stack_Size+0x18db58c>
    1438:	6f697250 	svcvs	0x00697250
    143c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1440:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1444:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1448:	6b636954 	blvs	18db9a0 <_Min_Stack_Size+0x18db5a0>
    144c:	71657246 	cmnvc	r5, r6, asr #4
    1450:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1454:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1458:	6b636954 	blvs	18db9b0 <_Min_Stack_Size+0x18db5b0>
    145c:	71657246 	cmnvc	r5, r6, asr #4
    1460:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
    1464:	44005243 	strmi	r5, [r0], #-579	; 0xfffffdbd
    1468:	42415349 	submi	r5, r1, #603979777	; 0x24000001
    146c:	4900454c 	stmdbmi	r0, {r2, r3, r6, r8, sl, lr}
    1470:	444f4344 	strbmi	r4, [pc], #-836	; 1478 <_Min_Stack_Size+0x1078>
    1474:	41480045 	cmpmi	r8, r5, asr #32
    1478:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    147c:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    1480:	616e455f 	cmnvs	lr, pc, asr r5
    1484:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    1488:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    148c:	62646e61 	rsbvs	r6, r4, #1552	; 0x610
    1490:	646f4d79 	strbtvs	r4, [pc], #-3449	; 1498 <_Min_Stack_Size+0x1098>
    1494:	41480065 	cmpmi	r8, r5, rrx
    1498:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    149c:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    14a0:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    14a4:	4e45006f 	cdpmi	0, 4, cr0, cr5, cr15, {3}
    14a8:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
    14ac:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
    14b0:	5259454b 	subspl	r4, r9, #314572800	; 0x12c00000
    14b4:	73795300 	cmnvc	r9, #0, 6
    14b8:	6b636954 	blvs	18dba10 <_Min_Stack_Size+0x18db610>
    14bc:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    14c0:	41480065 	cmpmi	r8, r5, rrx
    14c4:	734d5f4c 	movtvc	r5, #57164	; 0xdf4c
    14c8:	49654470 	stmdbmi	r5!, {r4, r5, r6, sl, lr}^
    14cc:	0074696e 	rsbseq	r6, r4, lr, ror #18
    14d0:	6b636974 	blvs	18dbaa8 <_Min_Stack_Size+0x18db6a8>
    14d4:	00646e65 	rsbeq	r6, r4, r5, ror #28
    14d8:	5f4c4148 	svcpl	0x004c4148
    14dc:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    14e0:	445f5543 	ldrbmi	r5, [pc], #-1347	; 14e8 <_Min_Stack_Size+0x10e8>
    14e4:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    14e8:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    14ec:	656c5347 	strbvs	r5, [ip, #-839]!	; 0xfffffcb9
    14f0:	6f4d7065 	svcvs	0x004d7065
    14f4:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    14f8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1500 <_Min_Stack_Size+0x1100>
    14fc:	434d4742 	movtmi	r4, #55106	; 0xd742
    1500:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    1504:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1508:	53474244 	movtpl	r4, #29252	; 0x7244
    150c:	7065656c 	rsbvc	r6, r5, ip, ror #10
    1510:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    1514:	42504100 	subsmi	r4, r0, #0, 2
    1518:	005a4631 	subseq	r4, sl, r1, lsr r6
    151c:	5f4c4148 	svcpl	0x004c4148
    1520:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    1524:	445f5543 	ldrbmi	r5, [pc], #-1347	; 152c <_Min_Stack_Size+0x112c>
    1528:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    152c:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    1530:	6f745347 	svcvs	0x00745347
    1534:	646f4d70 	strbtvs	r4, [pc], #-3440	; 153c <_Min_Stack_Size+0x113c>
    1538:	41480065 	cmpmi	r8, r5, rrx
    153c:	65445f4c 	strbvs	r5, [r4, #-3916]	; 0xfffff0b4
    1540:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1544:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
    1548:	00315243 	eorseq	r5, r1, r3, asr #4
    154c:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
    1550:	41480042 	cmpmi	r8, r2, asr #32
    1554:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    1558:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    155c:	616e455f 	cmnvs	lr, pc, asr r5
    1560:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    1564:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    1568:	6f4d706f 	svcvs	0x004d706f
    156c:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    1570:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 1474 <_Min_Stack_Size+0x1074>
    1574:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
    1578:	41007469 	tstmi	r0, r9, ror #8
    157c:	46324250 			; <UNDEFINED> instruction: 0x46324250
    1580:	4148005a 	qdaddmi	r0, sl, r8
    1584:	74535f4c 	ldrbvc	r5, [r3], #-3916	; 0xfffff0b4
    1588:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    158c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1590:	00666544 	rsbeq	r6, r6, r4, asr #10
    1594:	5f4c4148 	svcpl	0x004c4148
    1598:	55746547 	ldrbpl	r6, [r4, #-1351]!	; 0xfffffab9
    159c:	30774449 	rsbscc	r4, r7, r9, asr #8
    15a0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    15a4:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    15a8:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    15ac:	4f4c0031 	svcmi	0x004c0031
    15b0:	48004441 	stmdami	r0, {r0, r6, sl, lr}
    15b4:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    15b8:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    15bc:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    15c0:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    15c4:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    15c8:	63695465 	cmnvs	r9, #1694498816	; 0x65000000
    15cc:	4148006b 	cmpmi	r8, fp, rrx
    15d0:	6e495f4c 	cdpvs	15, 4, cr5, cr9, cr12, {2}
    15d4:	69547469 	ldmdbvs	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
    15d8:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    15dc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 15e4 <_Min_Stack_Size+0x11e4>
    15e0:	434d4742 	movtmi	r4, #55106	; 0xd742
    15e4:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    15e8:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    15ec:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    15f0:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    15f4:	4d796264 	lfmmi	f6, 2, [r9, #-400]!	; 0xfffffe70
    15f8:	0065646f 	rsbeq	r6, r5, pc, ror #8
    15fc:	6b636974 	blvs	18dbbd4 <_Min_Stack_Size+0x18db7d4>
    1600:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    1604:	41480074 	hvcmi	32772	; 0x8004
    1608:	75535f4c 	ldrbvc	r5, [r3, #-3916]	; 0xfffff0b4
    160c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1610:	63695464 	cmnvs	r9, #100, 8	; 0x64000000
    1614:	4148006b 	cmpmi	r8, fp, rrx
    1618:	6e495f4c 	cdpvs	15, 4, cr5, cr9, cr12, {2}
    161c:	44007469 	strmi	r7, [r0], #-1129	; 0xfffffb97
    1620:	434d4742 	movtmi	r4, #55106	; 0xd742
    1624:	79545f55 	ldmdbvc	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    1628:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    162c:	41480066 	cmpmi	r8, r6, rrx
    1630:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    1634:	56455274 			; <UNDEFINED> instruction: 0x56455274
    1638:	2e004449 	cdpcs	4, 0, cr4, cr0, cr9, {2}
    163c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1640:	2f2e2e2f 	svccs	0x002e2e2f
    1644:	642f2e2e 	strtvs	r2, [pc], #-3630	; 164c <_Min_Stack_Size+0x124c>
    1648:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    164c:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    1650:	2f706968 	svccs	0x00706968
    1654:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1658:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    165c:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    1660:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1664:	5f787834 	svcpl	0x00787834
    1668:	5f4c4148 	svcpl	0x004c4148
    166c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1670:	732f7265 			; <UNDEFINED> instruction: 0x732f7265
    1674:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1678:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    167c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1680:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1684:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1688:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1690 <_Min_Stack_Size+0x1290>
    168c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    1690:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1694:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1698:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    169c:	72700032 	rsbsvc	r0, r0, #50	; 0x32
    16a0:	69547665 	ldmdbvs	r4, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
    16a4:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    16a8:	43007165 	movwmi	r7, #357	; 0x165
    16ac:	004c5254 	subeq	r5, ip, r4, asr r2
    16b0:	5f4c4148 	svcpl	0x004c4148
    16b4:	54636e49 	strbtpl	r6, [r3], #-3657	; 0xfffff1b7
    16b8:	006b6369 	rsbeq	r6, fp, r9, ror #6
    16bc:	5f4c4148 	svcpl	0x004c4148
    16c0:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    16c4:	6f43656c 	svcvs	0x0043656c
    16c8:	6e65706d 	cdpvs	0, 6, cr7, cr5, cr13, {3}
    16cc:	69746173 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, sp, lr}^
    16d0:	65436e6f 	strbvs	r6, [r3, #-3695]	; 0xfffff191
    16d4:	48006c6c 	stmdami	r0, {r2, r3, r5, r6, sl, fp, sp, lr}
    16d8:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    16dc:	45447465 	strbmi	r7, [r4, #-1125]	; 0xfffffb9b
    16e0:	00444956 	subeq	r4, r4, r6, asr r9
    16e4:	53414c46 	movtpl	r4, #7238	; 0x1c46
    16e8:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
    16ec:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    16f0:	41480066 	cmpmi	r8, r6, rrx
    16f4:	69445f4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    16f8:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    16fc:	6d6f4365 	stclvs	3, cr4, [pc, #-404]!	; 1570 <_Min_Stack_Size+0x1170>
    1700:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    1704:	6f697461 	svcvs	0x00697461
    1708:	6c65436e 	stclvs	3, cr4, [r5], #-440	; 0xfffffe48
    170c:	2e2e006c 	cdpcs	0, 2, cr0, cr14, cr12, {3}
    1710:	2f2e2e2f 	svccs	0x002e2e2f
    1714:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1718:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    171c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1720:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1724:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
    1728:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    172c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1730:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1734:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1738:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    173c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1744 <_Min_Stack_Size+0x1344>
    1740:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1744:	72732f72 	rsbsvc	r2, r3, #456	; 0x1c8
    1748:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    174c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1750:	5f787834 	svcpl	0x00787834
    1754:	5f6c6168 	svcpl	0x006c6168
    1758:	5f70736d 	svcpl	0x0070736d
    175c:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1760:	6574616c 	ldrbvs	r6, [r4, #-364]!	; 0xfffffe94
    1764:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1768:	505f4c41 	subspl	r4, pc, r1, asr #24
    176c:	4d5f5050 	ldclmi	0, cr5, [pc, #-320]	; 1634 <_Min_Stack_Size+0x1234>
    1770:	65447073 	strbvs	r7, [r4, #-115]	; 0xffffff8d
    1774:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1778:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    177c:	5050505f 	subspl	r5, r0, pc, asr r0
    1780:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
    1784:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1788:	50434900 	subpl	r4, r3, r0, lsl #18
    178c:	79540052 	ldmdbvc	r4, {r1, r4, r6}^
    1790:	78456570 	stmdavc	r5, {r4, r5, r6, r8, sl, sp, lr}^
    1794:	65694674 	strbvs	r4, [r9, #-1652]!	; 0xfffff98c
    1798:	4800646c 	stmdami	r0, {r2, r3, r5, r6, sl, sp, lr}
    179c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    17a0:	5f434956 	svcpl	0x00434956
    17a4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    17a8:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
    17ac:	5f5f0051 	svcpl	0x005f0051
    17b0:	4349564e 	movtmi	r5, #38478	; 0x964e
    17b4:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    17b8:	6f697250 	svcvs	0x00697250
    17bc:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    17c0:	53415200 	movtpl	r5, #4608	; 0x1200
    17c4:	31415f52 	cmpcc	r1, r2, asr pc
    17c8:	53415200 	movtpl	r5, #4608	; 0x1200
    17cc:	32415f52 	subcc	r5, r1, #328	; 0x148
    17d0:	53415200 	movtpl	r5, #4608	; 0x1200
    17d4:	33415f52 	movtcc	r5, #8018	; 0x1f52
    17d8:	50534900 	subspl	r4, r3, r0, lsl #18
    17dc:	73490052 	movtvc	r0, #36946	; 0x9052
    17e0:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    17e4:	62617265 	rsbvs	r7, r1, #1342177286	; 0x50000006
    17e8:	5000656c 	andpl	r6, r0, ip, ror #10
    17ec:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    17f0:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    17f4:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    17f8:	75537000 	ldrbvc	r7, [r3, #-0]
    17fc:	69725062 	ldmdbvs	r2!, {r1, r5, r6, ip, lr}^
    1800:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1804:	69440079 	stmdbvs	r4, {r0, r3, r4, r5, r6}^
    1808:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    180c:	65784565 	ldrbvs	r4, [r8, #-1381]!	; 0xfffffa9b
    1810:	41480063 	cmpmi	r8, r3, rrx
    1814:	59535f4c 	ldmdbpl	r3, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1818:	43495453 	movtmi	r5, #37971	; 0x9453
    181c:	52495f4b 	subpl	r5, r9, #300	; 0x12c
    1820:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1824:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1828:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    182c:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1830:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
    1834:	50726165 	rsbspl	r6, r2, r5, ror #2
    1838:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    183c:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    1840:	41480051 	qdaddmi	r0, r1, r8
    1844:	504d5f4c 	subpl	r5, sp, ip, asr #30
    1848:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    184c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1850:	504d0065 	subpl	r0, sp, r5, rrx
    1854:	6f435f55 	svcvs	0x00435f55
    1858:	6f72746e 	svcvs	0x0072746e
    185c:	4148006c 	cmpmi	r8, ip, rrx
    1860:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1864:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    1868:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    186c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1870:	5f007974 	svcpl	0x00007974
    1874:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1878:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
    187c:	50726165 	rsbspl	r6, r2, r5, ror #2
    1880:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1884:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    1888:	5f5f0051 	svcpl	0x005f0051
    188c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1890:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
    1894:	526d6574 	rsbpl	r6, sp, #116, 10	; 0x1d000000
    1898:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    189c:	41425200 	mrsmi	r5, (UNDEF: 98)
    18a0:	31415f52 	cmpcc	r1, r2, asr pc
    18a4:	41425200 	mrsmi	r5, (UNDEF: 98)
    18a8:	32415f52 	subcc	r5, r1, #328	; 0x148
    18ac:	41425200 	mrsmi	r5, (UNDEF: 98)
    18b0:	33415f52 	movtcc	r5, #8018	; 0x1f52
    18b4:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
    18b8:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    18bc:	72500074 	subsvc	r0, r0, #116	; 0x74
    18c0:	706d6565 	rsbvc	r6, sp, r5, ror #10
    18c4:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    18c8:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    18cc:	74694279 	strbtvc	r4, [r9], #-633	; 0xfffffd87
    18d0:	504d0073 	subpl	r0, sp, r3, ror r0
    18d4:	65525f55 	ldrbvs	r5, [r2, #-3925]	; 0xfffff0ab
    18d8:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    18dc:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    18e0:	70795474 	rsbsvc	r5, r9, r4, ror r4
    18e4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    18e8:	43734900 	cmnmi	r3, #0, 18
    18ec:	65686361 	strbvs	r6, [r8, #-865]!	; 0xfffffc9f
    18f0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    18f4:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    18f8:	5f434956 	svcpl	0x00434956
    18fc:	61736944 	cmnvs	r3, r4, asr #18
    1900:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    1904:	72005152 	andvc	r5, r0, #-2147483628	; 0x80000014
    1908:	765f6765 	ldrbvc	r6, [pc], -r5, ror #14
    190c:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    1910:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1914:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1918:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    191c:	6e655074 	mcrvs	0, 3, r5, cr5, cr4, {3}
    1920:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    1924:	00515249 	subseq	r5, r1, r9, asr #4
    1928:	5f4c4148 	svcpl	0x004c4148
    192c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1930:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    1934:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1938:	00515249 	subseq	r5, r1, r9, asr #4
    193c:	65725070 	ldrbvs	r5, [r2, #-112]!	; 0xffffff90
    1940:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    1944:	6f697250 	svcvs	0x00697250
    1948:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    194c:	63634100 	cmnvs	r3, #0, 2
    1950:	50737365 	rsbspl	r7, r3, r5, ror #6
    1954:	696d7265 	stmdbvs	sp!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    1958:	6f697373 	svcvs	0x00697373
    195c:	5f5f006e 	svcpl	0x005f006e
    1960:	4349564e 	movtmi	r5, #38478	; 0x964e
    1964:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1968:	6f697250 	svcvs	0x00697250
    196c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1970:	756f7247 	strbvc	r7, [pc, #-583]!	; 1731 <_Min_Stack_Size+0x1331>
    1974:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
    1978:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    197c:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1980:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1984:	74634174 	strbtvc	r4, [r3], #-372	; 0xfffffe8c
    1988:	00657669 	rsbeq	r7, r5, r9, ror #12
    198c:	53445f5f 	movtpl	r5, #20319	; 0x4f5f
    1990:	5f5f0042 	svcpl	0x005f0042
    1994:	4349564e 	movtmi	r5, #38478	; 0x964e
    1998:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    199c:	6f697250 	svcvs	0x00697250
    19a0:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    19a4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    19a8:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    19ac:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
    19b0:	6e655074 	mcrvs	0, 3, r5, cr5, cr4, {3}
    19b4:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    19b8:	00515249 	subseq	r5, r1, r9, asr #4
    19bc:	50627553 	rsbpl	r7, r2, r3, asr r5
    19c0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    19c4:	42797469 	rsbsmi	r7, r9, #1761607680	; 0x69000000
    19c8:	00737469 	rsbseq	r7, r3, r9, ror #8
    19cc:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    19d0:	70007265 	andvc	r7, r0, r5, ror #4
    19d4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    19d8:	67797469 	ldrbvs	r7, [r9, -r9, ror #8]!
    19dc:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    19e0:	42414900 	submi	r4, r1, #0, 18
    19e4:	5f5f0052 	svcpl	0x005f0052
    19e8:	4349564e 	movtmi	r5, #38478	; 0x964e
    19ec:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    19f0:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    19f4:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    19f8:	2e005152 	mcrcs	1, 0, r5, cr0, cr2, {2}
    19fc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1a00:	2f2e2e2f 	svccs	0x002e2e2f
    1a04:	642f2e2e 	strtvs	r2, [pc], #-3630	; 1a0c <_Min_Stack_Size+0x160c>
    1a08:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1a0c:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    1a10:	2f706968 	svccs	0x00706968
    1a14:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1a18:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1a1c:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    1a20:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1a24:	5f787834 	svcpl	0x00787834
    1a28:	5f4c4148 	svcpl	0x004c4148
    1a2c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1a30:	732f7265 			; <UNDEFINED> instruction: 0x732f7265
    1a34:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1a38:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1a3c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1a40:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1a44:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    1a48:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    1a4c:	564e0063 	strbpl	r0, [lr], -r3, rrx
    1a50:	455f4349 	ldrbmi	r4, [pc, #-841]	; 170f <_Min_Stack_Size+0x130f>
    1a54:	646f636e 	strbtvs	r6, [pc], #-878	; 1a5c <_Min_Stack_Size+0x165c>
    1a58:	69725065 	ldmdbvs	r2!, {r0, r2, r5, r6, ip, lr}^
    1a5c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1a60:	43490079 	movtmi	r0, #36985	; 0x9079
    1a64:	4e005245 	cdpmi	2, 0, cr5, cr0, cr5, {2}
    1a68:	5f434956 	svcpl	0x00434956
    1a6c:	6f636544 	svcvs	0x00636544
    1a70:	72506564 	subsvc	r6, r0, #100, 10	; 0x19000000
    1a74:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1a78:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    1a7c:	535f4c41 	cmppl	pc, #16640	; 0x4100
    1a80:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
    1a84:	435f4b43 	cmpmi	pc, #68608	; 0x10c00
    1a88:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1a8c:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1a90:	5f4c4148 	svcpl	0x004c4148
    1a94:	4349564e 	movtmi	r5, #38478	; 0x964e
    1a98:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
    1a9c:	526d6574 	rsbpl	r6, sp, #116, 10	; 0x1d000000
    1aa0:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1aa4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1aa8:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    1aac:	4b434954 	blmi	10d4004 <_Min_Stack_Size+0x10d3c04>
    1ab0:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    1ab4:	00676966 	rsbeq	r6, r7, r6, ror #18
    1ab8:	52627553 	rsbpl	r7, r2, #348127232	; 0x14c00000
    1abc:	6f696765 	svcvs	0x00696765
    1ac0:	7369446e 	cmnvc	r9, #1845493760	; 0x6e000000
    1ac4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1ac8:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
    1acc:	564e0052 			; <UNDEFINED> instruction: 0x564e0052
    1ad0:	545f4349 	ldrbpl	r4, [pc], #-841	; 1ad8 <_Min_Stack_Size+0x16d8>
    1ad4:	00657079 	rsbeq	r7, r5, r9, ror r0
    1ad8:	5f4c4148 	svcpl	0x004c4148
    1adc:	4349564e 	movtmi	r5, #38478	; 0x964e
    1ae0:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1ae4:	6f697250 	svcvs	0x00697250
    1ae8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1aec:	756f7247 	strbvc	r7, [pc, #-583]!	; 18ad <_Min_Stack_Size+0x14ad>
    1af0:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
    1af4:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    1af8:	5f434956 	svcpl	0x00434956
    1afc:	50746553 	rsbspl	r6, r4, r3, asr r5
    1b00:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1b04:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    1b08:	5f5f0051 	svcpl	0x005f0051
    1b0c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1b10:	616e455f 	cmnvs	lr, pc, asr r5
    1b14:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    1b18:	52005152 	andpl	r5, r0, #-2147483628	; 0x80000014
    1b1c:	00524142 	subseq	r4, r2, r2, asr #2
    1b20:	6f697250 	svcvs	0x00697250
    1b24:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1b28:	756f7247 	strbvc	r7, [pc, #-583]!	; 18e9 <_Min_Stack_Size+0x14e9>
    1b2c:	706d5470 	rsbvc	r5, sp, r0, ror r4
    1b30:	51524900 	cmppl	r2, r0, lsl #18
    1b34:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b38:	4d006570 	cfstr32mi	mvfx6, [r0, #-448]	; 0xfffffe40
    1b3c:	545f5550 	ldrbpl	r5, [pc], #-1360	; 1b44 <_Min_Stack_Size+0x1744>
    1b40:	00657079 	rsbeq	r7, r5, r9, ror r0
    1b44:	5f4c4148 	svcpl	0x004c4148
    1b48:	4349564e 	movtmi	r5, #38478	; 0x964e
    1b4c:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1b50:	6f697250 	svcvs	0x00697250
    1b54:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1b58:	63695400 	cmnvs	r9, #0, 8
    1b5c:	754e736b 	strbvc	r7, [lr, #-875]	; 0xfffffc95
    1b60:	5200626d 	andpl	r6, r0, #-805306362	; 0xd0000006
    1b64:	00525341 	subseq	r5, r2, r1, asr #6
    1b68:	5f4c4148 	svcpl	0x004c4148
    1b6c:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    1b70:	5f4b4349 	svcpl	0x004b4349
    1b74:	534b4c43 	movtpl	r4, #48195	; 0xbc43
    1b78:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    1b7c:	6e6f4365 	cdpvs	3, 6, cr4, cr15, cr5, {3}
    1b80:	00676966 	rsbeq	r6, r7, r6, ror #18
    1b84:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    1b88:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1b8c:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xfffff2a1
    1b90:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    1b94:	52676966 	rsbpl	r6, r7, #1671168	; 0x198000
    1b98:	6f696765 	svcvs	0x00696765
    1b9c:	7953006e 	ldmdbvc	r3, {r1, r2, r3, r5, r6}^
    1ba0:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    1ba4:	6f435f6b 	svcvs	0x00435f6b
    1ba8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1bac:	495f5f00 	ldmdbmi	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    1bb0:	48004253 	stmdami	r0, {r0, r1, r4, r6, r9, lr}
    1bb4:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1bb8:	5f434956 	svcpl	0x00434956
    1bbc:	50746547 	rsbspl	r6, r4, r7, asr #10
    1bc0:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1bc4:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    1bc8:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    1bcc:	00676e69 	rsbeq	r6, r7, r9, ror #28
    1bd0:	5f4c4148 	svcpl	0x004c4148
    1bd4:	5f55504d 	svcpl	0x0055504d
    1bd8:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    1bdc:	5f00656c 	svcpl	0x0000656c
    1be0:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1be4:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1be8:	74634174 	strbtvc	r4, [r3], #-372	; 0xfffffe8c
    1bec:	00657669 	rsbeq	r7, r5, r9, ror #12
    1bf0:	4d445f5f 	stclmi	15, cr5, [r4, #-380]	; 0xfffffe84
    1bf4:	5f5f0042 	svcpl	0x005f0042
    1bf8:	4349564e 	movtmi	r5, #38478	; 0x964e
    1bfc:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1c00:	6f697250 	svcvs	0x00697250
    1c04:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    1c08:	756f7247 	strbvc	r7, [pc, #-583]!	; 19c9 <_Min_Stack_Size+0x15c9>
    1c0c:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
    1c10:	45535200 	ldrbmi	r5, [r3, #-512]	; 0xfffffe00
    1c14:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    1c18:	54530031 	ldrbpl	r0, [r3], #-49	; 0xffffffcf
    1c1c:	49005249 	stmdbmi	r0, {r0, r3, r6, r9, ip, lr}
    1c20:	61685373 	smcvs	34099	; 0x8533
    1c24:	62616572 	rsbvs	r6, r1, #478150656	; 0x1c800000
    1c28:	4800656c 	stmdami	r0, {r2, r3, r5, r6, r8, sl, sp, lr}
    1c2c:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1c30:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1c34:	43507465 	cmpmi	r0, #1694498816	; 0x65000000
    1c38:	46314b4c 	ldrtmi	r4, [r1], -ip, asr #22
    1c3c:	00716572 	rsbseq	r6, r1, r2, ror r5
    1c40:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    1c44:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1c48:	75007375 	strvc	r7, [r0, #-885]	; 0xfffffc8b
    1c4c:	36746e69 	ldrbtcc	r6, [r4], -r9, ror #28
    1c50:	00745f34 	rsbseq	r5, r4, r4, lsr pc
    1c54:	63727770 	cmnvs	r2, #112, 14	; 0x1c00000
    1c58:	68636b6c 	stmdavs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
    1c5c:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
    1c60:	43520064 	cmpmi	r2, #100	; 0x64
    1c64:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    1c68:	7669444f 	strbtvc	r4, [r9], -pc, asr #8
    1c6c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c70:	4343525f 	movtmi	r5, #12895	; 0x325f
    1c74:	616e455f 	cmnvs	lr, pc, asr r5
    1c78:	43656c62 	cmnmi	r5, #25088	; 0x6200
    1c7c:	73005353 	movwvc	r5, #851	; 0x353
    1c80:	6c637379 	stclvs	3, cr7, [r3], #-484	; 0xfffffe1c
    1c84:	666b636f 	strbtvs	r6, [fp], -pc, ror #6
    1c88:	00716572 	rsbseq	r6, r1, r2, ror r5
    1c8c:	5f4c4148 	svcpl	0x004c4148
    1c90:	5f434352 	svcpl	0x00434352
    1c94:	48746547 	ldmdami	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    1c98:	464b4c43 	strbmi	r4, [fp], -r3, asr #24
    1c9c:	00716572 	rsbseq	r6, r1, r2, ror r5
    1ca0:	5f4c4148 	svcpl	0x004c4148
    1ca4:	5f434352 	svcpl	0x00434352
    1ca8:	61736944 	cmnvs	r3, r4, asr #18
    1cac:	43656c62 	cmnmi	r5, #25088	; 0x6200
    1cb0:	2e005353 	mcrcs	3, 0, r5, cr0, cr3, {2}
    1cb4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1cb8:	2f2e2e2f 	svccs	0x002e2e2f
    1cbc:	642f2e2e 	strtvs	r2, [pc], #-3630	; 1cc4 <_Min_Stack_Size+0x18c4>
    1cc0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1cc4:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    1cc8:	2f706968 	svccs	0x00706968
    1ccc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1cd0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1cd4:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    1cd8:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1cdc:	5f787834 	svcpl	0x00787834
    1ce0:	5f4c4148 	svcpl	0x004c4148
    1ce4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1ce8:	732f7265 			; <UNDEFINED> instruction: 0x732f7265
    1cec:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1cf0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1cf4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1cf8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1cfc:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    1d00:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1d04:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1d08:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 1c04 <_Min_Stack_Size+0x1804>
    1d0c:	6f434f43 	svcvs	0x00434f43
    1d10:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1d14:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d18:	4343525f 	movtmi	r5, #12895	; 0x325f
    1d1c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1d20:	4b4c4350 	blmi	1312a68 <_Min_Stack_Size+0x1312668>
    1d24:	65724632 	ldrbvs	r4, [r2, #-1586]!	; 0xfffff9ce
    1d28:	6c700071 	ldclvs	0, cr0, [r0], #-452	; 0xfffffe3c
    1d2c:	6f635f6c 	svcvs	0x00635f6c
    1d30:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1d34:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d38:	4343525f 	movtmi	r5, #12895	; 0x325f
    1d3c:	5353435f 	cmppl	r3, #2080374785	; 0x7c000001
    1d40:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1d44:	6b636162 	blvs	18da2d4 <_Min_Stack_Size+0x18d9ed4>
    1d48:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d4c:	4343525f 	movtmi	r5, #12895	; 0x325f
    1d50:	63734f5f 	cmnvs	r3, #380	; 0x17c
    1d54:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1d58:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    1d5c:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1d60:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1d64:	79537465 	ldmdbvc	r3, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1d68:	6f6c4373 	svcvs	0x006c4373
    1d6c:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    1d70:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    1d74:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1d78:	445f4343 	ldrbmi	r4, [pc], #-835	; 1d80 <_Min_Stack_Size+0x1980>
    1d7c:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1d80:	43520074 	cmpmi	r2, #116	; 0x74
    1d84:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    1d88:	756f534f 	strbvc	r5, [pc, #-847]!	; 1a41 <_Min_Stack_Size+0x1641>
    1d8c:	00656372 	rsbeq	r6, r5, r2, ror r3
    1d90:	5f4c4148 	svcpl	0x004c4148
    1d94:	5f434352 	svcpl	0x00434352
    1d98:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    1d9c:	6b636f6c 	blvs	18ddb54 <_Min_Stack_Size+0x18dd754>
    1da0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1da4:	70006769 	andvc	r6, r0, r9, ror #14
    1da8:	74614c46 	strbtvc	r4, [r1], #-3142	; 0xfffff3ba
    1dac:	79636e65 	stmdbvc	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    1db0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1db4:	4343525f 	movtmi	r5, #12895	; 0x325f
    1db8:	6f6c435f 	svcvs	0x006c435f
    1dbc:	6f436b63 	svcvs	0x00436b63
    1dc0:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1dc4:	43435200 	movtmi	r5, #12800	; 0x3200
    1dc8:	4f434d5f 	svcmi	0x00434d5f
    1dcc:	41480078 	hvcmi	32776	; 0x8008
    1dd0:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1dd4:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1dd8:	63734f74 	cmnvs	r3, #116, 30	; 0x1d0
    1ddc:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1de0:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    1de4:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1de8:	4e5f4343 	cdpmi	3, 5, cr4, cr15, cr3, {2}
    1dec:	495f494d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1df0:	61485152 	cmpvs	r8, r2, asr r1
    1df4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1df8:	41480072 	hvcmi	32770	; 0x8002
    1dfc:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1e00:	52495f41 	subpl	r5, r9, #260	; 0x104
    1e04:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    1e08:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1e0c:	63725300 	cmnvs	r2, #0, 6
    1e10:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1e14:	00737365 	rsbseq	r7, r3, r5, ror #6
    1e18:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1e1c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1e20:	2f2e2e2f 	svccs	0x002e2e2f
    1e24:	76697264 	strbtvc	r7, [r9], -r4, ror #4
    1e28:	2f737265 	svccs	0x00737265
    1e2c:	70696863 	rsbvc	r6, r9, r3, ror #16
    1e30:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1e34:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1e38:	532f7878 			; <UNDEFINED> instruction: 0x532f7878
    1e3c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1e40:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1e44:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1e48:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1e4c:	2f726576 	svccs	0x00726576
    1e50:	2f637273 	svccs	0x00637273
    1e54:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1e58:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1e5c:	61685f78 	smcvs	34296	; 0x85f8
    1e60:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
    1e64:	00632e61 	rsbeq	r2, r3, r1, ror #28
    1e68:	61746144 	cmnvs	r4, r4, asr #2
    1e6c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    1e70:	44006874 	strmi	r6, [r0], #-2164	; 0xfffff78c
    1e74:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    1e78:	6b636568 	blvs	18db420 <_Min_Stack_Size+0x18db020>
    1e7c:	6f666946 	svcvs	0x00666946
    1e80:	61726150 	cmnvs	r2, r0, asr r1
    1e84:	4148006d 	cmpmi	r8, sp, rrx
    1e88:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1e8c:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1e90:	4d5f5245 	lfmmi	f5, 2, [pc, #-276]	; 1d84 <_Min_Stack_Size+0x1984>
    1e94:	4c504331 	mrrcmi	3, 3, r4, r0, cr1
    1e98:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1e9c:	0044495f 	subeq	r4, r4, pc, asr r9
    1ea0:	5f4c4148 	svcpl	0x004c4148
    1ea4:	5f414d44 	svcpl	0x00414d44
    1ea8:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    1eac:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    1eb0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1eb8 <_Min_Stack_Size+0x1ab8>
    1eb4:	475f414d 	ldrbmi	r4, [pc, -sp, asr #2]
    1eb8:	74537465 	ldrbvc	r7, [r3], #-1125	; 0xfffffb9b
    1ebc:	00657461 	rsbeq	r7, r5, r1, ror #8
    1ec0:	5f4c4148 	svcpl	0x004c4148
    1ec4:	5f414d44 	svcpl	0x00414d44
    1ec8:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1ecc:	4c4c415f 	stfmie	f4, [ip], {95}	; 0x5f
    1ed0:	5f42435f 	svcpl	0x0042435f
    1ed4:	43004449 	movwmi	r4, #1097	; 0x449
    1ed8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1edc:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    1ee0:	65520044 	ldrbvs	r0, [r2, #-68]	; 0xffffffbc
    1ee4:	76726573 			; <UNDEFINED> instruction: 0x76726573
    1ee8:	00306465 	eorseq	r6, r0, r5, ror #8
    1eec:	5f4c4148 	svcpl	0x004c4148
    1ef0:	5f414d44 	svcpl	0x00414d44
    1ef4:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    1ef8:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    1efc:	74734400 	ldrbtvc	r4, [r3], #-1024	; 0xfffffc00
    1f00:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1f04:	00737365 	rsbseq	r7, r3, r5, ror #6
    1f08:	5f4c4148 	svcpl	0x004c4148
    1f0c:	5f414d44 	svcpl	0x00414d44
    1f10:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1f14:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1f18:	4c504346 	mrrcmi	3, 4, r4, r0, cr6
    1f1c:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1f20:	0044495f 	subeq	r4, r4, pc, asr r9
    1f24:	5f4c4148 	svcpl	0x004c4148
    1f28:	5f414d44 	svcpl	0x00414d44
    1f2c:	464c4148 	strbmi	r4, [ip], -r8, asr #2
    1f30:	4152545f 	cmpmi	r2, pc, asr r4
    1f34:	4546534e 	strbmi	r5, [r6, #-846]	; 0xfffffcb2
    1f38:	41480052 	qdaddmi	r0, r2, r8
    1f3c:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1f40:	654c5f41 	strbvs	r5, [ip, #-3905]	; 0xfffff0bf
    1f44:	436c6576 	cmnmi	ip, #494927872	; 0x1d800000
    1f48:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    1f4c:	54657465 	strbtpl	r7, [r5], #-1125	; 0xfffffb9b
    1f50:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1f54:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1f58:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1f60 <_Min_Stack_Size+0x1b60>
    1f5c:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    1f60:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1f64:	496b6361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, sp, lr}^
    1f68:	70795444 	rsbsvc	r5, r9, r4, asr #8
    1f6c:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1f70:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1f74:	414d445f 	cmpmi	sp, pc, asr r4
    1f78:	6174535f 	cmnvs	r4, pc, asr r3
    1f7c:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    1f80:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1f88 <_Min_Stack_Size+0x1b88>
    1f84:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1f88:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1f8c:	5f4c4148 	svcpl	0x004c4148
    1f90:	5f414d44 	svcpl	0x00414d44
    1f94:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1f98:	4c50435f 	mrrcmi	3, 5, r4, r0, cr15
    1f9c:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1fa0:	0044495f 	subeq	r4, r4, pc, asr r9
    1fa4:	5f4c4148 	svcpl	0x004c4148
    1fa8:	5f414d44 	svcpl	0x00414d44
    1fac:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1fb0:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    1fb4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1fb8:	414d445f 	cmpmi	sp, pc, asr r4
    1fbc:	6c6f505f 	stclvs	0, cr5, [pc], #-380	; 1e48 <_Min_Stack_Size+0x1a48>
    1fc0:	726f466c 	rsbvc	r4, pc, #108, 12	; 0x6c00000
    1fc4:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    1fc8:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
    1fcc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1fd0:	414d445f 	cmpmi	sp, pc, asr r4
    1fd4:	6f62415f 	svcvs	0x0062415f
    1fd8:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    1fdc:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1fe4 <_Min_Stack_Size+0x1be4>
    1fe0:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1fe4:	5f524546 	svcpl	0x00524546
    1fe8:	4f525245 	svcmi	0x00525245
    1fec:	42435f52 	submi	r5, r3, #328	; 0x148
    1ff0:	0044495f 	subeq	r4, r4, pc, asr r9
    1ff4:	5f414d44 	svcpl	0x00414d44
    1ff8:	636c6143 	cmnvs	ip, #-1073741808	; 0xc0000010
    1ffc:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    2000:	42646e41 	rsbmi	r6, r4, #1040	; 0x410
    2004:	68737469 	ldmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    2008:	00746669 	rsbseq	r6, r4, r9, ror #12
    200c:	6b73616d 	blvs	1cda5c8 <_Min_Stack_Size+0x1cda1c8>
    2010:	6c70635f 	ldclvs	3, cr6, [r0], #-380	; 0xfffffe84
    2014:	76656c74 			; <UNDEFINED> instruction: 0x76656c74
    2018:	48006c65 	stmdami	r0, {r0, r2, r5, r6, sl, fp, sp, lr}
    201c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2024 <_Min_Stack_Size+0x1c24>
    2020:	465f414d 	ldrbmi	r4, [pc], -sp, asr #2
    2024:	5f4c4c55 	svcpl	0x004c4c55
    2028:	4e415254 	mcrmi	2, 2, r5, cr1, cr4, {2}
    202c:	52454653 	subpl	r4, r5, #87031808	; 0x5300000
    2030:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2034:	414d445f 	cmpmi	sp, pc, asr r4
    2038:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    203c:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    2040:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    2044:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2048:	6f43006b 	svcvs	0x0043006b
    204c:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    2050:	654c6574 	strbvs	r6, [ip, #-1396]	; 0xfffffa8c
    2054:	006c6576 	rsbeq	r6, ip, r6, ror r5
    2058:	65727473 	ldrbvs	r7, [r2, #-1139]!	; 0xfffffb8d
    205c:	6e5f6d61 	cdpvs	13, 5, cr6, cr15, cr1, {3}
    2060:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2064:	6d740072 	ldclvs	0, cr0, [r4, #-456]!	; 0xfffffe38
    2068:	72736970 	rsbsvc	r6, r3, #112, 18	; 0x1c0000
    206c:	414d4400 	cmpmi	sp, r0, lsl #8
    2070:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    2074:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    2078:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    207c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2084 <_Min_Stack_Size+0x1c84>
    2080:	475f414d 	ldrbmi	r4, [pc, -sp, asr #2]
    2084:	72457465 	subvc	r7, r5, #1694498816	; 0x65000000
    2088:	00726f72 	rsbseq	r6, r2, r2, ror pc
    208c:	6c614370 	stclvs	3, cr4, [r1], #-448	; 0xfffffe40
    2090:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2094:	6572006b 	ldrbvs	r0, [r2, #-107]!	; 0xffffff95
    2098:	49007367 	stmdbmi	r0, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
    209c:	00524346 	subseq	r4, r2, r6, asr #6
    20a0:	5f4c4148 	svcpl	0x004c4148
    20a4:	5f414d44 	svcpl	0x00414d44
    20a8:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    20ac:	48314d5f 	ldmdami	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}
    20b0:	43464c41 	movtmi	r4, #27713	; 0x6c41
    20b4:	5f544c50 	svcpl	0x00544c50
    20b8:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    20bc:	41480044 	cmpmi	r8, r4, asr #32
    20c0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    20c4:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    20c8:	415f5245 	cmpmi	pc, r5, asr #4
    20cc:	54524f42 	ldrbpl	r4, [r2], #-3906	; 0xfffff0be
    20d0:	5f42435f 	svcpl	0x0042435f
    20d4:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    20d8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 20e0 <_Min_Stack_Size+0x1ce0>
    20dc:	555f414d 	ldrbpl	r4, [pc, #-333]	; 1f97 <_Min_Stack_Size+0x1b97>
    20e0:	6765526e 	strbvs	r5, [r5, -lr, ror #4]!
    20e4:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    20e8:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    20ec:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    20f0:	6c66006b 	stclvs	0, cr0, [r6], #-428	; 0xfffffe54
    20f4:	69426761 	stmdbvs	r2, {r0, r5, r6, r8, r9, sl, sp, lr}^
    20f8:	69687374 	stmdbvs	r8!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}^
    20fc:	664f7466 	strbvs	r7, [pc], -r6, ror #8
    2100:	74657366 	strbtvc	r7, [r5], #-870	; 0xfffffc9a
    2104:	414d4400 	cmpmi	sp, r0, lsl #8
    2108:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    210c:	65525f65 	ldrbvs	r5, [r2, #-3941]	; 0xfffff09b
    2110:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    2114:	00737265 	rsbseq	r7, r3, r5, ror #4
    2118:	616d6468 	cmnvs	sp, r8, ror #8
    211c:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    2120:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    2124:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    2128:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    212c:	4148006e 	cmpmi	r8, lr, rrx
    2130:	50475f4c 	subpl	r5, r7, ip, asr #30
    2134:	525f4f49 	subspl	r4, pc, #292	; 0x124
    2138:	50646165 	rsbpl	r6, r4, r5, ror #2
    213c:	48006e69 	stmdami	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
    2140:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    2144:	5f4f4950 	svcpl	0x004f4950
    2148:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    214c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    2150:	49505f4f 	ldmdbmi	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2154:	45525f4e 	ldrbmi	r5, [r2, #-3918]	; 0xfffff0b2
    2158:	00544553 	subseq	r4, r4, r3, asr r5
    215c:	5f4c4148 	svcpl	0x004c4148
    2160:	4f495047 	svcmi	0x00495047
    2164:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
    2168:	6e69506b 	cdpvs	0, 6, cr5, cr9, cr11, {3}
    216c:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    2170:	6f690070 	svcvs	0x00690070
    2174:	69736f70 	ldmdbvs	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2178:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    217c:	4d454d00 	stclmi	13, cr4, [r5, #-0]
    2180:	00504d52 	subseq	r4, r0, r2, asr sp
    2184:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    2188:	48005243 	stmdami	r0, {r0, r1, r6, r9, ip, lr}
    218c:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    2190:	5f4f4950 	svcpl	0x004f4950
    2194:	67676f54 			; <UNDEFINED> instruction: 0x67676f54
    2198:	6950656c 	ldmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}^
    219c:	5047006e 	subpl	r0, r7, lr, rrx
    21a0:	505f4f49 	subspl	r4, pc, r9, asr #30
    21a4:	535f4e49 	cmppl	pc, #1168	; 0x490
    21a8:	45005445 	strmi	r5, [r0, #-1093]	; 0xfffffbbb
    21ac:	5f495458 	svcpl	0x00495458
    21b0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    21b4:	00666544 	rsbeq	r6, r6, r4, asr #10
    21b8:	73746962 	cmnvc	r4, #1605632	; 0x188000
    21bc:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    21c0:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    21c4:	2f2e2e2f 	svccs	0x002e2e2f
    21c8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    21cc:	72642f2e 	rsbvc	r2, r4, #46, 30	; 0xb8
    21d0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    21d4:	68632f73 	stmdavs	r3!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    21d8:	732f7069 			; <UNDEFINED> instruction: 0x732f7069
    21dc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    21e0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    21e4:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    21e8:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    21ec:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    21f0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 21f8 <_Min_Stack_Size+0x1df8>
    21f4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    21f8:	72732f72 	rsbsvc	r2, r3, #456	; 0x1c8
    21fc:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    2200:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    2204:	5f787834 	svcpl	0x00787834
    2208:	5f6c6168 	svcpl	0x006c6168
    220c:	6f697067 	svcvs	0x00697067
    2210:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    2214:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    2218:	5f4f4950 	svcpl	0x004f4950
    221c:	74697257 	strbtvc	r7, [r9], #-599	; 0xfffffda9
    2220:	6e695065 	cdpvs	0, 6, cr5, cr9, cr5, {3}
    2224:	53544600 	cmppl	r4, #0, 12
    2228:	41480052 	qdaddmi	r0, r2, r8
    222c:	50475f4c 	subpl	r5, r7, ip, asr #30
    2230:	455f4f49 	ldrbmi	r4, [pc, #-3913]	; 12ef <_Min_Stack_Size+0xeef>
    2234:	5f495458 	svcpl	0x00495458
    2238:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
    223c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2240:	69007265 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2244:	7275636f 	rsbsvc	r6, r5, #-1140850687	; 0xbc000001
    2248:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    224c:	53595300 	cmppl	r9, #0, 6
    2250:	5f474643 	svcpl	0x00474643
    2254:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    2258:	00666544 	rsbeq	r6, r6, r4, asr #10
    225c:	5f4c4148 	svcpl	0x004c4148
    2260:	4f495047 	svcmi	0x00495047
    2264:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2268:	0074696e 	rsbseq	r6, r4, lr, ror #18
    226c:	52535452 	subspl	r5, r3, #1375731712	; 0x52000000
    2270:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    2274:	4300784f 	movwmi	r7, #2127	; 0x84f
    2278:	5243504d 	subpl	r5, r3, #77	; 0x4d
    227c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2280:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    2284:	58455f4f 	stmdapl	r5, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2288:	435f4954 	cmpmi	pc, #84, 18	; 0x150000
    228c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    2290:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2294:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
    2298:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
    229c:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    22a0:	69505f4f 	ldmdbvs	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    22a4:	6174536e 	cmnvs	r4, lr, ror #6
    22a8:	53006574 	movwpl	r6, #1396	; 0x574
    22ac:	52454957 	subpl	r4, r5, #1425408	; 0x15c000
    22b0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    22b4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    22b8:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    22bc:	75615041 	strbvc	r5, [r1, #-65]!	; 0xffffffbf
    22c0:	70006573 	andvc	r6, r0, r3, ror r5
    22c4:	61746164 	cmnvs	r4, r4, ror #2
    22c8:	74696238 	strbtvc	r6, [r9], #-568	; 0xfffffdc8
    22cc:	41480073 	hvcmi	32771	; 0x8003
    22d0:	494c5f4c 	stmdbmi	ip, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    22d4:	65535f4e 	ldrbvs	r5, [r3, #-3918]	; 0xfffff0b2
    22d8:	7242646e 	subvc	r6, r2, #1845493760	; 0x6e000000
    22dc:	006b6165 	rsbeq	r6, fp, r5, ror #2
    22e0:	5f4c4148 	svcpl	0x004c4148
    22e4:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
    22e8:	6f725069 	svcvs	0x00725069
    22ec:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    22f0:	495f726f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    22f4:	0074696e 	rsbseq	r6, r4, lr, ror #18
    22f8:	5f4c4148 	svcpl	0x004c4148
    22fc:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    2300:	6c707544 	cfldr64vs	mvdx7, [r0], #-272	; 0xfffffef0
    2304:	455f7865 	ldrbmi	r7, [pc, #-2149]	; 1aa7 <_Min_Stack_Size+0x16a7>
    2308:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    230c:	61725465 	cmnvs	r2, r5, ror #8
    2310:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    2314:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
    2318:	33726300 	cmncc	r2, #0, 6
    231c:	00737469 	rsbseq	r7, r3, r9, ror #8
    2320:	5f4c4148 	svcpl	0x004c4148
    2324:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2328:	525f7845 	subspl	r7, pc, #4521984	; 0x450000
    232c:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    2330:	6143746e 	cmpvs	r3, lr, ror #8
    2334:	61626c6c 	cmnvs	r2, ip, ror #24
    2338:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    233c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 1703 <_Min_Stack_Size+0x1303>
    2340:	5f545241 	svcpl	0x00545241
    2344:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    2348:	63655274 	cmnvs	r5, #116, 4	; 0x40000007
    234c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    2350:	52415500 	subpl	r5, r1, #0, 10
    2354:	6e455f54 	mcrvs	15, 2, r5, cr5, cr4, {2}
    2358:	54785264 	ldrbtpl	r5, [r8], #-612	; 0xfffffd9c
    235c:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    2360:	00726566 	rsbseq	r6, r2, r6, ror #10
    2364:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2368:	646e455f 	strbtvs	r4, [lr], #-1375	; 0xfffffaa1
    236c:	72547854 	subsvc	r7, r4, #84, 16	; 0x540000
    2370:	66736e61 	ldrbtvs	r6, [r3], -r1, ror #28
    2374:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2378:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 173f <_Min_Stack_Size+0x133f>
    237c:	5f545241 	svcpl	0x00545241
    2380:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    2384:	63655274 	cmnvs	r5, #116, 4	; 0x40000007
    2388:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    238c:	0054495f 	subseq	r4, r4, pc, asr r9
    2390:	5f4c4148 	svcpl	0x004c4148
    2394:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
    2398:	6f725069 	svcvs	0x00725069
    239c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    23a0:	455f726f 	ldrbmi	r7, [pc, #-623]	; 2139 <_Min_Stack_Size+0x1d39>
    23a4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    23a8:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    23ac:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    23b0:	6f624100 	svcvs	0x00624100
    23b4:	70437472 	subvc	r7, r3, r2, ror r4
    23b8:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    23bc:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 1783 <_Min_Stack_Size+0x1383>
    23c0:	5f545241 	svcpl	0x00545241
    23c4:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    23c8:	63655274 	cmnvs	r5, #116, 4	; 0x40000007
    23cc:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    23d0:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    23d4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    23d8:	6b636162 	blvs	18da968 <_Min_Stack_Size+0x18da568>
    23dc:	616c4600 	cmnvs	ip, r0, lsl #12
    23e0:	64700067 	ldrbtvs	r0, [r0], #-103	; 0xffffff99
    23e4:	31617461 	cmncc	r1, r1, ror #8
    23e8:	74696236 	strbtvc	r6, [r9], #-566	; 0xfffffdca
    23ec:	41480073 	hvcmi	32771	; 0x8003
    23f0:	41555f4c 	cmpmi	r5, ip, asr #30
    23f4:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    23f8:	6c614878 	stclvs	8, cr4, [r1], #-480	; 0xfffffe20
    23fc:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
    2400:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    2404:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2408:	6954006b 	ldmdbvs	r4, {r0, r1, r3, r5, r6}^
    240c:	74736b63 	ldrbtvc	r6, [r3], #-2915	; 0xfffff49d
    2410:	00747261 	rsbseq	r7, r4, r1, ror #4
    2414:	5f4c4148 	svcpl	0x004c4148
    2418:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    241c:	6f62415f 	svcvs	0x0062415f
    2420:	72547472 	subsvc	r7, r4, #1912602624	; 0x72000000
    2424:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    2428:	70007469 	andvc	r7, r0, r9, ror #8
    242c:	61746144 	cmnvs	r4, r4, asr #2
    2430:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2434:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    2438:	52495f54 	subpl	r5, r9, #84, 30	; 0x150
    243c:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
    2440:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    2444:	31726300 	cmncc	r2, r0, lsl #6
    2448:	00737469 	rsbseq	r7, r3, r9, ror #8
    244c:	5f4c4148 	svcpl	0x004c4148
    2450:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2454:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2458:	0074696e 	rsbseq	r6, r4, lr, ror #18
    245c:	5f4c4148 	svcpl	0x004c4148
    2460:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2464:	6172545f 	cmnvs	r2, pc, asr r4
    2468:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    246c:	4d445f74 	stclmi	15, cr5, [r4, #-464]	; 0xfffffe30
    2470:	61570041 	cmpvs	r7, r1, asr #32
    2474:	7055656b 	subsvc	r6, r5, fp, ror #10
    2478:	6874654d 	ldmdavs	r4!, {r0, r2, r3, r6, r8, sl, sp, lr}^
    247c:	4200646f 	andmi	r6, r0, #1862270976	; 0x6f000000
    2480:	6b616572 	blvs	185ba50 <_Min_Stack_Size+0x185b650>
    2484:	65746544 	ldrbvs	r6, [r4, #-1348]!	; 0xfffffabc
    2488:	654c7463 	strbvs	r7, [ip, #-1123]	; 0xfffffb9d
    248c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2490:	52415500 	subpl	r5, r1, #0, 10
    2494:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
    2498:	5f747261 	svcpl	0x00747261
    249c:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    24a0:	5f657669 	svcpl	0x00657669
    24a4:	55005449 	strpl	r5, [r0, #-1097]	; 0xfffffbb7
    24a8:	5f545241 	svcpl	0x00545241
    24ac:	43746553 	cmnmi	r4, #348127232	; 0x14c00000
    24b0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    24b4:	41550067 	cmpmi	r5, r7, rrx
    24b8:	445f5452 	ldrbmi	r5, [pc], #-1106	; 24c0 <_Min_Stack_Size+0x20c0>
    24bc:	7852414d 	ldmdavc	r2, {r0, r2, r3, r6, r8, lr}^
    24c0:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    24c4:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    24c8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    24cc:	4148006b 	cmpmi	r8, fp, rrx
    24d0:	41555f4c 	cmpmi	r5, ip, asr #30
    24d4:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    24d8:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    24dc:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    24e0:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    24e4:	0054495f 	subseq	r4, r4, pc, asr r9
    24e8:	5f4c4148 	svcpl	0x004c4148
    24ec:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    24f0:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    24f4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    24f8:	41480065 	cmpmi	r8, r5, rrx
    24fc:	41555f4c 	cmpmi	r5, ip, asr #30
    2500:	545f5452 	ldrbpl	r5, [pc], #-1106	; 2508 <_Min_Stack_Size+0x2108>
    2504:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    2508:	0074696d 	rsbseq	r6, r4, sp, ror #18
    250c:	6f727265 	svcvs	0x00727265
    2510:	616c6672 	smcvs	50786	; 0xc662
    2514:	48007367 	stmdami	r0, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
    2518:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 18df <_Min_Stack_Size+0x14df>
    251c:	5f545241 	svcpl	0x00545241
    2520:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    2524:	52415500 	subpl	r5, r1, #0, 10
    2528:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
    252c:	5f747261 	svcpl	0x00747261
    2530:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    2534:	5f657669 	svcpl	0x00657669
    2538:	00414d44 	subeq	r4, r1, r4, asr #26
    253c:	5f4c4148 	svcpl	0x004c4148
    2540:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2544:	4378545f 	cmnmi	r8, #1593835520	; 0x5f000000
    2548:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    254c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    2550:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2554:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2558:	414d445f 	cmpmi	sp, pc, asr r4
    255c:	62417854 	subvs	r7, r1, #84, 16	; 0x540000
    2560:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    2564:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    2568:	006b6361 	rsbeq	r6, fp, r1, ror #6
    256c:	66727369 	ldrbtvs	r7, [r2], -r9, ror #6
    2570:	7367616c 	cmnvc	r7, #108, 2
    2574:	52415500 	subpl	r5, r1, #0, 10
    2578:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    257c:	72724541 	rsbsvc	r4, r2, #272629760	; 0x10400000
    2580:	2e00726f 	cdpcs	2, 0, cr7, cr0, cr15, {3}
    2584:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2588:	2f2e2e2f 	svccs	0x002e2e2f
    258c:	642f2e2e 	strtvs	r2, [pc], #-3630	; 2594 <_Min_Stack_Size+0x2194>
    2590:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2594:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
    2598:	2f706968 	svccs	0x00706968
    259c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    25a0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    25a4:	54532f78 	ldrbpl	r2, [r3], #-3960	; 0xfffff088
    25a8:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    25ac:	5f787834 	svcpl	0x00787834
    25b0:	5f4c4148 	svcpl	0x004c4148
    25b4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    25b8:	732f7265 			; <UNDEFINED> instruction: 0x732f7265
    25bc:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    25c0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    25c4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    25c8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    25cc:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    25d0:	00632e74 	rsbeq	r2, r3, r4, ror lr
    25d4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    25d8:	414d445f 	cmpmi	sp, pc, asr r4
    25dc:	61487852 	cmpvs	r8, r2, asr r8
    25e0:	7043666c 	subvc	r6, r3, ip, ror #12
    25e4:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    25e8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 19af <_Min_Stack_Size+0x15af>
    25ec:	5f545241 	svcpl	0x00545241
    25f0:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    25f4:	5f657669 	svcpl	0x00657669
    25f8:	00414d44 	subeq	r4, r1, r4, asr #26
    25fc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2600:	414d445f 	cmpmi	sp, pc, asr r4
    2604:	61487854 	cmpvs	r8, r4, asr r8
    2608:	7043666c 	subvc	r6, r3, ip, ror #12
    260c:	5200746c 	andpl	r7, r0, #108, 8	; 0x6c000000
    2610:	6e654c78 	mcrvs	12, 3, r4, cr5, cr8, {3}
    2614:	52415500 	subpl	r5, r1, #0, 10
    2618:	61575f54 	cmpvs	r7, r4, asr pc
    261c:	6e4f7469 	cdpvs	4, 4, cr7, cr15, cr9, {3}
    2620:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    2624:	69746e55 	ldmdbvs	r4!, {r0, r2, r4, r6, r9, sl, fp, sp, lr}^
    2628:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	; 0xfffffe50
    262c:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    2630:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2634:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    2638:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    263c:	5474726f 	ldrbtpl	r7, [r4], #-623	; 0xfffffd91
    2640:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    2644:	4374696d 	cmnmi	r4, #1785856	; 0x1b4000
    2648:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    264c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    2650:	006b6361 	rsbeq	r6, fp, r1, ror #6
    2654:	5f4c4148 	svcpl	0x004c4148
    2658:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    265c:	525f7845 	subspl	r7, pc, #4521984	; 0x450000
    2660:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    2664:	6f546576 	svcvs	0x00546576
    2668:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    266c:	0054495f 	subseq	r4, r4, pc, asr r9
    2670:	5f4c4148 	svcpl	0x004c4148
    2674:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    2678:	6f62415f 	svcvs	0x0062415f
    267c:	495f7472 	ldmdbmi	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    2680:	41480054 	qdaddmi	r0, r4, r8
    2684:	41555f4c 	cmpmi	r5, ip, asr #30
    2688:	445f5452 	ldrbmi	r5, [pc], #-1106	; 2690 <_Min_Stack_Size+0x2290>
    268c:	7453414d 	ldrbvc	r4, [r3], #-333	; 0xfffffeb3
    2690:	5500706f 	strpl	r7, [r0, #-111]	; 0xffffff91
    2694:	5f545241 	svcpl	0x00545241
    2698:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    269c:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    26a0:	70436576 	subvc	r6, r3, r6, ror r5
    26a4:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    26a8:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 25ac <_Min_Stack_Size+0x21ac>
    26ac:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    26b0:	636f7250 	cmnvs	pc, #80, 4
    26b4:	6f737365 	svcvs	0x00737365
    26b8:	78455f72 	stmdavc	r5, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    26bc:	754d7469 	strbvc	r7, [sp, #-1129]	; 0xfffffb97
    26c0:	6f4d6574 	svcvs	0x004d6574
    26c4:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    26c8:	485f4c41 	ldmdami	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    26cc:	44666c61 	strbtmi	r6, [r6], #-3169	; 0xfffff39f
    26d0:	656c7075 	strbvs	r7, [ip, #-117]!	; 0xffffff8b
    26d4:	6e455f78 	mcrvs	15, 2, r5, cr5, cr8, {3}
    26d8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    26dc:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    26e0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    26e4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    26e8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    26ec:	65525f54 	ldrbvs	r5, [r2, #-3924]	; 0xfffff0ac
    26f0:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    26f4:	63700065 	cmnvs	r0, #101	; 0x65
    26f8:	74006b6c 	strvc	r6, [r0], #-2924	; 0xfffff494
    26fc:	31706d65 	cmncc	r0, r5, ror #26
    2700:	6d657400 	cfstrdvs	mvd7, [r5, #-0]
    2704:	48003270 	stmdami	r0, {r4, r5, r6, r9, ip, sp}
    2708:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 1acf <_Min_Stack_Size+0x16cf>
    270c:	5f545241 	svcpl	0x00545241
    2710:	70437852 	subvc	r7, r3, r2, asr r8
    2714:	6143746c 	cmpvs	r3, ip, ror #8
    2718:	61626c6c 	cmnvs	r2, ip, ror #24
    271c:	6e006b63 	vmlsvs.f64	d6, d0, d19
    2720:	65725f62 	ldrbvs	r5, [r2, #-3938]!	; 0xfffff09e
    2724:	6e69616d 	powvsez	f6, f1, #5.0
    2728:	5f676e69 	svcpl	0x00676e69
    272c:	645f7872 	ldrbvs	r7, [pc], #-2162	; 2734 <_Min_Stack_Size+0x2334>
    2730:	00617461 	rsbeq	r7, r1, r1, ror #8
    2734:	5f4c4148 	svcpl	0x004c4148
    2738:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    273c:	6f62415f 	svcvs	0x0062415f
    2740:	70437472 	subvc	r7, r3, r2, ror r4
    2744:	6143746c 	cmpvs	r3, ip, ror #8
    2748:	61626c6c 	cmnvs	r2, ip, ror #24
    274c:	64006b63 	strvs	r6, [r0], #-2915	; 0xfffff49d
    2750:	6572616d 	ldrbvs	r6, [r2, #-365]!	; 0xfffffe93
    2754:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
    2758:	41480074 	hvcmi	32772	; 0x8004
    275c:	41555f4c 	cmpmi	r5, ip, asr #30
    2760:	545f5452 	ldrbpl	r5, [pc], #-1106	; 2768 <_Min_Stack_Size+0x2368>
    2764:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    2768:	5f74696d 	svcpl	0x0074696d
    276c:	55005449 	strpl	r5, [r0, #-1097]	; 0xfffffbb7
    2770:	5f545241 	svcpl	0x00545241
    2774:	41414d44 	cmpmi	r1, r4, asr #26
    2778:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    277c:	72456e4f 	subvc	r6, r5, #1264	; 0x4f0
    2780:	00726f72 	rsbseq	r6, r2, r2, ror pc
    2784:	5f4c4148 	svcpl	0x004c4148
    2788:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    278c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2790:	6f727245 	svcvs	0x00727245
    2794:	626e0072 	rsbvs	r0, lr, #114	; 0x72
    2798:	5f78725f 	svcpl	0x0078725f
    279c:	61746164 	cmnvs	r4, r4, ror #2
    27a0:	52415500 	subpl	r5, r1, #0, 10
    27a4:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    27a8:	61725441 	cmnvs	r2, r1, asr #8
    27ac:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    27b0:	6c704374 	ldclvs	3, cr4, [r0], #-464	; 0xfffffe30
    27b4:	41480074 	hvcmi	32772	; 0x8004
    27b8:	41555f4c 	cmpmi	r5, ip, asr #30
    27bc:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    27c0:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    27c4:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    27c8:	64496f54 	strbvs	r6, [r9], #-3924	; 0xfffff0ac
    27cc:	445f656c 	ldrbmi	r6, [pc], #-1388	; 27d4 <_Min_Stack_Size+0x23d4>
    27d0:	5500414d 	strpl	r4, [r0, #-333]	; 0xfffffeb3
    27d4:	5f545241 	svcpl	0x00545241
    27d8:	54646e45 	strbtpl	r6, [r4], #-3653	; 0xfffff1bb
    27dc:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    27e0:	5f74696d 	svcpl	0x0074696d
    27e4:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    27e8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 1baf <_Min_Stack_Size+0x17af>
    27ec:	5f545241 	svcpl	0x00545241
    27f0:	61487854 	cmpvs	r8, r4, asr r8
    27f4:	7043666c 	subvc	r6, r3, ip, ror #12
    27f8:	6143746c 	cmpvs	r3, ip, ror #8
    27fc:	61626c6c 	cmnvs	r2, ip, ror #24
    2800:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2804:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 1bcb <_Min_Stack_Size+0x17cb>
    2808:	5f545241 	svcpl	0x00545241
    280c:	6f727245 	svcvs	0x00727245
    2810:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    2814:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2818:	4155006b 	cmpmi	r5, fp, rrx
    281c:	445f5452 	ldrbmi	r5, [pc], #-1106	; 2824 <_Min_Stack_Size+0x2424>
    2820:	7852414d 	ldmdavc	r2, {r0, r2, r3, r6, r8, lr}^
    2824:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    2828:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    282c:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    2830:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    2834:	4148006b 	cmpmi	r8, fp, rrx
    2838:	41555f4c 	cmpmi	r5, ip, asr #30
    283c:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    2840:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    2844:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    2848:	64496f54 	strbvs	r6, [r9], #-3924	; 0xfffff0ac
    284c:	5500656c 	strpl	r6, [r0, #-1388]	; 0xfffffa94
    2850:	5f545241 	svcpl	0x00545241
    2854:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    2858:	6c6e4f78 	stclvs	15, cr4, [lr], #-480	; 0xfffffe20
    285c:	6f624179 	svcvs	0x00624179
    2860:	61437472 	hvcvs	14146	; 0x3742
    2864:	61626c6c 	cmnvs	r2, ip, ror #24
    2868:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    286c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 1c33 <_Min_Stack_Size+0x1833>
    2870:	5f545241 	svcpl	0x00545241
    2874:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    2878:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    287c:	41480065 	cmpmi	r8, r5, rrx
    2880:	41555f4c 	cmpmi	r5, ip, asr #30
    2884:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    2888:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    288c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2890:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    2894:	70754466 	rsbsvc	r4, r5, r6, ror #8
    2898:	5f78656c 	svcpl	0x0078656c
    289c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    28a0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    28a4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    28a8:	65525f54 	ldrbvs	r5, [r2, #-3924]	; 0xfffff0ac
    28ac:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    28b0:	54495f65 	strbpl	r5, [r9], #-3941	; 0xfffff09b
    28b4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    28b8:	4e494c5f 	mcrmi	12, 2, r4, cr9, cr15, {2}
    28bc:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    28c0:	756f0074 	strbvc	r0, [pc, #-116]!	; 2854 <_Min_Stack_Size+0x2454>
    28c4:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
    28c8:	72775f74 	rsbsvc	r5, r7, #116, 30	; 0x1d0
    28cc:	64007061 	strvs	r7, [r0], #-97	; 0xffffff9f
    28d0:	00666669 	rsbeq	r6, r6, r9, ror #12
    28d4:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
    28d8:	6675625f 			; <UNDEFINED> instruction: 0x6675625f
    28dc:	00726566 	rsbseq	r6, r2, r6, ror #10
    28e0:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    28e4:	5f00745f 	svcpl	0x0000745f
    28e8:	5f74756f 	svcpl	0x0074756f
    28ec:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    28f0:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
    28f4:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    28f8:	61726600 	cmnvs	r2, r0, lsl #12
    28fc:	6f5f0063 	svcvs	0x005f0063
    2900:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
    2904:	75007463 	strvc	r7, [r0, #-1123]	; 0xfffffb9d
    2908:	70746e69 	rsbsvc	r6, r4, r9, ror #28
    290c:	745f7274 	ldrbvc	r7, [pc], #-628	; 2914 <_Min_Stack_Size+0x2514>
    2910:	61747300 	cmnvs	r4, r0, lsl #6
    2914:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    2918:	77007864 	strvc	r7, [r0, -r4, ror #16]
    291c:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
    2920:	74636600 	strbtvc	r6, [r3], #-1536	; 0xfffffa00
    2924:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
    2928:	6e006674 	mcrvs	6, 0, r6, cr0, cr4, {3}
    292c:	74616765 	strbtvc	r6, [r1], #-1893	; 0xfffff89b
    2930:	00657669 	rsbeq	r7, r5, r9, ror #12
    2934:	31776f70 	cmncc	r7, r0, ror pc
    2938:	5f5f0030 	svcpl	0x005f0030
    293c:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
    2940:	00747369 	rsbseq	r7, r4, r9, ror #6
    2944:	6f746e5f 	svcvs	0x00746e5f
    2948:	6f665f61 	svcvs	0x00665f61
    294c:	74616d72 	strbtvc	r6, [r1], #-3442	; 0xfffff28e
    2950:	74665f00 	strbtvc	r5, [r6], #-3840	; 0xfffff100
    2954:	2e00616f 	adfcssz	f6, f0, #10.0
    2958:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    295c:	2f2e2e2f 	svccs	0x002e2e2f
    2960:	6b2f2e2e 	blvs	bce220 <_Min_Stack_Size+0xbcde20>
    2964:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2968:	65732f6c 	ldrbvs	r2, [r3, #-3948]!	; 0xfffff094
    296c:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    2970:	72702f65 	rsbsvc	r2, r0, #404	; 0x194
    2974:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
    2978:	6972702f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, ip, sp, lr}^
    297c:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
    2980:	765f0063 	ldrbvc	r0, [pc], -r3, rrx
    2984:	72706e73 	rsbsvc	r6, r0, #1840	; 0x730
    2988:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
    298c:	756f5f00 	strbvc	r5, [pc, #-3840]!	; 1a94 <_Min_Stack_Size+0x1694>
    2990:	756e5f74 	strbvc	r5, [lr, #-3956]!	; 0xfffff08c
    2994:	6f006c6c 	svcvs	0x00006c6c
    2998:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
    299c:	745f7463 	ldrbvc	r7, [pc], #-1123	; 29a4 <_Min_Stack_Size+0x25a4>
    29a0:	00657079 	rsbeq	r7, r5, r9, ror r0
    29a4:	6f746e5f 	svcvs	0x00746e5f
    29a8:	6f6c5f61 	svcvs	0x006c5f61
    29ac:	7600676e 	strvc	r6, [r0], -lr, ror #14
    29b0:	72706e73 	rsbsvc	r6, r0, #1840	; 0x730
    29b4:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
    29b8:	616d005f 	qdsubvs	r0, pc, sp	; <UNPREDICTABLE>
    29bc:	6e656c78 	mcrvs	12, 3, r6, cr5, cr8, {3}
    29c0:	74615f00 	strbtvc	r5, [r1], #-3840	; 0xfffff100
    29c4:	5f00696f 	svcpl	0x0000696f
    29c8:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
    29cc:	5f6e656c 	svcpl	0x006e656c
    29d0:	68770073 	ldmdavs	r7!, {r0, r1, r4, r5, r6}^
    29d4:	00656c6f 	rsbeq	r6, r5, pc, ror #24
    29d8:	70615f5f 	rsbvc	r5, r1, pc, asr pc
    29dc:	6f425f00 	svcvs	0x00425f00
    29e0:	73006c6f 	movwvc	r6, #3183	; 0xc6f
    29e4:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
    29e8:	005f6674 	subseq	r6, pc, r4, ror r6	; <UNPREDICTABLE>
    29ec:	5f73695f 	svcpl	0x0073695f
    29f0:	69676964 	stmdbvs	r7!, {r2, r5, r6, r8, fp, sp, lr}^
    29f4:	68630074 	stmdavs	r3!, {r2, r4, r5, r6}^
    29f8:	63617261 	cmnvs	r1, #268435462	; 0x10000006
    29fc:	00726574 	rsbseq	r6, r2, r4, ror r5
    2a00:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
    2a04:	7665725f 			; <UNDEFINED> instruction: 0x7665725f
    2a08:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
    2a0c:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
    2a10:	6172775f 	cmnvs	r2, pc, asr r7
    2a14:	79745f70 	ldmdbvc	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2a18:	70006570 	andvc	r6, r0, r0, ror r5
    2a1c:	00636572 	rsbeq	r6, r3, r2, ror r5
    2a20:	6e675f5f 	mcrvs	15, 3, r5, cr7, cr15, {2}
    2a24:	765f6375 			; <UNDEFINED> instruction: 0x765f6375
    2a28:	696c5f61 	stmdbvs	ip!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    2a2c:	70007473 	andvc	r7, r0, r3, ror r4
    2a30:	69636572 	stmdbvs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    2a34:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    2a38:	72707600 	rsbsvc	r7, r0, #0, 12
    2a3c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
    2a40:	696c005f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6}^
    2a44:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2a48:	68637475 	stmdavs	r3!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    2a4c:	2e007261 	cdpcs	2, 0, cr7, cr0, cr1, {3}
    2a50:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2a54:	2f2e2e2f 	svccs	0x002e2e2f
    2a58:	6b2f2e2e 	blvs	bce318 <_Min_Stack_Size+0xbcdf18>
    2a5c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2a60:	65732f6c 	ldrbvs	r2, [r3, #-3948]!	; 0xfffff094
    2a64:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    2a68:	696c2f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    2a6c:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2a70:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
    2a74:	696c2f66 	stmdbvs	ip!, {r1, r2, r5, r6, r8, r9, sl, fp, sp}^
    2a78:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2a7c:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
    2a80:	00632e66 	rsbeq	r2, r3, r6, ror #28
    2a84:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
    2a88:	00727473 	rsbseq	r7, r2, r3, ror r4
    2a8c:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
    2a90:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    2a94:	0066746e 	rsbeq	r7, r6, lr, ror #8
    2a98:	6574696c 	ldrbvs	r6, [r4, #-2412]!	; 0xfffff694
    2a9c:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    2aa0:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    2aa4:	765f7200 	ldrbvc	r7, [pc], -r0, lsl #4
    2aa8:	5f006c61 	svcpl	0x00006c61
    2aac:	00776f70 	rsbseq	r6, r7, r0, ror pc
    2ab0:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    2ab4:	006e656c 	rsbeq	r6, lr, ip, ror #10
    2ab8:	63696c73 	cmnvs	r9, #29440	; 0x7300
    2abc:	696c0065 	stmdbvs	ip!, {r0, r2, r5, r6}^
    2ac0:	6e5f6b6e 	vnmlavs.f64	d22, d15, d30
    2ac4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2ac8:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    2acc:	5f38746e 	svcpl	0x0038746e
    2ad0:	5f5f0074 	svcpl	0x005f0074
    2ad4:	5f746573 	svcpl	0x00746573
    2ad8:	00505350 	subseq	r5, r0, r0, asr r3
    2adc:	6b736174 	blvs	1cdb0b4 <_Min_Stack_Size+0x1cdacb4>
    2ae0:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
    2ae4:	72635f74 	rsbvc	r5, r3, #116, 30	; 0x1d0
    2ae8:	63697469 	cmnvs	r9, #1761607680	; 0x69000000
    2aec:	73006c61 	movwvc	r6, #3169	; 0xc61
    2af0:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2af4:	636f6c5f 	cmnvs	pc, #24320	; 0x5f00
    2af8:	6f635f6b 	svcvs	0x00635f6b
    2afc:	00746e75 	rsbseq	r6, r4, r5, ror lr
    2b00:	6b736174 	blvs	1cdb0d8 <_Min_Stack_Size+0x1cdacd8>
    2b04:	6977735f 	ldmdbvs	r7!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    2b08:	00686374 	rsbeq	r6, r8, r4, ror r3
    2b0c:	6b736174 	blvs	1cdb0e4 <_Min_Stack_Size+0x1cdace4>
    2b10:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    2b14:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    2b18:	69746972 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2b1c:	006c6163 	rsbeq	r6, ip, r3, ror #2
    2b20:	76657270 			; <UNDEFINED> instruction: 0x76657270
    2b24:	646f6e5f 	strbtvs	r6, [pc], #-3679	; 2b2c <_Min_Stack_Size+0x272c>
    2b28:	65640065 	strbvs	r0, [r4, #-101]!	; 0xffffff9b
    2b2c:	5f79616c 	svcpl	0x0079616c
    2b30:	6b636974 	blvs	18dd108 <_Min_Stack_Size+0x18dcd08>
    2b34:	65640073 	strbvs	r0, [r4, #-115]!	; 0xffffff8d
    2b38:	5f79616c 	svcpl	0x0079616c
    2b3c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    2b40:	735f5f00 	cmpvc	pc, #0, 30
    2b44:	505f7465 	subspl	r7, pc, r5, ror #8
    2b48:	414d4952 	cmpmi	sp, r2, asr r9
    2b4c:	70004b53 	andvc	r4, r0, r3, asr fp
    2b50:	614d6972 	hvcvs	54930	; 0xd692
    2b54:	5f006b73 	svcpl	0x00006b73
    2b58:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
    2b5c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2b60:	7172695f 	cmnvc	r2, pc, asr r9
    2b64:	73617400 	cmnvc	r1, #0, 8
    2b68:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    2b6c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    2b70:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
    2b74:	6e00745f 	cfmvsrvs	mvf0, r7
    2b78:	5f747865 	svcpl	0x00747865
    2b7c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    2b80:	646f6e00 	strbtvs	r6, [pc], #-3584	; 2b88 <_Min_Stack_Size+0x2788>
    2b84:	00735f65 	rsbseq	r5, r3, r5, ror #30
    2b88:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    2b8c:	2e00745f 	cfmvsrcs	mvf0, r7
    2b90:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2b94:	2f2e2e2f 	svccs	0x002e2e2f
    2b98:	6b2f2e2e 	blvs	bce458 <_Min_Stack_Size+0xbce058>
    2b9c:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2ba0:	65732f6c 	ldrbvs	r2, [r3, #-3948]!	; 0xfffff094
    2ba4:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    2ba8:	74722f65 	ldrbtvc	r2, [r2], #-3941	; 0xfffff09b
    2bac:	732f736f 			; <UNDEFINED> instruction: 0x732f736f
    2bb0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    2bb4:	00632e68 	rsbeq	r2, r3, r8, ror #28
    2bb8:	6d697270 	sfmvs	f7, 2, [r9, #-448]!	; 0xfffffe40
    2bbc:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2bc0:	4f706f74 	svcmi	0x00706f74
    2bc4:	6f725066 	svcvs	0x00725066
    2bc8:	61745363 	cmnvs	r4, r3, ror #6
    2bcc:	63006b63 	movwvs	r6, #2915	; 0xb63
    2bd0:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    2bd4:	745f746e 	ldrbvc	r7, [pc], #-1134	; 2bdc <_Min_Stack_Size+0x27dc>
    2bd8:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2bdc:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    2be0:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
    2be4:	5f5f006b 	svcpl	0x005f006b
    2be8:	5f746567 	svcpl	0x00746567
    2bec:	4d495250 	sfmmi	f5, 2, [r9, #-320]	; 0xfffffec0
    2bf0:	004b5341 	subeq	r5, fp, r1, asr #6
    2bf4:	6b736174 	blvs	1cdb1cc <_Min_Stack_Size+0x1cdadcc>
    2bf8:	6174735f 	cmnvs	r4, pc, asr r3
    2bfc:	745f6b63 	ldrbvc	r6, [pc], #-2915	; 2c04 <_Min_Stack_Size+0x2804>
    2c00:	6e757200 	cdpvs	2, 7, cr7, cr5, cr0, {0}
    2c04:	7269665f 	rsbvc	r6, r9, #99614720	; 0x5f00000
    2c08:	745f7473 	ldrbvc	r7, [pc], #-1139	; 2c10 <_Min_Stack_Size+0x2810>
    2c0c:	006b7361 	rsbeq	r7, fp, r1, ror #6
    2c10:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    2c14:	5f323374 	svcpl	0x00323374
    2c18:	61740074 	cmnvs	r4, r4, ror r0
    2c1c:	5f326b73 	svcpl	0x00326b73
    2c20:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    2c24:	74696200 	strbtvc	r6, [r9], #-512	; 0xfffffe00
    2c28:	5f70616d 	svcpl	0x0070616d
    2c2c:	61740074 	cmnvs	r4, r4, ror r0
    2c30:	745f6b73 	ldrbvc	r6, [pc], #-2931	; 2c38 <_Min_Stack_Size+0x2838>
    2c34:	5f656d69 	svcpl	0x00656d69
    2c38:	656b6177 	strbvs	r6, [fp, #-375]!	; 0xfffffe89
    2c3c:	74007075 	strvc	r7, [r0], #-117	; 0xffffff8b
    2c40:	316b7361 	cmncc	fp, r1, ror #6
    2c44:	73617400 	cmnvc	r1, #0, 8
    2c48:	69685f6b 	stmdbvs	r8!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2c4c:	73656867 	cmnvc	r5, #6750208	; 0x670000
    2c50:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
    2c54:	00796461 	rsbseq	r6, r9, r1, ror #8
    2c58:	656c6469 	strbvs	r6, [ip, #-1129]!	; 0xfffffb97
    2c5c:	6b736174 	blvs	1cdb234 <_Min_Stack_Size+0x1cdae34>
    2c60:	766e655f 			; <UNDEFINED> instruction: 0x766e655f
    2c64:	73617400 	cmnvc	r1, #0, 8
    2c68:	64695f6b 	strbtvs	r5, [r9], #-3947	; 0xfffff095
    2c6c:	5300656c 	movwpl	r6, #1388	; 0x56c
    2c70:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2c74:	485f6b63 	ldmdami	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    2c78:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2c7c:	74007265 	strvc	r7, [r0], #-613	; 0xfffffd9b
    2c80:	5f6b7361 	svcpl	0x006b7361
    2c84:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    2c88:	5f6b6369 	svcpl	0x006b6369
    2c8c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    2c90:	0072656c 	rsbseq	r6, r2, ip, ror #10
    2c94:	6b736174 	blvs	1cdb26c <_Min_Stack_Size+0x1cdae6c>
    2c98:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    2c9c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2ca0:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2ca4:	70616d74 	rsbvc	r6, r1, r4, ror sp
    2ca8:	61687300 	cmnvs	r8, r0, lsl #6
    2cac:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    2cb0:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2cb4:	5f736900 	svcpl	0x00736900
    2cb8:	65686373 	strbvs	r6, [r8, #-883]!	; 0xfffffc8d
    2cbc:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
    2cc0:	65725f72 	ldrbvs	r5, [r2, #-3954]!	; 0xfffff08e
    2cc4:	00796461 	rsbseq	r6, r9, r1, ror #8
    2cc8:	6b736174 	blvs	1cdb2a0 <_Min_Stack_Size+0x1cdaea0>
    2ccc:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    2cd0:	00657461 	rsbeq	r7, r5, r1, ror #8
    2cd4:	6b736174 	blvs	1cdb2ac <_Min_Stack_Size+0x1cdaeac>
    2cd8:	6863735f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    2cdc:	655f6465 	ldrbvs	r6, [pc, #-1125]	; 287f <_Min_Stack_Size+0x247f>
    2ce0:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2ce4:	69680065 	stmdbvs	r8!, {r0, r2, r5, r6}^
    2ce8:	73656867 	cmnvc	r5, #6750208	; 0x670000
    2cec:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
    2cf0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2cf4:	73007974 	movwvc	r7, #2420	; 0x974
    2cf8:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
    2cfc:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    2d00:	705f6b63 	subsvc	r6, pc, r3, ror #22
    2d04:	6f697265 	svcvs	0x00697265
    2d08:	61740064 	cmnvs	r4, r4, rrx
    2d0c:	5f316b73 	svcpl	0x00316b73
    2d10:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    2d14:	63697400 	cmnvs	r9, #0, 8
    2d18:	6f635f6b 	svcvs	0x00635f6b
    2d1c:	65746e75 	ldrbvs	r6, [r4, #-3701]!	; 0xfffff18b
    2d20:	61740072 	cmnvs	r4, r2, ror r0
    2d24:	735f6b73 	cmpvc	pc, #117760	; 0x1cc00
    2d28:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2d2c:	746f6e5f 	strbtvc	r6, [pc], #-3679	; 2d34 <_Min_Stack_Size+0x2934>
    2d30:	6165725f 	cmnvs	r5, pc, asr r2
    2d34:	6e007964 	vmlsvs.f16	s14, s0, s9	; <UNPREDICTABLE>
    2d38:	5f65646f 	svcpl	0x0065646f
    2d3c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    2d40:	696c0074 	stmdbvs	ip!, {r2, r4, r5, r6}^
    2d44:	745f7473 	ldrbvc	r7, [pc], #-1139	; 2d4c <_Min_Stack_Size+0x294c>
    2d48:	73617400 	cmnvc	r1, #0, 8
    2d4c:	6e655f6b 	cdpvs	15, 6, cr5, cr5, cr11, {3}
    2d50:	5f797274 	svcpl	0x00797274
    2d54:	656c6469 	strbvs	r6, [ip, #-1129]!	; 0xfffffb97
    2d58:	6c646900 			; <UNDEFINED> instruction: 0x6c646900
    2d5c:	61745f65 	cmnvs	r4, r5, ror #30
    2d60:	6c006b73 			; <UNDEFINED> instruction: 0x6c006b73
    2d64:	5f747369 	svcpl	0x00747369
    2d68:	61740073 	cmnvs	r4, r3, ror r0
    2d6c:	735f6b73 	cmpvc	pc, #117760	; 0x1cc00
    2d70:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2d74:	73617400 	cmnvc	r1, #0, 8
    2d78:	655f336b 	ldrbvs	r3, [pc, #-875]	; 2a15 <_Min_Stack_Size+0x2615>
    2d7c:	7400766e 	strvc	r7, [r0], #-1646	; 0xfffff992
    2d80:	5f6b7361 	svcpl	0x006b7361
    2d84:	65686373 	strbvs	r6, [r8, #-883]!	; 0xfffffc8d
    2d88:	65725f64 	ldrbvs	r5, [r2, #-3940]!	; 0xfffff09c
    2d8c:	00796461 	rsbseq	r6, r9, r1, ror #8
    2d90:	6b736174 	blvs	1cdb368 <_Min_Stack_Size+0x1cdaf68>
    2d94:	61740032 	cmnvs	r4, r2, lsr r0
    2d98:	00336b73 	eorseq	r6, r3, r3, ror fp
    2d9c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2da0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2da4:	2f2e2e2f 	svccs	0x002e2e2f
    2da8:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2dac:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    2db0:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    2db4:	722f6563 	eorvc	r6, pc, #415236096	; 0x18c00000
    2db8:	2f736f74 	svccs	0x00736f74
    2dbc:	6b736174 	blvs	1cdb394 <_Min_Stack_Size+0x1cdaf94>
    2dc0:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    2dc4:	00632e6e 	rsbeq	r2, r3, lr, ror #28
    2dc8:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
    2dcc:	61740079 	cmnvs	r4, r9, ror r0
    2dd0:	735f6b73 	cmpvc	pc, #117760	; 0x1cc00
    2dd4:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    2dd8:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
    2ddc:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2de0:	61656800 	cmnvs	r5, r0, lsl #16
    2de4:	6f6e5f64 	svcvs	0x006e5f64
    2de8:	74006564 	strvc	r6, [r0], #-1380	; 0xfffffa9c
    2dec:	326b7361 	rsbcc	r7, fp, #-2080374783	; 0x84000001
    2df0:	766e655f 			; <UNDEFINED> instruction: 0x766e655f
    2df4:	73617400 	cmnvc	r1, #0, 8
    2df8:	6e655f6b 	cdpvs	15, 6, cr5, cr5, cr11, {3}
    2dfc:	5f797274 	svcpl	0x00797274
    2e00:	61740032 	cmnvs	r4, r2, lsr r0
    2e04:	745f6b73 	ldrbvc	r6, [pc], #-2931	; 2e0c <_Min_Stack_Size+0x2a0c>
    2e08:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2e0c:	73617400 	cmnvc	r1, #0, 8
    2e10:	6e655f6b 	cdpvs	15, 6, cr5, cr5, cr11, {3}
    2e14:	5f797274 	svcpl	0x00797274
    2e18:	61740031 	cmnvs	r4, r1, lsr r0
    2e1c:	645f6b73 	ldrbvs	r6, [pc], #-2931	; 2e24 <_Min_Stack_Size+0x2a24>
    2e20:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    2e24:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    2e28:	61740074 	cmnvs	r4, r4, ror r0
    2e2c:	655f6b73 	ldrbvs	r6, [pc, #-2931]	; 22c1 <_Min_Stack_Size+0x1ec1>
    2e30:	7972746e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2e34:	7400335f 	strvc	r3, [r0], #-863	; 0xfffffca1
    2e38:	5f6b7361 	svcpl	0x006b7361
    2e3c:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
    2e40:	00745f79 	rsbseq	r5, r4, r9, ror pc
    2e44:	73726966 	cmnvc	r2, #1671168	; 0x198000
    2e48:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
    2e4c:	61740074 	cmnvs	r4, r4, ror r0
    2e50:	5f316b73 	svcpl	0x00316b73
    2e54:	00766e65 	rsbseq	r6, r6, r5, ror #28
    2e58:	5f706d74 	svcpl	0x00706d74
    2e5c:	6b736174 	blvs	1cdb434 <_Min_Stack_Size+0x1cdb034>
    2e60:	73617400 	cmnvc	r1, #0, 8
    2e64:	665f336b 	ldrbvs	r3, [pc], -fp, ror #6
    2e68:	0067616c 	rsbeq	r6, r7, ip, ror #2
    2e6c:	6b736174 	blvs	1cdb444 <_Min_Stack_Size+0x1cdb044>
    2e70:	6863735f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    2e74:	74006465 	strvc	r6, [r0], #-1125	; 0xfffffb9b
    2e78:	5f6b7361 	svcpl	0x006b7361
    2e7c:	616c6564 	cmnvs	ip, r4, ror #10
    2e80:	61740079 	cmnvs	r4, r9, ror r0
    2e84:	745f6b73 	ldrbvc	r6, [pc], #-2931	; 2e8c <_Min_Stack_Size+0x2a8c>
    2e88:	5f656d69 	svcpl	0x00656d69
    2e8c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
    2e90:	72617000 	rsbvc	r7, r1, #0
    2e94:	74006d61 	strvc	r6, [r0], #-3425	; 0xfffff29f
    2e98:	5f6b7361 	svcpl	0x006b7361
    2e9c:	65686373 	strbvs	r6, [r8, #-883]!	; 0xfffffc8d
    2ea0:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
    2ea4:	74007469 	strvc	r7, [r0], #-1129	; 0xfffffb97
    2ea8:	5f6b7361 	svcpl	0x006b7361
    2eac:	616c6564 	cmnvs	ip, r4, ror #10
    2eb0:	6e695f79 	mcrvs	15, 3, r5, cr9, cr9, {3}
    2eb4:	62007469 	andvs	r7, r0, #1761607680	; 0x69000000
    2eb8:	616d7469 	cmnvs	sp, r9, ror #8
    2ebc:	65675f70 	strbvs	r5, [r7, #-3952]!	; 0xfffff090
    2ec0:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2ec4:	00747372 	rsbseq	r7, r4, r2, ror r3
    2ec8:	6d746962 			; <UNDEFINED> instruction: 0x6d746962
    2ecc:	735f7061 	cmpvc	pc, #97	; 0x61
    2ed0:	625f7465 	subsvs	r7, pc, #1694498816	; 0x65000000
    2ed4:	2e007469 	cdpcs	4, 0, cr7, cr0, cr9, {3}
    2ed8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2edc:	2f2e2e2f 	svccs	0x002e2e2f
    2ee0:	6b2f2e2e 	blvs	bce7a0 <_Min_Stack_Size+0xbce3a0>
    2ee4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    2ee8:	65732f6c 	ldrbvs	r2, [r3, #-3948]!	; 0xfffff094
    2eec:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    2ef0:	74722f65 	ldrbtvc	r2, [r2], #-3941	; 0xfffff09b
    2ef4:	622f736f 	eorvs	r7, pc, #-1140850687	; 0xbc000001
    2ef8:	616d7469 	cmnvs	sp, r9, ror #8
    2efc:	00632e70 	rsbeq	r2, r3, r0, ror lr
    2f00:	6d746962 			; <UNDEFINED> instruction: 0x6d746962
    2f04:	695f7061 	ldmdbvs	pc, {r0, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    2f08:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2f0c:	6d746962 			; <UNDEFINED> instruction: 0x6d746962
    2f10:	705f7061 	subsvc	r7, pc, r1, rrx
    2f14:	635f736f 	cmpvs	pc, #-1140850687	; 0xbc000001
    2f18:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2f1c:	69757100 	ldmdbvs	r5!, {r8, ip, sp, lr}^
    2f20:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2f24:	5f646e69 	svcpl	0x00646e69
    2f28:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    2f2c:	69620065 	stmdbvs	r2!, {r0, r2, r5, r6}^
    2f30:	70616d74 	rsbvc	r6, r1, r4, ror sp
    2f34:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
    2f38:	625f7261 	subsvs	r7, pc, #268435462	; 0x10000006
    2f3c:	6c007469 	cfstrsvs	mvf7, [r0], {105}	; 0x69
    2f40:	5f747369 	svcpl	0x00747369
    2f44:	5f646461 	svcpl	0x00646461
    2f48:	7473616c 	ldrbtvc	r6, [r3], #-364	; 0xfffffe94
    2f4c:	646f6e00 	strbtvs	r6, [pc], #-3584	; 2f54 <_Min_Stack_Size+0x2b54>
    2f50:	6f745f65 	svcvs	0x00745f65
    2f54:	736e695f 	cmnvc	lr, #1556480	; 0x17c000
    2f58:	00747265 	rsbseq	r7, r4, r5, ror #4
    2f5c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2f60:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2f64:	2f2e2e2f 	svccs	0x002e2e2f
    2f68:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
    2f6c:	732f6c65 			; <UNDEFINED> instruction: 0x732f6c65
    2f70:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    2f74:	722f6563 	eorvc	r6, pc, #415236096	; 0x18c00000
    2f78:	2f736f74 	svccs	0x00736f74
    2f7c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    2f80:	6300632e 	movwvs	r6, #814	; 0x32e
    2f84:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    2f88:	6e5f746e 	cdpvs	4, 5, cr7, cr15, cr14, {3}
    2f8c:	0065646f 	rsbeq	r6, r5, pc, ror #8
    2f90:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    2f94:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    2f98:	696c0076 	stmdbvs	ip!, {r1, r2, r4, r5, r6}^
    2f9c:	6e5f7473 	mrcvs	4, 2, r7, cr15, cr3, {3}
    2fa0:	00747865 	rsbseq	r7, r4, r5, ror #16
    2fa4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    2fa8:	7269665f 	rsbvc	r6, r9, #99614720	; 0x5f00000
    2fac:	6c007473 	cfstrsvs	mvf7, [r0], {115}	; 0x73
    2fb0:	5f747369 	svcpl	0x00747369
    2fb4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    2fb8:	73696c00 	cmnvc	r9, #0, 24
    2fbc:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
    2fc0:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    2fc4:	6c6c615f 	stfvse	f6, [ip], #-380	; 0xfffffe84
    2fc8:	73696c00 	cmnvc	r9, #0, 24
    2fcc:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    2fd0:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
    2fd4:	7466615f 	strbtvc	r6, [r6], #-351	; 0xfffffea1
    2fd8:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
    2fdc:	5f747369 	svcpl	0x00747369
    2fe0:	6f6d6572 	svcvs	0x006d6572
    2fe4:	665f6576 			; <UNDEFINED> instruction: 0x665f6576
    2fe8:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    2fec:	73696c00 	cmnvc	r9, #0, 24
    2ff0:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
    2ff4:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    2ff8:	73696c00 	cmnvc	r9, #0, 24
    2ffc:	616c5f74 	smcvs	50676	; 0xc5f4
    3000:	6e007473 	mcrvs	4, 0, r7, cr0, cr3, {3}
    3004:	5f65646f 	svcpl	0x0065646f
    3008:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    300c:	73696c00 	cmnvc	r9, #0, 24
    3010:	6f635f74 	svcvs	0x00635f74
    3014:	00746e75 	rsbseq	r6, r4, r5, ror lr
    3018:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    301c:	6464615f 	strbtvs	r6, [r4], #-351	; 0xfffffea1
    3020:	7269665f 	rsbvc	r6, r9, #99614720	; 0x5f00000
    3024:	6e007473 	mcrvs	4, 0, r7, cr0, cr3, {3}
    3028:	5f65646f 	svcpl	0x0065646f
    302c:	65746661 	ldrbvs	r6, [r4, #-1633]!	; 0xfffff99f
    3030:	5f5f0072 	svcpl	0x005f0072
    3034:	74616c70 	strbtvc	r6, [r1], #-3184	; 0xfffff390
    3038:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    303c:	7373615f 	cmnvc	r3, #-1073741801	; 0xc0000017
    3040:	5f747265 	svcpl	0x00747265
    3044:	4d00726c 	sfmmi	f7, 4, [r0, #-432]	; 0xfffffe50
    3048:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    304c:	6e614d79 	mcrvs	13, 3, r4, cr1, cr9, {3}
    3050:	6d656761 	stclvs	7, cr6, [r5, #-388]!	; 0xfffffe7c
    3054:	5f746e65 	svcpl	0x00746e65
    3058:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    305c:	0072656c 	rsbseq	r6, r2, ip, ror #10
    3060:	434d4544 	movtmi	r4, #54596	; 0xd544
    3064:	66700052 			; <UNDEFINED> instruction: 0x66700052
    3068:	6365566e 	cmnvs	r5, #115343360	; 0x6e00000
    306c:	73726f74 	cmnvc	r2, #116, 30	; 0x1d0
    3070:	61726600 	cmnvs	r2, r0, lsl #12
    3074:	6500656d 	strvs	r6, [r0, #-1389]	; 0xfffffa93
    3078:	70656378 	rsbvc	r6, r5, r8, ror r3
    307c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3080:	7365745f 	cmnvc	r5, #1593835520	; 0x5f000000
    3084:	72490074 	subvc	r0, r9, #116	; 0x74
    3088:	485f3071 	ldmdami	pc, {r0, r4, r5, r6, ip, sp}^	; <UNPREDICTABLE>
    308c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    3090:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    3094:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    3098:	7561665f 	strbvc	r6, [r1, #-1631]!	; 0xfffff9a1
    309c:	6d5f746c 	cfldrdvs	mvd7, [pc, #-432]	; 2ef4 <_Min_Stack_Size+0x2af4>
    30a0:	006b7361 	rsbeq	r7, fp, r1, ror #6
    30a4:	6e6f4373 	mcrvs	3, 3, r4, cr15, cr3, {3}
    30a8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    30ac:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    30b0:	61724665 	cmnvs	r2, r5, ror #12
    30b4:	2e00656d 	cfsh32cs	mvfx6, mvfx0, #61
    30b8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    30bc:	2f2e2e2f 	svccs	0x002e2e2f
    30c0:	6b2f2e2e 	blvs	bce980 <_Min_Stack_Size+0xbce580>
    30c4:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
    30c8:	65732f6c 	ldrbvs	r2, [r3, #-3948]!	; 0xfffff094
    30cc:	63697672 	cmnvs	r9, #119537664	; 0x7200000
    30d0:	78652f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    30d4:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    30d8:	2f6e6f69 	svccs	0x006e6f69
    30dc:	2f637273 	svccs	0x00637273
    30e0:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    30e4:	6f697470 	svcvs	0x00697470
    30e8:	00632e6e 	rsbeq	r2, r3, lr, ror #28
    30ec:	64726148 	ldrbtvs	r6, [r2], #-328	; 0xfffffeb8
    30f0:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
    30f4:	61485f74 	hvcvs	34292	; 0x85f4
    30f8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    30fc:	00435f72 	subeq	r5, r3, r2, ror pc
    3100:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    3104:	6f697470 	svcvs	0x00697470
    3108:	6f635f6e 	svcvs	0x00635f6e
    310c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    3110:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    3114:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    3118:	6600635f 			; <UNDEFINED> instruction: 0x6600635f
    311c:	72637370 	rsbvc	r7, r3, #112, 6	; 0xc0000001
    3120:	73616c00 	cmnvc	r1, #0, 24
    3124:	72635f74 	rsbvc	r5, r3, #116, 30	; 0x1d0
    3128:	5f687361 	svcpl	0x00687361
    312c:	6f666e69 	svcvs	0x00666e69
    3130:	69735f00 	ldmdbvs	r3!, {r8, r9, sl, fp, ip, lr}^
    3134:	61746164 	cmnvs	r4, r4, ror #2
    3138:	72437300 	subvc	r7, r3, #0, 6
    313c:	49687361 	stmdbmi	r8!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    3140:	006f666e 	rsbeq	r6, pc, lr, ror #12
    3144:	6e755f67 	cdpvs	15, 7, cr5, cr5, cr7, {3}
    3148:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
    314c:	5f64656e 	svcpl	0x0064656e
    3150:	66667562 	strbtvs	r7, [r6], -r2, ror #10
    3154:	61007265 	tstvs	r0, r5, ror #4
    3158:	72657373 	rsbvc	r7, r5, #-872415231	; 0xcc000001
    315c:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    3160:	745f6f66 	ldrbvc	r6, [pc], #-3942	; 3168 <_Min_Stack_Size+0x2d68>
    3164:	66654400 	strbtvs	r4, [r5], -r0, lsl #8
    3168:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    316c:	48746e49 	ldmdami	r4!, {r0, r3, r6, r9, sl, fp, sp, lr}^
    3170:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    3174:	5f007265 	svcpl	0x00007265
    3178:	61747365 	cmnvs	r4, r5, ror #6
    317c:	6e006b63 	vmlsvs.f64	d6, d0, d19
    3180:	755f6e6f 	ldrbvc	r6, [pc, #-3695]	; 2319 <_Min_Stack_Size+0x1f19>
    3184:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    3188:	7561665f 	strbvc	r6, [r1, #-1631]!	; 0xfffff9a1
    318c:	6f5f746c 	svcvs	0x005f746c
    3190:	72756363 	rsbsvc	r6, r5, #-1946157055	; 0x8c000001
    3194:	00646572 	rsbeq	r6, r4, r2, ror r5
    3198:	6f636572 	svcvs	0x00636572
    319c:	5f726576 	svcpl	0x00726576
    31a0:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 3010 <_Min_Stack_Size+0x2c10>
    31a4:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
    31a8:	61665f6b 	cmnvs	r6, fp, ror #30
    31ac:	00746c75 	rsbseq	r6, r4, r5, ror ip
    31b0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    31b4:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
    31b8:	7865006b 	stmdavc	r5!, {r0, r1, r3, r5, r6}^
    31bc:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    31c0:	5f6e6f69 	svcpl	0x006e6f69
    31c4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    31c8:	726f4300 	rsbvc	r4, pc, #0, 6
    31cc:	62654465 	rsbvs	r4, r5, #1694498816	; 0x65000000
    31d0:	545f6775 	ldrbpl	r6, [pc], #-1909	; 31d8 <_Min_Stack_Size+0x2dd8>
    31d4:	00657079 	rsbeq	r7, r5, r9, ror r0
    31d8:	7362735f 	cmnvc	r2, #2080374785	; 0x7c000001
    31dc:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    31e0:	69635f76 	stmdbvs	r3!, {r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    31e4:	0074696e 	rsbseq	r6, r4, lr, ror #18
    31e8:	6967616d 	stmdbvs	r7!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    31ec:	655f0063 	ldrbvs	r0, [pc, #-99]	; 3191 <_Min_Stack_Size+0x2d91>
    31f0:	00737362 	rsbseq	r7, r3, r2, ror #6
    31f4:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
    31f8:	695f7472 	ldmdbvs	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    31fc:	006f666e 	rsbeq	r6, pc, lr, ror #12
    3200:	6164655f 	cmnvs	r4, pc, asr r5
    3204:	5f006174 	svcpl	0x00006174
    3208:	616c705f 	qdsubvs	r7, pc, ip	; <UNPREDICTABLE>
    320c:	726f6674 	rsbvc	r6, pc, #116, 12	; 0x7400000
    3210:	73615f6d 	cmnvc	r1, #436	; 0x1b4
    3214:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
    3218:	625f7300 	subsvs	r7, pc, #0, 6
    321c:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    3220:	61660072 	smcvs	24578	; 0x6002
    3224:	5f746c75 	svcpl	0x00746c75
    3228:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    322c:	73707800 	cmnvc	r0, #0, 16
    3230:	735f0072 	cmpvc	pc, #114	; 0x72
    3234:	61746164 	cmnvs	r4, r4, ror #2
    3238:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
    323c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 3074 <_Min_Stack_Size+0x2c74>
    3240:	61735500 	cmnvs	r3, r0, lsl #10
    3244:	61466567 	cmpvs	r6, r7, ror #10
    3248:	5f746c75 	svcpl	0x00746c75
    324c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    3250:	0072656c 	rsbseq	r6, r2, ip, ror #10
    3254:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
    3258:	494d4e00 	stmdbmi	sp, {r9, sl, fp, lr}^
    325c:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    3260:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    3264:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    3268:	6465746c 	strbtvs	r7, [r5], #-1132	; 0xfffffb94
    326c:	6f72665f 	svcvs	0x0072665f
    3270:	78655f6d 	stmdavc	r5!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    3274:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    3278:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    327c:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
    3280:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    3284:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
    3288:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    328c:	70786500 	rsbsvc	r6, r8, r0, lsl #10
    3290:	48440072 	stmdami	r4, {r1, r4, r5, r6}^
    3294:	00525343 	subseq	r5, r2, r3, asr #6
    3298:	64726148 	ldrbtvs	r6, [r2], #-328	; 0xfffffeb8
    329c:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
    32a0:	61485f74 	hvcvs	34292	; 0x85f4
    32a4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    32a8:	43440072 	movtmi	r0, #16498	; 0x4072
    32ac:	00525352 	subseq	r5, r2, r2, asr r3
    32b0:	44524344 	ldrbmi	r4, [r2], #-836	; 0xfffffcbc
    32b4:	61620052 	qdsubvs	r0, r2, r2
    32b8:	72706573 	rsbsvc	r6, r0, #482344960	; 0x1cc00000
    32bc:	69620069 	stmdbvs	r2!, {r0, r3, r5, r6}^
    32c0:	75625f67 	strbvc	r5, [r2, #-3943]!	; 0xfffff099
    32c4:	75620066 	strbvc	r0, [r2, #-102]!	; 0xffffff9a
    32c8:	75616673 	strbvc	r6, [r1, #-1651]!	; 0xfffff98d
    32cc:	6d00746c 	cfstrsvs	mvf7, [r0, #-432]	; 0xfffffe50
    32d0:	616d6d65 	cmnvs	sp, r5, ror #26
    32d4:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
    32d8:	6b747300 	blvs	1d1fee0 <_Min_Stack_Size+0x1d1fae0>
    32dc:	5f727265 	svcpl	0x00727265
    32e0:	6d6f7266 	sfmvs	f7, 2, [pc, #-408]!	; 3150 <_Min_Stack_Size+0x2d50>
    32e4:	7073705f 	rsbsvc	r7, r3, pc, asr r0
    32e8:	64616200 	strbtvs	r6, [r1], #-512	; 0xfffffe00
    32ec:	6363615f 	cmnvs	r3, #-1073741801	; 0xc0000017
    32f0:	00737365 	rsbseq	r7, r3, r5, ror #6
    32f4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    32f8:	6f72665f 	svcvs	0x0072665f
    32fc:	61625f6d 	cmnvs	r2, sp, ror #30
    3300:	64615f64 	strbtvs	r5, [r1], #-3940	; 0xfffff09c
    3304:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    3308:	61620073 	smcvs	8195	; 0x2003
    330c:	656d5f64 	strbvs	r5, [sp, #-3940]!	; 0xfffff09c
    3310:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    3314:	6363615f 	cmnvs	r3, #-1073741801	; 0xc0000017
    3318:	5f737365 	svcpl	0x00737365
    331c:	73617263 	cmnvc	r1, #805306374	; 0x30000006
    3320:	61620068 	cmnvs	r2, r8, rrx
    3324:	64615f64 	strbtvs	r5, [r1], #-3940	; 0xfffff09c
    3328:	645f7264 	ldrbvs	r7, [pc], #-612	; 3330 <_Min_Stack_Size+0x2f30>
    332c:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
    3330:	6f775f65 	svcvs	0x00775f65
    3334:	775f6472 			; <UNDEFINED> instruction: 0x775f6472
    3338:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    333c:	6d756400 	cfldrdvs	mvd6, [r5, #-0]
    3340:	765f796d 	ldrbvc	r7, [pc], -sp, ror #18
    3344:	61697261 	cmnvs	r9, r1, ror #4
    3348:	00656c62 	rsbeq	r6, r5, r2, ror #24
    334c:	5f646162 	svcpl	0x00646162
    3350:	74736e69 	ldrbtvc	r6, [r3], #-3689	; 0xfffff197
    3354:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    3358:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    335c:	656c6c69 	strbvs	r6, [ip, #-3177]!	; 0xfffff397
    3360:	5f6c6167 	svcpl	0x006c6167
    3364:	74736e69 	ldrbtvc	r6, [r3], #-3689	; 0xfffff197
    3368:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    336c:	5f6e6f69 	svcpl	0x006e6f69
    3370:	63657865 	cmnvs	r5, #6619136	; 0x650000
    3374:	6f697475 	svcvs	0x00697475
    3378:	7566006e 	strbvc	r0, [r6, #-110]!	; 0xffffff92
    337c:	695f636e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
    3380:	6e785f6e 	cdpvs	15, 7, cr5, cr8, cr14, {3}
    3384:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    3388:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    338c:	65636361 	strbvs	r6, [r3, #-865]!	; 0xfffffc9f
    3390:	645f7373 	ldrbvs	r7, [pc], #-883	; 3398 <_Min_Stack_Size+0x2f98>
    3394:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    3398:	5f64656c 	svcpl	0x0064656c
    339c:	72706f63 	rsbsvc	r6, r0, #396	; 0x18c
    33a0:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    33a4:	00726f73 	rsbseq	r6, r2, r3, ror pc
    33a8:	6c616e75 	stclvs	14, cr6, [r1], #-468	; 0xfffffe2c
    33ac:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
    33b0:	6f645f64 	svcvs	0x00645f64
    33b4:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
    33b8:	726f775f 	rsbvc	r7, pc, #24903680	; 0x17c0000
    33bc:	65725f64 	ldrbvs	r5, [r2, #-3940]!	; 0xfffff09c
    33c0:	74006461 	strvc	r6, [r0], #-1121	; 0xfffffb9f
    33c4:	67676972 			; <UNDEFINED> instruction: 0x67676972
    33c8:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    33cc:	68736172 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sp, lr}^
    33d0:	2f2e2e00 	svccs	0x002e2e00
    33d4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    33d8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    33dc:	72656b2f 	rsbvc	r6, r5, #48128	; 0xbc00
    33e0:	2f6c656e 	svccs	0x006c656e
    33e4:	76726573 			; <UNDEFINED> instruction: 0x76726573
    33e8:	2f656369 	svccs	0x00656369
    33ec:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    33f0:	6f697470 	svcvs	0x00697470
    33f4:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    33f8:	78652f63 	stmdavc	r5!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    33fc:	6c706d61 	ldclvs	13, cr6, [r0], #-388	; 0xfffffe7c
    3400:	00632e65 	rsbeq	r2, r3, r5, ror #28
    3404:	74736964 	ldrbtvc	r6, [r3], #-2404	; 0xfffff69c
    3408:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    340c:	5f6f745f 	svcpl	0x006f745f
    3410:	5f6d6172 	svcpl	0x006d6172
    3414:	74746f62 	ldrbtvc	r6, [r4], #-3938	; 0xfffff09e
    3418:	75006d6f 	strvc	r6, [r0, #-3439]	; 0xfffff291
    341c:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    3420:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    3424:	72490074 	subvc	r0, r9, #116	; 0x74
    3428:	485f3171 	ldmdami	pc, {r0, r4, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    342c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    3430:	65007265 	strvs	r7, [r0, #-613]	; 0xfffffd9b
    3434:	70656378 	rsbvc	r6, r5, r8, ror r3
    3438:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    343c:	6172635f 	cmnvs	r2, pc, asr r3
    3440:	695f6873 	ldmdbvs	pc, {r0, r1, r4, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    3444:	72740064 	rsbsvc	r0, r4, #100	; 0x64
    3448:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
    344c:	72695f72 	rsbvc	r5, r9, #456	; 0x1c8
    3450:	2e2e0071 	mcrcs	0, 1, r0, cr14, cr1, {3}
    3454:	2f2e2e2f 	svccs	0x002e2e2f
    3458:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    345c:	72702f2e 	rsbsvc	r2, r0, #46, 30	; 0xb8
    3460:	63656a6f 	cmnvs	r5, #454656	; 0x6f000
    3464:	74732f74 	ldrbtvc	r2, [r3], #-3956	; 0xfffff08c
    3468:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    346c:	2f787834 	svccs	0x00787834
    3470:	6474654e 	ldrbtvs	r6, [r4], #-1358	; 0xfffffab2
    3474:	6f6e6975 	svcvs	0x006e6975
    3478:	73756c50 	cmnvc	r5, #80, 24	; 0x5000
    347c:	43472f32 	movtmi	r2, #32562	; 0x7f32
    3480:	74732f43 	ldrbtvc	r2, [r3], #-3907	; 0xfffff0bd
    3484:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    3488:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    348c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    3490:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    3494:	00732e78 	rsbseq	r2, r3, r8, ror lr
    3498:	20554e47 	subscs	r4, r5, r7, asr #28
    349c:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    34a0:	2e35332e 	cdpcs	3, 3, cr3, cr5, cr14, {1}
    34a4:	2e2e0032 	mcrcs	0, 1, r0, cr14, cr2, {1}
    34a8:	2f2e2e2f 	svccs	0x002e2e2f
    34ac:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    34b0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    34b4:	2f2e2e2f 	svccs	0x002e2e2f
    34b8:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    34bc:	632f6363 			; <UNDEFINED> instruction: 0x632f6363
    34c0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    34c4:	72612f67 	rsbvc	r2, r1, #412	; 0x19c
    34c8:	65692f6d 	strbvs	r2, [r9, #-3949]!	; 0xfffff093
    34cc:	35376565 	ldrcc	r6, [r7, #-1381]!	; 0xfffffa9b
    34d0:	66642d34 			; <UNDEFINED> instruction: 0x66642d34
    34d4:	2f00532e 	svccs	0x0000532e
    34d8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    34dc:	63672f64 	cmnvs	r7, #100, 30	; 0x190
    34e0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    34e4:	6f6e2d6d 	svcvs	0x006e2d6d
    34e8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    34ec:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    34f0:	5662537a 			; <UNDEFINED> instruction: 0x5662537a
    34f4:	672f6e66 	strvs	r6, [pc, -r6, ror #28]!
    34f8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    34fc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    3500:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    3504:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    3508:	322d382d 	eorcc	r3, sp, #2949120	; 0x2d0000
    350c:	2d393130 	ldfcss	f3, [r9, #-192]!	; 0xffffff40
    3510:	622f3371 	eorvs	r3, pc, #-1006632959	; 0xc4000001
    3514:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    3518:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    351c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    3520:	61652d65 	cmnvs	r5, r5, ror #26
    3524:	742f6962 	strtvc	r6, [pc], #-2402	; 352c <_Min_Stack_Size+0x312c>
    3528:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
    352c:	6537762f 	ldrvs	r7, [r7, #-1583]!	; 0xfffff9d1
    3530:	6e2f6d2d 	cdpvs	13, 2, cr6, cr15, cr13, {1}
    3534:	2f70666f 	svccs	0x0070666f
    3538:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    353c:	47006363 	strmi	r6, [r0, -r3, ror #6]
    3540:	4120554e 			; <UNDEFINED> instruction: 0x4120554e
    3544:	2e322053 	mrccs	0, 1, r2, cr2, cr3, {2}
    3548:	2e003433 	cfmvdhrcs	mvd0, r3
    354c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3550:	2f2e2e2f 	svccs	0x002e2e2f
    3554:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3558:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    355c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    3560:	2f636367 	svccs	0x00636367
    3564:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    3568:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    356c:	622f6d72 	eorvs	r6, pc, #7296	; 0x1c80
    3570:	69626170 	stmdbvs	r2!, {r4, r5, r6, r8, sp, lr}^
    3574:	5400532e 	strpl	r5, [r0], #-814	; 0xfffffcd2
    3578:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    357c:	50435f54 	subpl	r5, r3, r4, asr pc
    3580:	6f635f55 	svcvs	0x00635f55
    3584:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    3588:	63373161 	teqvs	r7, #1073741848	; 0x40000018
    358c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3590:	00376178 	eorseq	r6, r7, r8, ror r1
    3594:	5f617369 	svcpl	0x00617369
    3598:	5f746962 	svcpl	0x00746962
    359c:	645f7066 	ldrbvs	r7, [pc], #-102	; 35a4 <_Min_Stack_Size+0x31a4>
    35a0:	54006c62 	strpl	r6, [r0], #-3170	; 0xfffff39e
    35a4:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    35a8:	50435f54 	subpl	r5, r3, r4, asr pc
    35ac:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    35b0:	3331316d 	teqcc	r1, #1073741851	; 0x4000001b
    35b4:	00736a36 	rsbseq	r6, r3, r6, lsr sl
    35b8:	5f6d7261 	svcpl	0x006d7261
    35bc:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    35c0:	6d77695f 			; <UNDEFINED> instruction: 0x6d77695f
    35c4:	0074786d 	rsbseq	r7, r4, sp, ror #16
    35c8:	47524154 			; <UNDEFINED> instruction: 0x47524154
    35cc:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    35d0:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    35d4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    35d8:	33326d78 	teqcc	r2, #120, 26	; 0x1e00
    35dc:	4d524100 	ldfmie	f4, [r2, #-0]
    35e0:	0051455f 	subseq	r4, r1, pc, asr r5
    35e4:	47524154 			; <UNDEFINED> instruction: 0x47524154
    35e8:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    35ec:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    35f0:	31316d72 	teqcc	r1, r2, ror sp
    35f4:	32743635 	rsbscc	r3, r4, #55574528	; 0x3500000
    35f8:	69007366 	stmdbvs	r0, {r1, r2, r5, r6, r8, r9, ip, sp, lr}
    35fc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    3600:	745f7469 	ldrbvc	r7, [pc], #-1129	; 3608 <_Min_Stack_Size+0x3208>
    3604:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
    3608:	49445500 	stmdbmi	r4, {r8, sl, ip, lr}^
    360c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    3610:	52415400 	subpl	r5, r1, #0, 8
    3614:	5f544547 	svcpl	0x00544547
    3618:	5f555043 	svcpl	0x00555043
    361c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3620:	35617865 	strbcc	r7, [r1, #-2149]!	; 0xfffff79b
    3624:	726f6337 	rsbvc	r6, pc, #-603979776	; 0xdc000000
    3628:	61786574 	cmnvs	r8, r4, ror r5
    362c:	5f003335 	svcpl	0x00003335
    3630:	6964755f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp, lr}^
    3634:	646f6d76 	strbtvs	r6, [pc], #-3446	; 363c <_Min_Stack_Size+0x323c>
    3638:	00346964 	eorseq	r6, r4, r4, ror #18
    363c:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
    3640:	4352415f 	cmpmi	r2, #-1073741801	; 0xc0000017
    3644:	4d385f48 	ldcmi	15, cr5, [r8, #-288]!	; 0xfffffee0
    3648:	5341425f 	movtpl	r4, #4703	; 0x125f
    364c:	41540045 	cmpmi	r4, r5, asr #32
    3650:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3654:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3658:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    365c:	00303138 	eorseq	r3, r0, r8, lsr r1
    3660:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3664:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3668:	785f5550 	ldmdavc	pc, {r4, r6, r8, sl, ip, lr}^	; <UNPREDICTABLE>
    366c:	656e6567 	strbvs	r6, [lr, #-1383]!	; 0xfffffa99
    3670:	52410031 	subpl	r0, r1, #49	; 0x31
    3674:	43505f4d 	cmpmi	r0, #308	; 0x134
    3678:	41415f53 	cmpmi	r1, r3, asr pc
    367c:	5f534350 	svcpl	0x00534350
    3680:	4d4d5749 	stclmi	7, cr5, [sp, #-292]	; 0xfffffedc
    3684:	54005458 	strpl	r5, [r0], #-1112	; 0xfffffba8
    3688:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    368c:	50435f54 	subpl	r5, r3, r4, asr pc
    3690:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3694:	6964376d 	stmdbvs	r4!, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^
    3698:	53414200 	movtpl	r4, #4608	; 0x1200
    369c:	52415f45 	subpl	r5, r1, #276	; 0x114
    36a0:	325f4843 	subscc	r4, pc, #4390912	; 0x430000
    36a4:	53414200 	movtpl	r4, #4608	; 0x1200
    36a8:	52415f45 	subpl	r5, r1, #276	; 0x114
    36ac:	335f4843 	cmpcc	pc, #4390912	; 0x430000
    36b0:	52415400 	subpl	r5, r1, #0, 8
    36b4:	5f544547 	svcpl	0x00544547
    36b8:	5f555043 	svcpl	0x00555043
    36bc:	376d7261 	strbcc	r7, [sp, -r1, ror #4]!
    36c0:	42006d64 	andmi	r6, r0, #100, 26	; 0x1900
    36c4:	5f455341 	svcpl	0x00455341
    36c8:	48435241 	stmdami	r3, {r0, r6, r9, ip, lr}^
    36cc:	4200355f 	andmi	r3, r0, #398458880	; 0x17c00000
    36d0:	5f455341 	svcpl	0x00455341
    36d4:	48435241 	stmdami	r3, {r0, r6, r9, ip, lr}^
    36d8:	4200365f 	andmi	r3, r0, #99614720	; 0x5f00000
    36dc:	5f455341 	svcpl	0x00455341
    36e0:	48435241 	stmdami	r3, {r0, r6, r9, ip, lr}^
    36e4:	5400375f 	strpl	r3, [r0], #-1887	; 0xfffff8a1
    36e8:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    36ec:	50435f54 	subpl	r5, r3, r4, asr pc
    36f0:	73785f55 	cmnvc	r8, #340	; 0x154
    36f4:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    36f8:	67696800 	strbvs	r6, [r9, -r0, lsl #16]!
    36fc:	41540068 	cmpmi	r4, r8, rrx
    3700:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3704:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3708:	6e65675f 	mcrvs	7, 3, r6, cr5, cr15, {2}
    370c:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    3710:	00613776 	rsbeq	r3, r1, r6, ror r7
    3714:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3718:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    371c:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    3720:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3724:	33336d78 	teqcc	r3, #120, 26	; 0x1e00
    3728:	49535500 	ldmdbmi	r3, {r8, sl, ip, lr}^
    372c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    3730:	61736900 	cmnvs	r3, r0, lsl #18
    3734:	626f6e5f 	rsbvs	r6, pc, #1520	; 0x5f0
    3738:	54007469 	strpl	r7, [r0], #-1129	; 0xfffffb97
    373c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3740:	50435f54 	subpl	r5, r3, r4, asr pc
    3744:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3748:	3731316d 	ldrcc	r3, [r1, -sp, ror #2]!
    374c:	667a6a36 			; <UNDEFINED> instruction: 0x667a6a36
    3750:	73690073 	cmnvc	r9, #115	; 0x73
    3754:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3758:	66765f74 	uhsub16vs	r5, r6, r4
    375c:	00327670 	eorseq	r7, r2, r0, ror r6
    3760:	5f4d5241 	svcpl	0x004d5241
    3764:	5f534350 	svcpl	0x00534350
    3768:	4e4b4e55 	mcrmi	14, 2, r4, cr11, cr5, {2}
    376c:	004e574f 	subeq	r5, lr, pc, asr #14
    3770:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3774:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3778:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    377c:	65396d72 	ldrvs	r6, [r9, #-3442]!	; 0xfffff28e
    3780:	53414200 	movtpl	r4, #4608	; 0x1200
    3784:	52415f45 	subpl	r5, r1, #276	; 0x114
    3788:	355f4843 	ldrbcc	r4, [pc, #-2115]	; 2f4d <_Min_Stack_Size+0x2b4d>
    378c:	004a4554 	subeq	r4, sl, r4, asr r5
    3790:	5f6d7261 	svcpl	0x006d7261
    3794:	73666363 	cmnvc	r6, #-1946157055	; 0x8c000001
    3798:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    379c:	00657461 	rsbeq	r7, r5, r1, ror #8
    37a0:	5f617369 	svcpl	0x00617369
    37a4:	5f746962 	svcpl	0x00746962
    37a8:	00636573 	rsbeq	r6, r3, r3, ror r5
    37ac:	6c635f5f 	stclvs	15, cr5, [r3], #-380	; 0xfffffe84
    37b0:	61745f7a 	cmnvs	r4, sl, ror pc
    37b4:	52410062 	subpl	r0, r1, #98	; 0x62
    37b8:	43565f4d 	cmpmi	r6, #308	; 0x134
    37bc:	6d726100 	ldfvse	f6, [r2, #-0]
    37c0:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    37c4:	73785f68 	cmnvc	r8, #104, 30	; 0x1a0
    37c8:	656c6163 	strbvs	r6, [ip, #-355]!	; 0xfffffe9d
    37cc:	4d524100 	ldfmie	f4, [r2, #-0]
    37d0:	00454c5f 	subeq	r4, r5, pc, asr ip
    37d4:	6e755744 	cdpvs	7, 7, cr5, cr5, cr4, {2}
    37d8:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    37dc:	5f4d5241 	svcpl	0x004d5241
    37e0:	41005356 	tstmi	r0, r6, asr r3
    37e4:	475f4d52 			; <UNDEFINED> instruction: 0x475f4d52
    37e8:	72610045 	rsbvc	r0, r1, #69	; 0x45
    37ec:	75745f6d 	ldrbvc	r5, [r4, #-3949]!	; 0xfffff093
    37f0:	735f656e 	cmpvc	pc, #461373440	; 0x1b800000
    37f4:	6e6f7274 	mcrvs	2, 3, r7, cr15, cr4, {3}
    37f8:	6d726167 	ldfvse	f6, [r2, #-412]!	; 0xfffffe64
    37fc:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 3804 <_Min_Stack_Size+0x3404>
    3800:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    3804:	6f6c6620 	svcvs	0x006c6620
    3808:	54007461 	strpl	r7, [r0], #-1121	; 0xfffffb9f
    380c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3810:	50435f54 	subpl	r5, r3, r4, asr pc
    3814:	6f635f55 	svcvs	0x00635f55
    3818:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    381c:	00353161 	eorseq	r3, r5, r1, ror #2
    3820:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3824:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3828:	665f5550 			; <UNDEFINED> instruction: 0x665f5550
    382c:	36323761 	ldrtcc	r3, [r2], -r1, ror #14
    3830:	54006574 	strpl	r6, [r0], #-1396	; 0xfffffa8c
    3834:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3838:	50435f54 	subpl	r5, r3, r4, asr pc
    383c:	6f635f55 	svcvs	0x00635f55
    3840:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    3844:	00373161 	eorseq	r3, r7, r1, ror #2
    3848:	5f4d5241 	svcpl	0x004d5241
    384c:	41005447 	tstmi	r0, r7, asr #8
    3850:	4c5f4d52 	mrrcmi	13, 5, r4, pc, cr2	; <UNPREDICTABLE>
    3854:	2e2e0054 	mcrcs	0, 1, r0, cr14, cr4, {2}
    3858:	2f2e2e2f 	svccs	0x002e2e2f
    385c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3860:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3864:	2f2e2e2f 	svccs	0x002e2e2f
    3868:	6762696c 	strbvs	r6, [r2, -ip, ror #18]!
    386c:	6c2f6363 	stcvs	3, cr6, [pc], #-396	; 36e8 <_Min_Stack_Size+0x32e8>
    3870:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    3874:	632e3263 			; <UNDEFINED> instruction: 0x632e3263
    3878:	52415400 	subpl	r5, r1, #0, 8
    387c:	5f544547 	svcpl	0x00544547
    3880:	5f555043 	svcpl	0x00555043
    3884:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3888:	34727865 	ldrbtcc	r7, [r2], #-2149	; 0xfffff79b
    388c:	41540066 	cmpmi	r4, r6, rrx
    3890:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3894:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3898:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    389c:	00303239 	eorseq	r3, r0, r9, lsr r2
    38a0:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
    38a4:	4352415f 	cmpmi	r2, #-1073741801	; 0xc0000017
    38a8:	45375f48 	ldrmi	r5, [r7, #-3912]!	; 0xfffff0b8
    38ac:	4154004d 	cmpmi	r4, sp, asr #32
    38b0:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    38b4:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    38b8:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    38bc:	61786574 	cmnvs	r8, r4, ror r5
    38c0:	68003231 	stmdavs	r0, {r0, r4, r5, r9, ip, sp}
    38c4:	76687361 	strbtvc	r7, [r8], -r1, ror #6
    38c8:	745f6c61 	ldrbvc	r6, [pc], #-3169	; 38d0 <_Min_Stack_Size+0x34d0>
    38cc:	53414200 	movtpl	r4, #4608	; 0x1200
    38d0:	52415f45 	subpl	r5, r1, #276	; 0x114
    38d4:	365f4843 	ldrbcc	r4, [pc], -r3, asr #16
    38d8:	69005a4b 	stmdbvs	r0, {r0, r1, r3, r6, r9, fp, ip, lr}
    38dc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    38e0:	00737469 	rsbseq	r7, r3, r9, ror #8
    38e4:	5f6d7261 	svcpl	0x006d7261
    38e8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    38ec:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    38f0:	6477685f 	ldrbtvs	r6, [r7], #-2143	; 0xfffff7a1
    38f4:	61007669 	tstvs	r0, r9, ror #12
    38f8:	665f6d72 			; <UNDEFINED> instruction: 0x665f6d72
    38fc:	645f7570 	ldrbvs	r7, [pc], #-1392	; 3904 <_Min_Stack_Size+0x3504>
    3900:	00637365 	rsbeq	r7, r3, r5, ror #6
    3904:	5f617369 	svcpl	0x00617369
    3908:	5f746962 	svcpl	0x00746962
    390c:	36317066 	ldrtcc	r7, [r1], -r6, rrx
    3910:	4d524100 	ldfmie	f4, [r2, #-0]
    3914:	0049485f 	subeq	r4, r9, pc, asr r8
    3918:	47524154 			; <UNDEFINED> instruction: 0x47524154
    391c:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3920:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3924:	00326d72 	eorseq	r6, r2, r2, ror sp
    3928:	47524154 			; <UNDEFINED> instruction: 0x47524154
    392c:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3930:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3934:	00336d72 	eorseq	r6, r3, r2, ror sp
    3938:	47524154 			; <UNDEFINED> instruction: 0x47524154
    393c:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3940:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3944:	31376d72 	teqcc	r7, r2, ror sp
    3948:	54003030 	strpl	r3, [r0], #-48	; 0xffffffd0
    394c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3950:	50435f54 	subpl	r5, r3, r4, asr pc
    3954:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3958:	5400366d 	strpl	r3, [r0], #-1645	; 0xfffff993
    395c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3960:	50435f54 	subpl	r5, r3, r4, asr pc
    3964:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3968:	5400376d 	strpl	r3, [r0], #-1901	; 0xfffff893
    396c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3970:	50435f54 	subpl	r5, r3, r4, asr pc
    3974:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3978:	5400386d 	strpl	r3, [r0], #-2157	; 0xfffff793
    397c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3980:	50435f54 	subpl	r5, r3, r4, asr pc
    3984:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3988:	5400396d 	strpl	r3, [r0], #-2413	; 0xfffff693
    398c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3990:	50435f54 	subpl	r5, r3, r4, asr pc
    3994:	61665f55 	cmnvs	r6, r5, asr pc
    3998:	00363236 	eorseq	r3, r6, r6, lsr r2
    399c:	47524154 			; <UNDEFINED> instruction: 0x47524154
    39a0:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    39a4:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    39a8:	6e5f6d72 	mrcvs	13, 2, r6, cr15, cr2, {3}
    39ac:	00656e6f 	rsbeq	r6, r5, pc, ror #28
    39b0:	5f6d7261 	svcpl	0x006d7261
    39b4:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    39b8:	736d635f 	cmnvc	sp, #2080374785	; 0x7c000001
    39bc:	41540065 	cmpmi	r4, r5, rrx
    39c0:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    39c4:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    39c8:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    39cc:	00303136 	eorseq	r3, r0, r6, lsr r1
    39d0:	47524154 			; <UNDEFINED> instruction: 0x47524154
    39d4:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    39d8:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    39dc:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    39e0:	00346d78 	eorseq	r6, r4, r8, ror sp
    39e4:	47524154 			; <UNDEFINED> instruction: 0x47524154
    39e8:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    39ec:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    39f0:	30316d72 	eorscc	r6, r1, r2, ror sp
    39f4:	41540065 	cmpmi	r4, r5, rrx
    39f8:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    39fc:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3a00:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3a04:	6d786574 	cfldr64vs	mvdx6, [r8, #-464]!	; 0xfffffe30
    3a08:	41540037 	cmpmi	r4, r7, lsr r0
    3a0c:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3a10:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3a14:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    3a18:	30303537 	eorscc	r3, r0, r7, lsr r5
    3a1c:	54006566 	strpl	r6, [r0], #-1382	; 0xfffffa9a
    3a20:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3a24:	50435f54 	subpl	r5, r3, r4, asr pc
    3a28:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3a2c:	3031376d 	eorscc	r3, r1, sp, ror #14
    3a30:	72610063 	rsbvc	r0, r1, #99	; 0x63
    3a34:	6f635f6d 	svcvs	0x00635f6d
    3a38:	635f646e 	cmpvs	pc, #1845493760	; 0x6e000000
    3a3c:	0065646f 	rsbeq	r6, r5, pc, ror #8
    3a40:	5f4d5241 	svcpl	0x004d5241
    3a44:	5f534350 	svcpl	0x00534350
    3a48:	43504141 	cmpmi	r0, #1073741840	; 0x40000010
    3a4c:	73690053 	cmnvc	r9, #83	; 0x53
    3a50:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3a54:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    3a58:	5f38766d 	svcpl	0x0038766d
    3a5c:	41420032 	cmpmi	r2, r2, lsr r0
    3a60:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    3a64:	5f484352 	svcpl	0x00484352
    3a68:	54004d33 	strpl	r4, [r0], #-3379	; 0xfffff2cd
    3a6c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3a70:	50435f54 	subpl	r5, r3, r4, asr pc
    3a74:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3a78:	3031376d 	eorscc	r3, r1, sp, ror #14
    3a7c:	72610074 	rsbvc	r0, r1, #116	; 0x74
    3a80:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    3a84:	695f6863 	ldmdbvs	pc, {r0, r1, r5, r6, fp, sp, lr}^	; <UNPREDICTABLE>
    3a88:	786d6d77 	stmdavc	sp!, {r0, r1, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    3a8c:	69003274 	stmdbvs	r0, {r2, r4, r5, r6, r9, ip, sp}
    3a90:	6e5f6173 	mrcvs	1, 2, r6, cr15, cr3, {3}
    3a94:	625f6d75 	subsvs	r6, pc, #7488	; 0x1d40
    3a98:	00737469 	rsbseq	r7, r3, r9, ror #8
    3a9c:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3aa0:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3aa4:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    3aa8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3aac:	70306d78 	eorsvc	r6, r0, r8, ror sp
    3ab0:	7373756c 	cmnvc	r3, #108, 10	; 0x1b000000
    3ab4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    3ab8:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
    3abc:	796c7069 	stmdbvc	ip!, {r0, r3, r5, r6, ip, sp, lr}^
    3ac0:	52415400 	subpl	r5, r1, #0, 8
    3ac4:	5f544547 	svcpl	0x00544547
    3ac8:	5f555043 	svcpl	0x00555043
    3acc:	6e797865 	cdpvs	8, 7, cr7, cr9, cr5, {3}
    3ad0:	316d736f 	cmncc	sp, pc, ror #6
    3ad4:	52415400 	subpl	r5, r1, #0, 8
    3ad8:	5f544547 	svcpl	0x00544547
    3adc:	5f555043 	svcpl	0x00555043
    3ae0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3ae4:	35727865 	ldrbcc	r7, [r2, #-2149]!	; 0xfffff79b
    3ae8:	73690032 	cmnvc	r9, #50	; 0x32
    3aec:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3af0:	64745f74 	ldrbtvs	r5, [r4], #-3956	; 0xfffff08c
    3af4:	70007669 	andvc	r7, r0, r9, ror #12
    3af8:	65666572 	strbvs	r6, [r6, #-1394]!	; 0xfffffa8e
    3afc:	656e5f72 	strbvs	r5, [lr, #-3954]!	; 0xfffff08e
    3b00:	665f6e6f 	ldrbvs	r6, [pc], -pc, ror #28
    3b04:	365f726f 	ldrbcc	r7, [pc], -pc, ror #4
    3b08:	74696234 	strbtvc	r6, [r9], #-564	; 0xfffffdcc
    3b0c:	73690073 	cmnvc	r9, #115	; 0x73
    3b10:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3b14:	70665f74 	rsbvc	r5, r6, r4, ror pc
    3b18:	6d663631 	stclvs	6, cr3, [r6, #-196]!	; 0xffffff3c
    3b1c:	4154006c 	cmpmi	r4, ip, rrx
    3b20:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3b24:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3b28:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3b2c:	61786574 	cmnvs	r8, r4, ror r5
    3b30:	54003233 	strpl	r3, [r0], #-563	; 0xfffffdcd
    3b34:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3b38:	50435f54 	subpl	r5, r3, r4, asr pc
    3b3c:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3b40:	3032366d 	eorscc	r3, r2, sp, ror #12
    3b44:	61736900 	cmnvs	r3, r0, lsl #18
    3b48:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    3b4c:	3170665f 	cmncc	r0, pc, asr r6
    3b50:	6e6f6336 	mcrvs	3, 3, r6, cr15, cr6, {1}
    3b54:	6e750076 	mrcvs	0, 3, r0, cr5, cr6, {3}
    3b58:	63657073 	cmnvs	r5, #115	; 0x73
    3b5c:	74735f76 	ldrbtvc	r5, [r3], #-3958	; 0xfffff08a
    3b60:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    3b64:	41540073 	cmpmi	r4, r3, ror r0
    3b68:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3b6c:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3b70:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    3b74:	36353131 			; <UNDEFINED> instruction: 0x36353131
    3b78:	00733274 	rsbseq	r3, r3, r4, ror r2
    3b7c:	5f617369 	svcpl	0x00617369
    3b80:	5f746962 	svcpl	0x00746962
    3b84:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    3b88:	41540036 	cmpmi	r4, r6, lsr r0
    3b8c:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3b90:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3b94:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    3b98:	36323031 			; <UNDEFINED> instruction: 0x36323031
    3b9c:	00736a65 	rsbseq	r6, r3, r5, ror #20
    3ba0:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3ba4:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3ba8:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    3bac:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3bb0:	35376178 	ldrcc	r6, [r7, #-376]!	; 0xfffffe88
    3bb4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3bb8:	35617865 	strbcc	r7, [r1, #-2149]!	; 0xfffff79b
    3bbc:	72610035 	rsbvc	r0, r1, #53	; 0x35
    3bc0:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    3bc4:	6d336863 	ldcvs	8, cr6, [r3, #-396]!	; 0xfffffe74
    3bc8:	52415400 	subpl	r5, r1, #0, 8
    3bcc:	5f544547 	svcpl	0x00544547
    3bd0:	5f555043 	svcpl	0x00555043
    3bd4:	30366166 	eorscc	r6, r6, r6, ror #2
    3bd8:	00657436 	rsbeq	r7, r5, r6, lsr r4
    3bdc:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3be0:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3be4:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3be8:	32396d72 	eorscc	r6, r9, #7296	; 0x1c80
    3bec:	736a6536 	cmnvc	sl, #226492416	; 0xd800000
    3bf0:	53414200 	movtpl	r4, #4608	; 0x1200
    3bf4:	52415f45 	subpl	r5, r1, #276	; 0x114
    3bf8:	345f4843 	ldrbcc	r4, [pc], #-2115	; 3c00 <_Min_Stack_Size+0x3800>
    3bfc:	73690054 	cmnvc	r9, #84	; 0x54
    3c00:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3c04:	72635f74 	rsbvc	r5, r3, #116, 30	; 0x1d0
    3c08:	6f747079 	svcvs	0x00747079
    3c0c:	6d726100 	ldfvse	f6, [r2, #-0]
    3c10:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    3c14:	6e695f73 	mcrvs	15, 3, r5, cr9, cr3, {3}
    3c18:	7165735f 	cmnvc	r5, pc, asr r3
    3c1c:	636e6575 	cmnvs	lr, #490733568	; 0x1d400000
    3c20:	41420065 	cmpmi	r2, r5, rrx
    3c24:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    3c28:	5f484352 	svcpl	0x00484352
    3c2c:	00455435 	subeq	r5, r5, r5, lsr r4
    3c30:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3c34:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3c38:	655f5550 	ldrbvs	r5, [pc, #-1360]	; 36f0 <_Min_Stack_Size+0x32f0>
    3c3c:	31333970 	teqcc	r3, r0, ror r9
    3c40:	73690032 	cmnvc	r9, #50	; 0x32
    3c44:	65665f61 	strbvs	r5, [r6, #-3937]!	; 0xfffff09f
    3c48:	72757461 	rsbsvc	r7, r5, #1627389952	; 0x61000000
    3c4c:	73690065 	cmnvc	r9, #101	; 0x65
    3c50:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3c54:	6d735f74 	ldclvs	15, cr5, [r3, #-464]!	; 0xfffffe30
    3c58:	6d6c6c61 	stclvs	12, cr6, [ip, #-388]!	; 0xfffffe7c
    3c5c:	61006c75 	tstvs	r0, r5, ror ip
    3c60:	6c5f6d72 	mrrcvs	13, 7, r6, pc, cr2	; <UNPREDICTABLE>
    3c64:	5f676e61 	svcpl	0x00676e61
    3c68:	7074756f 	rsbsvc	r7, r4, pc, ror #10
    3c6c:	6f5f7475 	svcvs	0x005f7475
    3c70:	63656a62 	cmnvs	r5, #401408	; 0x62000
    3c74:	74615f74 	strbtvc	r5, [r1], #-3956	; 0xfffff08c
    3c78:	62697274 	rsbvs	r7, r9, #116, 4	; 0x40000007
    3c7c:	73657475 	cmnvc	r5, #1962934272	; 0x75000000
    3c80:	6f6f685f 	svcvs	0x006f685f
    3c84:	7369006b 	cmnvc	r9, #107	; 0x6b
    3c88:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3c8c:	70665f74 	rsbvc	r5, r6, r4, ror pc
    3c90:	3233645f 	eorscc	r6, r3, #1593835520	; 0x5f000000
    3c94:	4d524100 	ldfmie	f4, [r2, #-0]
    3c98:	00454e5f 	subeq	r4, r5, pc, asr lr
    3c9c:	5f617369 	svcpl	0x00617369
    3ca0:	5f746962 	svcpl	0x00746962
    3ca4:	00386562 	eorseq	r6, r8, r2, ror #10
    3ca8:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3cac:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3cb0:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3cb4:	31316d72 	teqcc	r1, r2, ror sp
    3cb8:	7a6a3637 	bvc	1a9159c <_Min_Stack_Size+0x1a9119c>
    3cbc:	41420073 	hvcmi	8195	; 0x2003
    3cc0:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    3cc4:	5f484352 	svcpl	0x00484352
    3cc8:	69004535 	stmdbvs	r0, {r0, r2, r4, r5, r8, sl, lr}
    3ccc:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    3cd0:	615f7469 	cmpvs	pc, r9, ror #8
    3cd4:	00766964 	rsbseq	r6, r6, r4, ror #18
    3cd8:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3cdc:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3ce0:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3ce4:	34396d72 	ldrtcc	r6, [r9], #-3442	; 0xfffff28e
    3ce8:	00736536 	rsbseq	r6, r3, r6, lsr r5
    3cec:	636f7270 	cmnvs	pc, #112, 4
    3cf0:	6f737365 	svcvs	0x00737365
    3cf4:	79745f72 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3cf8:	61006570 	tstvs	r0, r0, ror r5
    3cfc:	665f6c6c 	ldrbvs	r6, [pc], -ip, ror #24
    3d00:	00737570 	rsbseq	r7, r3, r0, ror r5
    3d04:	5f6d7261 	svcpl	0x006d7261
    3d08:	00736370 	rsbseq	r6, r3, r0, ror r3
    3d0c:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
    3d10:	4352415f 	cmpmi	r2, #-1073741801	; 0xc0000017
    3d14:	54355f48 	ldrtpl	r5, [r5], #-3912	; 0xfffff0b8
    3d18:	6d726100 	ldfvse	f6, [r2, #-0]
    3d1c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    3d20:	00743468 	rsbseq	r3, r4, r8, ror #8
    3d24:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3d28:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3d2c:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    3d30:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3d34:	35316178 	ldrcc	r6, [r1, #-376]!	; 0xfffffe88
    3d38:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3d3c:	37617865 	strbcc	r7, [r1, -r5, ror #16]!
    3d40:	6d726100 	ldfvse	f6, [r2, #-0]
    3d44:	6e75745f 	mrcvs	4, 3, r7, cr5, cr15, {2}
    3d48:	62775f65 	rsbsvs	r5, r7, #404	; 0x194
    3d4c:	68006675 	stmdavs	r0, {r0, r2, r4, r5, r6, r9, sl, sp, lr}
    3d50:	5f626174 	svcpl	0x00626174
    3d54:	68736168 	ldmdavs	r3!, {r3, r5, r6, r8, sp, lr}^
    3d58:	61736900 	cmnvs	r3, r0, lsl #18
    3d5c:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    3d60:	6975715f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, ip, sp, lr}^
    3d64:	6e5f6b72 	vmovvs.s8	r6, d15[3]
    3d68:	6f765f6f 	svcvs	0x00765f6f
    3d6c:	6974616c 	ldmdbvs	r4!, {r2, r3, r5, r6, r8, sp, lr}^
    3d70:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
    3d74:	41540065 	cmpmi	r4, r5, rrx
    3d78:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3d7c:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3d80:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3d84:	6d786574 	cfldr64vs	mvdx6, [r8, #-464]!	; 0xfffffe30
    3d88:	41540030 	cmpmi	r4, r0, lsr r0
    3d8c:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3d90:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3d94:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3d98:	6d786574 	cfldr64vs	mvdx6, [r8, #-464]!	; 0xfffffe30
    3d9c:	41540031 	cmpmi	r4, r1, lsr r0
    3da0:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3da4:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3da8:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3dac:	6d786574 	cfldr64vs	mvdx6, [r8, #-464]!	; 0xfffffe30
    3db0:	73690033 	cmnvc	r9, #51	; 0x33
    3db4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3db8:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    3dbc:	5f38766d 	svcpl	0x0038766d
    3dc0:	72610031 	rsbvc	r0, r1, #49	; 0x31
    3dc4:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    3dc8:	6e5f6863 	cdpvs	8, 5, cr6, cr15, cr3, {3}
    3dcc:	00656d61 	rsbeq	r6, r5, r1, ror #26
    3dd0:	5f617369 	svcpl	0x00617369
    3dd4:	5f746962 	svcpl	0x00746962
    3dd8:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    3ddc:	00335f38 	eorseq	r5, r3, r8, lsr pc
    3de0:	5f617369 	svcpl	0x00617369
    3de4:	5f746962 	svcpl	0x00746962
    3de8:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    3dec:	00345f38 	eorseq	r5, r4, r8, lsr pc
    3df0:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3df4:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3df8:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    3dfc:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3e00:	33356178 	teqcc	r5, #120, 2
    3e04:	52415400 	subpl	r5, r1, #0, 8
    3e08:	5f544547 	svcpl	0x00544547
    3e0c:	5f555043 	svcpl	0x00555043
    3e10:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3e14:	35617865 	strbcc	r7, [r1, #-2149]!	; 0xfffff79b
    3e18:	41540035 	cmpmi	r4, r5, lsr r0
    3e1c:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3e20:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3e24:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    3e28:	696d6437 	stmdbvs	sp!, {r0, r1, r2, r4, r5, sl, sp, lr}^
    3e2c:	52415400 	subpl	r5, r1, #0, 8
    3e30:	5f544547 	svcpl	0x00544547
    3e34:	5f555043 	svcpl	0x00555043
    3e38:	6f63706d 	svcvs	0x0063706d
    3e3c:	69006572 	stmdbvs	r0, {r1, r4, r5, r6, r8, sl, sp, lr}
    3e40:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    3e44:	615f7469 	cmpvs	pc, r9, ror #8
    3e48:	33766d72 	cmncc	r6, #7296	; 0x1c80
    3e4c:	7261006d 	rsbvc	r0, r1, #109	; 0x6d
    3e50:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    3e54:	6e5f6863 	cdpvs	8, 5, cr6, cr15, cr3, {3}
    3e58:	006d746f 	rsbeq	r7, sp, pc, ror #8
    3e5c:	5f6d7261 	svcpl	0x006d7261
    3e60:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    3e64:	54006535 	strpl	r6, [r0], #-1333	; 0xfffffacb
    3e68:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3e6c:	50435f54 	subpl	r5, r3, r4, asr pc
    3e70:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3e74:	3230316d 	eorscc	r3, r0, #1073741851	; 0x4000001b
    3e78:	42006530 	andmi	r6, r0, #48, 10	; 0xc000000
    3e7c:	5f455341 	svcpl	0x00455341
    3e80:	48435241 	stmdami	r3, {r0, r6, r9, ip, lr}^
    3e84:	004a365f 	subeq	r3, sl, pc, asr r6
    3e88:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3e8c:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3e90:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3e94:	36396d72 			; <UNDEFINED> instruction: 0x36396d72
    3e98:	00736538 	rsbseq	r6, r3, r8, lsr r5
    3e9c:	47524154 			; <UNDEFINED> instruction: 0x47524154
    3ea0:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    3ea4:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    3ea8:	34376d72 	ldrtcc	r6, [r7], #-3442	; 0xfffff28e
    3eac:	42007430 	andmi	r7, r0, #48, 8	; 0x30000000
    3eb0:	5f455341 	svcpl	0x00455341
    3eb4:	48435241 	stmdami	r3, {r0, r6, r9, ip, lr}^
    3eb8:	004d365f 	subeq	r3, sp, pc, asr r6
    3ebc:	5f617369 	svcpl	0x00617369
    3ec0:	5f746962 	svcpl	0x00746962
    3ec4:	6d6d7769 	stclvs	7, cr7, [sp, #-420]!	; 0xfffffe5c
    3ec8:	54007478 	strpl	r7, [r0], #-1144	; 0xfffffb88
    3ecc:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    3ed0:	50435f54 	subpl	r5, r3, r4, asr pc
    3ed4:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    3ed8:	3030376d 	eorscc	r3, r0, sp, ror #14
    3edc:	52415400 	subpl	r5, r1, #0, 8
    3ee0:	5f544547 	svcpl	0x00544547
    3ee4:	5f555043 	svcpl	0x00555043
    3ee8:	316d7261 	cmncc	sp, r1, ror #4
    3eec:	6a363331 	bvs	d90bb8 <_Min_Stack_Size+0xd907b8>
    3ef0:	41007366 	tstmi	r0, r6, ror #6
    3ef4:	4c5f4d52 	mrrcmi	13, 5, r4, pc, cr2	; <UNPREDICTABLE>
    3ef8:	41540053 	cmpmi	r4, r3, asr r0
    3efc:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3f00:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3f04:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    3f08:	30323031 	eorscc	r3, r2, r1, lsr r0
    3f0c:	41420074 	hvcmi	8196	; 0x2004
    3f10:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    3f14:	5f484352 	svcpl	0x00484352
    3f18:	41005a36 	tstmi	r0, r6, lsr sl
    3f1c:	505f4d52 	subspl	r4, pc, r2, asr sp	; <UNPREDICTABLE>
    3f20:	415f5343 	cmpmi	pc, r3, asr #6
    3f24:	53435041 	movtpl	r5, #12353	; 0x3041
    3f28:	5046565f 	subpl	r5, r6, pc, asr r6
    3f2c:	52415400 	subpl	r5, r1, #0, 8
    3f30:	5f544547 	svcpl	0x00544547
    3f34:	5f555043 	svcpl	0x00555043
    3f38:	6d6d7769 	stclvs	7, cr7, [sp, #-420]!	; 0xfffffe5c
    3f3c:	00327478 	eorseq	r7, r2, r8, ror r4
    3f40:	5f617369 	svcpl	0x00617369
    3f44:	5f746962 	svcpl	0x00746962
    3f48:	6e6f656e 	cdpvs	5, 6, cr6, cr15, cr14, {3}
    3f4c:	6d726100 	ldfvse	f6, [r2, #-0]
    3f50:	7570665f 	ldrbvc	r6, [r0, #-1631]!	; 0xfffff9a1
    3f54:	7474615f 	ldrbtvc	r6, [r4], #-351	; 0xfffffea1
    3f58:	73690072 	cmnvc	r9, #114	; 0x72
    3f5c:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3f60:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    3f64:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    3f68:	4154006d 	cmpmi	r4, sp, rrx
    3f6c:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3f70:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3f74:	3661665f 			; <UNDEFINED> instruction: 0x3661665f
    3f78:	65743632 	ldrbvs	r3, [r4, #-1586]!	; 0xfffff9ce
    3f7c:	52415400 	subpl	r5, r1, #0, 8
    3f80:	5f544547 	svcpl	0x00544547
    3f84:	5f555043 	svcpl	0x00555043
    3f88:	7672616d 	ldrbtvc	r6, [r2], -sp, ror #2
    3f8c:	5f6c6c65 	svcpl	0x006c6c65
    3f90:	00346a70 	eorseq	r6, r4, r0, ror sl
    3f94:	62617468 	rsbvs	r7, r1, #104, 8	; 0x68000000
    3f98:	7361685f 	cmnvc	r1, #6225920	; 0x5f0000
    3f9c:	6f705f68 	svcvs	0x00705f68
    3fa0:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    3fa4:	41540072 	cmpmi	r4, r2, ror r0
    3fa8:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3fac:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3fb0:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3fb4:	61786574 	cmnvs	r8, r4, ror r5
    3fb8:	61003533 	tstvs	r0, r3, lsr r5
    3fbc:	745f6d72 	ldrbvc	r6, [pc], #-3442	; 3fc4 <_Min_Stack_Size+0x3bc4>
    3fc0:	5f656e75 	svcpl	0x00656e75
    3fc4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    3fc8:	615f7865 	cmpvs	pc, r5, ror #16
    3fcc:	73690039 	cmnvc	r9, #57	; 0x39
    3fd0:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    3fd4:	77695f74 			; <UNDEFINED> instruction: 0x77695f74
    3fd8:	74786d6d 	ldrbtvc	r6, [r8], #-3437	; 0xfffff293
    3fdc:	41540032 	cmpmi	r4, r2, lsr r0
    3fe0:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    3fe4:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    3fe8:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    3fec:	61786574 	cmnvs	r8, r4, ror r5
    3ff0:	6f633237 	svcvs	0x00633237
    3ff4:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    3ff8:	00333561 	eorseq	r3, r3, r1, ror #10
    3ffc:	30715f5f 	rsbscc	r5, r1, pc, asr pc
    4000:	715f5f00 	cmpvc	pc, r0, lsl #30
    4004:	73690031 	cmnvc	r9, #49	; 0x31
    4008:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    400c:	68745f74 	ldmdavs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4010:	32626d75 	rsbcc	r6, r2, #7488	; 0x1d40
    4014:	53414200 	movtpl	r4, #4608	; 0x1200
    4018:	52415f45 	subpl	r5, r1, #276	; 0x114
    401c:	375f4843 	ldrbcc	r4, [pc, -r3, asr #16]
    4020:	73690041 	cmnvc	r9, #65	; 0x41
    4024:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4028:	6f645f74 	svcvs	0x00645f74
    402c:	6f727074 	svcvs	0x00727074
    4030:	41420064 	cmpmi	r2, r4, rrx
    4034:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    4038:	5f484352 	svcpl	0x00484352
    403c:	72610030 	rsbvc	r0, r1, #48	; 0x30
    4040:	70665f6d 	rsbvc	r5, r6, sp, ror #30
    4044:	745f3631 	ldrbvc	r3, [pc], #-1585	; 404c <_Min_Stack_Size+0x3c4c>
    4048:	5f657079 	svcpl	0x00657079
    404c:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
    4050:	4d524100 	ldfmie	f4, [r2, #-0]
    4054:	00494d5f 	subeq	r4, r9, pc, asr sp
    4058:	5f6d7261 	svcpl	0x006d7261
    405c:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4060:	61006b36 	tstvs	r0, r6, lsr fp
    4064:	615f6d72 	cmpvs	pc, r2, ror sp	; <UNPREDICTABLE>
    4068:	36686372 			; <UNDEFINED> instruction: 0x36686372
    406c:	4142006d 	cmpmi	r2, sp, rrx
    4070:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    4074:	5f484352 	svcpl	0x00484352
    4078:	41420034 	cmpmi	r2, r4, lsr r0
    407c:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    4080:	5f484352 	svcpl	0x00484352
    4084:	5f005237 	svcpl	0x00005237
    4088:	706f705f 	rsbvc	r7, pc, pc, asr r0	; <UNPREDICTABLE>
    408c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    4090:	61745f74 	cmnvs	r4, r4, ror pc
    4094:	73690062 	cmnvc	r9, #98	; 0x62
    4098:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    409c:	6d635f74 	stclvs	15, cr5, [r3, #-464]!	; 0xfffffe30
    40a0:	54006573 	strpl	r6, [r0], #-1395	; 0xfffffa8d
    40a4:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    40a8:	50435f54 	subpl	r5, r3, r4, asr pc
    40ac:	6f635f55 	svcvs	0x00635f55
    40b0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    40b4:	00333761 	eorseq	r3, r3, r1, ror #14
    40b8:	30725f5f 	rsbscc	r5, r2, pc, asr pc
    40bc:	725f5f00 	subsvc	r5, pc, #0, 30
    40c0:	73690031 	cmnvc	r9, #49	; 0x31
    40c4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    40c8:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    40cc:	6535766d 	ldrvs	r7, [r5, #-1645]!	; 0xfffff993
    40d0:	6d726100 	ldfvse	f6, [r2, #-0]
    40d4:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    40d8:	6f6e5f68 	svcvs	0x006e5f68
    40dc:	6c6f765f 	stclvs	6, cr7, [pc], #-380	; 3f68 <_Min_Stack_Size+0x3b68>
    40e0:	6c697461 	cfstrdvs	mvd7, [r9], #-388	; 0xfffffe7c
    40e4:	65635f65 	strbvs	r5, [r3, #-3941]!	; 0xfffff09b
    40e8:	53414200 	movtpl	r4, #4608	; 0x1200
    40ec:	52415f45 	subpl	r5, r1, #276	; 0x114
    40f0:	385f4843 	ldmdacc	pc, {r0, r1, r6, fp, lr}^	; <UNPREDICTABLE>
    40f4:	41540041 	cmpmi	r4, r1, asr #32
    40f8:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    40fc:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    4100:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4104:	32323031 	eorscc	r3, r2, #49	; 0x31
    4108:	41420065 	cmpmi	r2, r5, rrx
    410c:	415f4553 	cmpmi	pc, r3, asr r5	; <UNPREDICTABLE>
    4110:	5f484352 	svcpl	0x00484352
    4114:	54005238 	strpl	r5, [r0], #-568	; 0xfffffdc8
    4118:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    411c:	50435f54 	subpl	r5, r3, r4, asr pc
    4120:	6f635f55 	svcvs	0x00635f55
    4124:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    4128:	63333761 	teqvs	r3, #25427968	; 0x1840000
    412c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4130:	35336178 	ldrcc	r6, [r3, #-376]!	; 0xfffffe88
    4134:	4d524100 	ldfmie	f4, [r2, #-0]
    4138:	00564e5f 	subseq	r4, r6, pc, asr lr
    413c:	5f6d7261 	svcpl	0x006d7261
    4140:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4144:	72610034 	rsbvc	r0, r1, #52	; 0x34
    4148:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    414c:	00356863 	eorseq	r6, r5, r3, ror #16
    4150:	5f6d7261 	svcpl	0x006d7261
    4154:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    4158:	72610037 	rsbvc	r0, r1, #55	; 0x37
    415c:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    4160:	00386863 	eorseq	r6, r8, r3, ror #16
    4164:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
    4168:	4352415f 	cmpmi	r2, #-1073741801	; 0xc0000017
    416c:	4b365f48 	blmi	d9be94 <_Min_Stack_Size+0xd9ba94>
    4170:	52415400 	subpl	r5, r1, #0, 8
    4174:	5f544547 	svcpl	0x00544547
    4178:	5f555043 	svcpl	0x00555043
    417c:	396d7261 	stmdbcc	sp!, {r0, r5, r6, r9, ip, sp, lr}^
    4180:	00743034 	rsbseq	r3, r4, r4, lsr r0
    4184:	5f6d7261 	svcpl	0x006d7261
    4188:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    418c:	72610036 	rsbvc	r0, r1, #54	; 0x36
    4190:	75745f6d 	ldrbvc	r5, [r4, #-3949]!	; 0xfffff093
    4194:	785f656e 	ldmdavc	pc, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    4198:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    419c:	57440065 	strbpl	r0, [r4, -r5, rrx]
    41a0:	75727473 	ldrbvc	r7, [r2, #-1139]!	; 0xfffffb8d
    41a4:	54007463 	strpl	r7, [r0], #-1123	; 0xfffffb9d
    41a8:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    41ac:	50435f54 	subpl	r5, r3, r4, asr pc
    41b0:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    41b4:	3035376d 	eorscc	r3, r5, sp, ror #14
    41b8:	616d0030 	cmnvs	sp, r0, lsr r0
    41bc:	676e696b 	strbvs	r6, [lr, -fp, ror #18]!
    41c0:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    41c4:	745f7473 	ldrbvc	r7, [pc], #-1139	; 41cc <_Min_Stack_Size+0x3dcc>
    41c8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    41cc:	75687400 	strbvc	r7, [r8, #-1024]!	; 0xfffffc00
    41d0:	635f626d 	cmpvs	pc, #-805306362	; 0xd0000006
    41d4:	5f6c6c61 	svcpl	0x006c6c61
    41d8:	5f616976 	svcpl	0x00616976
    41dc:	6562616c 	strbvs	r6, [r2, #-364]!	; 0xfffffe94
    41e0:	7369006c 	cmnvc	r9, #108	; 0x6c
    41e4:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    41e8:	70665f74 	rsbvc	r5, r6, r4, ror pc
    41ec:	54003576 	strpl	r3, [r0], #-1398	; 0xfffffa8a
    41f0:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    41f4:	50435f54 	subpl	r5, r3, r4, asr pc
    41f8:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    41fc:	3031376d 	eorscc	r3, r1, sp, ror #14
    4200:	61736900 	cmnvs	r3, r0, lsl #18
    4204:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4208:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    420c:	006b3676 	rsbeq	r3, fp, r6, ror r6
    4210:	47524154 			; <UNDEFINED> instruction: 0x47524154
    4214:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    4218:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    421c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4220:	00376178 	eorseq	r6, r7, r8, ror r1
    4224:	47524154 			; <UNDEFINED> instruction: 0x47524154
    4228:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    422c:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    4230:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4234:	00386178 	eorseq	r6, r8, r8, ror r1
    4238:	47524154 			; <UNDEFINED> instruction: 0x47524154
    423c:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    4240:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    4244:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4248:	00396178 	eorseq	r6, r9, r8, ror r1
    424c:	30645f5f 	rsbcc	r5, r4, pc, asr pc
    4250:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 4258 <_Min_Stack_Size+0x3e58>
    4254:	4e470031 	mcrmi	0, 2, r0, cr7, cr1, {1}
    4258:	31432055 	qdaddcc	r2, r5, r3
    425c:	2e382037 	mrccs	0, 1, r2, cr8, cr7, {1}
    4260:	20312e33 	eorscs	r2, r1, r3, lsr lr
    4264:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
    4268:	33303730 	teqcc	r0, #48, 14	; 0xc00000
    426c:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
    4270:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    4274:	5b202965 	blpl	80e810 <_Min_Stack_Size+0x80e410>
    4278:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    427c:	72622d38 	rsbvc	r2, r2, #56, 26	; 0xe00
    4280:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
    4284:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
    4288:	6f697369 	svcvs	0x00697369
    428c:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
    4290:	37323033 			; <UNDEFINED> instruction: 0x37323033
    4294:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
    4298:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    429c:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
    42a0:	616f6c66 	cmnvs	pc, r6, ror #24
    42a4:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    42a8:	6f733d69 	svcvs	0x00733d69
    42ac:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
    42b0:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
    42b4:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
    42b8:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    42bc:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
    42c0:	672d2067 	strvs	r2, [sp, -r7, rrx]!
    42c4:	20672d20 	rsbcs	r2, r7, r0, lsr #26
    42c8:	20324f2d 	eorscs	r4, r2, sp, lsr #30
    42cc:	20324f2d 	eorscs	r4, r2, sp, lsr #30
    42d0:	20324f2d 	eorscs	r4, r2, sp, lsr #30
    42d4:	7562662d 	strbvc	r6, [r2, #-1581]!	; 0xfffff9d3
    42d8:	69646c69 	stmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
    42dc:	6c2d676e 	stcvs	7, cr6, [sp], #-440	; 0xfffffe48
    42e0:	63676269 	cmnvs	r7, #-1879048186	; 0x90000006
    42e4:	662d2063 	strtvs	r2, [sp], -r3, rrx
    42e8:	732d6f6e 			; <UNDEFINED> instruction: 0x732d6f6e
    42ec:	6b636174 	blvs	18dc8c4 <_Min_Stack_Size+0x18dc4c4>
    42f0:	6f72702d 	svcvs	0x0072702d
    42f4:	74636574 	strbtvc	r6, [r3], #-1396	; 0xfffffa8c
    42f8:	2d20726f 	sfmcs	f7, 4, [r0, #-444]!	; 0xfffffe44
    42fc:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 416c <_Min_Stack_Size+0x3d6c>
    4300:	696c6e69 	stmdbvs	ip!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    4304:	2d20656e 	cfstr32cs	mvfx6, [r0, #-440]!	; 0xfffffe48
    4308:	63786566 	cmnvs	r8, #427819008	; 0x19800000
    430c:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
    4310:	20736e6f 	rsbscs	r6, r3, pc, ror #28
    4314:	6976662d 	ldmdbvs	r6!, {r0, r2, r3, r5, r9, sl, sp, lr}^
    4318:	69626973 	stmdbvs	r2!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    431c:	7974696c 	ldmdbvc	r4!, {r2, r3, r5, r6, r8, fp, sp, lr}^
    4320:	6469683d 	strbtvs	r6, [r9], #-2109	; 0xfffff7c3
    4324:	006e6564 	rsbeq	r6, lr, r4, ror #10
    4328:	5f4d5241 	svcpl	0x004d5241
    432c:	5f534350 	svcpl	0x00534350
    4330:	53435041 	movtpl	r5, #12353	; 0x3041
    4334:	4d524100 	ldfmie	f4, [r2, #-0]
    4338:	5343505f 	movtpl	r5, #12383	; 0x305f
    433c:	5054415f 	subspl	r4, r4, pc, asr r1
    4340:	54005343 	strpl	r5, [r0], #-835	; 0xfffffcbd
    4344:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    4348:	50435f54 	subpl	r5, r3, r4, asr pc
    434c:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    4350:	3030366d 	eorscc	r3, r0, sp, ror #12
    4354:	52415400 	subpl	r5, r1, #0, 8
    4358:	5f544547 	svcpl	0x00544547
    435c:	5f555043 	svcpl	0x00555043
    4360:	376d7261 	strbcc	r7, [sp, -r1, ror #4]!
    4364:	00743032 	rsbseq	r3, r4, r2, lsr r0
    4368:	47524154 			; <UNDEFINED> instruction: 0x47524154
    436c:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    4370:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    4374:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4378:	37356178 			; <UNDEFINED> instruction: 0x37356178
    437c:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 4384 <_Min_Stack_Size+0x3f84>
    4380:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    4384:	756f6420 	strbvc	r6, [pc, #-1056]!	; 3f6c <_Min_Stack_Size+0x3b6c>
    4388:	00656c62 	rsbeq	r6, r5, r2, ror #24
    438c:	47524154 			; <UNDEFINED> instruction: 0x47524154
    4390:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    4394:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    4398:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    439c:	33376178 	teqcc	r7, #120, 2
    43a0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    43a4:	35617865 	strbcc	r7, [r1, #-2149]!	; 0xfffff79b
    43a8:	41540033 	cmpmi	r4, r3, lsr r0
    43ac:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    43b0:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    43b4:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    43b8:	6d786574 	cfldr64vs	mvdx6, [r8, #-464]!	; 0xfffffe30
    43bc:	756c7030 	strbvc	r7, [ip, #-48]!	; 0xffffffd0
    43c0:	72610073 	rsbvc	r0, r1, #115	; 0x73
    43c4:	63635f6d 	cmnvs	r3, #436	; 0x1b4
    43c8:	61736900 	cmnvs	r3, r0, lsl #18
    43cc:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    43d0:	646f6d5f 	strbtvs	r6, [pc], #-3423	; 43d8 <_Min_Stack_Size+0x3fd8>
    43d4:	00363265 	eorseq	r3, r6, r5, ror #4
    43d8:	5f617369 	svcpl	0x00617369
    43dc:	5f746962 	svcpl	0x00746962
    43e0:	61637378 	smcvs	14136	; 0x3738
    43e4:	7500656c 	strvc	r6, [r0, #-1388]	; 0xfffffa94
    43e8:	6570736e 	ldrbvs	r7, [r0, #-878]!	; 0xfffffc92
    43ec:	74735f63 	ldrbtvc	r5, [r3], #-3939	; 0xfffff09d
    43f0:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    43f4:	41540073 	cmpmi	r4, r3, ror r0
    43f8:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    43fc:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    4400:	7274735f 	rsbsvc	r7, r4, #2080374785	; 0x7c000001
    4404:	61676e6f 	cmnvs	r7, pc, ror #28
    4408:	31316d72 	teqcc	r1, r2, ror sp
    440c:	54003030 	strpl	r3, [r0], #-48	; 0xffffffd0
    4410:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    4414:	50435f54 	subpl	r5, r3, r4, asr pc
    4418:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    441c:	6474376d 	ldrbtvs	r3, [r4], #-1901	; 0xfffff893
    4420:	0073696d 	rsbseq	r6, r3, sp, ror #18
    4424:	6e6f645f 	mcrvs	4, 3, r6, cr15, cr15, {2}
    4428:	73755f74 	cmnvc	r5, #116, 30	; 0x1d0
    442c:	72745f65 	rsbsvc	r5, r4, #404	; 0x194
    4430:	685f6565 	ldmdavs	pc, {r0, r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    4434:	5f657265 	svcpl	0x00657265
    4438:	52415400 	subpl	r5, r1, #0, 8
    443c:	5f544547 	svcpl	0x00544547
    4440:	5f555043 	svcpl	0x00555043
    4444:	316d7261 	cmncc	sp, r1, ror #4
    4448:	6d647430 	cfstrdvs	mvd7, [r4, #-192]!	; 0xffffff40
    444c:	41540069 	cmpmi	r4, r9, rrx
    4450:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    4454:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    4458:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    445c:	61786574 	cmnvs	r8, r4, ror r5
    4460:	61620035 	cmnvs	r2, r5, lsr r0
    4464:	615f6573 	cmpvs	pc, r3, ror r5	; <UNPREDICTABLE>
    4468:	69686372 	stmdbvs	r8!, {r1, r4, r5, r6, r8, r9, sp, lr}^
    446c:	74636574 	strbtvc	r6, [r3], #-1396	; 0xfffffa8c
    4470:	00657275 	rsbeq	r7, r5, r5, ror r2
    4474:	5f6d7261 	svcpl	0x006d7261
    4478:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
    447c:	6372635f 	cmnvs	r2, #2080374785	; 0x7c000001
    4480:	52415400 	subpl	r5, r1, #0, 8
    4484:	5f544547 	svcpl	0x00544547
    4488:	5f555043 	svcpl	0x00555043
    448c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    4490:	316d7865 	cmncc	sp, r5, ror #16
    4494:	6c616d73 	stclvs	13, cr6, [r1], #-460	; 0xfffffe34
    4498:	6c756d6c 	ldclvs	13, cr6, [r5], #-432	; 0xfffffe50
    449c:	6c706974 			; <UNDEFINED> instruction: 0x6c706974
    44a0:	5f5f0079 	svcpl	0x005f0079
    44a4:	61003074 	tstvs	r0, r4, ror r0
    44a8:	635f6d72 	cmpvs	pc, #7296	; 0x1c80
    44ac:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    44b0:	635f746e 	cmpvs	pc, #1845493760	; 0x6e000000
    44b4:	72610063 	rsbvc	r0, r1, #99	; 0x63
    44b8:	61745f6d 	cmnvs	r4, sp, ror #30
    44bc:	74656772 	strbtvc	r6, [r5], #-1906	; 0xfffff88e
    44c0:	736e695f 	cmnvc	lr, #1556480	; 0x17c000
    44c4:	7369006e 	cmnvc	r9, #110	; 0x6e
    44c8:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    44cc:	72635f74 	rsbvc	r5, r3, #116, 30	; 0x1d0
    44d0:	00323363 	eorseq	r3, r2, r3, ror #6
    44d4:	47524154 			; <UNDEFINED> instruction: 0x47524154
    44d8:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    44dc:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    44e0:	74376d72 	ldrtvc	r6, [r7], #-3442	; 0xfffff28e
    44e4:	00696d64 	rsbeq	r6, r9, r4, ror #26
    44e8:	5f4d5241 	svcpl	0x004d5241
    44ec:	69004c50 	stmdbvs	r0, {r4, r6, sl, fp, lr}
    44f0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    44f4:	765f7469 	ldrbvc	r7, [pc], -r9, ror #8
    44f8:	33767066 	cmncc	r6, #102	; 0x66
    44fc:	61736900 	cmnvs	r3, r0, lsl #18
    4500:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    4504:	7066765f 	rsbvc	r7, r6, pc, asr r6
    4508:	42003476 	andmi	r3, r0, #1979711488	; 0x76000000
    450c:	5f455341 	svcpl	0x00455341
    4510:	48435241 	stmdami	r3, {r0, r6, r9, ip, lr}^
    4514:	3254365f 	subscc	r3, r4, #99614720	; 0x5f00000
    4518:	53414200 	movtpl	r4, #4608	; 0x1200
    451c:	52415f45 	subpl	r5, r1, #276	; 0x114
    4520:	385f4843 	ldmdacc	pc, {r0, r1, r6, fp, lr}^	; <UNPREDICTABLE>
    4524:	414d5f4d 	cmpmi	sp, sp, asr #30
    4528:	54004e49 	strpl	r4, [r0], #-3657	; 0xfffff1b7
    452c:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    4530:	50435f54 	subpl	r5, r3, r4, asr pc
    4534:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    4538:	6474396d 	ldrbtvs	r3, [r4], #-2413	; 0xfffff693
    453c:	4100696d 	tstmi	r0, sp, ror #18
    4540:	415f4d52 	cmpmi	pc, r2, asr sp	; <UNPREDICTABLE>
    4544:	7369004c 	cmnvc	r9, #76	; 0x4c
    4548:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    454c:	6f6d5f74 	svcvs	0x006d5f74
    4550:	32336564 	eorscc	r6, r3, #100, 10	; 0x19000000
    4554:	53414200 	movtpl	r4, #4608	; 0x1200
    4558:	52415f45 	subpl	r5, r1, #276	; 0x114
    455c:	375f4843 	ldrbcc	r4, [pc, -r3, asr #16]
    4560:	7261004d 	rsbvc	r0, r1, #77	; 0x4d
    4564:	61745f6d 	cmnvs	r4, sp, ror #30
    4568:	74656772 	strbtvc	r6, [r5], #-1906	; 0xfffff88e
    456c:	62616c5f 	rsbvs	r6, r1, #24320	; 0x5f00
    4570:	54006c65 	strpl	r6, [r0], #-3173	; 0xfffff39b
    4574:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    4578:	50435f54 	subpl	r5, r3, r4, asr pc
    457c:	74735f55 	ldrbtvc	r5, [r3], #-3925	; 0xfffff0ab
    4580:	676e6f72 			; <UNDEFINED> instruction: 0x676e6f72
    4584:	316d7261 	cmncc	sp, r1, ror #4
    4588:	00303131 	eorseq	r3, r0, r1, lsr r1
    458c:	47524154 			; <UNDEFINED> instruction: 0x47524154
    4590:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    4594:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    4598:	32376d72 	eorscc	r6, r7, #7296	; 0x1c80
    459c:	41540030 	cmpmi	r4, r0, lsr r0
    45a0:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    45a4:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    45a8:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    45ac:	72786574 	rsbsvc	r6, r8, #116, 10	; 0x1d000000
    45b0:	41540035 	cmpmi	r4, r5, lsr r0
    45b4:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    45b8:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    45bc:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    45c0:	72786574 	rsbsvc	r6, r8, #116, 10	; 0x1d000000
    45c4:	41540037 	cmpmi	r4, r7, lsr r0
    45c8:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    45cc:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    45d0:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    45d4:	72786574 	rsbsvc	r6, r8, #116, 10	; 0x1d000000
    45d8:	73690038 	cmnvc	r9, #56	; 0x38
    45dc:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    45e0:	706c5f74 	rsbvc	r5, ip, r4, ror pc
    45e4:	54006561 	strpl	r6, [r0], #-1377	; 0xfffffa9f
    45e8:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    45ec:	50435f54 	subpl	r5, r3, r4, asr pc
    45f0:	74735f55 	ldrbtvc	r5, [r3], #-3925	; 0xfffff0ab
    45f4:	676e6f72 			; <UNDEFINED> instruction: 0x676e6f72
    45f8:	316d7261 	cmncc	sp, r1, ror #4
    45fc:	69003031 	stmdbvs	r0, {r0, r4, r5, ip, sp}
    4600:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    4604:	715f7469 	cmpvc	pc, r9, ror #8
    4608:	6b726975 	blvs	1c9ebe4 <_Min_Stack_Size+0x1c9e7e4>
    460c:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    4610:	7a6b3676 	bvc	1ad1ff0 <_Min_Stack_Size+0x1ad1bf0>
    4614:	61736900 	cmnvs	r3, r0, lsl #18
    4618:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
    461c:	746f6e5f 	strbtvc	r6, [pc], #-3679	; 4624 <_Min_Stack_Size+0x4224>
    4620:	7369006d 	cmnvc	r9, #109	; 0x6d
    4624:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4628:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    462c:	0034766d 	eorseq	r7, r4, sp, ror #12
    4630:	5f617369 	svcpl	0x00617369
    4634:	5f746962 	svcpl	0x00746962
    4638:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    463c:	73690035 	cmnvc	r9, #53	; 0x35
    4640:	69625f61 	stmdbvs	r2!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    4644:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
    4648:	0037766d 	eorseq	r7, r7, sp, ror #12
    464c:	5f617369 	svcpl	0x00617369
    4650:	5f746962 	svcpl	0x00746962
    4654:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
    4658:	645f0038 	ldrbvs	r0, [pc], #-56	; 4660 <_Min_Stack_Size+0x4260>
    465c:	5f746e6f 	svcpl	0x00746e6f
    4660:	5f657375 	svcpl	0x00657375
    4664:	5f787472 	svcpl	0x00787472
    4668:	65726568 	ldrbvs	r6, [r2, #-1384]!	; 0xfffffa98
    466c:	5155005f 	cmppl	r5, pc, asr r0
    4670:	70797449 	rsbsvc	r7, r9, r9, asr #8
    4674:	72610065 	rsbvc	r0, r1, #101	; 0x65
    4678:	75745f6d 	ldrbvc	r5, [r4, #-3949]!	; 0xfffff093
    467c:	6100656e 	tstvs	r0, lr, ror #10
    4680:	635f6d72 	cmpvs	pc, #7296	; 0x1c80
    4684:	695f7070 	ldmdbvs	pc, {r4, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    4688:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    468c:	6b726f77 	blvs	1ca0470 <_Min_Stack_Size+0x1ca0070>
    4690:	52415400 	subpl	r5, r1, #0, 8
    4694:	5f544547 	svcpl	0x00544547
    4698:	5f555043 	svcpl	0x00555043
    469c:	396d7261 	stmdbcc	sp!, {r0, r5, r6, r9, ip, sp, lr}^
    46a0:	00743032 	rsbseq	r3, r4, r2, lsr r0
    46a4:	62617468 	rsbvs	r7, r1, #104, 8	; 0x68000000
    46a8:	0071655f 	rsbseq	r6, r1, pc, asr r5
    46ac:	47524154 			; <UNDEFINED> instruction: 0x47524154
    46b0:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    46b4:	665f5550 			; <UNDEFINED> instruction: 0x665f5550
    46b8:	36323561 	ldrtcc	r3, [r2], -r1, ror #10
    46bc:	6d726100 	ldfvse	f6, [r2, #-0]
    46c0:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    46c4:	68745f68 	ldmdavs	r4!, {r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    46c8:	5f626d75 	svcpl	0x00626d75
    46cc:	69647768 	stmdbvs	r4!, {r3, r5, r6, r8, r9, sl, ip, sp, lr}^
    46d0:	74680076 	strbtvc	r0, [r8], #-118	; 0xffffff8a
    46d4:	655f6261 	ldrbvs	r6, [pc, #-609]	; 447b <_Min_Stack_Size+0x407b>
    46d8:	6f705f71 	svcvs	0x00705f71
    46dc:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    46e0:	41540072 	cmpmi	r4, r2, ror r0
    46e4:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    46e8:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    46ec:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    46f0:	61003036 	tstvs	r0, r6, lsr r0
    46f4:	705f6d72 	subsvc	r6, pc, r2, ror sp	; <UNPREDICTABLE>
    46f8:	725f6369 	subsvc	r6, pc, #-1543503871	; 0xa4000001
    46fc:	73696765 	cmnvc	r9, #26476544	; 0x1940000
    4700:	00726574 	rsbseq	r6, r2, r4, ror r5
    4704:	47524154 			; <UNDEFINED> instruction: 0x47524154
    4708:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    470c:	635f5550 	cmpvs	pc, #80, 10	; 0x14000000
    4710:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4714:	73306d78 	teqvc	r0, #120, 26	; 0x1e00
    4718:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
    471c:	746c756d 	strbtvc	r7, [ip], #-1389	; 0xfffffa93
    4720:	796c7069 	stmdbvc	ip!, {r0, r3, r5, r6, ip, sp, lr}^
    4724:	52415400 	subpl	r5, r1, #0, 8
    4728:	5f544547 	svcpl	0x00544547
    472c:	5f555043 	svcpl	0x00555043
    4730:	396d7261 	stmdbcc	sp!, {r0, r5, r6, r9, ip, sp, lr}^
    4734:	73653636 	cmnvc	r5, #56623104	; 0x3600000
    4738:	52415400 	subpl	r5, r1, #0, 8
    473c:	5f544547 	svcpl	0x00544547
    4740:	5f555043 	svcpl	0x00555043
    4744:	6f63706d 	svcvs	0x0063706d
    4748:	6f6e6572 	svcvs	0x006e6572
    474c:	00706676 	rsbseq	r6, r0, r6, ror r6
    4750:	5f617369 	svcpl	0x00617369
    4754:	5f746962 	svcpl	0x00746962
    4758:	72697571 	rsbvc	r7, r9, #473956352	; 0x1c400000
    475c:	6d635f6b 	stclvs	15, cr5, [r3, #-428]!	; 0xfffffe54
    4760:	646c5f33 	strbtvs	r5, [ip], #-3891	; 0xfffff0cd
    4764:	54006472 	strpl	r6, [r0], #-1138	; 0xfffffb8e
    4768:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    476c:	50435f54 	subpl	r5, r3, r4, asr pc
    4770:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    4774:	3030376d 	eorscc	r3, r0, sp, ror #14
    4778:	52410069 	subpl	r0, r1, #105	; 0x69
    477c:	43435f4d 	movtmi	r5, #16205	; 0x3f4d
    4780:	6d726100 	ldfvse	f6, [r2, #-0]
    4784:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    4788:	325f3868 	subscc	r3, pc, #104, 16	; 0x680000
    478c:	52415400 	subpl	r5, r1, #0, 8
    4790:	5f544547 	svcpl	0x00544547
    4794:	5f555043 	svcpl	0x00555043
    4798:	36706d66 	ldrbtcc	r6, [r0], -r6, ror #26
    479c:	41003632 	tstmi	r0, r2, lsr r6
    47a0:	435f4d52 	cmpmi	pc, #5248	; 0x1480
    47a4:	72610053 	rsbvc	r0, r1, #83	; 0x53
    47a8:	70665f6d 	rsbvc	r5, r6, sp, ror #30
    47ac:	695f3631 	ldmdbvs	pc, {r0, r4, r5, r9, sl, ip, sp}^	; <UNPREDICTABLE>
    47b0:	0074736e 	rsbseq	r7, r4, lr, ror #6
    47b4:	5f6d7261 	svcpl	0x006d7261
    47b8:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    47bc:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    47c0:	41540068 	cmpmi	r4, r8, rrx
    47c4:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    47c8:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    47cc:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    47d0:	72786574 	rsbsvc	r6, r8, #116, 10	; 0x1d000000
    47d4:	41540034 	cmpmi	r4, r4, lsr r0
    47d8:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    47dc:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    47e0:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    47e4:	54006d37 	strpl	r6, [r0], #-3383	; 0xfffff2c9
    47e8:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    47ec:	50435f54 	subpl	r5, r3, r4, asr pc
    47f0:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    47f4:	0030376d 	eorseq	r3, r0, sp, ror #14
    47f8:	47524154 			; <UNDEFINED> instruction: 0x47524154
    47fc:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    4800:	615f5550 	cmpvs	pc, r0, asr r5	; <UNPREDICTABLE>
    4804:	35326d72 	ldrcc	r6, [r2, #-3442]!	; 0xfffff28e
    4808:	72610030 	rsbvc	r0, r1, #48	; 0x30
    480c:	72615f6d 	rsbvc	r5, r1, #436	; 0x1b4
    4810:	65376863 	ldrvs	r6, [r7, #-2147]!	; 0xfffff79d
    4814:	4154006d 	cmpmi	r4, sp, rrx
    4818:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    481c:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    4820:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    4824:	61786574 	cmnvs	r8, r4, ror r5
    4828:	61003237 	tstvs	r0, r7, lsr r2
    482c:	705f6d72 	subsvc	r6, pc, r2, ror sp	; <UNPREDICTABLE>
    4830:	645f7363 	ldrbvs	r7, [pc], #-867	; 4838 <_Min_Stack_Size+0x4438>
    4834:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    4838:	4100746c 	tstmi	r0, ip, ror #8
    483c:	505f4d52 	subspl	r4, pc, r2, asr sp	; <UNPREDICTABLE>
    4840:	415f5343 	cmpmi	pc, r3, asr #6
    4844:	53435041 	movtpl	r5, #12353	; 0x3041
    4848:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
    484c:	54004c41 	strpl	r4, [r0], #-3137	; 0xfffff3bf
    4850:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    4854:	50435f54 	subpl	r5, r3, r4, asr pc
    4858:	6f635f55 	svcvs	0x00635f55
    485c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    4860:	00353761 	eorseq	r3, r5, r1, ror #14
    4864:	47524154 			; <UNDEFINED> instruction: 0x47524154
    4868:	435f5445 	cmpmi	pc, #1157627904	; 0x45000000
    486c:	735f5550 	cmpvc	pc, #80, 10	; 0x14000000
    4870:	6e6f7274 	mcrvs	2, 3, r7, cr15, cr4, {3}
    4874:	6d726167 	ldfvse	f6, [r2, #-412]!	; 0xfffffe64
    4878:	6d726100 	ldfvse	f6, [r2, #-0]
    487c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    4880:	68745f68 	ldmdavs	r4!, {r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4884:	31626d75 	smccc	9941	; 0x26d5
    4888:	6d726100 	ldfvse	f6, [r2, #-0]
    488c:	6372615f 	cmnvs	r2, #-1073741801	; 0xc0000017
    4890:	68745f68 	ldmdavs	r4!, {r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4894:	32626d75 	rsbcc	r6, r2, #7488	; 0x1d40
    4898:	52415400 	subpl	r5, r1, #0, 8
    489c:	5f544547 	svcpl	0x00544547
    48a0:	5f555043 	svcpl	0x00555043
    48a4:	6d6d7769 	stclvs	7, cr7, [sp, #-420]!	; 0xfffffe5c
    48a8:	54007478 	strpl	r7, [r0], #-1144	; 0xfffffb88
    48ac:	45475241 	strbmi	r5, [r7, #-577]	; 0xfffffdbf
    48b0:	50435f54 	subpl	r5, r3, r4, asr pc
    48b4:	72615f55 	rsbvc	r5, r1, #340	; 0x154
    48b8:	3232396d 	eorscc	r3, r2, #1785856	; 0x1b4000
    48bc:	41540074 	cmpmi	r4, r4, ror r0
    48c0:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
    48c4:	5550435f 	ldrbpl	r4, [r0, #-863]	; 0xfffffca1
    48c8:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
    48cc:	69006437 	stmdbvs	r0, {r0, r1, r2, r4, r5, sl, sp, lr}
    48d0:	625f6173 	subsvs	r6, pc, #-1073741796	; 0xc000001c
    48d4:	6d5f7469 	cfldrdvs	mvd7, [pc, #-420]	; 4738 <_Min_Stack_Size+0x4338>
    48d8:	72610070 	rsbvc	r0, r1, #112	; 0x70
    48dc:	646c5f6d 	strbtvs	r5, [ip], #-3949	; 0xfffff093
    48e0:	6863735f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    48e4:	61006465 	tstvs	r0, r5, ror #8
    48e8:	615f6d72 	cmpvs	pc, r2, ror sp	; <UNPREDICTABLE>
    48ec:	38686372 	stmdacc	r8!, {r1, r4, r5, r6, r8, r9, sp, lr}^
    48f0:	2e00315f 	mcrcs	1, 0, r3, cr0, cr15, {2}
    48f4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    48f8:	2f2e2e2f 	svccs	0x002e2e2f
    48fc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4900:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4904:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4908:	2f636367 	svccs	0x00636367
    490c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    4910:	612f6769 			; <UNDEFINED> instruction: 0x612f6769
    4914:	6c2f6d72 	stcvs	13, cr6, [pc], #-456	; 4754 <_Min_Stack_Size+0x4354>
    4918:	66316269 	ldrtvs	r6, [r1], -r9, ror #4
    491c:	73636e75 	cmnvc	r3, #1872	; 0x750
    4920:	5f00532e 	svcpl	0x0000532e
    4924:	6765725f 			; <UNDEFINED> instruction: 0x6765725f
    4928:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    492c:	78655f72 	stmdavc	r5!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4930:	72707469 	rsbsvc	r7, r0, #1761607680	; 0x69000000
    4934:	2f00636f 	svccs	0x0000636f
    4938:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    493c:	656e2f64 	strbvs	r2, [lr, #-3940]!	; 0xfffff09c
    4940:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    4944:	67476b2d 	strbvs	r6, [r7, -sp, lsr #22]
    4948:	2f457776 	svccs	0x00457776
    494c:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    4950:	332d6269 			; <UNDEFINED> instruction: 0x332d6269
    4954:	302e332e 	eorcc	r3, lr, lr, lsr #6
    4958:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    495c:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
    4960:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4964:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4968:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    496c:	7568742f 	strbvc	r7, [r8, #-1071]!	; 0xfffffbd1
    4970:	762f626d 	strtvc	r6, [pc], -sp, ror #4
    4974:	6d2d6537 	cfstr32vs	mvfx6, [sp, #-220]!	; 0xffffff24
    4978:	666f6e2f 	strbtvs	r6, [pc], -pc, lsr #28
    497c:	656e2f70 	strbvs	r2, [lr, #-3952]!	; 0xfffff090
    4980:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    4984:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4988:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    498c:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    4990:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
    4994:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
    4998:	332e3820 			; <UNDEFINED> instruction: 0x332e3820
    499c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
    49a0:	30393130 	eorscc	r3, r9, r0, lsr r1
    49a4:	20333037 	eorscs	r3, r3, r7, lsr r0
    49a8:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
    49ac:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
    49b0:	675b2029 	ldrbvs	r2, [fp, -r9, lsr #32]
    49b4:	382d6363 	stmdacc	sp!, {r0, r1, r5, r6, r8, r9, sp, lr}
    49b8:	6172622d 	cmnvs	r2, sp, lsr #4
    49bc:	2068636e 	rsbcs	r6, r8, lr, ror #6
    49c0:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    49c4:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    49c8:	33373220 	teqcc	r7, #32, 4
    49cc:	5d373230 	lfmpl	f3, 4, [r7, #-192]!	; 0xffffff40
    49d0:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
    49d4:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
    49d8:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
    49dc:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
    49e0:	6d2d2074 	stcvs	0, cr2, [sp, #-464]!	; 0xfffffe30
    49e4:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
    49e8:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
    49ec:	616f6c66 	cmnvs	pc, r6, ror #24
    49f0:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
    49f4:	6f733d69 	svcvs	0x00733d69
    49f8:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
    49fc:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
    4a00:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
    4a04:	6537766d 	ldrvs	r7, [r7, #-1645]!	; 0xfffff993
    4a08:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
    4a0c:	4f2d2067 	svcmi	0x002d2067
    4a10:	662d2032 			; <UNDEFINED> instruction: 0x662d2032
    4a14:	622d6f6e 	eorvs	r6, sp, #440	; 0x1b8
    4a18:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    4a1c:	73006e69 	movwvc	r6, #3689	; 0xe69
    4a20:	706f6275 	rsbvc	r6, pc, r5, ror r2	; <UNPREDICTABLE>
    4a24:	67726174 			; <UNDEFINED> instruction: 0x67726174
    4a28:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; 3b30 <_Min_Stack_Size+0x3730>
    4a2c:	78635f74 	stmdavc	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4a30:	2e2e0061 	cdpcs	0, 2, cr0, cr14, cr1, {3}
    4a34:	2f2e2e2f 	svccs	0x002e2e2f
    4a38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4a3c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4a40:	2f2e2e2f 	svccs	0x002e2e2f
    4a44:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4a48:	656e2f2e 	strbvs	r2, [lr, #-3886]!	; 0xfffff0d2
    4a4c:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    4a50:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4a54:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    4a58:	62696c64 	rsbvs	r6, r9, #100, 24	; 0x6400
    4a5c:	6574612f 	ldrbvs	r6, [r4, #-303]!	; 0xfffffed1
    4a60:	2e746978 			; <UNDEFINED> instruction: 0x2e746978
    4a64:	5f5f0063 	svcpl	0x005f0063
    4a68:	6f5f7465 	svcvs	0x005f7465
    4a6c:	6978656e 	ldmdbvs	r8!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    4a70:	5f5f0074 	svcpl	0x005f0074
    4a74:	615f7465 	cmpvs	pc, r5, ror #8
    4a78:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    4a7c:	5f5f0074 	svcpl	0x005f0074
    4a80:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
    4a84:	745f7469 	ldrbvc	r7, [pc], #-1129	; 4a8c <_Min_Stack_Size+0x468c>
    4a88:	73657079 	cmnvc	r5, #121	; 0x79
    4a8c:	665f5f00 	ldrbvs	r5, [pc], -r0, lsl #30
    4a90:	5f696e69 	svcpl	0x00696e69
    4a94:	61727261 	cmnvs	r2, r1, ror #4
    4a98:	74735f79 	ldrbtvc	r5, [r3], #-3961	; 0xfffff087
    4a9c:	00747261 	rsbseq	r7, r4, r1, ror #4
    4aa0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4aa4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4aa8:	2f2e2e2f 	svccs	0x002e2e2f
    4aac:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4ab0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4ab4:	2f2e2e2f 	svccs	0x002e2e2f
    4ab8:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    4abc:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 4920 <_Min_Stack_Size+0x4520>
    4ac0:	2f636269 	svccs	0x00636269
    4ac4:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
    4ac8:	6e69662f 	cdpvs	6, 6, cr6, cr9, cr15, {1}
    4acc:	00632e69 	rsbeq	r2, r3, r9, ror #28
    4ad0:	69665f5f 	stmdbvs	r6!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4ad4:	615f696e 	cmpvs	pc, lr, ror #18
    4ad8:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
    4adc:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
    4ae0:	6c5f5f00 	mrrcvs	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
    4ae4:	5f636269 	svcpl	0x00636269
    4ae8:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
    4aec:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
    4af0:	2f007961 	svccs	0x00007961
    4af4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4af8:	656e2f64 	strbvs	r2, [lr, #-3940]!	; 0xfffff09c
    4afc:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    4b00:	67476b2d 	strbvs	r6, [r7, -sp, lsr #22]
    4b04:	2f457776 	svccs	0x00457776
    4b08:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    4b0c:	332d6269 			; <UNDEFINED> instruction: 0x332d6269
    4b10:	302e332e 	eorcc	r3, lr, lr, lsr #6
    4b14:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    4b18:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
    4b1c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4b20:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4b24:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4b28:	7568742f 	strbvc	r7, [r8, #-1071]!	; 0xfffffbd1
    4b2c:	762f626d 	strtvc	r6, [pc], -sp, ror #4
    4b30:	6d2d6537 	cfstr32vs	mvfx6, [sp, #-220]!	; 0xffffff24
    4b34:	666f6e2f 	strbtvs	r6, [pc], -pc, lsr #28
    4b38:	656e2f70 	strbvs	r2, [lr, #-3952]!	; 0xfffff090
    4b3c:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    4b40:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4b44:	696d2f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    4b48:	2f006373 	svccs	0x00006373
    4b4c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    4b50:	656e2f64 	strbvs	r2, [lr, #-3940]!	; 0xfffff09c
    4b54:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    4b58:	67476b2d 	strbvs	r6, [r7, -sp, lsr #22]
    4b5c:	2f457776 	svccs	0x00457776
    4b60:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    4b64:	332d6269 			; <UNDEFINED> instruction: 0x332d6269
    4b68:	302e332e 	eorcc	r3, lr, lr, lsr #6
    4b6c:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
    4b70:	612f646c 			; <UNDEFINED> instruction: 0x612f646c
    4b74:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    4b78:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    4b7c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    4b80:	7568742f 	strbvc	r7, [r8, #-1071]!	; 0xfffffbd1
    4b84:	762f626d 	strtvc	r6, [pc], -sp, ror #4
    4b88:	6d2d6537 	cfstr32vs	mvfx6, [sp, #-220]!	; 0xffffff24
    4b8c:	666f6e2f 	strbtvs	r6, [pc], -pc, lsr #28
    4b90:	656e2f70 	strbvs	r2, [lr, #-3952]!	; 0xfffff090
    4b94:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
    4b98:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4b9c:	65722f63 	ldrbvs	r2, [r2, #-3939]!	; 0xfffff09d
    4ba0:	00746e65 	rsbseq	r6, r4, r5, ror #28
    4ba4:	75706d69 	ldrbvc	r6, [r0, #-3433]!	; 0xfffff297
    4ba8:	645f6572 	ldrbvs	r6, [pc], #-1394	; 4bb0 <_Min_Stack_Size+0x47b0>
    4bac:	00617461 	rsbeq	r7, r1, r1, ror #8
    4bb0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4bb4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4bb8:	2f2e2e2f 	svccs	0x002e2e2f
    4bbc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4bc0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4bc4:	2f2e2e2f 	svccs	0x002e2e2f
    4bc8:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
    4bcc:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 4a30 <_Min_Stack_Size+0x4630>
    4bd0:	2f636269 	svccs	0x00636269
    4bd4:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
    4bd8:	6d692f74 	stclvs	15, cr2, [r9, #-464]!	; 0xfffffe30
    4bdc:	65727570 	ldrbvs	r7, [r2, #-1392]!	; 0xfffffa90
    4be0:	2e00632e 	cdpcs	3, 0, cr6, cr0, cr14, {1}
    4be4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4be8:	2f2e2e2f 	svccs	0x002e2e2f
    4bec:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4bf0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4bf4:	2f2e2e2f 	svccs	0x002e2e2f
    4bf8:	6e2f2e2e 	cdpvs	14, 2, cr2, cr15, cr14, {1}
    4bfc:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    4c00:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    4c04:	732f6362 			; <UNDEFINED> instruction: 0x732f6362
    4c08:	696c6474 	stmdbvs	ip!, {r2, r4, r5, r6, sl, sp, lr}^
    4c0c:	5f5f2f62 	svcpl	0x005f2f62
    4c10:	78657461 	stmdavc	r5!, {r0, r5, r6, sl, ip, sp, lr}^
    4c14:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
    4c18:	615f5f00 	cmpvs	pc, r0, lsl #30
    4c1c:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    4c20:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
    4c24:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
    4c28:	5f657669 	svcpl	0x00657669
    4c2c:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
    4c30:	5f5f0078 	svcpl	0x005f0078
    4c34:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
    4c38:	6e69665f 	mcrvs	6, 3, r6, cr9, cr15, {2}
    4c3c:	616c0069 	cmnvs	ip, r9, rrx
    4c40:	00707473 	rsbseq	r7, r0, r3, ror r4
    4c44:	74736572 	ldrbtvc	r6, [r3], #-1394	; 0xfffffa8e
    4c48:	00747261 	rsbseq	r7, r4, r1, ror #4
    4c4c:	61635f5f 	cmnvs	r3, pc, asr pc
    4c50:	655f6c6c 	ldrbvs	r6, [pc, #-3180]	; 3fec <_Min_Stack_Size+0x3bec>
    4c54:	70746978 	rsbsvc	r6, r4, r8, ror r9
    4c58:	73636f72 	cmnvc	r3, #456	; 0x1c8
    4c5c:	67657200 	strbvs	r7, [r5, -r0, lsl #4]!
    4c60:	65747369 	ldrbvs	r7, [r4, #-873]!	; 0xfffffc97
    4c64:	69665f72 	stmdbvs	r6!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4c68:	2e00696e 	vmlscs.f16	s12, s0, s29	; <UNPREDICTABLE>
    4c6c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4c70:	2f2e2e2f 	svccs	0x002e2e2f
    4c74:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4c78:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4c7c:	2f2e2e2f 	svccs	0x002e2e2f
    4c80:	6e2f2e2e 	cdpvs	14, 2, cr2, cr15, cr14, {1}
    4c84:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
    4c88:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
    4c8c:	732f6362 			; <UNDEFINED> instruction: 0x732f6362
    4c90:	696c6474 	stmdbvs	ip!, {r2, r4, r5, r6, sl, sp, lr}^
    4c94:	5f5f2f62 	svcpl	0x005f2f62
    4c98:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    4c9c:	6574615f 	ldrbvs	r6, [r4, #-351]!	; 0xfffffea1
    4ca0:	2e746978 			; <UNDEFINED> instruction: 0x2e746978
    4ca4:	Address 0x0000000000004ca4 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
{
       0:	0000000c 	andeq	r0, r0, ip
}
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
  return ch;
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000018 	andeq	r0, r0, r8, lsl r0
      14:	00000000 	andeq	r0, r0, r0
      18:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
      1c:	00000020 	andeq	r0, r0, r0, lsr #32
      20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
      24:	41018e02 	tstmi	r1, r2, lsl #28
      28:	0000070d 	andeq	r0, r0, sp, lsl #14
      2c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
}
      38:	000000b4 	strheq	r0, [r0], -r4
      3c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
      40:	41018e02 	tstmi	r1, r2, lsl #28
    list->node_count = 0;
      44:	0d41580e 	stcleq	8, cr5, [r1, #-56]	; 0xffffffc8
      48:	0e510207 	cdpeq	2, 5, cr0, cr1, cr7, {0}
}
      4c:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
      50:	00000014 	andeq	r0, r0, r4, lsl r0
      54:	00000000 	andeq	r0, r0, r0
      58:	08000f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp}
      5c:	00000006 	andeq	r0, r0, r6
  HARDFAULT_HANDLING_ASM();
      60:	87040e41 	strhi	r0, [r4, -r1, asr #28]
      64:	070d4101 	streq	r4, [sp, -r1, lsl #2]
      68:	0000000c 	andeq	r0, r0, ip
      6c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      70:	7c020001 	stcvc	0, cr0, [r2], {1}
}
      74:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      78:	00000018 	andeq	r0, r0, r8, lsl r0
      7c:	00000068 	andeq	r0, r0, r8, rrx
      80:	08000f20 	stmdaeq	r0, {r5, r8, r9, sl, fp}
      84:	00000054 	andeq	r0, r0, r4, asr r0
  trigger_irq();
      88:	87080e41 	strhi	r0, [r8, -r1, asr #28]
}
      8c:	41018e02 	tstmi	r1, r2, lsl #28
      90:	0000070d 	andeq	r0, r0, sp, lsl #14
      94:	00000024 	andeq	r0, r0, r4, lsr #32
      98:	00000068 	andeq	r0, r0, r8, rrx
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
      9c:	08000f74 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, fp}
    Error_Handler();
      a0:	00000020 	andeq	r0, r0, r0, lsr #32
}
      a4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
      a8:	100e4101 	andne	r4, lr, r1, lsl #2
      ac:	48070d41 	stmdami	r7, {r0, r6, r8, sl, fp}
      b0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
      SystemCoreClock = HSI_VALUE;
      b4:	0ec7410d 	poleqs	f4, f7, #5.0
      break;
      b8:	00000000 	andeq	r0, r0, r0
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
      bc:	00000024 	andeq	r0, r0, r4, lsr #32
      c0:	00000068 	andeq	r0, r0, r8, rrx
      c4:	00000000 	andeq	r0, r0, r0
      c8:	0000001c 	andeq	r0, r0, ip, lsl r0
  SystemCoreClock >>= tmp;
      cc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
      d0:	100e4101 	andne	r4, lr, r1, lsl #2
      d4:	46070d41 	strmi	r0, [r7], -r1, asr #26
}
      d8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
      dc:	0ec7410d 	poleqs	f4, f7, #5.0
      e0:	00000000 	andeq	r0, r0, r0
      e4:	0000000c 	andeq	r0, r0, ip
      e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      ec:	7c020001 	stcvc	0, cr0, [r2], {1}
      f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      f4:	00000020 	andeq	r0, r0, r0, lsr #32
        EXTI->FTSR &= ~((uint32_t)iocurrent);
      f8:	000000e4 	andeq	r0, r0, r4, ror #1
      fc:	08000f94 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, fp}
     100:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
        tmp = 0x0FU << (4U * (position & 0x03U));
     104:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     108:	41018e02 	tstmi	r1, r2, lsl #28
     10c:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
     110:	0ed60207 	cdpeq	2, 13, cr0, cr6, cr7, {0}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     114:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     118:	00000020 	andeq	r0, r0, r0, lsr #32
     11c:	000000e4 	andeq	r0, r0, r4, ror #1
     120:	00000000 	andeq	r0, r0, r0
     124:	00000060 	andeq	r0, r0, r0, rrx
     128:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     12c:	41018e02 	tstmi	r1, r2, lsl #28
     130:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
     134:	080e6307 	stmdaeq	lr, {r0, r1, r2, r8, r9, sp, lr}
     138:	000d0d41 	andeq	r0, sp, r1, asr #26
     13c:	0000000c 	andeq	r0, r0, ip
     140:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     144:	7c020001 	stcvc	0, cr0, [r2], {1}
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
     148:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     14c:	00000018 	andeq	r0, r0, r8, lsl r0
     150:	0000013c 	andeq	r0, r0, ip, lsr r1
     154:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
     158:	00000018 	andeq	r0, r0, r8, lsl r0
     15c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     160:	41018e02 	tstmi	r1, r2, lsl #28
     164:	0000070d 	andeq	r0, r0, sp, lsl #14
     168:	0000001c 	andeq	r0, r0, ip, lsl r0
     16c:	0000013c 	andeq	r0, r0, ip, lsr r1
     170:	0800117c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, ip}
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
     174:	0000000c 	andeq	r0, r0, ip
     178:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     17c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     180:	410d0d42 	tstmi	sp, r2, asr #26
     184:	00000ec7 	andeq	r0, r0, r7, asr #29
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
     188:	0000000c 	andeq	r0, r0, ip
     18c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     190:	7c020001 	stcvc	0, cr0, [r2], {1}
     194:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     198:	0000001c 	andeq	r0, r0, ip, lsl r0
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
     19c:	00000188 	andeq	r0, r0, r8, lsl #3
     1a0:	08001188 	stmdaeq	r0, {r3, r7, r8, ip}
     1a4:	0000005c 	andeq	r0, r0, ip, asr r0
     1a8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     1ac:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     1b0:	410d0d63 	tstmi	sp, r3, ror #26
  for(position = 0U; position < GPIO_NUMBER; position++)
     1b4:	00000ec7 	andeq	r0, r0, r7, asr #29
     1b8:	00000024 	andeq	r0, r0, r4, lsr #32
     1bc:	00000188 	andeq	r0, r0, r8, lsl #3
}
     1c0:	00000000 	andeq	r0, r0, r0
     1c4:	000000f8 	strdeq	r0, [r0], -r8
     1c8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     1cc:	200e4101 	andcs	r4, lr, r1, lsl #2
     1d0:	02070d41 	andeq	r0, r7, #4160	; 0x1040
     1d4:	41040e6b 	tstmi	r4, fp, ror #28
     1d8:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
     1dc:	0000000e 	andeq	r0, r0, lr
     1e0:	0000000c 	andeq	r0, r0, ip
     1e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     1e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     1ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1f0:	00000018 	andeq	r0, r0, r8, lsl r0
                res += 1;
     1f4:	000001e0 	andeq	r0, r0, r0, ror #3
     1f8:	080011e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, ip}
            break;
     1fc:	00000044 	andeq	r0, r0, r4, asr #32
            _putchar('\n');
     200:	87080e41 	strhi	r0, [r8, -r1, asr #28]
            res += 1;
     204:	41018e02 	tstmi	r1, r2, lsl #28
     208:	0000070d 	andeq	r0, r0, sp, lsl #14
            _putchar('\r');
     20c:	00000018 	andeq	r0, r0, r8, lsl r0
     210:	000001e0 	andeq	r0, r0, r0, ror #3
            res += 1;
     214:	00000000 	andeq	r0, r0, r0
            break;
     218:	00000058 	andeq	r0, r0, r8, asr r0
            _putchar(*str);
     21c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     220:	41018e02 	tstmi	r1, r2, lsl #28
            res += 1;
     224:	0000070d 	andeq	r0, r0, sp, lsl #14
     228:	0000001c 	andeq	r0, r0, ip, lsl r0
            break;
     22c:	000001e0 	andeq	r0, r0, r0, ror #3
        str++;
     230:	00000000 	andeq	r0, r0, r0
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
     234:	0000000c 	andeq	r0, r0, ip
     238:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     23c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
}
     240:	410d0d42 	tstmi	sp, r2, asr #26
     244:	00000ec7 	andeq	r0, r0, r7, asr #29
     248:	0000001c 	andeq	r0, r0, ip, lsl r0
     24c:	000001e0 	andeq	r0, r0, r0, ror #3
     250:	00000000 	andeq	r0, r0, r0
            hdma->XferCpltCallback(hdma);
     254:	0000000c 	andeq	r0, r0, ip
     258:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     25c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
     260:	410d0d42 	tstmi	sp, r2, asr #26
     264:	00000ec7 	andeq	r0, r0, r7, asr #29
     268:	00000020 	andeq	r0, r0, r0, lsr #32
     26c:	000001e0 	andeq	r0, r0, r0, ror #3
          hdma->Instance->CR  &= ~(DMA_IT_TC);
     270:	08001228 	stmdaeq	r0, {r3, r5, r9, ip}
     274:	00000060 	andeq	r0, r0, r0, rrx
     278:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     27c:	41018e02 	tstmi	r1, r2, lsl #28
          __HAL_UNLOCK(hdma);
     280:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     284:	080e6507 	stmdaeq	lr, {r0, r1, r2, r8, sl, sp, lr}
          hdma->State = HAL_DMA_STATE_READY;
     288:	000d0d41 	andeq	r0, sp, r1, asr #26
     28c:	0000001c 	andeq	r0, r0, ip, lsl r0
        if(hdma->XferCpltCallback != NULL)
     290:	000001e0 	andeq	r0, r0, r0, ror #3
     294:	08001288 	stmdaeq	r0, {r3, r7, r9, ip}
          hdma->XferCpltCallback(hdma);
     298:	00000024 	andeq	r0, r0, r4, lsr #32
     29c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
     2a0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     2a4:	410d0d4a 	tstmi	sp, sl, asr #26
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
     2a8:	00000ec7 	andeq	r0, r0, r7, asr #29
     2ac:	0000001c 	andeq	r0, r0, ip, lsl r0
     2b0:	000001e0 	andeq	r0, r0, r0, ror #3
      hdma->State = HAL_DMA_STATE_ABORT;
     2b4:	080012ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip}
     2b8:	00000014 	andeq	r0, r0, r4, lsl r0
      __HAL_DMA_DISABLE(hdma);
     2bc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     2c0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     2c4:	410d0d44 	tstmi	sp, r4, asr #26
     2c8:	00000ec7 	andeq	r0, r0, r7, asr #29
        if (++count > timeout)
     2cc:	0000001c 	andeq	r0, r0, ip, lsl r0
     2d0:	000001e0 	andeq	r0, r0, r0, ror #3
     2d4:	00000000 	andeq	r0, r0, r0
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
     2d8:	00000014 	andeq	r0, r0, r4, lsl r0
     2dc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     2e0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     2e4:	410d0d44 	tstmi	sp, r4, asr #26
      __HAL_UNLOCK(hdma);
     2e8:	00000ec7 	andeq	r0, r0, r7, asr #29
     2ec:	00000020 	andeq	r0, r0, r0, lsr #32
      hdma->State = HAL_DMA_STATE_READY;
     2f0:	000001e0 	andeq	r0, r0, r0, ror #3
     2f4:	00000000 	andeq	r0, r0, r0
    if(hdma->XferErrorCallback != NULL)
     2f8:	00000050 	andeq	r0, r0, r0, asr r0
     2fc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
      hdma->XferErrorCallback(hdma);
     300:	41018e02 	tstmi	r1, r2, lsl #28
     304:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
     308:	080e5f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, ip, lr}
}
     30c:	000d0d41 	andeq	r0, sp, r1, asr #26
     310:	0000001c 	andeq	r0, r0, ip, lsl r0
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
     314:	000001e0 	andeq	r0, r0, r0, ror #3
     318:	00000000 	andeq	r0, r0, r0
     31c:	00000014 	andeq	r0, r0, r4, lsl r0
    UART_Transmit_IT(huart);
     320:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    return;
     324:	070d4101 	streq	r4, [sp, -r1, lsl #2]
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
     328:	410d0d44 	tstmi	sp, r4, asr #26
     32c:	00000ec7 	andeq	r0, r0, r7, asr #29
     330:	00000020 	andeq	r0, r0, r0, lsr #32
     334:	000001e0 	andeq	r0, r0, r0, ror #3
     338:	00000000 	andeq	r0, r0, r0
    UART_EndTransmit_IT(huart);
     33c:	0000004c 	andeq	r0, r0, ip, asr #32
    return;
     340:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    return;
     344:	41018e02 	tstmi	r1, r2, lsl #28
      return;
     348:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
      return;
     34c:	080e5f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, ip, lr}
}
     350:	000d0d41 	andeq	r0, sp, r1, asr #26
     354:	0000001c 	andeq	r0, r0, ip, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     358:	000001e0 	andeq	r0, r0, r0, ror #3
     35c:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
     360:	0000001c 	andeq	r0, r0, ip, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     364:	87040e41 	strhi	r0, [r4, -r1, asr #28]
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     368:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     36c:	410d0d48 	tstmi	sp, r8, asr #26
     370:	00000ec7 	andeq	r0, r0, r7, asr #29
     374:	0000001c 	andeq	r0, r0, ip, lsl r0
          return HAL_TIMEOUT;
     378:	000001e0 	andeq	r0, r0, r0, ror #3
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     37c:	00000000 	andeq	r0, r0, r0
     380:	0000001c 	andeq	r0, r0, ip, lsl r0
     384:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    if(pwrclkchanged == SET)
     388:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     38c:	410d0d48 	tstmi	sp, r8, asr #26
      __HAL_RCC_PWR_CLK_DISABLE();
     390:	00000ec7 	andeq	r0, r0, r7, asr #29
     394:	0000001c 	andeq	r0, r0, ip, lsl r0
     398:	000001e0 	andeq	r0, r0, r0, ror #3
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     39c:	00000000 	andeq	r0, r0, r0
     3a0:	00000014 	andeq	r0, r0, r4, lsl r0
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     3a4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     3a8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     3ac:	410d0d43 	tstmi	sp, r3, asr #26
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     3b0:	00000ec7 	andeq	r0, r0, r7, asr #29
     3b4:	0000001c 	andeq	r0, r0, ip, lsl r0
        __HAL_RCC_PLL_DISABLE();
     3b8:	000001e0 	andeq	r0, r0, r0, ror #3
     3bc:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
     3c0:	00000018 	andeq	r0, r0, r8, lsl r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3c4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3c8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     3cc:	410d0d45 	tstmi	sp, r5, asr #26
     3d0:	00000ec7 	andeq	r0, r0, r7, asr #29
            return HAL_TIMEOUT;
     3d4:	0000001c 	andeq	r0, r0, ip, lsl r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3d8:	000001e0 	andeq	r0, r0, r0, ror #3
     3dc:	00000000 	andeq	r0, r0, r0
     3e0:	00000018 	andeq	r0, r0, r8, lsl r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     3e4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     3e8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     3ec:	410d0d46 	tstmi	sp, r6, asr #26
     3f0:	00000ec7 	andeq	r0, r0, r7, asr #29
     3f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     3f8:	000001e0 	andeq	r0, r0, r0, ror #3
     3fc:	00000000 	andeq	r0, r0, r0
     400:	0000001c 	andeq	r0, r0, ip, lsl r0
     404:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     408:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     40c:	410d0d48 	tstmi	sp, r8, asr #26
        __HAL_RCC_PLL_ENABLE();
     410:	00000ec7 	andeq	r0, r0, r7, asr #29
        tickstart = HAL_GetTick();
     414:	0000001c 	andeq	r0, r0, ip, lsl r0
     418:	000001e0 	andeq	r0, r0, r0, ror #3
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     41c:	00000000 	andeq	r0, r0, r0
     420:	0000001c 	andeq	r0, r0, ip, lsl r0
     424:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     428:	070d4101 	streq	r4, [sp, -r1, lsl #2]
            return HAL_TIMEOUT;
     42c:	410d0d48 	tstmi	sp, r8, asr #26
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     430:	00000ec7 	andeq	r0, r0, r7, asr #29
     434:	0000001c 	andeq	r0, r0, ip, lsl r0
     438:	000001e0 	andeq	r0, r0, r0, ror #3
        __HAL_RCC_PLL_DISABLE();
     43c:	00000000 	andeq	r0, r0, r0
     440:	0000001c 	andeq	r0, r0, ip, lsl r0
        tickstart = HAL_GetTick();
     444:	87040e41 	strhi	r0, [r4, -r1, asr #28]
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     448:	070d4101 	streq	r4, [sp, -r1, lsl #2]
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     44c:	410d0d48 	tstmi	sp, r8, asr #26
     450:	00000ec7 	andeq	r0, r0, r7, asr #29
     454:	0000001c 	andeq	r0, r0, ip, lsl r0
            return HAL_TIMEOUT;
     458:	000001e0 	andeq	r0, r0, r0, ror #3
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	00000000 	andeq	r0, r0, r0
     460:	0000001c 	andeq	r0, r0, ip, lsl r0
     464:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     468:	070d4101 	streq	r4, [sp, -r1, lsl #2]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     46c:	410d0d48 	tstmi	sp, r8, asr #26
     470:	00000ec7 	andeq	r0, r0, r7, asr #29
        return HAL_ERROR;
     474:	0000001c 	andeq	r0, r0, ip, lsl r0
        pll_config = RCC->PLLCFGR;
     478:	000001e0 	andeq	r0, r0, r0, ror #3
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     47c:	00000000 	andeq	r0, r0, r0
     480:	0000001c 	andeq	r0, r0, ip, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     484:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     488:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     48c:	410d0d48 	tstmi	sp, r8, asr #26
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     490:	00000ec7 	andeq	r0, r0, r7, asr #29
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     494:	0000001c 	andeq	r0, r0, ip, lsl r0
     498:	000001e0 	andeq	r0, r0, r0, ror #3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     49c:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4a0:	0000001c 	andeq	r0, r0, ip, lsl r0
     4a4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     4a8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     4ac:	410d0d48 	tstmi	sp, r8, asr #26
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     4b0:	00000ec7 	andeq	r0, r0, r7, asr #29
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b4:	0000001c 	andeq	r0, r0, ip, lsl r0
     4b8:	000001e0 	andeq	r0, r0, r0, ror #3
     4bc:	00000000 	andeq	r0, r0, r0
     4c0:	00000018 	andeq	r0, r0, r8, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4c4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4c8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     4cc:	410d0d45 	tstmi	sp, r5, asr #26
     4d0:	00000ec7 	andeq	r0, r0, r7, asr #29
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4d4:	0000001c 	andeq	r0, r0, ip, lsl r0
          return HAL_ERROR;
     4d8:	000001e0 	andeq	r0, r0, r0, ror #3
}
     4dc:	00000000 	andeq	r0, r0, r0
     4e0:	00000018 	andeq	r0, r0, r8, lsl r0
     4e4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     4e8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     4ec:	410d0d45 	tstmi	sp, r5, asr #26
     4f0:	00000ec7 	andeq	r0, r0, r7, asr #29
     4f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     4f8:	000001e0 	andeq	r0, r0, r0, ror #3
     4fc:	00000000 	andeq	r0, r0, r0
     500:	00000014 	andeq	r0, r0, r4, lsl r0
     504:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     508:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     50c:	410d0d44 	tstmi	sp, r4, asr #26
     510:	00000ec7 	andeq	r0, r0, r7, asr #29
     514:	0000001c 	andeq	r0, r0, ip, lsl r0
     518:	000001e0 	andeq	r0, r0, r0, ror #3
     51c:	00000000 	andeq	r0, r0, r0
     520:	00000014 	andeq	r0, r0, r4, lsl r0
     524:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     528:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     52c:	410d0d44 	tstmi	sp, r4, asr #26
     530:	00000ec7 	andeq	r0, r0, r7, asr #29
     534:	0000001c 	andeq	r0, r0, ip, lsl r0
     538:	000001e0 	andeq	r0, r0, r0, ror #3
     53c:	00000000 	andeq	r0, r0, r0
     540:	00000014 	andeq	r0, r0, r4, lsl r0
     544:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     548:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     54c:	410d0d44 	tstmi	sp, r4, asr #26
     550:	00000ec7 	andeq	r0, r0, r7, asr #29
     554:	0000000c 	andeq	r0, r0, ip
     558:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     55c:	7c020001 	stcvc	0, cr0, [r2], {1}
     560:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     564:	0000001c 	andeq	r0, r0, ip, lsl r0
     568:	00000554 	andeq	r0, r0, r4, asr r5
     56c:	080012c0 	stmdaeq	r0, {r6, r7, r9, ip}
     570:	0000000c 	andeq	r0, r0, ip
     574:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     578:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     57c:	410d0d42 	tstmi	sp, r2, asr #26
     580:	00000ec7 	andeq	r0, r0, r7, asr #29
     584:	0000001c 	andeq	r0, r0, ip, lsl r0
     588:	00000554 	andeq	r0, r0, r4, asr r5
     58c:	00000000 	andeq	r0, r0, r0
     590:	0000000c 	andeq	r0, r0, ip
     594:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     598:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     59c:	410d0d42 	tstmi	sp, r2, asr #26
     5a0:	00000ec7 	andeq	r0, r0, r7, asr #29
     5a4:	0000001c 	andeq	r0, r0, ip, lsl r0
     5a8:	00000554 	andeq	r0, r0, r4, asr r5
     5ac:	00000000 	andeq	r0, r0, r0
     5b0:	0000000c 	andeq	r0, r0, ip
     5b4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     5b8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     5bc:	410d0d42 	tstmi	sp, r2, asr #26
     5c0:	00000ec7 	andeq	r0, r0, r7, asr #29
     5c4:	0000001c 	andeq	r0, r0, ip, lsl r0
     5c8:	00000554 	andeq	r0, r0, r4, asr r5
     5cc:	00000000 	andeq	r0, r0, r0
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     5d8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     5dc:	410d0d42 	tstmi	sp, r2, asr #26
     5e0:	00000ec7 	andeq	r0, r0, r7, asr #29
     5e4:	0000000c 	andeq	r0, r0, ip
     5e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5ec:	7c020001 	stcvc	0, cr0, [r2], {1}
     5f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5f4:	00000024 	andeq	r0, r0, r4, lsr #32
     5f8:	000005e4 	andeq	r0, r0, r4, ror #11
     5fc:	080012cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, ip}
     600:	00000048 	andeq	r0, r0, r8, asr #32
     604:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     608:	180e4101 	stmdane	lr, {r0, r8, lr}
     60c:	5b070d41 	blpl	1c3b18 <_Min_Stack_Size+0x1c3718>
     610:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     614:	0ec7410d 	poleqs	f4, f7, #5.0
     618:	00000000 	andeq	r0, r0, r0
     61c:	0000001c 	andeq	r0, r0, ip, lsl r0
     620:	000005e4 	andeq	r0, r0, r4, ror #11
     624:	08001314 	stmdaeq	r0, {r2, r4, r8, r9, ip}
     628:	0000001c 	andeq	r0, r0, ip, lsl r0
     62c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     630:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     634:	410d0d47 	tstmi	sp, r7, asr #26
     638:	00000ec7 	andeq	r0, r0, r7, asr #29
     63c:	00000024 	andeq	r0, r0, r4, lsr #32
     640:	000005e4 	andeq	r0, r0, r4, ror #11
     644:	08001330 	stmdaeq	r0, {r4, r5, r8, r9, ip}
     648:	00000038 	andeq	r0, r0, r8, lsr r0
     64c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     650:	100e4101 	andne	r4, lr, r1, lsl #2
     654:	54070d41 	strpl	r0, [r7], #-3393	; 0xfffff2bf
     658:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     65c:	0ec7410d 	poleqs	f4, f7, #5.0
     660:	00000000 	andeq	r0, r0, r0
     664:	00000024 	andeq	r0, r0, r4, lsr #32
     668:	000005e4 	andeq	r0, r0, r4, ror #11
     66c:	00000000 	andeq	r0, r0, r0
     670:	00000044 	andeq	r0, r0, r4, asr #32
     674:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     678:	100e4101 	andne	r4, lr, r1, lsl #2
     67c:	59070d41 	stmdbpl	r7, {r0, r6, r8, sl, fp}
     680:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     684:	0ec7410d 	poleqs	f4, f7, #5.0
     688:	00000000 	andeq	r0, r0, r0
     68c:	00000024 	andeq	r0, r0, r4, lsr #32
     690:	000005e4 	andeq	r0, r0, r4, ror #11
     694:	00000000 	andeq	r0, r0, r0
     698:	00000040 	andeq	r0, r0, r0, asr #32
     69c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     6a0:	100e4101 	andne	r4, lr, r1, lsl #2
     6a4:	58070d41 	stmdapl	r7, {r0, r6, r8, sl, fp}
     6a8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     6ac:	0ec7410d 	poleqs	f4, f7, #5.0
     6b0:	00000000 	andeq	r0, r0, r0
     6b4:	00000024 	andeq	r0, r0, r4, lsr #32
     6b8:	000005e4 	andeq	r0, r0, r4, ror #11
     6bc:	00000000 	andeq	r0, r0, r0
     6c0:	0000003c 	andeq	r0, r0, ip, lsr r0
     6c4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     6c8:	100e4101 	andne	r4, lr, r1, lsl #2
     6cc:	55070d41 	strpl	r0, [r7, #-3393]	; 0xfffff2bf
     6d0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     6d4:	0ec7410d 	poleqs	f4, f7, #5.0
     6d8:	00000000 	andeq	r0, r0, r0
     6dc:	00000024 	andeq	r0, r0, r4, lsr #32
     6e0:	000005e4 	andeq	r0, r0, r4, ror #11
     6e4:	00000000 	andeq	r0, r0, r0
     6e8:	0000003c 	andeq	r0, r0, ip, lsr r0
     6ec:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     6f0:	100e4101 	andne	r4, lr, r1, lsl #2
     6f4:	55070d41 	strpl	r0, [r7, #-3393]	; 0xfffff2bf
     6f8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     6fc:	0ec7410d 	poleqs	f4, f7, #5.0
     700:	00000000 	andeq	r0, r0, r0
     704:	00000024 	andeq	r0, r0, r4, lsr #32
     708:	000005e4 	andeq	r0, r0, r4, ror #11
     70c:	00000000 	andeq	r0, r0, r0
     710:	00000040 	andeq	r0, r0, r0, asr #32
     714:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     718:	100e4101 	andne	r4, lr, r1, lsl #2
     71c:	58070d41 	stmdapl	r7, {r0, r6, r8, sl, fp}
     720:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     724:	0ec7410d 	poleqs	f4, f7, #5.0
     728:	00000000 	andeq	r0, r0, r0
     72c:	00000024 	andeq	r0, r0, r4, lsr #32
     730:	000005e4 	andeq	r0, r0, r4, ror #11
     734:	08001368 	stmdaeq	r0, {r3, r5, r6, r8, r9, ip}
     738:	00000054 	andeq	r0, r0, r4, asr r0
     73c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     740:	100e4101 	andne	r4, lr, r1, lsl #2
     744:	5f070d41 	svcpl	0x00070d41
     748:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     74c:	0ec7410d 	poleqs	f4, f7, #5.0
     750:	00000000 	andeq	r0, r0, r0
     754:	00000024 	andeq	r0, r0, r4, lsr #32
     758:	000005e4 	andeq	r0, r0, r4, ror #11
     75c:	00000000 	andeq	r0, r0, r0
     760:	0000004c 	andeq	r0, r0, ip, asr #32
     764:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     768:	100e4101 	andne	r4, lr, r1, lsl #2
     76c:	5c070d41 	stcpl	13, cr0, [r7], {65}	; 0x41
     770:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     774:	0ec7410d 	poleqs	f4, f7, #5.0
     778:	00000000 	andeq	r0, r0, r0
     77c:	00000024 	andeq	r0, r0, r4, lsr #32
     780:	000005e4 	andeq	r0, r0, r4, ror #11
     784:	080013bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip}
     788:	00000064 	andeq	r0, r0, r4, rrx
     78c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     790:	280e4101 	stmdacs	lr, {r0, r8, lr}
     794:	6c070d41 	stcvs	13, cr0, [r7], {65}	; 0x41
     798:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     79c:	0ec7410d 	poleqs	f4, f7, #5.0
     7a0:	00000000 	andeq	r0, r0, r0
     7a4:	00000024 	andeq	r0, r0, r4, lsr #32
     7a8:	000005e4 	andeq	r0, r0, r4, ror #11
     7ac:	00000000 	andeq	r0, r0, r0
     7b0:	0000006c 	andeq	r0, r0, ip, rrx
     7b4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     7b8:	280e4101 	stmdacs	lr, {r0, r8, lr}
     7bc:	70070d41 	andvc	r0, r7, r1, asr #26
     7c0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     7c4:	0ec7410d 	poleqs	f4, f7, #5.0
     7c8:	00000000 	andeq	r0, r0, r0
     7cc:	00000014 	andeq	r0, r0, r4, lsl r0
     7d0:	000005e4 	andeq	r0, r0, r4, ror #11
     7d4:	00000000 	andeq	r0, r0, r0
     7d8:	00000028 	andeq	r0, r0, r8, lsr #32
     7dc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     7e0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     7e4:	00000020 	andeq	r0, r0, r0, lsr #32
     7e8:	000005e4 	andeq	r0, r0, r4, ror #11
     7ec:	08001420 	stmdaeq	r0, {r5, sl, ip}
     7f0:	00000044 	andeq	r0, r0, r4, asr #32
     7f4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     7f8:	41018e02 	tstmi	r1, r2, lsl #28
     7fc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     800:	080e5a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, ip, lr}
     804:	000d0d41 	andeq	r0, sp, r1, asr #26
     808:	00000020 	andeq	r0, r0, r0, lsr #32
     80c:	000005e4 	andeq	r0, r0, r4, ror #11
     810:	08001464 	stmdaeq	r0, {r2, r5, r6, sl, ip}
     814:	00000016 	andeq	r0, r0, r6, lsl r0
     818:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     81c:	41018e02 	tstmi	r1, r2, lsl #28
     820:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     824:	080e4607 	stmdaeq	lr, {r0, r1, r2, r9, sl, lr}
     828:	000d0d41 	andeq	r0, sp, r1, asr #26
     82c:	00000020 	andeq	r0, r0, r0, lsr #32
     830:	000005e4 	andeq	r0, r0, r4, ror #11
     834:	0800147a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, ip}
     838:	00000038 	andeq	r0, r0, r8, lsr r0
     83c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     840:	41018e02 	tstmi	r1, r2, lsl #28
     844:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
     848:	080e5707 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, ip, lr}
     84c:	000d0d41 	andeq	r0, sp, r1, asr #26
     850:	00000020 	andeq	r0, r0, r0, lsr #32
     854:	000005e4 	andeq	r0, r0, r4, ror #11
     858:	080014b2 	stmdaeq	r0, {r1, r4, r5, r7, sl, ip}
     85c:	0000001c 	andeq	r0, r0, ip, lsl r0
     860:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     864:	41018e02 	tstmi	r1, r2, lsl #28
     868:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     86c:	080e4907 	stmdaeq	lr, {r0, r1, r2, r8, fp, lr}
     870:	000d0d41 	andeq	r0, sp, r1, asr #26
     874:	00000020 	andeq	r0, r0, r0, lsr #32
     878:	000005e4 	andeq	r0, r0, r4, ror #11
     87c:	00000000 	andeq	r0, r0, r0
     880:	0000001c 	andeq	r0, r0, ip, lsl r0
     884:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     888:	41018e02 	tstmi	r1, r2, lsl #28
     88c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     890:	080e4907 	stmdaeq	lr, {r0, r1, r2, r8, fp, lr}
     894:	000d0d41 	andeq	r0, sp, r1, asr #26
     898:	00000018 	andeq	r0, r0, r8, lsl r0
     89c:	000005e4 	andeq	r0, r0, r4, ror #11
     8a0:	00000000 	andeq	r0, r0, r0
     8a4:	00000008 	andeq	r0, r0, r8
     8a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     8ac:	41018e02 	tstmi	r1, r2, lsl #28
     8b0:	0000070d 	andeq	r0, r0, sp, lsl #14
     8b4:	00000020 	andeq	r0, r0, r0, lsr #32
     8b8:	000005e4 	andeq	r0, r0, r4, ror #11
     8bc:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
     8c0:	00000018 	andeq	r0, r0, r8, lsl r0
     8c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     8c8:	41018e02 	tstmi	r1, r2, lsl #28
     8cc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     8d0:	080e4707 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, lr}
     8d4:	000d0d41 	andeq	r0, sp, r1, asr #26
     8d8:	0000001c 	andeq	r0, r0, ip, lsl r0
     8dc:	000005e4 	andeq	r0, r0, r4, ror #11
     8e0:	00000000 	andeq	r0, r0, r0
     8e4:	0000002c 	andeq	r0, r0, ip, lsr #32
     8e8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     8ec:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     8f0:	410d0d4d 	tstmi	sp, sp, asr #26
     8f4:	00000ec7 	andeq	r0, r0, r7, asr #29
     8f8:	00000024 	andeq	r0, r0, r4, lsr #32
     8fc:	000005e4 	andeq	r0, r0, r4, ror #11
     900:	00000000 	andeq	r0, r0, r0
     904:	00000038 	andeq	r0, r0, r8, lsr r0
     908:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     90c:	100e4101 	andne	r4, lr, r1, lsl #2
     910:	52070d41 	andpl	r0, r7, #4160	; 0x1040
     914:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     918:	0ec7410d 	poleqs	f4, f7, #5.0
     91c:	00000000 	andeq	r0, r0, r0
     920:	00000024 	andeq	r0, r0, r4, lsr #32
     924:	000005e4 	andeq	r0, r0, r4, ror #11
     928:	00000000 	andeq	r0, r0, r0
     92c:	00000088 	andeq	r0, r0, r8, lsl #1
     930:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     934:	100e4101 	andne	r4, lr, r1, lsl #2
     938:	7b070d41 	blvc	1c3e44 <_Min_Stack_Size+0x1c3a44>
     93c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     940:	0ec7410d 	poleqs	f4, f7, #5.0
     944:	00000000 	andeq	r0, r0, r0
     948:	00000018 	andeq	r0, r0, r8, lsl r0
     94c:	000005e4 	andeq	r0, r0, r4, ror #11
     950:	00000000 	andeq	r0, r0, r0
     954:	0000000e 	andeq	r0, r0, lr
     958:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     95c:	41018e02 	tstmi	r1, r2, lsl #28
     960:	0000070d 	andeq	r0, r0, sp, lsl #14
     964:	00000020 	andeq	r0, r0, r0, lsr #32
     968:	000005e4 	andeq	r0, r0, r4, ror #11
     96c:	00000000 	andeq	r0, r0, r0
     970:	0000002c 	andeq	r0, r0, ip, lsr #32
     974:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     978:	41018e02 	tstmi	r1, r2, lsl #28
     97c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
     980:	080e5107 	stmdaeq	lr, {r0, r1, r2, r8, ip, lr}
     984:	000d0d41 	andeq	r0, sp, r1, asr #26
     988:	00000020 	andeq	r0, r0, r0, lsr #32
     98c:	000005e4 	andeq	r0, r0, r4, ror #11
     990:	00000000 	andeq	r0, r0, r0
     994:	0000001c 	andeq	r0, r0, ip, lsl r0
     998:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     99c:	41018e02 	tstmi	r1, r2, lsl #28
     9a0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     9a4:	080e4907 	stmdaeq	lr, {r0, r1, r2, r8, fp, lr}
     9a8:	000d0d41 	andeq	r0, sp, r1, asr #26
     9ac:	00000020 	andeq	r0, r0, r0, lsr #32
     9b0:	000005e4 	andeq	r0, r0, r4, ror #11
     9b4:	00000000 	andeq	r0, r0, r0
     9b8:	0000001e 	andeq	r0, r0, lr, lsl r0
     9bc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     9c0:	41018e02 	tstmi	r1, r2, lsl #28
     9c4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     9c8:	080e4a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, lr}
     9cc:	000d0d41 	andeq	r0, sp, r1, asr #26
     9d0:	00000020 	andeq	r0, r0, r0, lsr #32
     9d4:	000005e4 	andeq	r0, r0, r4, ror #11
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	0000001c 	andeq	r0, r0, ip, lsl r0
     9e0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     9e4:	41018e02 	tstmi	r1, r2, lsl #28
     9e8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     9ec:	080e4907 	stmdaeq	lr, {r0, r1, r2, r8, fp, lr}
     9f0:	000d0d41 	andeq	r0, sp, r1, asr #26
     9f4:	00000020 	andeq	r0, r0, r0, lsr #32
     9f8:	000005e4 	andeq	r0, r0, r4, ror #11
     9fc:	00000000 	andeq	r0, r0, r0
     a00:	0000001e 	andeq	r0, r0, lr, lsl r0
     a04:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     a08:	41018e02 	tstmi	r1, r2, lsl #28
     a0c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     a10:	080e4a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, lr}
     a14:	000d0d41 	andeq	r0, sp, r1, asr #26
     a18:	00000024 	andeq	r0, r0, r4, lsr #32
     a1c:	000005e4 	andeq	r0, r0, r4, ror #11
     a20:	00000000 	andeq	r0, r0, r0
     a24:	00000038 	andeq	r0, r0, r8, lsr r0
     a28:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     a2c:	100e4101 	andne	r4, lr, r1, lsl #2
     a30:	53070d41 	movwpl	r0, #32065	; 0x7d41
     a34:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     a38:	0ec7410d 	poleqs	f4, f7, #5.0
     a3c:	00000000 	andeq	r0, r0, r0
     a40:	00000018 	andeq	r0, r0, r8, lsl r0
     a44:	000005e4 	andeq	r0, r0, r4, ror #11
     a48:	00000000 	andeq	r0, r0, r0
     a4c:	0000000c 	andeq	r0, r0, ip
     a50:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     a54:	41018e02 	tstmi	r1, r2, lsl #28
     a58:	0000070d 	andeq	r0, r0, sp, lsl #14
     a5c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a60:	000005e4 	andeq	r0, r0, r4, ror #11
     a64:	00000000 	andeq	r0, r0, r0
     a68:	0000000c 	andeq	r0, r0, ip
     a6c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     a70:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     a74:	410d0d42 	tstmi	sp, r2, asr #26
     a78:	00000ec7 	andeq	r0, r0, r7, asr #29
     a7c:	0000000c 	andeq	r0, r0, ip
     a80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a84:	7c020001 	stcvc	0, cr0, [r2], {1}
     a88:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a8c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a90:	00000a7c 	andeq	r0, r0, ip, ror sl
     a94:	00000000 	andeq	r0, r0, r0
     a98:	0000000e 	andeq	r0, r0, lr
     a9c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     aa0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     aa4:	410d0d43 	tstmi	sp, r3, asr #26
     aa8:	00000ec7 	andeq	r0, r0, r7, asr #29
     aac:	00000024 	andeq	r0, r0, r4, lsr #32
     ab0:	00000a7c 	andeq	r0, r0, ip, ror sl
     ab4:	00000000 	andeq	r0, r0, r0
     ab8:	000004f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     abc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     ac0:	41018e02 	tstmi	r1, r2, lsl #28
     ac4:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
     ac8:	026d0307 	rsbeq	r0, sp, #469762048	; 0x1c000000
     acc:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
     ad0:	0000000d 	andeq	r0, r0, sp
     ad4:	00000020 	andeq	r0, r0, r0, lsr #32
     ad8:	00000a7c 	andeq	r0, r0, ip, ror sl
     adc:	00000000 	andeq	r0, r0, r0
     ae0:	000001cc 	andeq	r0, r0, ip, asr #3
     ae4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     ae8:	41018e02 	tstmi	r1, r2, lsl #28
     aec:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
     af0:	0ed60207 	cdpeq	2, 13, cr0, cr6, cr7, {0}
     af4:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     af8:	00000020 	andeq	r0, r0, r0, lsr #32
     afc:	00000a7c 	andeq	r0, r0, ip, ror sl
     b00:	00000000 	andeq	r0, r0, r0
     b04:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     b08:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     b0c:	41018e02 	tstmi	r1, r2, lsl #28
     b10:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
     b14:	0e5c0207 	cdpeq	2, 5, cr0, cr12, cr7, {0}
     b18:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     b1c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b20:	00000a7c 	andeq	r0, r0, ip, ror sl
     b24:	00000000 	andeq	r0, r0, r0
     b28:	00000018 	andeq	r0, r0, r8, lsl r0
     b2c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     b30:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     b34:	410d0d45 	tstmi	sp, r5, asr #26
     b38:	00000ec7 	andeq	r0, r0, r7, asr #29
     b3c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b40:	00000a7c 	andeq	r0, r0, ip, ror sl
     b44:	00000000 	andeq	r0, r0, r0
     b48:	00000018 	andeq	r0, r0, r8, lsl r0
     b4c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     b50:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     b54:	410d0d45 	tstmi	sp, r5, asr #26
     b58:	00000ec7 	andeq	r0, r0, r7, asr #29
     b5c:	0000002c 	andeq	r0, r0, ip, lsr #32
     b60:	00000a7c 	andeq	r0, r0, ip, ror sl
     b64:	00000000 	andeq	r0, r0, r0
     b68:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
     b6c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     b70:	86068507 	strhi	r8, [r6], -r7, lsl #10
     b74:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     b78:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     b7c:	300e4101 	andcc	r4, lr, r1, lsl #2
     b80:	02070d41 	andeq	r0, r7, #4160	; 0x1040
     b84:	411c0ecf 	tstmi	ip, pc, asr #29
     b88:	00000d0d 	andeq	r0, r0, sp, lsl #26
     b8c:	0000001c 	andeq	r0, r0, ip, lsl r0
     b90:	00000a7c 	andeq	r0, r0, ip, ror sl
     b94:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
     b98:	00000014 	andeq	r0, r0, r4, lsl r0
     b9c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     ba0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     ba4:	410d0d44 	tstmi	sp, r4, asr #26
     ba8:	00000ec7 	andeq	r0, r0, r7, asr #29
     bac:	00000018 	andeq	r0, r0, r8, lsl r0
     bb0:	00000a7c 	andeq	r0, r0, ip, ror sl
     bb4:	080014fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, ip}
     bb8:	00000028 	andeq	r0, r0, r8, lsr #32
     bbc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     bc0:	41018e02 	tstmi	r1, r2, lsl #28
     bc4:	0000070d 	andeq	r0, r0, sp, lsl #14
     bc8:	00000018 	andeq	r0, r0, r8, lsl r0
     bcc:	00000a7c 	andeq	r0, r0, ip, ror sl
     bd0:	08001524 	stmdaeq	r0, {r2, r5, r8, sl, ip}
     bd4:	00000028 	andeq	r0, r0, r8, lsr #32
     bd8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     bdc:	41018e02 	tstmi	r1, r2, lsl #28
     be0:	0000070d 	andeq	r0, r0, sp, lsl #14
     be4:	00000024 	andeq	r0, r0, r4, lsr #32
     be8:	00000a7c 	andeq	r0, r0, ip, ror sl
     bec:	00000000 	andeq	r0, r0, r0
     bf0:	00000128 	andeq	r0, r0, r8, lsr #2
     bf4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     bf8:	100e4101 	andne	r4, lr, r1, lsl #2
     bfc:	02070d41 	andeq	r0, r7, #4160	; 0x1040
     c00:	41040e8b 	smlabbmi	r4, fp, lr, r0
     c04:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
     c08:	0000000e 	andeq	r0, r0, lr
     c0c:	00000024 	andeq	r0, r0, r4, lsr #32
     c10:	00000a7c 	andeq	r0, r0, ip, ror sl
     c14:	00000000 	andeq	r0, r0, r0
     c18:	00000060 	andeq	r0, r0, r0, rrx
     c1c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     c20:	100e4101 	andne	r4, lr, r1, lsl #2
     c24:	66070d41 	strvs	r0, [r7], -r1, asr #26
     c28:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     c2c:	0ec7410d 	poleqs	f4, f7, #5.0
     c30:	00000000 	andeq	r0, r0, r0
     c34:	00000018 	andeq	r0, r0, r8, lsl r0
     c38:	00000a7c 	andeq	r0, r0, ip, ror sl
     c3c:	00000000 	andeq	r0, r0, r0
     c40:	00000028 	andeq	r0, r0, r8, lsr #32
     c44:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     c48:	41018e02 	tstmi	r1, r2, lsl #28
     c4c:	0000070d 	andeq	r0, r0, sp, lsl #14
     c50:	0000001c 	andeq	r0, r0, ip, lsl r0
     c54:	00000a7c 	andeq	r0, r0, ip, ror sl
     c58:	00000000 	andeq	r0, r0, r0
     c5c:	0000000c 	andeq	r0, r0, ip
     c60:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     c64:	070d4101 	streq	r4, [sp, -r1, lsl #2]
     c68:	410d0d42 	tstmi	sp, r2, asr #26
     c6c:	00000ec7 	andeq	r0, r0, r7, asr #29
     c70:	0000000c 	andeq	r0, r0, ip
     c74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c78:	7c020001 	stcvc	0, cr0, [r2], {1}
     c7c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c80:	00000020 	andeq	r0, r0, r0, lsr #32
     c84:	00000c70 	andeq	r0, r0, r0, ror ip
     c88:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
     c8c:	0000015c 	andeq	r0, r0, ip, asr r1
     c90:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     c94:	41018e02 	tstmi	r1, r2, lsl #28
     c98:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
     c9c:	0ea70207 	cdpeq	2, 10, cr0, cr7, cr7, {0}
     ca0:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     ca4:	00000020 	andeq	r0, r0, r0, lsr #32
     ca8:	00000c70 	andeq	r0, r0, r0, ror ip
     cac:	00000000 	andeq	r0, r0, r0
     cb0:	000000bc 	strheq	r0, [r0], -ip
     cb4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     cb8:	41018e02 	tstmi	r1, r2, lsl #28
     cbc:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
     cc0:	0e590207 	cdpeq	2, 5, cr0, cr9, cr7, {0}
     cc4:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     cc8:	00000020 	andeq	r0, r0, r0, lsr #32
     ccc:	00000c70 	andeq	r0, r0, r0, ror ip
     cd0:	00000000 	andeq	r0, r0, r0
     cd4:	00000076 	andeq	r0, r0, r6, ror r0
     cd8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     cdc:	41018e02 	tstmi	r1, r2, lsl #28
     ce0:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
     ce4:	080e7607 	stmdaeq	lr, {r0, r1, r2, r9, sl, ip, sp, lr}
     ce8:	000d0d41 	andeq	r0, sp, r1, asr #26
     cec:	00000020 	andeq	r0, r0, r0, lsr #32
     cf0:	00000c70 	andeq	r0, r0, r0, ror ip
     cf4:	00000000 	andeq	r0, r0, r0
     cf8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     cfc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     d00:	41018e02 	tstmi	r1, r2, lsl #28
     d04:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
     d08:	0e530207 	cdpeq	2, 5, cr0, cr3, cr7, {0}
     d0c:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     d10:	00000020 	andeq	r0, r0, r0, lsr #32
     d14:	00000c70 	andeq	r0, r0, r0, ror ip
     d18:	00000000 	andeq	r0, r0, r0
     d1c:	000000e0 	andeq	r0, r0, r0, ror #1
     d20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     d24:	41018e02 	tstmi	r1, r2, lsl #28
     d28:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
     d2c:	0e6b0207 	cdpeq	2, 6, cr0, cr11, cr7, {0}
     d30:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     d34:	00000024 	andeq	r0, r0, r4, lsr #32
     d38:	00000c70 	andeq	r0, r0, r0, ror ip
     d3c:	00000000 	andeq	r0, r0, r0
     d40:	00000042 	andeq	r0, r0, r2, asr #32
     d44:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     d48:	100e4101 	andne	r4, lr, r1, lsl #2
     d4c:	5b070d41 	blpl	1c4258 <_Min_Stack_Size+0x1c3e58>
     d50:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     d54:	0ec7410d 	poleqs	f4, f7, #5.0
     d58:	00000000 	andeq	r0, r0, r0
     d5c:	00000020 	andeq	r0, r0, r0, lsr #32
     d60:	00000c70 	andeq	r0, r0, r0, ror ip
     d64:	00000000 	andeq	r0, r0, r0
     d68:	000001be 			; <UNDEFINED> instruction: 0x000001be
     d6c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     d70:	41018e02 	tstmi	r1, r2, lsl #28
     d74:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
     d78:	0eda0207 	cdpeq	2, 13, cr0, cr10, cr7, {0}
     d7c:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
     d80:	00000024 	andeq	r0, r0, r4, lsr #32
     d84:	00000c70 	andeq	r0, r0, r0, ror ip
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	00000312 	andeq	r0, r0, r2, lsl r3
     d90:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     d94:	41018e02 	tstmi	r1, r2, lsl #28
     d98:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
     d9c:	01840307 	orreq	r0, r4, r7, lsl #6
     da0:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
     da4:	0000000d 	andeq	r0, r0, sp
     da8:	00000024 	andeq	r0, r0, r4, lsr #32
     dac:	00000c70 	andeq	r0, r0, r0, ror ip
     db0:	00000000 	andeq	r0, r0, r0
     db4:	000000a4 	andeq	r0, r0, r4, lsr #1
     db8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     dbc:	200e4101 	andcs	r4, lr, r1, lsl #2
     dc0:	02070d41 	andeq	r0, r7, #4160	; 0x1040
     dc4:	41040e4c 	tstmi	r4, ip, asr #28
     dc8:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
     dcc:	0000000e 	andeq	r0, r0, lr
     dd0:	00000024 	andeq	r0, r0, r4, lsr #32
     dd4:	00000c70 	andeq	r0, r0, r0, ror ip
     dd8:	00000000 	andeq	r0, r0, r0
     ddc:	000000d2 	ldrdeq	r0, [r0], -r2
     de0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     de4:	180e4101 	stmdane	lr, {r0, r8, lr}
     de8:	02070d41 	andeq	r0, r7, #4160	; 0x1040
     dec:	41040e63 	tstmi	r4, r3, ror #28
     df0:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
     df4:	0000000e 	andeq	r0, r0, lr
     df8:	00000024 	andeq	r0, r0, r4, lsr #32
     dfc:	00000c70 	andeq	r0, r0, r0, ror ip
     e00:	00000000 	andeq	r0, r0, r0
     e04:	0000001a 	andeq	r0, r0, sl, lsl r0
     e08:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     e0c:	100e4101 	andne	r4, lr, r1, lsl #2
     e10:	47070d41 	strmi	r0, [r7, -r1, asr #26]
     e14:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     e18:	0ec7410d 	poleqs	f4, f7, #5.0
     e1c:	00000000 	andeq	r0, r0, r0
     e20:	00000024 	andeq	r0, r0, r4, lsr #32
     e24:	00000c70 	andeq	r0, r0, r0, ror ip
     e28:	00000000 	andeq	r0, r0, r0
     e2c:	00000016 	andeq	r0, r0, r6, lsl r0
     e30:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     e34:	100e4101 	andne	r4, lr, r1, lsl #2
     e38:	45070d41 	strmi	r0, [r7, #-3393]	; 0xfffff2bf
     e3c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     e40:	0ec7410d 	poleqs	f4, f7, #5.0
     e44:	00000000 	andeq	r0, r0, r0
     e48:	00000024 	andeq	r0, r0, r4, lsr #32
     e4c:	00000c70 	andeq	r0, r0, r0, ror ip
     e50:	00000000 	andeq	r0, r0, r0
     e54:	0000005a 	andeq	r0, r0, sl, asr r0
     e58:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     e5c:	180e4101 	stmdane	lr, {r0, r8, lr}
     e60:	67070d41 	strvs	r0, [r7, -r1, asr #26]
     e64:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     e68:	0ec7410d 	poleqs	f4, f7, #5.0
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	00000024 	andeq	r0, r0, r4, lsr #32
     e74:	00000c70 	andeq	r0, r0, r0, ror ip
     e78:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
     e7c:	00000068 	andeq	r0, r0, r8, rrx
     e80:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     e84:	180e4101 	stmdane	lr, {r0, r8, lr}
     e88:	6a070d41 	bvs	1c4394 <_Min_Stack_Size+0x1c3f94>
     e8c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     e90:	0ec7410d 	poleqs	f4, f7, #5.0
     e94:	00000000 	andeq	r0, r0, r0
     e98:	00000024 	andeq	r0, r0, r4, lsr #32
     e9c:	00000c70 	andeq	r0, r0, r0, ror ip
     ea0:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
     ea4:	000000f4 	strdeq	r0, [r0], -r4
     ea8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     eac:	180e4101 	stmdane	lr, {r0, r8, lr}
     eb0:	02070d41 	andeq	r0, r7, #4160	; 0x1040
     eb4:	41040e74 	tstmi	r4, r4, ror lr
     eb8:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
     ebc:	0000000e 	andeq	r0, r0, lr
     ec0:	0000000c 	andeq	r0, r0, ip
     ec4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ec8:	7c020001 	stcvc	0, cr0, [r2], {1}
     ecc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ed0:	00000024 	andeq	r0, r0, r4, lsr #32
     ed4:	00000ec0 	andeq	r0, r0, r0, asr #29
     ed8:	08001804 	stmdaeq	r0, {r2, fp, ip}
     edc:	00000334 	andeq	r0, r0, r4, lsr r3
     ee0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     ee4:	280e4101 	stmdacs	lr, {r0, r8, lr}
     ee8:	03070d41 	movweq	r0, #32065	; 0x7d41
     eec:	040e017d 	streq	r0, [lr], #-381	; 0xfffffe83
     ef0:	410d0d41 	tstmi	sp, r1, asr #26
     ef4:	00000ec7 	andeq	r0, r0, r7, asr #29
     ef8:	00000024 	andeq	r0, r0, r4, lsr #32
     efc:	00000ec0 	andeq	r0, r0, r0, asr #29
     f00:	00000000 	andeq	r0, r0, r0
     f04:	000001f4 	strdeq	r0, [r0], -r4
     f08:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     f0c:	200e4101 	andcs	r4, lr, r1, lsl #2
     f10:	02070d41 	andeq	r0, r7, #4160	; 0x1040
     f14:	41040edf 	ldrdmi	r0, [r4, -pc]
     f18:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
     f1c:	0000000e 	andeq	r0, r0, lr
     f20:	00000024 	andeq	r0, r0, r4, lsr #32
     f24:	00000ec0 	andeq	r0, r0, r0, asr #29
     f28:	00000000 	andeq	r0, r0, r0
     f2c:	0000002e 	andeq	r0, r0, lr, lsr #32
     f30:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     f34:	180e4101 	stmdane	lr, {r0, r8, lr}
     f38:	51070d41 	tstpl	r7, r1, asr #26
     f3c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     f40:	0ec7410d 	poleqs	f4, f7, #5.0
     f44:	00000000 	andeq	r0, r0, r0
     f48:	00000024 	andeq	r0, r0, r4, lsr #32
     f4c:	00000ec0 	andeq	r0, r0, r0, asr #29
     f50:	00000000 	andeq	r0, r0, r0
     f54:	00000030 	andeq	r0, r0, r0, lsr r0
     f58:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     f5c:	100e4101 	andne	r4, lr, r1, lsl #2
     f60:	52070d41 	andpl	r0, r7, #4160	; 0x1040
     f64:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     f68:	0ec7410d 	poleqs	f4, f7, #5.0
     f6c:	00000000 	andeq	r0, r0, r0
     f70:	00000024 	andeq	r0, r0, r4, lsr #32
     f74:	00000ec0 	andeq	r0, r0, r0, asr #29
     f78:	00000000 	andeq	r0, r0, r0
     f7c:	00000032 	andeq	r0, r0, r2, lsr r0
     f80:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     f84:	180e4101 	stmdane	lr, {r0, r8, lr}
     f88:	53070d41 	movwpl	r0, #32065	; 0x7d41
     f8c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     f90:	0ec7410d 	poleqs	f4, f7, #5.0
     f94:	00000000 	andeq	r0, r0, r0
     f98:	00000024 	andeq	r0, r0, r4, lsr #32
     f9c:	00000ec0 	andeq	r0, r0, r0, asr #29
     fa0:	00000000 	andeq	r0, r0, r0
     fa4:	0000004e 	andeq	r0, r0, lr, asr #32
     fa8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     fac:	180e4101 	stmdane	lr, {r0, r8, lr}
     fb0:	61070d41 	tstvs	r7, r1, asr #26
     fb4:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
     fb8:	0ec7410d 	poleqs	f4, f7, #5.0
     fbc:	00000000 	andeq	r0, r0, r0
     fc0:	00000020 	andeq	r0, r0, r0, lsr #32
     fc4:	00000ec0 	andeq	r0, r0, r0, asr #29
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	00000030 	andeq	r0, r0, r0, lsr r0
     fd0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
     fd4:	41018e02 	tstmi	r1, r2, lsl #28
     fd8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
     fdc:	080e5107 	stmdaeq	lr, {r0, r1, r2, r8, ip, lr}
     fe0:	000d0d41 	andeq	r0, sp, r1, asr #26
     fe4:	00000024 	andeq	r0, r0, r4, lsr #32
     fe8:	00000ec0 	andeq	r0, r0, r0, asr #29
     fec:	00000000 	andeq	r0, r0, r0
     ff0:	00000014 	andeq	r0, r0, r4, lsl r0
     ff4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
     ff8:	100e4101 	andne	r4, lr, r1, lsl #2
     ffc:	44070d41 	strmi	r0, [r7], #-3393	; 0xfffff2bf
    1000:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1004:	0ec7410d 	poleqs	f4, f7, #5.0
    1008:	00000000 	andeq	r0, r0, r0
    100c:	0000000c 	andeq	r0, r0, ip
    1010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1014:	7c020001 	stcvc	0, cr0, [r2], {1}
    1018:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    101c:	00000020 	andeq	r0, r0, r0, lsr #32
    1020:	0000100c 	andeq	r1, r0, ip
    1024:	08001b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, ip}
    1028:	0000009a 	muleq	r0, sl, r0
    102c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1030:	41018e02 	tstmi	r1, r2, lsl #28
    1034:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1038:	0e480207 	cdpeq	2, 4, cr0, cr8, cr7, {0}
    103c:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1040:	00000020 	andeq	r0, r0, r0, lsr #32
    1044:	0000100c 	andeq	r1, r0, ip
    1048:	00000000 	andeq	r0, r0, r0
    104c:	000000aa 	andeq	r0, r0, sl, lsr #1
    1050:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1054:	41018e02 	tstmi	r1, r2, lsl #28
    1058:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    105c:	0e500207 	cdpeq	2, 5, cr0, cr0, cr7, {0}
    1060:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1064:	00000020 	andeq	r0, r0, r0, lsr #32
    1068:	0000100c 	andeq	r1, r0, ip
    106c:	00000000 	andeq	r0, r0, r0
    1070:	000000cc 	andeq	r0, r0, ip, asr #1
    1074:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1078:	41018e02 	tstmi	r1, r2, lsl #28
    107c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1080:	0e610207 	cdpeq	2, 6, cr0, cr1, cr7, {0}
    1084:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1088:	00000020 	andeq	r0, r0, r0, lsr #32
    108c:	0000100c 	andeq	r1, r0, ip
    1090:	00000000 	andeq	r0, r0, r0
    1094:	000000e0 	andeq	r0, r0, r0, ror #1
    1098:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    109c:	41018e02 	tstmi	r1, r2, lsl #28
    10a0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    10a4:	0e6b0207 	cdpeq	2, 6, cr0, cr11, cr7, {0}
    10a8:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    10ac:	00000020 	andeq	r0, r0, r0, lsr #32
    10b0:	0000100c 	andeq	r1, r0, ip
    10b4:	00000000 	andeq	r0, r0, r0
    10b8:	0000005e 	andeq	r0, r0, lr, asr r0
    10bc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    10c0:	41018e02 	tstmi	r1, r2, lsl #28
    10c4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    10c8:	080e6a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, sp, lr}
    10cc:	000d0d41 	andeq	r0, sp, r1, asr #26
    10d0:	00000024 	andeq	r0, r0, r4, lsr #32
    10d4:	0000100c 	andeq	r1, r0, ip
    10d8:	00000000 	andeq	r0, r0, r0
    10dc:	00000012 	andeq	r0, r0, r2, lsl r0
    10e0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    10e4:	100e4101 	andne	r4, lr, r1, lsl #2
    10e8:	43070d41 	movwmi	r0, #32065	; 0x7d41
    10ec:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    10f0:	0ec7410d 	poleqs	f4, f7, #5.0
    10f4:	00000000 	andeq	r0, r0, r0
    10f8:	00000024 	andeq	r0, r0, r4, lsr #32
    10fc:	0000100c 	andeq	r1, r0, ip
    1100:	00000000 	andeq	r0, r0, r0
    1104:	00000012 	andeq	r0, r0, r2, lsl r0
    1108:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    110c:	100e4101 	andne	r4, lr, r1, lsl #2
    1110:	43070d41 	movwmi	r0, #32065	; 0x7d41
    1114:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1118:	0ec7410d 	poleqs	f4, f7, #5.0
    111c:	00000000 	andeq	r0, r0, r0
    1120:	00000024 	andeq	r0, r0, r4, lsr #32
    1124:	0000100c 	andeq	r1, r0, ip
    1128:	00000000 	andeq	r0, r0, r0
    112c:	00000124 	andeq	r0, r0, r4, lsr #2
    1130:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1134:	41018e02 	tstmi	r1, r2, lsl #28
    1138:	0c41300e 	mcrreq	0, 0, r3, r1, cr14
    113c:	8d022807 	stchi	8, cr2, [r2, #-28]	; 0xffffffe4
    1140:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
    1144:	0000000d 	andeq	r0, r0, sp
    1148:	00000024 	andeq	r0, r0, r4, lsr #32
    114c:	0000100c 	andeq	r1, r0, ip
    1150:	00000000 	andeq	r0, r0, r0
    1154:	00000144 	andeq	r0, r0, r4, asr #2
    1158:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    115c:	41018e02 	tstmi	r1, r2, lsl #28
    1160:	0c41300e 	mcrreq	0, 0, r3, r1, cr14
    1164:	9d022807 	stcls	8, cr2, [r2, #-28]	; 0xffffffe4
    1168:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
    116c:	0000000d 	andeq	r0, r0, sp
    1170:	00000024 	andeq	r0, r0, r4, lsr #32
    1174:	0000100c 	andeq	r1, r0, ip
    1178:	00000000 	andeq	r0, r0, r0
    117c:	00000088 	andeq	r0, r0, r8, lsl #1
    1180:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1184:	180e4101 	stmdane	lr, {r0, r8, lr}
    1188:	7e070d41 	cdpvc	13, 0, cr0, cr7, cr1, {2}
    118c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1190:	0ec7410d 	poleqs	f4, f7, #5.0
    1194:	00000000 	andeq	r0, r0, r0
    1198:	00000020 	andeq	r0, r0, r0, lsr #32
    119c:	0000100c 	andeq	r1, r0, ip
    11a0:	00000000 	andeq	r0, r0, r0
    11a4:	00000060 	andeq	r0, r0, r0, rrx
    11a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    11ac:	41018e02 	tstmi	r1, r2, lsl #28
    11b0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    11b4:	080e6b07 	stmdaeq	lr, {r0, r1, r2, r8, r9, fp, sp, lr}
    11b8:	000d0d41 	andeq	r0, sp, r1, asr #26
    11bc:	00000020 	andeq	r0, r0, r0, lsr #32
    11c0:	0000100c 	andeq	r1, r0, ip
    11c4:	00000000 	andeq	r0, r0, r0
    11c8:	000000d8 	ldrdeq	r0, [r0], -r8
    11cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    11d0:	41018e02 	tstmi	r1, r2, lsl #28
    11d4:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
    11d8:	0e610207 	cdpeq	2, 6, cr0, cr1, cr7, {0}
    11dc:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    11e0:	00000020 	andeq	r0, r0, r0, lsr #32
    11e4:	0000100c 	andeq	r1, r0, ip
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	00000060 	andeq	r0, r0, r0, rrx
    11f0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    11f4:	41018e02 	tstmi	r1, r2, lsl #28
    11f8:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    11fc:	080e6b07 	stmdaeq	lr, {r0, r1, r2, r8, r9, fp, sp, lr}
    1200:	000d0d41 	andeq	r0, sp, r1, asr #26
    1204:	00000024 	andeq	r0, r0, r4, lsr #32
    1208:	0000100c 	andeq	r1, r0, ip
    120c:	00000000 	andeq	r0, r0, r0
    1210:	000000c6 	andeq	r0, r0, r6, asr #1
    1214:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1218:	180e4101 	stmdane	lr, {r0, r8, lr}
    121c:	02070d41 	andeq	r0, r7, #4160	; 0x1040
    1220:	41040e5d 	tstmi	r4, sp, asr lr
    1224:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
    1228:	0000000e 	andeq	r0, r0, lr
    122c:	00000024 	andeq	r0, r0, r4, lsr #32
    1230:	0000100c 	andeq	r1, r0, ip
    1234:	00000000 	andeq	r0, r0, r0
    1238:	000000a0 	andeq	r0, r0, r0, lsr #1
    123c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1240:	180e4101 	stmdane	lr, {r0, r8, lr}
    1244:	02070d41 	andeq	r0, r7, #4160	; 0x1040
    1248:	41040e4a 	tstmi	r4, sl, asr #28
    124c:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
    1250:	0000000e 	andeq	r0, r0, lr
    1254:	00000020 	andeq	r0, r0, r0, lsr #32
    1258:	0000100c 	andeq	r1, r0, ip
    125c:	00000000 	andeq	r0, r0, r0
    1260:	000000b6 	strheq	r0, [r0], -r6
    1264:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1268:	41018e02 	tstmi	r1, r2, lsl #28
    126c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1270:	0e560207 	cdpeq	2, 5, cr0, cr6, cr7, {0}
    1274:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1278:	00000020 	andeq	r0, r0, r0, lsr #32
    127c:	0000100c 	andeq	r1, r0, ip
    1280:	00000000 	andeq	r0, r0, r0
    1284:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
    1288:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    128c:	41018e02 	tstmi	r1, r2, lsl #28
    1290:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
    1294:	0ed80207 	cdpeq	2, 13, cr0, cr8, cr7, {0}
    1298:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    129c:	00000020 	andeq	r0, r0, r0, lsr #32
    12a0:	0000100c 	andeq	r1, r0, ip
    12a4:	00000000 	andeq	r0, r0, r0
    12a8:	0000009e 	muleq	r0, lr, r0
    12ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    12b0:	41018e02 	tstmi	r1, r2, lsl #28
    12b4:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
    12b8:	0e4a0207 	cdpeq	2, 4, cr0, cr10, cr7, {0}
    12bc:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    12c0:	00000020 	andeq	r0, r0, r0, lsr #32
    12c4:	0000100c 	andeq	r1, r0, ip
    12c8:	00000000 	andeq	r0, r0, r0
    12cc:	0000009e 	muleq	r0, lr, r0
    12d0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    12d4:	41018e02 	tstmi	r1, r2, lsl #28
    12d8:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
    12dc:	0e4a0207 	cdpeq	2, 4, cr0, cr10, cr7, {0}
    12e0:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    12e4:	00000020 	andeq	r0, r0, r0, lsr #32
    12e8:	0000100c 	andeq	r1, r0, ip
    12ec:	00000000 	andeq	r0, r0, r0
    12f0:	00000122 	andeq	r0, r0, r2, lsr #2
    12f4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    12f8:	41018e02 	tstmi	r1, r2, lsl #28
    12fc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1300:	0e8c0207 	cdpeq	2, 8, cr0, cr12, cr7, {0}
    1304:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1308:	00000020 	andeq	r0, r0, r0, lsr #32
    130c:	0000100c 	andeq	r1, r0, ip
    1310:	00000000 	andeq	r0, r0, r0
    1314:	00000088 	andeq	r0, r0, r8, lsl #1
    1318:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    131c:	41018e02 	tstmi	r1, r2, lsl #28
    1320:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1324:	080e7f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, ip, sp, lr}
    1328:	000d0d41 	andeq	r0, sp, r1, asr #26
    132c:	00000020 	andeq	r0, r0, r0, lsr #32
    1330:	0000100c 	andeq	r1, r0, ip
    1334:	00000000 	andeq	r0, r0, r0
    1338:	000000b6 	strheq	r0, [r0], -r6
    133c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1340:	41018e02 	tstmi	r1, r2, lsl #28
    1344:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1348:	0e560207 	cdpeq	2, 5, cr0, cr6, cr7, {0}
    134c:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1350:	00000020 	andeq	r0, r0, r0, lsr #32
    1354:	0000100c 	andeq	r1, r0, ip
    1358:	00000000 	andeq	r0, r0, r0
    135c:	00000168 	andeq	r0, r0, r8, ror #2
    1360:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1364:	41018e02 	tstmi	r1, r2, lsl #28
    1368:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    136c:	0eaa0207 	cdpeq	2, 10, cr0, cr10, cr7, {0}
    1370:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1374:	00000020 	andeq	r0, r0, r0, lsr #32
    1378:	0000100c 	andeq	r1, r0, ip
    137c:	00000000 	andeq	r0, r0, r0
    1380:	000000a0 	andeq	r0, r0, r0, lsr #1
    1384:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1388:	41018e02 	tstmi	r1, r2, lsl #28
    138c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1390:	0e480207 	cdpeq	2, 4, cr0, cr8, cr7, {0}
    1394:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1398:	00000020 	andeq	r0, r0, r0, lsr #32
    139c:	0000100c 	andeq	r1, r0, ip
    13a0:	00000000 	andeq	r0, r0, r0
    13a4:	000000d4 	ldrdeq	r0, [r0], -r4
    13a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    13ac:	41018e02 	tstmi	r1, r2, lsl #28
    13b0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    13b4:	0e620207 	cdpeq	2, 6, cr0, cr2, cr7, {0}
    13b8:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    13bc:	00000024 	andeq	r0, r0, r4, lsr #32
    13c0:	0000100c 	andeq	r1, r0, ip
    13c4:	00000000 	andeq	r0, r0, r0
    13c8:	00000358 	andeq	r0, r0, r8, asr r3
    13cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    13d0:	41018e02 	tstmi	r1, r2, lsl #28
    13d4:	0d41300e 	stcleq	0, cr3, [r1, #-56]	; 0xffffffc8
    13d8:	01a50307 			; <UNDEFINED> instruction: 0x01a50307
    13dc:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
    13e0:	0000000d 	andeq	r0, r0, sp
    13e4:	00000024 	andeq	r0, r0, r4, lsr #32
    13e8:	0000100c 	andeq	r1, r0, ip
    13ec:	00000000 	andeq	r0, r0, r0
    13f0:	00000012 	andeq	r0, r0, r2, lsl r0
    13f4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    13f8:	100e4101 	andne	r4, lr, r1, lsl #2
    13fc:	43070d41 	movwmi	r0, #32065	; 0x7d41
    1400:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1404:	0ec7410d 	poleqs	f4, f7, #5.0
    1408:	00000000 	andeq	r0, r0, r0
    140c:	00000024 	andeq	r0, r0, r4, lsr #32
    1410:	0000100c 	andeq	r1, r0, ip
    1414:	00000000 	andeq	r0, r0, r0
    1418:	00000012 	andeq	r0, r0, r2, lsl r0
    141c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1420:	100e4101 	andne	r4, lr, r1, lsl #2
    1424:	43070d41 	movwmi	r0, #32065	; 0x7d41
    1428:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    142c:	0ec7410d 	poleqs	f4, f7, #5.0
    1430:	00000000 	andeq	r0, r0, r0
    1434:	00000024 	andeq	r0, r0, r4, lsr #32
    1438:	0000100c 	andeq	r1, r0, ip
    143c:	00000000 	andeq	r0, r0, r0
    1440:	00000012 	andeq	r0, r0, r2, lsl r0
    1444:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1448:	100e4101 	andne	r4, lr, r1, lsl #2
    144c:	43070d41 	movwmi	r0, #32065	; 0x7d41
    1450:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1454:	0ec7410d 	poleqs	f4, f7, #5.0
    1458:	00000000 	andeq	r0, r0, r0
    145c:	00000024 	andeq	r0, r0, r4, lsr #32
    1460:	0000100c 	andeq	r1, r0, ip
    1464:	00000000 	andeq	r0, r0, r0
    1468:	00000012 	andeq	r0, r0, r2, lsl r0
    146c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1470:	100e4101 	andne	r4, lr, r1, lsl #2
    1474:	43070d41 	movwmi	r0, #32065	; 0x7d41
    1478:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    147c:	0ec7410d 	poleqs	f4, f7, #5.0
    1480:	00000000 	andeq	r0, r0, r0
    1484:	00000024 	andeq	r0, r0, r4, lsr #32
    1488:	0000100c 	andeq	r1, r0, ip
    148c:	00000000 	andeq	r0, r0, r0
    1490:	00000012 	andeq	r0, r0, r2, lsl r0
    1494:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1498:	100e4101 	andne	r4, lr, r1, lsl #2
    149c:	43070d41 	movwmi	r0, #32065	; 0x7d41
    14a0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    14a4:	0ec7410d 	poleqs	f4, f7, #5.0
    14a8:	00000000 	andeq	r0, r0, r0
    14ac:	00000024 	andeq	r0, r0, r4, lsr #32
    14b0:	0000100c 	andeq	r1, r0, ip
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	00000012 	andeq	r0, r0, r2, lsl r0
    14bc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    14c0:	100e4101 	andne	r4, lr, r1, lsl #2
    14c4:	43070d41 	movwmi	r0, #32065	; 0x7d41
    14c8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    14cc:	0ec7410d 	poleqs	f4, f7, #5.0
    14d0:	00000000 	andeq	r0, r0, r0
    14d4:	00000024 	andeq	r0, r0, r4, lsr #32
    14d8:	0000100c 	andeq	r1, r0, ip
    14dc:	00000000 	andeq	r0, r0, r0
    14e0:	00000012 	andeq	r0, r0, r2, lsl r0
    14e4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    14e8:	100e4101 	andne	r4, lr, r1, lsl #2
    14ec:	43070d41 	movwmi	r0, #32065	; 0x7d41
    14f0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    14f4:	0ec7410d 	poleqs	f4, f7, #5.0
    14f8:	00000000 	andeq	r0, r0, r0
    14fc:	00000024 	andeq	r0, r0, r4, lsr #32
    1500:	0000100c 	andeq	r1, r0, ip
    1504:	00000000 	andeq	r0, r0, r0
    1508:	00000012 	andeq	r0, r0, r2, lsl r0
    150c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1510:	100e4101 	andne	r4, lr, r1, lsl #2
    1514:	43070d41 	movwmi	r0, #32065	; 0x7d41
    1518:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    151c:	0ec7410d 	poleqs	f4, f7, #5.0
    1520:	00000000 	andeq	r0, r0, r0
    1524:	00000024 	andeq	r0, r0, r4, lsr #32
    1528:	0000100c 	andeq	r1, r0, ip
    152c:	00000000 	andeq	r0, r0, r0
    1530:	00000016 	andeq	r0, r0, r6, lsl r0
    1534:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1538:	100e4101 	andne	r4, lr, r1, lsl #2
    153c:	45070d41 	strmi	r0, [r7, #-3393]	; 0xfffff2bf
    1540:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1544:	0ec7410d 	poleqs	f4, f7, #5.0
    1548:	00000000 	andeq	r0, r0, r0
    154c:	00000024 	andeq	r0, r0, r4, lsr #32
    1550:	0000100c 	andeq	r1, r0, ip
    1554:	00000000 	andeq	r0, r0, r0
    1558:	00000052 	andeq	r0, r0, r2, asr r0
    155c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1560:	100e4101 	andne	r4, lr, r1, lsl #2
    1564:	63070d41 	movwvs	r0, #32065	; 0x7d41
    1568:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    156c:	0ec7410d 	poleqs	f4, f7, #5.0
    1570:	00000000 	andeq	r0, r0, r0
    1574:	00000024 	andeq	r0, r0, r4, lsr #32
    1578:	0000100c 	andeq	r1, r0, ip
    157c:	00000000 	andeq	r0, r0, r0
    1580:	00000052 	andeq	r0, r0, r2, asr r0
    1584:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1588:	100e4101 	andne	r4, lr, r1, lsl #2
    158c:	63070d41 	movwvs	r0, #32065	; 0x7d41
    1590:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1594:	0ec7410d 	poleqs	f4, f7, #5.0
    1598:	00000000 	andeq	r0, r0, r0
    159c:	00000024 	andeq	r0, r0, r4, lsr #32
    15a0:	0000100c 	andeq	r1, r0, ip
    15a4:	00000000 	andeq	r0, r0, r0
    15a8:	00000052 	andeq	r0, r0, r2, asr r0
    15ac:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    15b0:	100e4101 	andne	r4, lr, r1, lsl #2
    15b4:	63070d41 	movwvs	r0, #32065	; 0x7d41
    15b8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    15bc:	0ec7410d 	poleqs	f4, f7, #5.0
    15c0:	00000000 	andeq	r0, r0, r0
    15c4:	00000024 	andeq	r0, r0, r4, lsr #32
    15c8:	0000100c 	andeq	r1, r0, ip
    15cc:	00000000 	andeq	r0, r0, r0
    15d0:	00000066 	andeq	r0, r0, r6, rrx
    15d4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    15d8:	180e4101 	stmdane	lr, {r0, r8, lr}
    15dc:	6d070d41 	stcvs	13, cr0, [r7, #-260]	; 0xfffffefc
    15e0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    15e4:	0ec7410d 	poleqs	f4, f7, #5.0
    15e8:	00000000 	andeq	r0, r0, r0
    15ec:	00000024 	andeq	r0, r0, r4, lsr #32
    15f0:	0000100c 	andeq	r1, r0, ip
    15f4:	00000000 	andeq	r0, r0, r0
    15f8:	00000066 	andeq	r0, r0, r6, rrx
    15fc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1600:	180e4101 	stmdane	lr, {r0, r8, lr}
    1604:	6d070d41 	stcvs	13, cr0, [r7, #-260]	; 0xfffffefc
    1608:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    160c:	0ec7410d 	poleqs	f4, f7, #5.0
    1610:	00000000 	andeq	r0, r0, r0
    1614:	00000024 	andeq	r0, r0, r4, lsr #32
    1618:	0000100c 	andeq	r1, r0, ip
    161c:	00000000 	andeq	r0, r0, r0
    1620:	0000003a 	andeq	r0, r0, sl, lsr r0
    1624:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1628:	180e4101 	stmdane	lr, {r0, r8, lr}
    162c:	57070d41 	strpl	r0, [r7, -r1, asr #26]
    1630:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1634:	0ec7410d 	poleqs	f4, f7, #5.0
    1638:	00000000 	andeq	r0, r0, r0
    163c:	00000024 	andeq	r0, r0, r4, lsr #32
    1640:	0000100c 	andeq	r1, r0, ip
    1644:	00000000 	andeq	r0, r0, r0
    1648:	00000016 	andeq	r0, r0, r6, lsl r0
    164c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1650:	100e4101 	andne	r4, lr, r1, lsl #2
    1654:	45070d41 	strmi	r0, [r7, #-3393]	; 0xfffff2bf
    1658:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    165c:	0ec7410d 	poleqs	f4, f7, #5.0
    1660:	00000000 	andeq	r0, r0, r0
    1664:	00000020 	andeq	r0, r0, r0, lsr #32
    1668:	0000100c 	andeq	r1, r0, ip
    166c:	00000000 	andeq	r0, r0, r0
    1670:	00000052 	andeq	r0, r0, r2, asr r0
    1674:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1678:	41018e02 	tstmi	r1, r2, lsl #28
    167c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1680:	080e6407 	stmdaeq	lr, {r0, r1, r2, sl, sp, lr}
    1684:	000d0d41 	andeq	r0, sp, r1, asr #26
    1688:	00000020 	andeq	r0, r0, r0, lsr #32
    168c:	0000100c 	andeq	r1, r0, ip
    1690:	00000000 	andeq	r0, r0, r0
    1694:	0000001c 	andeq	r0, r0, ip, lsl r0
    1698:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    169c:	41018e02 	tstmi	r1, r2, lsl #28
    16a0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    16a4:	080e4907 	stmdaeq	lr, {r0, r1, r2, r8, fp, lr}
    16a8:	000d0d41 	andeq	r0, sp, r1, asr #26
    16ac:	00000020 	andeq	r0, r0, r0, lsr #32
    16b0:	0000100c 	andeq	r1, r0, ip
    16b4:	00000000 	andeq	r0, r0, r0
    16b8:	00000096 	muleq	r0, r6, r0
    16bc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    16c0:	41018e02 	tstmi	r1, r2, lsl #28
    16c4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    16c8:	0e460207 	cdpeq	2, 4, cr0, cr6, cr7, {0}
    16cc:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    16d0:	00000020 	andeq	r0, r0, r0, lsr #32
    16d4:	0000100c 	andeq	r1, r0, ip
    16d8:	00000000 	andeq	r0, r0, r0
    16dc:	00000036 	andeq	r0, r0, r6, lsr r0
    16e0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    16e4:	41018e02 	tstmi	r1, r2, lsl #28
    16e8:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    16ec:	080e5607 	stmdaeq	lr, {r0, r1, r2, r9, sl, ip, lr}
    16f0:	000d0d41 	andeq	r0, sp, r1, asr #26
    16f4:	00000020 	andeq	r0, r0, r0, lsr #32
    16f8:	0000100c 	andeq	r1, r0, ip
    16fc:	00000000 	andeq	r0, r0, r0
    1700:	00000094 	muleq	r0, r4, r0
    1704:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1708:	41018e02 	tstmi	r1, r2, lsl #28
    170c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1710:	0e450207 	cdpeq	2, 4, cr0, cr5, cr7, {0}
    1714:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1718:	00000020 	andeq	r0, r0, r0, lsr #32
    171c:	0000100c 	andeq	r1, r0, ip
    1720:	00000000 	andeq	r0, r0, r0
    1724:	00000094 	muleq	r0, r4, r0
    1728:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    172c:	41018e02 	tstmi	r1, r2, lsl #28
    1730:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1734:	0e450207 	cdpeq	2, 4, cr0, cr5, cr7, {0}
    1738:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    173c:	00000024 	andeq	r0, r0, r4, lsr #32
    1740:	0000100c 	andeq	r1, r0, ip
    1744:	00000000 	andeq	r0, r0, r0
    1748:	00000072 	andeq	r0, r0, r2, ror r0
    174c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1750:	180e4101 	stmdane	lr, {r0, r8, lr}
    1754:	73070d41 	movwvc	r0, #32065	; 0x7d41
    1758:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    175c:	0ec7410d 	poleqs	f4, f7, #5.0
    1760:	00000000 	andeq	r0, r0, r0
    1764:	00000020 	andeq	r0, r0, r0, lsr #32
    1768:	0000100c 	andeq	r1, r0, ip
    176c:	00000000 	andeq	r0, r0, r0
    1770:	000000c8 	andeq	r0, r0, r8, asr #1
    1774:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1778:	41018e02 	tstmi	r1, r2, lsl #28
    177c:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
    1780:	0e590207 	cdpeq	2, 5, cr0, cr9, cr7, {0}
    1784:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1788:	00000024 	andeq	r0, r0, r4, lsr #32
    178c:	0000100c 	andeq	r1, r0, ip
    1790:	00000000 	andeq	r0, r0, r0
    1794:	0000002a 	andeq	r0, r0, sl, lsr #32
    1798:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    179c:	100e4101 	andne	r4, lr, r1, lsl #2
    17a0:	4f070d41 	svcmi	0x00070d41
    17a4:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    17a8:	0ec7410d 	poleqs	f4, f7, #5.0
    17ac:	00000000 	andeq	r0, r0, r0
    17b0:	00000024 	andeq	r0, r0, r4, lsr #32
    17b4:	0000100c 	andeq	r1, r0, ip
    17b8:	00000000 	andeq	r0, r0, r0
    17bc:	00000058 	andeq	r0, r0, r8, asr r0
    17c0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    17c4:	100e4101 	andne	r4, lr, r1, lsl #2
    17c8:	66070d41 	strvs	r0, [r7], -r1, asr #26
    17cc:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    17d0:	0ec7410d 	poleqs	f4, f7, #5.0
    17d4:	00000000 	andeq	r0, r0, r0
    17d8:	00000020 	andeq	r0, r0, r0, lsr #32
    17dc:	0000100c 	andeq	r1, r0, ip
    17e0:	00000000 	andeq	r0, r0, r0
    17e4:	00000028 	andeq	r0, r0, r8, lsr #32
    17e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    17ec:	41018e02 	tstmi	r1, r2, lsl #28
    17f0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    17f4:	080e4f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, lr}
    17f8:	000d0d41 	andeq	r0, sp, r1, asr #26
    17fc:	00000020 	andeq	r0, r0, r0, lsr #32
    1800:	0000100c 	andeq	r1, r0, ip
    1804:	00000000 	andeq	r0, r0, r0
    1808:	00000060 	andeq	r0, r0, r0, rrx
    180c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1810:	41018e02 	tstmi	r1, r2, lsl #28
    1814:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1818:	080e6b07 	stmdaeq	lr, {r0, r1, r2, r8, r9, fp, sp, lr}
    181c:	000d0d41 	andeq	r0, sp, r1, asr #26
    1820:	00000020 	andeq	r0, r0, r0, lsr #32
    1824:	0000100c 	andeq	r1, r0, ip
    1828:	00000000 	andeq	r0, r0, r0
    182c:	00000060 	andeq	r0, r0, r0, rrx
    1830:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1834:	41018e02 	tstmi	r1, r2, lsl #28
    1838:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    183c:	080e6b07 	stmdaeq	lr, {r0, r1, r2, r8, r9, fp, sp, lr}
    1840:	000d0d41 	andeq	r0, sp, r1, asr #26
    1844:	00000020 	andeq	r0, r0, r0, lsr #32
    1848:	0000100c 	andeq	r1, r0, ip
    184c:	00000000 	andeq	r0, r0, r0
    1850:	0000002a 	andeq	r0, r0, sl, lsr #32
    1854:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1858:	41018e02 	tstmi	r1, r2, lsl #28
    185c:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1860:	080e5007 	stmdaeq	lr, {r0, r1, r2, ip, lr}
    1864:	000d0d41 	andeq	r0, sp, r1, asr #26
    1868:	00000020 	andeq	r0, r0, r0, lsr #32
    186c:	0000100c 	andeq	r1, r0, ip
    1870:	00000000 	andeq	r0, r0, r0
    1874:	00000030 	andeq	r0, r0, r0, lsr r0
    1878:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    187c:	41018e02 	tstmi	r1, r2, lsl #28
    1880:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1884:	080e5307 	stmdaeq	lr, {r0, r1, r2, r8, r9, ip, lr}
    1888:	000d0d41 	andeq	r0, sp, r1, asr #26
    188c:	00000024 	andeq	r0, r0, r4, lsr #32
    1890:	0000100c 	andeq	r1, r0, ip
    1894:	00000000 	andeq	r0, r0, r0
    1898:	0000009e 	muleq	r0, lr, r0
    189c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    18a0:	180e4101 	stmdane	lr, {r0, r8, lr}
    18a4:	02070d41 	andeq	r0, r7, #4160	; 0x1040
    18a8:	41040e49 	tstmi	r4, r9, asr #28
    18ac:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
    18b0:	0000000e 	andeq	r0, r0, lr
    18b4:	00000020 	andeq	r0, r0, r0, lsr #32
    18b8:	0000100c 	andeq	r1, r0, ip
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	00000030 	andeq	r0, r0, r0, lsr r0
    18c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    18c8:	41018e02 	tstmi	r1, r2, lsl #28
    18cc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    18d0:	080e5307 	stmdaeq	lr, {r0, r1, r2, r8, r9, ip, lr}
    18d4:	000d0d41 	andeq	r0, sp, r1, asr #26
    18d8:	00000020 	andeq	r0, r0, r0, lsr #32
    18dc:	0000100c 	andeq	r1, r0, ip
    18e0:	00000000 	andeq	r0, r0, r0
    18e4:	0000012e 	andeq	r0, r0, lr, lsr #2
    18e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    18ec:	41018e02 	tstmi	r1, r2, lsl #28
    18f0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    18f4:	0e920207 	cdpeq	2, 9, cr0, cr2, cr7, {0}
    18f8:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    18fc:	00000030 	andeq	r0, r0, r0, lsr r0
    1900:	0000100c 	andeq	r1, r0, ip
    1904:	08001bd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, fp, ip}
    1908:	000003d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    190c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1910:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1914:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1918:	8a048905 	bhi	123d34 <_Min_Stack_Size+0x123934>
    191c:	8e028b03 	vmlahi.f64	d8, d2, d3
    1920:	a00e4101 	andge	r4, lr, r1, lsl #2
    1924:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    1928:	0e01df03 	cdpeq	15, 0, cr13, cr1, cr3, {0}
    192c:	0d0d4124 	stfeqs	f4, [sp, #-144]	; 0xffffff70
    1930:	0000000c 	andeq	r0, r0, ip
    1934:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1938:	7c020001 	stcvc	0, cr0, [r2], {1}
    193c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1940:	00000024 	andeq	r0, r0, r4, lsr #32
    1944:	00001930 	andeq	r1, r0, r0, lsr r9
    1948:	00000000 	andeq	r0, r0, r0
    194c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1950:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1954:	180e4101 	stmdane	lr, {r0, r8, lr}
    1958:	50070d41 	andpl	r0, r7, r1, asr #26
    195c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1960:	0ec7410d 	poleqs	f4, f7, #5.0
    1964:	00000000 	andeq	r0, r0, r0
    1968:	00000024 	andeq	r0, r0, r4, lsr #32
    196c:	00001930 	andeq	r1, r0, r0, lsr r9
    1970:	08001fa4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, fp, ip}
    1974:	0000001a 	andeq	r0, r0, sl, lsl r0
    1978:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    197c:	180e4101 	stmdane	lr, {r0, r8, lr}
    1980:	47070d41 	strmi	r0, [r7, -r1, asr #26]
    1984:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1988:	0ec7410d 	poleqs	f4, f7, #5.0
    198c:	00000000 	andeq	r0, r0, r0
    1990:	00000020 	andeq	r0, r0, r0, lsr #32
    1994:	00001930 	andeq	r1, r0, r0, lsr r9
    1998:	08001fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}
    199c:	00000026 	andeq	r0, r0, r6, lsr #32
    19a0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    19a4:	41018e02 	tstmi	r1, r2, lsl #28
    19a8:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    19ac:	080e4e07 	stmdaeq	lr, {r0, r1, r2, r9, sl, fp, lr}
    19b0:	000d0d41 	andeq	r0, sp, r1, asr #26
    19b4:	00000020 	andeq	r0, r0, r0, lsr #32
    19b8:	00001930 	andeq	r1, r0, r0, lsr r9
    19bc:	00000000 	andeq	r0, r0, r0
    19c0:	0000002c 	andeq	r0, r0, ip, lsr #32
    19c4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    19c8:	41018e02 	tstmi	r1, r2, lsl #28
    19cc:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    19d0:	080e5107 	stmdaeq	lr, {r0, r1, r2, r8, ip, lr}
    19d4:	000d0d41 	andeq	r0, sp, r1, asr #26
    19d8:	00000024 	andeq	r0, r0, r4, lsr #32
    19dc:	00001930 	andeq	r1, r0, r0, lsr r9
    19e0:	08001fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp, ip}
    19e4:	00000038 	andeq	r0, r0, r8, lsr r0
    19e8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    19ec:	180e4101 	stmdane	lr, {r0, r8, lr}
    19f0:	56070d41 	strpl	r0, [r7], -r1, asr #26
    19f4:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    19f8:	0ec7410d 	poleqs	f4, f7, #5.0
    19fc:	00000000 	andeq	r0, r0, r0
    1a00:	00000024 	andeq	r0, r0, r4, lsr #32
    1a04:	00001930 	andeq	r1, r0, r0, lsr r9
    1a08:	0800201c 	stmdaeq	r0, {r2, r3, r4, sp}
    1a0c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a10:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1a14:	100e4101 	andne	r4, lr, r1, lsl #2
    1a18:	50070d41 	andpl	r0, r7, r1, asr #26
    1a1c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1a20:	0ec7410d 	poleqs	f4, f7, #5.0
    1a24:	00000000 	andeq	r0, r0, r0
    1a28:	00000020 	andeq	r0, r0, r0, lsr #32
    1a2c:	00001930 	andeq	r1, r0, r0, lsr r9
    1a30:	08002048 	stmdaeq	r0, {r3, r6, sp}
    1a34:	00000048 	andeq	r0, r0, r8, asr #32
    1a38:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1a3c:	41018e02 	tstmi	r1, r2, lsl #28
    1a40:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1a44:	080e5f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, ip, lr}
    1a48:	000d0d41 	andeq	r0, sp, r1, asr #26
    1a4c:	00000024 	andeq	r0, r0, r4, lsr #32
    1a50:	00001930 	andeq	r1, r0, r0, lsr r9
    1a54:	08002090 	stmdaeq	r0, {r4, r7, sp}
    1a58:	000000a0 	andeq	r0, r0, r0, lsr #1
    1a5c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1a60:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1a64:	280e4101 	stmdacs	lr, {r0, r8, lr}
    1a68:	02070d41 	andeq	r0, r7, #4160	; 0x1040
    1a6c:	410c0e4b 	tstmi	ip, fp, asr #28
    1a70:	00000d0d 	andeq	r0, r0, sp, lsl #26
    1a74:	00000024 	andeq	r0, r0, r4, lsr #32
    1a78:	00001930 	andeq	r1, r0, r0, lsr r9
    1a7c:	08002130 	stmdaeq	r0, {r4, r5, r8, sp}
    1a80:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
    1a84:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1a88:	41018e02 	tstmi	r1, r2, lsl #28
    1a8c:	0c41280e 	mcrreq	8, 0, r2, r1, cr14
    1a90:	d7021807 	strle	r1, [r2, -r7, lsl #16]
    1a94:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
    1a98:	0000000d 	andeq	r0, r0, sp
    1a9c:	00000024 	andeq	r0, r0, r4, lsr #32
    1aa0:	00001930 	andeq	r1, r0, r0, lsr r9
    1aa4:	080022e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sp}
    1aa8:	000000ce 	andeq	r0, r0, lr, asr #1
    1aac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1ab0:	41018e02 	tstmi	r1, r2, lsl #28
    1ab4:	0c41600e 	mcrreq	0, 0, r6, r1, cr14
    1ab8:	62024007 	andvs	r4, r2, #7
    1abc:	0d41080e 	stcleq	8, cr0, [r1, #-56]	; 0xffffffc8
    1ac0:	0000000d 	andeq	r0, r0, sp
    1ac4:	00000024 	andeq	r0, r0, r4, lsr #32
    1ac8:	00001930 	andeq	r1, r0, r0, lsr r9
    1acc:	080023b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, sp}
    1ad0:	000004b4 			; <UNDEFINED> instruction: 0x000004b4
    1ad4:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1ad8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1adc:	780e4101 	stmdavc	lr, {r0, r8, lr}
    1ae0:	68070c41 	stmdavs	r7, {r0, r6, sl, fp}
    1ae4:	0e025103 	adfeqs	f5, f2, f3
    1ae8:	0d0d410c 	stfeqs	f4, [sp, #-48]	; 0xffffffd0
    1aec:	00000024 	andeq	r0, r0, r4, lsr #32
    1af0:	00001930 	andeq	r1, r0, r0, lsr r9
    1af4:	0800286c 	stmdaeq	r0, {r2, r3, r5, r6, fp, sp}
    1af8:	0000080e 	andeq	r0, r0, lr, lsl #16
    1afc:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1b00:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1b04:	700e4101 	andvc	r4, lr, r1, lsl #2
    1b08:	58070c41 	stmdapl	r7, {r0, r6, sl, fp}
    1b0c:	0e040203 	cdpeq	2, 0, cr0, cr4, cr3, {0}
    1b10:	0d0d410c 	stfeqs	f4, [sp, #-48]	; 0xffffffd0
    1b14:	00000038 	andeq	r0, r0, r8, lsr r0
    1b18:	00001930 	andeq	r1, r0, r0, lsr r9
    1b1c:	0800307c 	stmdaeq	r0, {r2, r3, r4, r5, r6, ip, sp}
    1b20:	00000038 	andeq	r0, r0, r8, lsr r0
    1b24:	80100e41 	andshi	r0, r0, r1, asr #28
    1b28:	82038104 	andhi	r8, r3, #4, 2
    1b2c:	41018302 	tstmi	r1, r2, lsl #6
    1b30:	0687180e 	streq	r1, [r7], lr, lsl #16
    1b34:	0e41058e 	cdpeq	5, 4, cr0, cr1, cr14, {4}
    1b38:	070c4130 	smladxeq	ip, r0, r1, r4
    1b3c:	180e5028 	stmdane	lr, {r3, r5, ip, lr}
    1b40:	420d0d41 	andmi	r0, sp, #4160	; 0x1040
    1b44:	100ec7ce 	andne	ip, lr, lr, asr #15
    1b48:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    1b4c:	00000ec0 	andeq	r0, r0, r0, asr #29
    1b50:	00000034 	andeq	r0, r0, r4, lsr r0
    1b54:	00001930 	andeq	r1, r0, r0, lsr r9
    1b58:	00000000 	andeq	r0, r0, r0
    1b5c:	00000038 	andeq	r0, r0, r8, lsr r0
    1b60:	810c0e41 	tsthi	ip, r1, asr #28
    1b64:	83028203 	movwhi	r8, #8707	; 0x2203
    1b68:	140e4101 	strne	r4, [lr], #-257	; 0xfffffeff
    1b6c:	048e0587 	streq	r0, [lr], #1415	; 0x587
    1b70:	41300e41 	teqmi	r0, r1, asr #28
    1b74:	5128070c 			; <UNDEFINED> instruction: 0x5128070c
    1b78:	0d41140e 	cfstrdeq	mvd1, [r1, #-56]	; 0xffffffc8
    1b7c:	c7ce420d 	strbgt	r4, [lr, sp, lsl #4]
    1b80:	c3410c0e 	movtgt	r0, #7182	; 0x1c0e
    1b84:	000ec1c2 	andeq	ip, lr, r2, asr #3
    1b88:	00000034 	andeq	r0, r0, r4, lsr r0
    1b8c:	00001930 	andeq	r1, r0, r0, lsr r9
    1b90:	00000000 	andeq	r0, r0, r0
    1b94:	00000038 	andeq	r0, r0, r8, lsr r0
    1b98:	82080e41 	andhi	r0, r8, #1040	; 0x410
    1b9c:	41018302 	tstmi	r1, r2, lsl #6
    1ba0:	0487100e 	streq	r1, [r7], #14
    1ba4:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
    1ba8:	070c4128 	streq	r4, [ip, -r8, lsr #2]
    1bac:	100e5120 	andne	r5, lr, r0, lsr #2
    1bb0:	420d0d41 	andmi	r0, sp, #4160	; 0x1040
    1bb4:	080ec7ce 	stmdaeq	lr, {r1, r2, r3, r6, r7, r8, r9, sl, lr, pc}
    1bb8:	0ec2c341 	cdpeq	3, 12, cr12, cr2, cr1, {2}
    1bbc:	00000000 	andeq	r0, r0, r0
    1bc0:	00000020 	andeq	r0, r0, r0, lsr #32
    1bc4:	00001930 	andeq	r1, r0, r0, lsr r9
    1bc8:	00000000 	andeq	r0, r0, r0
    1bcc:	0000002c 	andeq	r0, r0, ip, lsr #32
    1bd0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1bd4:	41018e02 	tstmi	r1, r2, lsl #28
    1bd8:	0c41200e 	mcrreq	0, 0, r2, r1, cr14
    1bdc:	0e4f1807 	cdpeq	8, 4, cr1, cr15, cr7, {0}
    1be0:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1be4:	00000020 	andeq	r0, r0, r0, lsr #32
    1be8:	00001930 	andeq	r1, r0, r0, lsr r9
    1bec:	00000000 	andeq	r0, r0, r0
    1bf0:	0000002c 	andeq	r0, r0, ip, lsr #32
    1bf4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1bf8:	41018e02 	tstmi	r1, r2, lsl #28
    1bfc:	0c41200e 	mcrreq	0, 0, r2, r1, cr14
    1c00:	0e4f1807 	cdpeq	8, 4, cr1, cr15, cr7, {0}
    1c04:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1c08:	00000034 	andeq	r0, r0, r4, lsr r0
    1c0c:	00001930 	andeq	r1, r0, r0, lsr r9
    1c10:	00000000 	andeq	r0, r0, r0
    1c14:	00000044 	andeq	r0, r0, r4, asr #32
    1c18:	82080e41 	andhi	r0, r8, #1040	; 0x410
    1c1c:	41018302 	tstmi	r1, r2, lsl #6
    1c20:	0487100e 	streq	r1, [r7], #14
    1c24:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
    1c28:	070c4130 	smladxeq	ip, r0, r1, r4
    1c2c:	100e5728 	andne	r5, lr, r8, lsr #14
    1c30:	420d0d41 	andmi	r0, sp, #4160	; 0x1040
    1c34:	080ec7ce 	stmdaeq	lr, {r1, r2, r3, r6, r7, r8, r9, sl, lr, pc}
    1c38:	0ec2c341 	cdpeq	3, 12, cr12, cr2, cr1, {2}
    1c3c:	00000000 	andeq	r0, r0, r0
    1c40:	0000000c 	andeq	r0, r0, ip
    1c44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1c48:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c4c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c50:	00000020 	andeq	r0, r0, r0, lsr #32
    1c54:	00001c40 	andeq	r1, r0, r0, asr #24
    1c58:	080030b4 	stmdaeq	r0, {r2, r4, r5, r7, ip, sp}
    1c5c:	0000001a 	andeq	r0, r0, sl, lsl r0
    1c60:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1c64:	41018e02 	tstmi	r1, r2, lsl #28
    1c68:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1c6c:	080e4807 	stmdaeq	lr, {r0, r1, r2, fp, lr}
    1c70:	000d0d41 	andeq	r0, sp, r1, asr #26
    1c74:	00000018 	andeq	r0, r0, r8, lsl r0
    1c78:	00001c40 	andeq	r1, r0, r0, asr #24
    1c7c:	00000000 	andeq	r0, r0, r0
    1c80:	00000010 	andeq	r0, r0, r0, lsl r0
    1c84:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1c88:	41018e02 	tstmi	r1, r2, lsl #28
    1c8c:	0000070d 	andeq	r0, r0, sp, lsl #14
    1c90:	00000020 	andeq	r0, r0, r0, lsr #32
    1c94:	00001c40 	andeq	r1, r0, r0, asr #24
    1c98:	00000000 	andeq	r0, r0, r0
    1c9c:	00000024 	andeq	r0, r0, r4, lsr #32
    1ca0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1ca4:	41018e02 	tstmi	r1, r2, lsl #28
    1ca8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1cac:	080e4d07 	stmdaeq	lr, {r0, r1, r2, r8, sl, fp, lr}
    1cb0:	000d0d41 	andeq	r0, sp, r1, asr #26
    1cb4:	00000020 	andeq	r0, r0, r0, lsr #32
    1cb8:	00001c40 	andeq	r1, r0, r0, asr #24
    1cbc:	00000000 	andeq	r0, r0, r0
    1cc0:	0000001a 	andeq	r0, r0, sl, lsl r0
    1cc4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1cc8:	41018e02 	tstmi	r1, r2, lsl #28
    1ccc:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1cd0:	080e4807 	stmdaeq	lr, {r0, r1, r2, fp, lr}
    1cd4:	000d0d41 	andeq	r0, sp, r1, asr #26
    1cd8:	00000020 	andeq	r0, r0, r0, lsr #32
    1cdc:	00001c40 	andeq	r1, r0, r0, asr #24
    1ce0:	00000000 	andeq	r0, r0, r0
    1ce4:	00000028 	andeq	r0, r0, r8, lsr #32
    1ce8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1cec:	41018e02 	tstmi	r1, r2, lsl #28
    1cf0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1cf4:	080e4f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, lr}
    1cf8:	000d0d41 	andeq	r0, sp, r1, asr #26
    1cfc:	00000024 	andeq	r0, r0, r4, lsr #32
    1d00:	00001c40 	andeq	r1, r0, r0, asr #24
    1d04:	00000000 	andeq	r0, r0, r0
    1d08:	0000002c 	andeq	r0, r0, ip, lsr #32
    1d0c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1d10:	180e4101 	stmdane	lr, {r0, r8, lr}
    1d14:	50070d41 	andpl	r0, r7, r1, asr #26
    1d18:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1d1c:	0ec7410d 	poleqs	f4, f7, #5.0
    1d20:	00000000 	andeq	r0, r0, r0
    1d24:	00000024 	andeq	r0, r0, r4, lsr #32
    1d28:	00001c40 	andeq	r1, r0, r0, asr #24
    1d2c:	00000000 	andeq	r0, r0, r0
    1d30:	00000030 	andeq	r0, r0, r0, lsr r0
    1d34:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1d38:	180e4101 	stmdane	lr, {r0, r8, lr}
    1d3c:	52070d41 	andpl	r0, r7, #4160	; 0x1040
    1d40:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1d44:	0ec7410d 	poleqs	f4, f7, #5.0
    1d48:	00000000 	andeq	r0, r0, r0
    1d4c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1d50:	00001c40 	andeq	r1, r0, r0, asr #24
    1d54:	00000000 	andeq	r0, r0, r0
    1d58:	00000254 	andeq	r0, r0, r4, asr r2
    1d5c:	80100e41 	andshi	r0, r0, r1, asr #28
    1d60:	82038104 	andhi	r8, r3, #4, 2
    1d64:	41018302 	tstmi	r1, r2, lsl #6
    1d68:	07841c0e 	streq	r1, [r4, lr, lsl #24]
    1d6c:	058e0687 	streq	r0, [lr, #1671]	; 0x687
    1d70:	41400e41 	cmpmi	r0, r1, asr #28
    1d74:	1e03070d 	cdpne	7, 0, cr0, cr3, cr13, {0}
    1d78:	411c0e01 	tstmi	ip, r1, lsl #28
    1d7c:	ce420d0d 	cdpgt	13, 4, cr0, cr2, cr13, {0}
    1d80:	100ec4c7 	andne	ip, lr, r7, asr #9
    1d84:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    1d88:	00000ec0 	andeq	r0, r0, r0, asr #29
    1d8c:	0000000c 	andeq	r0, r0, ip
    1d90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1d94:	7c020001 	stcvc	0, cr0, [r2], {1}
    1d98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1d9c:	00000024 	andeq	r0, r0, r4, lsr #32
    1da0:	00001d8c 	andeq	r1, r0, ip, lsl #27
    1da4:	080030d0 	stmdaeq	r0, {r4, r6, r7, ip, sp}
    1da8:	00000054 	andeq	r0, r0, r4, asr r0
    1dac:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1db0:	100e4101 	andne	r4, lr, r1, lsl #2
    1db4:	5f070d41 	svcpl	0x00070d41
    1db8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1dbc:	0ec7410d 	poleqs	f4, f7, #5.0
    1dc0:	00000000 	andeq	r0, r0, r0
    1dc4:	00000024 	andeq	r0, r0, r4, lsr #32
    1dc8:	00001d8c 	andeq	r1, r0, ip, lsl #27
    1dcc:	08003124 	stmdaeq	r0, {r2, r5, r8, ip, sp}
    1dd0:	0000001e 	andeq	r0, r0, lr, lsl r0
    1dd4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1dd8:	100e4101 	andne	r4, lr, r1, lsl #2
    1ddc:	49070d41 	stmdbmi	r7, {r0, r6, r8, sl, fp}
    1de0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1de4:	0ec7410d 	poleqs	f4, f7, #5.0
    1de8:	00000000 	andeq	r0, r0, r0
    1dec:	00000024 	andeq	r0, r0, r4, lsr #32
    1df0:	00001d8c 	andeq	r1, r0, ip, lsl #27
    1df4:	08003142 	stmdaeq	r0, {r1, r6, r8, ip, sp}
    1df8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dfc:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1e00:	180e4101 	stmdane	lr, {r0, r8, lr}
    1e04:	48070d41 	stmdami	r7, {r0, r6, r8, sl, fp}
    1e08:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1e0c:	0ec7410d 	poleqs	f4, f7, #5.0
    1e10:	00000000 	andeq	r0, r0, r0
    1e14:	00000020 	andeq	r0, r0, r0, lsr #32
    1e18:	00001d8c 	andeq	r1, r0, ip, lsl #27
    1e1c:	08003160 	stmdaeq	r0, {r5, r6, r8, ip, sp}
    1e20:	00000034 	andeq	r0, r0, r4, lsr r0
    1e24:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1e28:	41018e02 	tstmi	r1, r2, lsl #28
    1e2c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1e30:	080e5207 	stmdaeq	lr, {r0, r1, r2, r9, ip, lr}
    1e34:	000d0d41 	andeq	r0, sp, r1, asr #26
    1e38:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e3c:	00001d8c 	andeq	r1, r0, ip, lsl #27
    1e40:	08003194 	stmdaeq	r0, {r2, r4, r7, r8, ip, sp}
    1e44:	0000001c 	andeq	r0, r0, ip, lsl r0
    1e48:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1e4c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    1e50:	410d0d48 	tstmi	sp, r8, asr #26
    1e54:	00000ec7 	andeq	r0, r0, r7, asr #29
    1e58:	0000000c 	andeq	r0, r0, ip
    1e5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1e60:	7c020001 	stcvc	0, cr0, [r2], {1}
    1e64:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1e68:	00000024 	andeq	r0, r0, r4, lsr #32
    1e6c:	00001e58 	andeq	r1, r0, r8, asr lr
    1e70:	080031b0 	stmdaeq	r0, {r4, r5, r7, r8, ip, sp}
    1e74:	00000054 	andeq	r0, r0, r4, asr r0
    1e78:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    1e7c:	100e4101 	andne	r4, lr, r1, lsl #2
    1e80:	5f070d41 	svcpl	0x00070d41
    1e84:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    1e88:	0ec7410d 	poleqs	f4, f7, #5.0
    1e8c:	00000000 	andeq	r0, r0, r0
    1e90:	00000020 	andeq	r0, r0, r0, lsr #32
    1e94:	00001e58 	andeq	r1, r0, r8, asr lr
    1e98:	08003204 	stmdaeq	r0, {r2, r9, ip, sp}
    1e9c:	00000044 	andeq	r0, r0, r4, asr #32
    1ea0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1ea4:	41018e02 	tstmi	r1, r2, lsl #28
    1ea8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1eac:	080e5a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, ip, lr}
    1eb0:	000d0d41 	andeq	r0, sp, r1, asr #26
    1eb4:	00000020 	andeq	r0, r0, r0, lsr #32
    1eb8:	00001e58 	andeq	r1, r0, r8, asr lr
    1ebc:	08003248 	stmdaeq	r0, {r3, r6, r9, ip, sp}
    1ec0:	00000134 	andeq	r0, r0, r4, lsr r1
    1ec4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1ec8:	41018e02 	tstmi	r1, r2, lsl #28
    1ecc:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    1ed0:	0e910207 	cdpeq	2, 9, cr0, cr1, cr7, {0}
    1ed4:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    1ed8:	00000020 	andeq	r0, r0, r0, lsr #32
    1edc:	00001e58 	andeq	r1, r0, r8, asr lr
    1ee0:	0800337c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, ip, sp}
    1ee4:	0000003c 	andeq	r0, r0, ip, lsr r0
    1ee8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1eec:	41018e02 	tstmi	r1, r2, lsl #28
    1ef0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1ef4:	080e5407 	stmdaeq	lr, {r0, r1, r2, sl, ip, lr}
    1ef8:	000d0d41 	andeq	r0, sp, r1, asr #26
    1efc:	00000020 	andeq	r0, r0, r0, lsr #32
    1f00:	00001e58 	andeq	r1, r0, r8, asr lr
    1f04:	080033b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, ip, sp}
    1f08:	00000050 	andeq	r0, r0, r0, asr r0
    1f0c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1f10:	41018e02 	tstmi	r1, r2, lsl #28
    1f14:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1f18:	080e5d07 	stmdaeq	lr, {r0, r1, r2, r8, sl, fp, ip, lr}
    1f1c:	000d0d41 	andeq	r0, sp, r1, asr #26
    1f20:	00000020 	andeq	r0, r0, r0, lsr #32
    1f24:	00001e58 	andeq	r1, r0, r8, asr lr
    1f28:	08003408 	stmdaeq	r0, {r3, sl, ip, sp}
    1f2c:	00000034 	andeq	r0, r0, r4, lsr r0
    1f30:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1f34:	41018e02 	tstmi	r1, r2, lsl #28
    1f38:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1f3c:	080e5207 	stmdaeq	lr, {r0, r1, r2, r9, ip, lr}
    1f40:	000d0d41 	andeq	r0, sp, r1, asr #26
    1f44:	00000020 	andeq	r0, r0, r0, lsr #32
    1f48:	00001e58 	andeq	r1, r0, r8, asr lr
    1f4c:	0800343c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip, sp}
    1f50:	00000040 	andeq	r0, r0, r0, asr #32
    1f54:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1f58:	41018e02 	tstmi	r1, r2, lsl #28
    1f5c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1f60:	080e5807 	stmdaeq	lr, {r0, r1, r2, fp, ip, lr}
    1f64:	000d0d41 	andeq	r0, sp, r1, asr #26
    1f68:	00000020 	andeq	r0, r0, r0, lsr #32
    1f6c:	00001e58 	andeq	r1, r0, r8, asr lr
    1f70:	0800347c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, ip, sp}
    1f74:	00000040 	andeq	r0, r0, r0, asr #32
    1f78:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1f7c:	41018e02 	tstmi	r1, r2, lsl #28
    1f80:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1f84:	080e5707 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, ip, lr}
    1f88:	000d0d41 	andeq	r0, sp, r1, asr #26
    1f8c:	00000020 	andeq	r0, r0, r0, lsr #32
    1f90:	00001e58 	andeq	r1, r0, r8, asr lr
    1f94:	080034bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip, sp}
    1f98:	0000005c 	andeq	r0, r0, ip, asr r0
    1f9c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1fa0:	41018e02 	tstmi	r1, r2, lsl #28
    1fa4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1fa8:	080e6507 	stmdaeq	lr, {r0, r1, r2, r8, sl, sp, lr}
    1fac:	000d0d41 	andeq	r0, sp, r1, asr #26
    1fb0:	00000020 	andeq	r0, r0, r0, lsr #32
    1fb4:	00001e58 	andeq	r1, r0, r8, asr lr
    1fb8:	08003518 	stmdaeq	r0, {r3, r4, r8, sl, ip, sp}
    1fbc:	00000050 	andeq	r0, r0, r0, asr r0
    1fc0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1fc4:	41018e02 	tstmi	r1, r2, lsl #28
    1fc8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    1fcc:	080e5c07 	stmdaeq	lr, {r0, r1, r2, sl, fp, ip, lr}
    1fd0:	000d0d41 	andeq	r0, sp, r1, asr #26
    1fd4:	00000018 	andeq	r0, r0, r8, lsl r0
    1fd8:	00001e58 	andeq	r1, r0, r8, asr lr
    1fdc:	08003568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip, sp}
    1fe0:	00000014 	andeq	r0, r0, r4, lsl r0
    1fe4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    1fe8:	41018e02 	tstmi	r1, r2, lsl #28
    1fec:	0000070d 	andeq	r0, r0, sp, lsl #14
    1ff0:	00000020 	andeq	r0, r0, r0, lsr #32
    1ff4:	00001e58 	andeq	r1, r0, r8, asr lr
    1ff8:	0800357c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip, sp}
    1ffc:	00000034 	andeq	r0, r0, r4, lsr r0
    2000:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2004:	41018e02 	tstmi	r1, r2, lsl #28
    2008:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    200c:	080e5307 	stmdaeq	lr, {r0, r1, r2, r8, r9, ip, lr}
    2010:	000d0d41 	andeq	r0, sp, r1, asr #26
    2014:	00000020 	andeq	r0, r0, r0, lsr #32
    2018:	00001e58 	andeq	r1, r0, r8, asr lr
    201c:	080035b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip, sp}
    2020:	0000002c 	andeq	r0, r0, ip, lsr #32
    2024:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2028:	41018e02 	tstmi	r1, r2, lsl #28
    202c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    2030:	080e4f07 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, fp, lr}
    2034:	000d0d41 	andeq	r0, sp, r1, asr #26
    2038:	00000020 	andeq	r0, r0, r0, lsr #32
    203c:	00001e58 	andeq	r1, r0, r8, asr lr
    2040:	080035dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, ip, sp}
    2044:	000000d4 	ldrdeq	r0, [r0], -r4
    2048:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    204c:	41018e02 	tstmi	r1, r2, lsl #28
    2050:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    2054:	0e5e0207 	cdpeq	2, 5, cr0, cr14, cr7, {0}
    2058:	0d0d4108 	stfeqs	f4, [sp, #-32]	; 0xffffffe0
    205c:	00000020 	andeq	r0, r0, r0, lsr #32
    2060:	00001e58 	andeq	r1, r0, r8, asr lr
    2064:	080036b0 	stmdaeq	r0, {r4, r5, r7, r9, sl, ip, sp}
    2068:	0000003c 	andeq	r0, r0, ip, lsr r0
    206c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2070:	41018e02 	tstmi	r1, r2, lsl #28
    2074:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    2078:	080e5607 	stmdaeq	lr, {r0, r1, r2, r9, sl, ip, lr}
    207c:	000d0d41 	andeq	r0, sp, r1, asr #26
    2080:	00000018 	andeq	r0, r0, r8, lsl r0
    2084:	00001e58 	andeq	r1, r0, r8, asr lr
    2088:	080036ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, ip, sp}
    208c:	0000002c 	andeq	r0, r0, ip, lsr #32
    2090:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2094:	41018e02 	tstmi	r1, r2, lsl #28
    2098:	0000070d 	andeq	r0, r0, sp, lsl #14
    209c:	00000020 	andeq	r0, r0, r0, lsr #32
    20a0:	00001e58 	andeq	r1, r0, r8, asr lr
    20a4:	08003718 	stmdaeq	r0, {r3, r4, r8, r9, sl, ip, sp}
    20a8:	00000026 	andeq	r0, r0, r6, lsr #32
    20ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    20b0:	41018e02 	tstmi	r1, r2, lsl #28
    20b4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    20b8:	080e4e07 	stmdaeq	lr, {r0, r1, r2, r9, sl, fp, lr}
    20bc:	000d0d41 	andeq	r0, sp, r1, asr #26
    20c0:	0000001c 	andeq	r0, r0, ip, lsl r0
    20c4:	00001e58 	andeq	r1, r0, r8, asr lr
    20c8:	08003740 	stmdaeq	r0, {r6, r8, r9, sl, ip, sp}
    20cc:	000000e8 	andeq	r0, r0, r8, ror #1
    20d0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    20d4:	41018e02 	tstmi	r1, r2, lsl #28
    20d8:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
    20dc:	00000007 	andeq	r0, r0, r7
    20e0:	0000001c 	andeq	r0, r0, ip, lsl r0
    20e4:	00001e58 	andeq	r1, r0, r8, asr lr
    20e8:	08003828 	stmdaeq	r0, {r3, r5, fp, ip, sp}
    20ec:	0000005c 	andeq	r0, r0, ip, asr r0
    20f0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    20f4:	41018e02 	tstmi	r1, r2, lsl #28
    20f8:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    20fc:	00000007 	andeq	r0, r0, r7
    2100:	0000001c 	andeq	r0, r0, ip, lsl r0
    2104:	00001e58 	andeq	r1, r0, r8, asr lr
    2108:	08003884 	stmdaeq	r0, {r2, r7, fp, ip, sp}
    210c:	0000005c 	andeq	r0, r0, ip, asr r0
    2110:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2114:	41018e02 	tstmi	r1, r2, lsl #28
    2118:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    211c:	00000007 	andeq	r0, r0, r7
    2120:	00000018 	andeq	r0, r0, r8, lsl r0
    2124:	00001e58 	andeq	r1, r0, r8, asr lr
    2128:	080038e0 	stmdaeq	r0, {r5, r6, r7, fp, ip, sp}
    212c:	0000000a 	andeq	r0, r0, sl
    2130:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2134:	100e4101 	andne	r4, lr, r1, lsl #2
    2138:	00070d41 	andeq	r0, r7, r1, asr #26
    213c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2140:	00001e58 	andeq	r1, r0, r8, asr lr
    2144:	080038ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip, sp}
    2148:	000000a4 	andeq	r0, r0, r4, lsr #1
    214c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2150:	41018e02 	tstmi	r1, r2, lsl #28
    2154:	0c41100e 	mcrreq	0, 0, r1, r1, cr14
    2158:	00000807 	andeq	r0, r0, r7, lsl #16
    215c:	0000000c 	andeq	r0, r0, ip
    2160:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2164:	7c020001 	stcvc	0, cr0, [r2], {1}
    2168:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    216c:	00000024 	andeq	r0, r0, r4, lsr #32
    2170:	0000215c 	andeq	r2, r0, ip, asr r1
    2174:	08003990 	stmdaeq	r0, {r4, r7, r8, fp, ip, sp}
    2178:	00000018 	andeq	r0, r0, r8, lsl r0
    217c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2180:	100e4101 	andne	r4, lr, r1, lsl #2
    2184:	46070d41 	strmi	r0, [r7], -r1, asr #26
    2188:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    218c:	0ec7410d 	poleqs	f4, f7, #5.0
    2190:	00000000 	andeq	r0, r0, r0
    2194:	0000001c 	andeq	r0, r0, ip, lsl r0
    2198:	0000215c 	andeq	r2, r0, ip, asr r1
    219c:	080039a8 	stmdaeq	r0, {r3, r5, r7, r8, fp, ip, sp}
    21a0:	0000000e 	andeq	r0, r0, lr
    21a4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    21a8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    21ac:	410d0d43 	tstmi	sp, r3, asr #26
    21b0:	00000ec7 	andeq	r0, r0, r7, asr #29
    21b4:	00000024 	andeq	r0, r0, r4, lsr #32
    21b8:	0000215c 	andeq	r2, r0, ip, asr r1
    21bc:	080039b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, fp, ip, sp}
    21c0:	00000026 	andeq	r0, r0, r6, lsr #32
    21c4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    21c8:	100e4101 	andne	r4, lr, r1, lsl #2
    21cc:	4d070d41 	stcmi	13, cr0, [r7, #-260]	; 0xfffffefc
    21d0:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    21d4:	0ec7410d 	poleqs	f4, f7, #5.0
    21d8:	00000000 	andeq	r0, r0, r0
    21dc:	00000024 	andeq	r0, r0, r4, lsr #32
    21e0:	0000215c 	andeq	r2, r0, ip, asr r1
    21e4:	080039dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, ip, sp}
    21e8:	00000028 	andeq	r0, r0, r8, lsr #32
    21ec:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    21f0:	100e4101 	andne	r4, lr, r1, lsl #2
    21f4:	4e070d41 	cdpmi	13, 0, cr0, cr7, cr1, {2}
    21f8:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    21fc:	0ec7410d 	poleqs	f4, f7, #5.0
    2200:	00000000 	andeq	r0, r0, r0
    2204:	00000020 	andeq	r0, r0, r0, lsr #32
    2208:	0000215c 	andeq	r2, r0, ip, asr r1
    220c:	08003a04 	stmdaeq	r0, {r2, r9, fp, ip, sp}
    2210:	00000084 	andeq	r0, r0, r4, lsl #1
    2214:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2218:	41018e02 	tstmi	r1, r2, lsl #28
    221c:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    2220:	080e7a07 	stmdaeq	lr, {r0, r1, r2, r9, fp, ip, sp, lr}
    2224:	000d0d41 	andeq	r0, sp, r1, asr #26
    2228:	0000000c 	andeq	r0, r0, ip
    222c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2230:	7c020001 	stcvc	0, cr0, [r2], {1}
    2234:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2238:	00000024 	andeq	r0, r0, r4, lsr #32
    223c:	00002228 	andeq	r2, r0, r8, lsr #4
    2240:	08003a88 	stmdaeq	r0, {r3, r7, r9, fp, ip, sp}
    2244:	0000001e 	andeq	r0, r0, lr, lsl r0
    2248:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    224c:	100e4101 	andne	r4, lr, r1, lsl #2
    2250:	49070d41 	stmdbmi	r7, {r0, r6, r8, sl, fp}
    2254:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2258:	0ec7410d 	poleqs	f4, f7, #5.0
    225c:	00000000 	andeq	r0, r0, r0
    2260:	00000024 	andeq	r0, r0, r4, lsr #32
    2264:	00002228 	andeq	r2, r0, r8, lsr #4
    2268:	08003aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp, ip, sp}
    226c:	00000024 	andeq	r0, r0, r4, lsr #32
    2270:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2274:	100e4101 	andne	r4, lr, r1, lsl #2
    2278:	4c070d41 	stcmi	13, cr0, [r7], {65}	; 0x41
    227c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2280:	0ec7410d 	poleqs	f4, f7, #5.0
    2284:	00000000 	andeq	r0, r0, r0
    2288:	00000024 	andeq	r0, r0, r4, lsr #32
    228c:	00002228 	andeq	r2, r0, r8, lsr #4
    2290:	08003aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp, ip, sp}
    2294:	00000016 	andeq	r0, r0, r6, lsl r0
    2298:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    229c:	100e4101 	andne	r4, lr, r1, lsl #2
    22a0:	45070d41 	strmi	r0, [r7, #-3393]	; 0xfffff2bf
    22a4:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    22a8:	0ec7410d 	poleqs	f4, f7, #5.0
    22ac:	00000000 	andeq	r0, r0, r0
    22b0:	00000024 	andeq	r0, r0, r4, lsr #32
    22b4:	00002228 	andeq	r2, r0, r8, lsr #4
    22b8:	08003ae0 	stmdaeq	r0, {r5, r6, r7, r9, fp, ip, sp}
    22bc:	00000026 	andeq	r0, r0, r6, lsr #32
    22c0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    22c4:	180e4101 	stmdane	lr, {r0, r8, lr}
    22c8:	4d070d41 	stcmi	13, cr0, [r7, #-260]	; 0xfffffefc
    22cc:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    22d0:	0ec7410d 	poleqs	f4, f7, #5.0
    22d4:	00000000 	andeq	r0, r0, r0
    22d8:	00000024 	andeq	r0, r0, r4, lsr #32
    22dc:	00002228 	andeq	r2, r0, r8, lsr #4
    22e0:	00000000 	andeq	r0, r0, r0
    22e4:	00000026 	andeq	r0, r0, r6, lsr #32
    22e8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    22ec:	180e4101 	stmdane	lr, {r0, r8, lr}
    22f0:	4d070d41 	stcmi	13, cr0, [r7, #-260]	; 0xfffffefc
    22f4:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    22f8:	0ec7410d 	poleqs	f4, f7, #5.0
    22fc:	00000000 	andeq	r0, r0, r0
    2300:	00000024 	andeq	r0, r0, r4, lsr #32
    2304:	00002228 	andeq	r2, r0, r8, lsr #4
    2308:	00000000 	andeq	r0, r0, r0
    230c:	00000026 	andeq	r0, r0, r6, lsr #32
    2310:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2314:	100e4101 	andne	r4, lr, r1, lsl #2
    2318:	4d070d41 	stcmi	13, cr0, [r7, #-260]	; 0xfffffefc
    231c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2320:	0ec7410d 	poleqs	f4, f7, #5.0
    2324:	00000000 	andeq	r0, r0, r0
    2328:	00000024 	andeq	r0, r0, r4, lsr #32
    232c:	00002228 	andeq	r2, r0, r8, lsr #4
    2330:	00000000 	andeq	r0, r0, r0
    2334:	00000026 	andeq	r0, r0, r6, lsr #32
    2338:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    233c:	100e4101 	andne	r4, lr, r1, lsl #2
    2340:	4d070d41 	stcmi	13, cr0, [r7, #-260]	; 0xfffffefc
    2344:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2348:	0ec7410d 	poleqs	f4, f7, #5.0
    234c:	00000000 	andeq	r0, r0, r0
    2350:	00000024 	andeq	r0, r0, r4, lsr #32
    2354:	00002228 	andeq	r2, r0, r8, lsr #4
    2358:	00000000 	andeq	r0, r0, r0
    235c:	00000054 	andeq	r0, r0, r4, asr r0
    2360:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2364:	200e4101 	andcs	r4, lr, r1, lsl #2
    2368:	64070d41 	strvs	r0, [r7], #-3393	; 0xfffff2bf
    236c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2370:	0ec7410d 	poleqs	f4, f7, #5.0
    2374:	00000000 	andeq	r0, r0, r0
    2378:	00000024 	andeq	r0, r0, r4, lsr #32
    237c:	00002228 	andeq	r2, r0, r8, lsr #4
    2380:	00000000 	andeq	r0, r0, r0
    2384:	0000003e 	andeq	r0, r0, lr, lsr r0
    2388:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    238c:	100e4101 	andne	r4, lr, r1, lsl #2
    2390:	59070d41 	stmdbpl	r7, {r0, r6, r8, sl, fp}
    2394:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2398:	0ec7410d 	poleqs	f4, f7, #5.0
    239c:	00000000 	andeq	r0, r0, r0
    23a0:	00000024 	andeq	r0, r0, r4, lsr #32
    23a4:	00002228 	andeq	r2, r0, r8, lsr #4
    23a8:	08003b06 	stmdaeq	r0, {r1, r2, r8, r9, fp, ip, sp}
    23ac:	0000003a 	andeq	r0, r0, sl, lsr r0
    23b0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    23b4:	100e4101 	andne	r4, lr, r1, lsl #2
    23b8:	57070d41 	strpl	r0, [r7, -r1, asr #26]
    23bc:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    23c0:	0ec7410d 	poleqs	f4, f7, #5.0
    23c4:	00000000 	andeq	r0, r0, r0
    23c8:	00000024 	andeq	r0, r0, r4, lsr #32
    23cc:	00002228 	andeq	r2, r0, r8, lsr #4
    23d0:	08003b40 	stmdaeq	r0, {r6, r8, r9, fp, ip, sp}
    23d4:	00000040 	andeq	r0, r0, r0, asr #32
    23d8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    23dc:	180e4101 	stmdane	lr, {r0, r8, lr}
    23e0:	5a070d41 	bpl	1c58ec <_Min_Stack_Size+0x1c54ec>
    23e4:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    23e8:	0ec7410d 	poleqs	f4, f7, #5.0
    23ec:	00000000 	andeq	r0, r0, r0
    23f0:	00000024 	andeq	r0, r0, r4, lsr #32
    23f4:	00002228 	andeq	r2, r0, r8, lsr #4
    23f8:	00000000 	andeq	r0, r0, r0
    23fc:	0000003e 	andeq	r0, r0, lr, lsr r0
    2400:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2404:	180e4101 	stmdane	lr, {r0, r8, lr}
    2408:	59070d41 	stmdbpl	r7, {r0, r6, r8, sl, fp}
    240c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2410:	0ec7410d 	poleqs	f4, f7, #5.0
    2414:	00000000 	andeq	r0, r0, r0
    2418:	00000024 	andeq	r0, r0, r4, lsr #32
    241c:	00002228 	andeq	r2, r0, r8, lsr #4
    2420:	08003b80 	stmdaeq	r0, {r7, r8, r9, fp, ip, sp}
    2424:	00000032 	andeq	r0, r0, r2, lsr r0
    2428:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    242c:	100e4101 	andne	r4, lr, r1, lsl #2
    2430:	53070d41 	movwpl	r0, #32065	; 0x7d41
    2434:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2438:	0ec7410d 	poleqs	f4, f7, #5.0
    243c:	00000000 	andeq	r0, r0, r0
    2440:	0000000c 	andeq	r0, r0, ip
    2444:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2448:	7c020001 	stcvc	0, cr0, [r2], {1}
    244c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2450:	00000024 	andeq	r0, r0, r4, lsr #32
    2454:	00002440 	andeq	r2, r0, r0, asr #8
    2458:	00000000 	andeq	r0, r0, r0
    245c:	00000014 	andeq	r0, r0, r4, lsl r0
    2460:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2464:	100e4101 	andne	r4, lr, r1, lsl #2
    2468:	44070d41 	strmi	r0, [r7], #-3393	; 0xfffff2bf
    246c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2470:	0ec7410d 	poleqs	f4, f7, #5.0
    2474:	00000000 	andeq	r0, r0, r0
    2478:	00000024 	andeq	r0, r0, r4, lsr #32
    247c:	00002440 	andeq	r2, r0, r0, asr #8
    2480:	08003bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp, ip, sp}
    2484:	000000b8 	strheq	r0, [r0], -r8
    2488:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    248c:	200e4101 	andcs	r4, lr, r1, lsl #2
    2490:	02070d41 	andeq	r0, r7, #4160	; 0x1040
    2494:	41040e4e 	tstmi	r4, lr, asr #28
    2498:	c7410d0d 	strbgt	r0, [r1, -sp, lsl #26]
    249c:	0000000e 	andeq	r0, r0, lr
    24a0:	00000024 	andeq	r0, r0, r4, lsr #32
    24a4:	00002440 	andeq	r2, r0, r0, asr #8
    24a8:	00000000 	andeq	r0, r0, r0
    24ac:	00000060 	andeq	r0, r0, r0, rrx
    24b0:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    24b4:	180e4101 	stmdane	lr, {r0, r8, lr}
    24b8:	5f070d41 	svcpl	0x00070d41
    24bc:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    24c0:	0ec7410d 	poleqs	f4, f7, #5.0
    24c4:	00000000 	andeq	r0, r0, r0
    24c8:	00000014 	andeq	r0, r0, r4, lsl r0
    24cc:	00002440 	andeq	r2, r0, r0, asr #8
    24d0:	00000000 	andeq	r0, r0, r0
    24d4:	00000008 	andeq	r0, r0, r8
    24d8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    24dc:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    24e0:	00000018 	andeq	r0, r0, r8, lsl r0
    24e4:	00002440 	andeq	r2, r0, r0, asr #8
    24e8:	00000000 	andeq	r0, r0, r0
    24ec:	0000000c 	andeq	r0, r0, ip
    24f0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    24f4:	41018e02 	tstmi	r1, r2, lsl #28
    24f8:	0000070d 	andeq	r0, r0, sp, lsl #14
    24fc:	0000000c 	andeq	r0, r0, ip
    2500:	00002440 	andeq	r2, r0, r0, asr #8
    2504:	08003c6c 	stmdaeq	r0, {r2, r3, r5, r6, sl, fp, ip, sp}
    2508:	00000070 	andeq	r0, r0, r0, ror r0
    250c:	0000000c 	andeq	r0, r0, ip
    2510:	00002440 	andeq	r2, r0, r0, asr #8
    2514:	00000000 	andeq	r0, r0, r0
    2518:	00000070 	andeq	r0, r0, r0, ror r0
    251c:	0000000c 	andeq	r0, r0, ip
    2520:	00002440 	andeq	r2, r0, r0, asr #8
    2524:	08003ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip, sp}
    2528:	00000070 	andeq	r0, r0, r0, ror r0
    252c:	0000000c 	andeq	r0, r0, ip
    2530:	00002440 	andeq	r2, r0, r0, asr #8
    2534:	08003d5c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, fp, ip, sp}
    2538:	00000070 	andeq	r0, r0, r0, ror r0
    253c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2540:	00002440 	andeq	r2, r0, r0, asr #8
    2544:	00000000 	andeq	r0, r0, r0
    2548:	0000007a 	andeq	r0, r0, sl, ror r0
    254c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2550:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    2554:	410d0d79 	tstmi	sp, r9, ror sp
    2558:	00000ec7 	andeq	r0, r0, r7, asr #29
    255c:	0000000c 	andeq	r0, r0, ip
    2560:	00002440 	andeq	r2, r0, r0, asr #8
    2564:	00000000 	andeq	r0, r0, r0
    2568:	00000070 	andeq	r0, r0, r0, ror r0
    256c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2570:	00002440 	andeq	r2, r0, r0, asr #8
    2574:	00000000 	andeq	r0, r0, r0
    2578:	0000001c 	andeq	r0, r0, ip, lsl r0
    257c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2580:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    2584:	410d0d45 	tstmi	sp, r5, asr #26
    2588:	00000ec7 	andeq	r0, r0, r7, asr #29
    258c:	00000018 	andeq	r0, r0, r8, lsl r0
    2590:	00002440 	andeq	r2, r0, r0, asr #8
    2594:	00000000 	andeq	r0, r0, r0
    2598:	00000012 	andeq	r0, r0, r2, lsl r0
    259c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    25a0:	41018e02 	tstmi	r1, r2, lsl #28
    25a4:	0000070d 	andeq	r0, r0, sp, lsl #14
    25a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    25ac:	00002440 	andeq	r2, r0, r0, asr #8
    25b0:	00000000 	andeq	r0, r0, r0
    25b4:	0000004c 	andeq	r0, r0, ip, asr #32
    25b8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    25bc:	41018e02 	tstmi	r1, r2, lsl #28
    25c0:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
    25c4:	00000007 	andeq	r0, r0, r7
    25c8:	0000000c 	andeq	r0, r0, ip
    25cc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    25d0:	7c020001 	stcvc	0, cr0, [r2], {1}
    25d4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    25d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    25dc:	000025c8 	andeq	r2, r0, r8, asr #11
    25e0:	00000000 	andeq	r0, r0, r0
    25e4:	00000030 	andeq	r0, r0, r0, lsr r0
    25e8:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    25ec:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    25f0:	410d0d52 	tstmi	sp, r2, asr sp
    25f4:	00000ec7 	andeq	r0, r0, r7, asr #29
    25f8:	00000024 	andeq	r0, r0, r4, lsr #32
    25fc:	000025c8 	andeq	r2, r0, r8, asr #11
    2600:	00000000 	andeq	r0, r0, r0
    2604:	00000098 	muleq	r0, r8, r0
    2608:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    260c:	87038504 	strhi	r8, [r3, -r4, lsl #10]
    2610:	41018e02 	tstmi	r1, r2, lsl #28
    2614:	0d41280e 	stcleq	8, cr2, [r1, #-56]	; 0xffffffc8
    2618:	0e440207 	cdpeq	2, 4, cr0, cr4, cr7, {0}
    261c:	0d0d4110 	stfeqs	f4, [sp, #-64]	; 0xffffffc0
    2620:	00000024 	andeq	r0, r0, r4, lsr #32
    2624:	000025c8 	andeq	r2, r0, r8, asr #11
    2628:	00000000 	andeq	r0, r0, r0
    262c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2630:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2634:	100e4101 	andne	r4, lr, r1, lsl #2
    2638:	46070d41 	strmi	r0, [r7], -r1, asr #26
    263c:	0d41040e 	cfstrdeq	mvd0, [r1, #-56]	; 0xffffffc8
    2640:	0ec7410d 	poleqs	f4, f7, #5.0
    2644:	00000000 	andeq	r0, r0, r0
    2648:	0000001c 	andeq	r0, r0, ip, lsl r0
    264c:	000025c8 	andeq	r2, r0, r8, asr #11
    2650:	00000000 	andeq	r0, r0, r0
    2654:	00000014 	andeq	r0, r0, r4, lsl r0
    2658:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    265c:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    2660:	410d0d44 	tstmi	sp, r4, asr #26
    2664:	00000ec7 	andeq	r0, r0, r7, asr #29
    2668:	00000020 	andeq	r0, r0, r0, lsr #32
    266c:	000025c8 	andeq	r2, r0, r8, asr #11
    2670:	00000000 	andeq	r0, r0, r0
    2674:	0000001a 	andeq	r0, r0, sl, lsl r0
    2678:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    267c:	41018e02 	tstmi	r1, r2, lsl #28
    2680:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    2684:	080e4807 	stmdaeq	lr, {r0, r1, r2, fp, lr}
    2688:	000d0d41 	andeq	r0, sp, r1, asr #26
    268c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2690:	000025c8 	andeq	r2, r0, r8, asr #11
    2694:	00000000 	andeq	r0, r0, r0
    2698:	0000000c 	andeq	r0, r0, ip
    269c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    26a0:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    26a4:	410d0d42 	tstmi	sp, r2, asr #26
    26a8:	00000ec7 	andeq	r0, r0, r7, asr #29
    26ac:	00000024 	andeq	r0, r0, r4, lsr #32
    26b0:	000025c8 	andeq	r2, r0, r8, asr #11
    26b4:	00000000 	andeq	r0, r0, r0
    26b8:	00000030 	andeq	r0, r0, r0, lsr r0
    26bc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    26c0:	41018702 	tstmi	r1, r2, lsl #14
    26c4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    26c8:	080e4b07 	stmdaeq	lr, {r0, r1, r2, r8, r9, fp, lr}
    26cc:	410d0d41 	tstmi	sp, r1, asr #26
    26d0:	000ec4c7 	andeq	ip, lr, r7, asr #9
    26d4:	0000001c 	andeq	r0, r0, ip, lsl r0
    26d8:	000025c8 	andeq	r2, r0, r8, asr #11
    26dc:	00000000 	andeq	r0, r0, r0
    26e0:	00000018 	andeq	r0, r0, r8, lsl r0
    26e4:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    26e8:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    26ec:	410d0d48 	tstmi	sp, r8, asr #26
    26f0:	00000ec7 	andeq	r0, r0, r7, asr #29
    26f4:	00000014 	andeq	r0, r0, r4, lsl r0
    26f8:	000025c8 	andeq	r2, r0, r8, asr #11
    26fc:	00000000 	andeq	r0, r0, r0
    2700:	00000006 	andeq	r0, r0, r6
    2704:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2708:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    270c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2710:	000025c8 	andeq	r2, r0, r8, asr #11
    2714:	00000000 	andeq	r0, r0, r0
    2718:	00000018 	andeq	r0, r0, r8, lsl r0
    271c:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2720:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    2724:	410d0d45 	tstmi	sp, r5, asr #26
    2728:	00000ec7 	andeq	r0, r0, r7, asr #29
    272c:	00000020 	andeq	r0, r0, r0, lsr #32
    2730:	000025c8 	andeq	r2, r0, r8, asr #11
    2734:	00000000 	andeq	r0, r0, r0
    2738:	00000018 	andeq	r0, r0, r8, lsl r0
    273c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2740:	41018e02 	tstmi	r1, r2, lsl #28
    2744:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    2748:	080e4707 	stmdaeq	lr, {r0, r1, r2, r8, r9, sl, lr}
    274c:	000d0d41 	andeq	r0, sp, r1, asr #26
    2750:	0000000c 	andeq	r0, r0, ip
    2754:	000025c8 	andeq	r2, r0, r8, asr #11
    2758:	00000000 	andeq	r0, r0, r0
    275c:	00000008 	andeq	r0, r0, r8
    2760:	00000020 	andeq	r0, r0, r0, lsr #32
    2764:	000025c8 	andeq	r2, r0, r8, asr #11
    2768:	00000000 	andeq	r0, r0, r0
    276c:	0000006e 	andeq	r0, r0, lr, rrx
    2770:	87080e41 	strhi	r0, [r8, -r1, asr #28]
    2774:	41018e02 	tstmi	r1, r2, lsl #28
    2778:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
    277c:	080e7207 	stmdaeq	lr, {r0, r1, r2, r9, ip, sp, lr}
    2780:	000d0d41 	andeq	r0, sp, r1, asr #26
    2784:	00000014 	andeq	r0, r0, r4, lsl r0
    2788:	000025c8 	andeq	r2, r0, r8, asr #11
    278c:	08003dd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, fp, ip, sp}
    2790:	00000006 	andeq	r0, r0, r6
    2794:	87040e41 	strhi	r0, [r4, -r1, asr #28]
    2798:	070d4101 	streq	r4, [sp, -r1, lsl #2]
    279c:	0000000c 	andeq	r0, r0, ip
    27a0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    27a4:	7c020001 	stcvc	0, cr0, [r2], {1}
    27a8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    27ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    27b0:	0000279c 	muleq	r0, ip, r7
    27b4:	08000210 	stmdaeq	r0, {r4, r9}
    27b8:	00000282 	andeq	r0, r0, r2, lsl #5
    27bc:	0c0e470a 	stceq	7, cr4, [lr], {10}
    27c0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    27c4:	3a03018e 	bcc	c2e04 <_Min_Stack_Size+0xc2a04>
    27c8:	00000b01 	andeq	r0, r0, r1, lsl #22
    27cc:	00000018 	andeq	r0, r0, r8, lsl r0
    27d0:	0000279c 	muleq	r0, ip, r7
    27d4:	08000494 	stmdaeq	r0, {r2, r4, r7, sl}
    27d8:	0000001e 	andeq	r0, r0, lr, lsl r0
    27dc:	0c0e460a 	stceq	6, cr4, [lr], {10}
    27e0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    27e4:	0b49018e 	bleq	1242e24 <_Min_Stack_Size+0x1242a24>
    27e8:	00000018 	andeq	r0, r0, r8, lsl r0
    27ec:	0000279c 	muleq	r0, ip, r7
    27f0:	080004b4 	stmdaeq	r0, {r2, r4, r5, r7, sl}
    27f4:	00000022 	andeq	r0, r0, r2, lsr #32
    27f8:	0c0e460a 	stceq	6, cr4, [lr], {10}
    27fc:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    2800:	0b4b018e 	bleq	12c2e40 <_Min_Stack_Size+0x12c2a40>
    2804:	00000018 	andeq	r0, r0, r8, lsl r0
    2808:	0000279c 	muleq	r0, ip, r7
    280c:	080004d8 	stmdaeq	r0, {r3, r4, r6, r7, sl}
    2810:	00000042 	andeq	r0, r0, r2, asr #32
    2814:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    2818:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    281c:	0b47018e 	bleq	11c2e5c <_Min_Stack_Size+0x11c2a5c>
    2820:	00000024 	andeq	r0, r0, r4, lsr #32
    2824:	0000279c 	muleq	r0, ip, r7
    2828:	0800051c 	stmdaeq	r0, {r2, r3, r4, r8, sl}
    282c:	0000006a 	andeq	r0, r0, sl, rrx
    2830:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    2834:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    2838:	43018e02 	movwmi	r8, #7682	; 0x1e02
    283c:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    2840:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    2844:	0b68018e 	bleq	1a02e84 <_Min_Stack_Size+0x1a02a84>
    2848:	0000000c 	andeq	r0, r0, ip
    284c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2850:	7c020001 	stcvc	0, cr0, [r2], {1}
    2854:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2858:	0000001c 	andeq	r0, r0, ip, lsl r0
    285c:	00002848 	andeq	r2, r0, r8, asr #16
    2860:	08000588 	stmdaeq	r0, {r3, r7, r8, sl}
    2864:	00000254 	andeq	r0, r0, r4, asr r2
    2868:	100e410a 	andne	r4, lr, sl, lsl #2
    286c:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    2870:	018e0286 	orreq	r0, lr, r6, lsl #5
    2874:	0b012903 	bleq	4cc88 <_Min_Stack_Size+0x4c888>
    2878:	0000001c 	andeq	r0, r0, ip, lsl r0
    287c:	00002848 	andeq	r2, r0, r8, asr #16
    2880:	080007dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl}
    2884:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2888:	100e410a 	andne	r4, lr, sl, lsl #2
    288c:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    2890:	018e0286 	orreq	r0, lr, r6, lsl #5
    2894:	000be702 	andeq	lr, fp, r2, lsl #14
    2898:	0000000c 	andeq	r0, r0, ip
    289c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    28a0:	7c020001 	stcvc	0, cr0, [r2], {1}
    28a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    28a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    28ac:	00002898 	muleq	r0, r8, r8
    28b0:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    28b4:	0000008a 	andeq	r0, r0, sl, lsl #1
    28b8:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    28bc:	0e410a4a 	vmlseq.f32	s1, s2, s20
    28c0:	520b5b00 	andpl	r5, fp, #0, 22
    28c4:	0b41000e 	bleq	1042904 <_Min_Stack_Size+0x1042504>
    28c8:	00000018 	andeq	r0, r0, r8, lsl r0
    28cc:	00002898 	muleq	r0, r8, r8
    28d0:	08000a38 	stmdaeq	r0, {r3, r4, r5, r9, fp}
    28d4:	00000020 	andeq	r0, r0, r0, lsr #32
    28d8:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    28dc:	018e0280 	orreq	r0, lr, r0, lsl #5
    28e0:	00000b47 	andeq	r0, r0, r7, asr #22
    28e4:	00000014 	andeq	r0, r0, r4, lsl r0
    28e8:	00002898 	muleq	r0, r8, r8
    28ec:	08000a58 	stmdaeq	r0, {r3, r4, r6, r9, fp}
    28f0:	00000012 	andeq	r0, r0, r2, lsl r0
    28f4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    28f8:	0b47028e 	bleq	11c3338 <_Min_Stack_Size+0x11c2f38>
    28fc:	00000014 	andeq	r0, r0, r4, lsl r0
    2900:	00002898 	muleq	r0, r8, r8
    2904:	08000a6c 	stmdaeq	r0, {r2, r3, r5, r6, r9, fp}
    2908:	00000012 	andeq	r0, r0, r2, lsl r0
    290c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    2910:	0b47028e 	bleq	11c3350 <_Min_Stack_Size+0x11c2f50>
    2914:	00000014 	andeq	r0, r0, r4, lsl r0
    2918:	00002898 	muleq	r0, r8, r8
    291c:	08000a80 	stmdaeq	r0, {r7, r9, fp}
    2920:	00000012 	andeq	r0, r0, r2, lsl r0
    2924:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    2928:	0b47028e 	bleq	11c3368 <_Min_Stack_Size+0x11c2f68>
    292c:	00000014 	andeq	r0, r0, r4, lsl r0
    2930:	00002898 	muleq	r0, r8, r8
    2934:	08000a94 	stmdaeq	r0, {r2, r4, r7, r9, fp}
    2938:	00000012 	andeq	r0, r0, r2, lsl r0
    293c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    2940:	0b47028e 	bleq	11c3380 <_Min_Stack_Size+0x11c2f80>
    2944:	00000014 	andeq	r0, r0, r4, lsl r0
    2948:	00002898 	muleq	r0, r8, r8
    294c:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
    2950:	00000012 	andeq	r0, r0, r2, lsl r0
    2954:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    2958:	0b47028e 	bleq	11c3398 <_Min_Stack_Size+0x11c2f98>
    295c:	0000000c 	andeq	r0, r0, ip
    2960:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2964:	7c020001 	stcvc	0, cr0, [r2], {1}
    2968:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    296c:	00000010 	andeq	r0, r0, r0, lsl r0
    2970:	0000295c 	andeq	r2, r0, ip, asr r9
    2974:	08000abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp}
    2978:	0000004e 	andeq	r0, r0, lr, asr #32
    297c:	000b670a 	andeq	r6, fp, sl, lsl #14
    2980:	0000000c 	andeq	r0, r0, ip
    2984:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2988:	7c020001 	stcvc	0, cr0, [r2], {1}
    298c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2990:	00000010 	andeq	r0, r0, r0, lsl r0
    2994:	00002980 	andeq	r2, r0, r0, lsl #19
    2998:	08000b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp}
    299c:	00000040 	andeq	r0, r0, r0, asr #32
    29a0:	000b600a 	andeq	r6, fp, sl
    29a4:	0000000c 	andeq	r0, r0, ip
    29a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    29ac:	7c020001 	stcvc	0, cr0, [r2], {1}
    29b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    29b4:	00000018 	andeq	r0, r0, r8, lsl r0
    29b8:	000029a4 	andeq	r2, r0, r4, lsr #19
    29bc:	08000b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp}
    29c0:	00000030 	andeq	r0, r0, r0, lsr r0
    29c4:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    29c8:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    29cc:	00000010 	andeq	r0, r0, r0, lsl r0
    29d0:	0000000c 	andeq	r0, r0, ip
    29d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    29d8:	7c020001 	stcvc	0, cr0, [r2], {1}
    29dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    29e0:	00000020 	andeq	r0, r0, r0, lsr #32
    29e4:	000029d0 	ldrdeq	r2, [r0], -r0
    29e8:	08000b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp}
    29ec:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    29f0:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    29f4:	86078508 	strhi	r8, [r7], -r8, lsl #10
    29f8:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    29fc:	8a038904 	bhi	e4e14 <_Min_Stack_Size+0xe4a14>
    2a00:	00018e02 	andeq	r8, r1, r2, lsl #28
    2a04:	0000000c 	andeq	r0, r0, ip
    2a08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2a0c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2a10:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2a14:	0000000c 	andeq	r0, r0, ip
    2a18:	00002a04 	andeq	r2, r0, r4, lsl #20
    2a1c:	08000e50 	stmdaeq	r0, {r4, r6, r9, sl, fp}
    2a20:	0000000c 	andeq	r0, r0, ip
    2a24:	0000000c 	andeq	r0, r0, ip
    2a28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2a2c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2a30:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2a34:	00000020 	andeq	r0, r0, r0, lsr #32
    2a38:	00002a24 	andeq	r2, r0, r4, lsr #20
    2a3c:	08000e5c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, fp}
    2a40:	00000034 	andeq	r0, r0, r4, lsr r0
    2a44:	83100e41 	tsthi	r0, #1040	; 0x410
    2a48:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2a4c:	52018e02 	andpl	r8, r1, #2, 28
    2a50:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    2a54:	0000000e 	andeq	r0, r0, lr
    2a58:	0000000c 	andeq	r0, r0, ip
    2a5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2a60:	7c020001 	stcvc	0, cr0, [r2], {1}
    2a64:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2a68:	00000024 	andeq	r0, r0, r4, lsr #32
    2a6c:	00002a58 	andeq	r2, r0, r8, asr sl
    2a70:	08000e90 	stmdaeq	r0, {r4, r7, r9, sl, fp}
    2a74:	00000068 	andeq	r0, r0, r8, rrx
    2a78:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2a7c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2a80:	50018702 	andpl	r8, r1, r2, lsl #14
    2a84:	c5c6c70a 	strbgt	ip, [r6, #1802]	; 0x70a
    2a88:	41000ec4 	smlabtmi	r0, r4, lr, r0
    2a8c:	0000000b 	andeq	r0, r0, fp
    2a90:	0000000c 	andeq	r0, r0, ip
    2a94:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2a98:	7c020001 	stcvc	0, cr0, [r2], {1}
    2a9c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2aa0:	0000000c 	andeq	r0, r0, ip
    2aa4:	00002a90 	muleq	r0, r0, sl
    2aa8:	08003e24 	stmdaeq	r0, {r2, r5, r9, sl, fp, ip, sp}
    2aac:	00000014 	andeq	r0, r0, r4, lsl r0
    2ab0:	0000002c 	andeq	r0, r0, ip, lsr #32
    2ab4:	00002a90 	muleq	r0, r0, sl
    2ab8:	00000000 	andeq	r0, r0, r0
    2abc:	0000009c 	muleq	r0, ip, r0
    2ac0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    2ac4:	86088509 	strhi	r8, [r8], -r9, lsl #10
    2ac8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    2acc:	8a048905 	bhi	124ee8 <_Min_Stack_Size+0x124ae8>
    2ad0:	8e028b03 	vmlahi.f64	d8, d2, d3
    2ad4:	300e4201 	andcc	r4, lr, r1, lsl #4
    2ad8:	240e0a5d 	strcs	r0, [lr], #-2653	; 0xfffff5a3
    2adc:	00000b42 	andeq	r0, r0, r2, asr #22

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
      24:	00000054 	andeq	r0, r0, r4, asr r0
      28:	93500006 	cmpls	r0, #6
      2c:	04935104 	ldreq	r5, [r3], #260	; 0x104
  return ret;
      30:	00000054 	andeq	r0, r0, r4, asr r0
}
      34:	000000a8 	andeq	r0, r0, r8, lsr #1
      38:	03f30006 	mvnseq	r0, #6
      3c:	9f2500f5 	svcls	0x002500f5
      40:	000000a8 	andeq	r0, r0, r8, lsr #1
    list->node_count = 0;
      44:	000000c2 	andeq	r0, r0, r2, asr #1
      48:	93500006 	cmpls	r0, #6
}
      4c:	04935104 	ldreq	r5, [r3], #260	; 0x104
      50:	000000c2 	andeq	r0, r0, r2, asr #1
      54:	0000011a 	andeq	r0, r0, sl, lsl r1
      58:	03f30006 	mvnseq	r0, #6
      5c:	9f2500f5 	svcls	0x002500f5
  HARDFAULT_HANDLING_ASM();
      60:	0000011a 	andeq	r0, r0, sl, lsl r1
      64:	0000012a 	andeq	r0, r0, sl, lsr #2
      68:	93500006 	cmpls	r0, #6
      6c:	04935104 	ldreq	r5, [r3], #260	; 0x104
      70:	0000012a 	andeq	r0, r0, sl, lsr #2
}
      74:	00000130 	andeq	r0, r0, r0, lsr r1
      78:	03f30006 	mvnseq	r0, #6
      7c:	9f2500f5 	svcls	0x002500f5
      80:	00000130 	andeq	r0, r0, r0, lsr r1
      84:	00000148 	andeq	r0, r0, r8, asr #2
  trigger_irq();
      88:	93500006 	cmpls	r0, #6
}
      8c:	04935104 	ldreq	r5, [r3], #260	; 0x104
      90:	00000148 	andeq	r0, r0, r8, asr #2
      94:	00000154 	andeq	r0, r0, r4, asr r1
      98:	03f30006 	mvnseq	r0, #6
  if(HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
      9c:	9f2500f5 	svcls	0x002500f5
    Error_Handler();
      a0:	00000154 	andeq	r0, r0, r4, asr r1
}
      a4:	000001a2 	andeq	r0, r0, r2, lsr #3
      a8:	93500006 	cmpls	r0, #6
      ac:	04935104 	ldreq	r5, [r3], #260	; 0x104
      b0:	000001a2 	andeq	r0, r0, r2, lsr #3
      SystemCoreClock = HSI_VALUE;
      b4:	00000214 	andeq	r0, r0, r4, lsl r2
      break;
      b8:	03f30006 	mvnseq	r0, #6
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
      bc:	9f2500f5 	svcls	0x002500f5
      c0:	00000214 	andeq	r0, r0, r4, lsl r2
      c4:	00000218 	andeq	r0, r0, r8, lsl r2
      c8:	93500006 	cmpls	r0, #6
  SystemCoreClock >>= tmp;
      cc:	04935104 	ldreq	r5, [r3], #260	; 0x104
      d0:	00000218 	andeq	r0, r0, r8, lsl r2
      d4:	00000222 	andeq	r0, r0, r2, lsr #4
}
      d8:	03f30006 	mvnseq	r0, #6
      dc:	9f2500f5 	svcls	0x002500f5
      e0:	00000222 	andeq	r0, r0, r2, lsr #4
      e4:	00000230 	andeq	r0, r0, r0, lsr r2
      e8:	93500006 	cmpls	r0, #6
      ec:	04935104 	ldreq	r5, [r3], #260	; 0x104
      f0:	00000230 	andeq	r0, r0, r0, lsr r2
      f4:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
        EXTI->FTSR &= ~((uint32_t)iocurrent);
      f8:	03f30006 	mvnseq	r0, #6
      fc:	9f2500f5 	svcls	0x002500f5
     100:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
        tmp = 0x0FU << (4U * (position & 0x03U));
     104:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
     108:	93500006 	cmpls	r0, #6
     10c:	04935104 	ldreq	r5, [r3], #260	; 0x104
     110:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     114:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     118:	03f30006 	mvnseq	r0, #6
     11c:	9f2500f5 	svcls	0x002500f5
	...
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
     140:	0000001a 	andeq	r0, r0, sl, lsl r0
     144:	93520006 	cmpls	r2, #6
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
     148:	04935304 	ldreq	r5, [r3], #772	; 0x304
     14c:	0000001a 	andeq	r0, r0, sl, lsl r0
     150:	000000a8 	andeq	r0, r0, r8, lsr #1
     154:	03f30006 	mvnseq	r0, #6
     158:	9f2502f5 	svcls	0x002502f5
     15c:	000000a8 	andeq	r0, r0, r8, lsr #1
     160:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     164:	93520006 	cmpls	r2, #6
     168:	04935304 	ldreq	r5, [r3], #772	; 0x304
     16c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     170:	0000011a 	andeq	r0, r0, sl, lsl r1
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
     174:	03f30006 	mvnseq	r0, #6
     178:	9f2502f5 	svcls	0x002502f5
     17c:	0000011a 	andeq	r0, r0, sl, lsl r1
     180:	00000194 	muleq	r0, r4, r1
     184:	93520006 	cmpls	r2, #6
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
     188:	04935304 	ldreq	r5, [r3], #772	; 0x304
     18c:	00000194 	muleq	r0, r4, r1
     190:	00000214 	andeq	r0, r0, r4, lsl r2
     194:	03f30006 	mvnseq	r0, #6
     198:	9f2502f5 	svcls	0x002502f5
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
     19c:	00000214 	andeq	r0, r0, r4, lsl r2
     1a0:	0000021a 	andeq	r0, r0, sl, lsl r2
     1a4:	93520006 	cmpls	r2, #6
     1a8:	04935304 	ldreq	r5, [r3], #772	; 0x304
     1ac:	0000021a 	andeq	r0, r0, sl, lsl r2
     1b0:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
  for(position = 0U; position < GPIO_NUMBER; position++)
     1b4:	03f30006 	mvnseq	r0, #6
     1b8:	9f2502f5 	svcls	0x002502f5
     1bc:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
}
     1c0:	000002be 			; <UNDEFINED> instruction: 0x000002be
     1c4:	93520006 	cmpls	r2, #6
     1c8:	04935304 	ldreq	r5, [r3], #772	; 0x304
     1cc:	000002be 			; <UNDEFINED> instruction: 0x000002be
     1d0:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     1d4:	03f30006 	mvnseq	r0, #6
     1d8:	9f2502f5 	svcls	0x002502f5
	...
     1ec:	000000a8 	andeq	r0, r0, r8, lsr #1
     1f0:	00910002 	addseq	r0, r1, r2
                res += 1;
     1f4:	000000a8 	andeq	r0, r0, r8, lsr #1
     1f8:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
            break;
     1fc:	00910002 	addseq	r0, r1, r2
	...
            res += 1;
     208:	00000008 	andeq	r0, r0, r8
	...
            res += 1;
     224:	001a0000 	andseq	r0, sl, r0
     228:	00010000 	andeq	r0, r1, r0
            break;
     22c:	00001a52 	andeq	r1, r0, r2, asr sl
        str++;
     230:	0000a200 	andeq	sl, r0, r0, lsl #4
    while ('\0' != *str) //str为字符串,它的最后一个字符肯定是'\0'（字符串的结束符）
     234:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     238:	000000a8 	andeq	r0, r0, r8, lsr #1
     23c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
}
     240:	b0520001 	subslt	r0, r2, r1
     244:	1a000000 	bne	24c <_Min_Heap_Size+0x4c>
     248:	01000001 	tsteq	r0, r1
     24c:	011a5500 	tsteq	sl, r0, lsl #10
     250:	01f40000 	mvnseq	r0, r0
            hdma->XferCpltCallback(hdma);
     254:	00010000 	andeq	r0, r1, r0
     258:	00021452 	andeq	r1, r2, r2, asr r4
     25c:	00021a00 	andeq	r1, r2, r0, lsl #20
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
     260:	52000100 	andpl	r0, r0, #0, 2
     264:	0000021a 	andeq	r0, r0, sl, lsl r2
     268:	00000298 	muleq	r0, r8, r2
     26c:	98550001 	ldmdals	r5, {r0}^
          hdma->Instance->CR  &= ~(DMA_IT_TC);
     270:	a4000002 	strge	r0, [r0], #-2
     274:	01000002 	tsteq	r0, r2
     278:	02aa5200 	adceq	r5, sl, #0, 4
     27c:	02ae0000 	adceq	r0, lr, #0
          __HAL_UNLOCK(hdma);
     280:	00010000 	andeq	r0, r1, r0
     284:	0002ae55 	andeq	sl, r2, r5, asr lr
          hdma->State = HAL_DMA_STATE_READY;
     288:	0002b200 	andeq	fp, r2, r0, lsl #4
     28c:	52000100 	andpl	r0, r0, #0, 2
        if(hdma->XferCpltCallback != NULL)
     290:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     294:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
          hdma->XferCpltCallback(hdma);
     298:	b6550001 	ldrblt	r0, [r5], -r1
     29c:	be000002 	cdplt	0, 0, cr0, cr0, cr2, {0}
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
     2a0:	01000002 	tsteq	r0, r2
     2a4:	02be5200 	adcseq	r5, lr, #0, 4
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
     2a8:	02cc0000 	sbceq	r0, ip, #0
     2ac:	00010000 	andeq	r0, r1, r0
     2b0:	00000055 	andeq	r0, r0, r5, asr r0
      hdma->State = HAL_DMA_STATE_ABORT;
     2b4:	00000000 	andeq	r0, r0, r0
     2b8:	00000900 	andeq	r0, r0, r0, lsl #18
	...
        if (++count > timeout)
     2d4:	00002400 	andeq	r2, r0, r0, lsl #8
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
     2d8:	53000100 	movwpl	r0, #256	; 0x100
     2dc:	000000a8 	andeq	r0, r0, r8, lsr #1
     2e0:	000000c2 	andeq	r0, r0, r2, asr #1
     2e4:	1a530001 	bne	14c02f0 <_Min_Stack_Size+0x14bfef0>
      __HAL_UNLOCK(hdma);
     2e8:	46000001 	strmi	r0, [r0], -r1
     2ec:	01000001 	tsteq	r0, r1
      hdma->State = HAL_DMA_STATE_READY;
     2f0:	01545300 	cmpeq	r4, r0, lsl #6
     2f4:	015c0000 	cmpeq	ip, r0
    if(hdma->XferErrorCallback != NULL)
     2f8:	00010000 	andeq	r0, r1, r0
     2fc:	00016453 	andeq	r6, r1, r3, asr r4
      hdma->XferErrorCallback(hdma);
     300:	00021400 	andeq	r1, r2, r0, lsl #8
     304:	5c000100 	stfpls	f0, [r0], {-0}
     308:	00000214 	andeq	r0, r0, r4, lsl r2
}
     30c:	0000021a 	andeq	r0, r0, sl, lsl r2
     310:	22530001 	subscs	r0, r3, #1
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
     314:	26000002 	strcs	r0, [r0], -r2
     318:	01000002 	tsteq	r0, r2
     31c:	02985300 	addseq	r5, r8, #0, 6
    UART_Transmit_IT(huart);
     320:	02aa0000 	adceq	r0, sl, #0
    return;
     324:	00010000 	andeq	r0, r1, r0
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
     328:	0002ae5c 	andeq	sl, r2, ip, asr lr
     32c:	0002b200 	andeq	fp, r2, r0, lsl #4
     330:	5c000100 	stfpls	f0, [r0], {-0}
     334:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
     338:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
    UART_EndTransmit_IT(huart);
     33c:	ba5c0001 	blt	1700348 <_Min_Stack_Size+0x16fff48>
    return;
     340:	be000002 	cdplt	0, 0, cr0, cr0, cr2, {0}
    return;
     344:	01000002 	tsteq	r0, r2
      return;
     348:	02cc5300 	sbceq	r5, ip, #0, 6
      return;
     34c:	02d00000 	sbcseq	r0, r0, #0
}
     350:	00010000 	andeq	r0, r1, r0
     354:	0000005c 	andeq	r0, r0, ip, asr r0
	...
      tickstart = HAL_GetTick();
     360:	00000200 	andeq	r0, r0, r0, lsl #4
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     364:	01000000 	mrseq	r0, (UNDEF: 0)
	...
      __HAL_RCC_PWR_CLK_DISABLE();
     390:	00000800 	andeq	r0, r0, r0, lsl #16
     394:	00003000 	andeq	r3, r0, r0
     398:	50000100 	andpl	r0, r0, r0, lsl #2
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     39c:	00000030 	andeq	r0, r0, r0, lsr r0
     3a0:	00000066 	andeq	r0, r0, r6, rrx
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     3a4:	96540001 	ldrbls	r0, [r4], -r1
     3a8:	9c000000 	stcls	0, cr0, [r0], {-0}
     3ac:	01000000 	mrseq	r0, (UNDEF: 0)
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     3b0:	00a85400 	adceq	r5, r8, r0, lsl #8
     3b4:	00c20000 	sbceq	r0, r2, r0
        __HAL_RCC_PLL_DISABLE();
     3b8:	00010000 	andeq	r0, r1, r0
     3bc:	0000c250 	andeq	ip, r0, r0, asr r2
        tickstart = HAL_GetTick();
     3c0:	0000f400 	andeq	pc, r0, r0, lsl #8
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3c4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3c8:	00000118 	andeq	r0, r0, r8, lsl r1
     3cc:	0000011a 	andeq	r0, r0, sl, lsl r1
     3d0:	1a540001 	bne	15003dc <_Min_Stack_Size+0x14fffdc>
            return HAL_TIMEOUT;
     3d4:	2a000001 	bcs	3e0 <_Min_Heap_Size+0x1e0>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     3d8:	01000001 	tsteq	r0, r1
     3dc:	012a5000 			; <UNDEFINED> instruction: 0x012a5000
     3e0:	01300000 	teqeq	r0, r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     3e4:	00010000 	andeq	r0, r1, r0
     3e8:	00013054 	andeq	r3, r1, r4, asr r0
     3ec:	00014800 	andeq	r4, r1, r0, lsl #16
     3f0:	50000100 	andpl	r0, r0, r0, lsl #2
     3f4:	0000014a 	andeq	r0, r0, sl, asr #2
     3f8:	00000154 	andeq	r0, r0, r4, asr r1
     3fc:	54540001 	ldrbpl	r0, [r4], #-1
     400:	98000001 	stmdals	r0, {r0}
     404:	01000001 	tsteq	r0, r1
     408:	01985000 	orrseq	r5, r8, r0
     40c:	02000000 	andeq	r0, r0, #0
        __HAL_RCC_PLL_ENABLE();
     410:	00010000 	andeq	r0, r1, r0
        tickstart = HAL_GetTick();
     414:	00020051 	andeq	r0, r2, r1, asr r0
     418:	00021400 	andeq	r1, r2, r0, lsl #8
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     41c:	52000100 	andpl	r0, r0, #0, 2
     420:	00000214 	andeq	r0, r0, r4, lsl r2
     424:	00000218 	andeq	r0, r0, r8, lsl r2
     428:	18500001 	ldmdane	r0, {r0}^
            return HAL_TIMEOUT;
     42c:	1a000002 	bne	43c <_Min_Stack_Size+0x3c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     430:	01000002 	tsteq	r0, r2
     434:	021e5400 	andseq	r5, lr, #0, 8
     438:	02220000 	eoreq	r0, r2, #0
        __HAL_RCC_PLL_DISABLE();
     43c:	00010000 	andeq	r0, r1, r0
     440:	00022254 	andeq	r2, r2, r4, asr r2
        tickstart = HAL_GetTick();
     444:	00023000 	andeq	r3, r2, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     448:	50000100 	andpl	r0, r0, r0, lsl #2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     44c:	00000230 	andeq	r0, r0, r0, lsr r2
     450:	00000298 	muleq	r0, r8, r2
     454:	98540001 	ldmdals	r4, {r0}^
            return HAL_TIMEOUT;
     458:	aa000002 	bge	468 <_Min_Stack_Size+0x68>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	01000002 	tsteq	r0, r2
     460:	02aa5100 	adceq	r5, sl, #0, 2
     464:	02ae0000 	adceq	r0, lr, #0
     468:	00010000 	andeq	r0, r1, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     46c:	0002ae54 	andeq	sl, r2, r4, asr lr
     470:	0002b200 	andeq	fp, r2, r0, lsl #4
        return HAL_ERROR;
     474:	51000100 	mrspl	r0, (UNDEF: 16)
        pll_config = RCC->PLLCFGR;
     478:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     47c:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
     480:	b6540001 	ldrblt	r0, [r4], -r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     484:	ba000002 	blt	494 <_Min_Stack_Size+0x94>
     488:	01000002 	tsteq	r0, r2
     48c:	02ba5100 	adcseq	r5, sl, #0, 2
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     490:	02bc0000 	adcseq	r0, ip, #0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     494:	00010000 	andeq	r0, r1, r0
     498:	0002bc50 	andeq	fp, r2, r0, asr ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     49c:	0002c600 	andeq	ip, r2, r0, lsl #12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4a0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     4a4:	000002cc 	andeq	r0, r0, ip, asr #5
     4a8:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     4ac:	00510001 	subseq	r0, r1, r1
	...
     4c4:	02000000 	andeq	r0, r0, #0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4c8:	00000200 	andeq	r0, r0, r0, lsl #4
     4cc:	00000000 	andeq	r0, r0, r0
     4d0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
}
     4dc:	00000a00 	andeq	r0, r0, r0, lsl #20
     4e0:	00002e00 	andeq	r2, r0, r0, lsl #28
     4e4:	51000100 	mrspl	r0, (UNDEF: 16)
     4e8:	0000002e 	andeq	r0, r0, lr, lsr #32
     4ec:	00000042 	andeq	r0, r0, r2, asr #32
     4f0:	a8580001 	ldmdage	r8, {r0}^
     4f4:	cc000000 	stcgt	0, cr0, [r0], {-0}
     4f8:	01000000 	mrseq	r0, (UNDEF: 0)
     4fc:	011a5100 	tsteq	sl, r0, lsl #2
     500:	012c0000 			; <UNDEFINED> instruction: 0x012c0000
     504:	00010000 	andeq	r0, r1, r0
     508:	00012c51 	andeq	r2, r1, r1, asr ip
     50c:	00013000 	andeq	r3, r1, r0
     510:	58000100 	stmdapl	r0, {r8}
     514:	00000130 	andeq	r0, r0, r0, lsr r1
     518:	0000014a 	andeq	r0, r0, sl, asr #2
     51c:	4a510001 	bmi	1440528 <_Min_Stack_Size+0x1440128>
     520:	54000001 	strpl	r0, [r0], #-1
     524:	01000001 	tsteq	r0, r1
     528:	01545800 	cmpeq	r4, r0, lsl #16
     52c:	017e0000 	cmneq	lr, r0
     530:	00010000 	andeq	r0, r1, r0
     534:	00019451 	andeq	r9, r1, r1, asr r4
     538:	0001b800 	andeq	fp, r1, r0, lsl #16
     53c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     540:	000001e6 	andeq	r0, r0, r6, ror #3
     544:	0000020a 	andeq	r0, r0, sl, lsl #4
     548:	14540001 	ldrbne	r0, [r4], #-1
     54c:	1a000002 	bne	55c <_Min_Stack_Size+0x15c>
     550:	01000002 	tsteq	r0, r2
     554:	02225100 	eoreq	r5, r2, #0, 2
     558:	023a0000 	eorseq	r0, sl, #0
     55c:	00010000 	andeq	r0, r1, r0
     560:	00023a51 	andeq	r3, r2, r1, asr sl
     564:	00027000 	andeq	r7, r2, r0
     568:	50000100 	andpl	r0, r0, r0, lsl #2
     56c:	00000292 	muleq	r0, r2, r2
     570:	00000298 	muleq	r0, r8, r2
     574:	98510001 	ldmdals	r1, {r0}^
     578:	aa000002 	bge	588 <_Min_Stack_Size+0x188>
     57c:	01000002 	tsteq	r0, r2
     580:	02b25400 	adcseq	r5, r2, #0, 8
     584:	02b60000 	adcseq	r0, r6, #0
     588:	00010000 	andeq	r0, r1, r0
     58c:	0002b650 	andeq	fp, r2, r0, asr r6
     590:	0002ba00 	andeq	fp, r2, r0, lsl #20
     594:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     598:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
     59c:	000002be 			; <UNDEFINED> instruction: 0x000002be
     5a0:	cc510001 	mrrcgt	0, 0, r0, r1, cr1
     5a4:	d0000002 	andle	r0, r0, r2
     5a8:	01000002 	tsteq	r0, r2
     5ac:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     5b8:	00000234 	andeq	r0, r0, r4, lsr r2
     5bc:	00000248 	andeq	r0, r0, r8, asr #4
     5c0:	00530001 	subseq	r0, r3, r1
     5c4:	00000000 	andeq	r0, r0, r0
     5c8:	01000000 	mrseq	r0, (UNDEF: 0)
     5cc:	01000000 	mrseq	r0, (UNDEF: 0)
     5d0:	01000100 	mrseq	r0, (UNDEF: 16)
     5d4:	00000000 	andeq	r0, r0, r0
     5d8:	96000000 	strls	r0, [r0], -r0
     5dc:	a2000000 	andge	r0, r0, #0
     5e0:	01000000 	mrseq	r0, (UNDEF: 0)
     5e4:	01185000 	tsteq	r8, r0
     5e8:	011a0000 	tsteq	sl, r0
     5ec:	00010000 	andeq	r0, r1, r0
     5f0:	00011e50 	andeq	r1, r1, r0, asr lr
     5f4:	00012a00 	andeq	r2, r1, r0, lsl #20
     5f8:	30000200 	andcc	r0, r0, r0, lsl #4
     5fc:	0001409f 	muleq	r1, pc, r0	; <UNPREDICTABLE>
     600:	00014a00 	andeq	r4, r1, r0, lsl #20
     604:	31000200 	mrscc	r0, R8_usr
     608:	0001e69f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
     60c:	00021400 	andeq	r1, r2, r0, lsl #8
     610:	50000100 	andpl	r0, r0, r0, lsl #2
     614:	00000214 	andeq	r0, r0, r4, lsl r2
     618:	0000021a 	andeq	r0, r0, sl, lsl r2
     61c:	9f300002 	svcls	0x00300002
     620:	00000298 	muleq	r0, r8, r2
     624:	000002aa 	andeq	r0, r0, sl, lsr #5
     628:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     62c:	d0000002 	andle	r0, r0, r2
     630:	01000002 	tsteq	r0, r2
     634:	00005000 	andeq	r5, r0, r0
     638:	00000000 	andeq	r0, r0, r0
     63c:	00040000 	andeq	r0, r4, r0
     640:	00020001 	andeq	r0, r2, r1
     644:	00010001 	andeq	r0, r1, r1
     648:	00000001 	andeq	r0, r0, r1
     64c:	00960000 	addseq	r0, r6, r0
     650:	00980000 	addseq	r0, r8, r0
     654:	00020000 	andeq	r0, r2, r0
     658:	00b89f30 	adcseq	r9, r8, r0, lsr pc
     65c:	00c20000 	sbceq	r0, r2, r0
     660:	00020000 	andeq	r0, r2, r0
     664:	011e9f31 	tsteq	lr, r1, lsr pc
     668:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
     66c:	00020000 	andeq	r0, r2, r0
     670:	014a9f30 	cmpeq	sl, r0, lsr pc
     674:	01540000 	cmpeq	r4, r0
     678:	00020000 	andeq	r0, r2, r0
     67c:	01f49f30 	mvnseq	r9, r0, lsr pc
     680:	021a0000 	andseq	r0, sl, #0
     684:	00020000 	andeq	r0, r2, r0
     688:	02929f30 	addseq	r9, r2, #48, 30	; 0xc0
     68c:	02960000 	addseq	r0, r6, #0
     690:	00080000 	andeq	r0, r8, r0
     694:	24400077 	strbcs	r0, [r0], #-119	; 0xffffff89
     698:	9f210070 	svcls	0x00210070
     69c:	00000296 	muleq	r0, r6, r2
     6a0:	00000298 	muleq	r0, r8, r2
     6a4:	cc570001 	mrrcgt	0, 0, r0, r7, cr1
     6a8:	d0000002 	andle	r0, r0, r2
     6ac:	02000002 	andeq	r0, r0, #2
     6b0:	009f3000 	addseq	r3, pc, r0
	...
     6c4:	5a000000 	bpl	6cc <_Min_Stack_Size+0x2cc>
     6c8:	04000001 	streq	r0, [r0], #-1
     6cc:	01000002 	tsteq	r0, r2
     6d0:	02045500 	andeq	r5, r4, #0, 10
     6d4:	02120000 	andseq	r0, r2, #0
     6d8:	00060000 	andeq	r0, r6, r0
     6dc:	00772008 	rsbseq	r2, r7, r8
     6e0:	02989f1c 	addseq	r9, r8, #28, 30	; 0x70
     6e4:	02aa0000 	adceq	r0, sl, #0
     6e8:	00010000 	andeq	r0, r1, r0
     6ec:	0002ae55 	andeq	sl, r2, r5, asr lr
     6f0:	0002b200 	andeq	fp, r2, r0, lsl #4
     6f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
     6f8:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
     6fc:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
     700:	cc550001 	mrrcgt	0, 0, r0, r5, cr1
     704:	d0000002 	andle	r0, r0, r2
     708:	01000002 	tsteq	r0, r2
     70c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
     72c:	001a0000 	andseq	r0, sl, r0
     730:	00a20000 	adceq	r0, r2, r0
     734:	00010000 	andeq	r0, r1, r0
     738:	0000b052 	andeq	fp, r0, r2, asr r0
     73c:	00011a00 	andeq	r1, r1, r0, lsl #20
     740:	52000100 	andpl	r0, r0, #0, 2
     744:	00000134 	andeq	r0, r0, r4, lsr r1
     748:	00000154 	andeq	r0, r0, r4, asr r1
     74c:	56570001 	ldrbpl	r0, [r7], -r1
     750:	12000001 	andne	r0, r0, #1
     754:	01000002 	tsteq	r0, r2
     758:	021a5700 	andseq	r5, sl, #0, 14
     75c:	02980000 	addseq	r0, r8, #0
     760:	00010000 	andeq	r0, r1, r0
     764:	00029852 	andeq	r9, r2, r2, asr r8
     768:	0002aa00 	andeq	sl, r2, r0, lsl #20
     76c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
     770:	000002aa 	andeq	r0, r0, sl, lsr #5
     774:	000002ae 	andeq	r0, r0, lr, lsr #5
     778:	ae520001 	cdpge	0, 5, cr0, cr2, cr1, {0}
     77c:	b2000002 	andlt	r0, r0, #2
     780:	01000002 	tsteq	r0, r2
     784:	02b25700 	adcseq	r5, r2, #0, 14
     788:	02b60000 	adcseq	r0, r6, #0
     78c:	00010000 	andeq	r0, r1, r0
     790:	0002b652 	andeq	fp, r2, r2, asr r6
     794:	0002be00 	andeq	fp, r2, r0, lsl #28
     798:	57000100 	strpl	r0, [r0, -r0, lsl #2]
     79c:	000002be 			; <UNDEFINED> instruction: 0x000002be
     7a0:	000002cc 	andeq	r0, r0, ip, asr #5
     7a4:	cc520001 	mrrcgt	0, 0, r0, r2, cr1
     7a8:	ce000002 	cdpgt	0, 0, cr0, cr0, cr2, {0}
     7ac:	01000002 	tsteq	r0, r2
     7b0:	00005700 	andeq	r5, r0, r0, lsl #14
	...
     7bc:	00340000 	eorseq	r0, r4, r0
     7c0:	00980000 	addseq	r0, r8, r0
     7c4:	00010000 	andeq	r0, r1, r0
     7c8:	00021a5e 	andeq	r1, r2, lr, asr sl
     7cc:	00022200 	andeq	r2, r2, r0, lsl #4
     7d0:	5e000100 	adfpls	f0, f0, f0
	...
     7e4:	0000003e 	andeq	r0, r0, lr, lsr r0
     7e8:	00000076 	andeq	r0, r0, r6, ror r0
     7ec:	765c0001 	ldrbvc	r0, [ip], -r1
     7f0:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     7f4:	07000000 	streq	r0, [r0, -r0]
     7f8:	0a007500 	beq	1dc00 <_Min_Stack_Size+0x1d800>
     7fc:	9f1affff 	svcls	0x001affff
     800:	0000021a 	andeq	r0, r0, sl, lsl r2
     804:	0000021e 	andeq	r0, r0, lr, lsl r2
     808:	00750007 	rsbseq	r0, r5, r7
     80c:	1affff0a 	bne	43c <_Min_Stack_Size+0x3c>
     810:	00021e9f 	muleq	r2, pc, lr	; <UNPREDICTABLE>
     814:	00022200 	andeq	r2, r2, r0, lsl #4
     818:	5c000100 	stfpls	f0, [r0], {-0}
	...
     824:	00000002 	andeq	r0, r0, r2
     828:	00000000 	andeq	r0, r0, r0
     82c:	003e0000 	eorseq	r0, lr, r0
     830:	00540000 	subseq	r0, r4, r0
     834:	00010000 	andeq	r0, r1, r0
     838:	00005457 	andeq	r5, r0, r7, asr r4
     83c:	00006000 	andeq	r6, r0, r0
     840:	50000100 	andpl	r0, r0, r0, lsl #2
     844:	00000060 	andeq	r0, r0, r0, rrx
     848:	00000098 	muleq	r0, r8, r0
     84c:	1a570001 	bne	15c0858 <_Min_Stack_Size+0x15c0458>
     850:	1e000002 	cdpne	0, 0, cr0, cr0, cr2, {0}
     854:	01000002 	tsteq	r0, r2
     858:	021e5700 	andseq	r5, lr, #0, 14
     85c:	02220000 	eoreq	r0, r2, #0
     860:	00010000 	andeq	r0, r1, r0
     864:	00000050 	andeq	r0, r0, r0, asr r0
	...
     874:	00006a00 	andeq	r6, r0, r0, lsl #20
     878:	00008000 	andeq	r8, r0, r0
     87c:	50000100 	andpl	r0, r0, r0, lsl #2
     880:	00000080 	andeq	r0, r0, r0, lsl #1
     884:	0000008c 	andeq	r0, r0, ip, lsl #1
     888:	8c530001 	mrrchi	0, 0, r0, r3, cr1
     88c:	92000000 	andls	r0, r0, #0
     890:	01000000 	mrseq	r0, (UNDEF: 0)
     894:	021a5000 	andseq	r5, sl, #0
     898:	021e0000 	andseq	r0, lr, #0
     89c:	00010000 	andeq	r0, r1, r0
     8a0:	00000053 	andeq	r0, r0, r3, asr r0
     8a4:	00000000 	andeq	r0, r0, r0
     8a8:	01000100 	mrseq	r0, (UNDEF: 16)
     8ac:	00000000 	andeq	r0, r0, r0
     8b0:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     8b4:	42000000 	andmi	r0, r0, #0
     8b8:	06000000 	streq	r0, [r0], -r0
     8bc:	7e007800 	cdpvc	8, 0, cr7, cr0, cr0, {0}
     8c0:	4a9f1d00 	bmi	fe7c7cc8 <__StackLimit+0xde7a7cc8>
     8c4:	50000000 	andpl	r0, r0, r0
     8c8:	01000000 	mrseq	r0, (UNDEF: 0)
     8cc:	00505300 	subseq	r5, r0, r0, lsl #6
     8d0:	00540000 	subseq	r0, r4, r0
     8d4:	000a0000 	andeq	r0, sl, r0
     8d8:	24400078 	strbcs	r0, [r0], #-120	; 0xffffff88
     8dc:	25400074 	strbcs	r0, [r0, #-116]	; 0xffffff8c
     8e0:	00549f21 	subseq	r9, r4, r1, lsr #30
     8e4:	006e0000 	rsbeq	r0, lr, r0
     8e8:	00010000 	andeq	r0, r1, r0
     8ec:	00021e53 	andeq	r1, r2, r3, asr lr
     8f0:	00022200 	andeq	r2, r2, r0, lsl #4
     8f4:	53000100 	movwpl	r0, #256	; 0x100
	...
     900:	00010001 	andeq	r0, r1, r1
     904:	00000000 	andeq	r0, r0, r0
     908:	00000064 	andeq	r0, r0, r4, rrx
     90c:	0000006e 	andeq	r0, r0, lr, rrx
     910:	00730006 	rsbseq	r0, r3, r6
     914:	9f1d007e 	svcls	0x001d007e
     918:	00000076 	andeq	r0, r0, r6, ror r0
     91c:	0000007c 	andeq	r0, r0, ip, ror r0
     920:	80540001 	subshi	r0, r4, r1
     924:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     928:	01000000 	mrseq	r0, (UNDEF: 0)
     92c:	021a5400 	andseq	r5, sl, #0, 8
     930:	021e0000 	andseq	r0, lr, #0
     934:	00010000 	andeq	r0, r1, r0
     938:	00000054 	andeq	r0, r0, r4, asr r0
	...
     948:	00004a00 	andeq	r4, r0, r0, lsl #20
     94c:	00007600 	andeq	r7, r0, r0, lsl #12
     950:	51000100 	mrspl	r0, (UNDEF: 16)
     954:	00000076 	andeq	r0, r0, r6, ror r0
     958:	00000098 	muleq	r0, r8, r0
     95c:	1a5c0001 	bne	1700968 <_Min_Stack_Size+0x1700568>
     960:	1e000002 	cdpne	0, 0, cr0, cr0, cr2, {0}
     964:	01000002 	tsteq	r0, r2
     968:	021e5c00 	andseq	r5, lr, #0, 24
     96c:	02220000 	eoreq	r0, r2, #0
     970:	00010000 	andeq	r0, r1, r0
     974:	00000051 	andeq	r0, r0, r1, asr r0
     978:	00000000 	andeq	r0, r0, r0
     97c:	00000400 	andeq	r0, r0, r0, lsl #8
     980:	56000000 	strpl	r0, [r0], -r0
     984:	98000002 	stmdals	r0, {r1}
     988:	01000002 	tsteq	r0, r2
     98c:	02aa5e00 	adceq	r5, sl, #0, 28
     990:	02ae0000 	adceq	r0, lr, #0
     994:	00010000 	andeq	r0, r1, r0
     998:	0002b25e 	andeq	fp, r2, lr, asr r2
     99c:	0002b600 	andeq	fp, r2, r0, lsl #12
     9a0:	5e000100 	adfpls	f0, f0, f0
	...
     9ac:	00000005 	andeq	r0, r0, r5
     9b0:	02560000 	subseq	r0, r6, #0
     9b4:	02980000 	addseq	r0, r8, #0
     9b8:	00010000 	andeq	r0, r1, r0
     9bc:	0002aa58 	andeq	sl, r2, r8, asr sl
     9c0:	0002ae00 	andeq	sl, r2, r0, lsl #28
     9c4:	58000100 	stmdapl	r0, {r8}
     9c8:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     9cc:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
     9d0:	00580001 	subseq	r0, r8, r1
     9d4:	00000000 	andeq	r0, r0, r0
     9d8:	07000000 	streq	r0, [r0, -r0]
	...
     9e4:	00025600 	andeq	r5, r2, r0, lsl #12
     9e8:	00025e00 	andeq	r5, r2, r0, lsl #28
     9ec:	57000100 	strpl	r0, [r0, -r0, lsl #2]
     9f0:	0000025e 	andeq	r0, r0, lr, asr r2
     9f4:	00000266 	andeq	r0, r0, r6, ror #4
     9f8:	665c0001 	ldrbvs	r0, [ip], -r1
     9fc:	96000002 	strls	r0, [r0], -r2
     a00:	01000002 	tsteq	r0, r2
     a04:	02aa5700 	adceq	r5, sl, #0, 14
     a08:	02ae0000 	adceq	r0, lr, #0
     a0c:	00010000 	andeq	r0, r1, r0
     a10:	0002b257 	andeq	fp, r2, r7, asr r2
     a14:	0002b600 	andeq	fp, r2, r0, lsl #12
     a18:	5c000100 	stfpls	f0, [r0], {-0}
	...
     a2c:	00000270 	andeq	r0, r0, r0, ror r2
     a30:	00000286 	andeq	r0, r0, r6, lsl #5
     a34:	86500001 	ldrbhi	r0, [r0], -r1
     a38:	8e000002 	cdphi	0, 0, cr0, cr0, cr2, {0}
     a3c:	01000002 	tsteq	r0, r2
     a40:	028e5c00 	addeq	r5, lr, #0, 24
     a44:	02980000 	addseq	r0, r8, #0
     a48:	00010000 	andeq	r0, r1, r0
     a4c:	0002aa50 	andeq	sl, r2, r0, asr sl
     a50:	0002ae00 	andeq	sl, r2, r0, lsl #28
     a54:	5c000100 	stfpls	f0, [r0], {-0}
	...
     a60:	00000009 	andeq	r0, r0, r9
     a64:	00000000 	andeq	r0, r0, r0
     a68:	00000256 	andeq	r0, r0, r6, asr r2
     a6c:	0000025a 	andeq	r0, r0, sl, asr r2
     a70:	5e510001 	cdppl	0, 5, cr0, cr1, cr1, {0}
     a74:	6a000002 	bvs	a84 <_Min_Stack_Size+0x684>
     a78:	01000002 	tsteq	r0, r2
     a7c:	026a5100 	rsbeq	r5, sl, #0, 2
     a80:	02740000 	rsbseq	r0, r4, #0
     a84:	00010000 	andeq	r0, r1, r0
     a88:	0002b253 	andeq	fp, r2, r3, asr r2
     a8c:	0002b600 	andeq	fp, r2, r0, lsl #12
     a90:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     a9c:	00010001 	andeq	r0, r1, r1
     aa0:	00000000 	andeq	r0, r0, r0
     aa4:	0000026a 	andeq	r0, r0, sl, ror #4
     aa8:	00000274 	andeq	r0, r0, r4, ror r2
     aac:	00730006 	rsbseq	r0, r3, r6
     ab0:	9f1d007e 	svcls	0x001d007e
     ab4:	0000027c 	andeq	r0, r0, ip, ror r2
     ab8:	00000282 	andeq	r0, r0, r2, lsl #5
     abc:	86510001 	ldrbhi	r0, [r1], -r1
     ac0:	98000002 	stmdals	r0, {r1}
     ac4:	01000002 	tsteq	r0, r2
     ac8:	02aa5100 	adceq	r5, sl, #0, 2
     acc:	02ae0000 	adceq	r0, lr, #0
     ad0:	00010000 	andeq	r0, r1, r0
     ad4:	00000051 	andeq	r0, r0, r1, asr r0
     ad8:	00000000 	andeq	r0, r0, r0
     adc:	00000800 	andeq	r0, r0, r0, lsl #16
     ae0:	00000000 	andeq	r0, r0, r0
     ae4:	00025600 	andeq	r5, r2, r0, lsl #12
     ae8:	00026a00 	andeq	r6, r2, r0, lsl #20
     aec:	53000100 	movwpl	r0, #256	; 0x100
     af0:	0000027c 	andeq	r0, r0, ip, ror r2
     af4:	00000298 	muleq	r0, r8, r2
     af8:	aa530001 	bge	14c0b04 <_Min_Stack_Size+0x14c0704>
     afc:	ae000002 	cdpge	0, 0, cr0, cr0, cr2, {0}
     b00:	01000002 	tsteq	r0, r2
     b04:	02b25300 	adcseq	r5, r2, #0, 6
     b08:	02b60000 	adcseq	r0, r6, #0
     b0c:	00010000 	andeq	r0, r1, r0
     b10:	00000053 	andeq	r0, r0, r3, asr r0
     b14:	00000000 	andeq	r0, r0, r0
     b18:	00000400 	andeq	r0, r0, r0, lsl #8
     b1c:	0000c200 	andeq	ip, r0, r0, lsl #4
     b20:	00011a00 	andeq	r1, r1, r0, lsl #20
     b24:	75000500 	strvc	r0, [r0, #-1280]	; 0xfffffb00
     b28:	9f254000 	svcls	0x00254000
     b2c:	000002be 			; <UNDEFINED> instruction: 0x000002be
     b30:	000002cc 	andeq	r0, r0, ip, asr #5
     b34:	00750005 	rsbseq	r0, r5, r5
     b38:	009f2540 	addseq	r2, pc, r0, asr #10
     b3c:	00000000 	andeq	r0, r0, r0
     b40:	05000000 	streq	r0, [r0, #-0]
     b44:	c2000000 	andgt	r0, r0, #0
     b48:	1a000000 	bne	b50 <_Min_Stack_Size+0x750>
     b4c:	07000001 	streq	r0, [r0, -r1]
     b50:	0a007500 	beq	1df58 <_Min_Stack_Size+0x1db58>
     b54:	9f1affff 	svcls	0x001affff
     b58:	000002be 			; <UNDEFINED> instruction: 0x000002be
     b5c:	000002cc 	andeq	r0, r0, ip, asr #5
     b60:	00750007 	rsbseq	r0, r5, r7
     b64:	1affff0a 	bne	794 <_Min_Stack_Size+0x394>
     b68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     b78:	c6000000 	strgt	r0, [r0], -r0
     b7c:	de000000 	cdple	0, 0, cr0, cr0, cr0, {0}
     b80:	01000000 	mrseq	r0, (UNDEF: 0)
     b84:	00de5c00 	sbcseq	r5, lr, r0, lsl #24
     b88:	00e80000 	rsceq	r0, r8, r0
     b8c:	00010000 	andeq	r0, r1, r0
     b90:	0000e850 	andeq	lr, r0, r0, asr r8
     b94:	00011a00 	andeq	r1, r1, r0, lsl #20
     b98:	5c000100 	stfpls	f0, [r0], {-0}
     b9c:	000002be 			; <UNDEFINED> instruction: 0x000002be
     ba0:	000002c2 	andeq	r0, r0, r2, asr #5
     ba4:	c2500001 	subsgt	r0, r0, #1
     ba8:	cc000002 	stcgt	0, cr0, [r0], {2}
     bac:	01000002 	tsteq	r0, r2
     bb0:	00005c00 	andeq	r5, r0, r0, lsl #24
	...
     bc4:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     bc8:	00000106 	andeq	r0, r0, r6, lsl #2
     bcc:	06500001 	ldrbeq	r0, [r0], -r1
     bd0:	10000001 	andne	r0, r0, r1
     bd4:	01000001 	tsteq	r0, r1
     bd8:	01105300 	tsteq	r0, r0, lsl #6
     bdc:	01180000 	tsteq	r8, r0
     be0:	00010000 	andeq	r0, r1, r0
     be4:	0002c650 	andeq	ip, r2, r0, asr r6
     be8:	0002c800 	andeq	ip, r2, r0, lsl #16
     bec:	53000100 	movwpl	r0, #256	; 0x100
     bf0:	000002c8 	andeq	r0, r0, r8, asr #5
     bf4:	000002cc 	andeq	r0, r0, ip, asr #5
     bf8:	00500001 	subseq	r0, r0, r1
     bfc:	00000000 	andeq	r0, r0, r0
     c00:	06000000 	streq	r0, [r0], -r0
     c04:	00000100 	andeq	r0, r0, r0, lsl #2
     c08:	00000000 	andeq	r0, r0, r0
     c0c:	c2000000 	andgt	r0, r0, #0
     c10:	cc000000 	stcgt	0, cr0, [r0], {-0}
     c14:	06000000 	streq	r0, [r0], -r0
     c18:	7e007100 	adfvcs	f7, f0, f0
     c1c:	d49f1d00 	ldrle	r1, [pc], #3328	; c24 <_Min_Stack_Size+0x824>
     c20:	da000000 	ble	c28 <_Min_Stack_Size+0x828>
     c24:	01000000 	mrseq	r0, (UNDEF: 0)
     c28:	00de5300 	sbcseq	r5, lr, r0, lsl #6
     c2c:	00ea0000 	rsceq	r0, sl, r0
     c30:	00010000 	andeq	r0, r1, r0
     c34:	0000ea53 	andeq	lr, r0, r3, asr sl
     c38:	00011a00 	andeq	r1, r1, r0, lsl #20
     c3c:	51000100 	mrspl	r0, (UNDEF: 16)
     c40:	000002be 			; <UNDEFINED> instruction: 0x000002be
     c44:	000002c6 	andeq	r0, r0, r6, asr #5
     c48:	c6530001 	ldrbgt	r0, [r3], -r1
     c4c:	cc000002 	stcgt	0, cr0, [r0], {2}
     c50:	01000002 	tsteq	r0, r2
     c54:	00005100 	andeq	r5, r0, r0, lsl #2
     c58:	00000000 	andeq	r0, r0, r0
     c5c:	01010000 	mrseq	r0, (UNDEF: 1)
     c60:	00000001 	andeq	r0, r0, r1
     c64:	00000000 	andeq	r0, r0, r0
     c68:	000000ea 	andeq	r0, r0, sl, ror #1
     c6c:	000000fc 	strdeq	r0, [r0], -ip
     c70:	00710006 	rsbseq	r0, r1, r6
     c74:	9f1d007e 	svcls	0x001d007e
     c78:	000000fc 	strdeq	r0, [r0], -ip
     c7c:	00000102 	andeq	r0, r0, r2, lsl #2
     c80:	02540001 	subseq	r0, r4, #1
     c84:	06000001 	streq	r0, [r0], -r1
     c88:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     c8c:	7e007100 	adfvcs	f7, f0, f0
     c90:	1e007000 	cdpne	0, 0, cr7, cr0, cr0, {0}
     c94:	7324401c 			; <UNDEFINED> instruction: 0x7324401c
     c98:	069f2100 	ldreq	r2, [pc], r0, lsl #2
     c9c:	1a000001 	bne	ca8 <_Min_Stack_Size+0x8a8>
     ca0:	01000001 	tsteq	r0, r1
     ca4:	02c65400 	sbceq	r5, r6, #0, 8
     ca8:	02cc0000 	sbceq	r0, ip, #0
     cac:	00010000 	andeq	r0, r1, r0
     cb0:	00000054 	andeq	r0, r0, r4, asr r0
	...
     cc0:	0000d400 	andeq	sp, r0, r0, lsl #8
     cc4:	0000ea00 	andeq	lr, r0, r0, lsl #20
     cc8:	51000100 	mrspl	r0, (UNDEF: 16)
     ccc:	000000fc 	strdeq	r0, [r0], -ip
     cd0:	0000011a 	andeq	r0, r0, sl, lsl r1
     cd4:	be580001 	cdplt	0, 5, cr0, cr8, cr1, {0}
     cd8:	c6000002 	strgt	r0, [r0], -r2
     cdc:	01000002 	tsteq	r0, r2
     ce0:	02c65100 	sbceq	r5, r6, #0, 2
     ce4:	02cc0000 	sbceq	r0, ip, #0
     ce8:	00010000 	andeq	r0, r1, r0
     cec:	00000058 	andeq	r0, r0, r8, asr r0
	...
     cfc:	0001f000 	andeq	pc, r1, r0
     d00:	00020800 	andeq	r0, r2, r0, lsl #16
     d04:	53000100 	movwpl	r0, #256	; 0x100
     d08:	00000298 	muleq	r0, r8, r2
     d0c:	000002a8 	andeq	r0, r0, r8, lsr #5
     d10:	a8530001 	ldmdage	r3, {r0}^
     d14:	aa000002 	bge	d24 <_Min_Stack_Size+0x924>
     d18:	01000002 	tsteq	r0, r2
     d1c:	02cc5200 	sbceq	r5, ip, #0, 4
     d20:	02d00000 	sbcseq	r0, r0, #0
     d24:	00010000 	andeq	r0, r1, r0
     d28:	00000053 	andeq	r0, r0, r3, asr r0
	...
     d38:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
     d3c:	f4000001 	vst4.8	{d0-d3}, [r0], r1
     d40:	01000001 	tsteq	r0, r1
     d44:	01f45800 	mvnseq	r5, r0, lsl #16
     d48:	02140000 	andseq	r0, r4, #0
     d4c:	00010000 	andeq	r0, r1, r0
     d50:	0002985e 	andeq	r9, r2, lr, asr r8
     d54:	0002a800 	andeq	sl, r2, r0, lsl #16
     d58:	58000100 	stmdapl	r0, {r8}
     d5c:	000002a8 	andeq	r0, r0, r8, lsr #5
     d60:	000002aa 	andeq	r0, r0, sl, lsr #5
     d64:	cc5e0001 	mrrcgt	0, 0, r0, lr, cr1
     d68:	d0000002 	andle	r0, r0, r2
     d6c:	01000002 	tsteq	r0, r2
     d70:	00005e00 	andeq	r5, r0, r0, lsl #28
     d74:	00000000 	andeq	r0, r0, r0
     d78:	00040000 	andeq	r0, r4, r0
	...
     d84:	01980000 	orrseq	r0, r8, r0
     d88:	01ee0000 	mvneq	r0, r0
     d8c:	00010000 	andeq	r0, r1, r0
     d90:	0001ee5e 	andeq	lr, r1, lr, asr lr
     d94:	00021400 	andeq	r1, r2, r0, lsl #8
     d98:	7c000500 	cfstr32vc	mvfx0, [r0], {-0}
     d9c:	9f254000 	svcls	0x00254000
     da0:	00000298 	muleq	r0, r8, r2
     da4:	000002aa 	andeq	r0, r0, sl, lsr #5
     da8:	007c0005 	rsbseq	r0, ip, r5
     dac:	ae9f2540 	cdpge	5, 9, cr2, cr15, cr0, {2}
     db0:	b2000002 	andlt	r0, r0, #2
     db4:	01000002 	tsteq	r0, r2
     db8:	02b65e00 	adcseq	r5, r6, #0, 28
     dbc:	02ba0000 	adcseq	r0, sl, #0
     dc0:	00010000 	andeq	r0, r1, r0
     dc4:	0002cc5e 	andeq	ip, r2, lr, asr ip
     dc8:	0002d000 	andeq	sp, r2, r0
     dcc:	7c000500 	cfstr32vc	mvfx0, [r0], {-0}
     dd0:	9f254000 	svcls	0x00254000
	...
     ddc:	00000005 	andeq	r0, r0, r5
	...
     de8:	00000198 	muleq	r0, r8, r1
     dec:	000001c8 	andeq	r0, r0, r8, asr #3
     df0:	c8580001 	ldmdagt	r8, {r0}^
     df4:	14000001 	strne	r0, [r0], #-1
     df8:	07000002 	streq	r0, [r0, -r2]
     dfc:	0a007c00 	beq	1fe04 <_Min_Stack_Size+0x1fa04>
     e00:	9f1affff 	svcls	0x001affff
     e04:	00000298 	muleq	r0, r8, r2
     e08:	000002aa 	andeq	r0, r0, sl, lsr #5
     e0c:	007c0007 	rsbseq	r0, ip, r7
     e10:	1affff0a 	bne	a40 <_Min_Stack_Size+0x640>
     e14:	0002ae9f 	muleq	r2, pc, lr	; <UNPREDICTABLE>
     e18:	0002b200 	andeq	fp, r2, r0, lsl #4
     e1c:	7c000700 	stcvc	7, cr0, [r0], {-0}
     e20:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
     e24:	02b69f1a 	adcseq	r9, r6, #26, 30	; 0x68
     e28:	02ba0000 	adcseq	r0, sl, #0
     e2c:	00010000 	andeq	r0, r1, r0
     e30:	0002cc58 	andeq	ip, r2, r8, asr ip
     e34:	0002d000 	andeq	sp, r2, r0
     e38:	7c000700 	stcvc	7, cr0, [r0], {-0}
     e3c:	ffff0a00 			; <UNDEFINED> instruction: 0xffff0a00
     e40:	00009f1a 	andeq	r9, r0, sl, lsl pc
     e44:	00000000 	andeq	r0, r0, r0
     e48:	00070000 	andeq	r0, r7, r0
	...
     e5c:	01980000 	orrseq	r0, r8, r0
     e60:	01a20000 			; <UNDEFINED> instruction: 0x01a20000
     e64:	00010000 	andeq	r0, r1, r0
     e68:	0001a259 	andeq	sl, r1, r9, asr r2
     e6c:	0001b000 	andeq	fp, r1, r0
     e70:	50000100 	andpl	r0, r0, r0, lsl #2
     e74:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
     e78:	000001f2 	strdeq	r0, [r0], -r2
     e7c:	f2590001 	vhadd.s16	d16, d9, d1
     e80:	f4000001 	vst4.8	{d0-d3}, [r0], r1
     e84:	01000001 	tsteq	r0, r1
     e88:	01f45300 	mvnseq	r5, r0, lsl #6
     e8c:	02140000 	andseq	r0, r4, #0
     e90:	00010000 	andeq	r0, r1, r0
     e94:	00029859 	andeq	r9, r2, r9, asr r8
     e98:	0002a800 	andeq	sl, r2, r0, lsl #16
     e9c:	53000100 	movwpl	r0, #256	; 0x100
     ea0:	000002a8 	andeq	r0, r0, r8, lsr #5
     ea4:	000002aa 	andeq	r0, r0, sl, lsr #5
     ea8:	ae590001 	cdpge	0, 5, cr0, cr9, cr1, {0}
     eac:	b2000002 	andlt	r0, r0, #2
     eb0:	01000002 	tsteq	r0, r2
     eb4:	02b65900 	adcseq	r5, r6, #0, 18
     eb8:	02ba0000 	adcseq	r0, sl, #0
     ebc:	00010000 	andeq	r0, r1, r0
     ec0:	0002cc50 	andeq	ip, r2, r0, asr ip
     ec4:	0002d000 	andeq	sp, r2, r0
     ec8:	59000100 	stmdbpl	r0, {r8}
	...
     edc:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     ee0:	000001d4 	ldrdeq	r0, [r0], -r4
     ee4:	d4500001 	ldrble	r0, [r0], #-1
     ee8:	dc000001 	stcle	0, cr0, [r0], {1}
     eec:	01000001 	tsteq	r0, r1
     ef0:	01dc5300 	bicseq	r5, ip, r0, lsl #6
     ef4:	01e20000 	mvneq	r0, r0
     ef8:	00010000 	andeq	r0, r1, r0
     efc:	0002ae50 	andeq	sl, r2, r0, asr lr
     f00:	0002b200 	andeq	fp, r2, r0, lsl #4
     f04:	53000100 	movwpl	r0, #256	; 0x100
	...
     f10:	00000009 	andeq	r0, r0, r9
     f14:	01980000 	orrseq	r0, r8, r0
     f18:	019e0000 	orrseq	r0, lr, r0
     f1c:	00010000 	andeq	r0, r1, r0
     f20:	0001a253 	andeq	sl, r1, r3, asr r2
     f24:	0001c000 	andeq	ip, r1, r0
     f28:	53000100 	movwpl	r0, #256	; 0x100
     f2c:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
     f30:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
     f34:	00530001 	subseq	r0, r3, r1
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	01000000 	mrseq	r0, (UNDEF: 0)
     f40:	00000100 	andeq	r0, r0, r0, lsl #2
     f44:	00000000 	andeq	r0, r0, r0
     f48:	b6000000 	strlt	r0, [r0], -r0
     f4c:	c0000001 	andgt	r0, r0, r1
     f50:	06000001 	streq	r0, [r0], -r1
     f54:	7e007300 	cdpvc	3, 0, cr7, cr0, cr0, {0}
     f58:	c89f1d00 	ldmgt	pc, {r8, sl, fp, ip}	; <UNPREDICTABLE>
     f5c:	d0000001 	andle	r0, r0, r1
     f60:	01000001 	tsteq	r0, r1
     f64:	01d45400 	bicseq	r5, r4, r0, lsl #8
     f68:	02000000 	andeq	r0, r0, #0
     f6c:	00010000 	andeq	r0, r1, r0
     f70:	00029854 	andeq	r9, r2, r4, asr r8
     f74:	0002aa00 	andeq	sl, r2, r0, lsl #20
     f78:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
     f7c:	000002ae 	andeq	r0, r0, lr, lsr #5
     f80:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     f84:	cc540001 	mrrcgt	0, 0, r0, r4, cr1
     f88:	d0000002 	andle	r0, r0, r2
     f8c:	01000002 	tsteq	r0, r2
     f90:	00005400 	andeq	r5, r0, r0, lsl #8
     f94:	00000000 	andeq	r0, r0, r0
     f98:	00080000 	andeq	r0, r8, r0
     f9c:	00000000 	andeq	r0, r0, r0
     fa0:	01980000 	orrseq	r0, r8, r0
     fa4:	01c80000 	biceq	r0, r8, r0
     fa8:	00010000 	andeq	r0, r1, r0
     fac:	0001c85a 	andeq	ip, r1, sl, asr r8
     fb0:	0001ea00 	andeq	lr, r1, r0, lsl #20
     fb4:	58000100 	stmdapl	r0, {r8}
     fb8:	000002ae 	andeq	r0, r0, lr, lsr #5
     fbc:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
     fc0:	b6580001 	ldrblt	r0, [r8], -r1
     fc4:	ba000002 	blt	fd4 <_Min_Stack_Size+0xbd4>
     fc8:	01000002 	tsteq	r0, r2
     fcc:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
     fdc:	000001ea 	andeq	r0, r0, sl, ror #3
     fe0:	00000214 	andeq	r0, r0, r4, lsl r2
     fe4:	93580006 	cmpls	r8, #6
     fe8:	04935904 	ldreq	r5, [r3], #2308	; 0x904
     fec:	00000298 	muleq	r0, r8, r2
     ff0:	000002aa 	andeq	r0, r0, sl, lsr #5
     ff4:	93580006 	cmpls	r8, #6
     ff8:	04935904 	ldreq	r5, [r3], #2308	; 0x904
     ffc:	000002cc 	andeq	r0, r0, ip, asr #5
    1000:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1004:	93580006 	cmpls	r8, #6
    1008:	04935904 	ldreq	r5, [r3], #2308	; 0x904
	...
    101c:	00080000 	andeq	r0, r8, r0
    1020:	00010000 	andeq	r0, r1, r0
    1024:	00000850 	andeq	r0, r0, r0, asr r8
    1028:	00000b00 	andeq	r0, r0, r0, lsl #22
    102c:	51000100 	mrspl	r0, (UNDEF: 16)
    1030:	0000000b 	andeq	r0, r0, fp
    1034:	0000000c 	andeq	r0, r0, ip
    1038:	01f30004 	mvnseq	r0, r4
    103c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1048:	00080000 	andeq	r0, r8, r0
    104c:	000a0000 	andeq	r0, sl, r0
    1050:	00050000 	andeq	r0, r5, r0
    1054:	26320074 			; <UNDEFINED> instruction: 0x26320074
    1058:	00000a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    105c:	00001600 	andeq	r1, r0, r0, lsl #12
    1060:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    106c:	00000001 	andeq	r0, r0, r1
    1070:	00000000 	andeq	r0, r0, r0
    1074:	00000008 	andeq	r0, r0, r8
    1078:	0000000a 	andeq	r0, r0, sl
    107c:	00740005 	rsbseq	r0, r4, r5
    1080:	0a9f2632 	beq	fe7ca950 <__StackLimit+0xde7aa950>
    1084:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1088:	01000000 	mrseq	r0, (UNDEF: 0)
    108c:	00185400 	andseq	r5, r8, r0, lsl #8
    1090:	001e0000 	andseq	r0, lr, r0
    1094:	00030000 	andeq	r0, r3, r0
    1098:	1e9f0174 	mrcne	1, 4, r0, cr15, cr4, {3}
    109c:	26000000 	strcs	r0, [r0], -r0
    10a0:	01000000 	mrseq	r0, (UNDEF: 0)
    10a4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    10b8:	00200000 	eoreq	r0, r0, r0
    10bc:	00010000 	andeq	r0, r1, r0
    10c0:	00002050 	andeq	r2, r0, r0, asr r0
    10c4:	00002400 	andeq	r2, r0, r0, lsl #8
    10c8:	f3000400 	vshl.u8	d0, d0, d0
    10cc:	249f5001 	ldrcs	r5, [pc], #1	; 10d4 <_Min_Stack_Size+0xcd4>
    10d0:	60000000 	andvs	r0, r0, r0
    10d4:	01000000 	mrseq	r0, (UNDEF: 0)
    10d8:	00605000 	rsbeq	r5, r0, r0
    10dc:	00680000 	rsbeq	r0, r8, r0
    10e0:	00040000 	andeq	r0, r4, r0
    10e4:	9f5001f3 	svcls	0x005001f3
	...
    1100:	00000014 	andeq	r0, r0, r4, lsl r0
    1104:	14520001 	ldrbne	r0, [r2], #-1
    1108:	24000000 	strcs	r0, [r0], #-0
    110c:	04000000 	streq	r0, [r0], #-0
    1110:	5201f300 	andpl	pc, r1, #0, 6
    1114:	0000249f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    1118:	00003200 	andeq	r3, r0, r0, lsl #4
    111c:	52000100 	andpl	r0, r0, #0, 2
    1120:	00000032 	andeq	r0, r0, r2, lsr r0
    1124:	00000040 	andeq	r0, r0, r0, asr #32
    1128:	88760003 	ldmdahi	r6!, {r0, r1}^
    112c:	00004001 	andeq	r4, r0, r1
    1130:	00005200 	andeq	r5, r0, r0, lsl #4
    1134:	f3000400 	vshl.u8	d0, d0, d0
    1138:	529f5201 	addspl	r5, pc, #268435456	; 0x10000000
    113c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    1140:	01000000 	mrseq	r0, (UNDEF: 0)
    1144:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    115c:	00140000 	andseq	r0, r4, r0
    1160:	00010000 	andeq	r0, r1, r0
    1164:	00001453 	andeq	r1, r0, r3, asr r4
    1168:	00002400 	andeq	r2, r0, r0, lsl #8
    116c:	f3000400 	vshl.u8	d0, d0, d0
    1170:	249f5301 	ldrcs	r5, [pc], #769	; 1178 <_Min_Stack_Size+0xd78>
    1174:	4a000000 	bmi	117c <_Min_Stack_Size+0xd7c>
    1178:	01000000 	mrseq	r0, (UNDEF: 0)
    117c:	004a5300 	subeq	r5, sl, r0, lsl #6
    1180:	00500000 	subseq	r0, r0, r0
    1184:	00030000 	andeq	r0, r3, r0
    1188:	50028876 	andpl	r8, r2, r6, ror r8
    118c:	52000000 	andpl	r0, r0, #0
    1190:	04000000 	streq	r0, [r0], #-0
    1194:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    1198:	0000529f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    119c:	00006800 	andeq	r6, r0, r0, lsl #16
    11a0:	53000100 	movwpl	r0, #256	; 0x100
	...
    11ac:	00240001 	eoreq	r0, r4, r1
    11b0:	00520000 	subseq	r0, r2, r0
    11b4:	00040000 	andeq	r0, r4, r0
    11b8:	9f018874 	svcls	0x00018874
	...
    11c8:	0000000a 	andeq	r0, r0, sl
    11cc:	00000022 	andeq	r0, r0, r2, lsr #32
    11d0:	24540001 	ldrbcs	r0, [r4], #-1
    11d4:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    11d8:	01000000 	mrseq	r0, (UNDEF: 0)
    11dc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    11f0:	00010000 	andeq	r0, r1, r0
    11f4:	00000050 	andeq	r0, r0, r0, asr r0
    11f8:	00000000 	andeq	r0, r0, r0
    11fc:	91000200 	mrsls	r0, R8_usr
    1200:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1214:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1220:	005a0001 	subseq	r0, sl, r1
	...
    1234:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    1240:	00000001 	andeq	r0, r0, r1
    1244:	00000000 	andeq	r0, r0, r0
    1248:	00040000 	andeq	r0, r4, r0
    124c:	9f02c87b 	svcls	0x0002c87b
	...
    1258:	00000001 	andeq	r0, r0, r1
	...
    1264:	88760004 	ldmdahi	r6!, {r2}^
    1268:	00009f01 	andeq	r9, r0, r1, lsl #30
    126c:	00000000 	andeq	r0, r0, r0
    1270:	00040000 	andeq	r0, r4, r0
    1274:	9f018876 	svcls	0x00018876
	...
    128c:	00030000 	andeq	r0, r3, r0
    1290:	009f7f74 	addseq	r7, pc, r4, ror pc	; <UNPREDICTABLE>
    1294:	00000000 	andeq	r0, r0, r0
    1298:	01000000 	mrseq	r0, (UNDEF: 0)
    129c:	00005500 	andeq	r5, r0, r0, lsl #10
    12a0:	00000000 	andeq	r0, r0, r0
    12a4:	00010000 	andeq	r0, r1, r0
    12a8:	00000055 	andeq	r0, r0, r5, asr r0
    12ac:	00000000 	andeq	r0, r0, r0
    12b0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    12bc:	05000000 	streq	r0, [r0, #-0]
    12c0:	00753100 	rsbseq	r3, r5, r0, lsl #2
    12c4:	00009f24 	andeq	r9, r0, r4, lsr #30
    12c8:	00000000 	andeq	r0, r0, r0
    12cc:	00050000 	andeq	r0, r5, r0
    12d0:	24017531 	strcs	r7, [r1], #-1329	; 0xfffffacf
    12d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    12d8:	00000000 	andeq	r0, r0, r0
    12dc:	31000500 	tstcc	r0, r0, lsl #10
    12e0:	9f240075 	svcls	0x00240075
	...
    12f8:	00010000 	andeq	r0, r1, r0
    12fc:	00000052 	andeq	r0, r0, r2, asr r0
    1300:	00000000 	andeq	r0, r0, r0
    1304:	52000100 	andpl	r0, r0, #0, 2
	...
    1310:	00520001 	subseq	r0, r2, r1
	...
    1324:	59000100 	stmdbpl	r0, {r8}
	...
